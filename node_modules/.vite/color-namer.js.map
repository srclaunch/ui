{
  "version": 3,
  "sources": ["../chroma-js/chroma.js", "../es6-weak-map/is-implemented.js", "../es5-ext/function/noop.js", "../es5-ext/object/is-value.js", "../es5-ext/object/set-prototype-of/is-implemented.js", "../es5-ext/object/is-object.js", "../es5-ext/object/valid-value.js", "../es5-ext/object/create.js", "../es5-ext/object/set-prototype-of/shim.js", "../es5-ext/object/set-prototype-of/index.js", "../es5-ext/object/valid-object.js", "../es5-ext/string/random-uniq.js", "../d/node_modules/type/value/is.js", "../d/node_modules/type/object/is.js", "../d/node_modules/type/prototype/is.js", "../d/node_modules/type/function/is.js", "../d/node_modules/type/plain-function/is.js", "../es5-ext/object/assign/is-implemented.js", "../es5-ext/object/keys/is-implemented.js", "../es5-ext/object/keys/shim.js", "../es5-ext/object/keys/index.js", "../es5-ext/object/assign/shim.js", "../es5-ext/object/assign/index.js", "../es5-ext/object/normalize-options.js", "../es5-ext/string/#/contains/is-implemented.js", "../es5-ext/string/#/contains/shim.js", "../es5-ext/string/#/contains/index.js", "../d/index.js", "../es5-ext/function/is-arguments.js", "../es5-ext/string/is-string.js", "../ext/global-this/is-implemented.js", "../ext/global-this/implementation.js", "../ext/global-this/index.js", "../es6-symbol/is-implemented.js", "../es6-symbol/is-symbol.js", "../es6-symbol/validate-symbol.js", "../es6-symbol/lib/private/generate-name.js", "../es6-symbol/lib/private/setup/standard-symbols.js", "../es6-symbol/lib/private/setup/symbol-registry.js", "../es6-symbol/polyfill.js", "../es6-symbol/index.js", "../es5-ext/array/#/clear.js", "../es5-ext/object/valid-callable.js", "../d/node_modules/type/string/coerce.js", "../d/node_modules/type/lib/safe-to-string.js", "../d/node_modules/type/lib/to-short-string.js", "../d/node_modules/type/lib/resolve-exception.js", "../d/node_modules/type/value/ensure.js", "../d/node_modules/type/plain-function/ensure.js", "../es5-ext/array/from/is-implemented.js", "../es5-ext/function/is-function.js", "../es5-ext/math/sign/is-implemented.js", "../es5-ext/math/sign/shim.js", "../es5-ext/math/sign/index.js", "../es5-ext/number/to-integer.js", "../es5-ext/number/to-pos-integer.js", "../es5-ext/array/from/shim.js", "../es5-ext/array/from/index.js", "../es5-ext/object/copy.js", "../es5-ext/object/_iterate.js", "../es5-ext/object/for-each.js", "../es5-ext/object/map.js", "../d/auto-bind.js", "../es6-iterator/index.js", "../es6-iterator/array.js", "../es6-iterator/string.js", "../es6-iterator/is-iterable.js", "../es6-iterator/valid-iterable.js", "../es6-iterator/get.js", "../es6-iterator/for-of.js", "../es6-weak-map/is-native-implemented.js", "../es6-weak-map/polyfill.js", "../es6-weak-map/index.js", "../color-namer/lib/colors/basic.js", "../color-namer/lib/colors/html.js", "../color-namer/lib/colors/ntc.js", "../color-namer/lib/colors/pantone.js", "../color-namer/lib/colors/roygbiv.js", "../color-namer/lib/colors/x11.js", "../color-namer/index.js", "dep:color-namer"],
  "sourcesContent": ["\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.4.1';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 1) {\n      xyz[3] = 1;\n    }\n    return new Color(clip_rgb(xyz));\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'auto';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'auto';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex('rgb');\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        }\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    f.nodata = function(d) {\n      if (d != null) {\n        _nacol = chroma(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n", "\"use strict\";\n\nmodule.exports = function () {\n\tvar weakMap, obj;\n\n\tif (typeof WeakMap !== \"function\") return false;\n\ttry {\n\t\t// WebKit doesn't support arguments and crashes\n\t\tweakMap = new WeakMap([[obj = {}, \"one\"], [{}, \"two\"], [{}, \"three\"]]);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\tif (String(weakMap) !== \"[object WeakMap]\") return false;\n\tif (typeof weakMap.set !== \"function\") return false;\n\tif (weakMap.set({}, 1) !== weakMap) return false;\n\tif (typeof weakMap.delete !== \"function\") return false;\n\tif (typeof weakMap.has !== \"function\") return false;\n\tif (weakMap.get(obj) !== \"one\") return false;\n\n\treturn true;\n};\n", "\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n", "\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n", "\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n", "\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) { return (isValue(value) && map[typeof value]) || false; };\n", "\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n", "// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = { configurable: false, enumerable: false, writable: true, value: undefined };\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n})();\n", "/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject         = require(\"../is-object\")\n  , value            = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty   = Object.defineProperty\n  , nullDesc         = { configurable: true, enumerable: false, writable: true, value: undefined }\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n})(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n);\n\nrequire(\"../create\");\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.setPrototypeOf : require(\"./shim\");\n", "\"use strict\";\n\nvar isObject = require(\"./is-object\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) throw new TypeError(value + \" is not an Object\");\n\treturn value;\n};\n", "\"use strict\";\n\nvar generated = Object.create(null), random = Math.random;\n\nmodule.exports = function () {\n\tvar str;\n\tdo {\n\t\tstr = random().toString(36).slice(2);\n\t} while (generated[str]);\n\treturn str;\n};\n", "\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n", "\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n", "\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n", "\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n", "\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n", "\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n", "\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n", "\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n", "\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, \u2026srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n", "\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, \u2026options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n", "\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n", "\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n", "\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n", "\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call((function () { return arguments; })());\n\nmodule.exports = function (value) { return objToString.call(value) === id; };\n", "\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n", "\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n", "var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n", "\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n", "\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n", "\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n", "\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n", "\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n", "\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n", "// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n", "// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n", "\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n", "\"use strict\";\n\nvar isValue  = require(\"../value/is\")\n  , isObject = require(\"../object/is\");\n\nvar objectToString = Object.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return null;\n\tif (isObject(value)) {\n\t\t// Reject Object.prototype.toString coercion\n\t\tvar valueToString = value.toString;\n\t\tif (typeof valueToString !== \"function\") return null;\n\t\tif (valueToString === objectToString) return null;\n\t\t// Note: It can be object coming from other realm, still as there's no ES3 and CSP compliant\n\t\t// way to resolve its realm's Object.prototype.toString it's left as not addressed edge case\n\t}\n\ttry {\n\t\treturn \"\" + value; // Ensure implicit coercion\n\t} catch (error) {\n\t\treturn null;\n\t}\n};\n", "\"use strict\";\n\nmodule.exports = function (value) {\n\ttry {\n\t\treturn value.toString();\n\t} catch (error) {\n\t\ttry { return String(value); }\n\t\tcatch (error2) { return null; }\n\t}\n};\n", "\"use strict\";\n\nvar safeToString = require(\"./safe-to-string\");\n\nvar reNewLine = /[\\n\\r\\u2028\\u2029]/g;\n\nmodule.exports = function (value) {\n\tvar string = safeToString(value);\n\tif (string === null) return \"<Non-coercible to string value>\";\n\t// Trim if too long\n\tif (string.length > 100) string = string.slice(0, 99) + \"\u2026\";\n\t// Replace eventual new lines\n\tstring = string.replace(reNewLine, function (char) {\n\t\tswitch (char) {\n\t\t\tcase \"\\n\":\n\t\t\t\treturn \"\\\\n\";\n\t\t\tcase \"\\r\":\n\t\t\t\treturn \"\\\\r\";\n\t\t\tcase \"\\u2028\":\n\t\t\t\treturn \"\\\\u2028\";\n\t\t\tcase \"\\u2029\":\n\t\t\t\treturn \"\\\\u2029\";\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unexpected character\");\n\t\t}\n\t});\n\treturn string;\n};\n", "\"use strict\";\n\nvar isValue       = require(\"../value/is\")\n  , isObject      = require(\"../object/is\")\n  , stringCoerce  = require(\"../string/coerce\")\n  , toShortString = require(\"./to-short-string\");\n\nvar resolveMessage = function (message, value) {\n\treturn message.replace(\"%v\", toShortString(value));\n};\n\nmodule.exports = function (value, defaultMessage, inputOptions) {\n\tif (!isObject(inputOptions)) throw new TypeError(resolveMessage(defaultMessage, value));\n\tif (!isValue(value)) {\n\t\tif (\"default\" in inputOptions) return inputOptions[\"default\"];\n\t\tif (inputOptions.isOptional) return null;\n\t}\n\tvar errorMessage = stringCoerce(inputOptions.errorMessage);\n\tif (!isValue(errorMessage)) errorMessage = defaultMessage;\n\tthrow new TypeError(resolveMessage(errorMessage, value));\n};\n", "\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"Cannot use %v\", arguments[1]);\n};\n", "\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"%v is not a plain function\", arguments[1]);\n};\n", "\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && result !== arr && result[1] === \"dwa\");\n};\n", "\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , isFunctionStringTag = RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && isFunctionStringTag(objToString.call(value));\n};\n", "\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn sign(10) === 1 && sign(-20) === -1;\n};\n", "\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || value === 0) return value;\n\treturn value > 0 ? 1 : -1;\n};\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Math.sign : require(\"./shim\");\n", "\"use strict\";\n\nvar sign  = require(\"../math/sign\")\n  , abs   = Math.abs\n  , floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif (value === 0 || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n", "\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n  , max       = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n", "\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity, max-lines-per-function\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array((length = arrayLike.length));\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Array.from : require(\"./shim\");\n", "\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n", "// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb/*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n", "\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n", "\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb/*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n", "\"use strict\";\n\nvar isValue             = require(\"type/value/is\")\n  , ensureValue         = require(\"type/value/ensure\")\n  , ensurePlainFunction = require(\"type/plain-function/ensure\")\n  , copy                = require(\"es5-ext/object/copy\")\n  , normalizeOptions    = require(\"es5-ext/object/normalize-options\")\n  , map                 = require(\"es5-ext/object/map\");\n\nvar bind = Function.prototype.bind\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = ensureValue(desc) && ensurePlainFunction(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (isValue(options.resolveContext)) ensurePlainFunction(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n", "\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n", "\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n", "// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n", "\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n", "\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n", "\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n", "\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n", "// Exports true if environment provides native `WeakMap` implementation, whatever that is.\n\n\"use strict\";\n\nmodule.exports = (function () {\n\tif (typeof WeakMap !== \"function\") return false;\n\treturn Object.prototype.toString.call(new WeakMap()) === \"[object WeakMap]\";\n}());\n", "\"use strict\";\n\nvar isValue           = require(\"es5-ext/object/is-value\")\n  , setPrototypeOf    = require(\"es5-ext/object/set-prototype-of\")\n  , object            = require(\"es5-ext/object/valid-object\")\n  , ensureValue       = require(\"es5-ext/object/valid-value\")\n  , randomUniq        = require(\"es5-ext/string/random-uniq\")\n  , d                 = require(\"d\")\n  , getIterator       = require(\"es6-iterator/get\")\n  , forOf             = require(\"es6-iterator/for-of\")\n  , toStringTagSymbol = require(\"es6-symbol\").toStringTag\n  , isNative          = require(\"./is-native-implemented\")\n\n  , isArray = Array.isArray, defineProperty = Object.defineProperty\n  , objHasOwnProperty = Object.prototype.hasOwnProperty, getPrototypeOf = Object.getPrototypeOf\n  , WeakMapPoly;\n\nmodule.exports = WeakMapPoly = function (/* Iterable*/) {\n\tvar iterable = arguments[0], self;\n\n\tif (!(this instanceof WeakMapPoly)) throw new TypeError(\"Constructor requires 'new'\");\n\tself = isNative && setPrototypeOf && (WeakMap !== WeakMapPoly)\n\t\t? setPrototypeOf(new WeakMap(), getPrototypeOf(this)) : this;\n\n\tif (isValue(iterable)) {\n\t\tif (!isArray(iterable)) iterable = getIterator(iterable);\n\t}\n\tdefineProperty(self, \"__weakMapData__\", d(\"c\", \"$weakMap$\" + randomUniq()));\n\tif (!iterable) return self;\n\tforOf(iterable, function (val) {\n\t\tensureValue(val);\n\t\tself.set(val[0], val[1]);\n\t});\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(WeakMapPoly, WeakMap);\n\tWeakMapPoly.prototype = Object.create(WeakMap.prototype, { constructor: d(WeakMapPoly) });\n}\n\nObject.defineProperties(WeakMapPoly.prototype, {\n\tdelete: d(function (key) {\n\t\tif (objHasOwnProperty.call(object(key), this.__weakMapData__)) {\n\t\t\tdelete key[this.__weakMapData__];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}),\n\tget: d(function (key) {\n\t\tif (!objHasOwnProperty.call(object(key), this.__weakMapData__)) return undefined;\n\t\treturn key[this.__weakMapData__];\n\t}),\n\thas: d(function (key) {\n\t\treturn objHasOwnProperty.call(object(key), this.__weakMapData__);\n\t}),\n\tset: d(function (key, value) {\n\t\tdefineProperty(object(key), this.__weakMapData__, d(\"c\", value));\n\t\treturn this;\n\t}),\n\ttoString: d(function () {\n\t\treturn \"[object WeakMap]\";\n\t})\n});\ndefineProperty(WeakMapPoly.prototype, toStringTagSymbol, d(\"c\", \"WeakMap\"));\n", "\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? WeakMap : require(\"./polyfill\");\n", "module.exports = [\n  { name: 'black', hex: '#000000' },\n  { name: 'blue', hex: '#0000FF' },\n  { name: 'cyan', hex: '#00FFFF' },\n  { name: 'green', hex: '#008000' },\n  { name: 'teal', hex: '#008080' },\n  { name: 'turquoise', hex: '#40E0D0' },\n  { name: 'indigo', hex: '#4B0082' },\n  { name: 'gray', hex: '#808080' },\n  { name: 'purple', hex: '#800080' },\n  { name: 'brown', hex: '#A52A2A' },\n  { name: 'tan', hex: '#D2B48C' },\n  { name: 'violet', hex: '#EE82EE' },\n  { name: 'beige', hex: '#F5F5DC' },\n  { name: 'fuchsia', hex: '#FF00FF' },\n  { name: 'gold', hex: '#FFD700' },\n  { name: 'magenta', hex: '#FF00FF' },\n  { name: 'orange', hex: '#FFA500' },\n  { name: 'pink', hex: '#FFC0CB' },\n  { name: 'red', hex: '#FF0000' },\n  { name: 'white', hex: '#FFFFFF' },\n  { name: 'yellow', hex: '#FFFF00' }\n]\n", "module.exports = [\n  { name: 'aqua', hex: '#00FFFF' },\n  { name: 'aliceblue', hex: '#F0F8FF' },\n  { name: 'antiquewhite', hex: '#FAEBD7' },\n  { name: 'black', hex: '#000000' },\n  { name: 'blue', hex: '#0000FF' },\n  { name: 'cyan', hex: '#00FFFF' },\n  { name: 'darkblue', hex: '#00008B' },\n  { name: 'darkcyan', hex: '#008B8B' },\n  { name: 'darkgreen', hex: '#006400' },\n  { name: 'darkturquoise', hex: '#00CED1' },\n  { name: 'deepskyblue', hex: '#00BFFF' },\n  { name: 'green', hex: '#008000' },\n  { name: 'lime', hex: '#00FF00' },\n  { name: 'mediumblue', hex: '#0000CD' },\n  { name: 'mediumspringgreen', hex: '#00FA9A' },\n  { name: 'navy', hex: '#000080' },\n  { name: 'springgreen', hex: '#00FF7F' },\n  { name: 'teal', hex: '#008080' },\n  { name: 'midnightblue', hex: '#191970' },\n  { name: 'dodgerblue', hex: '#1E90FF' },\n  { name: 'lightseagreen', hex: '#20B2AA' },\n  { name: 'forestgreen', hex: '#228B22' },\n  { name: 'seagreen', hex: '#2E8B57' },\n  { name: 'darkslategray', hex: '#2F4F4F' },\n  { name: 'darkslategrey', hex: '#2F4F4F' },\n  { name: 'limegreen', hex: '#32CD32' },\n  { name: 'mediumseagreen', hex: '#3CB371' },\n  { name: 'turquoise', hex: '#40E0D0' },\n  { name: 'royalblue', hex: '#4169E1' },\n  { name: 'steelblue', hex: '#4682B4' },\n  { name: 'darkslateblue', hex: '#483D8B' },\n  { name: 'mediumturquoise', hex: '#48D1CC' },\n  { name: 'indigo', hex: '#4B0082' },\n  { name: 'darkolivegreen', hex: '#556B2F' },\n  { name: 'cadetblue', hex: '#5F9EA0' },\n  { name: 'cornflowerblue', hex: '#6495ED' },\n  { name: 'mediumaquamarine', hex: '#66CDAA' },\n  { name: 'dimgray', hex: '#696969' },\n  { name: 'dimgrey', hex: '#696969' },\n  { name: 'slateblue', hex: '#6A5ACD' },\n  { name: 'olivedrab', hex: '#6B8E23' },\n  { name: 'slategray', hex: '#708090' },\n  { name: 'slategrey', hex: '#708090' },\n  { name: 'lightslategray', hex: '#778899' },\n  { name: 'lightslategrey', hex: '#778899' },\n  { name: 'mediumslateblue', hex: '#7B68EE' },\n  { name: 'lawngreen', hex: '#7CFC00' },\n  { name: 'aquamarine', hex: '#7FFFD4' },\n  { name: 'chartreuse', hex: '#7FFF00' },\n  { name: 'gray', hex: '#808080' },\n  { name: 'grey', hex: '#808080' },\n  { name: 'maroon', hex: '#800000' },\n  { name: 'olive', hex: '#808000' },\n  { name: 'purple', hex: '#800080' },\n  { name: 'lightskyblue', hex: '#87CEFA' },\n  { name: 'skyblue', hex: '#87CEEB' },\n  { name: 'blueviolet', hex: '#8A2BE2' },\n  { name: 'darkmagenta', hex: '#8B008B' },\n  { name: 'darkred', hex: '#8B0000' },\n  { name: 'saddlebrown', hex: '#8B4513' },\n  { name: 'darkseagreen', hex: '#8FBC8F' },\n  { name: 'lightgreen', hex: '#90EE90' },\n  { name: 'mediumpurple', hex: '#9370DB' },\n  { name: 'darkviolet', hex: '#9400D3' },\n  { name: 'palegreen', hex: '#98FB98' },\n  { name: 'darkorchid', hex: '#9932CC' },\n  { name: 'yellowgreen', hex: '#9ACD32' },\n  { name: 'sienna', hex: '#A0522D' },\n  { name: 'brown', hex: '#A52A2A' },\n  { name: 'darkgray', hex: '#A9A9A9' },\n  { name: 'darkgrey', hex: '#A9A9A9' },\n  { name: 'greenyellow', hex: '#ADFF2F' },\n  { name: 'lightblue', hex: '#ADD8E6' },\n  { name: 'paleturquoise', hex: '#AFEEEE' },\n  { name: 'lightsteelblue', hex: '#B0C4DE' },\n  { name: 'powderblue', hex: '#B0E0E6' },\n  { name: 'firebrick', hex: '#B22222' },\n  { name: 'darkgoldenrod', hex: '#B8860B' },\n  { name: 'mediumorchid', hex: '#BA55D3' },\n  { name: 'rosybrown', hex: '#BC8F8F' },\n  { name: 'darkkhaki', hex: '#BDB76B' },\n  { name: 'silver', hex: '#C0C0C0' },\n  { name: 'mediumvioletred', hex: '#C71585' },\n  { name: 'indianred', hex: '#CD5C5C' },\n  { name: 'peru', hex: '#CD853F' },\n  { name: 'chocolate', hex: '#D2691E' },\n  { name: 'tan', hex: '#D2B48C' },\n  { name: 'lightgray', hex: '#D3D3D3' },\n  { name: 'lightgrey', hex: '#D3D3D3' },\n  { name: 'thistle', hex: '#D8BFD8' },\n  { name: 'goldenrod', hex: '#DAA520' },\n  { name: 'orchid', hex: '#DA70D6' },\n  { name: 'palevioletred', hex: '#DB7093' },\n  { name: 'crimson', hex: '#DC143C' },\n  { name: 'gainsboro', hex: '#DCDCDC' },\n  { name: 'plum', hex: '#DDA0DD' },\n  { name: 'burlywood', hex: '#DEB887' },\n  { name: 'lightcyan', hex: '#E0FFFF' },\n  { name: 'lavender', hex: '#E6E6FA' },\n  { name: 'darksalmon', hex: '#E9967A' },\n  { name: 'palegoldenrod', hex: '#EEE8AA' },\n  { name: 'violet', hex: '#EE82EE' },\n  { name: 'azure', hex: '#F0FFFF' },\n  { name: 'honeydew', hex: '#F0FFF0' },\n  { name: 'khaki', hex: '#F0E68C' },\n  { name: 'lightcoral', hex: '#F08080' },\n  { name: 'sandybrown', hex: '#F4A460' },\n  { name: 'beige', hex: '#F5F5DC' },\n  { name: 'mintcream', hex: '#F5FFFA' },\n  { name: 'wheat', hex: '#F5DEB3' },\n  { name: 'whitesmoke', hex: '#F5F5F5' },\n  { name: 'ghostwhite', hex: '#F8F8FF' },\n  { name: 'lightgoldenrodyellow',\n    hex: '#FAFAD2' },\n  { name: 'linen', hex: '#FAF0E6' },\n  { name: 'salmon', hex: '#FA8072' },\n  { name: 'oldlace', hex: '#FDF5E6' },\n  { name: 'bisque', hex: '#FFE4C4' },\n  { name: 'blanchedalmond', hex: '#FFEBCD' },\n  { name: 'coral', hex: '#FF7F50' },\n  { name: 'cornsilk', hex: '#FFF8DC' },\n  { name: 'darkorange', hex: '#FF8C00' },\n  { name: 'deeppink', hex: '#FF1493' },\n  { name: 'floralwhite', hex: '#FFFAF0' },\n  { name: 'fuchsia', hex: '#FF00FF' },\n  { name: 'gold', hex: '#FFD700' },\n  { name: 'hotpink', hex: '#FF69B4' },\n  { name: 'ivory', hex: '#FFFFF0' },\n  { name: 'lavenderblush', hex: '#FFF0F5' },\n  { name: 'lemonchiffon', hex: '#FFFACD' },\n  { name: 'lightpink', hex: '#FFB6C1' },\n  { name: 'lightsalmon', hex: '#FFA07A' },\n  { name: 'lightyellow', hex: '#FFFFE0' },\n  { name: 'magenta', hex: '#FF00FF' },\n  { name: 'mistyrose', hex: '#FFE4E1' },\n  { name: 'moccasin', hex: '#FFE4B5' },\n  { name: 'navajowhite', hex: '#FFDEAD' },\n  { name: 'orange', hex: '#FFA500' },\n  { name: 'orangered', hex: '#FF4500' },\n  { name: 'papayawhip', hex: '#FFEFD5' },\n  { name: 'peachpuff', hex: '#FFDAB9' },\n  { name: 'pink', hex: '#FFC0CB' },\n  { name: 'red', hex: '#FF0000' },\n  { name: 'seashell', hex: '#FFF5EE' },\n  { name: 'snow', hex: '#FFFAFA' },\n  { name: 'tomato', hex: '#FF6347' },\n  { name: 'white', hex: '#FFFFFF' },\n  { name: 'yellow', hex: '#FFFF00' }\n]\n", "module.exports = [\n  {\n    \"name\": \"Black\",\n    \"hex\": \"000000\"\n  },\n  {\n    \"name\": \"Navy Blue\",\n    \"hex\": \"000080\"\n  },\n  {\n    \"name\": \"Dark Blue\",\n    \"hex\": \"0000C8\"\n  },\n  {\n    \"name\": \"Blue\",\n    \"hex\": \"0000FF\"\n  },\n  {\n    \"name\": \"Stratos\",\n    \"hex\": \"000741\"\n  },\n  {\n    \"name\": \"Swamp\",\n    \"hex\": \"001B1C\"\n  },\n  {\n    \"name\": \"Resolution Blue\",\n    \"hex\": \"002387\"\n  },\n  {\n    \"name\": \"Deep Fir\",\n    \"hex\": \"002900\"\n  },\n  {\n    \"name\": \"Burnham\",\n    \"hex\": \"002E20\"\n  },\n  {\n    \"name\": \"International Klein Blue\",\n    \"hex\": \"002FA7\"\n  },\n  {\n    \"name\": \"Prussian Blue\",\n    \"hex\": \"003153\"\n  },\n  {\n    \"name\": \"Midnight Blue\",\n    \"hex\": \"003366\"\n  },\n  {\n    \"name\": \"Smalt\",\n    \"hex\": \"003399\"\n  },\n  {\n    \"name\": \"Deep Teal\",\n    \"hex\": \"003532\"\n  },\n  {\n    \"name\": \"Cyprus\",\n    \"hex\": \"003E40\"\n  },\n  {\n    \"name\": \"Kaitoke Green\",\n    \"hex\": \"004620\"\n  },\n  {\n    \"name\": \"Cobalt\",\n    \"hex\": \"0047AB\"\n  },\n  {\n    \"name\": \"Crusoe\",\n    \"hex\": \"004816\"\n  },\n  {\n    \"name\": \"Sherpa Blue\",\n    \"hex\": \"004950\"\n  },\n  {\n    \"name\": \"Endeavour\",\n    \"hex\": \"0056A7\"\n  },\n  {\n    \"name\": \"Camarone\",\n    \"hex\": \"00581A\"\n  },\n  {\n    \"name\": \"Science Blue\",\n    \"hex\": \"0066CC\"\n  },\n  {\n    \"name\": \"Blue Ribbon\",\n    \"hex\": \"0066FF\"\n  },\n  {\n    \"name\": \"Tropical Rain Forest\",\n    \"hex\": \"00755E\"\n  },\n  {\n    \"name\": \"Allports\",\n    \"hex\": \"0076A3\"\n  },\n  {\n    \"name\": \"Deep Cerulean\",\n    \"hex\": \"007BA7\"\n  },\n  {\n    \"name\": \"Lochmara\",\n    \"hex\": \"007EC7\"\n  },\n  {\n    \"name\": \"Azure Radiance\",\n    \"hex\": \"007FFF\"\n  },\n  {\n    \"name\": \"Teal\",\n    \"hex\": \"008080\"\n  },\n  {\n    \"name\": \"Bondi Blue\",\n    \"hex\": \"0095B6\"\n  },\n  {\n    \"name\": \"Pacific Blue\",\n    \"hex\": \"009DC4\"\n  },\n  {\n    \"name\": \"Persian Green\",\n    \"hex\": \"00A693\"\n  },\n  {\n    \"name\": \"Jade\",\n    \"hex\": \"00A86B\"\n  },\n  {\n    \"name\": \"Caribbean Green\",\n    \"hex\": \"00CC99\"\n  },\n  {\n    \"name\": \"Robin's Egg Blue\",\n    \"hex\": \"00CCCC\"\n  },\n  {\n    \"name\": \"Green\",\n    \"hex\": \"00FF00\"\n  },\n  {\n    \"name\": \"Spring Green\",\n    \"hex\": \"00FF7F\"\n  },\n  {\n    \"name\": \"Cyan / Aqua\",\n    \"hex\": \"00FFFF\"\n  },\n  {\n    \"name\": \"Blue Charcoal\",\n    \"hex\": \"010D1A\"\n  },\n  {\n    \"name\": \"Midnight\",\n    \"hex\": \"011635\"\n  },\n  {\n    \"name\": \"Holly\",\n    \"hex\": \"011D13\"\n  },\n  {\n    \"name\": \"Daintree\",\n    \"hex\": \"012731\"\n  },\n  {\n    \"name\": \"Cardin Green\",\n    \"hex\": \"01361C\"\n  },\n  {\n    \"name\": \"County Green\",\n    \"hex\": \"01371A\"\n  },\n  {\n    \"name\": \"Astronaut Blue\",\n    \"hex\": \"013E62\"\n  },\n  {\n    \"name\": \"Regal Blue\",\n    \"hex\": \"013F6A\"\n  },\n  {\n    \"name\": \"Aqua Deep\",\n    \"hex\": \"014B43\"\n  },\n  {\n    \"name\": \"Orient\",\n    \"hex\": \"015E85\"\n  },\n  {\n    \"name\": \"Blue Stone\",\n    \"hex\": \"016162\"\n  },\n  {\n    \"name\": \"Fun Green\",\n    \"hex\": \"016D39\"\n  },\n  {\n    \"name\": \"Pine Green\",\n    \"hex\": \"01796F\"\n  },\n  {\n    \"name\": \"Blue Lagoon\",\n    \"hex\": \"017987\"\n  },\n  {\n    \"name\": \"Deep Sea\",\n    \"hex\": \"01826B\"\n  },\n  {\n    \"name\": \"Green Haze\",\n    \"hex\": \"01A368\"\n  },\n  {\n    \"name\": \"English Holly\",\n    \"hex\": \"022D15\"\n  },\n  {\n    \"name\": \"Sherwood Green\",\n    \"hex\": \"02402C\"\n  },\n  {\n    \"name\": \"Congress Blue\",\n    \"hex\": \"02478E\"\n  },\n  {\n    \"name\": \"Evening Sea\",\n    \"hex\": \"024E46\"\n  },\n  {\n    \"name\": \"Bahama Blue\",\n    \"hex\": \"026395\"\n  },\n  {\n    \"name\": \"Observatory\",\n    \"hex\": \"02866F\"\n  },\n  {\n    \"name\": \"Cerulean\",\n    \"hex\": \"02A4D3\"\n  },\n  {\n    \"name\": \"Tangaroa\",\n    \"hex\": \"03163C\"\n  },\n  {\n    \"name\": \"Green Vogue\",\n    \"hex\": \"032B52\"\n  },\n  {\n    \"name\": \"Mosque\",\n    \"hex\": \"036A6E\"\n  },\n  {\n    \"name\": \"Midnight Moss\",\n    \"hex\": \"041004\"\n  },\n  {\n    \"name\": \"Black Pearl\",\n    \"hex\": \"041322\"\n  },\n  {\n    \"name\": \"Blue Whale\",\n    \"hex\": \"042E4C\"\n  },\n  {\n    \"name\": \"Zuccini\",\n    \"hex\": \"044022\"\n  },\n  {\n    \"name\": \"Teal Blue\",\n    \"hex\": \"044259\"\n  },\n  {\n    \"name\": \"Deep Cove\",\n    \"hex\": \"051040\"\n  },\n  {\n    \"name\": \"Gulf Blue\",\n    \"hex\": \"051657\"\n  },\n  {\n    \"name\": \"Venice Blue\",\n    \"hex\": \"055989\"\n  },\n  {\n    \"name\": \"Watercourse\",\n    \"hex\": \"056F57\"\n  },\n  {\n    \"name\": \"Catalina Blue\",\n    \"hex\": \"062A78\"\n  },\n  {\n    \"name\": \"Tiber\",\n    \"hex\": \"063537\"\n  },\n  {\n    \"name\": \"Gossamer\",\n    \"hex\": \"069B81\"\n  },\n  {\n    \"name\": \"Niagara\",\n    \"hex\": \"06A189\"\n  },\n  {\n    \"name\": \"Tarawera\",\n    \"hex\": \"073A50\"\n  },\n  {\n    \"name\": \"Jaguar\",\n    \"hex\": \"080110\"\n  },\n  {\n    \"name\": \"Black Bean\",\n    \"hex\": \"081910\"\n  },\n  {\n    \"name\": \"Deep Sapphire\",\n    \"hex\": \"082567\"\n  },\n  {\n    \"name\": \"Elf Green\",\n    \"hex\": \"088370\"\n  },\n  {\n    \"name\": \"Bright Turquoise\",\n    \"hex\": \"08E8DE\"\n  },\n  {\n    \"name\": \"Downriver\",\n    \"hex\": \"092256\"\n  },\n  {\n    \"name\": \"Palm Green\",\n    \"hex\": \"09230F\"\n  },\n  {\n    \"name\": \"Madison\",\n    \"hex\": \"09255D\"\n  },\n  {\n    \"name\": \"Bottle Green\",\n    \"hex\": \"093624\"\n  },\n  {\n    \"name\": \"Deep Sea Green\",\n    \"hex\": \"095859\"\n  },\n  {\n    \"name\": \"Salem\",\n    \"hex\": \"097F4B\"\n  },\n  {\n    \"name\": \"Black Russian\",\n    \"hex\": \"0A001C\"\n  },\n  {\n    \"name\": \"Dark Fern\",\n    \"hex\": \"0A480D\"\n  },\n  {\n    \"name\": \"Japanese Laurel\",\n    \"hex\": \"0A6906\"\n  },\n  {\n    \"name\": \"Atoll\",\n    \"hex\": \"0A6F75\"\n  },\n  {\n    \"name\": \"Cod Gray\",\n    \"hex\": \"0B0B0B\"\n  },\n  {\n    \"name\": \"Marshland\",\n    \"hex\": \"0B0F08\"\n  },\n  {\n    \"name\": \"Gordons Green\",\n    \"hex\": \"0B1107\"\n  },\n  {\n    \"name\": \"Black Forest\",\n    \"hex\": \"0B1304\"\n  },\n  {\n    \"name\": \"San Felix\",\n    \"hex\": \"0B6207\"\n  },\n  {\n    \"name\": \"Malachite\",\n    \"hex\": \"0BDA51\"\n  },\n  {\n    \"name\": \"Ebony\",\n    \"hex\": \"0C0B1D\"\n  },\n  {\n    \"name\": \"Woodsmoke\",\n    \"hex\": \"0C0D0F\"\n  },\n  {\n    \"name\": \"Racing Green\",\n    \"hex\": \"0C1911\"\n  },\n  {\n    \"name\": \"Surfie Green\",\n    \"hex\": \"0C7A79\"\n  },\n  {\n    \"name\": \"Blue Chill\",\n    \"hex\": \"0C8990\"\n  },\n  {\n    \"name\": \"Black Rock\",\n    \"hex\": \"0D0332\"\n  },\n  {\n    \"name\": \"Bunker\",\n    \"hex\": \"0D1117\"\n  },\n  {\n    \"name\": \"Aztec\",\n    \"hex\": \"0D1C19\"\n  },\n  {\n    \"name\": \"Bush\",\n    \"hex\": \"0D2E1C\"\n  },\n  {\n    \"name\": \"Cinder\",\n    \"hex\": \"0E0E18\"\n  },\n  {\n    \"name\": \"Firefly\",\n    \"hex\": \"0E2A30\"\n  },\n  {\n    \"name\": \"Torea Bay\",\n    \"hex\": \"0F2D9E\"\n  },\n  {\n    \"name\": \"Vulcan\",\n    \"hex\": \"10121D\"\n  },\n  {\n    \"name\": \"Green Waterloo\",\n    \"hex\": \"101405\"\n  },\n  {\n    \"name\": \"Eden\",\n    \"hex\": \"105852\"\n  },\n  {\n    \"name\": \"Arapawa\",\n    \"hex\": \"110C6C\"\n  },\n  {\n    \"name\": \"Ultramarine\",\n    \"hex\": \"120A8F\"\n  },\n  {\n    \"name\": \"Elephant\",\n    \"hex\": \"123447\"\n  },\n  {\n    \"name\": \"Jewel\",\n    \"hex\": \"126B40\"\n  },\n  {\n    \"name\": \"Diesel\",\n    \"hex\": \"130000\"\n  },\n  {\n    \"name\": \"Asphalt\",\n    \"hex\": \"130A06\"\n  },\n  {\n    \"name\": \"Blue Zodiac\",\n    \"hex\": \"13264D\"\n  },\n  {\n    \"name\": \"Parsley\",\n    \"hex\": \"134F19\"\n  },\n  {\n    \"name\": \"Nero\",\n    \"hex\": \"140600\"\n  },\n  {\n    \"name\": \"Tory Blue\",\n    \"hex\": \"1450AA\"\n  },\n  {\n    \"name\": \"Bunting\",\n    \"hex\": \"151F4C\"\n  },\n  {\n    \"name\": \"Denim\",\n    \"hex\": \"1560BD\"\n  },\n  {\n    \"name\": \"Genoa\",\n    \"hex\": \"15736B\"\n  },\n  {\n    \"name\": \"Mirage\",\n    \"hex\": \"161928\"\n  },\n  {\n    \"name\": \"Hunter Green\",\n    \"hex\": \"161D10\"\n  },\n  {\n    \"name\": \"Big Stone\",\n    \"hex\": \"162A40\"\n  },\n  {\n    \"name\": \"Celtic\",\n    \"hex\": \"163222\"\n  },\n  {\n    \"name\": \"Timber Green\",\n    \"hex\": \"16322C\"\n  },\n  {\n    \"name\": \"Gable Green\",\n    \"hex\": \"163531\"\n  },\n  {\n    \"name\": \"Pine Tree\",\n    \"hex\": \"171F04\"\n  },\n  {\n    \"name\": \"Chathams Blue\",\n    \"hex\": \"175579\"\n  },\n  {\n    \"name\": \"Deep Forest Green\",\n    \"hex\": \"182D09\"\n  },\n  {\n    \"name\": \"Blumine\",\n    \"hex\": \"18587A\"\n  },\n  {\n    \"name\": \"Palm Leaf\",\n    \"hex\": \"19330E\"\n  },\n  {\n    \"name\": \"Nile Blue\",\n    \"hex\": \"193751\"\n  },\n  {\n    \"name\": \"Fun Blue\",\n    \"hex\": \"1959A8\"\n  },\n  {\n    \"name\": \"Lucky Point\",\n    \"hex\": \"1A1A68\"\n  },\n  {\n    \"name\": \"Mountain Meadow\",\n    \"hex\": \"1AB385\"\n  },\n  {\n    \"name\": \"Tolopea\",\n    \"hex\": \"1B0245\"\n  },\n  {\n    \"name\": \"Haiti\",\n    \"hex\": \"1B1035\"\n  },\n  {\n    \"name\": \"Deep Koamaru\",\n    \"hex\": \"1B127B\"\n  },\n  {\n    \"name\": \"Acadia\",\n    \"hex\": \"1B1404\"\n  },\n  {\n    \"name\": \"Seaweed\",\n    \"hex\": \"1B2F11\"\n  },\n  {\n    \"name\": \"Biscay\",\n    \"hex\": \"1B3162\"\n  },\n  {\n    \"name\": \"Matisse\",\n    \"hex\": \"1B659D\"\n  },\n  {\n    \"name\": \"Crowshead\",\n    \"hex\": \"1C1208\"\n  },\n  {\n    \"name\": \"Rangoon Green\",\n    \"hex\": \"1C1E13\"\n  },\n  {\n    \"name\": \"Persian Blue\",\n    \"hex\": \"1C39BB\"\n  },\n  {\n    \"name\": \"Everglade\",\n    \"hex\": \"1C402E\"\n  },\n  {\n    \"name\": \"Elm\",\n    \"hex\": \"1C7C7D\"\n  },\n  {\n    \"name\": \"Green Pea\",\n    \"hex\": \"1D6142\"\n  },\n  {\n    \"name\": \"Creole\",\n    \"hex\": \"1E0F04\"\n  },\n  {\n    \"name\": \"Karaka\",\n    \"hex\": \"1E1609\"\n  },\n  {\n    \"name\": \"El Paso\",\n    \"hex\": \"1E1708\"\n  },\n  {\n    \"name\": \"Cello\",\n    \"hex\": \"1E385B\"\n  },\n  {\n    \"name\": \"Te Papa Green\",\n    \"hex\": \"1E433C\"\n  },\n  {\n    \"name\": \"Dodger Blue\",\n    \"hex\": \"1E90FF\"\n  },\n  {\n    \"name\": \"Eastern Blue\",\n    \"hex\": \"1E9AB0\"\n  },\n  {\n    \"name\": \"Night Rider\",\n    \"hex\": \"1F120F\"\n  },\n  {\n    \"name\": \"Java\",\n    \"hex\": \"1FC2C2\"\n  },\n  {\n    \"name\": \"Jacksons Purple\",\n    \"hex\": \"20208D\"\n  },\n  {\n    \"name\": \"Cloud Burst\",\n    \"hex\": \"202E54\"\n  },\n  {\n    \"name\": \"Blue Dianne\",\n    \"hex\": \"204852\"\n  },\n  {\n    \"name\": \"Eternity\",\n    \"hex\": \"211A0E\"\n  },\n  {\n    \"name\": \"Deep Blue\",\n    \"hex\": \"220878\"\n  },\n  {\n    \"name\": \"Forest Green\",\n    \"hex\": \"228B22\"\n  },\n  {\n    \"name\": \"Mallard\",\n    \"hex\": \"233418\"\n  },\n  {\n    \"name\": \"Violet\",\n    \"hex\": \"240A40\"\n  },\n  {\n    \"name\": \"Kilamanjaro\",\n    \"hex\": \"240C02\"\n  },\n  {\n    \"name\": \"Log Cabin\",\n    \"hex\": \"242A1D\"\n  },\n  {\n    \"name\": \"Black Olive\",\n    \"hex\": \"242E16\"\n  },\n  {\n    \"name\": \"Green House\",\n    \"hex\": \"24500F\"\n  },\n  {\n    \"name\": \"Graphite\",\n    \"hex\": \"251607\"\n  },\n  {\n    \"name\": \"Cannon Black\",\n    \"hex\": \"251706\"\n  },\n  {\n    \"name\": \"Port Gore\",\n    \"hex\": \"251F4F\"\n  },\n  {\n    \"name\": \"Shark\",\n    \"hex\": \"25272C\"\n  },\n  {\n    \"name\": \"Green Kelp\",\n    \"hex\": \"25311C\"\n  },\n  {\n    \"name\": \"Curious Blue\",\n    \"hex\": \"2596D1\"\n  },\n  {\n    \"name\": \"Paua\",\n    \"hex\": \"260368\"\n  },\n  {\n    \"name\": \"Paris M\",\n    \"hex\": \"26056A\"\n  },\n  {\n    \"name\": \"Wood Bark\",\n    \"hex\": \"261105\"\n  },\n  {\n    \"name\": \"Gondola\",\n    \"hex\": \"261414\"\n  },\n  {\n    \"name\": \"Steel Gray\",\n    \"hex\": \"262335\"\n  },\n  {\n    \"name\": \"Ebony Clay\",\n    \"hex\": \"26283B\"\n  },\n  {\n    \"name\": \"Bay of Many\",\n    \"hex\": \"273A81\"\n  },\n  {\n    \"name\": \"Plantation\",\n    \"hex\": \"27504B\"\n  },\n  {\n    \"name\": \"Eucalyptus\",\n    \"hex\": \"278A5B\"\n  },\n  {\n    \"name\": \"Oil\",\n    \"hex\": \"281E15\"\n  },\n  {\n    \"name\": \"Astronaut\",\n    \"hex\": \"283A77\"\n  },\n  {\n    \"name\": \"Mariner\",\n    \"hex\": \"286ACD\"\n  },\n  {\n    \"name\": \"Violent Violet\",\n    \"hex\": \"290C5E\"\n  },\n  {\n    \"name\": \"Bastille\",\n    \"hex\": \"292130\"\n  },\n  {\n    \"name\": \"Zeus\",\n    \"hex\": \"292319\"\n  },\n  {\n    \"name\": \"Charade\",\n    \"hex\": \"292937\"\n  },\n  {\n    \"name\": \"Jelly Bean\",\n    \"hex\": \"297B9A\"\n  },\n  {\n    \"name\": \"Jungle Green\",\n    \"hex\": \"29AB87\"\n  },\n  {\n    \"name\": \"Cherry Pie\",\n    \"hex\": \"2A0359\"\n  },\n  {\n    \"name\": \"Coffee Bean\",\n    \"hex\": \"2A140E\"\n  },\n  {\n    \"name\": \"Baltic Sea\",\n    \"hex\": \"2A2630\"\n  },\n  {\n    \"name\": \"Turtle Green\",\n    \"hex\": \"2A380B\"\n  },\n  {\n    \"name\": \"Cerulean Blue\",\n    \"hex\": \"2A52BE\"\n  },\n  {\n    \"name\": \"Sepia Black\",\n    \"hex\": \"2B0202\"\n  },\n  {\n    \"name\": \"Valhalla\",\n    \"hex\": \"2B194F\"\n  },\n  {\n    \"name\": \"Heavy Metal\",\n    \"hex\": \"2B3228\"\n  },\n  {\n    \"name\": \"Blue Gem\",\n    \"hex\": \"2C0E8C\"\n  },\n  {\n    \"name\": \"Revolver\",\n    \"hex\": \"2C1632\"\n  },\n  {\n    \"name\": \"Bleached Cedar\",\n    \"hex\": \"2C2133\"\n  },\n  {\n    \"name\": \"Lochinvar\",\n    \"hex\": \"2C8C84\"\n  },\n  {\n    \"name\": \"Mikado\",\n    \"hex\": \"2D2510\"\n  },\n  {\n    \"name\": \"Outer Space\",\n    \"hex\": \"2D383A\"\n  },\n  {\n    \"name\": \"St Tropaz\",\n    \"hex\": \"2D569B\"\n  },\n  {\n    \"name\": \"Jacaranda\",\n    \"hex\": \"2E0329\"\n  },\n  {\n    \"name\": \"Jacko Bean\",\n    \"hex\": \"2E1905\"\n  },\n  {\n    \"name\": \"Rangitoto\",\n    \"hex\": \"2E3222\"\n  },\n  {\n    \"name\": \"Rhino\",\n    \"hex\": \"2E3F62\"\n  },\n  {\n    \"name\": \"Sea Green\",\n    \"hex\": \"2E8B57\"\n  },\n  {\n    \"name\": \"Scooter\",\n    \"hex\": \"2EBFD4\"\n  },\n  {\n    \"name\": \"Onion\",\n    \"hex\": \"2F270E\"\n  },\n  {\n    \"name\": \"Governor Bay\",\n    \"hex\": \"2F3CB3\"\n  },\n  {\n    \"name\": \"Sapphire\",\n    \"hex\": \"2F519E\"\n  },\n  {\n    \"name\": \"Spectra\",\n    \"hex\": \"2F5A57\"\n  },\n  {\n    \"name\": \"Casal\",\n    \"hex\": \"2F6168\"\n  },\n  {\n    \"name\": \"Melanzane\",\n    \"hex\": \"300529\"\n  },\n  {\n    \"name\": \"Cocoa Brown\",\n    \"hex\": \"301F1E\"\n  },\n  {\n    \"name\": \"Woodrush\",\n    \"hex\": \"302A0F\"\n  },\n  {\n    \"name\": \"San Juan\",\n    \"hex\": \"304B6A\"\n  },\n  {\n    \"name\": \"Turquoise\",\n    \"hex\": \"30D5C8\"\n  },\n  {\n    \"name\": \"Eclipse\",\n    \"hex\": \"311C17\"\n  },\n  {\n    \"name\": \"Pickled Bluewood\",\n    \"hex\": \"314459\"\n  },\n  {\n    \"name\": \"Azure\",\n    \"hex\": \"315BA1\"\n  },\n  {\n    \"name\": \"Calypso\",\n    \"hex\": \"31728D\"\n  },\n  {\n    \"name\": \"Paradiso\",\n    \"hex\": \"317D82\"\n  },\n  {\n    \"name\": \"Persian Indigo\",\n    \"hex\": \"32127A\"\n  },\n  {\n    \"name\": \"Blackcurrant\",\n    \"hex\": \"32293A\"\n  },\n  {\n    \"name\": \"Mine Shaft\",\n    \"hex\": \"323232\"\n  },\n  {\n    \"name\": \"Stromboli\",\n    \"hex\": \"325D52\"\n  },\n  {\n    \"name\": \"Bilbao\",\n    \"hex\": \"327C14\"\n  },\n  {\n    \"name\": \"Astral\",\n    \"hex\": \"327DA0\"\n  },\n  {\n    \"name\": \"Christalle\",\n    \"hex\": \"33036B\"\n  },\n  {\n    \"name\": \"Thunder\",\n    \"hex\": \"33292F\"\n  },\n  {\n    \"name\": \"Shamrock\",\n    \"hex\": \"33CC99\"\n  },\n  {\n    \"name\": \"Tamarind\",\n    \"hex\": \"341515\"\n  },\n  {\n    \"name\": \"Mardi Gras\",\n    \"hex\": \"350036\"\n  },\n  {\n    \"name\": \"Valentino\",\n    \"hex\": \"350E42\"\n  },\n  {\n    \"name\": \"Jagger\",\n    \"hex\": \"350E57\"\n  },\n  {\n    \"name\": \"Tuna\",\n    \"hex\": \"353542\"\n  },\n  {\n    \"name\": \"Chambray\",\n    \"hex\": \"354E8C\"\n  },\n  {\n    \"name\": \"Martinique\",\n    \"hex\": \"363050\"\n  },\n  {\n    \"name\": \"Tuatara\",\n    \"hex\": \"363534\"\n  },\n  {\n    \"name\": \"Waiouru\",\n    \"hex\": \"363C0D\"\n  },\n  {\n    \"name\": \"Ming\",\n    \"hex\": \"36747D\"\n  },\n  {\n    \"name\": \"La Palma\",\n    \"hex\": \"368716\"\n  },\n  {\n    \"name\": \"Chocolate\",\n    \"hex\": \"370202\"\n  },\n  {\n    \"name\": \"Clinker\",\n    \"hex\": \"371D09\"\n  },\n  {\n    \"name\": \"Brown Tumbleweed\",\n    \"hex\": \"37290E\"\n  },\n  {\n    \"name\": \"Birch\",\n    \"hex\": \"373021\"\n  },\n  {\n    \"name\": \"Oracle\",\n    \"hex\": \"377475\"\n  },\n  {\n    \"name\": \"Blue Diamond\",\n    \"hex\": \"380474\"\n  },\n  {\n    \"name\": \"Grape\",\n    \"hex\": \"381A51\"\n  },\n  {\n    \"name\": \"Dune\",\n    \"hex\": \"383533\"\n  },\n  {\n    \"name\": \"Oxford Blue\",\n    \"hex\": \"384555\"\n  },\n  {\n    \"name\": \"Clover\",\n    \"hex\": \"384910\"\n  },\n  {\n    \"name\": \"Limed Spruce\",\n    \"hex\": \"394851\"\n  },\n  {\n    \"name\": \"Dell\",\n    \"hex\": \"396413\"\n  },\n  {\n    \"name\": \"Toledo\",\n    \"hex\": \"3A0020\"\n  },\n  {\n    \"name\": \"Sambuca\",\n    \"hex\": \"3A2010\"\n  },\n  {\n    \"name\": \"Jacarta\",\n    \"hex\": \"3A2A6A\"\n  },\n  {\n    \"name\": \"William\",\n    \"hex\": \"3A686C\"\n  },\n  {\n    \"name\": \"Killarney\",\n    \"hex\": \"3A6A47\"\n  },\n  {\n    \"name\": \"Keppel\",\n    \"hex\": \"3AB09E\"\n  },\n  {\n    \"name\": \"Temptress\",\n    \"hex\": \"3B000B\"\n  },\n  {\n    \"name\": \"Aubergine\",\n    \"hex\": \"3B0910\"\n  },\n  {\n    \"name\": \"Jon\",\n    \"hex\": \"3B1F1F\"\n  },\n  {\n    \"name\": \"Treehouse\",\n    \"hex\": \"3B2820\"\n  },\n  {\n    \"name\": \"Amazon\",\n    \"hex\": \"3B7A57\"\n  },\n  {\n    \"name\": \"Boston Blue\",\n    \"hex\": \"3B91B4\"\n  },\n  {\n    \"name\": \"Windsor\",\n    \"hex\": \"3C0878\"\n  },\n  {\n    \"name\": \"Rebel\",\n    \"hex\": \"3C1206\"\n  },\n  {\n    \"name\": \"Meteorite\",\n    \"hex\": \"3C1F76\"\n  },\n  {\n    \"name\": \"Dark Ebony\",\n    \"hex\": \"3C2005\"\n  },\n  {\n    \"name\": \"Camouflage\",\n    \"hex\": \"3C3910\"\n  },\n  {\n    \"name\": \"Bright Gray\",\n    \"hex\": \"3C4151\"\n  },\n  {\n    \"name\": \"Cape Cod\",\n    \"hex\": \"3C4443\"\n  },\n  {\n    \"name\": \"Lunar Green\",\n    \"hex\": \"3C493A\"\n  },\n  {\n    \"name\": \"Bean  \",\n    \"hex\": \"3D0C02\"\n  },\n  {\n    \"name\": \"Bistre\",\n    \"hex\": \"3D2B1F\"\n  },\n  {\n    \"name\": \"Goblin\",\n    \"hex\": \"3D7D52\"\n  },\n  {\n    \"name\": \"Kingfisher Daisy\",\n    \"hex\": \"3E0480\"\n  },\n  {\n    \"name\": \"Cedar\",\n    \"hex\": \"3E1C14\"\n  },\n  {\n    \"name\": \"English Walnut\",\n    \"hex\": \"3E2B23\"\n  },\n  {\n    \"name\": \"Black Marlin\",\n    \"hex\": \"3E2C1C\"\n  },\n  {\n    \"name\": \"Ship Gray\",\n    \"hex\": \"3E3A44\"\n  },\n  {\n    \"name\": \"Pelorous\",\n    \"hex\": \"3EABBF\"\n  },\n  {\n    \"name\": \"Bronze\",\n    \"hex\": \"3F2109\"\n  },\n  {\n    \"name\": \"Cola\",\n    \"hex\": \"3F2500\"\n  },\n  {\n    \"name\": \"Madras\",\n    \"hex\": \"3F3002\"\n  },\n  {\n    \"name\": \"Minsk\",\n    \"hex\": \"3F307F\"\n  },\n  {\n    \"name\": \"Cabbage Pont\",\n    \"hex\": \"3F4C3A\"\n  },\n  {\n    \"name\": \"Tom Thumb\",\n    \"hex\": \"3F583B\"\n  },\n  {\n    \"name\": \"Mineral Green\",\n    \"hex\": \"3F5D53\"\n  },\n  {\n    \"name\": \"Puerto Rico\",\n    \"hex\": \"3FC1AA\"\n  },\n  {\n    \"name\": \"Harlequin\",\n    \"hex\": \"3FFF00\"\n  },\n  {\n    \"name\": \"Brown Pod\",\n    \"hex\": \"401801\"\n  },\n  {\n    \"name\": \"Cork\",\n    \"hex\": \"40291D\"\n  },\n  {\n    \"name\": \"Masala\",\n    \"hex\": \"403B38\"\n  },\n  {\n    \"name\": \"Thatch Green\",\n    \"hex\": \"403D19\"\n  },\n  {\n    \"name\": \"Fiord\",\n    \"hex\": \"405169\"\n  },\n  {\n    \"name\": \"Viridian\",\n    \"hex\": \"40826D\"\n  },\n  {\n    \"name\": \"Chateau Green\",\n    \"hex\": \"40A860\"\n  },\n  {\n    \"name\": \"Ripe Plum\",\n    \"hex\": \"410056\"\n  },\n  {\n    \"name\": \"Paco\",\n    \"hex\": \"411F10\"\n  },\n  {\n    \"name\": \"Deep Oak\",\n    \"hex\": \"412010\"\n  },\n  {\n    \"name\": \"Merlin\",\n    \"hex\": \"413C37\"\n  },\n  {\n    \"name\": \"Gun Powder\",\n    \"hex\": \"414257\"\n  },\n  {\n    \"name\": \"East Bay\",\n    \"hex\": \"414C7D\"\n  },\n  {\n    \"name\": \"Royal Blue\",\n    \"hex\": \"4169E1\"\n  },\n  {\n    \"name\": \"Ocean Green\",\n    \"hex\": \"41AA78\"\n  },\n  {\n    \"name\": \"Burnt Maroon\",\n    \"hex\": \"420303\"\n  },\n  {\n    \"name\": \"Lisbon Brown\",\n    \"hex\": \"423921\"\n  },\n  {\n    \"name\": \"Faded Jade\",\n    \"hex\": \"427977\"\n  },\n  {\n    \"name\": \"Scarlet Gum\",\n    \"hex\": \"431560\"\n  },\n  {\n    \"name\": \"Iroko\",\n    \"hex\": \"433120\"\n  },\n  {\n    \"name\": \"Armadillo\",\n    \"hex\": \"433E37\"\n  },\n  {\n    \"name\": \"River Bed\",\n    \"hex\": \"434C59\"\n  },\n  {\n    \"name\": \"Green Leaf\",\n    \"hex\": \"436A0D\"\n  },\n  {\n    \"name\": \"Barossa\",\n    \"hex\": \"44012D\"\n  },\n  {\n    \"name\": \"Morocco Brown\",\n    \"hex\": \"441D00\"\n  },\n  {\n    \"name\": \"Mako\",\n    \"hex\": \"444954\"\n  },\n  {\n    \"name\": \"Kelp\",\n    \"hex\": \"454936\"\n  },\n  {\n    \"name\": \"San Marino\",\n    \"hex\": \"456CAC\"\n  },\n  {\n    \"name\": \"Picton Blue\",\n    \"hex\": \"45B1E8\"\n  },\n  {\n    \"name\": \"Loulou\",\n    \"hex\": \"460B41\"\n  },\n  {\n    \"name\": \"Crater Brown\",\n    \"hex\": \"462425\"\n  },\n  {\n    \"name\": \"Gray Asparagus\",\n    \"hex\": \"465945\"\n  },\n  {\n    \"name\": \"Steel Blue\",\n    \"hex\": \"4682B4\"\n  },\n  {\n    \"name\": \"Rustic Red\",\n    \"hex\": \"480404\"\n  },\n  {\n    \"name\": \"Bulgarian Rose\",\n    \"hex\": \"480607\"\n  },\n  {\n    \"name\": \"Clairvoyant\",\n    \"hex\": \"480656\"\n  },\n  {\n    \"name\": \"Cocoa Bean\",\n    \"hex\": \"481C1C\"\n  },\n  {\n    \"name\": \"Woody Brown\",\n    \"hex\": \"483131\"\n  },\n  {\n    \"name\": \"Taupe\",\n    \"hex\": \"483C32\"\n  },\n  {\n    \"name\": \"Van Cleef\",\n    \"hex\": \"49170C\"\n  },\n  {\n    \"name\": \"Brown Derby\",\n    \"hex\": \"492615\"\n  },\n  {\n    \"name\": \"Metallic Bronze\",\n    \"hex\": \"49371B\"\n  },\n  {\n    \"name\": \"Verdun Green\",\n    \"hex\": \"495400\"\n  },\n  {\n    \"name\": \"Blue Bayoux\",\n    \"hex\": \"496679\"\n  },\n  {\n    \"name\": \"Bismark\",\n    \"hex\": \"497183\"\n  },\n  {\n    \"name\": \"Bracken\",\n    \"hex\": \"4A2A04\"\n  },\n  {\n    \"name\": \"Deep Bronze\",\n    \"hex\": \"4A3004\"\n  },\n  {\n    \"name\": \"Mondo\",\n    \"hex\": \"4A3C30\"\n  },\n  {\n    \"name\": \"Tundora\",\n    \"hex\": \"4A4244\"\n  },\n  {\n    \"name\": \"Gravel\",\n    \"hex\": \"4A444B\"\n  },\n  {\n    \"name\": \"Trout\",\n    \"hex\": \"4A4E5A\"\n  },\n  {\n    \"name\": \"Pigment Indigo\",\n    \"hex\": \"4B0082\"\n  },\n  {\n    \"name\": \"Nandor\",\n    \"hex\": \"4B5D52\"\n  },\n  {\n    \"name\": \"Saddle\",\n    \"hex\": \"4C3024\"\n  },\n  {\n    \"name\": \"Abbey\",\n    \"hex\": \"4C4F56\"\n  },\n  {\n    \"name\": \"Blackberry\",\n    \"hex\": \"4D0135\"\n  },\n  {\n    \"name\": \"Cab Sav\",\n    \"hex\": \"4D0A18\"\n  },\n  {\n    \"name\": \"Indian Tan\",\n    \"hex\": \"4D1E01\"\n  },\n  {\n    \"name\": \"Cowboy\",\n    \"hex\": \"4D282D\"\n  },\n  {\n    \"name\": \"Livid Brown\",\n    \"hex\": \"4D282E\"\n  },\n  {\n    \"name\": \"Rock\",\n    \"hex\": \"4D3833\"\n  },\n  {\n    \"name\": \"Punga\",\n    \"hex\": \"4D3D14\"\n  },\n  {\n    \"name\": \"Bronzetone\",\n    \"hex\": \"4D400F\"\n  },\n  {\n    \"name\": \"Woodland\",\n    \"hex\": \"4D5328\"\n  },\n  {\n    \"name\": \"Mahogany\",\n    \"hex\": \"4E0606\"\n  },\n  {\n    \"name\": \"Bossanova\",\n    \"hex\": \"4E2A5A\"\n  },\n  {\n    \"name\": \"Matterhorn\",\n    \"hex\": \"4E3B41\"\n  },\n  {\n    \"name\": \"Bronze Olive\",\n    \"hex\": \"4E420C\"\n  },\n  {\n    \"name\": \"Mulled Wine\",\n    \"hex\": \"4E4562\"\n  },\n  {\n    \"name\": \"Axolotl\",\n    \"hex\": \"4E6649\"\n  },\n  {\n    \"name\": \"Wedgewood\",\n    \"hex\": \"4E7F9E\"\n  },\n  {\n    \"name\": \"Shakespeare\",\n    \"hex\": \"4EABD1\"\n  },\n  {\n    \"name\": \"Honey Flower\",\n    \"hex\": \"4F1C70\"\n  },\n  {\n    \"name\": \"Daisy Bush\",\n    \"hex\": \"4F2398\"\n  },\n  {\n    \"name\": \"Indigo\",\n    \"hex\": \"4F69C6\"\n  },\n  {\n    \"name\": \"Fern Green\",\n    \"hex\": \"4F7942\"\n  },\n  {\n    \"name\": \"Fruit Salad\",\n    \"hex\": \"4F9D5D\"\n  },\n  {\n    \"name\": \"Apple\",\n    \"hex\": \"4FA83D\"\n  },\n  {\n    \"name\": \"Mortar\",\n    \"hex\": \"504351\"\n  },\n  {\n    \"name\": \"Kashmir Blue\",\n    \"hex\": \"507096\"\n  },\n  {\n    \"name\": \"Cutty Sark\",\n    \"hex\": \"507672\"\n  },\n  {\n    \"name\": \"Emerald\",\n    \"hex\": \"50C878\"\n  },\n  {\n    \"name\": \"Emperor\",\n    \"hex\": \"514649\"\n  },\n  {\n    \"name\": \"Chalet Green\",\n    \"hex\": \"516E3D\"\n  },\n  {\n    \"name\": \"Como\",\n    \"hex\": \"517C66\"\n  },\n  {\n    \"name\": \"Smalt Blue\",\n    \"hex\": \"51808F\"\n  },\n  {\n    \"name\": \"Castro\",\n    \"hex\": \"52001F\"\n  },\n  {\n    \"name\": \"Maroon Oak\",\n    \"hex\": \"520C17\"\n  },\n  {\n    \"name\": \"Gigas\",\n    \"hex\": \"523C94\"\n  },\n  {\n    \"name\": \"Voodoo\",\n    \"hex\": \"533455\"\n  },\n  {\n    \"name\": \"Victoria\",\n    \"hex\": \"534491\"\n  },\n  {\n    \"name\": \"Hippie Green\",\n    \"hex\": \"53824B\"\n  },\n  {\n    \"name\": \"Heath\",\n    \"hex\": \"541012\"\n  },\n  {\n    \"name\": \"Judge Gray\",\n    \"hex\": \"544333\"\n  },\n  {\n    \"name\": \"Fuscous Gray\",\n    \"hex\": \"54534D\"\n  },\n  {\n    \"name\": \"Vida Loca\",\n    \"hex\": \"549019\"\n  },\n  {\n    \"name\": \"Cioccolato\",\n    \"hex\": \"55280C\"\n  },\n  {\n    \"name\": \"Saratoga\",\n    \"hex\": \"555B10\"\n  },\n  {\n    \"name\": \"Finlandia\",\n    \"hex\": \"556D56\"\n  },\n  {\n    \"name\": \"Havelock Blue\",\n    \"hex\": \"5590D9\"\n  },\n  {\n    \"name\": \"Fountain Blue\",\n    \"hex\": \"56B4BE\"\n  },\n  {\n    \"name\": \"Spring Leaves\",\n    \"hex\": \"578363\"\n  },\n  {\n    \"name\": \"Saddle Brown\",\n    \"hex\": \"583401\"\n  },\n  {\n    \"name\": \"Scarpa Flow\",\n    \"hex\": \"585562\"\n  },\n  {\n    \"name\": \"Cactus\",\n    \"hex\": \"587156\"\n  },\n  {\n    \"name\": \"Hippie Blue\",\n    \"hex\": \"589AAF\"\n  },\n  {\n    \"name\": \"Wine Berry\",\n    \"hex\": \"591D35\"\n  },\n  {\n    \"name\": \"Brown Bramble\",\n    \"hex\": \"592804\"\n  },\n  {\n    \"name\": \"Congo Brown\",\n    \"hex\": \"593737\"\n  },\n  {\n    \"name\": \"Millbrook\",\n    \"hex\": \"594433\"\n  },\n  {\n    \"name\": \"Waikawa Gray\",\n    \"hex\": \"5A6E9C\"\n  },\n  {\n    \"name\": \"Horizon\",\n    \"hex\": \"5A87A0\"\n  },\n  {\n    \"name\": \"Jambalaya\",\n    \"hex\": \"5B3013\"\n  },\n  {\n    \"name\": \"Bordeaux\",\n    \"hex\": \"5C0120\"\n  },\n  {\n    \"name\": \"Mulberry Wood\",\n    \"hex\": \"5C0536\"\n  },\n  {\n    \"name\": \"Carnaby Tan\",\n    \"hex\": \"5C2E01\"\n  },\n  {\n    \"name\": \"Comet\",\n    \"hex\": \"5C5D75\"\n  },\n  {\n    \"name\": \"Redwood\",\n    \"hex\": \"5D1E0F\"\n  },\n  {\n    \"name\": \"Don Juan\",\n    \"hex\": \"5D4C51\"\n  },\n  {\n    \"name\": \"Chicago\",\n    \"hex\": \"5D5C58\"\n  },\n  {\n    \"name\": \"Verdigris\",\n    \"hex\": \"5D5E37\"\n  },\n  {\n    \"name\": \"Dingley\",\n    \"hex\": \"5D7747\"\n  },\n  {\n    \"name\": \"Breaker Bay\",\n    \"hex\": \"5DA19F\"\n  },\n  {\n    \"name\": \"Kabul\",\n    \"hex\": \"5E483E\"\n  },\n  {\n    \"name\": \"Hemlock\",\n    \"hex\": \"5E5D3B\"\n  },\n  {\n    \"name\": \"Irish Coffee\",\n    \"hex\": \"5F3D26\"\n  },\n  {\n    \"name\": \"Mid Gray\",\n    \"hex\": \"5F5F6E\"\n  },\n  {\n    \"name\": \"Shuttle Gray\",\n    \"hex\": \"5F6672\"\n  },\n  {\n    \"name\": \"Aqua Forest\",\n    \"hex\": \"5FA777\"\n  },\n  {\n    \"name\": \"Tradewind\",\n    \"hex\": \"5FB3AC\"\n  },\n  {\n    \"name\": \"Horses Neck\",\n    \"hex\": \"604913\"\n  },\n  {\n    \"name\": \"Smoky\",\n    \"hex\": \"605B73\"\n  },\n  {\n    \"name\": \"Corduroy\",\n    \"hex\": \"606E68\"\n  },\n  {\n    \"name\": \"Danube\",\n    \"hex\": \"6093D1\"\n  },\n  {\n    \"name\": \"Espresso\",\n    \"hex\": \"612718\"\n  },\n  {\n    \"name\": \"Eggplant\",\n    \"hex\": \"614051\"\n  },\n  {\n    \"name\": \"Costa Del Sol\",\n    \"hex\": \"615D30\"\n  },\n  {\n    \"name\": \"Glade Green\",\n    \"hex\": \"61845F\"\n  },\n  {\n    \"name\": \"Buccaneer\",\n    \"hex\": \"622F30\"\n  },\n  {\n    \"name\": \"Quincy\",\n    \"hex\": \"623F2D\"\n  },\n  {\n    \"name\": \"Butterfly Bush\",\n    \"hex\": \"624E9A\"\n  },\n  {\n    \"name\": \"West Coast\",\n    \"hex\": \"625119\"\n  },\n  {\n    \"name\": \"Finch\",\n    \"hex\": \"626649\"\n  },\n  {\n    \"name\": \"Patina\",\n    \"hex\": \"639A8F\"\n  },\n  {\n    \"name\": \"Fern\",\n    \"hex\": \"63B76C\"\n  },\n  {\n    \"name\": \"Blue Violet\",\n    \"hex\": \"6456B7\"\n  },\n  {\n    \"name\": \"Dolphin\",\n    \"hex\": \"646077\"\n  },\n  {\n    \"name\": \"Storm Dust\",\n    \"hex\": \"646463\"\n  },\n  {\n    \"name\": \"Siam\",\n    \"hex\": \"646A54\"\n  },\n  {\n    \"name\": \"Nevada\",\n    \"hex\": \"646E75\"\n  },\n  {\n    \"name\": \"Cornflower Blue\",\n    \"hex\": \"6495ED\"\n  },\n  {\n    \"name\": \"Viking\",\n    \"hex\": \"64CCDB\"\n  },\n  {\n    \"name\": \"Rosewood\",\n    \"hex\": \"65000B\"\n  },\n  {\n    \"name\": \"Cherrywood\",\n    \"hex\": \"651A14\"\n  },\n  {\n    \"name\": \"Purple Heart\",\n    \"hex\": \"652DC1\"\n  },\n  {\n    \"name\": \"Fern Frond\",\n    \"hex\": \"657220\"\n  },\n  {\n    \"name\": \"Willow Grove\",\n    \"hex\": \"65745D\"\n  },\n  {\n    \"name\": \"Hoki\",\n    \"hex\": \"65869F\"\n  },\n  {\n    \"name\": \"Pompadour\",\n    \"hex\": \"660045\"\n  },\n  {\n    \"name\": \"Purple\",\n    \"hex\": \"660099\"\n  },\n  {\n    \"name\": \"Tyrian Purple\",\n    \"hex\": \"66023C\"\n  },\n  {\n    \"name\": \"Dark Tan\",\n    \"hex\": \"661010\"\n  },\n  {\n    \"name\": \"Silver Tree\",\n    \"hex\": \"66B58F\"\n  },\n  {\n    \"name\": \"Bright Green\",\n    \"hex\": \"66FF00\"\n  },\n  {\n    \"name\": \"Screamin' Green\",\n    \"hex\": \"66FF66\"\n  },\n  {\n    \"name\": \"Black Rose\",\n    \"hex\": \"67032D\"\n  },\n  {\n    \"name\": \"Scampi\",\n    \"hex\": \"675FA6\"\n  },\n  {\n    \"name\": \"Ironside Gray\",\n    \"hex\": \"676662\"\n  },\n  {\n    \"name\": \"Viridian Green\",\n    \"hex\": \"678975\"\n  },\n  {\n    \"name\": \"Christi\",\n    \"hex\": \"67A712\"\n  },\n  {\n    \"name\": \"Nutmeg Wood Finish\",\n    \"hex\": \"683600\"\n  },\n  {\n    \"name\": \"Zambezi\",\n    \"hex\": \"685558\"\n  },\n  {\n    \"name\": \"Salt Box\",\n    \"hex\": \"685E6E\"\n  },\n  {\n    \"name\": \"Tawny Port\",\n    \"hex\": \"692545\"\n  },\n  {\n    \"name\": \"Finn\",\n    \"hex\": \"692D54\"\n  },\n  {\n    \"name\": \"Scorpion\",\n    \"hex\": \"695F62\"\n  },\n  {\n    \"name\": \"Lynch\",\n    \"hex\": \"697E9A\"\n  },\n  {\n    \"name\": \"Spice\",\n    \"hex\": \"6A442E\"\n  },\n  {\n    \"name\": \"Himalaya\",\n    \"hex\": \"6A5D1B\"\n  },\n  {\n    \"name\": \"Soya Bean\",\n    \"hex\": \"6A6051\"\n  },\n  {\n    \"name\": \"Hairy Heath\",\n    \"hex\": \"6B2A14\"\n  },\n  {\n    \"name\": \"Royal Purple\",\n    \"hex\": \"6B3FA0\"\n  },\n  {\n    \"name\": \"Shingle Fawn\",\n    \"hex\": \"6B4E31\"\n  },\n  {\n    \"name\": \"Dorado\",\n    \"hex\": \"6B5755\"\n  },\n  {\n    \"name\": \"Bermuda Gray\",\n    \"hex\": \"6B8BA2\"\n  },\n  {\n    \"name\": \"Olive Drab\",\n    \"hex\": \"6B8E23\"\n  },\n  {\n    \"name\": \"Eminence\",\n    \"hex\": \"6C3082\"\n  },\n  {\n    \"name\": \"Turquoise Blue\",\n    \"hex\": \"6CDAE7\"\n  },\n  {\n    \"name\": \"Lonestar\",\n    \"hex\": \"6D0101\"\n  },\n  {\n    \"name\": \"Pine Cone\",\n    \"hex\": \"6D5E54\"\n  },\n  {\n    \"name\": \"Dove Gray\",\n    \"hex\": \"6D6C6C\"\n  },\n  {\n    \"name\": \"Juniper\",\n    \"hex\": \"6D9292\"\n  },\n  {\n    \"name\": \"Gothic\",\n    \"hex\": \"6D92A1\"\n  },\n  {\n    \"name\": \"Red Oxide\",\n    \"hex\": \"6E0902\"\n  },\n  {\n    \"name\": \"Moccaccino\",\n    \"hex\": \"6E1D14\"\n  },\n  {\n    \"name\": \"Pickled Bean\",\n    \"hex\": \"6E4826\"\n  },\n  {\n    \"name\": \"Dallas\",\n    \"hex\": \"6E4B26\"\n  },\n  {\n    \"name\": \"Kokoda\",\n    \"hex\": \"6E6D57\"\n  },\n  {\n    \"name\": \"Pale Sky\",\n    \"hex\": \"6E7783\"\n  },\n  {\n    \"name\": \"Cafe Royale\",\n    \"hex\": \"6F440C\"\n  },\n  {\n    \"name\": \"Flint\",\n    \"hex\": \"6F6A61\"\n  },\n  {\n    \"name\": \"Highland\",\n    \"hex\": \"6F8E63\"\n  },\n  {\n    \"name\": \"Limeade\",\n    \"hex\": \"6F9D02\"\n  },\n  {\n    \"name\": \"Downy\",\n    \"hex\": \"6FD0C5\"\n  },\n  {\n    \"name\": \"Persian Plum\",\n    \"hex\": \"701C1C\"\n  },\n  {\n    \"name\": \"Sepia\",\n    \"hex\": \"704214\"\n  },\n  {\n    \"name\": \"Antique Bronze\",\n    \"hex\": \"704A07\"\n  },\n  {\n    \"name\": \"Ferra\",\n    \"hex\": \"704F50\"\n  },\n  {\n    \"name\": \"Coffee\",\n    \"hex\": \"706555\"\n  },\n  {\n    \"name\": \"Slate Gray\",\n    \"hex\": \"708090\"\n  },\n  {\n    \"name\": \"Cedar Wood Finish\",\n    \"hex\": \"711A00\"\n  },\n  {\n    \"name\": \"Metallic Copper\",\n    \"hex\": \"71291D\"\n  },\n  {\n    \"name\": \"Affair\",\n    \"hex\": \"714693\"\n  },\n  {\n    \"name\": \"Studio\",\n    \"hex\": \"714AB2\"\n  },\n  {\n    \"name\": \"Tobacco Brown\",\n    \"hex\": \"715D47\"\n  },\n  {\n    \"name\": \"Yellow Metal\",\n    \"hex\": \"716338\"\n  },\n  {\n    \"name\": \"Peat\",\n    \"hex\": \"716B56\"\n  },\n  {\n    \"name\": \"Olivetone\",\n    \"hex\": \"716E10\"\n  },\n  {\n    \"name\": \"Storm Gray\",\n    \"hex\": \"717486\"\n  },\n  {\n    \"name\": \"Sirocco\",\n    \"hex\": \"718080\"\n  },\n  {\n    \"name\": \"Aquamarine Blue\",\n    \"hex\": \"71D9E2\"\n  },\n  {\n    \"name\": \"Venetian Red\",\n    \"hex\": \"72010F\"\n  },\n  {\n    \"name\": \"Old Copper\",\n    \"hex\": \"724A2F\"\n  },\n  {\n    \"name\": \"Go Ben\",\n    \"hex\": \"726D4E\"\n  },\n  {\n    \"name\": \"Raven\",\n    \"hex\": \"727B89\"\n  },\n  {\n    \"name\": \"Seance\",\n    \"hex\": \"731E8F\"\n  },\n  {\n    \"name\": \"Raw Umber\",\n    \"hex\": \"734A12\"\n  },\n  {\n    \"name\": \"Kimberly\",\n    \"hex\": \"736C9F\"\n  },\n  {\n    \"name\": \"Crocodile\",\n    \"hex\": \"736D58\"\n  },\n  {\n    \"name\": \"Crete\",\n    \"hex\": \"737829\"\n  },\n  {\n    \"name\": \"Xanadu\",\n    \"hex\": \"738678\"\n  },\n  {\n    \"name\": \"Spicy Mustard\",\n    \"hex\": \"74640D\"\n  },\n  {\n    \"name\": \"Limed Ash\",\n    \"hex\": \"747D63\"\n  },\n  {\n    \"name\": \"Rolling Stone\",\n    \"hex\": \"747D83\"\n  },\n  {\n    \"name\": \"Blue Smoke\",\n    \"hex\": \"748881\"\n  },\n  {\n    \"name\": \"Laurel\",\n    \"hex\": \"749378\"\n  },\n  {\n    \"name\": \"Mantis\",\n    \"hex\": \"74C365\"\n  },\n  {\n    \"name\": \"Russett\",\n    \"hex\": \"755A57\"\n  },\n  {\n    \"name\": \"Deluge\",\n    \"hex\": \"7563A8\"\n  },\n  {\n    \"name\": \"Cosmic\",\n    \"hex\": \"76395D\"\n  },\n  {\n    \"name\": \"Blue Marguerite\",\n    \"hex\": \"7666C6\"\n  },\n  {\n    \"name\": \"Lima\",\n    \"hex\": \"76BD17\"\n  },\n  {\n    \"name\": \"Sky Blue\",\n    \"hex\": \"76D7EA\"\n  },\n  {\n    \"name\": \"Dark Burgundy\",\n    \"hex\": \"770F05\"\n  },\n  {\n    \"name\": \"Crown of Thorns\",\n    \"hex\": \"771F1F\"\n  },\n  {\n    \"name\": \"Walnut\",\n    \"hex\": \"773F1A\"\n  },\n  {\n    \"name\": \"Pablo\",\n    \"hex\": \"776F61\"\n  },\n  {\n    \"name\": \"Pacifika\",\n    \"hex\": \"778120\"\n  },\n  {\n    \"name\": \"Oxley\",\n    \"hex\": \"779E86\"\n  },\n  {\n    \"name\": \"Pastel Green\",\n    \"hex\": \"77DD77\"\n  },\n  {\n    \"name\": \"Japanese Maple\",\n    \"hex\": \"780109\"\n  },\n  {\n    \"name\": \"Mocha\",\n    \"hex\": \"782D19\"\n  },\n  {\n    \"name\": \"Peanut\",\n    \"hex\": \"782F16\"\n  },\n  {\n    \"name\": \"Camouflage Green\",\n    \"hex\": \"78866B\"\n  },\n  {\n    \"name\": \"Wasabi\",\n    \"hex\": \"788A25\"\n  },\n  {\n    \"name\": \"Ship Cove\",\n    \"hex\": \"788BBA\"\n  },\n  {\n    \"name\": \"Sea Nymph\",\n    \"hex\": \"78A39C\"\n  },\n  {\n    \"name\": \"Roman Coffee\",\n    \"hex\": \"795D4C\"\n  },\n  {\n    \"name\": \"Old Lavender\",\n    \"hex\": \"796878\"\n  },\n  {\n    \"name\": \"Rum\",\n    \"hex\": \"796989\"\n  },\n  {\n    \"name\": \"Fedora\",\n    \"hex\": \"796A78\"\n  },\n  {\n    \"name\": \"Sandstone\",\n    \"hex\": \"796D62\"\n  },\n  {\n    \"name\": \"Spray\",\n    \"hex\": \"79DEEC\"\n  },\n  {\n    \"name\": \"Siren\",\n    \"hex\": \"7A013A\"\n  },\n  {\n    \"name\": \"Fuchsia Blue\",\n    \"hex\": \"7A58C1\"\n  },\n  {\n    \"name\": \"Boulder\",\n    \"hex\": \"7A7A7A\"\n  },\n  {\n    \"name\": \"Wild Blue Yonder\",\n    \"hex\": \"7A89B8\"\n  },\n  {\n    \"name\": \"De York\",\n    \"hex\": \"7AC488\"\n  },\n  {\n    \"name\": \"Red Beech\",\n    \"hex\": \"7B3801\"\n  },\n  {\n    \"name\": \"Cinnamon\",\n    \"hex\": \"7B3F00\"\n  },\n  {\n    \"name\": \"Yukon Gold\",\n    \"hex\": \"7B6608\"\n  },\n  {\n    \"name\": \"Tapa\",\n    \"hex\": \"7B7874\"\n  },\n  {\n    \"name\": \"Waterloo \",\n    \"hex\": \"7B7C94\"\n  },\n  {\n    \"name\": \"Flax Smoke\",\n    \"hex\": \"7B8265\"\n  },\n  {\n    \"name\": \"Amulet\",\n    \"hex\": \"7B9F80\"\n  },\n  {\n    \"name\": \"Asparagus\",\n    \"hex\": \"7BA05B\"\n  },\n  {\n    \"name\": \"Kenyan Copper\",\n    \"hex\": \"7C1C05\"\n  },\n  {\n    \"name\": \"Pesto\",\n    \"hex\": \"7C7631\"\n  },\n  {\n    \"name\": \"Topaz\",\n    \"hex\": \"7C778A\"\n  },\n  {\n    \"name\": \"Concord\",\n    \"hex\": \"7C7B7A\"\n  },\n  {\n    \"name\": \"Jumbo\",\n    \"hex\": \"7C7B82\"\n  },\n  {\n    \"name\": \"Trendy Green\",\n    \"hex\": \"7C881A\"\n  },\n  {\n    \"name\": \"Gumbo\",\n    \"hex\": \"7CA1A6\"\n  },\n  {\n    \"name\": \"Acapulco\",\n    \"hex\": \"7CB0A1\"\n  },\n  {\n    \"name\": \"Neptune\",\n    \"hex\": \"7CB7BB\"\n  },\n  {\n    \"name\": \"Pueblo\",\n    \"hex\": \"7D2C14\"\n  },\n  {\n    \"name\": \"Bay Leaf\",\n    \"hex\": \"7DA98D\"\n  },\n  {\n    \"name\": \"Malibu\",\n    \"hex\": \"7DC8F7\"\n  },\n  {\n    \"name\": \"Bermuda\",\n    \"hex\": \"7DD8C6\"\n  },\n  {\n    \"name\": \"Copper Canyon\",\n    \"hex\": \"7E3A15\"\n  },\n  {\n    \"name\": \"Claret\",\n    \"hex\": \"7F1734\"\n  },\n  {\n    \"name\": \"Peru Tan\",\n    \"hex\": \"7F3A02\"\n  },\n  {\n    \"name\": \"Falcon\",\n    \"hex\": \"7F626D\"\n  },\n  {\n    \"name\": \"Mobster\",\n    \"hex\": \"7F7589\"\n  },\n  {\n    \"name\": \"Moody Blue\",\n    \"hex\": \"7F76D3\"\n  },\n  {\n    \"name\": \"Chartreuse\",\n    \"hex\": \"7FFF00\"\n  },\n  {\n    \"name\": \"Aquamarine\",\n    \"hex\": \"7FFFD4\"\n  },\n  {\n    \"name\": \"Maroon\",\n    \"hex\": \"800000\"\n  },\n  {\n    \"name\": \"Rose Bud Cherry\",\n    \"hex\": \"800B47\"\n  },\n  {\n    \"name\": \"Falu Red\",\n    \"hex\": \"801818\"\n  },\n  {\n    \"name\": \"Red Robin\",\n    \"hex\": \"80341F\"\n  },\n  {\n    \"name\": \"Vivid Violet\",\n    \"hex\": \"803790\"\n  },\n  {\n    \"name\": \"Russet\",\n    \"hex\": \"80461B\"\n  },\n  {\n    \"name\": \"Friar Gray\",\n    \"hex\": \"807E79\"\n  },\n  {\n    \"name\": \"Olive\",\n    \"hex\": \"808000\"\n  },\n  {\n    \"name\": \"Gray\",\n    \"hex\": \"808080\"\n  },\n  {\n    \"name\": \"Gulf Stream\",\n    \"hex\": \"80B3AE\"\n  },\n  {\n    \"name\": \"Glacier\",\n    \"hex\": \"80B3C4\"\n  },\n  {\n    \"name\": \"Seagull\",\n    \"hex\": \"80CCEA\"\n  },\n  {\n    \"name\": \"Nutmeg\",\n    \"hex\": \"81422C\"\n  },\n  {\n    \"name\": \"Spicy Pink\",\n    \"hex\": \"816E71\"\n  },\n  {\n    \"name\": \"Empress\",\n    \"hex\": \"817377\"\n  },\n  {\n    \"name\": \"Spanish Green\",\n    \"hex\": \"819885\"\n  },\n  {\n    \"name\": \"Sand Dune\",\n    \"hex\": \"826F65\"\n  },\n  {\n    \"name\": \"Gunsmoke\",\n    \"hex\": \"828685\"\n  },\n  {\n    \"name\": \"Battleship Gray\",\n    \"hex\": \"828F72\"\n  },\n  {\n    \"name\": \"Merlot\",\n    \"hex\": \"831923\"\n  },\n  {\n    \"name\": \"Shadow\",\n    \"hex\": \"837050\"\n  },\n  {\n    \"name\": \"Chelsea Cucumber\",\n    \"hex\": \"83AA5D\"\n  },\n  {\n    \"name\": \"Monte Carlo\",\n    \"hex\": \"83D0C6\"\n  },\n  {\n    \"name\": \"Plum\",\n    \"hex\": \"843179\"\n  },\n  {\n    \"name\": \"Granny Smith\",\n    \"hex\": \"84A0A0\"\n  },\n  {\n    \"name\": \"Chetwode Blue\",\n    \"hex\": \"8581D9\"\n  },\n  {\n    \"name\": \"Bandicoot\",\n    \"hex\": \"858470\"\n  },\n  {\n    \"name\": \"Bali Hai\",\n    \"hex\": \"859FAF\"\n  },\n  {\n    \"name\": \"Half Baked\",\n    \"hex\": \"85C4CC\"\n  },\n  {\n    \"name\": \"Red Devil\",\n    \"hex\": \"860111\"\n  },\n  {\n    \"name\": \"Lotus\",\n    \"hex\": \"863C3C\"\n  },\n  {\n    \"name\": \"Ironstone\",\n    \"hex\": \"86483C\"\n  },\n  {\n    \"name\": \"Bull Shot\",\n    \"hex\": \"864D1E\"\n  },\n  {\n    \"name\": \"Rusty Nail\",\n    \"hex\": \"86560A\"\n  },\n  {\n    \"name\": \"Bitter\",\n    \"hex\": \"868974\"\n  },\n  {\n    \"name\": \"Regent Gray\",\n    \"hex\": \"86949F\"\n  },\n  {\n    \"name\": \"Disco\",\n    \"hex\": \"871550\"\n  },\n  {\n    \"name\": \"Americano\",\n    \"hex\": \"87756E\"\n  },\n  {\n    \"name\": \"Hurricane\",\n    \"hex\": \"877C7B\"\n  },\n  {\n    \"name\": \"Oslo Gray\",\n    \"hex\": \"878D91\"\n  },\n  {\n    \"name\": \"Sushi\",\n    \"hex\": \"87AB39\"\n  },\n  {\n    \"name\": \"Spicy Mix\",\n    \"hex\": \"885342\"\n  },\n  {\n    \"name\": \"Kumera\",\n    \"hex\": \"886221\"\n  },\n  {\n    \"name\": \"Suva Gray\",\n    \"hex\": \"888387\"\n  },\n  {\n    \"name\": \"Avocado\",\n    \"hex\": \"888D65\"\n  },\n  {\n    \"name\": \"Camelot\",\n    \"hex\": \"893456\"\n  },\n  {\n    \"name\": \"Solid Pink\",\n    \"hex\": \"893843\"\n  },\n  {\n    \"name\": \"Cannon Pink\",\n    \"hex\": \"894367\"\n  },\n  {\n    \"name\": \"Makara\",\n    \"hex\": \"897D6D\"\n  },\n  {\n    \"name\": \"Burnt Umber\",\n    \"hex\": \"8A3324\"\n  },\n  {\n    \"name\": \"True V\",\n    \"hex\": \"8A73D6\"\n  },\n  {\n    \"name\": \"Clay Creek\",\n    \"hex\": \"8A8360\"\n  },\n  {\n    \"name\": \"Monsoon\",\n    \"hex\": \"8A8389\"\n  },\n  {\n    \"name\": \"Stack\",\n    \"hex\": \"8A8F8A\"\n  },\n  {\n    \"name\": \"Jordy Blue\",\n    \"hex\": \"8AB9F1\"\n  },\n  {\n    \"name\": \"Electric Violet\",\n    \"hex\": \"8B00FF\"\n  },\n  {\n    \"name\": \"Monarch\",\n    \"hex\": \"8B0723\"\n  },\n  {\n    \"name\": \"Corn Harvest\",\n    \"hex\": \"8B6B0B\"\n  },\n  {\n    \"name\": \"Olive Haze\",\n    \"hex\": \"8B8470\"\n  },\n  {\n    \"name\": \"Schooner\",\n    \"hex\": \"8B847E\"\n  },\n  {\n    \"name\": \"Natural Gray\",\n    \"hex\": \"8B8680\"\n  },\n  {\n    \"name\": \"Mantle\",\n    \"hex\": \"8B9C90\"\n  },\n  {\n    \"name\": \"Portage\",\n    \"hex\": \"8B9FEE\"\n  },\n  {\n    \"name\": \"Envy\",\n    \"hex\": \"8BA690\"\n  },\n  {\n    \"name\": \"Cascade\",\n    \"hex\": \"8BA9A5\"\n  },\n  {\n    \"name\": \"Riptide\",\n    \"hex\": \"8BE6D8\"\n  },\n  {\n    \"name\": \"Cardinal Pink\",\n    \"hex\": \"8C055E\"\n  },\n  {\n    \"name\": \"Mule Fawn\",\n    \"hex\": \"8C472F\"\n  },\n  {\n    \"name\": \"Potters Clay\",\n    \"hex\": \"8C5738\"\n  },\n  {\n    \"name\": \"Trendy Pink\",\n    \"hex\": \"8C6495\"\n  },\n  {\n    \"name\": \"Paprika\",\n    \"hex\": \"8D0226\"\n  },\n  {\n    \"name\": \"Sanguine Brown\",\n    \"hex\": \"8D3D38\"\n  },\n  {\n    \"name\": \"Tosca\",\n    \"hex\": \"8D3F3F\"\n  },\n  {\n    \"name\": \"Cement\",\n    \"hex\": \"8D7662\"\n  },\n  {\n    \"name\": \"Granite Green\",\n    \"hex\": \"8D8974\"\n  },\n  {\n    \"name\": \"Manatee\",\n    \"hex\": \"8D90A1\"\n  },\n  {\n    \"name\": \"Polo Blue\",\n    \"hex\": \"8DA8CC\"\n  },\n  {\n    \"name\": \"Red Berry\",\n    \"hex\": \"8E0000\"\n  },\n  {\n    \"name\": \"Rope\",\n    \"hex\": \"8E4D1E\"\n  },\n  {\n    \"name\": \"Opium\",\n    \"hex\": \"8E6F70\"\n  },\n  {\n    \"name\": \"Domino\",\n    \"hex\": \"8E775E\"\n  },\n  {\n    \"name\": \"Mamba\",\n    \"hex\": \"8E8190\"\n  },\n  {\n    \"name\": \"Nepal\",\n    \"hex\": \"8EABC1\"\n  },\n  {\n    \"name\": \"Pohutukawa\",\n    \"hex\": \"8F021C\"\n  },\n  {\n    \"name\": \"El Salva\",\n    \"hex\": \"8F3E33\"\n  },\n  {\n    \"name\": \"Korma\",\n    \"hex\": \"8F4B0E\"\n  },\n  {\n    \"name\": \"Squirrel\",\n    \"hex\": \"8F8176\"\n  },\n  {\n    \"name\": \"Vista Blue\",\n    \"hex\": \"8FD6B4\"\n  },\n  {\n    \"name\": \"Burgundy\",\n    \"hex\": \"900020\"\n  },\n  {\n    \"name\": \"Old Brick\",\n    \"hex\": \"901E1E\"\n  },\n  {\n    \"name\": \"Hemp\",\n    \"hex\": \"907874\"\n  },\n  {\n    \"name\": \"Almond Frost\",\n    \"hex\": \"907B71\"\n  },\n  {\n    \"name\": \"Sycamore\",\n    \"hex\": \"908D39\"\n  },\n  {\n    \"name\": \"Sangria\",\n    \"hex\": \"92000A\"\n  },\n  {\n    \"name\": \"Cumin\",\n    \"hex\": \"924321\"\n  },\n  {\n    \"name\": \"Beaver\",\n    \"hex\": \"926F5B\"\n  },\n  {\n    \"name\": \"Stonewall\",\n    \"hex\": \"928573\"\n  },\n  {\n    \"name\": \"Venus\",\n    \"hex\": \"928590\"\n  },\n  {\n    \"name\": \"Medium Purple\",\n    \"hex\": \"9370DB\"\n  },\n  {\n    \"name\": \"Cornflower\",\n    \"hex\": \"93CCEA\"\n  },\n  {\n    \"name\": \"Algae Green\",\n    \"hex\": \"93DFB8\"\n  },\n  {\n    \"name\": \"Copper Rust\",\n    \"hex\": \"944747\"\n  },\n  {\n    \"name\": \"Arrowtown\",\n    \"hex\": \"948771\"\n  },\n  {\n    \"name\": \"Scarlett\",\n    \"hex\": \"950015\"\n  },\n  {\n    \"name\": \"Strikemaster\",\n    \"hex\": \"956387\"\n  },\n  {\n    \"name\": \"Mountain Mist\",\n    \"hex\": \"959396\"\n  },\n  {\n    \"name\": \"Carmine\",\n    \"hex\": \"960018\"\n  },\n  {\n    \"name\": \"Brown\",\n    \"hex\": \"964B00\"\n  },\n  {\n    \"name\": \"Leather\",\n    \"hex\": \"967059\"\n  },\n  {\n    \"name\": \"Purple Mountain's Majesty\",\n    \"hex\": \"9678B6\"\n  },\n  {\n    \"name\": \"Lavender Purple\",\n    \"hex\": \"967BB6\"\n  },\n  {\n    \"name\": \"Pewter\",\n    \"hex\": \"96A8A1\"\n  },\n  {\n    \"name\": \"Summer Green\",\n    \"hex\": \"96BBAB\"\n  },\n  {\n    \"name\": \"Au Chico\",\n    \"hex\": \"97605D\"\n  },\n  {\n    \"name\": \"Wisteria\",\n    \"hex\": \"9771B5\"\n  },\n  {\n    \"name\": \"Atlantis\",\n    \"hex\": \"97CD2D\"\n  },\n  {\n    \"name\": \"Vin Rouge\",\n    \"hex\": \"983D61\"\n  },\n  {\n    \"name\": \"Lilac Bush\",\n    \"hex\": \"9874D3\"\n  },\n  {\n    \"name\": \"Bazaar\",\n    \"hex\": \"98777B\"\n  },\n  {\n    \"name\": \"Hacienda\",\n    \"hex\": \"98811B\"\n  },\n  {\n    \"name\": \"Pale Oyster\",\n    \"hex\": \"988D77\"\n  },\n  {\n    \"name\": \"Mint Green\",\n    \"hex\": \"98FF98\"\n  },\n  {\n    \"name\": \"Fresh Eggplant\",\n    \"hex\": \"990066\"\n  },\n  {\n    \"name\": \"Violet Eggplant\",\n    \"hex\": \"991199\"\n  },\n  {\n    \"name\": \"Tamarillo\",\n    \"hex\": \"991613\"\n  },\n  {\n    \"name\": \"Totem Pole\",\n    \"hex\": \"991B07\"\n  },\n  {\n    \"name\": \"Copper Rose\",\n    \"hex\": \"996666\"\n  },\n  {\n    \"name\": \"Amethyst\",\n    \"hex\": \"9966CC\"\n  },\n  {\n    \"name\": \"Mountbatten Pink\",\n    \"hex\": \"997A8D\"\n  },\n  {\n    \"name\": \"Blue Bell\",\n    \"hex\": \"9999CC\"\n  },\n  {\n    \"name\": \"Prairie Sand\",\n    \"hex\": \"9A3820\"\n  },\n  {\n    \"name\": \"Toast\",\n    \"hex\": \"9A6E61\"\n  },\n  {\n    \"name\": \"Gurkha\",\n    \"hex\": \"9A9577\"\n  },\n  {\n    \"name\": \"Olivine\",\n    \"hex\": \"9AB973\"\n  },\n  {\n    \"name\": \"Shadow Green\",\n    \"hex\": \"9AC2B8\"\n  },\n  {\n    \"name\": \"Oregon\",\n    \"hex\": \"9B4703\"\n  },\n  {\n    \"name\": \"Lemon Grass\",\n    \"hex\": \"9B9E8F\"\n  },\n  {\n    \"name\": \"Stiletto\",\n    \"hex\": \"9C3336\"\n  },\n  {\n    \"name\": \"Hawaiian Tan\",\n    \"hex\": \"9D5616\"\n  },\n  {\n    \"name\": \"Gull Gray\",\n    \"hex\": \"9DACB7\"\n  },\n  {\n    \"name\": \"Pistachio\",\n    \"hex\": \"9DC209\"\n  },\n  {\n    \"name\": \"Granny Smith Apple\",\n    \"hex\": \"9DE093\"\n  },\n  {\n    \"name\": \"Anakiwa\",\n    \"hex\": \"9DE5FF\"\n  },\n  {\n    \"name\": \"Chelsea Gem\",\n    \"hex\": \"9E5302\"\n  },\n  {\n    \"name\": \"Sepia Skin\",\n    \"hex\": \"9E5B40\"\n  },\n  {\n    \"name\": \"Sage\",\n    \"hex\": \"9EA587\"\n  },\n  {\n    \"name\": \"Citron\",\n    \"hex\": \"9EA91F\"\n  },\n  {\n    \"name\": \"Rock Blue\",\n    \"hex\": \"9EB1CD\"\n  },\n  {\n    \"name\": \"Morning Glory\",\n    \"hex\": \"9EDEE0\"\n  },\n  {\n    \"name\": \"Cognac\",\n    \"hex\": \"9F381D\"\n  },\n  {\n    \"name\": \"Reef Gold\",\n    \"hex\": \"9F821C\"\n  },\n  {\n    \"name\": \"Star Dust\",\n    \"hex\": \"9F9F9C\"\n  },\n  {\n    \"name\": \"Santas Gray\",\n    \"hex\": \"9FA0B1\"\n  },\n  {\n    \"name\": \"Sinbad\",\n    \"hex\": \"9FD7D3\"\n  },\n  {\n    \"name\": \"Feijoa\",\n    \"hex\": \"9FDD8C\"\n  },\n  {\n    \"name\": \"Tabasco\",\n    \"hex\": \"A02712\"\n  },\n  {\n    \"name\": \"Buttered Rum\",\n    \"hex\": \"A1750D\"\n  },\n  {\n    \"name\": \"Hit Gray\",\n    \"hex\": \"A1ADB5\"\n  },\n  {\n    \"name\": \"Citrus\",\n    \"hex\": \"A1C50A\"\n  },\n  {\n    \"name\": \"Aqua Island\",\n    \"hex\": \"A1DAD7\"\n  },\n  {\n    \"name\": \"Water Leaf\",\n    \"hex\": \"A1E9DE\"\n  },\n  {\n    \"name\": \"Flirt\",\n    \"hex\": \"A2006D\"\n  },\n  {\n    \"name\": \"Rouge\",\n    \"hex\": \"A23B6C\"\n  },\n  {\n    \"name\": \"Cape Palliser\",\n    \"hex\": \"A26645\"\n  },\n  {\n    \"name\": \"Gray Chateau\",\n    \"hex\": \"A2AAB3\"\n  },\n  {\n    \"name\": \"Edward\",\n    \"hex\": \"A2AEAB\"\n  },\n  {\n    \"name\": \"Pharlap\",\n    \"hex\": \"A3807B\"\n  },\n  {\n    \"name\": \"Amethyst Smoke\",\n    \"hex\": \"A397B4\"\n  },\n  {\n    \"name\": \"Blizzard Blue\",\n    \"hex\": \"A3E3ED\"\n  },\n  {\n    \"name\": \"Delta\",\n    \"hex\": \"A4A49D\"\n  },\n  {\n    \"name\": \"Wistful\",\n    \"hex\": \"A4A6D3\"\n  },\n  {\n    \"name\": \"Green Smoke\",\n    \"hex\": \"A4AF6E\"\n  },\n  {\n    \"name\": \"Jazzberry Jam\",\n    \"hex\": \"A50B5E\"\n  },\n  {\n    \"name\": \"Zorba\",\n    \"hex\": \"A59B91\"\n  },\n  {\n    \"name\": \"Bahia\",\n    \"hex\": \"A5CB0C\"\n  },\n  {\n    \"name\": \"Roof Terracotta\",\n    \"hex\": \"A62F20\"\n  },\n  {\n    \"name\": \"Paarl\",\n    \"hex\": \"A65529\"\n  },\n  {\n    \"name\": \"Barley Corn\",\n    \"hex\": \"A68B5B\"\n  },\n  {\n    \"name\": \"Donkey Brown\",\n    \"hex\": \"A69279\"\n  },\n  {\n    \"name\": \"Dawn\",\n    \"hex\": \"A6A29A\"\n  },\n  {\n    \"name\": \"Mexican Red\",\n    \"hex\": \"A72525\"\n  },\n  {\n    \"name\": \"Luxor Gold\",\n    \"hex\": \"A7882C\"\n  },\n  {\n    \"name\": \"Rich Gold\",\n    \"hex\": \"A85307\"\n  },\n  {\n    \"name\": \"Reno Sand\",\n    \"hex\": \"A86515\"\n  },\n  {\n    \"name\": \"Coral Tree\",\n    \"hex\": \"A86B6B\"\n  },\n  {\n    \"name\": \"Dusty Gray\",\n    \"hex\": \"A8989B\"\n  },\n  {\n    \"name\": \"Dull Lavender\",\n    \"hex\": \"A899E6\"\n  },\n  {\n    \"name\": \"Tallow\",\n    \"hex\": \"A8A589\"\n  },\n  {\n    \"name\": \"Bud\",\n    \"hex\": \"A8AE9C\"\n  },\n  {\n    \"name\": \"Locust\",\n    \"hex\": \"A8AF8E\"\n  },\n  {\n    \"name\": \"Norway\",\n    \"hex\": \"A8BD9F\"\n  },\n  {\n    \"name\": \"Chinook\",\n    \"hex\": \"A8E3BD\"\n  },\n  {\n    \"name\": \"Gray Olive\",\n    \"hex\": \"A9A491\"\n  },\n  {\n    \"name\": \"Aluminium\",\n    \"hex\": \"A9ACB6\"\n  },\n  {\n    \"name\": \"Cadet Blue\",\n    \"hex\": \"A9B2C3\"\n  },\n  {\n    \"name\": \"Schist\",\n    \"hex\": \"A9B497\"\n  },\n  {\n    \"name\": \"Tower Gray\",\n    \"hex\": \"A9BDBF\"\n  },\n  {\n    \"name\": \"Perano\",\n    \"hex\": \"A9BEF2\"\n  },\n  {\n    \"name\": \"Opal\",\n    \"hex\": \"A9C6C2\"\n  },\n  {\n    \"name\": \"Night Shadz\",\n    \"hex\": \"AA375A\"\n  },\n  {\n    \"name\": \"Fire\",\n    \"hex\": \"AA4203\"\n  },\n  {\n    \"name\": \"Muesli\",\n    \"hex\": \"AA8B5B\"\n  },\n  {\n    \"name\": \"Sandal\",\n    \"hex\": \"AA8D6F\"\n  },\n  {\n    \"name\": \"Shady Lady\",\n    \"hex\": \"AAA5A9\"\n  },\n  {\n    \"name\": \"Logan\",\n    \"hex\": \"AAA9CD\"\n  },\n  {\n    \"name\": \"Spun Pearl\",\n    \"hex\": \"AAABB7\"\n  },\n  {\n    \"name\": \"Regent St Blue\",\n    \"hex\": \"AAD6E6\"\n  },\n  {\n    \"name\": \"Magic Mint\",\n    \"hex\": \"AAF0D1\"\n  },\n  {\n    \"name\": \"Lipstick\",\n    \"hex\": \"AB0563\"\n  },\n  {\n    \"name\": \"Royal Heath\",\n    \"hex\": \"AB3472\"\n  },\n  {\n    \"name\": \"Sandrift\",\n    \"hex\": \"AB917A\"\n  },\n  {\n    \"name\": \"Cold Purple\",\n    \"hex\": \"ABA0D9\"\n  },\n  {\n    \"name\": \"Bronco\",\n    \"hex\": \"ABA196\"\n  },\n  {\n    \"name\": \"Limed Oak\",\n    \"hex\": \"AC8A56\"\n  },\n  {\n    \"name\": \"East Side\",\n    \"hex\": \"AC91CE\"\n  },\n  {\n    \"name\": \"Lemon Ginger\",\n    \"hex\": \"AC9E22\"\n  },\n  {\n    \"name\": \"Napa\",\n    \"hex\": \"ACA494\"\n  },\n  {\n    \"name\": \"Hillary\",\n    \"hex\": \"ACA586\"\n  },\n  {\n    \"name\": \"Cloudy\",\n    \"hex\": \"ACA59F\"\n  },\n  {\n    \"name\": \"Silver Chalice\",\n    \"hex\": \"ACACAC\"\n  },\n  {\n    \"name\": \"Swamp Green\",\n    \"hex\": \"ACB78E\"\n  },\n  {\n    \"name\": \"Spring Rain\",\n    \"hex\": \"ACCBB1\"\n  },\n  {\n    \"name\": \"Conifer\",\n    \"hex\": \"ACDD4D\"\n  },\n  {\n    \"name\": \"Celadon\",\n    \"hex\": \"ACE1AF\"\n  },\n  {\n    \"name\": \"Mandalay\",\n    \"hex\": \"AD781B\"\n  },\n  {\n    \"name\": \"Casper\",\n    \"hex\": \"ADBED1\"\n  },\n  {\n    \"name\": \"Moss Green\",\n    \"hex\": \"ADDFAD\"\n  },\n  {\n    \"name\": \"Padua\",\n    \"hex\": \"ADE6C4\"\n  },\n  {\n    \"name\": \"Green Yellow\",\n    \"hex\": \"ADFF2F\"\n  },\n  {\n    \"name\": \"Hippie Pink\",\n    \"hex\": \"AE4560\"\n  },\n  {\n    \"name\": \"Desert\",\n    \"hex\": \"AE6020\"\n  },\n  {\n    \"name\": \"Bouquet\",\n    \"hex\": \"AE809E\"\n  },\n  {\n    \"name\": \"Medium Carmine\",\n    \"hex\": \"AF4035\"\n  },\n  {\n    \"name\": \"Apple Blossom\",\n    \"hex\": \"AF4D43\"\n  },\n  {\n    \"name\": \"Brown Rust\",\n    \"hex\": \"AF593E\"\n  },\n  {\n    \"name\": \"Driftwood\",\n    \"hex\": \"AF8751\"\n  },\n  {\n    \"name\": \"Alpine\",\n    \"hex\": \"AF8F2C\"\n  },\n  {\n    \"name\": \"Lucky\",\n    \"hex\": \"AF9F1C\"\n  },\n  {\n    \"name\": \"Martini\",\n    \"hex\": \"AFA09E\"\n  },\n  {\n    \"name\": \"Bombay\",\n    \"hex\": \"AFB1B8\"\n  },\n  {\n    \"name\": \"Pigeon Post\",\n    \"hex\": \"AFBDD9\"\n  },\n  {\n    \"name\": \"Cadillac\",\n    \"hex\": \"B04C6A\"\n  },\n  {\n    \"name\": \"Matrix\",\n    \"hex\": \"B05D54\"\n  },\n  {\n    \"name\": \"Tapestry\",\n    \"hex\": \"B05E81\"\n  },\n  {\n    \"name\": \"Mai Tai\",\n    \"hex\": \"B06608\"\n  },\n  {\n    \"name\": \"Del Rio\",\n    \"hex\": \"B09A95\"\n  },\n  {\n    \"name\": \"Powder Blue\",\n    \"hex\": \"B0E0E6\"\n  },\n  {\n    \"name\": \"Inch Worm\",\n    \"hex\": \"B0E313\"\n  },\n  {\n    \"name\": \"Bright Red\",\n    \"hex\": \"B10000\"\n  },\n  {\n    \"name\": \"Vesuvius\",\n    \"hex\": \"B14A0B\"\n  },\n  {\n    \"name\": \"Pumpkin Skin\",\n    \"hex\": \"B1610B\"\n  },\n  {\n    \"name\": \"Santa Fe\",\n    \"hex\": \"B16D52\"\n  },\n  {\n    \"name\": \"Teak\",\n    \"hex\": \"B19461\"\n  },\n  {\n    \"name\": \"Fringy Flower\",\n    \"hex\": \"B1E2C1\"\n  },\n  {\n    \"name\": \"Ice Cold\",\n    \"hex\": \"B1F4E7\"\n  },\n  {\n    \"name\": \"Shiraz\",\n    \"hex\": \"B20931\"\n  },\n  {\n    \"name\": \"Biloba Flower\",\n    \"hex\": \"B2A1EA\"\n  },\n  {\n    \"name\": \"Tall Poppy\",\n    \"hex\": \"B32D29\"\n  },\n  {\n    \"name\": \"Fiery Orange\",\n    \"hex\": \"B35213\"\n  },\n  {\n    \"name\": \"Hot Toddy\",\n    \"hex\": \"B38007\"\n  },\n  {\n    \"name\": \"Taupe Gray\",\n    \"hex\": \"B3AF95\"\n  },\n  {\n    \"name\": \"La Rioja\",\n    \"hex\": \"B3C110\"\n  },\n  {\n    \"name\": \"Well Read\",\n    \"hex\": \"B43332\"\n  },\n  {\n    \"name\": \"Blush\",\n    \"hex\": \"B44668\"\n  },\n  {\n    \"name\": \"Jungle Mist\",\n    \"hex\": \"B4CFD3\"\n  },\n  {\n    \"name\": \"Turkish Rose\",\n    \"hex\": \"B57281\"\n  },\n  {\n    \"name\": \"Lavender\",\n    \"hex\": \"B57EDC\"\n  },\n  {\n    \"name\": \"Mongoose\",\n    \"hex\": \"B5A27F\"\n  },\n  {\n    \"name\": \"Olive Green\",\n    \"hex\": \"B5B35C\"\n  },\n  {\n    \"name\": \"Jet Stream\",\n    \"hex\": \"B5D2CE\"\n  },\n  {\n    \"name\": \"Cruise\",\n    \"hex\": \"B5ECDF\"\n  },\n  {\n    \"name\": \"Hibiscus\",\n    \"hex\": \"B6316C\"\n  },\n  {\n    \"name\": \"Thatch\",\n    \"hex\": \"B69D98\"\n  },\n  {\n    \"name\": \"Heathered Gray\",\n    \"hex\": \"B6B095\"\n  },\n  {\n    \"name\": \"Eagle\",\n    \"hex\": \"B6BAA4\"\n  },\n  {\n    \"name\": \"Spindle\",\n    \"hex\": \"B6D1EA\"\n  },\n  {\n    \"name\": \"Gum Leaf\",\n    \"hex\": \"B6D3BF\"\n  },\n  {\n    \"name\": \"Rust\",\n    \"hex\": \"B7410E\"\n  },\n  {\n    \"name\": \"Muddy Waters\",\n    \"hex\": \"B78E5C\"\n  },\n  {\n    \"name\": \"Sahara\",\n    \"hex\": \"B7A214\"\n  },\n  {\n    \"name\": \"Husk\",\n    \"hex\": \"B7A458\"\n  },\n  {\n    \"name\": \"Nobel\",\n    \"hex\": \"B7B1B1\"\n  },\n  {\n    \"name\": \"Heather\",\n    \"hex\": \"B7C3D0\"\n  },\n  {\n    \"name\": \"Madang\",\n    \"hex\": \"B7F0BE\"\n  },\n  {\n    \"name\": \"Milano Red\",\n    \"hex\": \"B81104\"\n  },\n  {\n    \"name\": \"Copper\",\n    \"hex\": \"B87333\"\n  },\n  {\n    \"name\": \"Gimblet\",\n    \"hex\": \"B8B56A\"\n  },\n  {\n    \"name\": \"Green Spring\",\n    \"hex\": \"B8C1B1\"\n  },\n  {\n    \"name\": \"Celery\",\n    \"hex\": \"B8C25D\"\n  },\n  {\n    \"name\": \"Sail\",\n    \"hex\": \"B8E0F9\"\n  },\n  {\n    \"name\": \"Chestnut\",\n    \"hex\": \"B94E48\"\n  },\n  {\n    \"name\": \"Crail\",\n    \"hex\": \"B95140\"\n  },\n  {\n    \"name\": \"Marigold\",\n    \"hex\": \"B98D28\"\n  },\n  {\n    \"name\": \"Wild Willow\",\n    \"hex\": \"B9C46A\"\n  },\n  {\n    \"name\": \"Rainee\",\n    \"hex\": \"B9C8AC\"\n  },\n  {\n    \"name\": \"Guardsman Red\",\n    \"hex\": \"BA0101\"\n  },\n  {\n    \"name\": \"Rock Spray\",\n    \"hex\": \"BA450C\"\n  },\n  {\n    \"name\": \"Bourbon\",\n    \"hex\": \"BA6F1E\"\n  },\n  {\n    \"name\": \"Pirate Gold\",\n    \"hex\": \"BA7F03\"\n  },\n  {\n    \"name\": \"Nomad\",\n    \"hex\": \"BAB1A2\"\n  },\n  {\n    \"name\": \"Submarine\",\n    \"hex\": \"BAC7C9\"\n  },\n  {\n    \"name\": \"Charlotte\",\n    \"hex\": \"BAEEF9\"\n  },\n  {\n    \"name\": \"Medium Red Violet\",\n    \"hex\": \"BB3385\"\n  },\n  {\n    \"name\": \"Brandy Rose\",\n    \"hex\": \"BB8983\"\n  },\n  {\n    \"name\": \"Rio Grande\",\n    \"hex\": \"BBD009\"\n  },\n  {\n    \"name\": \"Surf\",\n    \"hex\": \"BBD7C1\"\n  },\n  {\n    \"name\": \"Powder Ash\",\n    \"hex\": \"BCC9C2\"\n  },\n  {\n    \"name\": \"Tuscany\",\n    \"hex\": \"BD5E2E\"\n  },\n  {\n    \"name\": \"Quicksand\",\n    \"hex\": \"BD978E\"\n  },\n  {\n    \"name\": \"Silk\",\n    \"hex\": \"BDB1A8\"\n  },\n  {\n    \"name\": \"Malta\",\n    \"hex\": \"BDB2A1\"\n  },\n  {\n    \"name\": \"Chatelle\",\n    \"hex\": \"BDB3C7\"\n  },\n  {\n    \"name\": \"Lavender Gray\",\n    \"hex\": \"BDBBD7\"\n  },\n  {\n    \"name\": \"French Gray\",\n    \"hex\": \"BDBDC6\"\n  },\n  {\n    \"name\": \"Clay Ash\",\n    \"hex\": \"BDC8B3\"\n  },\n  {\n    \"name\": \"Loblolly\",\n    \"hex\": \"BDC9CE\"\n  },\n  {\n    \"name\": \"French Pass\",\n    \"hex\": \"BDEDFD\"\n  },\n  {\n    \"name\": \"London Hue\",\n    \"hex\": \"BEA6C3\"\n  },\n  {\n    \"name\": \"Pink Swan\",\n    \"hex\": \"BEB5B7\"\n  },\n  {\n    \"name\": \"Fuego\",\n    \"hex\": \"BEDE0D\"\n  },\n  {\n    \"name\": \"Rose of Sharon\",\n    \"hex\": \"BF5500\"\n  },\n  {\n    \"name\": \"Tide\",\n    \"hex\": \"BFB8B0\"\n  },\n  {\n    \"name\": \"Blue Haze\",\n    \"hex\": \"BFBED8\"\n  },\n  {\n    \"name\": \"Silver Sand\",\n    \"hex\": \"BFC1C2\"\n  },\n  {\n    \"name\": \"Key Lime Pie\",\n    \"hex\": \"BFC921\"\n  },\n  {\n    \"name\": \"Ziggurat\",\n    \"hex\": \"BFDBE2\"\n  },\n  {\n    \"name\": \"Lime\",\n    \"hex\": \"BFFF00\"\n  },\n  {\n    \"name\": \"Thunderbird\",\n    \"hex\": \"C02B18\"\n  },\n  {\n    \"name\": \"Mojo\",\n    \"hex\": \"C04737\"\n  },\n  {\n    \"name\": \"Old Rose\",\n    \"hex\": \"C08081\"\n  },\n  {\n    \"name\": \"Silver\",\n    \"hex\": \"C0C0C0\"\n  },\n  {\n    \"name\": \"Pale Leaf\",\n    \"hex\": \"C0D3B9\"\n  },\n  {\n    \"name\": \"Pixie Green\",\n    \"hex\": \"C0D8B6\"\n  },\n  {\n    \"name\": \"Tia Maria\",\n    \"hex\": \"C1440E\"\n  },\n  {\n    \"name\": \"Fuchsia Pink\",\n    \"hex\": \"C154C1\"\n  },\n  {\n    \"name\": \"Buddha Gold\",\n    \"hex\": \"C1A004\"\n  },\n  {\n    \"name\": \"Bison Hide\",\n    \"hex\": \"C1B7A4\"\n  },\n  {\n    \"name\": \"Tea\",\n    \"hex\": \"C1BAB0\"\n  },\n  {\n    \"name\": \"Gray Suit\",\n    \"hex\": \"C1BECD\"\n  },\n  {\n    \"name\": \"Sprout\",\n    \"hex\": \"C1D7B0\"\n  },\n  {\n    \"name\": \"Sulu\",\n    \"hex\": \"C1F07C\"\n  },\n  {\n    \"name\": \"Indochine\",\n    \"hex\": \"C26B03\"\n  },\n  {\n    \"name\": \"Twine\",\n    \"hex\": \"C2955D\"\n  },\n  {\n    \"name\": \"Cotton Seed\",\n    \"hex\": \"C2BDB6\"\n  },\n  {\n    \"name\": \"Pumice\",\n    \"hex\": \"C2CAC4\"\n  },\n  {\n    \"name\": \"Jagged Ice\",\n    \"hex\": \"C2E8E5\"\n  },\n  {\n    \"name\": \"Maroon Flush\",\n    \"hex\": \"C32148\"\n  },\n  {\n    \"name\": \"Indian Khaki\",\n    \"hex\": \"C3B091\"\n  },\n  {\n    \"name\": \"Pale Slate\",\n    \"hex\": \"C3BFC1\"\n  },\n  {\n    \"name\": \"Gray Nickel\",\n    \"hex\": \"C3C3BD\"\n  },\n  {\n    \"name\": \"Periwinkle Gray\",\n    \"hex\": \"C3CDE6\"\n  },\n  {\n    \"name\": \"Tiara\",\n    \"hex\": \"C3D1D1\"\n  },\n  {\n    \"name\": \"Tropical Blue\",\n    \"hex\": \"C3DDF9\"\n  },\n  {\n    \"name\": \"Cardinal\",\n    \"hex\": \"C41E3A\"\n  },\n  {\n    \"name\": \"Fuzzy Wuzzy Brown\",\n    \"hex\": \"C45655\"\n  },\n  {\n    \"name\": \"Orange Roughy\",\n    \"hex\": \"C45719\"\n  },\n  {\n    \"name\": \"Mist Gray\",\n    \"hex\": \"C4C4BC\"\n  },\n  {\n    \"name\": \"Coriander\",\n    \"hex\": \"C4D0B0\"\n  },\n  {\n    \"name\": \"Mint Tulip\",\n    \"hex\": \"C4F4EB\"\n  },\n  {\n    \"name\": \"Mulberry\",\n    \"hex\": \"C54B8C\"\n  },\n  {\n    \"name\": \"Nugget\",\n    \"hex\": \"C59922\"\n  },\n  {\n    \"name\": \"Tussock\",\n    \"hex\": \"C5994B\"\n  },\n  {\n    \"name\": \"Sea Mist\",\n    \"hex\": \"C5DBCA\"\n  },\n  {\n    \"name\": \"Yellow Green\",\n    \"hex\": \"C5E17A\"\n  },\n  {\n    \"name\": \"Brick Red\",\n    \"hex\": \"C62D42\"\n  },\n  {\n    \"name\": \"Contessa\",\n    \"hex\": \"C6726B\"\n  },\n  {\n    \"name\": \"Oriental Pink\",\n    \"hex\": \"C69191\"\n  },\n  {\n    \"name\": \"Roti\",\n    \"hex\": \"C6A84B\"\n  },\n  {\n    \"name\": \"Ash\",\n    \"hex\": \"C6C3B5\"\n  },\n  {\n    \"name\": \"Kangaroo\",\n    \"hex\": \"C6C8BD\"\n  },\n  {\n    \"name\": \"Las Palmas\",\n    \"hex\": \"C6E610\"\n  },\n  {\n    \"name\": \"Monza\",\n    \"hex\": \"C7031E\"\n  },\n  {\n    \"name\": \"Red Violet\",\n    \"hex\": \"C71585\"\n  },\n  {\n    \"name\": \"Coral Reef\",\n    \"hex\": \"C7BCA2\"\n  },\n  {\n    \"name\": \"Melrose\",\n    \"hex\": \"C7C1FF\"\n  },\n  {\n    \"name\": \"Cloud\",\n    \"hex\": \"C7C4BF\"\n  },\n  {\n    \"name\": \"Ghost\",\n    \"hex\": \"C7C9D5\"\n  },\n  {\n    \"name\": \"Pine Glade\",\n    \"hex\": \"C7CD90\"\n  },\n  {\n    \"name\": \"Botticelli\",\n    \"hex\": \"C7DDE5\"\n  },\n  {\n    \"name\": \"Antique Brass\",\n    \"hex\": \"C88A65\"\n  },\n  {\n    \"name\": \"Lilac\",\n    \"hex\": \"C8A2C8\"\n  },\n  {\n    \"name\": \"Hokey Pokey\",\n    \"hex\": \"C8A528\"\n  },\n  {\n    \"name\": \"Lily\",\n    \"hex\": \"C8AABF\"\n  },\n  {\n    \"name\": \"Laser\",\n    \"hex\": \"C8B568\"\n  },\n  {\n    \"name\": \"Edgewater\",\n    \"hex\": \"C8E3D7\"\n  },\n  {\n    \"name\": \"Piper\",\n    \"hex\": \"C96323\"\n  },\n  {\n    \"name\": \"Pizza\",\n    \"hex\": \"C99415\"\n  },\n  {\n    \"name\": \"Light Wisteria\",\n    \"hex\": \"C9A0DC\"\n  },\n  {\n    \"name\": \"Rodeo Dust\",\n    \"hex\": \"C9B29B\"\n  },\n  {\n    \"name\": \"Sundance\",\n    \"hex\": \"C9B35B\"\n  },\n  {\n    \"name\": \"Earls Green\",\n    \"hex\": \"C9B93B\"\n  },\n  {\n    \"name\": \"Silver Rust\",\n    \"hex\": \"C9C0BB\"\n  },\n  {\n    \"name\": \"Conch\",\n    \"hex\": \"C9D9D2\"\n  },\n  {\n    \"name\": \"Reef\",\n    \"hex\": \"C9FFA2\"\n  },\n  {\n    \"name\": \"Aero Blue\",\n    \"hex\": \"C9FFE5\"\n  },\n  {\n    \"name\": \"Flush Mahogany\",\n    \"hex\": \"CA3435\"\n  },\n  {\n    \"name\": \"Turmeric\",\n    \"hex\": \"CABB48\"\n  },\n  {\n    \"name\": \"Paris White\",\n    \"hex\": \"CADCD4\"\n  },\n  {\n    \"name\": \"Bitter Lemon\",\n    \"hex\": \"CAE00D\"\n  },\n  {\n    \"name\": \"Skeptic\",\n    \"hex\": \"CAE6DA\"\n  },\n  {\n    \"name\": \"Viola\",\n    \"hex\": \"CB8FA9\"\n  },\n  {\n    \"name\": \"Foggy Gray\",\n    \"hex\": \"CBCAB6\"\n  },\n  {\n    \"name\": \"Green Mist\",\n    \"hex\": \"CBD3B0\"\n  },\n  {\n    \"name\": \"Nebula\",\n    \"hex\": \"CBDBD6\"\n  },\n  {\n    \"name\": \"Persian Red\",\n    \"hex\": \"CC3333\"\n  },\n  {\n    \"name\": \"Burnt Orange\",\n    \"hex\": \"CC5500\"\n  },\n  {\n    \"name\": \"Ochre\",\n    \"hex\": \"CC7722\"\n  },\n  {\n    \"name\": \"Puce\",\n    \"hex\": \"CC8899\"\n  },\n  {\n    \"name\": \"Thistle Green\",\n    \"hex\": \"CCCAA8\"\n  },\n  {\n    \"name\": \"Periwinkle\",\n    \"hex\": \"CCCCFF\"\n  },\n  {\n    \"name\": \"Electric Lime\",\n    \"hex\": \"CCFF00\"\n  },\n  {\n    \"name\": \"Tenn\",\n    \"hex\": \"CD5700\"\n  },\n  {\n    \"name\": \"Chestnut Rose\",\n    \"hex\": \"CD5C5C\"\n  },\n  {\n    \"name\": \"Brandy Punch\",\n    \"hex\": \"CD8429\"\n  },\n  {\n    \"name\": \"Onahau\",\n    \"hex\": \"CDF4FF\"\n  },\n  {\n    \"name\": \"Sorrell Brown\",\n    \"hex\": \"CEB98F\"\n  },\n  {\n    \"name\": \"Cold Turkey\",\n    \"hex\": \"CEBABA\"\n  },\n  {\n    \"name\": \"Yuma\",\n    \"hex\": \"CEC291\"\n  },\n  {\n    \"name\": \"Chino\",\n    \"hex\": \"CEC7A7\"\n  },\n  {\n    \"name\": \"Eunry\",\n    \"hex\": \"CFA39D\"\n  },\n  {\n    \"name\": \"Old Gold\",\n    \"hex\": \"CFB53B\"\n  },\n  {\n    \"name\": \"Tasman\",\n    \"hex\": \"CFDCCF\"\n  },\n  {\n    \"name\": \"Surf Crest\",\n    \"hex\": \"CFE5D2\"\n  },\n  {\n    \"name\": \"Humming Bird\",\n    \"hex\": \"CFF9F3\"\n  },\n  {\n    \"name\": \"Scandal\",\n    \"hex\": \"CFFAF4\"\n  },\n  {\n    \"name\": \"Red Stage\",\n    \"hex\": \"D05F04\"\n  },\n  {\n    \"name\": \"Hopbush\",\n    \"hex\": \"D06DA1\"\n  },\n  {\n    \"name\": \"Meteor\",\n    \"hex\": \"D07D12\"\n  },\n  {\n    \"name\": \"Perfume\",\n    \"hex\": \"D0BEF8\"\n  },\n  {\n    \"name\": \"Prelude\",\n    \"hex\": \"D0C0E5\"\n  },\n  {\n    \"name\": \"Tea Green\",\n    \"hex\": \"D0F0C0\"\n  },\n  {\n    \"name\": \"Geebung\",\n    \"hex\": \"D18F1B\"\n  },\n  {\n    \"name\": \"Vanilla\",\n    \"hex\": \"D1BEA8\"\n  },\n  {\n    \"name\": \"Soft Amber\",\n    \"hex\": \"D1C6B4\"\n  },\n  {\n    \"name\": \"Celeste\",\n    \"hex\": \"D1D2CA\"\n  },\n  {\n    \"name\": \"Mischka\",\n    \"hex\": \"D1D2DD\"\n  },\n  {\n    \"name\": \"Pear\",\n    \"hex\": \"D1E231\"\n  },\n  {\n    \"name\": \"Hot Cinnamon\",\n    \"hex\": \"D2691E\"\n  },\n  {\n    \"name\": \"Raw Sienna\",\n    \"hex\": \"D27D46\"\n  },\n  {\n    \"name\": \"Careys Pink\",\n    \"hex\": \"D29EAA\"\n  },\n  {\n    \"name\": \"Tan\",\n    \"hex\": \"D2B48C\"\n  },\n  {\n    \"name\": \"Deco\",\n    \"hex\": \"D2DA97\"\n  },\n  {\n    \"name\": \"Blue Romance\",\n    \"hex\": \"D2F6DE\"\n  },\n  {\n    \"name\": \"Gossip\",\n    \"hex\": \"D2F8B0\"\n  },\n  {\n    \"name\": \"Sisal\",\n    \"hex\": \"D3CBBA\"\n  },\n  {\n    \"name\": \"Swirl\",\n    \"hex\": \"D3CDC5\"\n  },\n  {\n    \"name\": \"Charm\",\n    \"hex\": \"D47494\"\n  },\n  {\n    \"name\": \"Clam Shell\",\n    \"hex\": \"D4B6AF\"\n  },\n  {\n    \"name\": \"Straw\",\n    \"hex\": \"D4BF8D\"\n  },\n  {\n    \"name\": \"Akaroa\",\n    \"hex\": \"D4C4A8\"\n  },\n  {\n    \"name\": \"Bird Flower\",\n    \"hex\": \"D4CD16\"\n  },\n  {\n    \"name\": \"Iron\",\n    \"hex\": \"D4D7D9\"\n  },\n  {\n    \"name\": \"Geyser\",\n    \"hex\": \"D4DFE2\"\n  },\n  {\n    \"name\": \"Hawkes Blue\",\n    \"hex\": \"D4E2FC\"\n  },\n  {\n    \"name\": \"Grenadier\",\n    \"hex\": \"D54600\"\n  },\n  {\n    \"name\": \"Can Can\",\n    \"hex\": \"D591A4\"\n  },\n  {\n    \"name\": \"Whiskey\",\n    \"hex\": \"D59A6F\"\n  },\n  {\n    \"name\": \"Winter Hazel\",\n    \"hex\": \"D5D195\"\n  },\n  {\n    \"name\": \"Granny Apple\",\n    \"hex\": \"D5F6E3\"\n  },\n  {\n    \"name\": \"My Pink\",\n    \"hex\": \"D69188\"\n  },\n  {\n    \"name\": \"Tacha\",\n    \"hex\": \"D6C562\"\n  },\n  {\n    \"name\": \"Moon Raker\",\n    \"hex\": \"D6CEF6\"\n  },\n  {\n    \"name\": \"Quill Gray\",\n    \"hex\": \"D6D6D1\"\n  },\n  {\n    \"name\": \"Snowy Mint\",\n    \"hex\": \"D6FFDB\"\n  },\n  {\n    \"name\": \"New York Pink\",\n    \"hex\": \"D7837F\"\n  },\n  {\n    \"name\": \"Pavlova\",\n    \"hex\": \"D7C498\"\n  },\n  {\n    \"name\": \"Fog\",\n    \"hex\": \"D7D0FF\"\n  },\n  {\n    \"name\": \"Valencia\",\n    \"hex\": \"D84437\"\n  },\n  {\n    \"name\": \"Japonica\",\n    \"hex\": \"D87C63\"\n  },\n  {\n    \"name\": \"Thistle\",\n    \"hex\": \"D8BFD8\"\n  },\n  {\n    \"name\": \"Maverick\",\n    \"hex\": \"D8C2D5\"\n  },\n  {\n    \"name\": \"Foam\",\n    \"hex\": \"D8FCFA\"\n  },\n  {\n    \"name\": \"Cabaret\",\n    \"hex\": \"D94972\"\n  },\n  {\n    \"name\": \"Burning Sand\",\n    \"hex\": \"D99376\"\n  },\n  {\n    \"name\": \"Cameo\",\n    \"hex\": \"D9B99B\"\n  },\n  {\n    \"name\": \"Timberwolf\",\n    \"hex\": \"D9D6CF\"\n  },\n  {\n    \"name\": \"Tana\",\n    \"hex\": \"D9DCC1\"\n  },\n  {\n    \"name\": \"Link Water\",\n    \"hex\": \"D9E4F5\"\n  },\n  {\n    \"name\": \"Mabel\",\n    \"hex\": \"D9F7FF\"\n  },\n  {\n    \"name\": \"Cerise\",\n    \"hex\": \"DA3287\"\n  },\n  {\n    \"name\": \"Flame Pea\",\n    \"hex\": \"DA5B38\"\n  },\n  {\n    \"name\": \"Bamboo\",\n    \"hex\": \"DA6304\"\n  },\n  {\n    \"name\": \"Red Damask\",\n    \"hex\": \"DA6A41\"\n  },\n  {\n    \"name\": \"Orchid\",\n    \"hex\": \"DA70D6\"\n  },\n  {\n    \"name\": \"Copperfield\",\n    \"hex\": \"DA8A67\"\n  },\n  {\n    \"name\": \"Golden Grass\",\n    \"hex\": \"DAA520\"\n  },\n  {\n    \"name\": \"Zanah\",\n    \"hex\": \"DAECD6\"\n  },\n  {\n    \"name\": \"Iceberg\",\n    \"hex\": \"DAF4F0\"\n  },\n  {\n    \"name\": \"Oyster Bay\",\n    \"hex\": \"DAFAFF\"\n  },\n  {\n    \"name\": \"Cranberry\",\n    \"hex\": \"DB5079\"\n  },\n  {\n    \"name\": \"Petite Orchid\",\n    \"hex\": \"DB9690\"\n  },\n  {\n    \"name\": \"Di Serria\",\n    \"hex\": \"DB995E\"\n  },\n  {\n    \"name\": \"Alto\",\n    \"hex\": \"DBDBDB\"\n  },\n  {\n    \"name\": \"Frosted Mint\",\n    \"hex\": \"DBFFF8\"\n  },\n  {\n    \"name\": \"Crimson\",\n    \"hex\": \"DC143C\"\n  },\n  {\n    \"name\": \"Punch\",\n    \"hex\": \"DC4333\"\n  },\n  {\n    \"name\": \"Galliano\",\n    \"hex\": \"DCB20C\"\n  },\n  {\n    \"name\": \"Blossom\",\n    \"hex\": \"DCB4BC\"\n  },\n  {\n    \"name\": \"Wattle\",\n    \"hex\": \"DCD747\"\n  },\n  {\n    \"name\": \"Westar\",\n    \"hex\": \"DCD9D2\"\n  },\n  {\n    \"name\": \"Moon Mist\",\n    \"hex\": \"DCDDCC\"\n  },\n  {\n    \"name\": \"Caper\",\n    \"hex\": \"DCEDB4\"\n  },\n  {\n    \"name\": \"Swans Down\",\n    \"hex\": \"DCF0EA\"\n  },\n  {\n    \"name\": \"Swiss Coffee\",\n    \"hex\": \"DDD6D5\"\n  },\n  {\n    \"name\": \"White Ice\",\n    \"hex\": \"DDF9F1\"\n  },\n  {\n    \"name\": \"Cerise Red\",\n    \"hex\": \"DE3163\"\n  },\n  {\n    \"name\": \"Roman\",\n    \"hex\": \"DE6360\"\n  },\n  {\n    \"name\": \"Tumbleweed\",\n    \"hex\": \"DEA681\"\n  },\n  {\n    \"name\": \"Gold Tips\",\n    \"hex\": \"DEBA13\"\n  },\n  {\n    \"name\": \"Brandy\",\n    \"hex\": \"DEC196\"\n  },\n  {\n    \"name\": \"Wafer\",\n    \"hex\": \"DECBC6\"\n  },\n  {\n    \"name\": \"Sapling\",\n    \"hex\": \"DED4A4\"\n  },\n  {\n    \"name\": \"Barberry\",\n    \"hex\": \"DED717\"\n  },\n  {\n    \"name\": \"Beryl Green\",\n    \"hex\": \"DEE5C0\"\n  },\n  {\n    \"name\": \"Pattens Blue\",\n    \"hex\": \"DEF5FF\"\n  },\n  {\n    \"name\": \"Heliotrope\",\n    \"hex\": \"DF73FF\"\n  },\n  {\n    \"name\": \"Apache\",\n    \"hex\": \"DFBE6F\"\n  },\n  {\n    \"name\": \"Chenin\",\n    \"hex\": \"DFCD6F\"\n  },\n  {\n    \"name\": \"Lola\",\n    \"hex\": \"DFCFDB\"\n  },\n  {\n    \"name\": \"Willow Brook\",\n    \"hex\": \"DFECDA\"\n  },\n  {\n    \"name\": \"Chartreuse Yellow\",\n    \"hex\": \"DFFF00\"\n  },\n  {\n    \"name\": \"Mauve\",\n    \"hex\": \"E0B0FF\"\n  },\n  {\n    \"name\": \"Anzac\",\n    \"hex\": \"E0B646\"\n  },\n  {\n    \"name\": \"Harvest Gold\",\n    \"hex\": \"E0B974\"\n  },\n  {\n    \"name\": \"Calico\",\n    \"hex\": \"E0C095\"\n  },\n  {\n    \"name\": \"Baby Blue\",\n    \"hex\": \"E0FFFF\"\n  },\n  {\n    \"name\": \"Sunglo\",\n    \"hex\": \"E16865\"\n  },\n  {\n    \"name\": \"Equator\",\n    \"hex\": \"E1BC64\"\n  },\n  {\n    \"name\": \"Pink Flare\",\n    \"hex\": \"E1C0C8\"\n  },\n  {\n    \"name\": \"Periglacial Blue\",\n    \"hex\": \"E1E6D6\"\n  },\n  {\n    \"name\": \"Kidnapper\",\n    \"hex\": \"E1EAD4\"\n  },\n  {\n    \"name\": \"Tara\",\n    \"hex\": \"E1F6E8\"\n  },\n  {\n    \"name\": \"Mandy\",\n    \"hex\": \"E25465\"\n  },\n  {\n    \"name\": \"Terracotta\",\n    \"hex\": \"E2725B\"\n  },\n  {\n    \"name\": \"Golden Bell\",\n    \"hex\": \"E28913\"\n  },\n  {\n    \"name\": \"Shocking\",\n    \"hex\": \"E292C0\"\n  },\n  {\n    \"name\": \"Dixie\",\n    \"hex\": \"E29418\"\n  },\n  {\n    \"name\": \"Light Orchid\",\n    \"hex\": \"E29CD2\"\n  },\n  {\n    \"name\": \"Snuff\",\n    \"hex\": \"E2D8ED\"\n  },\n  {\n    \"name\": \"Mystic\",\n    \"hex\": \"E2EBED\"\n  },\n  {\n    \"name\": \"Apple Green\",\n    \"hex\": \"E2F3EC\"\n  },\n  {\n    \"name\": \"Razzmatazz\",\n    \"hex\": \"E30B5C\"\n  },\n  {\n    \"name\": \"Alizarin Crimson\",\n    \"hex\": \"E32636\"\n  },\n  {\n    \"name\": \"Cinnabar\",\n    \"hex\": \"E34234\"\n  },\n  {\n    \"name\": \"Cavern Pink\",\n    \"hex\": \"E3BEBE\"\n  },\n  {\n    \"name\": \"Peppermint\",\n    \"hex\": \"E3F5E1\"\n  },\n  {\n    \"name\": \"Mindaro\",\n    \"hex\": \"E3F988\"\n  },\n  {\n    \"name\": \"Deep Blush\",\n    \"hex\": \"E47698\"\n  },\n  {\n    \"name\": \"Gamboge\",\n    \"hex\": \"E49B0F\"\n  },\n  {\n    \"name\": \"Melanie\",\n    \"hex\": \"E4C2D5\"\n  },\n  {\n    \"name\": \"Twilight\",\n    \"hex\": \"E4CFDE\"\n  },\n  {\n    \"name\": \"Bone\",\n    \"hex\": \"E4D1C0\"\n  },\n  {\n    \"name\": \"Sunflower\",\n    \"hex\": \"E4D422\"\n  },\n  {\n    \"name\": \"Grain Brown\",\n    \"hex\": \"E4D5B7\"\n  },\n  {\n    \"name\": \"Zombie\",\n    \"hex\": \"E4D69B\"\n  },\n  {\n    \"name\": \"Frostee\",\n    \"hex\": \"E4F6E7\"\n  },\n  {\n    \"name\": \"Snow Flurry\",\n    \"hex\": \"E4FFD1\"\n  },\n  {\n    \"name\": \"Amaranth\",\n    \"hex\": \"E52B50\"\n  },\n  {\n    \"name\": \"Zest\",\n    \"hex\": \"E5841B\"\n  },\n  {\n    \"name\": \"Dust Storm\",\n    \"hex\": \"E5CCC9\"\n  },\n  {\n    \"name\": \"Stark White\",\n    \"hex\": \"E5D7BD\"\n  },\n  {\n    \"name\": \"Hampton\",\n    \"hex\": \"E5D8AF\"\n  },\n  {\n    \"name\": \"Bon Jour\",\n    \"hex\": \"E5E0E1\"\n  },\n  {\n    \"name\": \"Mercury\",\n    \"hex\": \"E5E5E5\"\n  },\n  {\n    \"name\": \"Polar\",\n    \"hex\": \"E5F9F6\"\n  },\n  {\n    \"name\": \"Trinidad\",\n    \"hex\": \"E64E03\"\n  },\n  {\n    \"name\": \"Gold Sand\",\n    \"hex\": \"E6BE8A\"\n  },\n  {\n    \"name\": \"Cashmere\",\n    \"hex\": \"E6BEA5\"\n  },\n  {\n    \"name\": \"Double Spanish White\",\n    \"hex\": \"E6D7B9\"\n  },\n  {\n    \"name\": \"Satin Linen\",\n    \"hex\": \"E6E4D4\"\n  },\n  {\n    \"name\": \"Harp\",\n    \"hex\": \"E6F2EA\"\n  },\n  {\n    \"name\": \"Off Green\",\n    \"hex\": \"E6F8F3\"\n  },\n  {\n    \"name\": \"Hint of Green\",\n    \"hex\": \"E6FFE9\"\n  },\n  {\n    \"name\": \"Tranquil\",\n    \"hex\": \"E6FFFF\"\n  },\n  {\n    \"name\": \"Mango Tango\",\n    \"hex\": \"E77200\"\n  },\n  {\n    \"name\": \"Christine\",\n    \"hex\": \"E7730A\"\n  },\n  {\n    \"name\": \"Tonys Pink\",\n    \"hex\": \"E79F8C\"\n  },\n  {\n    \"name\": \"Kobi\",\n    \"hex\": \"E79FC4\"\n  },\n  {\n    \"name\": \"Rose Fog\",\n    \"hex\": \"E7BCB4\"\n  },\n  {\n    \"name\": \"Corn\",\n    \"hex\": \"E7BF05\"\n  },\n  {\n    \"name\": \"Putty\",\n    \"hex\": \"E7CD8C\"\n  },\n  {\n    \"name\": \"Gray Nurse\",\n    \"hex\": \"E7ECE6\"\n  },\n  {\n    \"name\": \"Lily White\",\n    \"hex\": \"E7F8FF\"\n  },\n  {\n    \"name\": \"Bubbles\",\n    \"hex\": \"E7FEFF\"\n  },\n  {\n    \"name\": \"Fire Bush\",\n    \"hex\": \"E89928\"\n  },\n  {\n    \"name\": \"Shilo\",\n    \"hex\": \"E8B9B3\"\n  },\n  {\n    \"name\": \"Pearl Bush\",\n    \"hex\": \"E8E0D5\"\n  },\n  {\n    \"name\": \"Green White\",\n    \"hex\": \"E8EBE0\"\n  },\n  {\n    \"name\": \"Chrome White\",\n    \"hex\": \"E8F1D4\"\n  },\n  {\n    \"name\": \"Gin\",\n    \"hex\": \"E8F2EB\"\n  },\n  {\n    \"name\": \"Aqua Squeeze\",\n    \"hex\": \"E8F5F2\"\n  },\n  {\n    \"name\": \"Clementine\",\n    \"hex\": \"E96E00\"\n  },\n  {\n    \"name\": \"Burnt Sienna\",\n    \"hex\": \"E97451\"\n  },\n  {\n    \"name\": \"Tahiti Gold\",\n    \"hex\": \"E97C07\"\n  },\n  {\n    \"name\": \"Oyster Pink\",\n    \"hex\": \"E9CECD\"\n  },\n  {\n    \"name\": \"Confetti\",\n    \"hex\": \"E9D75A\"\n  },\n  {\n    \"name\": \"Ebb\",\n    \"hex\": \"E9E3E3\"\n  },\n  {\n    \"name\": \"Ottoman\",\n    \"hex\": \"E9F8ED\"\n  },\n  {\n    \"name\": \"Clear Day\",\n    \"hex\": \"E9FFFD\"\n  },\n  {\n    \"name\": \"Carissma\",\n    \"hex\": \"EA88A8\"\n  },\n  {\n    \"name\": \"Porsche\",\n    \"hex\": \"EAAE69\"\n  },\n  {\n    \"name\": \"Tulip Tree\",\n    \"hex\": \"EAB33B\"\n  },\n  {\n    \"name\": \"Rob Roy\",\n    \"hex\": \"EAC674\"\n  },\n  {\n    \"name\": \"Raffia\",\n    \"hex\": \"EADAB8\"\n  },\n  {\n    \"name\": \"White Rock\",\n    \"hex\": \"EAE8D4\"\n  },\n  {\n    \"name\": \"Panache\",\n    \"hex\": \"EAF6EE\"\n  },\n  {\n    \"name\": \"Solitude\",\n    \"hex\": \"EAF6FF\"\n  },\n  {\n    \"name\": \"Aqua Spring\",\n    \"hex\": \"EAF9F5\"\n  },\n  {\n    \"name\": \"Dew\",\n    \"hex\": \"EAFFFE\"\n  },\n  {\n    \"name\": \"Apricot\",\n    \"hex\": \"EB9373\"\n  },\n  {\n    \"name\": \"Zinnwaldite\",\n    \"hex\": \"EBC2AF\"\n  },\n  {\n    \"name\": \"Fuel Yellow\",\n    \"hex\": \"ECA927\"\n  },\n  {\n    \"name\": \"Ronchi\",\n    \"hex\": \"ECC54E\"\n  },\n  {\n    \"name\": \"French Lilac\",\n    \"hex\": \"ECC7EE\"\n  },\n  {\n    \"name\": \"Just Right\",\n    \"hex\": \"ECCDB9\"\n  },\n  {\n    \"name\": \"Wild Rice\",\n    \"hex\": \"ECE090\"\n  },\n  {\n    \"name\": \"Fall Green\",\n    \"hex\": \"ECEBBD\"\n  },\n  {\n    \"name\": \"Aths Special\",\n    \"hex\": \"ECEBCE\"\n  },\n  {\n    \"name\": \"Starship\",\n    \"hex\": \"ECF245\"\n  },\n  {\n    \"name\": \"Red Ribbon\",\n    \"hex\": \"ED0A3F\"\n  },\n  {\n    \"name\": \"Tango\",\n    \"hex\": \"ED7A1C\"\n  },\n  {\n    \"name\": \"Carrot Orange\",\n    \"hex\": \"ED9121\"\n  },\n  {\n    \"name\": \"Sea Pink\",\n    \"hex\": \"ED989E\"\n  },\n  {\n    \"name\": \"Tacao\",\n    \"hex\": \"EDB381\"\n  },\n  {\n    \"name\": \"Desert Sand\",\n    \"hex\": \"EDC9AF\"\n  },\n  {\n    \"name\": \"Pancho\",\n    \"hex\": \"EDCDAB\"\n  },\n  {\n    \"name\": \"Chamois\",\n    \"hex\": \"EDDCB1\"\n  },\n  {\n    \"name\": \"Primrose\",\n    \"hex\": \"EDEA99\"\n  },\n  {\n    \"name\": \"Frost\",\n    \"hex\": \"EDF5DD\"\n  },\n  {\n    \"name\": \"Aqua Haze\",\n    \"hex\": \"EDF5F5\"\n  },\n  {\n    \"name\": \"Zumthor\",\n    \"hex\": \"EDF6FF\"\n  },\n  {\n    \"name\": \"Narvik\",\n    \"hex\": \"EDF9F1\"\n  },\n  {\n    \"name\": \"Honeysuckle\",\n    \"hex\": \"EDFC84\"\n  },\n  {\n    \"name\": \"Lavender Magenta\",\n    \"hex\": \"EE82EE\"\n  },\n  {\n    \"name\": \"Beauty Bush\",\n    \"hex\": \"EEC1BE\"\n  },\n  {\n    \"name\": \"Chalky\",\n    \"hex\": \"EED794\"\n  },\n  {\n    \"name\": \"Almond\",\n    \"hex\": \"EED9C4\"\n  },\n  {\n    \"name\": \"Flax\",\n    \"hex\": \"EEDC82\"\n  },\n  {\n    \"name\": \"Bizarre\",\n    \"hex\": \"EEDEDA\"\n  },\n  {\n    \"name\": \"Double Colonial White\",\n    \"hex\": \"EEE3AD\"\n  },\n  {\n    \"name\": \"Cararra\",\n    \"hex\": \"EEEEE8\"\n  },\n  {\n    \"name\": \"Manz\",\n    \"hex\": \"EEEF78\"\n  },\n  {\n    \"name\": \"Tahuna Sands\",\n    \"hex\": \"EEF0C8\"\n  },\n  {\n    \"name\": \"Athens Gray\",\n    \"hex\": \"EEF0F3\"\n  },\n  {\n    \"name\": \"Tusk\",\n    \"hex\": \"EEF3C3\"\n  },\n  {\n    \"name\": \"Loafer\",\n    \"hex\": \"EEF4DE\"\n  },\n  {\n    \"name\": \"Catskill White\",\n    \"hex\": \"EEF6F7\"\n  },\n  {\n    \"name\": \"Twilight Blue\",\n    \"hex\": \"EEFDFF\"\n  },\n  {\n    \"name\": \"Jonquil\",\n    \"hex\": \"EEFF9A\"\n  },\n  {\n    \"name\": \"Rice Flower\",\n    \"hex\": \"EEFFE2\"\n  },\n  {\n    \"name\": \"Jaffa\",\n    \"hex\": \"EF863F\"\n  },\n  {\n    \"name\": \"Gallery\",\n    \"hex\": \"EFEFEF\"\n  },\n  {\n    \"name\": \"Porcelain\",\n    \"hex\": \"EFF2F3\"\n  },\n  {\n    \"name\": \"Mauvelous\",\n    \"hex\": \"F091A9\"\n  },\n  {\n    \"name\": \"Golden Dream\",\n    \"hex\": \"F0D52D\"\n  },\n  {\n    \"name\": \"Golden Sand\",\n    \"hex\": \"F0DB7D\"\n  },\n  {\n    \"name\": \"Buff\",\n    \"hex\": \"F0DC82\"\n  },\n  {\n    \"name\": \"Prim\",\n    \"hex\": \"F0E2EC\"\n  },\n  {\n    \"name\": \"Khaki\",\n    \"hex\": \"F0E68C\"\n  },\n  {\n    \"name\": \"Selago\",\n    \"hex\": \"F0EEFD\"\n  },\n  {\n    \"name\": \"Titan White\",\n    \"hex\": \"F0EEFF\"\n  },\n  {\n    \"name\": \"Alice Blue\",\n    \"hex\": \"F0F8FF\"\n  },\n  {\n    \"name\": \"Feta\",\n    \"hex\": \"F0FCEA\"\n  },\n  {\n    \"name\": \"Gold Drop\",\n    \"hex\": \"F18200\"\n  },\n  {\n    \"name\": \"Wewak\",\n    \"hex\": \"F19BAB\"\n  },\n  {\n    \"name\": \"Sahara Sand\",\n    \"hex\": \"F1E788\"\n  },\n  {\n    \"name\": \"Parchment\",\n    \"hex\": \"F1E9D2\"\n  },\n  {\n    \"name\": \"Blue Chalk\",\n    \"hex\": \"F1E9FF\"\n  },\n  {\n    \"name\": \"Mint Julep\",\n    \"hex\": \"F1EEC1\"\n  },\n  {\n    \"name\": \"Seashell\",\n    \"hex\": \"F1F1F1\"\n  },\n  {\n    \"name\": \"Saltpan\",\n    \"hex\": \"F1F7F2\"\n  },\n  {\n    \"name\": \"Tidal\",\n    \"hex\": \"F1FFAD\"\n  },\n  {\n    \"name\": \"Chiffon\",\n    \"hex\": \"F1FFC8\"\n  },\n  {\n    \"name\": \"Flamingo\",\n    \"hex\": \"F2552A\"\n  },\n  {\n    \"name\": \"Tangerine\",\n    \"hex\": \"F28500\"\n  },\n  {\n    \"name\": \"Mandys Pink\",\n    \"hex\": \"F2C3B2\"\n  },\n  {\n    \"name\": \"Concrete\",\n    \"hex\": \"F2F2F2\"\n  },\n  {\n    \"name\": \"Black Squeeze\",\n    \"hex\": \"F2FAFA\"\n  },\n  {\n    \"name\": \"Pomegranate\",\n    \"hex\": \"F34723\"\n  },\n  {\n    \"name\": \"Buttercup\",\n    \"hex\": \"F3AD16\"\n  },\n  {\n    \"name\": \"New Orleans\",\n    \"hex\": \"F3D69D\"\n  },\n  {\n    \"name\": \"Vanilla Ice\",\n    \"hex\": \"F3D9DF\"\n  },\n  {\n    \"name\": \"Sidecar\",\n    \"hex\": \"F3E7BB\"\n  },\n  {\n    \"name\": \"Dawn Pink\",\n    \"hex\": \"F3E9E5\"\n  },\n  {\n    \"name\": \"Wheatfield\",\n    \"hex\": \"F3EDCF\"\n  },\n  {\n    \"name\": \"Canary\",\n    \"hex\": \"F3FB62\"\n  },\n  {\n    \"name\": \"Orinoco\",\n    \"hex\": \"F3FBD4\"\n  },\n  {\n    \"name\": \"Carla\",\n    \"hex\": \"F3FFD8\"\n  },\n  {\n    \"name\": \"Hollywood Cerise\",\n    \"hex\": \"F400A1\"\n  },\n  {\n    \"name\": \"Sandy brown\",\n    \"hex\": \"F4A460\"\n  },\n  {\n    \"name\": \"Saffron\",\n    \"hex\": \"F4C430\"\n  },\n  {\n    \"name\": \"Ripe Lemon\",\n    \"hex\": \"F4D81C\"\n  },\n  {\n    \"name\": \"Janna\",\n    \"hex\": \"F4EBD3\"\n  },\n  {\n    \"name\": \"Pampas\",\n    \"hex\": \"F4F2EE\"\n  },\n  {\n    \"name\": \"Wild Sand\",\n    \"hex\": \"F4F4F4\"\n  },\n  {\n    \"name\": \"Zircon\",\n    \"hex\": \"F4F8FF\"\n  },\n  {\n    \"name\": \"Froly\",\n    \"hex\": \"F57584\"\n  },\n  {\n    \"name\": \"Cream Can\",\n    \"hex\": \"F5C85C\"\n  },\n  {\n    \"name\": \"Manhattan\",\n    \"hex\": \"F5C999\"\n  },\n  {\n    \"name\": \"Maize\",\n    \"hex\": \"F5D5A0\"\n  },\n  {\n    \"name\": \"Wheat\",\n    \"hex\": \"F5DEB3\"\n  },\n  {\n    \"name\": \"Sandwisp\",\n    \"hex\": \"F5E7A2\"\n  },\n  {\n    \"name\": \"Pot Pourri\",\n    \"hex\": \"F5E7E2\"\n  },\n  {\n    \"name\": \"Albescent White\",\n    \"hex\": \"F5E9D3\"\n  },\n  {\n    \"name\": \"Soft Peach\",\n    \"hex\": \"F5EDEF\"\n  },\n  {\n    \"name\": \"Ecru White\",\n    \"hex\": \"F5F3E5\"\n  },\n  {\n    \"name\": \"Beige\",\n    \"hex\": \"F5F5DC\"\n  },\n  {\n    \"name\": \"Golden Fizz\",\n    \"hex\": \"F5FB3D\"\n  },\n  {\n    \"name\": \"Australian Mint\",\n    \"hex\": \"F5FFBE\"\n  },\n  {\n    \"name\": \"French Rose\",\n    \"hex\": \"F64A8A\"\n  },\n  {\n    \"name\": \"Brilliant Rose\",\n    \"hex\": \"F653A6\"\n  },\n  {\n    \"name\": \"Illusion\",\n    \"hex\": \"F6A4C9\"\n  },\n  {\n    \"name\": \"Merino\",\n    \"hex\": \"F6F0E6\"\n  },\n  {\n    \"name\": \"Black Haze\",\n    \"hex\": \"F6F7F7\"\n  },\n  {\n    \"name\": \"Spring Sun\",\n    \"hex\": \"F6FFDC\"\n  },\n  {\n    \"name\": \"Violet Red\",\n    \"hex\": \"F7468A\"\n  },\n  {\n    \"name\": \"Chilean Fire\",\n    \"hex\": \"F77703\"\n  },\n  {\n    \"name\": \"Persian Pink\",\n    \"hex\": \"F77FBE\"\n  },\n  {\n    \"name\": \"Rajah\",\n    \"hex\": \"F7B668\"\n  },\n  {\n    \"name\": \"Azalea\",\n    \"hex\": \"F7C8DA\"\n  },\n  {\n    \"name\": \"We Peep\",\n    \"hex\": \"F7DBE6\"\n  },\n  {\n    \"name\": \"Quarter Spanish White\",\n    \"hex\": \"F7F2E1\"\n  },\n  {\n    \"name\": \"Whisper\",\n    \"hex\": \"F7F5FA\"\n  },\n  {\n    \"name\": \"Snow Drift\",\n    \"hex\": \"F7FAF7\"\n  },\n  {\n    \"name\": \"Casablanca\",\n    \"hex\": \"F8B853\"\n  },\n  {\n    \"name\": \"Chantilly\",\n    \"hex\": \"F8C3DF\"\n  },\n  {\n    \"name\": \"Cherub\",\n    \"hex\": \"F8D9E9\"\n  },\n  {\n    \"name\": \"Marzipan\",\n    \"hex\": \"F8DB9D\"\n  },\n  {\n    \"name\": \"Energy Yellow\",\n    \"hex\": \"F8DD5C\"\n  },\n  {\n    \"name\": \"Givry\",\n    \"hex\": \"F8E4BF\"\n  },\n  {\n    \"name\": \"White Linen\",\n    \"hex\": \"F8F0E8\"\n  },\n  {\n    \"name\": \"Magnolia\",\n    \"hex\": \"F8F4FF\"\n  },\n  {\n    \"name\": \"Spring Wood\",\n    \"hex\": \"F8F6F1\"\n  },\n  {\n    \"name\": \"Coconut Cream\",\n    \"hex\": \"F8F7DC\"\n  },\n  {\n    \"name\": \"White Lilac\",\n    \"hex\": \"F8F7FC\"\n  },\n  {\n    \"name\": \"Desert Storm\",\n    \"hex\": \"F8F8F7\"\n  },\n  {\n    \"name\": \"Texas\",\n    \"hex\": \"F8F99C\"\n  },\n  {\n    \"name\": \"Corn Field\",\n    \"hex\": \"F8FACD\"\n  },\n  {\n    \"name\": \"Mimosa\",\n    \"hex\": \"F8FDD3\"\n  },\n  {\n    \"name\": \"Carnation\",\n    \"hex\": \"F95A61\"\n  },\n  {\n    \"name\": \"Saffron Mango\",\n    \"hex\": \"F9BF58\"\n  },\n  {\n    \"name\": \"Carousel Pink\",\n    \"hex\": \"F9E0ED\"\n  },\n  {\n    \"name\": \"Dairy Cream\",\n    \"hex\": \"F9E4BC\"\n  },\n  {\n    \"name\": \"Portica\",\n    \"hex\": \"F9E663\"\n  },\n  {\n    \"name\": \"Amour\",\n    \"hex\": \"F9EAF3\"\n  },\n  {\n    \"name\": \"Rum Swizzle\",\n    \"hex\": \"F9F8E4\"\n  },\n  {\n    \"name\": \"Dolly\",\n    \"hex\": \"F9FF8B\"\n  },\n  {\n    \"name\": \"Sugar Cane\",\n    \"hex\": \"F9FFF6\"\n  },\n  {\n    \"name\": \"Ecstasy\",\n    \"hex\": \"FA7814\"\n  },\n  {\n    \"name\": \"Tan Hide\",\n    \"hex\": \"FA9D5A\"\n  },\n  {\n    \"name\": \"Corvette\",\n    \"hex\": \"FAD3A2\"\n  },\n  {\n    \"name\": \"Peach Yellow\",\n    \"hex\": \"FADFAD\"\n  },\n  {\n    \"name\": \"Turbo\",\n    \"hex\": \"FAE600\"\n  },\n  {\n    \"name\": \"Astra\",\n    \"hex\": \"FAEAB9\"\n  },\n  {\n    \"name\": \"Champagne\",\n    \"hex\": \"FAECCC\"\n  },\n  {\n    \"name\": \"Linen\",\n    \"hex\": \"FAF0E6\"\n  },\n  {\n    \"name\": \"Fantasy\",\n    \"hex\": \"FAF3F0\"\n  },\n  {\n    \"name\": \"Citrine White\",\n    \"hex\": \"FAF7D6\"\n  },\n  {\n    \"name\": \"Alabaster\",\n    \"hex\": \"FAFAFA\"\n  },\n  {\n    \"name\": \"Hint of Yellow\",\n    \"hex\": \"FAFDE4\"\n  },\n  {\n    \"name\": \"Milan\",\n    \"hex\": \"FAFFA4\"\n  },\n  {\n    \"name\": \"Brink Pink\",\n    \"hex\": \"FB607F\"\n  },\n  {\n    \"name\": \"Geraldine\",\n    \"hex\": \"FB8989\"\n  },\n  {\n    \"name\": \"Lavender Rose\",\n    \"hex\": \"FBA0E3\"\n  },\n  {\n    \"name\": \"Sea Buckthorn\",\n    \"hex\": \"FBA129\"\n  },\n  {\n    \"name\": \"Sun\",\n    \"hex\": \"FBAC13\"\n  },\n  {\n    \"name\": \"Lavender Pink\",\n    \"hex\": \"FBAED2\"\n  },\n  {\n    \"name\": \"Rose Bud\",\n    \"hex\": \"FBB2A3\"\n  },\n  {\n    \"name\": \"Cupid\",\n    \"hex\": \"FBBEDA\"\n  },\n  {\n    \"name\": \"Classic Rose\",\n    \"hex\": \"FBCCE7\"\n  },\n  {\n    \"name\": \"Apricot Peach\",\n    \"hex\": \"FBCEB1\"\n  },\n  {\n    \"name\": \"Banana Mania\",\n    \"hex\": \"FBE7B2\"\n  },\n  {\n    \"name\": \"Marigold Yellow\",\n    \"hex\": \"FBE870\"\n  },\n  {\n    \"name\": \"Festival\",\n    \"hex\": \"FBE96C\"\n  },\n  {\n    \"name\": \"Sweet Corn\",\n    \"hex\": \"FBEA8C\"\n  },\n  {\n    \"name\": \"Candy Corn\",\n    \"hex\": \"FBEC5D\"\n  },\n  {\n    \"name\": \"Hint of Red\",\n    \"hex\": \"FBF9F9\"\n  },\n  {\n    \"name\": \"Shalimar\",\n    \"hex\": \"FBFFBA\"\n  },\n  {\n    \"name\": \"Shocking Pink\",\n    \"hex\": \"FC0FC0\"\n  },\n  {\n    \"name\": \"Tickle Me Pink\",\n    \"hex\": \"FC80A5\"\n  },\n  {\n    \"name\": \"Tree Poppy\",\n    \"hex\": \"FC9C1D\"\n  },\n  {\n    \"name\": \"Lightning Yellow\",\n    \"hex\": \"FCC01E\"\n  },\n  {\n    \"name\": \"Goldenrod\",\n    \"hex\": \"FCD667\"\n  },\n  {\n    \"name\": \"Candlelight\",\n    \"hex\": \"FCD917\"\n  },\n  {\n    \"name\": \"Cherokee\",\n    \"hex\": \"FCDA98\"\n  },\n  {\n    \"name\": \"Double Pearl Lusta\",\n    \"hex\": \"FCF4D0\"\n  },\n  {\n    \"name\": \"Pearl Lusta\",\n    \"hex\": \"FCF4DC\"\n  },\n  {\n    \"name\": \"Vista White\",\n    \"hex\": \"FCF8F7\"\n  },\n  {\n    \"name\": \"Bianca\",\n    \"hex\": \"FCFBF3\"\n  },\n  {\n    \"name\": \"Moon Glow\",\n    \"hex\": \"FCFEDA\"\n  },\n  {\n    \"name\": \"China Ivory\",\n    \"hex\": \"FCFFE7\"\n  },\n  {\n    \"name\": \"Ceramic\",\n    \"hex\": \"FCFFF9\"\n  },\n  {\n    \"name\": \"Torch Red\",\n    \"hex\": \"FD0E35\"\n  },\n  {\n    \"name\": \"Wild Watermelon\",\n    \"hex\": \"FD5B78\"\n  },\n  {\n    \"name\": \"Crusta\",\n    \"hex\": \"FD7B33\"\n  },\n  {\n    \"name\": \"Sorbus\",\n    \"hex\": \"FD7C07\"\n  },\n  {\n    \"name\": \"Sweet Pink\",\n    \"hex\": \"FD9FA2\"\n  },\n  {\n    \"name\": \"Light Apricot\",\n    \"hex\": \"FDD5B1\"\n  },\n  {\n    \"name\": \"Pig Pink\",\n    \"hex\": \"FDD7E4\"\n  },\n  {\n    \"name\": \"Cinderella\",\n    \"hex\": \"FDE1DC\"\n  },\n  {\n    \"name\": \"Golden Glow\",\n    \"hex\": \"FDE295\"\n  },\n  {\n    \"name\": \"Lemon\",\n    \"hex\": \"FDE910\"\n  },\n  {\n    \"name\": \"Old Lace\",\n    \"hex\": \"FDF5E6\"\n  },\n  {\n    \"name\": \"Half Colonial White\",\n    \"hex\": \"FDF6D3\"\n  },\n  {\n    \"name\": \"Drover\",\n    \"hex\": \"FDF7AD\"\n  },\n  {\n    \"name\": \"Pale Prim\",\n    \"hex\": \"FDFEB8\"\n  },\n  {\n    \"name\": \"Cumulus\",\n    \"hex\": \"FDFFD5\"\n  },\n  {\n    \"name\": \"Persian Rose\",\n    \"hex\": \"FE28A2\"\n  },\n  {\n    \"name\": \"Sunset Orange\",\n    \"hex\": \"FE4C40\"\n  },\n  {\n    \"name\": \"Bittersweet\",\n    \"hex\": \"FE6F5E\"\n  },\n  {\n    \"name\": \"California\",\n    \"hex\": \"FE9D04\"\n  },\n  {\n    \"name\": \"Yellow Sea\",\n    \"hex\": \"FEA904\"\n  },\n  {\n    \"name\": \"Melon\",\n    \"hex\": \"FEBAAD\"\n  },\n  {\n    \"name\": \"Bright Sun\",\n    \"hex\": \"FED33C\"\n  },\n  {\n    \"name\": \"Dandelion\",\n    \"hex\": \"FED85D\"\n  },\n  {\n    \"name\": \"Salomie\",\n    \"hex\": \"FEDB8D\"\n  },\n  {\n    \"name\": \"Cape Honey\",\n    \"hex\": \"FEE5AC\"\n  },\n  {\n    \"name\": \"Remy\",\n    \"hex\": \"FEEBF3\"\n  },\n  {\n    \"name\": \"Oasis\",\n    \"hex\": \"FEEFCE\"\n  },\n  {\n    \"name\": \"Bridesmaid\",\n    \"hex\": \"FEF0EC\"\n  },\n  {\n    \"name\": \"Beeswax\",\n    \"hex\": \"FEF2C7\"\n  },\n  {\n    \"name\": \"Bleach White\",\n    \"hex\": \"FEF3D8\"\n  },\n  {\n    \"name\": \"Pipi\",\n    \"hex\": \"FEF4CC\"\n  },\n  {\n    \"name\": \"Half Spanish White\",\n    \"hex\": \"FEF4DB\"\n  },\n  {\n    \"name\": \"Wisp Pink\",\n    \"hex\": \"FEF4F8\"\n  },\n  {\n    \"name\": \"Provincial Pink\",\n    \"hex\": \"FEF5F1\"\n  },\n  {\n    \"name\": \"Half Dutch White\",\n    \"hex\": \"FEF7DE\"\n  },\n  {\n    \"name\": \"Solitaire\",\n    \"hex\": \"FEF8E2\"\n  },\n  {\n    \"name\": \"White Pointer\",\n    \"hex\": \"FEF8FF\"\n  },\n  {\n    \"name\": \"Off Yellow\",\n    \"hex\": \"FEF9E3\"\n  },\n  {\n    \"name\": \"Orange White\",\n    \"hex\": \"FEFCED\"\n  },\n  {\n    \"name\": \"Red\",\n    \"hex\": \"FF0000\"\n  },\n  {\n    \"name\": \"Rose\",\n    \"hex\": \"FF007F\"\n  },\n  {\n    \"name\": \"Purple Pizzazz\",\n    \"hex\": \"FF00CC\"\n  },\n  {\n    \"name\": \"Magenta / Fuchsia\",\n    \"hex\": \"FF00FF\"\n  },\n  {\n    \"name\": \"Scarlet\",\n    \"hex\": \"FF2400\"\n  },\n  {\n    \"name\": \"Wild Strawberry\",\n    \"hex\": \"FF3399\"\n  },\n  {\n    \"name\": \"Razzle Dazzle Rose\",\n    \"hex\": \"FF33CC\"\n  },\n  {\n    \"name\": \"Radical Red\",\n    \"hex\": \"FF355E\"\n  },\n  {\n    \"name\": \"Red Orange\",\n    \"hex\": \"FF3F34\"\n  },\n  {\n    \"name\": \"Coral Red\",\n    \"hex\": \"FF4040\"\n  },\n  {\n    \"name\": \"Vermilion\",\n    \"hex\": \"FF4D00\"\n  },\n  {\n    \"name\": \"International Orange\",\n    \"hex\": \"FF4F00\"\n  },\n  {\n    \"name\": \"Outrageous Orange\",\n    \"hex\": \"FF6037\"\n  },\n  {\n    \"name\": \"Blaze Orange\",\n    \"hex\": \"FF6600\"\n  },\n  {\n    \"name\": \"Pink Flamingo\",\n    \"hex\": \"FF66FF\"\n  },\n  {\n    \"name\": \"Orange\",\n    \"hex\": \"FF681F\"\n  },\n  {\n    \"name\": \"Hot Pink\",\n    \"hex\": \"FF69B4\"\n  },\n  {\n    \"name\": \"Persimmon\",\n    \"hex\": \"FF6B53\"\n  },\n  {\n    \"name\": \"Blush Pink\",\n    \"hex\": \"FF6FFF\"\n  },\n  {\n    \"name\": \"Burning Orange\",\n    \"hex\": \"FF7034\"\n  },\n  {\n    \"name\": \"Pumpkin\",\n    \"hex\": \"FF7518\"\n  },\n  {\n    \"name\": \"Flamenco\",\n    \"hex\": \"FF7D07\"\n  },\n  {\n    \"name\": \"Flush Orange\",\n    \"hex\": \"FF7F00\"\n  },\n  {\n    \"name\": \"Coral\",\n    \"hex\": \"FF7F50\"\n  },\n  {\n    \"name\": \"Salmon\",\n    \"hex\": \"FF8C69\"\n  },\n  {\n    \"name\": \"Pizazz\",\n    \"hex\": \"FF9000\"\n  },\n  {\n    \"name\": \"West Side\",\n    \"hex\": \"FF910F\"\n  },\n  {\n    \"name\": \"Pink Salmon\",\n    \"hex\": \"FF91A4\"\n  },\n  {\n    \"name\": \"Neon Carrot\",\n    \"hex\": \"FF9933\"\n  },\n  {\n    \"name\": \"Atomic Tangerine\",\n    \"hex\": \"FF9966\"\n  },\n  {\n    \"name\": \"Vivid Tangerine\",\n    \"hex\": \"FF9980\"\n  },\n  {\n    \"name\": \"Sunshade\",\n    \"hex\": \"FF9E2C\"\n  },\n  {\n    \"name\": \"Orange Peel\",\n    \"hex\": \"FFA000\"\n  },\n  {\n    \"name\": \"Mona Lisa\",\n    \"hex\": \"FFA194\"\n  },\n  {\n    \"name\": \"Web Orange\",\n    \"hex\": \"FFA500\"\n  },\n  {\n    \"name\": \"Carnation Pink\",\n    \"hex\": \"FFA6C9\"\n  },\n  {\n    \"name\": \"Hit Pink\",\n    \"hex\": \"FFAB81\"\n  },\n  {\n    \"name\": \"Yellow Orange\",\n    \"hex\": \"FFAE42\"\n  },\n  {\n    \"name\": \"Cornflower Lilac\",\n    \"hex\": \"FFB0AC\"\n  },\n  {\n    \"name\": \"Sundown\",\n    \"hex\": \"FFB1B3\"\n  },\n  {\n    \"name\": \"My Sin\",\n    \"hex\": \"FFB31F\"\n  },\n  {\n    \"name\": \"Texas Rose\",\n    \"hex\": \"FFB555\"\n  },\n  {\n    \"name\": \"Cotton Candy\",\n    \"hex\": \"FFB7D5\"\n  },\n  {\n    \"name\": \"Macaroni and Cheese\",\n    \"hex\": \"FFB97B\"\n  },\n  {\n    \"name\": \"Selective Yellow\",\n    \"hex\": \"FFBA00\"\n  },\n  {\n    \"name\": \"Koromiko\",\n    \"hex\": \"FFBD5F\"\n  },\n  {\n    \"name\": \"Amber\",\n    \"hex\": \"FFBF00\"\n  },\n  {\n    \"name\": \"Wax Flower\",\n    \"hex\": \"FFC0A8\"\n  },\n  {\n    \"name\": \"Pink\",\n    \"hex\": \"FFC0CB\"\n  },\n  {\n    \"name\": \"Your Pink\",\n    \"hex\": \"FFC3C0\"\n  },\n  {\n    \"name\": \"Supernova\",\n    \"hex\": \"FFC901\"\n  },\n  {\n    \"name\": \"Flesh\",\n    \"hex\": \"FFCBA4\"\n  },\n  {\n    \"name\": \"Sunglow\",\n    \"hex\": \"FFCC33\"\n  },\n  {\n    \"name\": \"Golden Tainoi\",\n    \"hex\": \"FFCC5C\"\n  },\n  {\n    \"name\": \"Peach Orange\",\n    \"hex\": \"FFCC99\"\n  },\n  {\n    \"name\": \"Chardonnay\",\n    \"hex\": \"FFCD8C\"\n  },\n  {\n    \"name\": \"Pastel Pink\",\n    \"hex\": \"FFD1DC\"\n  },\n  {\n    \"name\": \"Romantic\",\n    \"hex\": \"FFD2B7\"\n  },\n  {\n    \"name\": \"Grandis\",\n    \"hex\": \"FFD38C\"\n  },\n  {\n    \"name\": \"Gold\",\n    \"hex\": \"FFD700\"\n  },\n  {\n    \"name\": \"School bus Yellow\",\n    \"hex\": \"FFD800\"\n  },\n  {\n    \"name\": \"Cosmos\",\n    \"hex\": \"FFD8D9\"\n  },\n  {\n    \"name\": \"Mustard\",\n    \"hex\": \"FFDB58\"\n  },\n  {\n    \"name\": \"Peach Schnapps\",\n    \"hex\": \"FFDCD6\"\n  },\n  {\n    \"name\": \"Caramel\",\n    \"hex\": \"FFDDAF\"\n  },\n  {\n    \"name\": \"Tuft Bush\",\n    \"hex\": \"FFDDCD\"\n  },\n  {\n    \"name\": \"Watusi\",\n    \"hex\": \"FFDDCF\"\n  },\n  {\n    \"name\": \"Pink Lace\",\n    \"hex\": \"FFDDF4\"\n  },\n  {\n    \"name\": \"Navajo White\",\n    \"hex\": \"FFDEAD\"\n  },\n  {\n    \"name\": \"Frangipani\",\n    \"hex\": \"FFDEB3\"\n  },\n  {\n    \"name\": \"Pippin\",\n    \"hex\": \"FFE1DF\"\n  },\n  {\n    \"name\": \"Pale Rose\",\n    \"hex\": \"FFE1F2\"\n  },\n  {\n    \"name\": \"Negroni\",\n    \"hex\": \"FFE2C5\"\n  },\n  {\n    \"name\": \"Cream Brulee\",\n    \"hex\": \"FFE5A0\"\n  },\n  {\n    \"name\": \"Peach\",\n    \"hex\": \"FFE5B4\"\n  },\n  {\n    \"name\": \"Tequila\",\n    \"hex\": \"FFE6C7\"\n  },\n  {\n    \"name\": \"Kournikova\",\n    \"hex\": \"FFE772\"\n  },\n  {\n    \"name\": \"Sandy Beach\",\n    \"hex\": \"FFEAC8\"\n  },\n  {\n    \"name\": \"Karry\",\n    \"hex\": \"FFEAD4\"\n  },\n  {\n    \"name\": \"Broom\",\n    \"hex\": \"FFEC13\"\n  },\n  {\n    \"name\": \"Colonial White\",\n    \"hex\": \"FFEDBC\"\n  },\n  {\n    \"name\": \"Derby\",\n    \"hex\": \"FFEED8\"\n  },\n  {\n    \"name\": \"Vis Vis\",\n    \"hex\": \"FFEFA1\"\n  },\n  {\n    \"name\": \"Egg White\",\n    \"hex\": \"FFEFC1\"\n  },\n  {\n    \"name\": \"Papaya Whip\",\n    \"hex\": \"FFEFD5\"\n  },\n  {\n    \"name\": \"Fair Pink\",\n    \"hex\": \"FFEFEC\"\n  },\n  {\n    \"name\": \"Peach Cream\",\n    \"hex\": \"FFF0DB\"\n  },\n  {\n    \"name\": \"Lavender blush\",\n    \"hex\": \"FFF0F5\"\n  },\n  {\n    \"name\": \"Gorse\",\n    \"hex\": \"FFF14F\"\n  },\n  {\n    \"name\": \"Buttermilk\",\n    \"hex\": \"FFF1B5\"\n  },\n  {\n    \"name\": \"Pink Lady\",\n    \"hex\": \"FFF1D8\"\n  },\n  {\n    \"name\": \"Forget Me Not\",\n    \"hex\": \"FFF1EE\"\n  },\n  {\n    \"name\": \"Tutu\",\n    \"hex\": \"FFF1F9\"\n  },\n  {\n    \"name\": \"Picasso\",\n    \"hex\": \"FFF39D\"\n  },\n  {\n    \"name\": \"Chardon\",\n    \"hex\": \"FFF3F1\"\n  },\n  {\n    \"name\": \"Paris Daisy\",\n    \"hex\": \"FFF46E\"\n  },\n  {\n    \"name\": \"Barley White\",\n    \"hex\": \"FFF4CE\"\n  },\n  {\n    \"name\": \"Egg Sour\",\n    \"hex\": \"FFF4DD\"\n  },\n  {\n    \"name\": \"Sazerac\",\n    \"hex\": \"FFF4E0\"\n  },\n  {\n    \"name\": \"Serenade\",\n    \"hex\": \"FFF4E8\"\n  },\n  {\n    \"name\": \"Chablis\",\n    \"hex\": \"FFF4F3\"\n  },\n  {\n    \"name\": \"Seashell Peach\",\n    \"hex\": \"FFF5EE\"\n  },\n  {\n    \"name\": \"Sauvignon\",\n    \"hex\": \"FFF5F3\"\n  },\n  {\n    \"name\": \"Milk Punch\",\n    \"hex\": \"FFF6D4\"\n  },\n  {\n    \"name\": \"Varden\",\n    \"hex\": \"FFF6DF\"\n  },\n  {\n    \"name\": \"Rose White\",\n    \"hex\": \"FFF6F5\"\n  },\n  {\n    \"name\": \"Baja White\",\n    \"hex\": \"FFF8D1\"\n  },\n  {\n    \"name\": \"Gin Fizz\",\n    \"hex\": \"FFF9E2\"\n  },\n  {\n    \"name\": \"Early Dawn\",\n    \"hex\": \"FFF9E6\"\n  },\n  {\n    \"name\": \"Lemon Chiffon\",\n    \"hex\": \"FFFACD\"\n  },\n  {\n    \"name\": \"Bridal Heath\",\n    \"hex\": \"FFFAF4\"\n  },\n  {\n    \"name\": \"Scotch Mist\",\n    \"hex\": \"FFFBDC\"\n  },\n  {\n    \"name\": \"Soapstone\",\n    \"hex\": \"FFFBF9\"\n  },\n  {\n    \"name\": \"Witch Haze\",\n    \"hex\": \"FFFC99\"\n  },\n  {\n    \"name\": \"Buttery White\",\n    \"hex\": \"FFFCEA\"\n  },\n  {\n    \"name\": \"Island Spice\",\n    \"hex\": \"FFFCEE\"\n  },\n  {\n    \"name\": \"Cream\",\n    \"hex\": \"FFFDD0\"\n  },\n  {\n    \"name\": \"Chilean Heath\",\n    \"hex\": \"FFFDE6\"\n  },\n  {\n    \"name\": \"Travertine\",\n    \"hex\": \"FFFDE8\"\n  },\n  {\n    \"name\": \"Orchid White\",\n    \"hex\": \"FFFDF3\"\n  },\n  {\n    \"name\": \"Quarter Pearl Lusta\",\n    \"hex\": \"FFFDF4\"\n  },\n  {\n    \"name\": \"Half and Half\",\n    \"hex\": \"FFFEE1\"\n  },\n  {\n    \"name\": \"Apricot White\",\n    \"hex\": \"FFFEEC\"\n  },\n  {\n    \"name\": \"Rice Cake\",\n    \"hex\": \"FFFEF0\"\n  },\n  {\n    \"name\": \"Black White\",\n    \"hex\": \"FFFEF6\"\n  },\n  {\n    \"name\": \"Romance\",\n    \"hex\": \"FFFEFD\"\n  },\n  {\n    \"name\": \"Yellow\",\n    \"hex\": \"FFFF00\"\n  },\n  {\n    \"name\": \"Laser Lemon\",\n    \"hex\": \"FFFF66\"\n  },\n  {\n    \"name\": \"Pale Canary\",\n    \"hex\": \"FFFF99\"\n  },\n  {\n    \"name\": \"Portafino\",\n    \"hex\": \"FFFFB4\"\n  },\n  {\n    \"name\": \"Ivory\",\n    \"hex\": \"FFFFF0\"\n  },\n  {\n    \"name\": \"White\",\n    \"hex\": \"FFFFFF\"\n  }\n]\n", "module.exports = [{\n  \"name\": \"Mahogany\",\n  \"hex\": \"#CD4A4A\"\n},{\n  \"name\": \"Fuzzy Wuzzy Brown\",\n  \"hex\": \"#CC6666\"\n},{\n  \"name\": \"Chestnut\",\n  \"hex\": \"#BC5D58\"\n},{\n  \"name\": \"Red Orange\",\n  \"hex\": \"#FF5349\"\n},{\n  \"name\": \"Sunset Orange\",\n  \"hex\": \"#FD5E53\"\n},{\n  \"name\": \"Bittersweet\",\n  \"hex\": \"#FD7C6E\"\n},{\n  \"name\": \"Melon\",\n  \"hex\": \"#FDBCB4\"\n},{\n  \"name\": \"Outrageous Orange\",\n  \"hex\": \"#FF6E4A\"\n},{\n  \"name\": \"Vivid Tangerine\",\n  \"hex\": \"#FFA089\"\n},{\n  \"name\": \"Burnt Sienna\",\n  \"hex\": \"#EA7E5D\"\n},{\n  \"name\": \"Brown\",\n  \"hex\": \"#B4674D\"\n},{\n  \"name\": \"Sepia\",\n  \"hex\": \"#A5694F\"\n},{\n  \"name\": \"Orange\",\n  \"hex\": \"#FF7538\"\n},{\n  \"name\": \"Burnt Orange\",\n  \"hex\": \"#FF7F49\"\n},{\n  \"name\": \"Copper\",\n  \"hex\": \"#DD9475\"\n},{\n  \"name\": \"Mango Tango\",\n  \"hex\": \"#FF8243\"\n},{\n  \"name\": \"Atomic Tangerine\",\n  \"hex\": \"#FFA474\"\n},{\n  \"name\": \"Beaver\",\n  \"hex\": \"#9F8170\"\n},{\n  \"name\": \"Antique Brass\",\n  \"hex\": \"#CD9575\"\n},{\n  \"name\": \"Desert Sand\",\n  \"hex\": \"#EFCDB8\"\n},{\n  \"name\": \"Raw Sienna\",\n  \"hex\": \"#D68A59\"\n},{\n  \"name\": \"Tumbleweed\",\n  \"hex\": \"#DEAA88\"\n},{\n  \"name\": \"Tan\",\n  \"hex\": \"#FAA76C\"\n},{\n  \"name\": \"Peach\",\n  \"hex\": \"#FFCFAB\"\n},{\n  \"name\": \"Macaroni and Cheese\",\n  \"hex\": \"#FFBD88\"\n},{\n  \"name\": \"Apricot\",\n  \"hex\": \"#FDD9B5\"\n},{\n  \"name\": \"Neon Carrot\",\n  \"hex\": \"#FFA343\"\n},{\n  \"name\": \"Almond\",\n  \"hex\": \"#EFDBC5\"\n},{\n  \"name\": \"Yellow Orange\",\n  \"hex\": \"#FFB653\"\n},{\n  \"name\": \"Gold\",\n  \"hex\": \"#E7C697\"\n},{\n  \"name\": \"Shadow\",\n  \"hex\": \"#8A795D\"\n},{\n  \"name\": \"Banana Mania\",\n  \"hex\": \"#FAE7B5\"\n},{\n  \"name\": \"Sunglow\",\n  \"hex\": \"#FFCF48\"\n},{\n  \"name\": \"Goldenrod\",\n  \"hex\": \"#FCD975\"\n},{\n  \"name\": \"Dandelion\",\n  \"hex\": \"#FDDB6D\"\n},{\n  \"name\": \"Yellow\",\n  \"hex\": \"#FCE883\"\n},{\n  \"name\": \"Green Yellow\",\n  \"hex\": \"#F0E891\"\n},{\n  \"name\": \"Spring Green\",\n  \"hex\": \"#ECEABE\"\n},{\n  \"name\": \"Olive Green\",\n  \"hex\": \"#BAB86C\"\n},{\n  \"name\": \"Laser Lemon\",\n  \"hex\": \"#FDFC74\"\n},{\n  \"name\": \"Unmellow Yellow\",\n  \"hex\": \"#FDFC74\"\n},{\n  \"name\": \"Canary\",\n  \"hex\": \"#FFFF99\"\n},{\n  \"name\": \"Yellow Green\",\n  \"hex\": \"#C5E384\"\n},{\n  \"name\": \"Inch Worm\",\n  \"hex\": \"#B2EC5D\"\n},{\n  \"name\": \"Asparagus\",\n  \"hex\": \"#87A96B\"\n},{\n  \"name\": \"Granny Smith Apple\",\n  \"hex\": \"#A8E4A0\"\n},{\n  \"name\": \"Electric Lime\",\n  \"hex\": \"#1DF914\"\n},{\n  \"name\": \"Screamin Green\",\n  \"hex\": \"#76FF7A\"\n},{\n  \"name\": \"Fern\",\n  \"hex\": \"#71BC78\"\n},{\n  \"name\": \"Forest Green\",\n  \"hex\": \"#6DAE81\"\n},{\n  \"name\": \"Sea Green\",\n  \"hex\": \"#9FE2BF\"\n},{\n  \"name\": \"Green\",\n  \"hex\": \"#1CAC78\"\n},{\n  \"name\": \"Mountain Meadow\",\n  \"hex\": \"#30BA8F\"\n},{\n  \"name\": \"Shamrock\",\n  \"hex\": \"#45CEA2\"\n},{\n  \"name\": \"Jungle Green\",\n  \"hex\": \"#3BB08F\"\n},{\n  \"name\": \"Caribbean Green\",\n  \"hex\": \"#1CD3A2\"\n},{\n  \"name\": \"Tropical Rain Forest\",\n  \"hex\": \"#17806D\"\n},{\n  \"name\": \"Pine Green\",\n  \"hex\": \"#158078\"\n},{\n  \"name\": \"Robin Egg Blue\",\n  \"hex\": \"#1FCECB\"\n},{\n  \"name\": \"Aquamarine\",\n  \"hex\": \"#78DBE2\"\n},{\n  \"name\": \"Turquoise Blue\",\n  \"hex\": \"#77DDE7\"\n},{\n  \"name\": \"Sky Blue\",\n  \"hex\": \"#80DAEB\"\n},{\n  \"name\": \"Outer Space\",\n  \"hex\": \"#414A4C\"\n},{\n  \"name\": \"Blue Green\",\n  \"hex\": \"#199EBD\"\n},{\n  \"name\": \"Pacific Blue\",\n  \"hex\": \"#1CA9C9\"\n},{\n  \"name\": \"Cerulean\",\n  \"hex\": \"#1DACD6\"\n},{\n  \"name\": \"Cornflower\",\n  \"hex\": \"#9ACEEB\"\n},{\n  \"name\": \"Midnight Blue\",\n  \"hex\": \"#1A4876\"\n},{\n  \"name\": \"Navy Blue\",\n  \"hex\": \"#1974D2\"\n},{\n  \"name\": \"Denim\",\n  \"hex\": \"#2B6CC4\"\n},{\n  \"name\": \"Blue\",\n  \"hex\": \"#1F75FE\"\n},{\n  \"name\": \"Periwinkle\",\n  \"hex\": \"#C5D0E6\"\n},{\n  \"name\": \"Cadet Blue\",\n  \"hex\": \"#B0B7C6\"\n},{\n  \"name\": \"Indigo\",\n  \"hex\": \"#5D76CB\"\n},{\n  \"name\": \"Wild Blue Yonder\",\n  \"hex\": \"#A2ADD0\"\n},{\n  \"name\": \"Manatee\",\n  \"hex\": \"#979AAA\"\n},{\n  \"name\": \"Blue Bell\",\n  \"hex\": \"#ADADD6\"\n},{\n  \"name\": \"Blue Violet\",\n  \"hex\": \"#7366BD\"\n},{\n  \"name\": \"Purple Heart\",\n  \"hex\": \"#7442C8\"\n},{\n  \"name\": \"Royal Purple\",\n  \"hex\": \"#7851A9\"\n},{\n  \"name\": \"Purple Mountains\u2019 Majesty\",\n  \"hex\": \"#9D81BA\"\n},{\n  \"name\": \"Violet (Purple)\",\n  \"hex\": \"#926EAE\"\n},{\n  \"name\": \"Wisteria\",\n  \"hex\": \"#CDA4DE\"\n},{\n  \"name\": \"Vivid Violet\",\n  \"hex\": \"#8F509D\"\n},{\n  \"name\": \"Fuchsia\",\n  \"hex\": \"#C364C5\"\n},{\n  \"name\": \"Shocking Pink\",\n  \"hex\": \"#FB7EFD\"\n},{\n  \"name\": \"Pink Flamingo\",\n  \"hex\": \"#FC74FD\"\n},{\n  \"name\": \"Plum\",\n  \"hex\": \"#8E4585\"\n},{\n  \"name\": \"Hot Magenta\",\n  \"hex\": \"#FF1DCE\"\n},{\n  \"name\": \"Purple Pizzazz\",\n  \"hex\": \"#FF1DCE\"\n},{\n  \"name\": \"Razzle Dazzle Rose\",\n  \"hex\": \"#FF48D0\"\n},{\n  \"name\": \"Orchid\",\n  \"hex\": \"#E6A8D7\"\n},{\n  \"name\": \"Red Violet\",\n  \"hex\": \"#C0448F\"\n},{\n  \"name\": \"Eggplant\",\n  \"hex\": \"#6E5160\"\n},{\n  \"name\": \"Cerise\",\n  \"hex\": \"#DD4492\"\n},{\n  \"name\": \"Wild Strawberry\",\n  \"hex\": \"#FF43A4\"\n},{\n  \"name\": \"Magenta\",\n  \"hex\": \"#F664AF\"\n},{\n  \"name\": \"Lavender\",\n  \"hex\": \"#FCB4D5\"\n},{\n  \"name\": \"Cotton Candy\",\n  \"hex\": \"#FFBCD9\"\n},{\n  \"name\": \"Violet Red\",\n  \"hex\": \"#F75394\"\n},{\n  \"name\": \"Carnation Pink\",\n  \"hex\": \"#FFAACC\"\n},{\n  \"name\": \"Razzmatazz\",\n  \"hex\": \"#E3256B\"\n},{\n  \"name\": \"Piggy Pink\",\n  \"hex\": \"#FDD7E4\"\n},{\n  \"name\": \"Jazzberry Jam\",\n  \"hex\": \"#CA3767\"\n},{\n  \"name\": \"Blush\",\n  \"hex\": \"#DE5D83\"\n},{\n  \"name\": \"Tickle Me Pink\",\n  \"hex\": \"#FC89AC\"\n},{\n  \"name\": \"Pink Sherbet\",\n  \"hex\": \"#F780A1\"\n},{\n  \"name\": \"Maroon\",\n  \"hex\": \"#C8385A\"\n},{\n  \"name\": \"Red\",\n  \"hex\": \"#EE204D\"\n},{\n  \"name\": \"Radical Red\",\n  \"hex\": \"#FF496C\"\n},{\n  \"name\": \"Mauvelous\",\n  \"hex\": \"#EF98AA\"\n},{\n  \"name\": \"Wild Watermelon\",\n  \"hex\": \"#FC6C85\"\n},{\n  \"name\": \"Scarlet\",\n  \"hex\": \"#FC2847\"\n},{\n  \"name\": \"Salmon\",\n  \"hex\": \"#FF9BAA\"\n},{\n  \"name\": \"Brick Red\",\n  \"hex\": \"#CB4154\"\n},{\n  \"name\": \"White\",\n  \"hex\": \"#EDEDED\"\n},{\n  \"name\": \"Timberwolf\",\n  \"hex\": \"#DBD7D2\"\n},{\n  \"name\": \"Silver\",\n  \"hex\": \"#CDC5C2\"\n},{\n  \"name\": \"Gray\",\n  \"hex\": \"#95918C\"\n},{\n  \"name\": \"Black\",\n  \"hex\": \"#232323\"\n}]\n", "module.exports = [\n  { name: 'red', hex: '#FF0000' },\n  { name: 'orange', hex: '#FFA500' },\n  { name: 'yellow', hex: '#FFFF00' },\n  { name: 'green', hex: '#008000' },\n  { name: 'blue', hex: '#0000FF' },\n  { name: 'indigo', hex: '#4B0082' },\n  { name: 'violet', hex: '#EE82EE' }\n]\n", "module.exports = [{\n  name: 'indigo',\n  hex: '#4b0082'\n}, {\n  name: 'gold',\n  hex: '#ffd700'\n}, {\n  name: 'hotpink',\n  hex: '#ff69b4'\n}, {\n  name: 'firebrick',\n  hex: '#b22222'\n}, {\n  name: 'indianred',\n  hex: '#cd5c5c'\n}, {\n  name: 'yellow',\n  hex: '#ffff00'\n}, {\n  name: 'mistyrose',\n  hex: '#ffe4e1'\n}, {\n  name: 'darkolivegreen',\n  hex: '#556b2f'\n}, {\n  name: 'olive',\n  hex: '#808000'\n}, {\n  name: 'darkseagreen',\n  hex: '#8fbc8f'\n}, {\n  name: 'pink',\n  hex: '#ffc0cb'\n}, {\n  name: 'tomato',\n  hex: '#ff6347'\n}, {\n  name: 'lightcoral',\n  hex: '#f08080'\n}, {\n  name: 'orangered',\n  hex: '#ff4500'\n}, {\n  name: 'navajowhite',\n  hex: '#ffdead'\n}, {\n  name: 'lime',\n  hex: '#00ff00'\n}, {\n  name: 'palegreen',\n  hex: '#98fb98'\n}, {\n  name: 'darkslategrey',\n  hex: '#2f4f4f'\n}, {\n  name: 'greenyellow',\n  hex: '#adff2f'\n}, {\n  name: 'burlywood',\n  hex: '#deb887'\n}, {\n  name: 'seashell',\n  hex: '#fff5ee'\n}, {\n  name: 'mediumspringgreen',\n  hex: '#00fa9a'\n}, {\n  name: 'fuchsia',\n  hex: '#ff00ff'\n}, {\n  name: 'papayawhip',\n  hex: '#ffefd5'\n}, {\n  name: 'blanchedalmond',\n  hex: '#ffebcd'\n}, {\n  name: 'chartreuse',\n  hex: '#7fff00'\n}, {\n  name: 'dimgray',\n  hex: '#696969'\n}, {\n  name: 'black',\n  hex: '#000000'\n}, {\n  name: 'peachpuff',\n  hex: '#ffdab9'\n}, {\n  name: 'springgreen',\n  hex: '#00ff7f'\n}, {\n  name: 'aquamarine',\n  hex: '#7fffd4'\n}, {\n  name: 'white',\n  hex: '#ffffff'\n}, {\n  name: 'orange',\n  hex: '#ffa500'\n}, {\n  name: 'lightsalmon',\n  hex: '#ffa07a'\n}, {\n  name: 'darkslategray',\n  hex: '#2f4f4f'\n}, {\n  name: 'brown',\n  hex: '#a52a2a'\n}, {\n  name: 'ivory',\n  hex: '#fffff0'\n}, {\n  name: 'dodgerblue',\n  hex: '#1e90ff'\n}, {\n  name: 'peru',\n  hex: '#cd853f'\n}, {\n  name: 'lawngreen',\n  hex: '#7cfc00'\n}, {\n  name: 'chocolate',\n  hex: '#d2691e'\n}, {\n  name: 'crimson',\n  hex: '#dc143c'\n}, {\n  name: 'forestgreen',\n  hex: '#228b22'\n}, {\n  name: 'darkgrey',\n  hex: '#a9a9a9'\n}, {\n  name: 'lightseagreen',\n  hex: '#20b2aa'\n}, {\n  name: 'cyan',\n  hex: '#00ffff'\n}, {\n  name: 'mintcream',\n  hex: '#f5fffa'\n}, {\n  name: 'silver',\n  hex: '#c0c0c0'\n}, {\n  name: 'antiquewhite',\n  hex: '#faebd7'\n}, {\n  name: 'mediumorchid',\n  hex: '#ba55d3'\n}, {\n  name: 'skyblue',\n  hex: '#87ceeb'\n}, {\n  name: 'gray',\n  hex: '#808080'\n}, {\n  name: 'darkturquoise',\n  hex: '#00ced1'\n}, {\n  name: 'goldenrod',\n  hex: '#daa520'\n}, {\n  name: 'darkgreen',\n  hex: '#006400'\n}, {\n  name: 'floralwhite',\n  hex: '#fffaf0'\n}, {\n  name: 'darkviolet',\n  hex: '#9400d3'\n}, {\n  name: 'darkgray',\n  hex: '#a9a9a9'\n}, {\n  name: 'moccasin',\n  hex: '#ffe4b5'\n}, {\n  name: 'saddlebrown',\n  hex: '#8b4513'\n}, {\n  name: 'grey',\n  hex: '#808080'\n}, {\n  name: 'darkslateblue',\n  hex: '#483d8b'\n}, {\n  name: 'lightskyblue',\n  hex: '#87cefa'\n}, {\n  name: 'lightpink',\n  hex: '#ffb6c1'\n}, {\n  name: 'mediumvioletred',\n  hex: '#c71585'\n}, {\n  name: 'slategrey',\n  hex: '#708090'\n}, {\n  name: 'red',\n  hex: '#ff0000'\n}, {\n  name: 'deeppink',\n  hex: '#ff1493'\n}, {\n  name: 'limegreen',\n  hex: '#32cd32'\n}, {\n  name: 'darkmagenta',\n  hex: '#8b008b'\n}, {\n  name: 'palegoldenrod',\n  hex: '#eee8aa'\n}, {\n  name: 'plum',\n  hex: '#dda0dd'\n}, {\n  name: 'turquoise',\n  hex: '#40e0d0'\n}, {\n  name: 'lightgrey',\n  hex: '#d3d3d3'\n}, {\n  name: 'lightgoldenrodyellow',\n  hex: '#fafad2'\n}, {\n  name: 'darkgoldenrod',\n  hex: '#b8860b'\n}, {\n  name: 'lavender',\n  hex: '#e6e6fa'\n}, {\n  name: 'maroon',\n  hex: '#800000'\n}, {\n  name: 'yellowgreen',\n  hex: '#9acd32'\n}, {\n  name: 'sandybrown',\n  hex: '#f4a460'\n}, {\n  name: 'thistle',\n  hex: '#d8bfd8'\n}, {\n  name: 'violet',\n  hex: '#ee82ee'\n}, {\n  name: 'navy',\n  hex: '#000080'\n}, {\n  name: 'magenta',\n  hex: '#ff00ff'\n}, {\n  name: 'dimgrey',\n  hex: '#696969'\n}, {\n  name: 'tan',\n  hex: '#d2b48c'\n}, {\n  name: 'rosybrown',\n  hex: '#bc8f8f'\n}, {\n  name: 'olivedrab',\n  hex: '#6b8e23'\n}, {\n  name: 'blue',\n  hex: '#0000ff'\n}, {\n  name: 'lightblue',\n  hex: '#add8e6'\n}, {\n  name: 'ghostwhite',\n  hex: '#f8f8ff'\n}, {\n  name: 'honeydew',\n  hex: '#f0fff0'\n}, {\n  name: 'cornflowerblue',\n  hex: '#6495ed'\n}, {\n  name: 'slateblue',\n  hex: '#6a5acd'\n}, {\n  name: 'linen',\n  hex: '#faf0e6'\n}, {\n  name: 'darkblue',\n  hex: '#00008b'\n}, {\n  name: 'powderblue',\n  hex: '#b0e0e6'\n}, {\n  name: 'seagreen',\n  hex: '#2e8b57'\n}, {\n  name: 'darkkhaki',\n  hex: '#bdb76b'\n}, {\n  name: 'snow',\n  hex: '#fffafa'\n}, {\n  name: 'sienna',\n  hex: '#a0522d'\n}, {\n  name: 'mediumblue',\n  hex: '#0000cd'\n}, {\n  name: 'royalblue',\n  hex: '#4169e1'\n}, {\n  name: 'lightcyan',\n  hex: '#e0ffff'\n}, {\n  name: 'green',\n  hex: '#008000'\n}, {\n  name: 'mediumpurple',\n  hex: '#9370db'\n}, {\n  name: 'midnightblue',\n  hex: '#191970'\n}, {\n  name: 'cornsilk',\n  hex: '#fff8dc'\n}, {\n  name: 'paleturquoise',\n  hex: '#afeeee'\n}, {\n  name: 'bisque',\n  hex: '#ffe4c4'\n}, {\n  name: 'slategray',\n  hex: '#708090'\n}, {\n  name: 'darkcyan',\n  hex: '#008b8b'\n}, {\n  name: 'khaki',\n  hex: '#f0e68c'\n}, {\n  name: 'wheat',\n  hex: '#f5deb3'\n}, {\n  name: 'teal',\n  hex: '#008080'\n}, {\n  name: 'darkorchid',\n  hex: '#9932cc'\n}, {\n  name: 'deepskyblue',\n  hex: '#00bfff'\n}, {\n  name: 'salmon',\n  hex: '#fa8072'\n}, {\n  name: 'darkred',\n  hex: '#8b0000'\n}, {\n  name: 'steelblue',\n  hex: '#4682b4'\n}, {\n  name: 'palevioletred',\n  hex: '#db7093'\n}, {\n  name: 'lightslategray',\n  hex: '#778899'\n}, {\n  name: 'aliceblue',\n  hex: '#f0f8ff'\n}, {\n  name: 'lightslategrey',\n  hex: '#778899'\n}, {\n  name: 'lightgreen',\n  hex: '#90ee90'\n}, {\n  name: 'orchid',\n  hex: '#da70d6'\n}, {\n  name: 'gainsboro',\n  hex: '#dcdcdc'\n}, {\n  name: 'mediumseagreen',\n  hex: '#3cb371'\n}, {\n  name: 'lightgray',\n  hex: '#d3d3d3'\n}, {\n  name: 'mediumturquoise',\n  hex: '#48d1cc'\n}, {\n  name: 'lemonchiffon',\n  hex: '#fffacd'\n}, {\n  name: 'cadetblue',\n  hex: '#5f9ea0'\n}, {\n  name: 'lightyellow',\n  hex: '#ffffe0'\n}, {\n  name: 'lavenderblush',\n  hex: '#fff0f5'\n}, {\n  name: 'coral',\n  hex: '#ff7f50'\n}, {\n  name: 'purple',\n  hex: '#800080'\n}, {\n  name: 'aqua',\n  hex: '#00ffff'\n}, {\n  name: 'whitesmoke',\n  hex: '#f5f5f5'\n}, {\n  name: 'mediumslateblue',\n  hex: '#7b68ee'\n}, {\n  name: 'darkorange',\n  hex: '#ff8c00'\n}, {\n  name: 'mediumaquamarine',\n  hex: '#66cdaa'\n}, {\n  name: 'darksalmon',\n  hex: '#e9967a'\n}, {\n  name: 'beige',\n  hex: '#f5f5dc'\n}, {\n  name: 'blueviolet',\n  hex: '#8a2be2'\n}, {\n  name: 'azure',\n  hex: '#f0ffff'\n}, {\n  name: 'lightsteelblue',\n  hex: '#b0c4de'\n}, {\n  name: 'oldlace',\n  hex: '#fdf5e6'\n}]\n", "\"use strict\";\n\nvar chroma = require('chroma-js')\nvar WeakMap = require(\"es6-weak-map\")\n\n// These `require` statements are all explicit\n// to keep the browserify build from breaking\nvar lists = {\n  basic: require('./lib/colors/basic'),\n  html: require('./lib/colors/html'),\n  ntc: require('./lib/colors/ntc'),\n  pantone: require('./lib/colors/pantone'),\n  roygbiv: require('./lib/colors/roygbiv'),\n  x11: require('./lib/colors/x11')\n}\n\nvar cache = new WeakMap()\nvar namer = module.exports = function(color, options) {\n  options = options || {}\n\n  var cacheKey = {color, options}\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey)\n  }\n\n  var deltaE = String(options.distance).toLowerCase() === 'deltae';\n  color = chroma(color)\n  var results = {}\n  for (var key in lists) {\n    if (options.pick && options.pick.indexOf(key) === -1) {\n      continue\n    }\n    if (options.omit && options.omit.indexOf(key) !== -1) {\n      continue\n    }\n    results[key] = lists[key]\n      .map (function(name) {\n        name.distance = deltaE ? chroma.deltaE(color, chroma(name.hex)) : chroma.distance(color, chroma(name.hex))\n        return name\n      })\n      .sort (function(a, b) {\n        return a.distance - b.distance\n      })\n  }\n  cache.set(cacheKey, results)\n  return results\n}\n\nnamer.chroma = chroma\nnamer.lists = lists\n", "export default require(\"./node_modules/color-namer/index.js\");"],
  "mappings": "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MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,MAAM;AAAA,MACN,KAAK;AAAA,IACP,CAAC;AAAA;AAAA;;;ACzbD;AAAA;AAAA;AAEA,QAAI,SAAS;AACb,QAAI,WAAU;AAId,QAAI,QAAQ;AAAA,MACV,OAAO;AAAA,MACP,MAAM;AAAA,MACN,KAAK;AAAA,MACL,SAAS;AAAA,MACT,SAAS;AAAA,MACT,KAAK;AAAA,IACP;AAEA,QAAI,QAAQ,IAAI,SAAQ;AACxB,QAAI,QAAQ,OAAO,UAAU,SAAS,OAAO,SAAS;AACpD,gBAAU,WAAW,CAAC;AAEtB,UAAI,WAAW,EAAC,OAAO,QAAO;AAC9B,UAAI,MAAM,IAAI,QAAQ,GAAG;AACvB,eAAO,MAAM,IAAI,QAAQ;AAAA,MAC3B;AAEA,UAAI,SAAS,OAAO,QAAQ,QAAQ,EAAE,YAAY,MAAM;AACxD,cAAQ,OAAO,KAAK;AACpB,UAAI,UAAU,CAAC;AACf,eAAS,OAAO,OAAO;AACrB,YAAI,QAAQ,QAAQ,QAAQ,KAAK,QAAQ,GAAG,MAAM,IAAI;AACpD;AAAA,QACF;AACA,YAAI,QAAQ,QAAQ,QAAQ,KAAK,QAAQ,GAAG,MAAM,IAAI;AACpD;AAAA,QACF;AACA,gBAAQ,OAAO,MAAM,KAClB,IAAK,SAAS,MAAM;AACnB,eAAK,WAAW,SAAS,OAAO,OAAO,OAAO,OAAO,KAAK,GAAG,CAAC,IAAI,OAAO,SAAS,OAAO,OAAO,KAAK,GAAG,CAAC;AACzG,iBAAO;AAAA,QACT,CAAC,EACA,KAAM,SAAS,GAAG,GAAG;AACpB,iBAAO,EAAE,WAAW,EAAE;AAAA,QACxB,CAAC;AAAA,MACL;AACA,YAAM,IAAI,UAAU,OAAO;AAC3B,aAAO;AAAA,IACT;AAEA,UAAM,SAAS;AACf,UAAM,QAAQ;AAAA;AAAA;;;ACjDd,IAAO,sBAAQ;",
  "names": []
}
