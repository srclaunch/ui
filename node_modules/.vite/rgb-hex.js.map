{
  "version": 3,
  "sources": ["../rgb-hex/index.js", "dep:rgb-hex"],
  "sourcesContent": ["export default function rgbHex(red, green, blue, alpha) {\n\tconst isPercent = (red + (alpha || '')).toString().includes('%');\n\n\tif (typeof red === 'string') {\n\t\t[red, green, blue, alpha] = red.match(/(0?\\.?\\d{1,3})%?\\b/g).map(component => Number(component));\n\t} else if (alpha !== undefined) {\n\t\talpha = Number.parseFloat(alpha);\n\t}\n\n\tif (typeof red !== 'number' ||\n\t\ttypeof green !== 'number' ||\n\t\ttypeof blue !== 'number' ||\n\t\tred > 255 ||\n\t\tgreen > 255 ||\n\t\tblue > 255\n\t) {\n\t\tthrow new TypeError('Expected three numbers below 256');\n\t}\n\n\tif (typeof alpha === 'number') {\n\t\tif (!isPercent && alpha >= 0 && alpha <= 1) {\n\t\t\talpha = Math.round(255 * alpha);\n\t\t} else if (isPercent && alpha >= 0 && alpha <= 100) {\n\t\t\talpha = Math.round(255 * alpha / 100);\n\t\t} else {\n\t\t\tthrow new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);\n\t\t}\n\n\t\talpha = (alpha | 1 << 8).toString(16).slice(1); // eslint-disable-line no-mixed-operators\n\t} else {\n\t\talpha = '';\n\t}\n\n\t// TODO: Remove this ignore comment.\n\t// eslint-disable-next-line no-mixed-operators\n\treturn ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1) + alpha;\n}\n", "import d from \"./node_modules/rgb-hex/index.js\";export default d;"],
  "mappings": ";;;AAAe,gBAAgB,KAAK,OAAO,MAAM,OAAO;AACvD,QAAM,YAAa,OAAO,UAAS,KAAK,SAAS,EAAE,SAAS,GAAG;AAE/D,MAAI,OAAO,QAAQ,UAAU;AAC5B,KAAC,KAAK,OAAO,MAAM,KAAK,IAAI,IAAI,MAAM,qBAAqB,EAAE,IAAI,eAAa,OAAO,SAAS,CAAC;AAAA,EAChG,WAAW,UAAU,QAAW;AAC/B,YAAQ,OAAO,WAAW,KAAK;AAAA,EAChC;AAEA,MAAI,OAAO,QAAQ,YAClB,OAAO,UAAU,YACjB,OAAO,SAAS,YAChB,MAAM,OACN,QAAQ,OACR,OAAO,KACN;AACD,UAAM,IAAI,UAAU,kCAAkC;AAAA,EACvD;AAEA,MAAI,OAAO,UAAU,UAAU;AAC9B,QAAI,CAAC,aAAa,SAAS,KAAK,SAAS,GAAG;AAC3C,cAAQ,KAAK,MAAM,MAAM,KAAK;AAAA,IAC/B,WAAW,aAAa,SAAS,KAAK,SAAS,KAAK;AACnD,cAAQ,KAAK,MAAM,MAAM,QAAQ,GAAG;AAAA,IACrC,OAAO;AACN,YAAM,IAAI,UAAU,yBAAyB,oCAAoC;AAAA,IAClF;AAEA,YAAS,SAAQ,KAAK,GAAG,SAAS,EAAE,EAAE,MAAM,CAAC;AAAA,EAC9C,OAAO;AACN,YAAQ;AAAA,EACT;AAIA,SAAS,QAAO,SAAS,IAAI,OAAO,KAAM,KAAK,IAAI,SAAS,EAAE,EAAE,MAAM,CAAC,IAAI;AAC5E;;;ACpCgD,IAAO,kBAAQ;",
  "names": []
}
