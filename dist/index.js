var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value2) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value2 }) : obj[key] = value2;
var __spreadValues = (a, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop))
      __defNormalProp(a, prop, b2[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop))
        __defNormalProp(a, prop, b2[prop]);
    }
  return a;
};
var __spreadProps = (a, b2) => __defProps(a, __getOwnPropDescs(b2));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
import e$3, { memo, useState, useEffect, useRef, forwardRef, useMemo, createElement as createElement$1, useReducer, useCallback, useImperativeHandle, Component, cloneElement, useLayoutEffect, Children } from "react";
import { useNavigate, useDispatch, useSelector, getVerificationDetails, verifyCode, resendVerificationCode, useResolvedPath, useMatch, useLocation, NavLink, Link as Link$2, login, signUp, getPaymentMethods, getSubscriptions, useSearchParams, Outlet, matchPath, logout, Routes, Route, setTheme } from "@srclaunch/web-application-state";
import styled, { css as css$2, createGlobalStyle } from "styled-components";
import ReactDOM from "react-dom";
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function commonjsRequire(path) {
  throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var i18nIsoCountries = {};
var require$$0$1 = [
  [
    "AF",
    "AFG",
    "004",
    "ISO 3166-2:AF"
  ],
  [
    "AL",
    "ALB",
    "008",
    "ISO 3166-2:AL"
  ],
  [
    "DZ",
    "DZA",
    "012",
    "ISO 3166-2:DZ"
  ],
  [
    "AS",
    "ASM",
    "016",
    "ISO 3166-2:AS"
  ],
  [
    "AD",
    "AND",
    "020",
    "ISO 3166-2:AD"
  ],
  [
    "AO",
    "AGO",
    "024",
    "ISO 3166-2:AO"
  ],
  [
    "AI",
    "AIA",
    "660",
    "ISO 3166-2:AI"
  ],
  [
    "AQ",
    "ATA",
    "010",
    "ISO 3166-2:AQ"
  ],
  [
    "AG",
    "ATG",
    "028",
    "ISO 3166-2:AG"
  ],
  [
    "AR",
    "ARG",
    "032",
    "ISO 3166-2:AR"
  ],
  [
    "AM",
    "ARM",
    "051",
    "ISO 3166-2:AM"
  ],
  [
    "AW",
    "ABW",
    "533",
    "ISO 3166-2:AW"
  ],
  [
    "AU",
    "AUS",
    "036",
    "ISO 3166-2:AU"
  ],
  [
    "AT",
    "AUT",
    "040",
    "ISO 3166-2:AT"
  ],
  [
    "AZ",
    "AZE",
    "031",
    "ISO 3166-2:AZ"
  ],
  [
    "BS",
    "BHS",
    "044",
    "ISO 3166-2:BS"
  ],
  [
    "BH",
    "BHR",
    "048",
    "ISO 3166-2:BH"
  ],
  [
    "BD",
    "BGD",
    "050",
    "ISO 3166-2:BD"
  ],
  [
    "BB",
    "BRB",
    "052",
    "ISO 3166-2:BB"
  ],
  [
    "BY",
    "BLR",
    "112",
    "ISO 3166-2:BY"
  ],
  [
    "BE",
    "BEL",
    "056",
    "ISO 3166-2:BE"
  ],
  [
    "BZ",
    "BLZ",
    "084",
    "ISO 3166-2:BZ"
  ],
  [
    "BJ",
    "BEN",
    "204",
    "ISO 3166-2:BJ"
  ],
  [
    "BM",
    "BMU",
    "060",
    "ISO 3166-2:BM"
  ],
  [
    "BT",
    "BTN",
    "064",
    "ISO 3166-2:BT"
  ],
  [
    "BO",
    "BOL",
    "068",
    "ISO 3166-2:BO"
  ],
  [
    "BA",
    "BIH",
    "070",
    "ISO 3166-2:BA"
  ],
  [
    "BW",
    "BWA",
    "072",
    "ISO 3166-2:BW"
  ],
  [
    "BV",
    "BVT",
    "074",
    "ISO 3166-2:BV"
  ],
  [
    "BR",
    "BRA",
    "076",
    "ISO 3166-2:BR"
  ],
  [
    "IO",
    "IOT",
    "086",
    "ISO 3166-2:IO"
  ],
  [
    "BN",
    "BRN",
    "096",
    "ISO 3166-2:BN"
  ],
  [
    "BG",
    "BGR",
    "100",
    "ISO 3166-2:BG"
  ],
  [
    "BF",
    "BFA",
    "854",
    "ISO 3166-2:BF"
  ],
  [
    "BI",
    "BDI",
    "108",
    "ISO 3166-2:BI"
  ],
  [
    "KH",
    "KHM",
    "116",
    "ISO 3166-2:KH"
  ],
  [
    "CM",
    "CMR",
    "120",
    "ISO 3166-2:CM"
  ],
  [
    "CA",
    "CAN",
    "124",
    "ISO 3166-2:CA"
  ],
  [
    "CV",
    "CPV",
    "132",
    "ISO 3166-2:CV"
  ],
  [
    "KY",
    "CYM",
    "136",
    "ISO 3166-2:KY"
  ],
  [
    "CF",
    "CAF",
    "140",
    "ISO 3166-2:CF"
  ],
  [
    "TD",
    "TCD",
    "148",
    "ISO 3166-2:TD"
  ],
  [
    "CL",
    "CHL",
    "152",
    "ISO 3166-2:CL"
  ],
  [
    "CN",
    "CHN",
    "156",
    "ISO 3166-2:CN"
  ],
  [
    "CX",
    "CXR",
    "162",
    "ISO 3166-2:CX"
  ],
  [
    "CC",
    "CCK",
    "166",
    "ISO 3166-2:CC"
  ],
  [
    "CO",
    "COL",
    "170",
    "ISO 3166-2:CO"
  ],
  [
    "KM",
    "COM",
    "174",
    "ISO 3166-2:KM"
  ],
  [
    "CG",
    "COG",
    "178",
    "ISO 3166-2:CG"
  ],
  [
    "CD",
    "COD",
    "180",
    "ISO 3166-2:CD"
  ],
  [
    "CK",
    "COK",
    "184",
    "ISO 3166-2:CK"
  ],
  [
    "CR",
    "CRI",
    "188",
    "ISO 3166-2:CR"
  ],
  [
    "CI",
    "CIV",
    "384",
    "ISO 3166-2:CI"
  ],
  [
    "HR",
    "HRV",
    "191",
    "ISO 3166-2:HR"
  ],
  [
    "CU",
    "CUB",
    "192",
    "ISO 3166-2:CU"
  ],
  [
    "CY",
    "CYP",
    "196",
    "ISO 3166-2:CY"
  ],
  [
    "CZ",
    "CZE",
    "203",
    "ISO 3166-2:CZ"
  ],
  [
    "DK",
    "DNK",
    "208",
    "ISO 3166-2:DK"
  ],
  [
    "DJ",
    "DJI",
    "262",
    "ISO 3166-2:DJ"
  ],
  [
    "DM",
    "DMA",
    "212",
    "ISO 3166-2:DM"
  ],
  [
    "DO",
    "DOM",
    "214",
    "ISO 3166-2:DO"
  ],
  [
    "EC",
    "ECU",
    "218",
    "ISO 3166-2:EC"
  ],
  [
    "EG",
    "EGY",
    "818",
    "ISO 3166-2:EG"
  ],
  [
    "SV",
    "SLV",
    "222",
    "ISO 3166-2:SV"
  ],
  [
    "GQ",
    "GNQ",
    "226",
    "ISO 3166-2:GQ"
  ],
  [
    "ER",
    "ERI",
    "232",
    "ISO 3166-2:ER"
  ],
  [
    "EE",
    "EST",
    "233",
    "ISO 3166-2:EE"
  ],
  [
    "ET",
    "ETH",
    "231",
    "ISO 3166-2:ET"
  ],
  [
    "FK",
    "FLK",
    "238",
    "ISO 3166-2:FK"
  ],
  [
    "FO",
    "FRO",
    "234",
    "ISO 3166-2:FO"
  ],
  [
    "FJ",
    "FJI",
    "242",
    "ISO 3166-2:FJ"
  ],
  [
    "FI",
    "FIN",
    "246",
    "ISO 3166-2:FI"
  ],
  [
    "FR",
    "FRA",
    "250",
    "ISO 3166-2:FR"
  ],
  [
    "GF",
    "GUF",
    "254",
    "ISO 3166-2:GF"
  ],
  [
    "PF",
    "PYF",
    "258",
    "ISO 3166-2:PF"
  ],
  [
    "TF",
    "ATF",
    "260",
    "ISO 3166-2:TF"
  ],
  [
    "GA",
    "GAB",
    "266",
    "ISO 3166-2:GA"
  ],
  [
    "GM",
    "GMB",
    "270",
    "ISO 3166-2:GM"
  ],
  [
    "GE",
    "GEO",
    "268",
    "ISO 3166-2:GE"
  ],
  [
    "DE",
    "DEU",
    "276",
    "ISO 3166-2:DE"
  ],
  [
    "GH",
    "GHA",
    "288",
    "ISO 3166-2:GH"
  ],
  [
    "GI",
    "GIB",
    "292",
    "ISO 3166-2:GI"
  ],
  [
    "GR",
    "GRC",
    "300",
    "ISO 3166-2:GR"
  ],
  [
    "GL",
    "GRL",
    "304",
    "ISO 3166-2:GL"
  ],
  [
    "GD",
    "GRD",
    "308",
    "ISO 3166-2:GD"
  ],
  [
    "GP",
    "GLP",
    "312",
    "ISO 3166-2:GP"
  ],
  [
    "GU",
    "GUM",
    "316",
    "ISO 3166-2:GU"
  ],
  [
    "GT",
    "GTM",
    "320",
    "ISO 3166-2:GT"
  ],
  [
    "GN",
    "GIN",
    "324",
    "ISO 3166-2:GN"
  ],
  [
    "GW",
    "GNB",
    "624",
    "ISO 3166-2:GW"
  ],
  [
    "GY",
    "GUY",
    "328",
    "ISO 3166-2:GY"
  ],
  [
    "HT",
    "HTI",
    "332",
    "ISO 3166-2:HT"
  ],
  [
    "HM",
    "HMD",
    "334",
    "ISO 3166-2:HM"
  ],
  [
    "VA",
    "VAT",
    "336",
    "ISO 3166-2:VA"
  ],
  [
    "HN",
    "HND",
    "340",
    "ISO 3166-2:HN"
  ],
  [
    "HK",
    "HKG",
    "344",
    "ISO 3166-2:HK"
  ],
  [
    "HU",
    "HUN",
    "348",
    "ISO 3166-2:HU"
  ],
  [
    "IS",
    "ISL",
    "352",
    "ISO 3166-2:IS"
  ],
  [
    "IN",
    "IND",
    "356",
    "ISO 3166-2:IN"
  ],
  [
    "ID",
    "IDN",
    "360",
    "ISO 3166-2:ID"
  ],
  [
    "IR",
    "IRN",
    "364",
    "ISO 3166-2:IR"
  ],
  [
    "IQ",
    "IRQ",
    "368",
    "ISO 3166-2:IQ"
  ],
  [
    "IE",
    "IRL",
    "372",
    "ISO 3166-2:IE"
  ],
  [
    "IL",
    "ISR",
    "376",
    "ISO 3166-2:IL"
  ],
  [
    "IT",
    "ITA",
    "380",
    "ISO 3166-2:IT"
  ],
  [
    "JM",
    "JAM",
    "388",
    "ISO 3166-2:JM"
  ],
  [
    "JP",
    "JPN",
    "392",
    "ISO 3166-2:JP"
  ],
  [
    "JO",
    "JOR",
    "400",
    "ISO 3166-2:JO"
  ],
  [
    "KZ",
    "KAZ",
    "398",
    "ISO 3166-2:KZ"
  ],
  [
    "KE",
    "KEN",
    "404",
    "ISO 3166-2:KE"
  ],
  [
    "KI",
    "KIR",
    "296",
    "ISO 3166-2:KI"
  ],
  [
    "KP",
    "PRK",
    "408",
    "ISO 3166-2:KP"
  ],
  [
    "KR",
    "KOR",
    "410",
    "ISO 3166-2:KR"
  ],
  [
    "KW",
    "KWT",
    "414",
    "ISO 3166-2:KW"
  ],
  [
    "KG",
    "KGZ",
    "417",
    "ISO 3166-2:KG"
  ],
  [
    "LA",
    "LAO",
    "418",
    "ISO 3166-2:LA"
  ],
  [
    "LV",
    "LVA",
    "428",
    "ISO 3166-2:LV"
  ],
  [
    "LB",
    "LBN",
    "422",
    "ISO 3166-2:LB"
  ],
  [
    "LS",
    "LSO",
    "426",
    "ISO 3166-2:LS"
  ],
  [
    "LR",
    "LBR",
    "430",
    "ISO 3166-2:LR"
  ],
  [
    "LY",
    "LBY",
    "434",
    "ISO 3166-2:LY"
  ],
  [
    "LI",
    "LIE",
    "438",
    "ISO 3166-2:LI"
  ],
  [
    "LT",
    "LTU",
    "440",
    "ISO 3166-2:LT"
  ],
  [
    "LU",
    "LUX",
    "442",
    "ISO 3166-2:LU"
  ],
  [
    "MO",
    "MAC",
    "446",
    "ISO 3166-2:MO"
  ],
  [
    "MG",
    "MDG",
    "450",
    "ISO 3166-2:MG"
  ],
  [
    "MW",
    "MWI",
    "454",
    "ISO 3166-2:MW"
  ],
  [
    "MY",
    "MYS",
    "458",
    "ISO 3166-2:MY"
  ],
  [
    "MV",
    "MDV",
    "462",
    "ISO 3166-2:MV"
  ],
  [
    "ML",
    "MLI",
    "466",
    "ISO 3166-2:ML"
  ],
  [
    "MT",
    "MLT",
    "470",
    "ISO 3166-2:MT"
  ],
  [
    "MH",
    "MHL",
    "584",
    "ISO 3166-2:MH"
  ],
  [
    "MQ",
    "MTQ",
    "474",
    "ISO 3166-2:MQ"
  ],
  [
    "MR",
    "MRT",
    "478",
    "ISO 3166-2:MR"
  ],
  [
    "MU",
    "MUS",
    "480",
    "ISO 3166-2:MU"
  ],
  [
    "YT",
    "MYT",
    "175",
    "ISO 3166-2:YT"
  ],
  [
    "MX",
    "MEX",
    "484",
    "ISO 3166-2:MX"
  ],
  [
    "FM",
    "FSM",
    "583",
    "ISO 3166-2:FM"
  ],
  [
    "MD",
    "MDA",
    "498",
    "ISO 3166-2:MD"
  ],
  [
    "MC",
    "MCO",
    "492",
    "ISO 3166-2:MC"
  ],
  [
    "MN",
    "MNG",
    "496",
    "ISO 3166-2:MN"
  ],
  [
    "MS",
    "MSR",
    "500",
    "ISO 3166-2:MS"
  ],
  [
    "MA",
    "MAR",
    "504",
    "ISO 3166-2:MA"
  ],
  [
    "MZ",
    "MOZ",
    "508",
    "ISO 3166-2:MZ"
  ],
  [
    "MM",
    "MMR",
    "104",
    "ISO 3166-2:MM"
  ],
  [
    "NA",
    "NAM",
    "516",
    "ISO 3166-2:NA"
  ],
  [
    "NR",
    "NRU",
    "520",
    "ISO 3166-2:NR"
  ],
  [
    "NP",
    "NPL",
    "524",
    "ISO 3166-2:NP"
  ],
  [
    "NL",
    "NLD",
    "528",
    "ISO 3166-2:NL"
  ],
  [
    "NC",
    "NCL",
    "540",
    "ISO 3166-2:NC"
  ],
  [
    "NZ",
    "NZL",
    "554",
    "ISO 3166-2:NZ"
  ],
  [
    "NI",
    "NIC",
    "558",
    "ISO 3166-2:NI"
  ],
  [
    "NE",
    "NER",
    "562",
    "ISO 3166-2:NE"
  ],
  [
    "NG",
    "NGA",
    "566",
    "ISO 3166-2:NG"
  ],
  [
    "NU",
    "NIU",
    "570",
    "ISO 3166-2:NU"
  ],
  [
    "NF",
    "NFK",
    "574",
    "ISO 3166-2:NF"
  ],
  [
    "MP",
    "MNP",
    "580",
    "ISO 3166-2:MP"
  ],
  [
    "MK",
    "MKD",
    "807",
    "ISO 3166-2:MK"
  ],
  [
    "NO",
    "NOR",
    "578",
    "ISO 3166-2:NO"
  ],
  [
    "OM",
    "OMN",
    "512",
    "ISO 3166-2:OM"
  ],
  [
    "PK",
    "PAK",
    "586",
    "ISO 3166-2:PK"
  ],
  [
    "PW",
    "PLW",
    "585",
    "ISO 3166-2:PW"
  ],
  [
    "PS",
    "PSE",
    "275",
    "ISO 3166-2:PS"
  ],
  [
    "PA",
    "PAN",
    "591",
    "ISO 3166-2:PA"
  ],
  [
    "PG",
    "PNG",
    "598",
    "ISO 3166-2:PG"
  ],
  [
    "PY",
    "PRY",
    "600",
    "ISO 3166-2:PY"
  ],
  [
    "PE",
    "PER",
    "604",
    "ISO 3166-2:PE"
  ],
  [
    "PH",
    "PHL",
    "608",
    "ISO 3166-2:PH"
  ],
  [
    "PN",
    "PCN",
    "612",
    "ISO 3166-2:PN"
  ],
  [
    "PL",
    "POL",
    "616",
    "ISO 3166-2:PL"
  ],
  [
    "PT",
    "PRT",
    "620",
    "ISO 3166-2:PT"
  ],
  [
    "PR",
    "PRI",
    "630",
    "ISO 3166-2:PR"
  ],
  [
    "QA",
    "QAT",
    "634",
    "ISO 3166-2:QA"
  ],
  [
    "RE",
    "REU",
    "638",
    "ISO 3166-2:RE"
  ],
  [
    "RO",
    "ROU",
    "642",
    "ISO 3166-2:RO"
  ],
  [
    "RU",
    "RUS",
    "643",
    "ISO 3166-2:RU"
  ],
  [
    "RW",
    "RWA",
    "646",
    "ISO 3166-2:RW"
  ],
  [
    "SH",
    "SHN",
    "654",
    "ISO 3166-2:SH"
  ],
  [
    "KN",
    "KNA",
    "659",
    "ISO 3166-2:KN"
  ],
  [
    "LC",
    "LCA",
    "662",
    "ISO 3166-2:LC"
  ],
  [
    "PM",
    "SPM",
    "666",
    "ISO 3166-2:PM"
  ],
  [
    "VC",
    "VCT",
    "670",
    "ISO 3166-2:VC"
  ],
  [
    "WS",
    "WSM",
    "882",
    "ISO 3166-2:WS"
  ],
  [
    "SM",
    "SMR",
    "674",
    "ISO 3166-2:SM"
  ],
  [
    "ST",
    "STP",
    "678",
    "ISO 3166-2:ST"
  ],
  [
    "SA",
    "SAU",
    "682",
    "ISO 3166-2:SA"
  ],
  [
    "SN",
    "SEN",
    "686",
    "ISO 3166-2:SN"
  ],
  [
    "SC",
    "SYC",
    "690",
    "ISO 3166-2:SC"
  ],
  [
    "SL",
    "SLE",
    "694",
    "ISO 3166-2:SL"
  ],
  [
    "SG",
    "SGP",
    "702",
    "ISO 3166-2:SG"
  ],
  [
    "SK",
    "SVK",
    "703",
    "ISO 3166-2:SK"
  ],
  [
    "SI",
    "SVN",
    "705",
    "ISO 3166-2:SI"
  ],
  [
    "SB",
    "SLB",
    "090",
    "ISO 3166-2:SB"
  ],
  [
    "SO",
    "SOM",
    "706",
    "ISO 3166-2:SO"
  ],
  [
    "ZA",
    "ZAF",
    "710",
    "ISO 3166-2:ZA"
  ],
  [
    "GS",
    "SGS",
    "239",
    "ISO 3166-2:GS"
  ],
  [
    "ES",
    "ESP",
    "724",
    "ISO 3166-2:ES"
  ],
  [
    "LK",
    "LKA",
    "144",
    "ISO 3166-2:LK"
  ],
  [
    "SD",
    "SDN",
    "729",
    "ISO 3166-2:SD"
  ],
  [
    "SR",
    "SUR",
    "740",
    "ISO 3166-2:SR"
  ],
  [
    "SJ",
    "SJM",
    "744",
    "ISO 3166-2:SJ"
  ],
  [
    "SZ",
    "SWZ",
    "748",
    "ISO 3166-2:SZ"
  ],
  [
    "SE",
    "SWE",
    "752",
    "ISO 3166-2:SE"
  ],
  [
    "CH",
    "CHE",
    "756",
    "ISO 3166-2:CH"
  ],
  [
    "SY",
    "SYR",
    "760",
    "ISO 3166-2:SY"
  ],
  [
    "TW",
    "TWN",
    "158",
    "ISO 3166-2:TW"
  ],
  [
    "TJ",
    "TJK",
    "762",
    "ISO 3166-2:TJ"
  ],
  [
    "TZ",
    "TZA",
    "834",
    "ISO 3166-2:TZ"
  ],
  [
    "TH",
    "THA",
    "764",
    "ISO 3166-2:TH"
  ],
  [
    "TL",
    "TLS",
    "626",
    "ISO 3166-2:TL"
  ],
  [
    "TG",
    "TGO",
    "768",
    "ISO 3166-2:TG"
  ],
  [
    "TK",
    "TKL",
    "772",
    "ISO 3166-2:TK"
  ],
  [
    "TO",
    "TON",
    "776",
    "ISO 3166-2:TO"
  ],
  [
    "TT",
    "TTO",
    "780",
    "ISO 3166-2:TT"
  ],
  [
    "TN",
    "TUN",
    "788",
    "ISO 3166-2:TN"
  ],
  [
    "TR",
    "TUR",
    "792",
    "ISO 3166-2:TR"
  ],
  [
    "TM",
    "TKM",
    "795",
    "ISO 3166-2:TM"
  ],
  [
    "TC",
    "TCA",
    "796",
    "ISO 3166-2:TC"
  ],
  [
    "TV",
    "TUV",
    "798",
    "ISO 3166-2:TV"
  ],
  [
    "UG",
    "UGA",
    "800",
    "ISO 3166-2:UG"
  ],
  [
    "UA",
    "UKR",
    "804",
    "ISO 3166-2:UA"
  ],
  [
    "AE",
    "ARE",
    "784",
    "ISO 3166-2:AE"
  ],
  [
    "GB",
    "GBR",
    "826",
    "ISO 3166-2:GB"
  ],
  [
    "US",
    "USA",
    "840",
    "ISO 3166-2:US"
  ],
  [
    "UM",
    "UMI",
    "581",
    "ISO 3166-2:UM"
  ],
  [
    "UY",
    "URY",
    "858",
    "ISO 3166-2:UY"
  ],
  [
    "UZ",
    "UZB",
    "860",
    "ISO 3166-2:UZ"
  ],
  [
    "VU",
    "VUT",
    "548",
    "ISO 3166-2:VU"
  ],
  [
    "VE",
    "VEN",
    "862",
    "ISO 3166-2:VE"
  ],
  [
    "VN",
    "VNM",
    "704",
    "ISO 3166-2:VN"
  ],
  [
    "VG",
    "VGB",
    "092",
    "ISO 3166-2:VG"
  ],
  [
    "VI",
    "VIR",
    "850",
    "ISO 3166-2:VI"
  ],
  [
    "WF",
    "WLF",
    "876",
    "ISO 3166-2:WF"
  ],
  [
    "EH",
    "ESH",
    "732",
    "ISO 3166-2:EH"
  ],
  [
    "YE",
    "YEM",
    "887",
    "ISO 3166-2:YE"
  ],
  [
    "ZM",
    "ZMB",
    "894",
    "ISO 3166-2:ZM"
  ],
  [
    "ZW",
    "ZWE",
    "716",
    "ISO 3166-2:ZW"
  ],
  [
    "AX",
    "ALA",
    "248",
    "ISO 3166-2:AX"
  ],
  [
    "BQ",
    "BES",
    "535",
    "ISO 3166-2:BQ"
  ],
  [
    "CW",
    "CUW",
    "531",
    "ISO 3166-2:CW"
  ],
  [
    "GG",
    "GGY",
    "831",
    "ISO 3166-2:GG"
  ],
  [
    "IM",
    "IMN",
    "833",
    "ISO 3166-2:IM"
  ],
  [
    "JE",
    "JEY",
    "832",
    "ISO 3166-2:JE"
  ],
  [
    "ME",
    "MNE",
    "499",
    "ISO 3166-2:ME"
  ],
  [
    "BL",
    "BLM",
    "652",
    "ISO 3166-2:BL"
  ],
  [
    "MF",
    "MAF",
    "663",
    "ISO 3166-2:MF"
  ],
  [
    "RS",
    "SRB",
    "688",
    "ISO 3166-2:RS"
  ],
  [
    "SX",
    "SXM",
    "534",
    "ISO 3166-2:SX"
  ],
  [
    "SS",
    "SSD",
    "728",
    "ISO 3166-2:SS"
  ],
  [
    "XK",
    "XKX",
    "983",
    "ISO 3166-2:XK"
  ]
];
var require$$1$1 = [
  "cy",
  "dv",
  "sw",
  "eu",
  "af",
  "am",
  "ha",
  "ku",
  "ml",
  "no",
  "ps",
  "sd",
  "so",
  "sq",
  "ta",
  "tg",
  "tt",
  "ug",
  "ur",
  "vi",
  "ar",
  "az",
  "be",
  "bg",
  "bn",
  "bs",
  "ca",
  "cs",
  "da",
  "de",
  "el",
  "en",
  "es",
  "et",
  "fa",
  "fi",
  "fr",
  "gl",
  "el",
  "he",
  "hi",
  "hr",
  "hu",
  "hy",
  "id",
  "is",
  "it",
  "ja",
  "ka",
  "kk",
  "km",
  "ko",
  "ky",
  "lt",
  "lv",
  "mk",
  "mn",
  "ms",
  "nb",
  "nl",
  "nn",
  "pl",
  "pt",
  "ro",
  "ru",
  "sk",
  "sl",
  "sr",
  "sv",
  "th",
  "tr",
  "uk",
  "uz",
  "zh"
];
var diacritics = {};
diacritics.remove = removeDiacritics;
var replacementList = [
  {
    base: " ",
    chars: "\xA0"
  },
  {
    base: "0",
    chars: "\u07C0"
  },
  {
    base: "A",
    chars: "\u24B6\uFF21\xC0\xC1\xC2\u1EA6\u1EA4\u1EAA\u1EA8\xC3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\xC4\u01DE\u1EA2\xC5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F"
  },
  {
    base: "AA",
    chars: "\uA732"
  },
  {
    base: "AE",
    chars: "\xC6\u01FC\u01E2"
  },
  {
    base: "AO",
    chars: "\uA734"
  },
  {
    base: "AU",
    chars: "\uA736"
  },
  {
    base: "AV",
    chars: "\uA738\uA73A"
  },
  {
    base: "AY",
    chars: "\uA73C"
  },
  {
    base: "B",
    chars: "\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0181"
  },
  {
    base: "C",
    chars: "\u24B8\uFF23\uA73E\u1E08\u0106C\u0108\u010A\u010C\xC7\u0187\u023B"
  },
  {
    base: "D",
    chars: "\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018A\u0189\u1D05\uA779"
  },
  {
    base: "Dh",
    chars: "\xD0"
  },
  {
    base: "DZ",
    chars: "\u01F1\u01C4"
  },
  {
    base: "Dz",
    chars: "\u01F2\u01C5"
  },
  {
    base: "E",
    chars: "\u025B\u24BA\uFF25\xC8\xC9\xCA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\xCB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E\u1D07"
  },
  {
    base: "F",
    chars: "\uA77C\u24BB\uFF26\u1E1E\u0191\uA77B"
  },
  {
    base: "G",
    chars: "\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E\u0262"
  },
  {
    base: "H",
    chars: "\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D"
  },
  {
    base: "I",
    chars: "\u24BE\uFF29\xCC\xCD\xCE\u0128\u012A\u012C\u0130\xCF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197"
  },
  {
    base: "J",
    chars: "\u24BF\uFF2A\u0134\u0248\u0237"
  },
  {
    base: "K",
    chars: "\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2"
  },
  {
    base: "L",
    chars: "\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780"
  },
  {
    base: "LJ",
    chars: "\u01C7"
  },
  {
    base: "Lj",
    chars: "\u01C8"
  },
  {
    base: "M",
    chars: "\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C\u03FB"
  },
  {
    base: "N",
    chars: "\uA7A4\u0220\u24C3\uFF2E\u01F8\u0143\xD1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u019D\uA790\u1D0E"
  },
  {
    base: "NJ",
    chars: "\u01CA"
  },
  {
    base: "Nj",
    chars: "\u01CB"
  },
  {
    base: "O",
    chars: "\u24C4\uFF2F\xD2\xD3\xD4\u1ED2\u1ED0\u1ED6\u1ED4\xD5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\xD6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\xD8\u01FE\u0186\u019F\uA74A\uA74C"
  },
  {
    base: "OE",
    chars: "\u0152"
  },
  {
    base: "OI",
    chars: "\u01A2"
  },
  {
    base: "OO",
    chars: "\uA74E"
  },
  {
    base: "OU",
    chars: "\u0222"
  },
  {
    base: "P",
    chars: "\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754"
  },
  {
    base: "Q",
    chars: "\u24C6\uFF31\uA756\uA758\u024A"
  },
  {
    base: "R",
    chars: "\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782"
  },
  {
    base: "S",
    chars: "\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784"
  },
  {
    base: "T",
    chars: "\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786"
  },
  {
    base: "Th",
    chars: "\xDE"
  },
  {
    base: "TZ",
    chars: "\uA728"
  },
  {
    base: "U",
    chars: "\u24CA\uFF35\xD9\xDA\xDB\u0168\u1E78\u016A\u1E7A\u016C\xDC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244"
  },
  {
    base: "V",
    chars: "\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245"
  },
  {
    base: "VY",
    chars: "\uA760"
  },
  {
    base: "W",
    chars: "\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72"
  },
  {
    base: "X",
    chars: "\u24CD\uFF38\u1E8A\u1E8C"
  },
  {
    base: "Y",
    chars: "\u24CE\uFF39\u1EF2\xDD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE"
  },
  {
    base: "Z",
    chars: "\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762"
  },
  {
    base: "a",
    chars: "\u24D0\uFF41\u1E9A\xE0\xE1\xE2\u1EA7\u1EA5\u1EAB\u1EA9\xE3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\xE4\u01DF\u1EA3\xE5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250\u0251"
  },
  {
    base: "aa",
    chars: "\uA733"
  },
  {
    base: "ae",
    chars: "\xE6\u01FD\u01E3"
  },
  {
    base: "ao",
    chars: "\uA735"
  },
  {
    base: "au",
    chars: "\uA737"
  },
  {
    base: "av",
    chars: "\uA739\uA73B"
  },
  {
    base: "ay",
    chars: "\uA73D"
  },
  {
    base: "b",
    chars: "\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253\u0182"
  },
  {
    base: "c",
    chars: "\uFF43\u24D2\u0107\u0109\u010B\u010D\xE7\u1E09\u0188\u023C\uA73F\u2184"
  },
  {
    base: "d",
    chars: "\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\u018B\u13E7\u0501\uA7AA"
  },
  {
    base: "dh",
    chars: "\xF0"
  },
  {
    base: "dz",
    chars: "\u01F3\u01C6"
  },
  {
    base: "e",
    chars: "\u24D4\uFF45\xE8\xE9\xEA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\xEB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u01DD"
  },
  {
    base: "f",
    chars: "\u24D5\uFF46\u1E1F\u0192"
  },
  {
    base: "ff",
    chars: "\uFB00"
  },
  {
    base: "fi",
    chars: "\uFB01"
  },
  {
    base: "fl",
    chars: "\uFB02"
  },
  {
    base: "ffi",
    chars: "\uFB03"
  },
  {
    base: "ffl",
    chars: "\uFB04"
  },
  {
    base: "g",
    chars: "\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\uA77F\u1D79"
  },
  {
    base: "h",
    chars: "\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265"
  },
  {
    base: "hv",
    chars: "\u0195"
  },
  {
    base: "i",
    chars: "\u24D8\uFF49\xEC\xED\xEE\u0129\u012B\u012D\xEF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131"
  },
  {
    base: "j",
    chars: "\u24D9\uFF4A\u0135\u01F0\u0249"
  },
  {
    base: "k",
    chars: "\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3"
  },
  {
    base: "l",
    chars: "\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747\u026D"
  },
  {
    base: "lj",
    chars: "\u01C9"
  },
  {
    base: "m",
    chars: "\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F"
  },
  {
    base: "n",
    chars: "\u24DD\uFF4E\u01F9\u0144\xF1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5\u043B\u0509"
  },
  {
    base: "nj",
    chars: "\u01CC"
  },
  {
    base: "o",
    chars: "\u24DE\uFF4F\xF2\xF3\xF4\u1ED3\u1ED1\u1ED7\u1ED5\xF5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\xF6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\xF8\u01FF\uA74B\uA74D\u0275\u0254\u1D11"
  },
  {
    base: "oe",
    chars: "\u0153"
  },
  {
    base: "oi",
    chars: "\u01A3"
  },
  {
    base: "oo",
    chars: "\uA74F"
  },
  {
    base: "ou",
    chars: "\u0223"
  },
  {
    base: "p",
    chars: "\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755\u03C1"
  },
  {
    base: "q",
    chars: "\u24E0\uFF51\u024B\uA757\uA759"
  },
  {
    base: "r",
    chars: "\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783"
  },
  {
    base: "s",
    chars: "\u24E2\uFF53\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B\u0282"
  },
  {
    base: "ss",
    chars: "\xDF"
  },
  {
    base: "t",
    chars: "\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787"
  },
  {
    base: "th",
    chars: "\xFE"
  },
  {
    base: "tz",
    chars: "\uA729"
  },
  {
    base: "u",
    chars: "\u24E4\uFF55\xF9\xFA\xFB\u0169\u1E79\u016B\u1E7B\u016D\xFC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289"
  },
  {
    base: "v",
    chars: "\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C"
  },
  {
    base: "vy",
    chars: "\uA761"
  },
  {
    base: "w",
    chars: "\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73"
  },
  {
    base: "x",
    chars: "\u24E7\uFF58\u1E8B\u1E8D"
  },
  {
    base: "y",
    chars: "\u24E8\uFF59\u1EF3\xFD\u0177\u1EF9\u0233\u1E8F\xFF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF"
  },
  {
    base: "z",
    chars: "\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763"
  }
];
var diacriticsMap = {};
for (var i$3 = 0; i$3 < replacementList.length; i$3 += 1) {
  var chars = replacementList[i$3].chars;
  for (var j$3 = 0; j$3 < chars.length; j$3 += 1) {
    diacriticsMap[chars[j$3]] = replacementList[i$3].base;
  }
}
function removeDiacritics(str2) {
  return str2.replace(/[^\u0000-\u007e]/g, function(c2) {
    return diacriticsMap[c2] || c2;
  });
}
diacritics.replacementList = replacementList;
diacritics.diacriticsMap = diacriticsMap;
(function(exports) {
  const codes = require$$0$1;
  const supportedLocales = require$$1$1;
  const removeDiacritics2 = diacritics.remove;
  const registeredLocales = {};
  const alpha2 = {}, alpha3 = {}, numeric = {}, invertedNumeric = {};
  codes.forEach(function(codeInformation) {
    const s2 = codeInformation;
    alpha2[s2[0]] = s2[1];
    alpha3[s2[1]] = s2[0];
    numeric[s2[2]] = s2[0];
    invertedNumeric[s2[0]] = s2[2];
  });
  function formatNumericCode(code) {
    return String("000" + (code ? code : "")).slice(-3);
  }
  function hasOwnProperty2(object2, property) {
    return Object.prototype.hasOwnProperty.call(object2, property);
  }
  function localeFilter(localeList, filter) {
    return Object.keys(localeList).reduce(function(newLocaleList, alpha22) {
      const nameList = localeList[alpha22];
      newLocaleList[alpha22] = filter(nameList, alpha22);
      return newLocaleList;
    }, {});
  }
  function filterNameBy(type, countryNameList) {
    switch (type) {
      case "official":
        return Array.isArray(countryNameList) ? countryNameList[0] : countryNameList;
      case "all":
        return typeof countryNameList === "string" ? [countryNameList] : countryNameList;
      case "alias":
        return Array.isArray(countryNameList) ? countryNameList[1] || countryNameList[0] : countryNameList;
      default:
        throw new TypeError("LocaleNameType must be one of these: all, official, alias!");
    }
  }
  exports.registerLocale = function(localeData) {
    if (!localeData.locale) {
      throw new TypeError("Missing localeData.locale");
    }
    if (!localeData.countries) {
      throw new TypeError("Missing localeData.countries");
    }
    registeredLocales[localeData.locale] = localeData.countries;
  };
  function alpha3ToAlpha2(code) {
    return alpha3[code];
  }
  exports.alpha3ToAlpha2 = alpha3ToAlpha2;
  function alpha2ToAlpha3(code) {
    return alpha2[code];
  }
  exports.alpha2ToAlpha3 = alpha2ToAlpha3;
  function alpha3ToNumeric(code) {
    return invertedNumeric[alpha3ToAlpha2(code)];
  }
  exports.alpha3ToNumeric = alpha3ToNumeric;
  function alpha2ToNumeric(code) {
    return invertedNumeric[code];
  }
  exports.alpha2ToNumeric = alpha2ToNumeric;
  function numericToAlpha3(code) {
    const padded = formatNumericCode(code);
    return alpha2ToAlpha3(numeric[padded]);
  }
  exports.numericToAlpha3 = numericToAlpha3;
  function numericToAlpha2(code) {
    const padded = formatNumericCode(code);
    return numeric[padded];
  }
  exports.numericToAlpha2 = numericToAlpha2;
  function toAlpha3(code) {
    if (typeof code === "string") {
      if (/^[0-9]*$/.test(code)) {
        return numericToAlpha3(code);
      }
      if (code.length === 2) {
        return alpha2ToAlpha3(code.toUpperCase());
      }
      if (code.length === 3) {
        return code.toUpperCase();
      }
    }
    if (typeof code === "number") {
      return numericToAlpha3(code);
    }
    return void 0;
  }
  exports.toAlpha3 = toAlpha3;
  function toAlpha2(code) {
    if (typeof code === "string") {
      if (/^[0-9]*$/.test(code)) {
        return numericToAlpha2(code);
      }
      if (code.length === 2) {
        return code.toUpperCase();
      }
      if (code.length === 3) {
        return alpha3ToAlpha2(code.toUpperCase());
      }
    }
    if (typeof code === "number") {
      return numericToAlpha2(code);
    }
    return void 0;
  }
  exports.toAlpha2 = toAlpha2;
  exports.getName = function(code, lang, options = {}) {
    if (!("select" in options)) {
      options.select = "official";
    }
    try {
      const codeMaps = registeredLocales[lang.toLowerCase()];
      const nameList = codeMaps[toAlpha2(code)];
      return filterNameBy(options.select, nameList);
    } catch (err) {
      return void 0;
    }
  };
  exports.getNames = function(lang, options = {}) {
    if (!("select" in options)) {
      options.select = "official";
    }
    const localeList = registeredLocales[lang.toLowerCase()];
    if (localeList === void 0)
      return {};
    return localeFilter(localeList, function(nameList) {
      return filterNameBy(options.select, nameList);
    });
  };
  exports.getAlpha2Code = function(name2, lang) {
    const normalizeString = (string2) => string2.toLowerCase();
    const areSimilar = (a, b2) => normalizeString(a) === normalizeString(b2);
    try {
      const codenames = registeredLocales[lang.toLowerCase()];
      for (const p2 in codenames) {
        if (!hasOwnProperty2(codenames, p2)) {
          continue;
        }
        if (typeof codenames[p2] === "string") {
          if (areSimilar(codenames[p2], name2)) {
            return p2;
          }
        }
        if (Array.isArray(codenames[p2])) {
          for (const mappedName of codenames[p2]) {
            if (areSimilar(mappedName, name2)) {
              return p2;
            }
          }
        }
      }
      return void 0;
    } catch (err) {
      return void 0;
    }
  };
  exports.getSimpleAlpha2Code = function(name2, lang) {
    const normalizeString = (string2) => removeDiacritics2(string2.toLowerCase());
    const areSimilar = (a, b2) => normalizeString(a) === normalizeString(b2);
    try {
      const codenames = registeredLocales[lang.toLowerCase()];
      for (const p2 in codenames) {
        if (!hasOwnProperty2(codenames, p2)) {
          continue;
        }
        if (typeof codenames[p2] === "string") {
          if (areSimilar(codenames[p2], name2)) {
            return p2;
          }
        }
        if (Array.isArray(codenames[p2])) {
          for (const mappedName of codenames[p2]) {
            if (areSimilar(mappedName, name2)) {
              return p2;
            }
          }
        }
      }
      return void 0;
    } catch (err) {
      return void 0;
    }
  };
  exports.getAlpha2Codes = function() {
    return alpha2;
  };
  exports.getAlpha3Code = function(name2, lang) {
    const alpha22 = exports.getAlpha2Code(name2, lang);
    if (alpha22) {
      return exports.toAlpha3(alpha22);
    } else {
      return void 0;
    }
  };
  exports.getSimpleAlpha3Code = function(name2, lang) {
    const alpha22 = exports.getSimpleAlpha2Code(name2, lang);
    if (alpha22) {
      return exports.toAlpha3(alpha22);
    } else {
      return void 0;
    }
  };
  exports.getAlpha3Codes = function() {
    return alpha3;
  };
  exports.getNumericCodes = function() {
    return numeric;
  };
  exports.langs = function() {
    return Object.keys(registeredLocales);
  };
  exports.getSupportedLanguages = function() {
    return supportedLocales;
  };
  exports.isValid = function(code) {
    if (!code) {
      return false;
    }
    const coerced = code.toString().toUpperCase();
    return hasOwnProperty2(alpha3, coerced) || hasOwnProperty2(alpha2, coerced) || hasOwnProperty2(numeric, coerced);
  };
})(i18nIsoCountries);
const locale = "en";
const countries = {
  AF: "Afghanistan",
  AL: "Albania",
  DZ: "Algeria",
  AS: "American Samoa",
  AD: "Andorra",
  AO: "Angola",
  AI: "Anguilla",
  AQ: "Antarctica",
  AG: "Antigua and Barbuda",
  AR: "Argentina",
  AM: "Armenia",
  AW: "Aruba",
  AU: "Australia",
  AT: "Austria",
  AZ: "Azerbaijan",
  BS: "Bahamas",
  BH: "Bahrain",
  BD: "Bangladesh",
  BB: "Barbados",
  BY: "Belarus",
  BE: "Belgium",
  BZ: "Belize",
  BJ: "Benin",
  BM: "Bermuda",
  BT: "Bhutan",
  BO: "Bolivia",
  BA: "Bosnia and Herzegovina",
  BW: "Botswana",
  BV: "Bouvet Island",
  BR: "Brazil",
  IO: "British Indian Ocean Territory",
  BN: "Brunei Darussalam",
  BG: "Bulgaria",
  BF: "Burkina Faso",
  BI: "Burundi",
  KH: "Cambodia",
  CM: "Cameroon",
  CA: "Canada",
  CV: "Cape Verde",
  KY: "Cayman Islands",
  CF: "Central African Republic",
  TD: "Chad",
  CL: "Chile",
  CN: [
    "People's Republic of China",
    "China"
  ],
  CX: "Christmas Island",
  CC: "Cocos (Keeling) Islands",
  CO: "Colombia",
  KM: "Comoros",
  CG: [
    "Republic of the Congo",
    "Congo"
  ],
  CD: [
    "Democratic Republic of the Congo",
    "Congo"
  ],
  CK: "Cook Islands",
  CR: "Costa Rica",
  CI: "Cote D'Ivoire",
  HR: "Croatia",
  CU: "Cuba",
  CY: "Cyprus",
  CZ: "Czech Republic",
  DK: "Denmark",
  DJ: "Djibouti",
  DM: "Dominica",
  DO: "Dominican Republic",
  EC: "Ecuador",
  EG: "Egypt",
  SV: "El Salvador",
  GQ: "Equatorial Guinea",
  ER: "Eritrea",
  EE: "Estonia",
  ET: "Ethiopia",
  FK: "Falkland Islands (Malvinas)",
  FO: "Faroe Islands",
  FJ: "Fiji",
  FI: "Finland",
  FR: "France",
  GF: "French Guiana",
  PF: "French Polynesia",
  TF: "French Southern Territories",
  GA: "Gabon",
  GM: [
    "Republic of The Gambia",
    "The Gambia",
    "Gambia"
  ],
  GE: "Georgia",
  DE: "Germany",
  GH: "Ghana",
  GI: "Gibraltar",
  GR: "Greece",
  GL: "Greenland",
  GD: "Grenada",
  GP: "Guadeloupe",
  GU: "Guam",
  GT: "Guatemala",
  GN: "Guinea",
  GW: "Guinea-Bissau",
  GY: "Guyana",
  HT: "Haiti",
  HM: "Heard Island and McDonald Islands",
  VA: "Holy See (Vatican City State)",
  HN: "Honduras",
  HK: "Hong Kong",
  HU: "Hungary",
  IS: "Iceland",
  IN: "India",
  ID: "Indonesia",
  IR: [
    "Islamic Republic of Iran",
    "Iran"
  ],
  IQ: "Iraq",
  IE: "Ireland",
  IL: "Israel",
  IT: "Italy",
  JM: "Jamaica",
  JP: "Japan",
  JO: "Jordan",
  KZ: "Kazakhstan",
  KE: "Kenya",
  KI: "Kiribati",
  KP: "North Korea",
  KR: "South Korea",
  KW: "Kuwait",
  KG: "Kyrgyzstan",
  LA: "Lao People's Democratic Republic",
  LV: "Latvia",
  LB: "Lebanon",
  LS: "Lesotho",
  LR: "Liberia",
  LY: "Libya",
  LI: "Liechtenstein",
  LT: "Lithuania",
  LU: "Luxembourg",
  MO: "Macao",
  MG: "Madagascar",
  MW: "Malawi",
  MY: "Malaysia",
  MV: "Maldives",
  ML: "Mali",
  MT: "Malta",
  MH: "Marshall Islands",
  MQ: "Martinique",
  MR: "Mauritania",
  MU: "Mauritius",
  YT: "Mayotte",
  MX: "Mexico",
  FM: "Micronesia, Federated States of",
  MD: "Moldova, Republic of",
  MC: "Monaco",
  MN: "Mongolia",
  MS: "Montserrat",
  MA: "Morocco",
  MZ: "Mozambique",
  MM: "Myanmar",
  NA: "Namibia",
  NR: "Nauru",
  NP: "Nepal",
  NL: "Netherlands",
  NC: "New Caledonia",
  NZ: "New Zealand",
  NI: "Nicaragua",
  NE: "Niger",
  NG: "Nigeria",
  NU: "Niue",
  NF: "Norfolk Island",
  MK: [
    "The Republic of North Macedonia",
    "North Macedonia"
  ],
  MP: "Northern Mariana Islands",
  NO: "Norway",
  OM: "Oman",
  PK: "Pakistan",
  PW: "Palau",
  PS: [
    "State of Palestine",
    "Palestine"
  ],
  PA: "Panama",
  PG: "Papua New Guinea",
  PY: "Paraguay",
  PE: "Peru",
  PH: "Philippines",
  PN: "Pitcairn",
  PL: "Poland",
  PT: "Portugal",
  PR: "Puerto Rico",
  QA: "Qatar",
  RE: "Reunion",
  RO: "Romania",
  RU: [
    "Russian Federation",
    "Russia"
  ],
  RW: "Rwanda",
  SH: "Saint Helena",
  KN: "Saint Kitts and Nevis",
  LC: "Saint Lucia",
  PM: "Saint Pierre and Miquelon",
  VC: "Saint Vincent and the Grenadines",
  WS: "Samoa",
  SM: "San Marino",
  ST: "Sao Tome and Principe",
  SA: "Saudi Arabia",
  SN: "Senegal",
  SC: "Seychelles",
  SL: "Sierra Leone",
  SG: "Singapore",
  SK: "Slovakia",
  SI: "Slovenia",
  SB: "Solomon Islands",
  SO: "Somalia",
  ZA: "South Africa",
  GS: "South Georgia and the South Sandwich Islands",
  ES: "Spain",
  LK: "Sri Lanka",
  SD: "Sudan",
  SR: "Suriname",
  SJ: "Svalbard and Jan Mayen",
  SZ: "Eswatini",
  SE: "Sweden",
  CH: "Switzerland",
  SY: "Syrian Arab Republic",
  TW: [
    "Taiwan, Province of China",
    "Taiwan"
  ],
  TJ: "Tajikistan",
  TZ: [
    "United Republic of Tanzania",
    "Tanzania"
  ],
  TH: "Thailand",
  TL: "Timor-Leste",
  TG: "Togo",
  TK: "Tokelau",
  TO: "Tonga",
  TT: "Trinidad and Tobago",
  TN: "Tunisia",
  TR: "Turkey",
  TM: "Turkmenistan",
  TC: "Turks and Caicos Islands",
  TV: "Tuvalu",
  UG: "Uganda",
  UA: "Ukraine",
  AE: "United Arab Emirates",
  GB: [
    "United Kingdom",
    "UK",
    "Great Britain"
  ],
  US: [
    "United States of America",
    "United States",
    "USA"
  ],
  UM: "United States Minor Outlying Islands",
  UY: "Uruguay",
  UZ: "Uzbekistan",
  VU: "Vanuatu",
  VE: "Venezuela",
  VN: "Vietnam",
  VG: "Virgin Islands, British",
  VI: "Virgin Islands, U.S.",
  WF: "Wallis and Futuna",
  EH: "Western Sahara",
  YE: "Yemen",
  ZM: "Zambia",
  ZW: "Zimbabwe",
  AX: "\xC5land Islands",
  BQ: "Bonaire, Sint Eustatius and Saba",
  CW: "Cura\xE7ao",
  GG: "Guernsey",
  IM: "Isle of Man",
  JE: "Jersey",
  ME: "Montenegro",
  BL: "Saint Barth\xE9lemy",
  MF: "Saint Martin (French part)",
  RS: "Serbia",
  SX: "Sint Maarten (Dutch part)",
  SS: "South Sudan",
  XK: "Kosovo"
};
var englishLanguage = {
  locale,
  countries
};
var __defProp2 = Object.defineProperty;
var __defProps2 = Object.defineProperties;
var __getOwnPropDescs2 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols2 = Object.getOwnPropertySymbols;
var __hasOwnProp2 = Object.prototype.hasOwnProperty;
var __propIsEnum2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp2 = (obj, key, value2) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value: value2 }) : obj[key] = value2;
var __spreadValues2 = (a, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp2.call(b2, prop))
      __defNormalProp2(a, prop, b2[prop]);
  if (__getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(b2)) {
      if (__propIsEnum2.call(b2, prop))
        __defNormalProp2(a, prop, b2[prop]);
    }
  return a;
};
var __spreadProps2 = (a, b2) => __defProps2(a, __getOwnPropDescs2(b2));
var __objRest2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp2.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum2.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var jsxRuntime$2 = { exports: {} };
var reactJsxRuntime_production_min$2 = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols$2 = Object.getOwnPropertySymbols;
var hasOwnProperty$6 = Object.prototype.hasOwnProperty;
var propIsEnumerable$2 = Object.prototype.propertyIsEnumerable;
function toObject$2(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative$2() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i2 = 0; i2 < 10; i2++) {
      test2["_" + String.fromCharCode(i2)] = i2;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
shouldUseNative$2() ? Object.assign : function(target, source) {
  var from2;
  var to = toObject$2(target);
  var symbols;
  for (var s2 = 1; s2 < arguments.length; s2++) {
    from2 = Object(arguments[s2]);
    for (var key in from2) {
      if (hasOwnProperty$6.call(from2, key)) {
        to[key] = from2[key];
      }
    }
    if (getOwnPropertySymbols$2) {
      symbols = getOwnPropertySymbols$2(from2);
      for (var i2 = 0; i2 < symbols.length; i2++) {
        if (propIsEnumerable$2.call(from2, symbols[i2])) {
          to[symbols[i2]] = from2[symbols[i2]];
        }
      }
    }
  }
  return to;
};
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$4 = e$3, g$5 = 60103;
reactJsxRuntime_production_min$2.Fragment = 60107;
if (typeof Symbol === "function" && Symbol.for) {
  var h$6 = Symbol.for;
  g$5 = h$6("react.element");
  reactJsxRuntime_production_min$2.Fragment = h$6("react.fragment");
}
var m$5 = f$4.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, n$6 = Object.prototype.hasOwnProperty, p$6 = { key: true, ref: true, __self: true, __source: true };
function q$7(c2, a, k2) {
  var b2, d2 = {}, e2 = null, l2 = null;
  k2 !== void 0 && (e2 = "" + k2);
  a.key !== void 0 && (e2 = "" + a.key);
  a.ref !== void 0 && (l2 = a.ref);
  for (b2 in a)
    n$6.call(a, b2) && !p$6.hasOwnProperty(b2) && (d2[b2] = a[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a = c2.defaultProps, a)
      d2[b2] === void 0 && (d2[b2] = a[b2]);
  return { $$typeof: g$5, type: c2, key: e2, ref: l2, props: d2, _owner: m$5.current };
}
reactJsxRuntime_production_min$2.jsx = q$7;
reactJsxRuntime_production_min$2.jsxs = q$7;
{
  jsxRuntime$2.exports = reactJsxRuntime_production_min$2;
}
const jsx$3 = jsxRuntime$2.exports.jsx;
const jsxs$2 = jsxRuntime$2.exports.jsxs;
const Airplane = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-airplane",
    viewBox: "0 0 65.313 65.313",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M36.748,33.775h-0.066c-0.091,0.096-0.23,0.14-0.413,0.14l-9.621,9.01l-0.271,12.829l-2.936,2.938 c-0.091,0.092-0.271,0.133-0.548,0.133c-0.361,0-0.625-0.109-0.782-0.34c-0.159-0.226-0.285-0.479-0.373-0.748l-1.778-7.097 c-0.044-0.23-0.159-0.388-0.341-0.479c-0.185-0.092-0.341-0.135-0.477-0.135c-0.455,0-0.822,0.166-1.093,0.513 c-0.271,0.338-0.526,0.621-0.752,0.847c-0.77,0.641-1.726,0.956-2.869,0.956c-1.043,0-1.569-0.498-1.569-1.501 c0-0.5,0.08-0.999,0.241-1.501c0.161-0.498,0.399-0.931,0.717-1.296l1.161-1.296c0-0.048,0.023-0.091,0.065-0.139 c0.049-0.044,0.073-0.092,0.073-0.14c0.135-0.137,0.203-0.273,0.203-0.41c0-0.178-0.093-0.352-0.276-0.511 c-0.178-0.155-0.361-0.256-0.542-0.307l-7.301-1.778c-0.502-0.179-0.753-0.566-0.753-1.159v-0.068c0-0.046,0.026-0.155,0.068-0.342 l2.798-2.797c0.091-0.046,0.218-0.109,0.374-0.205c0.156-0.092,0.261-0.138,0.31-0.138H21.87c0.044,0,0.147-0.034,0.309-0.1 c0.156-0.068,0.261-0.146,0.308-0.242l8.804-9.418c0.091-0.089,0.138-0.252,0.138-0.479c0-0.453-0.185-0.771-0.546-0.956 L0.513,17.666c-0.228-0.049-0.35-0.173-0.375-0.378C0.114,17.086,0.1,16.911,0.1,16.778v-0.332c0-0.14,0.047-0.25,0.138-0.341 l2.39-2.32c0.044-0.091,0.147-0.183,0.306-0.272c0.156-0.089,0.283-0.136,0.376-0.136h42.448l10.37-10.986 c0.729-0.775,1.651-1.366,2.77-1.774C60.015,0.205,61.087,0,62.141,0c0.68,0,1.312,0.152,1.875,0.444 c0.57,0.296,0.968,0.853,1.198,1.669v0.547v0.546c0,0.867-0.14,1.822-0.411,2.869c-0.273,1.046-0.748,1.866-1.433,2.455 L52.18,19.247c-0.14,0.091-0.215,0.243-0.24,0.445c-0.022,0.203-0.036,0.353-0.036,0.441v40.539c0,0.091-0.027,0.34-0.068,0.748 c-0.048,0.411-0.066,0.662-0.066,0.753s-0.038,0.196-0.104,0.306c-0.064,0.114-0.144,0.196-0.239,0.242l-2.184,2.253 c-0.321,0.23-0.57,0.34-0.753,0.34c-0.453,0-0.769-0.244-0.951-0.75l-9.826-29.892c-0.048-0.226-0.16-0.433-0.34-0.613 C37.179,33.871,36.974,33.775,36.748,33.775z"
    })
  }));
});
const Alert = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2(__spreadProps2(__spreadValues2({
    id: "applab-icon-basic-alert",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 485.811 485.811",
    enableBackground: "new 0 0 485.811 485.811",
    xmlSpace: "preserve"
  }), props), {
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("path", {
        d: "M476.099,353.968l-170.2-294.8c-27.8-48.7-98.1-48.7-125.8,0l-170.3,294.8c-27.8,48.7,6.8,109.2,62.9,109.2h339.9\nC468.699,463.168,503.899,402.068,476.099,353.968z M242.899,397.768c-14.8,0-27.1-12.3-27.1-27.1s12.3-27.1,27.1-27.1\nc14.8,0,27.1,12.3,26.5,27.8C270.099,385.468,257.099,397.768,242.899,397.768z M267.599,222.568c-1.2,21-2.5,41.9-3.7,62.9\nc-0.6,6.8-0.6,13-0.6,19.7c-0.6,11.1-9.3,19.7-20.4,19.7s-19.7-8-20.4-19.1c-1.8-32.7-3.7-64.8-5.5-97.5\nc-0.6-8.6-1.2-17.3-1.9-25.9c0-14.2,8-25.9,21-29.6c13-3.1,25.9,3.1,31.5,15.4c1.9,4.3,2.5,8.6,2.5,13.6\nC269.499,195.468,268.199,209.068,267.599,222.568z"
      })
    })
  }));
});
const AlertQuestion = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-alert-question",
    enableBackground: "new 0 0 512 512",
    height: "512",
    viewBox: "0 0 512 512",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m505.853 413.354-210.961-360h-.015c-8.027-13.785-22.925-22.354-38.877-22.354s-30.85 8.569-38.892 22.354l-210.947 359.97c-17.34 29.554 3.916 67.676 38.862 67.676h421.938c34.818 0 56.25-37.971 38.892-67.646zm-234.853-22.354h-30v-30h30zm7.515-96.035c-4.629 2.681-7.515 7.676-7.515 13.008v23.027h-30v-23.027c0-16.011 8.613-30.938 22.485-38.965 4.644-2.681 7.515-7.661 7.515-13.008 0-8.276-6.724-15-15-15s-15 6.724-15 15h-30c0-24.814 20.186-45 45-45s45 20.186 45 45c0 16.011-8.613 30.952-22.485 38.965z"
    })
  }));
});
const AnimalFootprint = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-animal-foot-print",
    viewBox: "0 -32 512.00011 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m342.382812 239.351562c-23.039062-35.941406-62.277343-57.402343-104.964843-57.402343s-81.925781 21.460937-104.960938 57.402343l-55.515625 86.605469c-9.210937 14.367188-13.460937 30.96875-12.292968 47.996094 1.167968 17.03125 7.648437 32.890625 18.738281 45.875 11.097656 12.972656 25.761719 21.839844 42.40625 25.644531 16.644531 3.804688 33.707031 2.179688 49.339843-4.691406l1.046876-.464844c39.335937-16.945312 84.285156-16.789062 123.519531.464844 10.121093 4.449219 20.84375 6.699219 31.664062 6.699219 5.882813 0 11.800781-.667969 17.664063-2.003907 16.644531-3.800781 31.308594-12.667968 42.410156-25.644531 11.09375-12.972656 17.578125-28.835937 18.75-45.871093 1.171875-17.035157-3.078125-33.632813-12.289062-48.007813zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m91.894531 239.238281c16.515625-6.34375 29.0625-19.652343 35.328125-37.476562 5.964844-16.960938 5.476563-36.109375-1.378906-53.921875-6.859375-17.800782-19.335938-32.332032-35.132812-40.921875-16.59375-9.019531-34.824219-10.488281-51.3125-4.132813-33.171876 12.753906-48.394532 53.746094-33.929688 91.398438 11.554688 29.96875 38.503906 48.886718 65.75 48.886718 6.957031 0 13.933594-1.234374 20.675781-3.832031zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m199.613281 171.386719c41.46875 0 75.207031-38.4375 75.207031-85.683594 0-47.257813-33.738281-85.703125-75.207031-85.703125-41.464843 0-75.199219 38.445312-75.199219 85.703125 0 47.246094 33.734376 85.683594 75.199219 85.683594zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m329.496094 192.4375h.003906c6.378906 2.117188 12.886719 3.128906 19.367188 3.128906 30.242187 0 59.714843-22.011718 70.960937-55.839844 6.476563-19.472656 6.050781-40.0625-1.199219-57.972656-7.585937-18.75-21.644531-32.359375-39.589844-38.324218-17.949218-5.964844-37.359374-3.476563-54.660156 7-16.527344 10.007812-29.191406 26.246093-35.660156 45.71875-13.652344 41.078124 4.640625 84.273437 40.777344 96.289062zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m487.875 182.4375-.011719-.011719c-28.597656-21.125-71.367187-11.96875-95.347656 20.421875-23.957031 32.40625-20.210937 75.972656 8.34375 97.113282 10.414063 7.714843 22.71875 11.402343 35.3125 11.402343 21.949219 0 44.785156-11.203125 60.050781-31.804687 23.953125-32.40625 20.210938-75.972656-8.347656-97.121094zm0 0"
    })]
  }));
});
const AppStore = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-app-store",
    x: "0px",
    y: "0px",
    viewBox: "0 0 512 512",
    enableBackground: "new 0 0 512 512",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M407,0H105C47.103,0,0,47.103,0,105v302c0,57.897,47.103,105,105,105h302c57.897,0,105-47.103,105-105V105\nC512,47.103,464.897,0,407,0z M157.649,394.515c-4.625,8.011-13.046,12.494-21.693,12.495c-4.239,0-8.531-1.077-12.458-3.344\nc-11.938-6.892-16.043-22.212-9.151-34.15l4.917-8.516h57.735L157.649,394.515z M110.5,341c-13.785,0-25-11.215-25-25\nc0-13.785,11.215-25,25-25h49.178l67.454-116.834l-18.281-31.664c-6.892-11.938-2.788-27.258,9.15-34.151h0.001\nc11.938-6.892,27.258-2.786,34.15,9.151l3.848,6.665l3.848-6.664c6.895-11.939,22.215-16.043,34.15-9.151\nc5.783,3.339,9.92,8.73,11.648,15.18c1.729,6.45,0.841,13.188-2.498,18.971L217.413,291h54.079l28.868,50H110.5z M401.5,341\nh-20.311l16.463,28.515c6.893,11.937,2.788,27.257-9.149,34.15c-3.853,2.224-8.129,3.361-12.461,3.361\nc-2.172,0-4.356-0.285-6.511-0.863c-6.451-1.729-11.842-5.866-15.181-11.65l-86.804-150.348l28.867-50L352.322,291H401.5\nc13.785,0,25,11.215,25,25C426.5,329.785,415.285,341,401.5,341z"
    })
  }));
});
const AppSubscription = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-app-subscription",
    height: "464pt",
    viewBox: "0 0 464 464",
    width: "464pt",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m119.03125 144c-2.359375 0-4.671875.953125-6.34375 2.625l-8.6875 8.6875-8.6875-8.6875c-1.671875-1.671875-3.984375-2.625-6.34375-2.625-4.945312 0-8.96875 4.023438-8.96875 8.96875 0 2.359375.953125 4.671875 2.625 6.34375l21.375 21.375 21.375-21.375c1.671875-1.671875 2.625-3.984375 2.625-6.34375 0-4.945312-4.023438-8.96875-8.96875-8.96875zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m208 288h-208v24c0 13.230469 10.769531 24 24 24h160c13.230469 0 24-10.769531 24-24zm-72 32h-64v-16h64zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m152 80h-96c-4.414062 0-8 3.585938-8 8v144c0 4.414062 3.585938 8 8 8h96c4.414062 0 8-3.585938 8-8v-144c0-4.40625-3.585938-8-8-8zm-15.3125 90.625-32.6875 32.6875-32.6875-32.6875c-4.648438-4.648438-7.3125-11.074219-7.3125-17.65625 0-13.769531 11.199219-24.96875 24.96875-24.96875 5.414062 0 10.726562 1.808594 15.03125 5.03125 4.304688-3.222656 9.617188-5.03125 15.03125-5.03125 13.769531 0 24.96875 11.199219 24.96875 24.96875 0 6.582031-2.664062 13.007812-7.3125 17.65625zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m208 24c0-13.230469-10.769531-24-24-24h-160c-13.230469 0-24 10.769531-24 24v8h208zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m208 48h-208v224h208zm-32 184c0 13.230469-10.769531 24-24 24h-96c-13.230469 0-24-10.769531-24-24v-144c0-13.230469 10.769531-24 24-24h96c13.230469 0 24 10.769531 24 24zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m360 360c39.703125 0 72-32.296875 72-72s-32.296875-72-72-72-72 32.296875-72 72 32.296875 72 72 72zm0-64c-13.230469 0-24-10.769531-24-24 0-10.414062 6.710938-19.214844 16-22.527344v-17.472656h16v17.472656c9.289062 3.3125 16 12.113282 16 22.527344h-16c0-4.414062-3.585938-8-8-8s-8 3.585938-8 8 3.585938 8 8 8c13.230469 0 24 10.769531 24 24 0 10.414062-6.710938 19.214844-16 22.527344v17.472656h-16v-17.472656c-9.289062-3.3125-16-12.113282-16-22.527344h16c0 4.414062 3.585938 8 8 8s8-3.585938 8-8-3.585938-8-8-8zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m256 400h208v-224h-208zm104-200c48.519531 0 88 39.480469 88 88s-39.480469 88-88 88-88-39.480469-88-88 39.480469-88 88-88zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m256 440c0 13.230469 10.769531 24 24 24h160c13.230469 0 24-10.769531 24-24v-24h-208zm72-8h64v16h-64zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m440 128h-160c-13.230469 0-24 10.769531-24 24v8h208v-8c0-13.230469-10.769531-24-24-24zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m240 32h16v16h-16zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m352 56v24l-19.199219-14.398438-9.59375 12.796876 36.800781 27.601562 36.800782-27.601562-9.59375-12.796876-19.199219 14.398438v-24c0-13.230469-10.769531-24-24-24h-72v16h72c4.398437 0 7.984375 3.59375 7.984375 8zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m208 416h16v16h-16zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m112 408v-24l19.199219 14.398438 9.59375-12.796876-36.800781-27.601562-36.800782 27.601562 9.59375 12.796876 19.199219-14.398438v24c0 13.230469 10.769531 24 24 24h72v-16h-72c-4.398437 0-7.984375-3.585938-7.984375-8zm0 0"
    })]
  }));
});
const Bill = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-bill",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("polygon", {
          points: "320,0 320,128 448,128 "
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M320,160c-17.632,0-32-14.368-32-32V0H96C78.368,0,64,14.368,64,32v448c0,17.664,14.368,32,32,32h320 c17.664,0,32-14.336,32-32V160H320z M176,97.984V80c0-8.832,7.168-16,16-16c8.832,0,16,7.168,16,16v18.016 c10.016,2.272,19.36,6.496,27.072,12.768c6.88,5.568,7.904,15.648,2.304,22.496c-5.6,6.88-15.68,7.872-22.496,2.304 C208.832,130.688,200.704,128,192,128c-17.344,0-32,10.976-32,24s14.656,24,32,24c35.296,0,64,25.12,64,56 c0,26.016-20.48,47.744-48,54.016V304c0,8.832-7.168,16-16,16c-8.832,0-16-7.168-16-16v-18.016 c-10.016-2.272-19.36-6.496-27.072-12.768c-6.88-5.6-7.904-15.68-2.304-22.528c5.6-6.912,15.648-7.872,22.496-2.304 C175.168,253.312,183.296,256,192,256c17.344,0,32-10.976,32-24s-14.656-24-32-24c-35.296,0-64-25.12-64-56 C128,125.984,148.48,104.256,176,97.984z M368,448H144c-8.832,0-16-7.168-16-16c0-8.832,7.168-16,16-16h224 c8.832,0,16,7.168,16,16C384,440.832,376.832,448,368,448z M368,384H144c-8.832,0-16-7.168-16-16c0-8.832,7.168-16,16-16h224 c8.832,0,16,7.168,16,16C384,376.832,376.832,384,368,384z M368,320h-64c-8.832,0-16-7.168-16-16c0-8.832,7.168-16,16-16h64 c8.832,0,16,7.168,16,16C384,312.832,376.832,320,368,320z M368,256h-64c-8.832,0-16-7.168-16-16c0-8.832,7.168-16,16-16h64 c8.832,0,16,7.136,16,16C384,248.832,376.832,256,368,256z"
        })
      })
    })]
  }));
});
const BillEnvelope = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-bill-envelope",
    height: "469pt",
    viewBox: "0 -53 469.33333 469",
    width: "469pt",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m239.253906 233.800781c-2.902344 1.375-6.265625 1.375-9.167968 0l-230.085938-110.433593v228.800781c0 5.890625 4.777344 10.664062 10.667969 10.664062h448c5.890625 0 10.664062-4.773437 10.664062-10.664062v-228.800781zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m64 80.285156-52.425781 24.957032 52.425781 25.175781zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m405.332031 80.285156v50.132813l52.429688-25.164063zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m373.332031.167969h-277.332031c-5.890625 0-10.667969 4.773437-10.667969 10.664062v129.828125l149.335938 71.695313 149.332031-71.695313v-129.828125c0-5.890625-4.777344-10.664062-10.667969-10.664062zm-170.664062 128h-64c-5.890625 0-10.667969-4.777344-10.667969-10.667969s4.777344-10.667969 10.667969-10.667969h64c5.890625 0 10.664062 4.777344 10.664062 10.667969s-4.773437 10.667969-10.664062 10.667969zm0-42.667969h-64c-5.890625 0-10.667969-4.777344-10.667969-10.667969s4.777344-10.664062 10.667969-10.664062h64c5.890625 0 10.664062 4.773437 10.664062 10.664062s-4.773437 10.667969-10.664062 10.667969zm128-5.332031c5.890625 0 10.664062 4.773437 10.664062 10.664062v32c0 5.890625-4.773437 10.667969-10.664062 10.667969h-21.335938v10.667969c0 5.890625-4.773437 10.664062-10.664062 10.664062s-10.667969-4.773437-10.667969-10.664062v-10.667969h-21.332031c-5.890625 0-10.667969-4.777344-10.667969-10.667969s4.777344-10.664062 10.667969-10.664062h53.332031v-10.667969h-53.332031c-5.890625 0-10.667969-4.777344-10.667969-10.667969v-32c0-5.890625 4.777344-10.664062 10.667969-10.664062h21.332031v-10.667969c0-5.890625 4.777344-10.667969 10.667969-10.667969s10.664062 4.777344 10.664062 10.667969v10.667969h21.335938c5.890625 0 10.664062 4.773437 10.664062 10.664062s-4.773437 10.667969-10.664062 10.667969h-53.335938v10.667969zm0 0"
    })]
  }));
});
const Books = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-books",
    viewBox: "0 0 480.00958 480",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m128 104.003906v-32c0-4.417968-3.582031-8-8-8h-112c-4.417969 0-8 3.582032-8 8v32zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m0 120.003906v264h128v-264zm96 104h-64c-4.417969 0-8-3.582031-8-8v-64c0-4.417968 3.582031-8 8-8h64c4.417969 0 8 3.582032 8 8v64c0 4.417969-3.582031 8-8 8zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m0 432.003906v40c0 4.417969 3.582031 8 8 8h112c4.417969 0 8-3.582031 8-8v-40zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m0 400.003906h128v16h-128zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m144 400.003906h104v16h-104zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m248 32.003906v-24c0-4.417968-3.582031-7.99999975-8-7.99999975h-88c-4.417969 0-8 3.58203175-8 7.99999975v24zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m144 88.003906h104v296h-104zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m144 432.003906v40c0 4.417969 3.582031 8 8 8h88c4.417969 0 8-3.582031 8-8v-40zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m144 48.003906h104v24h-104zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m263.808594 165.667969 4.28125 16.433593 135.484375-36.128906-4.285157-16.433594zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m330.664062 421.949219 135.480469-36.128907-8.578125-32.886718-135.488281 36.128906zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m453.527344 337.453125-45.910156-176-135.488282 36.128906 45.910156 176zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m259.769531 150.1875 135.476563-36.125-11.484375-44.058594c-1.183594-4.265625-5.542969-6.816406-9.839844-5.757812l-120 32c-4.238281 1.160156-6.765625 5.5-5.683594 9.757812zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m470.183594 401.300781-135.488282 36.128907 9.542969 36.574218c.554688 2.0625 1.90625 3.820313 3.761719 4.882813 1.207031.730469 2.589844 1.117187 4 1.117187.699219 0 1.398438-.082031 2.078125-.238281l120-32c4.238281-1.160156 6.765625-5.503906 5.683594-9.761719zm0 0"
    })]
  }));
});
const Bowling = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-bowling",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 512 512",
    enableBackground: "new 0 0 512 512",
    xmlSpace: "preserve",
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M405,301.985c-57.99,0-105,47.01-105,105s47.01,105,105,105s107-47.01,107-105S462.99,301.985,405,301.985z M360,436.985\nc-8.284,0-15-6.716-15-15c0-8.286,6.716-15,15-15s15,6.714,15,15C375,430.269,368.284,436.985,360,436.985z M390,376.985\nc-8.284,0-15-6.716-15-15c0-8.286,6.716-15,15-15s15,6.714,15,15C405,370.269,398.284,376.985,390,376.985z M420,436.985\nc-8.284,0-15-6.716-15-15c0-8.286,6.716-15,15-15s15,6.714,15,15C435,430.269,428.284,436.985,420,436.985z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M141.226,210.915C127.544,199.417,120,184.271,120,168.26v-26.536c0-13.301,4.761-25.884,13.418-35.42\nc8.394-9.243,16.582-20.2,16.582-43.11c0-32.899-24.662-63.179-59.751-63.179C56.578,0.015,30,27.041,30,59.985\nc0.773,4.268-4.241,23.397,16.597,46.318C55.239,115.84,60,128.423,60,141.724v26.536c0,16.011-7.529,31.157-21.226,42.656\nC14.136,231.57,0,261.878,0,294.061c0.98,36.885,3.845,42.523,13.938,97.925h152.051v-0.001\nc11.215-62.102,12.953-58.09,14.011-97.925C180,261.877,165.879,231.584,141.226,210.915z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M19.226,421.985c1.816,10.624,3.777,22.361,5.955,35.889c2.783,13.975,15.161,24.111,29.414,24.111h70.811\nc14.252,0,26.63-10.136,29.413-24.111c2.184-13.599,4.122-25.241,5.929-35.889H19.226z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M351.225,210.916C337.544,199.417,330,184.271,330,168.26v-26.536c0-13.301,4.761-25.884,13.418-35.42\nc8.394-9.243,16.582-20.2,16.582-43.11c0-32.899-24.662-63.179-59.751-63.179C266.578,0.015,240,27.041,240,59.985\nc0.773,4.268-4.241,23.397,16.597,46.318c8.643,9.536,13.403,22.119,13.403,35.42v26.536c0,16.011-7.529,31.157-21.226,42.656\nC224.136,231.57,210,261.878,210,294.061c0.98,36.885,3.845,42.523,13.938,97.925h47.578\nc6.929-61.586,54.974-110.336,116.257-118.259C383.139,249.376,370.581,227.145,351.225,210.916z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M271.517,421.985h-42.29c1.816,10.624,3.777,22.361,5.955,35.889c2.782,13.975,15.16,24.111,29.413,24.111h28.259\nC281.117,464.489,273.987,443.941,271.517,421.985z"
        })
      })
    })]
  }));
});
const Briefcase$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-briefcase",
    viewBox: "0 -31 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m211 240h90v30h-90zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m415.378906 270h-84.378906v15c0 8.289062-6.710938 15-15 15h-120c-8.289062 0-15-6.710938-15-15v-15h-84.378906c-19.394532 0-36.546875-12.363281-42.6875-30.761719l-53.933594-161.828125v327.589844c0 24.8125 20.1875 45 45 45h422c24.8125 0 45-20.1875 45-45v-327.578125l-53.9375 161.816406c-6.136719 18.398438-23.289062 30.761719-42.683594 30.761719zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m316 0h-120c-24.8125 0-45 20.1875-45 45v15h-125.191406l56.574218 169.746094c2.050782 6.136718 7.777344 10.253906 14.238282 10.253906h84.378906v-15c0-8.289062 6.710938-15 15-15h120c8.289062 0 15 6.710938 15 15v15h84.378906c6.460938 0 12.1875-4.117188 14.238282-10.253906l56.578124-169.746094h-125.195312v-15c0-24.8125-20.1875-45-45-45zm-135 60v-15c0-8.277344 6.722656-15 15-15h120c8.277344 0 15 6.722656 15 15v15zm0 0"
    })]
  }));
});
const Calendar$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-calendar",
    enableBackground: "new 0 0 24 24",
    height: "512",
    viewBox: "0 0 24 24",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "m20 4h-1v-2h-2v2h-10v-2h-2v2h-1c-1.1 0-2 .9-2 2h20c0-1.1-.9-2-2-2z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m2 20c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-12h-20zm15-10h2v2h-2zm0 4h2v2h-2zm-4-4h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zm-4-8h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zm-4-4h2v2h-2zm0 4h2v2h-2z"
      })]
    })
  }));
});
const Car = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-car",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M96,160H53.333c-5.888,0-10.667,4.779-10.667,10.667s4.779,10.667,10.667,10.667H96c5.888,0,10.667-4.779,10.667-10.667 S101.888,160,96,160z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M436.843,188.779c-2.027-6.379-42.731-92.629-57.963-101.888C363.029,77.248,268.203,74.667,256,74.667 s-107.029,2.581-122.88,12.224c-15.232,9.237-55.936,95.509-57.963,101.888c-1.792,5.611,1.344,11.605,6.955,13.397 c5.675,1.771,11.627-1.344,13.397-6.955c3.349-10.603,40.341-82.795,48.469-89.963C153.003,100.949,219.456,96,256,96 s102.997,4.949,111.275,8.747c8.853,7.68,45.867,79.872,49.216,90.475c1.451,4.544,5.653,7.445,10.176,7.445 c1.067,0,2.155-0.149,3.243-0.491C435.499,200.384,438.635,194.389,436.843,188.779z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M96,373.333c-4.992,0-9.003,3.499-10.155,8.128l-64.512-16.128v-2.667c0-5.888-4.779-10.667-10.667-10.667 S0,356.779,0,362.667v42.667c0,17.643,14.357,32,32,32h42.667c17.643,0,32-14.357,32-32V384 C106.667,378.112,101.888,373.333,96,373.333z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M501.333,352c-5.888,0-10.667,4.779-10.667,10.667v2.667l-64.512,16.128c-1.152-4.629-5.163-8.128-10.155-8.128 c-5.888,0-10.667,4.779-10.667,10.667v21.333c0,17.643,14.357,32,32,32H480c17.643,0,32-14.357,32-32v-42.667 C512,356.779,507.221,352,501.333,352z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M458.667,160H416c-5.888,0-10.667,4.779-10.667,10.667s4.779,10.667,10.667,10.667h42.667 c5.888,0,10.667-4.779,10.667-10.667S464.555,160,458.667,160z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M511.168,260.629l-29.099,5.824c-3.584,0.555-75.221,10.88-93.376,10.88c-2.603,2.069-4.949,15.765-4.672,28.587 c65.024-3.072,115.648-7.147,116.459-7.211l11.499-1.557C511.957,283.008,511.744,270.933,511.168,260.629z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M493.675,213.739c-4.779-1.387-7.275-4.864-12.011-11.947l-3.648-5.333c-6.379-8.896-18.709-9.28-30.635-9.621 c-3.584-0.107-9.259-0.277-11.947-0.896c-0.917-1.344-2.155-2.475-3.648-3.285C411.883,171.712,336.469,160,256,160 s-155.883,11.712-175.787,22.656c-1.493,0.811-2.731,1.941-3.669,3.307c-2.688,0.619-8.363,0.789-11.947,0.896 c-11.904,0.341-24.235,0.704-30.613,9.6l-3.648,5.355c-4.736,7.083-7.232,10.56-12.011,11.947 c-8.363,2.453-12.949,11.029-15.488,26.624l21.077,5.269c0.341,0,69.931,10.347,93.419,10.347c8.064,0,15.168,3.072,20.544,8.875 c11.307,12.224,11.84,33.643,11.563,41.984c34.325,1.429,71.381,2.475,106.56,2.475c35.221,0,72.299-1.045,106.667-2.475 c-0.235-9.429,0.299-33.045,10.859-44.203c4.139-4.352,9.365-6.656,15.168-6.656c13.803,0,69.504-7.616,89.792-10.56l30.528-6.123 C506.453,224.363,501.867,216.128,493.675,213.739z M330.667,288H181.333c-5.888,0-10.667-4.779-10.667-10.667 s4.779-10.667,10.667-10.667h149.333c5.888,0,10.667,4.779,10.667,10.667S336.555,288,330.667,288z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M502.741,319.915c-1.856,0.149-133.845,10.752-246.741,10.752S11.115,320.064,9.813,319.979l-9.259-0.96 c1.152,23.147,4.715,57.856,15.765,63.744c11.52,6.123,144.789,11.904,239.68,11.904s228.16-5.781,239.659-11.925 c11.093-5.909,14.656-40.853,15.787-64L502.741,319.915z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M122.197,279.339c-1.323-1.429-2.731-2.005-4.864-2.005c-25.173,0-94.635-10.347-97.579-10.773l-19.008-4.736 C0.213,271.936,0.021,283.776,0,297.493l11.755,1.216c0.683,0.064,51.285,4.117,116.309,7.211 C128.277,298.219,127.253,284.8,122.197,279.339z"
        })
      })
    })]
  }));
});
const CardsView = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-icon-cards-view",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M226,0H60C26.916,0,0,26.916,0,60v166c0,11.046,8.954,20,20,20h206c11.046,0,20-8.954,20-20V20 C246,8.954,237.046,0,226,0z M206,206H40V60c0-11.028,8.972-20,20-20h146V206z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M226,266H20c-11.046,0-20,8.954-20,20v166c0,33.084,26.916,60,60,60h166c11.046,0,20-8.954,20-20V286 C246,274.954,237.046,266,226,266z M206,472H60c-11.028,0-20-8.972-20-20V306h166V472z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M452,0H286c-11.046,0-20,8.954-20,20v206c0,11.046,8.954,20,20,20h206c11.046,0,20-8.954,20-20V60 C512,26.916,485.084,0,452,0z M472,206H306V40h146c11.028,0,20,8.972,20,20V206z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M492,266H286c-11.046,0-20,8.954-20,20v206c0,11.046,8.954,20,20,20h166c33.084,0,60-26.916,60-60V286 C512,274.954,503.046,266,492,266z M472,452c0,11.028-8.972,20-20,20H306V306h166V452z"
    })]
  }));
});
const CaretDownArrow = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    viewBox: "0 0 292.362 292.362",
    width: "100%",
    height: "100%"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z"
    })
  }));
});
const Checkmark = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-checkmark",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    width: "442.533px",
    height: "442.533px",
    viewBox: "0 0 442.533 442.533",
    enableBackground: "new 0 0 442.533 442.533",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("path", {
        d: "M434.539,98.499l-38.828-38.828c-5.324-5.328-11.799-7.993-19.41-7.993c-7.618,0-14.093,2.665-19.417,7.993L169.59,247.248 l-83.939-84.225c-5.33-5.33-11.801-7.992-19.412-7.992c-7.616,0-14.087,2.662-19.417,7.992L7.994,201.852 C2.664,207.181,0,213.654,0,221.269c0,7.609,2.664,14.088,7.994,19.416l103.351,103.349l38.831,38.828 c5.327,5.332,11.8,7.994,19.414,7.994c7.611,0,14.084-2.669,19.414-7.994l38.83-38.828L434.539,137.33 c5.325-5.33,7.994-11.802,7.994-19.417C442.537,110.302,439.864,103.829,434.539,98.499z"
      })
    })
  }));
});
const Checkmark2 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    viewBox: "0 0 442.533 442.533",
    width: "100%",
    height: "100%"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M434.539 98.499l-38.828-38.828c-5.324-5.328-11.799-7.993-19.41-7.993-7.618 0-14.093 2.665-19.417 7.993L169.59 247.248l-83.939-84.225c-5.33-5.33-11.801-7.992-19.412-7.992-7.616 0-14.087 2.662-19.417 7.992L7.994 201.852C2.664 207.181 0 213.654 0 221.269c0 7.609 2.664 14.088 7.994 19.416l103.351 103.349 38.831 38.828c5.327 5.332 11.8 7.994 19.414 7.994 7.611 0 14.084-2.669 19.414-7.994l38.83-38.828L434.539 137.33c5.325-5.33 7.994-11.802 7.994-19.417.004-7.611-2.669-14.084-7.994-19.414z"
    })
  }));
});
const ChevronRight$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-chevron-right",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    viewBox: "0 0 492.004 492.004",
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M382.678,226.804L163.73,7.86C158.666,2.792,151.906,0,144.698,0s-13.968,2.792-19.032,7.86l-16.124,16.12 c-10.492,10.504-10.492,27.576,0,38.064L293.398,245.9l-184.06,184.06c-5.064,5.068-7.86,11.824-7.86,19.028 c0,7.212,2.796,13.968,7.86,19.04l16.124,16.116c5.068,5.068,11.824,7.86,19.032,7.86s13.968-2.792,19.032-7.86L382.678,265 c5.076-5.084,7.864-11.872,7.848-19.088C390.542,238.668,387.754,231.884,382.678,226.804z"
    })
  }));
});
const ChevronRight2 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-chevron-right-2",
    viewBox: "0 0 492.004 492.004",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M382.678,226.804L163.73,7.86C158.666,2.792,151.906,0,144.698,0s-13.968,2.792-19.032,7.86l-16.124,16.12 c-10.492,10.504-10.492,27.576,0,38.064L293.398,245.9l-184.06,184.06c-5.064,5.068-7.86,11.824-7.86,19.028 c0,7.212,2.796,13.968,7.86,19.04l16.124,16.116c5.068,5.068,11.824,7.86,19.032,7.86s13.968-2.792,19.032-7.86L382.678,265 c5.076-5.084,7.864-11.872,7.848-19.088C390.542,238.668,387.754,231.884,382.678,226.804z"
    })
  }));
});
const CircusTent = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-circus-tent",
    viewBox: "0 0 512.021 512.021",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M272.445,100.736c0,0-0.021,0-0.021-0.021c-2.709-3.072-4.565-5.547-5.952-7.765V61.013l56.704-18.901 c4.352-1.451,7.296-5.525,7.296-10.112s-2.944-8.661-7.296-10.112l-64-21.333c-0.384-0.128-0.768-0.021-1.152-0.107 C257.298,0.277,256.594,0,255.805,0c-0.299,0-0.555,0.149-0.853,0.171c-0.619,0.043-1.195,0.192-1.792,0.363 c-0.981,0.256-1.856,0.619-2.688,1.109c-0.277,0.171-0.619,0.171-0.896,0.363c-0.192,0.149-0.277,0.384-0.469,0.555 c-0.853,0.704-1.515,1.536-2.112,2.475c-0.235,0.384-0.555,0.704-0.747,1.109c-0.683,1.387-1.109,2.88-1.109,4.523v42.667v39.595 c-1.344,2.112-3.136,4.523-5.952,7.787l-0.021,0.021C198.93,145.984,58.109,205.888,40.338,213.333h430.933 C453.501,205.888,312.679,145.984,272.445,100.736z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M31.805,234.667c0,35.285,28.715,64,64,64c22.272,0,41.856-11.456,53.333-28.757 c11.477,17.301,31.061,28.757,53.333,28.757c22.272,0,41.856-11.456,53.333-28.757c11.477,17.301,31.061,28.757,53.333,28.757 s41.856-11.456,53.333-28.757c11.477,17.301,31.061,28.757,53.333,28.757c35.285,0,64-28.715,64-64H31.805z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M294.461,350.507c27.264,53.077,67.861,110.912,90.859,142.229c2.133-23.595,5.973-46.72,8-58.069 C376.871,423.872,331.559,392.405,294.461,350.507z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M118.269,434.667c2.027,11.349,5.867,34.453,8,58.069c22.997-31.339,63.573-89.152,90.837-142.229 C180.029,392.405,134.738,423.872,118.269,434.667z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M255.805,315.072C230.503,384.555,166.397,474.709,138.621,512H373.01C345.213,474.709,281.106,384.555,255.805,315.072z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M100.861,420.501c0.917-0.576,70.784-44.267,114.624-101.781c-20.779,3.115-42.624-1.237-60.416-13.163 c-3.584-2.411-8.299-2.411-11.883,0C129.106,315.008,112.722,320,95.805,320c-6.357,0-12.949-0.917-20.779-2.88 c-2.987-0.768-6.208-0.171-8.747,1.621c-2.539,1.792-4.181,4.587-4.48,7.68c-9.301,94.571-49.621,169.045-50.027,169.771 c-1.813,3.307-1.749,7.317,0.171,10.581c1.941,3.243,5.419,5.227,9.195,5.227h85.056c-1.557-36.011-10.091-79.893-10.197-80.384 C95.143,427.264,97.085,422.827,100.861,420.501z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M498.685,494.037c-6.656-12.864-40.448-81.835-48.896-167.616c-0.299-3.093-1.941-5.888-4.48-7.68 s-5.781-2.411-8.747-1.621c-7.808,1.963-14.4,2.88-20.757,2.88c-16.917,0-33.301-4.992-47.403-14.443 c-3.584-2.411-8.299-2.411-11.883,0c-17.792,11.925-39.637,16.277-60.437,13.163c43.861,57.557,113.728,101.205,114.645,101.781 c3.797,2.325,5.739,6.763,4.885,11.136c-0.085,0.491-8.619,44.395-10.197,80.384h85.056c0.149,0,0.277,0,0.427,0 c5.888,0,10.667-4.779,10.667-10.667C501.565,498.517,500.477,495.957,498.685,494.037z"
        })
      })
    })]
  }));
});
const Close$1$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-close",
    enableBackground: "new 0 0 492 492",
    version: "1.1",
    viewBox: "0 0 492 492",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M300.188,246L484.14,62.04c5.06-5.064,7.852-11.82,7.86-19.024c0-7.208-2.792-13.972-7.86-19.028L468.02,7.872 c-5.068-5.076-11.824-7.856-19.036-7.856c-7.2,0-13.956,2.78-19.024,7.856L246.008,191.82L62.048,7.872 c-5.06-5.076-11.82-7.856-19.028-7.856c-7.2,0-13.96,2.78-19.02,7.856L7.872,23.988c-10.496,10.496-10.496,27.568,0,38.052 L191.828,246L7.872,429.952c-5.064,5.072-7.852,11.828-7.852,19.032c0,7.204,2.788,13.96,7.852,19.028l16.124,16.116 c5.06,5.072,11.824,7.856,19.02,7.856c7.208,0,13.968-2.784,19.028-7.856l183.96-183.952l183.952,183.952 c5.068,5.072,11.824,7.856,19.024,7.856h0.008c7.204,0,13.96-2.784,19.028-7.856l16.12-16.116 c5.06-5.064,7.852-11.824,7.852-19.028c0-7.204-2.792-13.96-7.852-19.028L300.188,246z"
    })
  }));
});
const CreditCard = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-credit-card",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M452,76H60c-33.084,0-60,26.916-60,60c0,15.945,0,232.847,0,240c0,33.084,26.916,60,60,60h392c33.084,0,60-26.916,60-60 c0-11.2,0-230.936,0-240C512,102.916,485.084,76,452,76z M472,376c0,11.028-8.972,20-20,20H60c-11.028,0-20-8.972-20-20V271h432 V376z M472,231H40v-50h432V231z M472,141H40v-5c0-11.028,8.972-20,20-20h392c11.028,0,20,8.972,20,20V141z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M230,326H90c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h140c11.046,0,20-8.954,20-20 C250,334.954,241.046,326,230,326z"
        })
      })
    })]
  }));
});
const CreditCardCheck = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-credit-card-check",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "68",
      y: "210.099",
      width: "264",
      height: "40"
    }), /* @__PURE__ */ jsx$3("polygon", {
      points: "343.191,420.538 264.789,345.908 237.211,374.881 345.438,477.901 511.88,292.585 482.12,265.856 "
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M452,34.099H60c-33.084,0-60,26.916-60,60v256c0,33.084,26.916,60,60,60h137v-40H60c-11.028,0-20-8.972-20-20v-170h432 v46.122h40V94.099C512,61.015,485.084,34.099,452,34.099z M472,120.099H40v-26c0-11.028,8.972-20,20-20h392 c11.028,0,20,8.972,20,20V120.099z"
    })]
  }));
});
const CreditCards = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-credit-cards",
    viewBox: "0 0 512 512.00025",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m492 228h-26.636719l21.324219-21.324219c7.808594-7.804687 7.808594-20.472656 0-28.285156l-172.53125-172.53125c-7.8125-7.8125-20.476562-7.8125-28.285156 0l-280.015625 280.011719c-7.804688 7.808594-7.808594 20.476562 0 28.285156l70.144531 70.144531v107.699219c0 11.046875 8.953125 20 20 20h396c11.042969 0 20-8.953125 20-20v-244c0-11.046875-8.957031-20-20-20zm-20 76h-356v-36h356zm-63.203125-76h-181.019531l125.976562-125.976562 90.507813 90.511718zm-108.785156-179.714844 25.457031 25.457032-154.261719 154.257812h-50.910156zm-224.011719 224.011719v50.914063l-2.261719 2.257812-25.457031-25.453125zm40 199.703125v-128h356v128zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m441 412c0 13.808594-11.195312 25-25 25-13.808594 0-25-11.191406-25-25s11.191406-25 25-25c13.804688 0 25 11.191406 25 25zm0 0"
    })]
  }));
});
const CupOfTea = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-cup-of-tea",
    viewBox: "0 0 512.009 512.009",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M370.634,395.38l4.715-0.917c5.547-1.067,136.661-26.773,136.661-95.808c0-21.461-6.933-36.8-20.651-45.611 c-19.797-12.757-47.531-7.168-64.683-1.707v-16.683c0-17.643-14.357-32-32-32H96.009c-17.643,0-32,14.357-32,32v21.333 c0,63.637,29.675,122.027,78.827,160H10.676c-4.309,0-8.213,2.603-9.856,6.592c-1.664,3.989-0.747,8.576,2.304,11.627 l23.915,23.915c14.123,14.101,32.875,21.867,52.8,21.867h330.987c19.648,0,38.891-7.979,52.8-21.867l23.915-23.915 c3.051-3.051,3.968-7.637,2.304-11.627c-1.664-3.989-5.547-6.592-9.856-6.592H347.807 C356.02,409.673,363.593,402.783,370.634,395.38z M425.418,274.313c13.483-5.12,40.405-12.373,54.4-3.307 c7.317,4.672,10.859,13.739,10.859,27.648c0,35.477-59.307,59.221-98.496,69.931C410.783,340.809,422.324,308.596,425.418,274.313 z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M328.415,113.332c17.344-21.675,17.344-55.616,0-77.291c-3.733-4.608-10.432-5.312-14.997-1.664 c-4.608,3.669-5.333,10.389-1.664,14.997c11.008,13.717,11.008,36.907-0.043,50.667c-17.365,21.653-17.365,55.616-0.021,77.291 c2.133,2.645,5.205,4.011,8.341,4.011c2.347,0,4.715-0.768,6.677-2.347c4.608-3.669,5.333-10.389,1.664-14.997 C317.364,150.281,317.364,127.092,328.415,113.332z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M264.308,113.332c17.365-21.675,17.365-55.616,0-77.291c-3.669-4.587-10.368-5.333-14.997-1.664 c-4.608,3.669-5.333,10.389-1.664,14.997c10.987,13.717,10.987,36.907-0.021,50.667c-17.365,21.653-17.365,55.616,0,77.291 c2.112,2.645,5.205,4.011,8.341,4.011c2.325,0,4.693-0.768,6.656-2.347c4.587-3.669,5.333-10.389,1.664-14.997 C253.3,150.281,253.3,127.092,264.308,113.332z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M200.394,113.311c17.344-21.675,17.344-55.616,0-77.291c-3.669-4.587-10.389-5.355-14.997-1.643 c-4.587,3.669-5.333,10.389-1.643,14.976c10.987,13.717,10.987,36.907-0.021,50.667c-17.387,21.675-17.387,55.637-0.021,77.312 c2.112,2.624,5.205,3.989,8.341,3.989c2.325,0,4.693-0.768,6.656-2.347c4.608-3.669,5.333-10.389,1.664-14.997 C189.385,150.26,189.385,127.071,200.394,113.311z"
        })
      })
    })]
  }));
});
const Dashboard$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-dashboard",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M226,352H20c-11.046,0-20,8.954-20,20v120c0,11.046,8.954,20,20,20h206c11.046,0,20-8.954,20-20V372 C246,360.954,237.046,352,226,352z M206,472H40v-80h166V472z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M226,0H20C8.954,0,0,8.954,0,20v292c0,11.046,8.954,20,20,20h206c11.046,0,20-8.954,20-20V20C246,8.954,237.046,0,226,0z M206,292H40V40h166V292z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M492,0H286c-11.046,0-20,8.954-20,20v120c0,11.046,8.954,20,20,20h206c11.046,0,20-8.954,20-20V20 C512,8.954,503.046,0,492,0z M472,120H306V40h166V120z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M492,180H286c-11.046,0-20,8.954-20,20v292c0,11.046,8.954,20,20,20h206c11.046,0,20-8.954,20-20V200 C512,188.954,503.046,180,492,180z M472,472H306V220h166V472z"
    })]
  }));
});
const DollarInHand = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-dollar-in-hand",
    viewBox: "0 0 192 192",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m96 112a56 56 0 1 0 -56-56 56.064 56.064 0 0 0 56 56zm-24-40h28a4 4 0 0 0 0-8h-8a20 20 0 0 1 -4-39.6v-8.4h16v8h16v16h-28a4 4 0 0 0 0 8h8a20 20 0 0 1 4 39.6v8.4h-16v-8h-16z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m147 155c-10.438 6.71-15.873 13.641-17.963 15.207a3.984 3.984 0 0 1 -2.391.793h-29.7a4.012 4.012 0 0 1 -1.789-.422l-15.157-10.578c32 0 36.216-11.507 38.836-18.586a4.005 4.005 0 0 0 -3.745-5.414h-115.091v40h47.056a4.012 4.012 0 0 1 1.789.422l30.31 15.156a4.012 4.012 0 0 0 1.789.422h53.4a4 4 0 0 0 2.829-1.172l30.827-30.828c2.828-2.828-11.483-11.118-21-5z"
    })]
  }));
});
const DollarRecurring = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-dollar-recurring",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 426.667 426.667",
    enableBackground: "new 0 0 426.667 426.667",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsxs$2("g", {
          children: [/* @__PURE__ */ jsx$3("path", {
            d: "M213.333,42.667c46.933,0,89.6,19.2,121.6,51.2L298.667,128h106.667V21.333L364.8,64C326.4,25.6,273.067,0,213.333,0\nC96,0,0,96,0,213.333h42.667C42.667,119.467,119.467,42.667,213.333,42.667z"
          }), /* @__PURE__ */ jsx$3("path", {
            d: "M213.333,149.333c10.667,0,21.333,10.667,21.333,21.333h42.667c0-27.733-17.067-51.2-42.667-59.733v-25.6H192v25.6\nc-25.6,8.533-42.667,32-42.667,59.733c0,34.133,27.733,64,64,64c12.8,0,21.333,10.667,21.333,21.333\nc0,10.667-10.667,21.333-21.333,21.333S192,266.667,192,256h-42.667c0,27.733,17.067,51.2,42.667,59.733v25.6h42.667v-25.6\nc25.6-8.533,42.667-32,42.667-59.733c0-36.267-27.733-64-64-64C202.667,192,192,181.333,192,170.667\nC192,157.867,202.667,149.333,213.333,149.333z"
          }), /* @__PURE__ */ jsx$3("path", {
            d: "M384,213.333C384,307.2,307.2,384,213.333,384c-46.933,0-89.6-19.2-121.6-51.2L128,298.667H21.333v106.667l40.533-42.667\nc38.4,38.4,91.733,64,151.467,64c117.333,0,213.333-96,213.333-213.333H384z"
          })]
        })
      })
    })
  }));
});
const DollarRecurring2 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-dollar-recurring-2",
    viewBox: "0 0 426.667 426.667",
    enableBackground: "new 0 0 426.667 426.667",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsxs$2("g", {
          children: [/* @__PURE__ */ jsx$3("path", {
            d: "M213.333,42.667c46.933,0,89.6,19.2,121.6,51.2L298.667,128h106.667V21.333L364.8,64C326.4,25.6,273.067,0,213.333,0\nC96,0,0,96,0,213.333h42.667C42.667,119.467,119.467,42.667,213.333,42.667z"
          }), /* @__PURE__ */ jsx$3("path", {
            d: "M213.333,149.333c10.667,0,21.333,10.667,21.333,21.333h42.667c0-27.733-17.067-51.2-42.667-59.733v-25.6H192v25.6\nc-25.6,8.533-42.667,32-42.667,59.733c0,34.133,27.733,64,64,64c12.8,0,21.333,10.667,21.333,21.333\nc0,10.667-10.667,21.333-21.333,21.333S192,266.667,192,256h-42.667c0,27.733,17.067,51.2,42.667,59.733v25.6h42.667v-25.6\nc25.6-8.533,42.667-32,42.667-59.733c0-36.267-27.733-64-64-64C202.667,192,192,181.333,192,170.667\nC192,157.867,202.667,149.333,213.333,149.333z"
          }), /* @__PURE__ */ jsx$3("path", {
            d: "M384,213.333C384,307.2,307.2,384,213.333,384c-46.933,0-89.6-19.2-121.6-51.2L128,298.667H21.333v106.667l40.533-42.667\nc38.4,38.4,91.733,64,151.467,64c117.333,0,213.333-96,213.333-213.333H384z"
          })]
        })
      })
    })
  }));
});
const DollarRecurring3 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-dollar-recurring-3",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m492 118h-323.480469v-49.714844l19.597657 19.597656c7.8125 7.808594 20.472656 7.808594 28.285156 0 7.8125-7.8125 7.8125-20.476562 0-28.285156l-53.738282-53.738281c-3.820312-3.824219-8.949218-5.859375-14.144531-5.859375-5.507812 0-10.585937 2.300781-14.144531 5.859375l-53.738281 53.738281c-7.808594 7.8125-7.808594 20.472656 0 28.285156 7.8125 7.808594 20.476562 7.808594 28.285156 0l19.597656-19.597656v49.714844h-108.519531c-11.046875 0-20 8.953125-20 20v236c0 11.046875 8.953125 20 20 20h323.480469v49.714844l-19.597657-19.597656c-7.8125-7.808594-20.476562-7.808594-28.285156 0-7.808594 7.8125-7.8125 20.476562 0 28.285156l53.738282 53.738281c3.675781 3.675781 8.757812 5.859375 14.144531 5.859375 5.265625 0 10.375-2.089844 14.144531-5.859375l53.738281-53.738281c7.8125-7.8125 7.8125-20.472656 0-28.285156-7.8125-7.808594-20.472656-7.808594-28.285156 0l-19.597656 19.597656v-49.714844h108.519531c11.046875 0 20-8.953125 20-20v-236c0-11.046875-8.953125-20-20-20zm-452 236v-32.292969c14.8125 5.683594 26.609375 17.480469 32.292969 32.292969zm432 0h-358.101562c-7.855469-36.914062-36.984376-66.042969-73.898438-73.898438v-122.101562h358.101562c7.855469 36.914062 36.984376 66.042969 73.898438 73.898438zm0-163.707031c-14.8125-5.683594-26.609375-17.480469-32.292969-32.292969h32.292969zm-216-13.292969c-43.5625 0-79 35.4375-79 79s35.4375 79 79 79 79-35.4375 79-79-35.4375-79-79-79zm0 118c-21.503906 0-39-17.496094-39-39s17.496094-39 39-39 39 17.496094 39 39-17.496094 39-39 39zm0 0"
    })
  }));
});
const DollarRecurring4 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-dollar-recurring-4",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m492 118h-323.480469v-49.714844l19.597657 19.597656c7.8125 7.808594 20.472656 7.808594 28.285156 0 7.8125-7.8125 7.8125-20.476562 0-28.285156l-53.738282-53.738281c-3.820312-3.824219-8.949218-5.859375-14.144531-5.859375-5.507812 0-10.585937 2.300781-14.144531 5.859375l-53.738281 53.738281c-7.808594 7.8125-7.808594 20.472656 0 28.285156 7.8125 7.808594 20.476562 7.808594 28.285156 0l19.597656-19.597656v49.714844h-108.519531c-11.046875 0-20 8.953125-20 20v236c0 11.046875 8.953125 20 20 20h323.480469v49.714844l-19.597657-19.597656c-7.8125-7.808594-20.476562-7.808594-28.285156 0-7.808594 7.8125-7.8125 20.476562 0 28.285156l53.738282 53.738281c3.675781 3.675781 8.757812 5.859375 14.144531 5.859375 5.265625 0 10.375-2.089844 14.144531-5.859375l53.738281-53.738281c7.8125-7.8125 7.8125-20.472656 0-28.285156-7.8125-7.808594-20.472656-7.808594-28.285156 0l-19.597656 19.597656v-49.714844h108.519531c11.046875 0 20-8.953125 20-20v-236c0-11.046875-8.953125-20-20-20zm-452 236v-32.292969c14.8125 5.683594 26.609375 17.480469 32.292969 32.292969zm432 0h-358.101562c-7.855469-36.914062-36.984376-66.042969-73.898438-73.898438v-122.101562h358.101562c7.855469 36.914062 36.984376 66.042969 73.898438 73.898438zm0-163.707031c-14.8125-5.683594-26.609375-17.480469-32.292969-32.292969h32.292969zm-216-13.292969c-43.5625 0-79 35.4375-79 79s35.4375 79 79 79 79-35.4375 79-79-35.4375-79-79-79zm0 118c-21.503906 0-39-17.496094-39-39s17.496094-39 39-39 39 17.496094 39 39-17.496094 39-39 39zm0 0"
    })
  }));
});
const DollarTransfer = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-dollar-transfer",
    height: "512pt",
    viewBox: "0 0 512 511",
    width: "512pt",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m141.925781 142.171875c14.808594-14.804687 32.054688-26.433594 51.269531-34.5625 19.910157-8.417969 41.039063-12.6875 62.804688-12.6875s42.894531 4.269531 62.804688 12.6875c19.214843 8.128906 36.464843 19.757813 51.269531 34.5625 6.398437 6.398437 12.203125 13.257813 17.386719 20.53125v-17.300781c0-55.476563-45.132813-100.609375-100.609376-100.609375h-124.804687v-44.292969l-162.046875 102.105469 116.140625 73.179687c7.042969-12.242187 15.671875-23.5 25.785156-33.613281zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m512 409.886719-116.140625-73.179688c-7.042969 12.242188-15.671875 23.496094-25.785156 33.613281-14.808594 14.804688-32.054688 26.433594-51.269531 34.558594-19.910157 8.421875-41.039063 12.691406-62.804688 12.691406s-42.894531-4.269531-62.804688-12.691406c-19.214843-8.125-36.464843-19.753906-51.269531-34.558594-6.398437-6.398437-12.203125-13.257812-17.386719-20.53125v17.300782c0 55.476562 45.132813 100.609375 100.609376 100.609375h124.808593v44.292969zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m124.707031 256.246094c0 72.511718 58.78125 131.296875 131.292969 131.296875 72.515625 0 131.296875-58.785157 131.296875-131.296875 0-72.511719-58.78125-131.296875-131.296875-131.296875-72.511719 0-131.292969 58.785156-131.292969 131.296875zm81.304688-21.339844c0-18.550781 13.460937-34.148438 40.386719-37.921875v-17.894531h23.144531v17.566406c12.148437 1.148438 23.96875 4.265625 33.324219 9.519531l-11.65625 28.070313c-11.324219-5.746094-21.996094-8.535156-32.011719-8.535156-11.324219 0-14.9375 3.28125-14.9375 7.222656 0 13.789062 63.53125 2.296875 63.53125 44.652344 0 17.730468-12.804688 33.160156-38.25 37.59375v18.222656h-23.144531v-17.402344c-16.417969-.984375-32.339844-5.417969-42.191407-11.492188l12.476563-28.234374c10.835937 6.402343 25.28125 10.507812 37.921875 10.507812 10.996093 0 14.9375-2.300781 14.9375-6.238281 0-14.449219-63.53125-2.792969-63.53125-45.636719zm0 0"
    })]
  }));
});
const DramaArts = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-drama-arts",
    viewBox: "0 -39 512.00029 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m235.214844 34.710938v11.140624c15.460937-1.046874 23.738281.207032 24.597656.347657 4.976562.8125 9.226562 4.027343 11.367188 8.589843l21.726562 46.304688c2.628906.613281 5.132812 1.910156 7.203125 3.929688 2.621094 2.554687 5.757813 4.554687 9.3125 5.421874 7.097656 1.730469 14.140625-.242187 19.117187-5.082031 5.136719-4.992187 12.972657-6.261719 19.027344-2.433593 8.65625 5.46875 9.585938 17.054687 2.796875 23.84375-9.578125 9.582031-22.316406 14.859374-35.867187 14.859374-.871094 0-1.738282-.023437-2.605469-.066406l29.207031 62.253906c1.234375 2.625 2.402344 5.269532 3.511719 7.925782 32.886719-10.371094 70.292969-2.667969 96.429687 23.171875 5.84375 5.773437 6.492188 15.203125 1.03125 21.34375-3.050781 3.429687-7.246093 5.144531-11.441406 5.144531-3.910156 0-7.824218-1.492188-10.804687-4.476562-17.714844-17.710938-43.148438-23.097657-65.570313-16.1875 8.503906 33.90625 7.9375 68.898437-.839844 101.710937 4.132813 1.367187 8.339844 2.585937 12.613282 3.648437 4.960937 1.230469 10.144531 1.242188 15.109375.015626 76.433593-18.90625 130.863281-87.644532 130.863281-167.28125v-144.125c0-7.136719-4.40625-13.535157-11.085938-16.046876-21.050781-7.910156-61.734374-18.664062-127.300781-18.664062-65.570312 0-106.257812 10.757812-127.3125 18.667969-6.679687 2.507812-11.085937 8.90625-11.085937 16.042969zm168.972656 70.449218c5.96875-5.96875 15.644531-5.96875 21.617188 0 3.804687 3.804688 8.863281 5.902344 14.246093 5.902344 5.382813 0 10.445313-2.097656 14.25-5.902344 5.96875-5.972656 15.648438-5.972656 21.617188 0 5.96875 5.96875 5.96875 15.644532 0 21.613282-9.582031 9.582031-22.316407 14.859374-35.867188 14.859374-13.546875 0-26.285156-5.277343-35.867187-14.859374-5.964844-5.96875-5.964844-15.644532.003906-21.613282zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m313.425781 216.804688-61.542969-131.171876c-2.832031-6.039062-9.105468-9.675781-15.757812-9.171874-22.222656 1.679687-63.90625 9.050781-123.945312 37.21875-59.363282 27.851562-91.628907 54.871093-107.328126 70.972656-4.980468 5.109375-6.253906 12.773437-3.222656 19.234375l61.214844 130.480469c33.824219 72.09375 112.304688 111.207031 189.535156 95.855468 4.992188-.992187 9.664063-3.183594 13.617188-6.390625 61.171875-49.578125 81.253906-134.929687 47.429687-207.027343zm-123.679687-9.777344c9.503906-26.304688 38.636718-39.976563 64.941406-30.46875 7.9375 2.867187 12.046875 11.628906 9.179688 19.570312-2.867188 7.9375-11.628907 12.050782-19.570313 9.179688-10.449219-3.773438-22.023437 1.65625-25.800781 12.105468-2.25 6.226563-8.117188 10.097657-14.375 10.097657-1.726563 0-3.480469-.292969-5.195313-.914063-7.9375-2.871094-12.050781-11.632812-9.179687-19.570312zm-59.113282 51.609375c-5.0625-1.828125-10.535156-1.578125-15.410156.710937-4.871094 2.285156-8.5625 6.332032-10.390625 11.394532-2.25 6.226562-8.121093 10.097656-14.378906 10.097656-1.722656 0-3.476563-.296875-5.191406-.914063-7.941407-2.867187-12.050781-11.628906-9.183594-19.570312 4.605469-12.742188 13.894531-22.929688 26.160156-28.683594 12.269531-5.753906 26.039063-6.390625 38.78125-1.785156 7.941407 2.867187 12.050781 11.628906 9.183594 19.570312-2.871094 7.9375-11.632813 12.046875-19.570313 9.179688zm51.324219 99.914062c-10.800781 0-21.773437-1.835937-32.503906-5.714843-7.941406-2.867188-12.050781-11.628907-9.183594-19.570313 2.871094-7.9375 11.628907-12.050781 19.570313-9.179687 33.894531 12.246093 71.433594-5.367188 83.679687-39.257813 2.867188-7.941406 11.628907-12.050781 19.570313-9.183594 7.9375 2.871094 12.046875 11.632813 9.179687 19.574219-14.097656 39.011719-51.035156 63.332031-90.3125 63.332031zm0 0"
    })]
  }));
});
const EatingUtensils = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-eating-utensils",
    viewBox: "0 0 511.999 511.999",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m505.13 46.625c-.021-17.365-5.931-32-17.536-43.52-3.84-3.819-9.92-4.139-14.165-.768-2.027 1.621-37.547 36.864-453.376 453.269-12.502 12.523-12.523 32.875-.043 45.333 6.059 6.059 14.101 9.387 22.656 9.387 8.512 0 16.533-3.328 22.571-9.344l135.787-135.808c52.309-52.309 74.965-59.563 87.445-60.459 23.445-1.685 43.669-10.411 58.517-25.259 67.947-67.967 158.293-166.037 158.144-232.831z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m85.823 191.286c.064.064.085.149.149.213 14.507 14.272 34.475 22.699 57.707 24.405 12.352.896 27.968 8.939 47.765 24.597 1.941 1.536 4.288 2.304 6.613 2.304 2.731 0 5.483-1.045 7.552-3.136l34.069-34.091c3.819-3.84 4.181-9.899.832-14.165-22.315-28.267-24.789-42.645-24.683-51.008.213-18.987-7.744-37.931-22.443-52.565l-2.752-2.325s-.021 0-.021-.021l-96-81.344c-4.501-3.819-11.243-3.243-15.04 1.237-3.819 4.48-3.243 11.221 1.237 15.04l87.168 73.856-29.312 29.312-88.446-88.448c-4.16-4.16-10.923-4.16-15.083 0s-4.16 10.923 0 15.083l88.448 88.448-29.952 29.952-75.2-79.936c-4.032-4.288-10.795-4.48-15.083-.448s-4.48 10.795-.448 15.083l82.709 87.808c.065.064.15.085.214.149z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m502.634 457.377-146.624-146.624c-3.499-3.52-8.939-4.139-13.141-1.536-11.797 7.253-25.344 12.245-40.32 14.805-3.925.661-7.147 3.477-8.363 7.275-1.216 3.797-.192 7.957 2.624 10.773l160.555 160.555c6.037 6.037 14.08 9.365 22.635 9.365s16.576-3.328 22.635-9.365 9.365-14.08 9.365-22.613-3.329-16.577-9.366-22.635z"
    })]
  }));
});
const EventTicket = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-event-ticket",
    viewBox: "0 0 494.336 494.336",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M282.432,236.885c-4.117-2.112-6.4-6.613-5.696-11.179l6.059-38.144l-27.307,27.307 c-3.264,3.264-8.299,4.075-12.373,1.963l-34.432-17.536l17.536,34.411c2.112,4.117,1.323,9.109-1.963,12.395l-27.307,27.307 l38.144-6.037c0.555-0.085,1.131-0.128,1.664-0.128c3.968,0,7.659,2.219,9.493,5.824l17.536,34.432l6.037-38.165 c0.725-4.565,4.309-8.149,8.875-8.875l38.123-6.037L282.432,236.885z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M481.835,215.168c0-8.555,3.328-16.576,9.365-22.613c2.005-2.005,3.115-4.715,3.115-7.552 c0-2.816-1.131-5.547-3.115-7.552L316.864,3.115C314.859,1.109,312.149,0,309.312,0s-5.568,1.131-7.552,3.136 c-12.032,12.075-33.173,12.075-45.205,0C254.549,1.131,251.819,0,249.003,0c-2.816,0-5.547,1.131-7.552,3.115L3.136,241.451 c-2.005,2.005-3.115,4.715-3.115,7.552s1.131,5.547,3.115,7.552c6.037,6.037,9.365,14.059,9.365,22.613 c0,8.171-3.157,16-8.896,22.016c-4.011,4.203-3.947,10.859,0.213,14.955c41.728,41.28,117.568,117.867,173.824,174.848 c1.984,2.027,4.693,3.157,7.531,3.179c3.605,0.043,5.568-1.088,7.552-3.093c12.117-11.968,33.067-11.883,45.035,0.128 c2.005,2.005,4.736,3.136,7.552,3.136c2.816,0,5.547-1.131,7.552-3.115L491.2,252.885c2.005-2.005,3.115-4.715,3.115-7.552 s-1.131-5.547-3.115-7.552C485.163,231.744,481.835,223.723,481.835,215.168z M250.283,58.283c4.16-4.16,10.923-4.16,15.083,0 l21.333,21.333c4.16,4.16,4.16,10.923,0,15.083c-2.069,2.091-4.8,3.136-7.531,3.136s-5.461-1.045-7.552-3.115l-21.333-21.333 C246.123,69.205,246.123,62.464,250.283,58.283z M94.72,286.72c-2.091,2.069-4.821,3.115-7.552,3.115s-5.461-1.045-7.552-3.115 l-21.333-21.333c-4.16-4.16-4.16-10.923,0-15.083c4.16-4.16,10.923-4.16,15.083,0l21.333,21.333 C98.88,275.797,98.88,282.539,94.72,286.72z M169.387,361.387c-2.091,2.069-4.821,3.115-7.552,3.115 c-2.731,0-5.461-1.045-7.552-3.115l-21.333-21.333c-4.16-4.16-4.16-10.923,0-15.083c4.16-4.16,10.923-4.16,15.083,0l21.333,21.333 C173.547,350.464,173.547,357.205,169.387,361.387z M244.053,436.053c-2.091,2.069-4.821,3.115-7.552,3.115 c-2.731,0-5.461-1.045-7.552-3.115l-21.333-21.333c-4.16-4.16-4.16-10.923,0-15.083s10.923-4.16,15.083,0l21.333,21.333 C248.213,425.131,248.213,431.872,244.053,436.053z M361.472,261.44c-0.725,4.587-4.309,8.171-8.875,8.896l-62.912,9.963 l-9.963,62.912c-0.725,4.565-4.309,8.149-8.875,8.875c-0.555,0.085-1.131,0.128-1.664,0.128c-3.968,0-7.659-2.219-9.493-5.824 l-28.907-56.768l-62.912,9.963c-4.672,0.853-9.088-1.579-11.157-5.696c-2.112-4.117-1.323-9.109,1.963-12.395l45.035-45.035 l-28.949-56.747c-2.091-4.096-1.301-9.109,1.963-12.373c3.243-3.264,8.299-4.075,12.373-1.963l56.768,28.907l45.035-45.035 c3.243-3.264,8.299-4.075,12.373-1.963c4.117,2.091,6.421,6.613,5.717,11.157l-9.984,62.912l56.747,28.928 C359.872,252.373,362.176,256.896,361.472,261.44z M361.387,169.387c-2.091,2.069-4.821,3.115-7.552,3.115 s-5.461-1.045-7.552-3.115l-21.333-21.333c-4.16-4.16-4.16-10.923,0-15.083c4.16-4.16,10.923-4.16,15.083,0l21.333,21.333 C365.547,158.464,365.547,165.205,361.387,169.387z M436.053,244.053c-2.091,2.069-4.821,3.115-7.552,3.115 c-2.731,0-5.461-1.045-7.552-3.115l-21.333-21.333c-4.16-4.16-4.16-10.923,0-15.083c4.16-4.16,10.923-4.16,15.083,0l21.333,21.333 C440.213,233.131,440.213,239.872,436.053,244.053z"
        })
      })
    })]
  }));
});
const Exit = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    viewBox: "0 0 512 512",
    width: "100%",
    height: "100%"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M361 396c-11.046 0-20 8.954-20 20v56H55V40h286v56c0 11.046 8.954 20 20 20s20-8.954 20-20V20c0-11.046-8.954-20-20-20H35C23.954 0 15 8.954 15 20v472c0 11.046 8.954 20 20 20h326c11.046 0 20-8.954 20-20v-76c0-11.046-8.954-20-20-20z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M491.141 241.858l-53.74-53.74c-7.81-7.811-20.473-7.81-28.284 0s-7.811 20.474 0 28.285L428.715 236l-165.678-.001c-11.045 0-20 8.954-20 20s8.954 20 20 20l165.68.001-19.599 19.599c-7.811 7.809-7.811 20.473 0 28.284 7.81 7.811 20.474 7.809 28.284-.001l53.74-53.74a.022.022 0 01.004-.005c4.024-4.027 5.709-8.682 5.854-14.137 0-5.392-2.291-10.576-5.859-14.142z"
    })]
  }));
});
const FileUpload = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    viewBox: "-64 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm65.18 216.01H224v80c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36l96.42-95.7c6.65-6.61 17.39-6.61 24.04 0l96.42 95.7c10.15 10.07 3.03 27.36-11.25 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z"
    })
  }));
});
const Flame = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-flame",
    enableBackground: "new 0 0 64 64",
    viewBox: "0 0 64 64",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m37.719 55.189c5.429-9.638 3.156-21.767-5.405-28.838-.005-.004-.01-.009-.014-.012l.037.092-.006.069c1.668 4.406 1.434 9.243-.615 13.393l-1.444 2.926-.443-3.233c-.301-2.193-1.128-4.285-2.402-6.076h-.201l-.106-.3c.015 3.351-.691 6.652-2.076 9.766-1.817 4.075-1.55 8.774.715 12.572l1.563 2.622-2.812-1.188c-4.637-1.959-8.344-5.733-10.171-10.354-2.047-5.16-1.668-11.143 1.015-16.001 1.399-2.527 2.379-5.21 2.914-7.976l.523-2.711 1.334 2.418c.637 1.153 1.106 2.401 1.397 3.712l.03.031.031.21.029-.009c3.996-5.309 6.39-11.915 6.739-18.604l.09-1.733 1.454.948c5.934 3.867 10.055 10.071 11.328 17.042l.029.143.015.022.065-.092c1.163-1.536 1.777-3.363 1.777-5.286v-2.978l1.797 2.374c4.178 5.518 6.32 12.363 6.032 19.275-.354 8.136-4.791 15.277-11.87 19.146l-3.065 1.675z"
    })
  }));
});
const FuelPump = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-fuel-pump",
    x: "0px",
    y: "0px",
    viewBox: "0 0 384 384",
    enableBackground: "new 0 0 384 384",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M352.427,90.24l0.32-0.32L273.28,10.667L250.667,33.28l45.013,45.013c-20.053,7.68-34.347,26.987-34.347,49.707\nc0,29.44,23.893,53.333,53.333,53.333c7.573,0,14.827-1.6,21.333-4.48v153.813C336,342.4,326.4,352,314.667,352\nc-11.733,0-21.333-9.6-21.333-21.333v-96c0-23.573-19.093-42.667-42.667-42.667h-21.333V42.667C229.333,19.093,210.24,0,186.667,0\nh-128C35.093,0,16,19.093,16,42.667V384h213.333V224h32v106.667c0,29.44,23.893,53.333,53.333,53.333\nc29.44,0,53.333-23.893,53.333-53.333V128C368,113.28,362.027,99.947,352.427,90.24z M186.667,149.333h-128V42.667h128V149.333z\nM314.667,149.333c-11.733,0-21.333-9.6-21.333-21.333s9.6-21.333,21.333-21.333c11.733,0,21.333,9.6,21.333,21.333\nS326.4,149.333,314.667,149.333z"
    })
  }));
});
const GearCog = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    viewBox: "0 0 512 512",
    width: "100%",
    height: "100%"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M489.514 296.695l-21.3-17.534c-14.59-12.011-14.564-34.335.001-46.322l21.299-17.534a39.878 39.878 0 009.218-50.882l-42.058-72.846A39.88 39.88 0 00408 74.119l-25.835 9.679c-17.696 6.628-37.016-4.551-40.117-23.161l-4.535-27.214A39.874 39.874 0 00298.058 0h-84.115a39.874 39.874 0 00-39.456 33.424l-4.536 27.213c-3.107 18.643-22.453 29.778-40.116 23.162L104 74.119a39.88 39.88 0 00-48.674 17.458l-42.057 72.845a39.875 39.875 0 009.218 50.882l21.299 17.534c14.592 12.012 14.563 34.334 0 46.322l-21.3 17.534a39.876 39.876 0 00-9.218 50.882l42.058 72.846c9.818 17.003 30.286 24.344 48.674 17.458l25.834-9.679c17.699-6.631 37.015 4.556 40.116 23.161l4.536 27.212A39.875 39.875 0 00213.942 512h84.115a39.873 39.873 0 0039.455-33.424l4.535-27.212c3.106-18.638 22.451-29.781 40.117-23.161L408 437.881a39.876 39.876 0 0048.674-17.458l42.059-72.847a39.878 39.878 0 00-9.219-50.881zm-67.481 103.728l-25.835-9.679c-41.299-15.471-86.37 10.63-93.605 54.043L298.058 472h-84.115l-4.536-27.213c-7.249-43.497-52.386-69.484-93.605-54.043l-25.835 9.679-42.057-72.846 21.299-17.534c34.049-28.03 33.978-80.114 0-108.086L47.91 184.423l42.058-72.846 25.834 9.679c41.3 15.47 86.37-10.63 93.605-54.043L213.942 40h84.115l4.535 27.213c7.25 43.502 52.389 69.481 93.605 54.043l25.835-9.679 42.067 72.836-.011.009-21.298 17.534c-34.048 28.028-33.98 80.113-.001 108.086l21.3 17.534zM256 157.333c-54.405 0-98.667 44.262-98.667 98.667s44.262 98.667 98.667 98.667 98.667-44.262 98.667-98.667-44.262-98.667-98.667-98.667zm0 157.334c-32.349 0-58.667-26.318-58.667-58.667s26.318-58.667 58.667-58.667 58.667 26.318 58.667 58.667-26.318 58.667-58.667 58.667z"
    })
  }));
});
const Gift$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    id: "applab-icon-basic-gift",
    x: "0px",
    y: "0px",
    viewBox: "0 0 199.516 199.516",
    enableBackground: "new 0 0 199.516 199.516",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M180.916,41.456h-15.858c3.637-2.664,6.443-6.369,8.01-10.704c2.289-6.329,1.69-13.313-1.641-19.161\nC167.354,4.441,159.706,0,151.466,0c-6.507,0-12.514,2.651-16.915,7.464l-19.558,21.391c-2.972-3.4-7.328-5.561-12.188-5.561H96.71\nc-4.86,0-9.216,2.161-12.188,5.562L64.964,7.465C60.563,2.651,54.557,0,48.05,0c-8.24,0-15.889,4.441-19.961,11.591\nc-3.332,5.849-3.93,12.833-1.641,19.162c1.567,4.335,4.373,8.039,8.009,10.703H18.6c-4.143,0-7.5,3.358-7.5,7.5v40.701\nc0,3.973,3.092,7.216,7,7.475v94.884c0,4.142,3.357,7.5,7.5,7.5h50.5h47.316h50.5c4.143,0,7.5-3.358,7.5-7.5V97.132\nc3.908-0.258,7-3.501,7-7.475V48.956C188.416,44.814,185.059,41.456,180.916,41.456z M115.916,56.529v127.987H83.6V56.529h4.408\nh23.5H115.916z M40.554,25.652c-0.804-2.225-0.603-4.582,0.568-6.637C42.555,16.501,45.145,15,48.05,15\nc2.244,0,4.319,0.918,5.844,2.586l21.825,23.87h-0.999L45.235,30.391C43.021,29.559,41.358,27.876,40.554,25.652z M158.962,25.651\nc-0.805,2.225-2.468,3.908-4.683,4.739l-29.483,11.066h-0.999l21.824-23.87c1.524-1.668,3.601-2.586,5.845-2.586\nc2.905,0,5.495,1.501,6.928,4.016C159.563,21.07,159.766,23.427,158.962,25.651z"
    })
  }));
});
const Golf = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-golf",
    height: "512",
    viewBox: "0 0 58 59",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsxs$2("g", {
      transform: "translate(-1 -1)",
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "m41.66 20.66c.21842-.1918663.3425296-.4692878.34-.76v-14.5c-.0018915-.36685736-.2045104-.70322631-.5279231-.87640861-.3234128-.17318229-.7156897-.1553705-1.0220769.04640861-7.33 4.57-14.66-6.27-22-2.92.3536816.50044707.545621 1.09720415.55 1.71v15.07c7.55-2.75 15.11 8.8 22.66 2.23z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m54.72 49.21c-2.52-1.09-9.59-3-9.07-6.41.37-2.43 5-1.62 5.08-4 .05-1.61-2.24-1.92-3.6-2-9.13-1.01-19.13-1.29-28.13.58v7.29c3.75 2 1.93 6.33-3 6.33s-6.73-4.38-3-6.33v-5.67c-4.49 1.5-11.76 4.6-12 9.35-.27 5.51 7.62 7.78 12.38 8.73l.32.07c7.4359231 1.6062877 15.0555886 2.1950036 22.65 1.75 5.9450153-.341655 11.8498903-1.1914217 17.65-2.54 2.26-.65 6.16-1.84 4.26-4.66-.9326539-1.1353506-2.156227-1.9959994-3.54-2.49zm-13.72 4.79c-2.209139 0-4-1.790861-4-4s1.790861-4 4-4 4 1.790861 4 4-1.790861 4-4 4z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m15 3.36v43.64c0 .5522847.4477153 1 1 1s1-.4477153 1-1c0-46.89.13-43.87-.24-44.29-.2721225-.31821168-.7136768-.43320365-1.1064462-.28814676-.3927695.1450569-.653586.51944719-.6535538.93814676z"
      })]
    })
  }));
});
const GraduationCap = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-graduation-cap",
    x: "0px",
    y: "0px",
    viewBox: "0 0 484.006 484.006",
    enableBackground: "new 0 0 484.006 484.006",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("polygon", {
      points: "484.006,189.845 484.006,179.186 241.897,62.561 0,179.083 0,189.946 241.897,306.471"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M83.808,251.571v69.7l145.836,70.25h24.506l145.435-70.057c0.14-0.307,0.271-0.613,0.402-0.922V251.57l-158.09,76.152\nL83.808,251.571z"
    }), /* @__PURE__ */ jsx$3("polygon", {
      points: "458.506,358.195 458.506,222.599 439.359,232.255 439.359,358.195 426.883,396.203 445.742,421.445\n452.123,421.445 470.981,396.203"
    })]
  }));
});
const HamburgerMenu = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-hamburger-menu",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    enableBackground: "new 0 0 124 124",
    x: "0px",
    y: "0px",
    viewBox: "0 0 124 124",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "M112,6H12C5.4,6,0,11.4,0,18s5.4,12,12,12h100c6.6,0,12-5.4,12-12S118.6,6,112,6z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M112,50H12C5.4,50,0,55.4,0,62c0,6.6,5.4,12,12,12h100c6.6,0,12-5.4,12-12C124,55.4,118.6,50,112,50z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M112,94H12c-6.6,0-12,5.4-12,12s5.4,12,12,12h100c6.6,0,12-5.4,12-12S118.6,94,112,94z"
      })]
    })
  }));
});
const HandHoldingHeart = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-hand-holding-heart-coin",
    viewBox: "0 0 490 490",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M478.99927,224H455.09314a144.15368,144.15368,0,0,1-7.32208,32h22.91662A127.4497,127.4497,0,0,0,478.99927,224Z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M447.76355,160H470.652a128.09676,128.09676,0,0,0-18.81128-32H431.674A143.62979,143.62979,0,0,1,447.76355,160Z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M456,208h24a127.79324,127.79324,0,0,0-4.04993-32h-23.539A143.93789,143.93789,0,0,1,456,208Z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M436.31689,280.71582A144.331,144.331,0,0,1,420.105,303.12354l26.91034-9.36524A128.22,128.22,0,0,0,462.87244,272h-21.853Q438.82074,276.43115,436.31689,280.71582Z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M471.75684,310.81738a19.369,19.369,0,0,0-17.79444-2.53515l-133.581,46.4873a39.97751,39.97751,0,0,1-32.99268-3.04785L245.87549,328H192V312H296a24,24,0,0,0,0-48H219.88232a39.7404,39.7404,0,0,0-28.28466,11.71582l-19.88135,19.88184A55.6343,55.6343,0,0,1,132.11768,312H32v96H185.12061l72.28027,20.65137a95.48,95.48,0,0,0,72.09668-7.89356L469.73877,344.794A19.70552,19.70552,0,0,0,480,327.41309V326.79A19.37352,19.37352,0,0,0,471.75684,310.81738Z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M419.23218,112h17.33191a127.88043,127.88043,0,0,0-50.32-27.34131A145.05013,145.05013,0,0,1,419.23218,112Z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M392,175.709a31.46412,31.46412,0,0,0-9.30322-22.416,31.861,31.861,0,0,0-44.95313,0L312,178.99023,286.25635,153.293a31.85924,31.85924,0,0,0-44.95313,0,31.65719,31.65719,0,0,0,0,44.832L291.26685,248H296a39.83191,39.83191,0,0,1,26.57593,10.13916L382.69678,198.125A31.46412,31.46412,0,0,0,392,175.709Z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M219.88232,248h48.73645l-38.61926-38.55078a47.65844,47.65844,0,0,1,0-67.48047,47.88719,47.88719,0,0,1,67.56055,0L312,156.38281l14.43994-14.41406a47.88719,47.88719,0,0,1,67.56055,0,47.65844,47.65844,0,0,1,0,67.48047l-61.75867,61.64941A39.97885,39.97885,0,0,1,296,328H278.125l17.20215,9.8291a23.98063,23.98063,0,0,0,19.79492,1.8291l62.4906-21.74707A128.00244,128.00244,0,1,0,184,208a127.06447,127.06447,0,0,0,8.8775,46.927A55.6896,55.6896,0,0,1,219.88232,248Z"
    })]
  }));
});
const HandHoldingHeart2 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-hand-holding-heart",
    viewBox: "-91 0 432 432",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m132.101562 352.148438c7.308594 5.933593 15.085938 12.246093 23.261719 19.070312 2.78125 2.316406 6.195313 3.472656 9.609375 3.472656 3.410156 0 6.824219-1.15625 9.605469-3.472656 8.160156-6.8125 15.941406-13.125 23.25-19.058594 41.894531-33.996094 72.171875-58.574218 72.171875-95.535156 0-34.761719-26.367188-61.976562-60.015625-61.976562-21.398437 0-35.769531 10.515624-45.015625 21.738281-9.226562-11.222657-23.582031-21.738281-45-21.738281-33.644531 0-60.015625 27.214843-60.015625 61.976562.003906 36.960938 30.265625 61.523438 72.148437 95.523438zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m270 128.402344v-75.902344c0-12.300781-10.199219-22.5-22.5-22.5s-22.5 10.199219-22.5 22.5v113.648438c5.660156.941406 11.074219 2.425781 16.304688 4.363281 2.976562-18.039063 13.621093-33.425781 28.695312-42.109375zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m195 166.621094v-144.121094c0-12.300781-10.199219-22.5-22.5-22.5s-22.5 10.199219-22.5 22.5v148.007812c5.121094 1.875 10.296875 3.617188 14.984375 6.476563 9.113281-5.558594 19.351563-8.5625 30.015625-10.363281zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m300 150c-16.5 0-30 13.5-30 30v8.003906c18.371094 16.726563 30 40.929688 30 68.621094 0 51.257812-38.585938 82.574219-83.261719 118.828125-2.964843 2.410156-6.324219 5.191406-9.441406 7.734375-1.722656 2.605469-4.058594 4.675781-7.046875 5.777344-2.203125 1.8125-4.1875 3.394531-6.453125 5.28125-8.101563 6.753906-18.324219 10.445312-28.828125 10.445312-10.5 0-20.726562-3.691406-28.78125-10.402344-8.117188-6.78125-15.792969-12.992187-23-18.851562-44.664062-36.269531-83.230469-67.574219-83.230469-118.8125 0-19.242188 5.523438-36.910156 15.042969-51.523438v-92.601562c0-12.300781-10.199219-22.5-22.5-22.5s-22.5 10.199219-22.5 22.5v217.5h.902344c3.898437 44.097656 24.597656 84 59.097656 112.199219v54.800781c0 8.398438 6.597656 15 15 15h180c8.402344 0 15-6.601562 15-15v-54.800781c38.101562-31.5 60-77.398438 60-127.199219v-135c0-16.5-13.5-30-30-30zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m120 164.652344v-112.152344c0-12.300781-10.199219-22.5-22.5-22.5s-22.5 10.199219-22.5 22.5v124.535156c13.207031-7.683594 28.390625-12.386718 44.972656-12.386718.007813 0 .015625.003906.027344.003906zm0 0"
    })]
  }));
});
const HandshakeHeart = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    enableBackground: "new 0 0 512 512",
    id: "applab-icon-basic-handshake-heart",
    height: "512",
    viewBox: "0 0 512 512",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "m288.8 368.8c5.9-5.9 12.7-10.2 20-12.9-16.1-21.5-13.5-54.2 6-73l.5-.5c16.6-16.6 41.1-20.7 61.5-12.3 2.6-8.9 7.5-17.1 14.2-23.8l.5-.5c21-21.9 58.9-21.9 80 0l1.4 1.4 2.9-2.9c48.2-48.1 48.2-126.3.2-174.4-48.1-48.1-126.3-48.1-174.3 0l-28.7 28.7 54.5 53c24.3 22.5 24.6 64.1.7 87-22.7 23.7-63.6 23.7-86.3 0l-18.9-18.7c-.6-.6-1.6-.6-2.1 0l-116.8 116.7c-7.4 7.1-7.4 20 0 27.1 7.5 7.5 19.7 7.5 27.1 0 .2-.2 33.7-33.7 33.7-33.7 6.6-6.6 17.4-6.6 24 0s6.6 17.4 0 24l-31.8 31.8c-8.5 8.1-8.5 22.8 0 30.9 8.1 8.5 22.8 8.5 30.9 0l31.7-31.7c6.6-6.6 17.4-6.6 24 0s6.6 17.4 0 24l-31.5 31.5c-8.7 8.5-8.8 22.5-.2 31.1 8.1 8.5 22.8 8.5 30.9 0l35.5-35.5c-11.9-21.3-7.9-49.9 9.7-67z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m34 73.8c-45.3 45.3-45.4 119-.2 164.4l62 58.6 101-101c13.2-13.8 37-13.8 50.2 0l18.8 18.8c10.1 10.5 28.2 10.5 38.2 0 5.2-5.2 8-12 7.9-19.3s-3-14.1-8.2-19.2l-105-102.1c-45.3-45.5-119.3-45.6-164.7-.2z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m421.8 389.9.5-.5c8.7-8.4 8.8-23.5 0-31.9l-31.2-31.2-19.8-19.8c-8.8-8.8-23.1-8.8-31.9 0l-.5.5c-8.7 8.4-8.8 23.5 0 31.9l51 51c8.8 8.8 23.1 8.8 31.9 0z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m478.3 333.4.5-.5c8.8-8.8 8.8-23.1 0-31.9l-31.2-31.2c-8.4-8.7-23.5-8.8-31.9 0l-.5.5c-8.7 8.4-8.7 23.5 0 31.9l31.2 31.2c8.8 8.8 23.1 8.8 31.9 0z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m332.6 445.5c8.8 8.8 23.1 8.8 31.9 0l.5-.5c8.8-8.8 8.8-23.1 0-31.9l-20.2-20.2c-8.8-8.8-23.1-8.8-31.9 0l-.5.5c-8.7 8.4-8.8 23.5 0 31.9z"
      })]
    })
  }));
});
const HealthCross = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-health-cross",
    viewBox: "0 0 469.333 469.333",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m437.333 149.333h-117.333v-117.333c0-17.643-14.357-32-32-32h-106.667c-17.643 0-32 14.357-32 32v117.333h-117.333c-17.643 0-32 14.357-32 32v106.667c0 17.643 14.357 32 32 32h117.333v117.333c0 17.643 14.357 32 32 32h106.667c17.643 0 32-14.357 32-32v-117.333h117.333c17.643 0 32-14.357 32-32v-106.667c0-17.642-14.357-32-32-32z"
    })
  }));
});
const HeartHealth = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-heart-health",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M362.667,275.748c-6.4,0-12.8-4.267-17.067-8.533l-21.333-34.133l-46.933,96c-4.267,10.667-17.067,14.933-27.733,8.533 c-4.267-2.133-6.4-4.267-8.533-8.533l-51.2-83.2L166.4,269.348c-6.4,4.267-10.667,6.4-17.067,6.4h-76.8 c46.933,78.933,166.4,162.133,170.667,166.4c6.4,4.267,17.067,4.267,23.467,0c6.4-4.267,123.733-87.467,170.667-166.4H362.667z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M407.467,88.015c-46.933-32-108.8-27.733-149.333,10.667c-40.533-38.4-102.4-42.667-149.333-10.667 c-46.933,32-68.267,89.6-53.333,145.067H140.8l36.267-36.267c10.667-8.533,25.6-8.533,34.133,4.267l44.8,72.533l46.933-93.867 c6.4-14.933,27.733-14.933,36.267-2.133l36.267,55.467h83.2C473.6,177.615,452.267,120.015,407.467,88.015z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M66.133,262.948c-4.267-8.533-8.533-19.2-10.667-29.867H0v42.667h72.533C70.4,271.482,68.267,267.215,66.133,262.948z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M456.533,233.082c-2.133,10.667-6.4,21.333-10.667,29.867c-2.133,4.267-4.267,8.533-6.4,12.8H512v-42.667H456.533z"
        })
      })
    })]
  }));
});
const HeartHealth2 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-heart-health-2",
    viewBox: "0 0 192 192",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m163.3 29.537c-18.258-9.772-42.014-6.567-67.3 8.963-25.286-15.531-49.042-18.738-67.3-8.963-18.241 9.763-28.7 31.187-28.7 58.788 0 52.787 88.461 100.715 92.227 102.729a8 8 0 0 0 7.546 0c3.766-2.014 92.227-49.942 92.227-102.729 0-27.601-10.459-49.025-28.7-58.788zm-43.3 82.463h-16v16h-16v-16h-16v-16h16v-16h16v16h16z"
    })
  }));
});
const HelpBubble = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-help-bubble",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 512 512",
    enableBackground: "new 0 0 512 512",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsxs$2("g", {
          children: [/* @__PURE__ */ jsx$3("path", {
            d: "M248.158,343.22c-14.639,0-26.491,12.2-26.491,26.84c0,14.291,11.503,26.84,26.491,26.84\nc14.988,0,26.84-12.548,26.84-26.84C274.998,355.42,262.799,343.22,248.158,343.22z"
          }), /* @__PURE__ */ jsx$3("path", {
            d: "M252.69,140.002c-47.057,0-68.668,27.885-68.668,46.708c0,13.595,11.502,19.869,20.914,19.869\nc18.822,0,11.154-26.84,46.708-26.84c17.429,0,31.372,7.669,31.372,23.703c0,18.824-19.52,29.629-31.023,39.389\nc-10.108,8.714-23.354,23.006-23.354,52.983c0,18.125,4.879,23.354,19.171,23.354c17.08,0,20.565-7.668,20.565-14.291\nc0-18.126,0.35-28.583,19.521-43.571c9.411-7.32,39.04-31.023,39.04-63.789S297.307,140.002,252.69,140.002z"
          }), /* @__PURE__ */ jsx$3("path", {
            d: "M256,0C114.516,0,0,114.497,0,256v236c0,11.046,8.954,20,20,20h236c141.483,0,256-114.497,256-256\nC512,114.516,397.503,0,256,0z M256,472H40V256c0-119.377,96.607-216,216-216c119.377,0,216,96.607,216,216\nC472,375.377,375.393,472,256,472z"
          })]
        })
      })
    })
  }));
});
const Home$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    enableBackground: "new 0 0 49.794 49.794",
    id: "applab-icon-basic-home",
    viewBox: "0 0 49.794 49.794",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m5.965 29.682v19.236c0 .482.392.876.876.876h20.645v-17.418h9.698v17.418h5.77c.484 0 .876-.394.876-.876v-19.236l-18.921-18.84zm15.396 10.808h-8.751v-8.113h8.751z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m47.665 22.765-22.767-22.765-10.74 10.739v-4.726c0-1.104-.896-2-2-2s-2 .896-2 2v8.726l-8.027 8.026c-.977.977-.977 2.559 0 3.536.488.488 1.128.732 1.768.732s1.279-.244 1.768-.73l19.232-19.23 19.23 19.229c.977.978 2.559.978 3.534 0 .977-.978.977-2.561.002-3.537z"
    })]
  }));
});
const Institution = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-institution",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M492,192c11.046,0,20-8.954,20-20V96c0-8.684-5.604-16.375-13.869-19.037l-236-76c-3.986-1.283-8.275-1.283-12.262,0 l-236,76C5.604,79.625,0,87.316,0,96v76c0,11.046,8.954,20,20,20h30v204H20c-11.046,0-20,8.954-20,20v76c0,11.046,8.954,20,20,20 h472c11.046,0,20-8.954,20-20v-76c0-11.046-8.954-20-20-20h-30V192H492z M472,436v36H40v-36C54.155,436,466.627,436,472,436z M90,396V192h36v204H90z M166,396V192h32v204H166z M238,396V192h36v204H238z M314,396V192h32v204H314z M386,396V192h36v204H386z M40,152v-41.429l216-69.56l216,69.56V152C469.77,152,44.092,152,40,152z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("circle", {
          cx: "256",
          cy: "106",
          r: "25"
        })
      })
    })]
  }));
});
const Investment = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-investment",
    viewBox: "0 1 511 511.99994",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m274.484375 201.882812v-8.015624c0-3.421876-2.75-6-6.402344-6h-13.304687c-25.539063 0-46.316406-21.03125-46.316406-46.878907v-.84375c0-20.113281 12.980468-37.25 31.027343-43.558593v-5.59375c0-11.046876 8.953125-20 19.996094-20 11.046875 0 20 8.953124 20 20v3h3c11.042969 0 19.996094 8.953124 19.996094 19.996093 0 11.046875-8.953125 20-19.996094 20h-27.707031c-3.601563 0-6.320313 2.644531-6.320313 6.15625v.84375c0 3.664063 2.953125 6.882813 6.320313 6.882813h13.304687c25.585938 0 46.398438 20.632812 46.398438 45.996094v8.015624c0 21.507813-14.910157 39.621094-34.996094 44.683594v3.410156c0 11.046876-8.953125 20-20 20-11.042969 0-19.996094-8.953124-19.996094-20v-2h-12c-11.042969 0-19.996093-8.953124-19.996093-19.996093 0-11.046875 8.953124-20 19.996093-20h40.59375c3.652344 0 6.402344-2.621094 6.402344-6.097657zm179.136719 220.214844c-12.050782 12.050782-24.796875 21.171875-37.878906 27.117188-2.683594 1.21875-5.492188 1.792968-8.257813 1.792968-7.605469 0-14.871094-4.355468-18.21875-11.730468-4.570313-10.054688-.121094-21.910156 9.9375-26.476563 8.695313-3.953125 17.488281-10.339843 26.132813-18.984375 35.546874-35.542968 44.351562-92.945312 46.472656-123.066406-30.121094 2.125-87.484375 10.9375-123.019532 46.46875-21.035156 21.039062-23.378906 37.925781-23.308593 48.800781.027343 4.628907.632812 8.992188 1.566406 13.074219 18.851563-17.910156 41.347656-37.609375 68.066406-58.683594 8.671875-6.839844 21.246094-5.355468 28.085938 3.316406 6.839843 8.671876 5.351562 21.246094-3.316407 28.085938-110.363281 87.046875-144.421874 148.941406-144.753906 149.554688-3.578125 6.777343-10.496094 10.632812-17.65625 10.632812-.476562 0-.953125-.023438-1.433594-.058594-6.988281-.160156-13.6875-3.980468-17.203124-10.585937-.359376-.65625-12.429688-22.425781-44.84375-57.972657-24.367188 14.292969-57.050782 14.484376-57.433594 14.484376-27.496094 0-53.472656-12.035157-77.207032-35.769532-59.3593745-59.359375-59.097656-158.855468-58.8125-171.503906-.246093-10.917969 8.292969-20.03125 19.230469-20.433594 2.703125-.105468 42.421875-1.292968 87.144531 11.429688-10.515624-22.007813-16.414062-46.628906-16.414062-72.605469 0-93.179687 75.808594-168.984375 168.984375-168.984375 93.179687 0 168.984375 75.804688 168.984375 168.984375 0 25.246094-5.574219 49.214844-15.542969 70.75 41.847657-10.746094 77.710938-9.671875 80.277344-9.574219 11.003906.40625 19.609375 9.632813 19.25 20.640625-.003906.085938-.007813.167969-.011719.253907.273438 14.433593-.132812 112.355468-58.820312 171.042968zm-157.863282-11.535156c-4.9375-10.9375-10.160156-26.066406-10.273437-44.289062-.070313-10.679688 1.621094-21.082032 5.042969-31.171876-10.066406 1.878907-20.441406 2.867188-31.042969 2.867188-12.628906 0-24.933594-1.402344-36.777344-4.042969 3.914063 10.550781 5.851563 21.351563 5.78125 32.347657-.113281 17.917968-5.613281 32.964843-10.730469 43.800781 17.597657 18.78125 30.351563 34.550781 39.226563 46.539062 8.800781-11.886719 21.414063-27.488281 38.773437-46.050781zm-165.261718-241.578125c0 71.125 57.863281 128.988281 128.988281 128.988281s128.988281-57.863281 128.988281-128.988281-57.863281-128.988281-128.988281-128.988281-128.988281 57.863281-128.988281 128.988281zm6.0625 248.886719c6.5625 0 18.164062-1.628906 27.871094-4.878906-18.945313-18.351563-42.144532-38.941407-70.339844-61.179688-8.671875-6.835938-10.15625-19.414062-3.316406-28.085938 6.839843-8.671874 19.414062-10.15625 28.085937-3.316406 26.648437 21.015625 49.089844 40.667969 67.910156 58.535156 1.03125-4.058593 1.695313-8.386718 1.722657-12.925781.101562-16.148437-8.078126-32.566406-24.308594-48.796875-35.703125-35.703125-92.953125-44.441406-123.023438-46.511718 2.113282 30.09375 10.910156 87.542968 46.476563 123.109374 16.183593 16.183594 32.1875 24.050782 48.921875 24.050782zm0 0"
    })
  }));
});
const Island = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-island",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m467.729 131.351c3.906 3.906 9.023 5.858 14.143 5.858 5.118 0 10.237-1.953 14.142-5.858 7.811-7.811 7.812-20.474.001-28.284-22.138-22.138-51.571-34.33-82.879-34.33-12.278 0-24.264 1.883-35.638 5.497 13.873-20.631 37.431-34.234 64.108-34.234 11.046 0 20-8.954 20-20s-8.954-20-20-20c-40.422 0-76.13 20.569-97.208 51.789-21.079-31.22-56.787-51.789-97.209-51.789-11.046 0-20 8.954-20 20s8.954 20 20 20c26.678 0 50.235 13.603 64.11 34.235-11.375-3.615-23.361-5.498-35.639-5.498-31.308 0-60.741 12.192-82.879 34.33-7.811 7.811-7.81 20.474.001 28.284s20.474 7.811 28.284 0c14.582-14.583 33.971-22.614 54.594-22.614 14.072 0 27.565 3.745 39.353 10.753-41.739 48.465-66.26 108.409-70.475 172.3-50.772 1.884-99.146 21.443-136.988 55.578-31.701 28.597-54.018 65.556-64.606 106.25-7.858-6.579-19.574-6.186-26.958 1.199-7.81 7.811-7.81 20.474.001 28.284 18.635 18.636 43.413 28.899 69.767 28.899 20.148 0 39.376-5.999 55.641-17.152 33.41 22.813 77.832 22.811 111.236-.011 33.405 22.821 77.827 22.824 111.236.011 16.265 11.153 35.493 17.152 55.641 17.152 26.354 0 51.132-10.263 69.768-28.899 7.811-7.81 7.811-20.474.001-28.284-7.385-7.384-19.101-7.777-26.958-1.199-10.588-40.694-32.905-77.653-64.606-106.25-31.888-28.765-71.256-47.175-113.234-53.388 3.978-58.572 27.723-113.274 68.01-156.346 38.784 4.058 69.118 36.942 69.118 76.783 0 11.046 8.954 20 20 20s20-8.954 20-20c0-45.321-25.858-84.714-63.593-104.208 4.928-.973 9.987-1.473 15.123-1.473 20.621.001 40.01 8.032 54.592 22.615zm-42.235 340.346c-1.976.199-3.973.303-5.986.303-15.67 0-30.402-6.103-41.482-17.183-3.751-3.75-8.838-5.858-14.143-5.858s-10.392 2.107-14.142 5.858c-22.875 22.874-60.094 22.874-82.969 0-7.811-7.811-20.473-7.811-28.283 0-22.875 22.874-60.094 22.874-82.969 0-3.75-3.751-8.838-5.858-14.142-5.858-5.305 0-10.392 2.107-14.143 5.858-11.078 11.08-25.811 17.183-41.481 17.183-2.013 0-4.01-.104-5.986-.303 7.656-36.314 26.652-69.439 54.575-94.627 32.486-29.305 74.495-45.443 118.288-45.443 43.794 0 85.803 16.139 118.289 45.443 27.923 25.188 46.919 58.313 54.574 94.627z"
    })
  }));
});
const LightbulbElectricity = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-lightbulb-electricity",
    x: "0px",
    y: "0px",
    viewBox: "0 0 512 512",
    enableBackground: "new 0 0 512 512",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M256,0C162.59,0,86.867,75.724,86.867,169.133c0,34.924,10.587,67.376,28.725,94.321c33.928,50.4,52.205,109.86,52.205,170.614v0.037c0,15.408,12.491,27.899,27.899,27.899h10.308C206.004,489.616,228.388,512,256,512c27.612,0,49.996-22.384,49.996-49.996h10.308c15.408,0,27.9-12.491,27.9-27.899v-0.037c0-61.042,18.116-119.977,52.205-170.614c18.139-26.945,28.725-59.396,28.725-94.321C425.133,75.724,349.409,0,256,0zM316.872,203.271l-83.631,114.35c-1.903,2.602-5.362,3.527-8.309,2.222c-2.948-1.304-4.589-4.487-3.943-7.644l17.387-85.006h-42.888c-4.141,0-7.93-2.327-9.804-6.019c-1.874-3.692-1.515-8.125,0.93-11.467l83.631-114.35c1.903-2.602,5.362-3.527,8.309-2.222c2.948,1.304,4.589,4.486,3.943,7.644l-17.387,85.006h42.888c4.141,0,7.93,2.327,9.804,6.019C319.676,195.496,319.318,199.929,316.872,203.271z"
    })
  }));
});
const MoneyBag = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-money-bag",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M469.309,376.245l-91.576-239L433.91,29.228c3.225-6.2,2.979-13.633-0.647-19.607C429.636,3.647,423.155,0,416.167,0 c-42.973,0-64.757,6.528-85.823,12.842C311.196,18.58,293.111,24,256.003,24c-37.108,0-55.193-5.42-74.34-11.158 C160.597,6.528,138.813,0,95.84,0c-6.989,0-13.47,3.647-17.096,9.621c-3.626,5.974-3.872,13.407-0.647,19.607l56.177,108.018 l-91.576,239C17.601,441.745,66.169,512,136.163,512h239.68C445.998,512,494.353,441.607,469.309,376.245z M129.777,41.909 c16.483,2.08,28.228,5.6,40.404,9.249C191.247,57.472,213.03,64,256.003,64c42.973,0,64.757-6.528,85.823-12.842 c12.176-3.649,23.921-7.169,40.404-9.249L343.697,116H168.31L129.777,41.909z M375.843,472h-239.68 c-42.132,0-71.216-42.029-56.115-81.442L169.923,156h172.161l89.874,234.557C447.028,429.89,418.05,472,375.843,472z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M268.503,294h-25c-4.136,0-7.5-3.364-7.5-7.5s3.365-7.5,7.5-7.5h52.499c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20 h-20v-5c0-11.046-8.954-20-20-20s-20,8.954-20,20v5.598c-22.639,3.607-39.999,23.263-39.999,46.902 c0,26.191,21.308,47.5,47.499,47.5h25c4.136,0,7.5,3.364,7.5,7.5s-3.364,7.5-7.5,7.5h-52.499c-11.046,0-20,8.954-20,20 c0,11.046,8.954,20,20,20h20v5c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-5.598c22.639-3.607,39.999-23.263,39.999-46.902 C316.002,315.309,294.694,294,268.503,294z"
        })
      })
    })]
  }));
});
const MoneyBag2 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-money-bag-2",
    viewBox: "-43 0 512 512.00017",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M 390.25 164.417969 L 420.421875 134.246094 L 390.121094 103.945312 L 423.085938 54.5 L 387.585938 30.835938 L 351.253906 85.332031 L 64.003906 85.332031 L 64.003906 128 L 353.832031 128 Z M 390.25 164.417969 "
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M 119.164062 64 L 307.507812 64 L 335.089844 36.417969 C 348.269531 23.246094 338.566406 0 320.003906 0 L 106.667969 0 C 88.105469 0 78.402344 23.246094 91.582031 36.417969 Z M 119.164062 64 "
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M 414.996094 471.648438 C 414.6875 471.488281 384.003906 455.300781 384.003906 426.667969 C 384.003906 410.109375 386.910156 398.171875 390.9375 381.65625 C 397.335938 355.289062 405.335938 322.480469 405.335938 256 C 405.335938 210.179688 383.582031 175.261719 355.878906 149.332031 L 71.859375 149.332031 C 43.652344 175.410156 21.335938 210.414062 21.335938 256 C 21.335938 308.910156 28.847656 344.046875 34.882812 372.265625 C 39.234375 392.621094 42.667969 408.691406 42.667969 426.667969 C 42.667969 455.300781 11.984375 471.488281 11.792969 471.585938 C 2.945312 476.011719 -1.699219 485.941406 0.574219 495.570312 C 2.847656 505.195312 11.441406 512 21.335938 512 L 405.335938 512 C 415.226562 512.039062 423.847656 505.269531 426.148438 495.652344 C 428.453125 486.03125 423.832031 476.089844 414.996094 471.648438 Z M 277.335938 256 L 192.003906 256 C 180.21875 256 170.667969 265.550781 170.667969 277.332031 C 170.667969 289.117188 180.21875 298.667969 192.003906 298.667969 L 213.335938 298.667969 C 244.496094 298.679688 271.117188 321.132812 276.386719 351.84375 C 281.65625 382.554688 264.042969 412.597656 234.667969 422.996094 L 234.667969 448 L 192.003906 448 L 192.003906 426.667969 L 128.003906 426.667969 L 128.003906 384 L 213.335938 384 C 225.117188 384 234.667969 374.449219 234.667969 362.667969 C 234.667969 350.882812 225.117188 341.332031 213.335938 341.332031 L 192.003906 341.332031 C 156.65625 341.332031 128.003906 312.679688 128.003906 277.332031 C 128.003906 241.988281 156.65625 213.332031 192.003906 213.332031 L 192.003906 192 L 234.667969 192 L 234.667969 213.332031 L 277.335938 213.332031 Z M 277.335938 256 "
    })]
  }));
});
const MoneyBallAndChain = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-money-ball-and-chain",
    height: "512pt",
    viewBox: "0 0 512.00013 512",
    width: "512pt",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m507.605469 4.394531c-5.859375-5.859375-15.351563-5.859375-21.210938 0l-27.464843 27.464844c-16.699219-7.863281-37.105469-5.308594-50.894532 8.457031l-13.710937 13.710938c-13.789063 13.789062-16.339844 34.195312-8.457031 50.894531l-26.617188 26.617187c-16.667969-7.484374-37.507812-4.925781-50.769531 8.347657l-11.332031 11.328125c-29.753907-18.402344-64.671876-29.214844-102.148438-29.214844-107.519531 0-195 87.480469-195 195s87.480469 195 195 195 195-87.480469 195-195c0-37.476562-10.8125-72.394531-29.210938-102.144531l11.324219-11.324219c8.496094-8.496094 13.183594-19.804688 13.183594-31.828125 0-6.808594-1.65625-13.3125-4.503906-19.285156l26.28125-26.28125c6.074219 2.867187 12.488281 4.707031 19.066406 4.707031 11.53125 0 23.058594-4.394531 31.832031-13.167969l13.726563-13.710937c13.765625-13.789063 16.3125-34.191406 8.441406-50.894532l27.464844-27.464843c5.859375-5.859375 5.859375-15.351563 0-21.210938zm-297.605469 384.839844v16.5625c0 8.292969-6.710938 15-15 15s-15-6.707031-15-15v-16.726563c-9.898438-3.546874-18.566406-10.210937-23.964844-19.554687-4.160156-7.179687-1.699218-16.347656 5.464844-20.496094 7.175781-4.171875 16.347656-1.710937 20.492188 5.464844 2.679687 4.644531 7.660156 7.515625 13.007812 7.515625 8.277344 0 15-6.726562 15-15 0-8.277344-6.722656-15-15-15-24.8125 0-45-20.1875-45-45 0-19.53125 12.578125-36.023438 30-42.238281v-17.160157c0-8.292968 6.710938-15 15-15s15 6.707032 15 15v17.324219c9.898438 3.546875 18.566406 10.214844 23.964844 19.558594 4.160156 7.179687 1.699218 16.347656-5.464844 20.492187-7.25 4.160157-16.375 1.6875-20.492188-5.460937-2.679687-4.644531-7.660156-7.515625-13.007812-7.515625-8.277344 0-15 6.722656-15 15 0 8.273438 6.722656 15 15 15 24.8125 0 45 20.183594 45 45 0 19.53125-12.578125 36.023438-30 42.234375zm140.902344-206.925781-7.980469 7.984375c-6.523437-7.601563-13.609375-14.691407-21.210937-21.210938l7.996093-7.984375c5.640625-5.671875 15.496094-5.671875 21.195313 0 2.828125 2.839844 4.394531 6.605469 4.394531 10.605469 0 4.011719-1.550781 7.761719-4.394531 10.605469zm99.570312-99.554688-13.710937 13.710938c-5.84375 5.886718-15.351563 5.859375-21.226563 0-5.84375-5.859375-5.84375-15.367188 0-21.226563l13.710938-13.695312c2.929687-2.933594 6.769531-4.398438 10.621094-4.398438 3.835937 0 7.675781 1.464844 10.589843 4.382813 5.859375 5.84375 5.859375 15.378906.015625 21.226562zm0 0"
    })
  }));
});
const MoreButton = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-more-button",
    viewBox: "0 0 990.9 990.9",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M144.2,639.6c79.6,0,144.1-64.5,144.1-144.1c0-79.601-64.5-144.1-144.1-144.1C64.5,351.3,0,415.8,0,495.4 C0,575,64.5,639.6,144.2,639.6z M144.2,425.9c38.3,0,69.5,31.2,69.5,69.5c0,38.301-31.2,69.5-69.5,69.5 c-38.3,0-69.5-31.199-69.5-69.5C74.7,457.1,105.8,425.9,144.2,425.9z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M351.4,495.4C351.4,575,415.9,639.5,495.5,639.5S639.6,575,639.6,495.4c0-79.6-64.5-144.1-144.1-144.1 S351.4,415.8,351.4,495.4z M565,495.4c0,38.301-31.2,69.5-69.5,69.5S426,533.701,426,495.4c0-38.3,31.2-69.5,69.5-69.5 S565,457.1,565,495.4z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M846.8,351.3c-79.6,0-144.1,64.5-144.1,144.1C702.7,575,767.2,639.5,846.8,639.5C926.4,639.5,990.9,575,990.9,495.4 C991,415.8,926.5,351.3,846.8,351.3z M846.8,564.9c-38.3,0-69.5-31.199-69.5-69.5c0-38.3,31.2-69.5,69.5-69.5s69.5,31.2,69.5,69.5 C916.3,533.701,885.2,564.9,846.8,564.9z"
    })]
  }));
});
const New$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-new",
    enableBackground: "new 0 0 512 512",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m509.991 248.501-30.277-52.448v-60.553c0-5.359-2.859-10.312-7.501-12.991l-52.446-30.276-30.275-52.446c-2.68-4.641-7.632-7.5-12.991-7.5h-60.554l-52.448-30.278c-4.64-2.678-10.357-2.679-14.999 0l-52.447 30.277h-60.553c-5.359 0-10.312 2.859-12.991 7.501l-30.275 52.446-52.447 30.276c-4.642 2.679-7.501 7.631-7.501 12.991v60.553l-30.277 52.448c-2.679 4.641-2.679 10.357 0 14.998l30.276 52.448v60.553c0 5.359 2.859 10.312 7.501 12.991l52.447 30.276 30.276 52.446c2.679 4.642 7.631 7.501 12.991 7.501h60.554l52.447 30.277c2.32 1.339 4.91 2.009 7.5 2.009s5.179-.67 7.499-2.009l52.447-30.277h60.553c5.359 0 10.312-2.859 12.991-7.5l30.275-52.446 52.446-30.276c4.642-2.679 7.501-7.631 7.501-12.991v-60.553l30.277-52.448c2.68-4.642 2.68-10.358.001-14.999zm-327.358 55.699c0 6.61-4.327 12.44-10.653 14.356-6.374 1.928-13.186-.575-16.828-6.036l-36.786-55.179v46.859c0 8.284-6.716 15-15 15s-15-6.716-15-15v-96.4c0-6.61 4.327-12.44 10.653-14.356 6.327-1.914 13.161.536 16.828 6.036l36.786 55.179v-46.859c0-8.284 6.716-15 15-15s15 6.716 15 15zm65.334-63.2c8.284 0 15 6.716 15 15s-6.716 15-15 15h-17.133v18.2h33.2c8.284 0 15 6.716 15 15s-6.716 15-15 15h-48.2c-8.284 0-15-6.716-15-15v-96.4c0-8.284 6.716-15 15-15h48.2c8.284 0 15 6.716 15 15s-6.716 15-15 15h-33.2v18.2zm183.252-29.562-24.1 96.4c-1.618 6.47-7.313 11.096-13.977 11.352-.193.007-.388.011-.58.011-6.432.001-12.178-4.113-14.226-10.257l-17.903-53.71-17.903 53.71c-2.109 6.327-8.143 10.485-14.806 10.246-6.664-.256-12.359-4.882-13.977-11.352l-24.1-96.4c-2.009-8.037 2.877-16.181 10.914-18.189 8.039-2.013 16.181 2.876 18.19 10.914l11.606 46.427 15.844-47.532c2.042-6.125 7.774-10.257 14.23-10.257s12.188 4.132 14.23 10.257l15.844 47.532 11.606-46.427c2.01-8.037 10.154-12.925 18.19-10.914 8.04 2.008 12.927 10.151 10.918 18.189z"
    })
  }));
});
const OnlineShopping = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-online-shopping",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 490.667 490.667",
    enableBackground: "new 0 0 490.667 490.667",
    xmlSpace: "preserve",
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M0,341.333V352c0,29.867,23.467,53.333,53.333,53.333h160v21.333h-74.667c-29.867,0-53.333,23.467-53.333,53.333\nc0,6.4,4.267,10.667,10.667,10.667h298.667c6.4,0,10.667-4.267,10.667-10.667c0-2.133,0-2.133,0-4.267\nC403.2,448,379.733,426.667,352,426.667h-74.667v-21.333h160c29.867,0,53.333-23.467,53.333-53.333v-10.667H0z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M437.333,0h-384C23.467,0,0,23.467,0,53.333V320h490.667V53.333C490.667,23.467,467.2,0,437.333,0z M224,298.667\nc-17.067,0-32-14.933-32-32c0-17.067,14.933-32,32-32c17.067,0,32,14.933,32,32C256,283.733,241.067,298.667,224,298.667z\nM309.333,298.667c-17.067,0-32-14.933-32-32c0-17.067,14.933-32,32-32s32,14.933,32,32\nC341.333,283.733,326.4,298.667,309.333,298.667z M362.667,183.467c0,4.267-4.267,8.533-8.533,8.533L185.6,211.2l8.533,29.867\nc2.133,6.4-2.133,10.667-8.533,12.8h-2.133c-4.267,0-8.533-4.267-10.667-8.533l-42.667-160H96c-6.4,0-10.667-4.267-10.667-10.667\nC85.333,68.267,89.6,64,96,64h42.667c4.267,0,8.533,4.267,10.667,8.533l4.267,12.8h219.733c4.267,0,6.4,2.133,8.533,4.267\nC384,91.733,384,96,384,98.133L362.667,183.467z"
        })
      })
    })]
  }));
});
const PaidBill = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-paid-bill",
    enableBackground: "new 0 0 512.014 512.014",
    height: "512",
    viewBox: "0 0 512.014 512.014",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "m32.125 32.134h278.5v-32.125h-310.625v434.875h32.125z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m402.764 293.506c-60.337 0-109.25 48.913-109.25 109.25s48.913 109.25 109.25 109.25 109.25-48.913 109.25-109.25-48.913-109.25-109.25-109.25zm-16.33 156.152-45.446-50.104 22.221-20.154 25.226 27.812 54.884-50.104 20.227 22.156z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m62.125 62.134v372.75 62.125h238.144c-15.133-16.424-25.912-35.881-31.733-56.964h-150.178v-92.125h156.337c6.892-16.089 16.855-30.879 29.605-43.629 19.076-19.076 42.713-31.929 68.45-37.555v-204.602zm112.866 224.45v24.049h-30v-23.688c-18.646-5.939-32.192-23.418-32.192-44.007h30c0 8.921 7.257 16.178 16.177 16.178h.873c9.23 0 16.739-7.509 16.739-16.739s-7.509-16.739-16.739-16.739h-.563c-25.772 0-46.739-20.967-46.739-46.739 0-20.788 13.644-38.441 32.445-44.496v-23.763h30v24.183c18.164 6.422 31.217 23.757 31.217 44.093h-30c0-9.241-7.518-16.759-16.759-16.759h-.164c-9.23 0-16.739 7.509-16.739 16.739s7.509 16.74 16.739 16.74h.563c25.772 0 46.739 20.967 46.739 46.739 0 20.475-13.237 37.903-31.597 44.209zm149.167-23.075h-80.943v-30h80.943zm0-62.125h-80.943v-30h80.943zm0-62.125h-80.943v-30h80.943z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m148.358 377.92v32.125h115.346c-.558-10.747.113-21.455 2.012-32.125z"
      })]
    })
  }));
});
const PeopleLiftWorld = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    enableBackground: "new 0 0 512 512",
    id: "applab-icon-basic-people-lift-world",
    height: "512",
    viewBox: "0 0 512 512",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "m181 391h-60c-33.091 0-61-26.909-61-60v-15c0-24.853-20.147-45-45-45h-15v60c0 66.167 54.833 120 121 120v61h120v-61c0-33.091-26.909-60-60-60z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m451 316v15c0 33.091-26.909 60-60 60h-60c-33.091 0-60 26.909-60 60v61h120v-61c66.167 0 121-53.833 121-120v-60h-15c-24.853 0-46 20.147-46 45z"
      }), /* @__PURE__ */ jsx$3("circle", {
        cx: "181",
        cy: "346",
        r: "45"
      }), /* @__PURE__ */ jsx$3("circle", {
        cx: "331",
        cy: "346",
        r: "45"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m226 61c8.276 0 15-6.724 15-15v-46c-84.086 7.588-150 79.937-150 166 0 15.626 2.331 30.677 6.394 45h38.606c8.276 0 15-6.724 15-15v-15h75c8.276 0 15-6.724 15-15s-6.724-15-15-15c-24.814 0-45-20.186-45-45s20.186-45 45-45z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m376 211h38.606c4.063-14.323 6.394-29.374 6.394-45 0-5.063-.309-10.052-.756-15h-74.244c-8.276 0-15 6.724-15 15s6.724 15 15 15h15v15c0 8.276 6.724 15 15 15z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m331 271c15.126 0 29.169 4.581 40.964 12.316 12.431-12.288 22.784-26.614 30.833-42.316h-26.797c-20.273 0-37.456-13.477-43.066-31.934-18.457-5.61-31.934-22.793-31.934-43.066 0-24.814 20.186-45 45-45h68.628c-18.292-64.579-74.804-114.789-143.628-121v46c0 24.814-20.186 45-45 45-8.276 0-15 6.724-15 15s6.724 15 15 15c24.814 0 45 20.186 45 45s-20.186 45-45 45h-47.563c-6.196 17.461-22.881 30-42.437 30h-26.797c8.049 15.701 18.402 30.027 30.833 42.316 11.795-7.735 25.838-12.316 40.964-12.316 36.189 0 66.475 25.772 73.475 59.923.515.005 1.011.077 1.525.077s1.011-.071 1.525-.077c7-34.151 37.286-59.923 73.475-59.923z"
      })]
    })
  }));
});
const PersonalCare = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-personal-care",
    height: "512",
    viewBox: "0 0 128 128",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m121.479 56.305-2.872-1.57-1.571-2.873a1.615 1.615 0 0 0 -1.416-.839 1.617 1.617 0 0 0 -1.416.84l-1.571 2.872-2.871 1.57a1.614 1.614 0 0 0 0 2.833l2.872 1.571 1.57 2.87a1.612 1.612 0 0 0 1.416.841 1.614 1.614 0 0 0 1.417-.84l1.57-2.871 2.872-1.571a1.615 1.615 0 0 0 0-2.833z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m33.712 6.821-1.425-.78-.78-1.426a1.347 1.347 0 0 0 -2.363 0l-.78 1.426-1.425.779a1.348 1.348 0 0 0 0 2.365l1.426.779.78 1.426a1.347 1.347 0 0 0 2.363 0l.78-1.425 1.426-.78a1.347 1.347 0 0 0 0-2.363z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m19.026 20.675-2.214-1.211-1.212-2.214a1.492 1.492 0 0 0 -2.619 0l-1.212 2.215-2.216 1.21a1.494 1.494 0 0 0 0 2.62l2.215 1.211 1.212 2.214a1.492 1.492 0 0 0 2.619 0l1.212-2.215 2.215-1.205a1.493 1.493 0 0 0 0-2.62z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m54.185 105.108a28.192 28.192 0 0 0 -11.625-14.421 80.237 80.237 0 0 0 -10.778-5.565c-2.629-.87-4.1 3.1-1.69 4.458 3.313 1.868 9.011 5.435 9.732 7.722a1.5 1.5 0 0 1 -1.431 1.951 1.719 1.719 0 0 1 -1.431-1.053 16.513 16.513 0 0 0 -4.877-5.042 22.263 22.263 0 0 1 -4.293-4.281c-2.507-3.289-5-9.049-8.618-9.649-1.6-.265-3.209.85-3.088 2.352.3 3.768 10.324 19.614 14.192 23.44 2.628 2.6 9.107 6.8 11.333 11.109 1.2 2.327 1.336 5.763 1.655 7.051a2.2 2.2 0 0 0 1.3 1.608c1.758.833 10.128.757 11.67-.552a2.162 2.162 0 0 0 .764-1.357c.763-4.023-1.56-14.559-2.815-17.771z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m73.815 105.108a28.192 28.192 0 0 1 11.625-14.421 80.237 80.237 0 0 1 10.778-5.565c2.629-.87 4.1 3.1 1.69 4.458-3.308 1.868-9.008 5.435-9.732 7.72a1.5 1.5 0 0 0 1.431 1.951 1.719 1.719 0 0 0 1.431-1.051 16.513 16.513 0 0 1 4.877-5.042 22.263 22.263 0 0 0 4.293-4.281c2.507-3.289 5-9.049 8.618-9.649 1.6-.265 3.209.85 3.088 2.352-.3 3.768-10.324 19.614-14.192 23.44-2.628 2.6-9.107 6.8-11.333 11.109-1.2 2.327-1.336 5.763-1.655 7.051a2.2 2.2 0 0 1 -1.3 1.608c-1.758.833-10.128.757-11.67-.552a2.162 2.162 0 0 1 -.764-1.357c-.763-4.023 1.56-14.559 2.815-17.771z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m82.852 16.956a22.585 22.585 0 0 0 -17.345 8.307 2 2 0 0 1 -3.121 0 22.583 22.583 0 0 0 -17.345-8.307c-12.87 0-21.635 11.2-21.635 25.013 0 8.261 4.4 21.631 13.018 29.687 12.269 11.47 22.7 14.422 26.236 15.132a6.523 6.523 0 0 0 2.578 0c3.539-.709 13.963-3.661 26.231-15.131 8.617-8.056 13.018-21.426 13.018-29.687 0-13.815-8.765-25.014-21.635-25.014zm-26.043 32.83a1.5 1.5 0 0 1 -2.121-.062 3.914 3.914 0 0 0 -4.158-.424 1.5 1.5 0 0 1 -1.83-2.383c1.743-1.339 5.939-1.615 8.169.749a1.5 1.5 0 0 1 -.06 2.12zm7.138 12.223a3.928 3.928 0 0 1 -4.168-3.568.964.964 0 0 1 .942-1.133h6.451a.964.964 0 0 1 .942 1.133 3.928 3.928 0 0 1 -4.167 3.568zm15.519-12.988a1.5 1.5 0 0 1 -2.1.275 3.914 3.914 0 0 0 -4.158.428 1.5 1.5 0 0 1 -2.183-2.058c2.229-2.363 6.427-2.088 8.169-.749a1.5 1.5 0 0 1 .272 2.104z"
    })]
  }));
});
const PieChart$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-pie-chart",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m238 218v-198c0-11.046875-8.953125-20-20-20-120.480469 0-218 97.5-218 218 0 11.046875 8.953125 20 20 20h198c11.046875 0 20-8.953125 20-20zm-40-20h-156.882812c9.230468-82.210938 74.671874-147.652344 156.882812-156.882812zm96-122c-11.046875 0-20 8.953125-20 20v178h-178c-11.046875 0-20 8.953125-20 20 0 120.480469 97.5 218 218 218 120.480469 0 218-97.5 218-218 0-120.480469-97.5-218-218-218zm0 396c-91.390625 0-166.917969-69.226562-176.882812-158h176.882812c11.046875 0 20-8.953125 20-20v-176.882812c88.773438 9.964843 158 85.492187 158 176.882812 0 98.148438-79.851562 178-178 178zm0 0"
    })
  }));
});
const PieChart2 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-pie-chart-2",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M256,0C114.508,0,0,114.497,0,256c0,141.492,114.497,256,256,256c141.492,0,256-114.497,256-256 C512,114.508,397.503,0,256,0z M276,40.921C379.369,50.35,461.652,132.655,471.079,236h-110.98 c-8.137-42.439-41.66-75.962-84.099-84.099V40.921z M322,256c0,18.151-7.367,34.613-19.266,46.556 c-0.03,0.03-0.063,0.055-0.093,0.085c-0.03,0.03-0.054,0.063-0.084,0.093C290.613,314.633,274.151,322,256,322 c-36.393,0-66-29.607-66-66s29.607-66,66-66S322,219.607,322,256z M256,472c-119.385,0-216-96.608-216-216 c0-113.397,86.805-205.118,196-215.079v110.98c-48.918,9.38-86,52.487-86,104.099c0,58.448,47.552,106,106,106 c22.011,0,42.476-6.746,59.438-18.276l78.503,78.503C355.248,454.45,306.976,472,256,472z M422.227,393.941l-78.503-78.503 c7.949-11.695,13.618-25.055,16.375-39.438h110.98C467.108,319.535,450.202,360.349,422.227,393.941z"
    })
  }));
});
const PiggyBank = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-piggy-bank",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("circle", {
          cx: "379",
          cy: "264",
          r: "20"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M492,259c-12.89,0-21.853-1.826-25.238-5.141c-3.121-3.057-5.129-10.567-7.455-19.265l-0.219-0.818 c-1.437-5.365-2.551-10.641-3.629-15.742c-3.318-15.703-6.731-31.857-18.891-46.141c2.671-21.221,12.427-54.316,16.453-66.71 L461.532,79H434c-23.962,0-46.463,8.396-65.07,24.278c-8.428,7.194-15.019,15.028-19.909,21.872 c-2.101-0.423-4.269-0.817-6.465-1.198c2.972-9.301,4.51-19.057,4.51-28.952c0-52.383-42.617-95-95-95s-95,42.617-95,95 c0,14.159,3.148,28.032,9.151,40.69c-14.984,6.208-28.576,14.007-40.551,23.339C90.521,186.418,70.561,225.975,67.443,274h-8.11 c-0.051,0-5.619-0.253-10.723-2.806c-4.257-2.129-8.61-5.756-8.61-16.527c0-10.43,3.929-14.027,7.772-16.171 c4.418-2.463,9.782-3.12,11.476-3.165L59,235.333v-40c-2.422,0-15.182,0.34-28.505,7.059C10.83,212.309,0,230.873,0,254.667 c0,23.823,10.911,42.399,30.723,52.305c13.378,6.689,26.18,7.028,28.61,7.028h9.664c5.449,36.293,21.807,69.877,45.624,92.709 L127.256,512H221v-61.296c12.745,2.133,26.031,3.296,42.867,3.296c7.888,0,15.574-0.245,23.032-0.504L294.401,512H387v-66.521 c50.959-12.498,93.082-47.194,122.558-101.234l2.442-4.478V259H492z M252.067,40c30.327,0,55,24.673,55,55 c0,8.472-1.937,16.761-5.632,24.27c-13.161-0.883-26.142-1.27-37.568-1.27c-20.772,0-40.415,1.958-58.67,5.789 c-5.317-8.633-8.13-18.577-8.13-28.789C197.067,64.673,221.74,40,252.067,40z M472,329.46L472,329.46 c-26.614,46.479-62.875,73.302-107.836,79.742L347,411.661V472h-17.401l-7.611-59.354l-17.914,0.318 c-5.495,0.098-11.093,0.294-16.506,0.483C279.81,413.72,271.786,414,263.867,414c-23.866,0-38.271-2.495-58.042-7.409L181,400.42 V472h-18.256l-10.246-85.378l-6.068-5.085C122.108,361.156,107,325.11,107,287.467C107,206.398,165.642,158,263.867,158 c26.966,0,66.349,2.394,88.596,9.14l15.652,4.746l7.758-14.398c4.147-7.696,13.563-22.179,29.331-31.017 c-4.495,17.307-8.898,37.707-9.291,52.401l-0.253,9.467l7.164,6.195c7.95,6.875,9.99,15.163,13.499,31.771 c1.131,5.353,2.414,11.42,4.125,17.815l0.217,0.811c3.522,13.169,7.165,26.787,18.108,37.505 c8.123,7.956,18.909,12.919,33.227,15.16V329.46z"
        })
      })
    })]
  }));
});
const Pizza = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-pizza",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M386.88,16L257.472,240h253.696c0.48-4.512,0.832-8.864,0.832-13.44C512,135.68,461.44,56.64,386.88,16z M400,192 c-17.664,0-32-14.336-32-32s14.336-32,32-32s32,14.336,32,32S417.664,192,400,192z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M257.472,272h-55.424l27.712-48L337.696,37.184C307.136,23.456,273.888,16,240,16C107.648,16,0,123.648,0,256 s107.648,240,240,240c126.944,0,230.912-99.136,239.2-224H257.472z M240,80c8.832,0,16,7.168,16,16c0,8.832-7.168,16-16,16 c-8.832,0-16-7.168-16-16C224,87.168,231.168,80,240,80z M111.008,208c8.832,0,16,7.168,16,16c0,8.832-7.168,16-16,16 c-8.832,0-16-7.168-16-16C95.008,215.168,102.176,208,111.008,208z M128,368c-17.664,0-32-14.336-32-32s14.336-32,32-32 s32,14.336,32,32S145.664,368,128,368z M160,176c-17.664,0-32-14.336-32-32s14.336-32,32-32s32,14.336,32,32S177.664,176,160,176z M224,400c-8.832,0-16-7.168-16-16c0-8.832,7.168-16,16-16c8.832,0,16,7.168,16,16C240,392.832,232.832,400,224,400z M320,400 c-17.664,0-32-14.336-32-32s14.336-32,32-32s32,14.336,32,32S337.664,400,320,400z M400,336c-8.832,0-16-7.168-16-16 c0-8.832,7.168-16,16-16c8.832,0,16,7.168,16,16C416,328.832,408.832,336,400,336z"
        })
      })
    })]
  }));
});
const PlayStore = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-play-store",
    x: "0px",
    y: "0px",
    viewBox: "0 0 512.029 512.029",
    enableBackground: "new 0 0 512.029 512.029",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M111.758,8.189C91.726-2.883,68.206-2.627,48.302,8.349l233.28,215.2l78.368-78.368L111.758,8.189z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M24.974,30.365c-5.696,9.312-8.96,19.968-8.96,31.264v388.672c0,10.944,2.976,21.376,8.352,30.496l234.592-234.592\nL24.974,30.365z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M463.854,202.525l-74.752-41.248l-84,83.968l102.944,94.944l55.84-30.816c20.096-11.136,32.128-31.104,32.128-53.44\nC495.982,233.597,483.982,213.629,463.854,202.525z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M282.478,267.901L47.246,503.133c10.208,5.824,21.408,8.896,32.672,8.896c10.88,0,21.824-2.752,31.84-8.288\nl266.784-147.232L282.478,267.901z"
        })
      })
    })]
  }));
});
const RightArrow = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-right-arrow",
    viewBox: "0 0 464 464",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M459.733,221.965L285.653,47.459c-2.941-2.887-6.984-4.365-11.093-4.053c-7.846,0.115-14.179,6.447-14.293,14.293v75.733 c0,5.891-4.776,10.667-10.667,10.667H14.293C6.447,144.213,0.115,150.546,0,158.392v146.773c0.009,3.844,1.544,7.527,4.267,10.24 c2.7,2.743,6.391,4.281,10.24,4.267h235.947c5.891,0,10.667,4.776,10.667,10.667v75.733c-0.149,7.893,6.128,14.412,14.02,14.561 c3.951,0.075,7.757-1.49,10.513-4.321l174.08-174.08c2.69-2.648,4.224-6.252,4.267-10.027 C463.991,228.361,462.456,224.678,459.733,221.965z"
    })
  }));
});
const Safe = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-safe",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m492 0h-472c-11.046 0-20 8.954-20 20v432c0 11.046 8.954 20 20 20h60v20c0 11.046 8.954 20 20 20s20-8.954 20-20v-20h272v20c0 11.046 8.954 20 20 20s20-8.954 20-20v-20h60c11.046 0 20-8.954 20-20v-432c0-11.046-8.954-20-20-20zm-452 201.333h40v69.333h-40zm432 230.667h-432v-121.333h40v61.333c0 11.046 8.954 20 20 20h312c11.046 0 20-8.954 20-20v-272c0-11.046-8.954-20-20-20h-312c-11.046 0-20 8.954-20 20v61.333h-40v-121.333h432zm-352-80v-232h272v232zm136-176c-33.084 0-60 26.916-60 60s26.916 60 60 60 60-26.916 60-60-26.916-60-60-60zm0 80c-11.028 0-20-8.972-20-20s8.972-20 20-20 20 8.972 20 20-8.972 20-20 20z"
    })
  }));
});
const Search$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    viewBox: "0 0 30.239 30.239",
    width: "100%",
    height: "100%"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M20.194 3.46c-4.613-4.613-12.121-4.613-16.734 0-4.612 4.614-4.612 12.121 0 16.735 4.108 4.107 10.506 4.547 15.116 1.34.097.459.319.897.676 1.254l6.718 6.718a2.498 2.498 0 003.535 0 2.496 2.496 0 000-3.535l-6.718-6.72a2.5 2.5 0 00-1.253-.674c3.209-4.611 2.769-11.008-1.34-15.118zm-2.121 14.614c-3.444 3.444-9.049 3.444-12.492 0-3.442-3.444-3.442-9.048 0-12.492 3.443-3.443 9.048-3.443 12.492 0 3.444 3.444 3.444 9.048 0 12.492z"
    })
  }));
});
const SearchMagnifyingGlass = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-search-magnifying-glass",
    enableBackground: "new 0 0 512 512",
    height: "512",
    viewBox: "0 0 512 512",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsxs$2("g", {
        children: [/* @__PURE__ */ jsx$3("path", {
          d: "m103.6 342.083-84.197 72.169c-24.574 21.063-26.015 58.588-3.129 81.474 22.886 22.886 60.411 21.445 81.474-3.129l72.169-84.197zm-44.899 126.217c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "m161.717 292.268-35.273 30.234 63.053 63.053 30.234-35.273c-22.961-15.302-42.711-35.052-58.014-58.014z"
        })]
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m334.5 0c-97.874 0-177.5 79.626-177.5 177.5s79.626 177.5 177.5 177.5 177.5-79.626 177.5-177.5-79.626-177.5-177.5-177.5zm0 282.5c-8.284 0-15-6.716-15-15s6.716-15 15-15 15 6.716 15 15-6.716 15-15 15zm40.527-115.643c-6.992 7.365-15.875 12.64-25.527 15.345v25.298c0 8.284-6.716 15-15 15s-15-6.716-15-15v-38.228c0-8.284 6.716-15 15-15 7.163 0 13.83-2.866 18.771-8.071 4.938-5.201 7.452-12.024 7.079-19.213-.699-13.457-11.815-24.211-25.309-24.482-13.121-.309-24.371 9.302-26.178 22.251-.167 1.191-.251 2.414-.251 3.63 0 8.284-6.716 15-15 15s-15-6.716-15-15c0-2.597.181-5.213.538-7.774 3.907-27.992 28.192-48.688 56.495-48.101 29.142.586 53.153 23.832 54.663 52.922.805 15.486-4.621 30.197-15.281 41.423z"
      })]
    })
  }));
});
const ServiceVan = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-service-van",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 226.334 226.334",
    enableBackground: "new 0 0 226.334 226.334",
    xmlSpace: "preserve"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M221.334,127.223h-1V70.251c0-7.98-6.492-14.472-14.473-14.472H100.167H65.704c-0.055,0-0.11,0.001-0.166,0.003\nc-0.429-0.012-0.867,0.027-1.295,0.126c-1.396,0.324-2.586,1.232-3.268,2.494l-6.944,12.85l-9.78,17.281\nc-0.35,0.213-0.739,0.367-1.157,0.409l-21.139,2.173C15.14,91.816,10,97.511,10,104.362v22.86H5c-1.484,0-2.892,0.66-3.842,1.8\nc-0.95,1.141-1.344,2.644-1.076,4.104l3,16.313c0.437,2.373,2.505,4.096,4.917,4.096h14.126c2.271,9.74,11.018,17.02,21.44,17.02\ns19.169-7.28,21.44-17.02h91.201c2.271,9.74,11.018,17.02,21.44,17.02s19.169-7.28,21.44-17.02h22.247c2.762,0,5-2.239,5-5v-16.313\nC226.334,129.461,224.095,127.223,221.334,127.223z M43.566,160.555c-6.627,0-12.02-5.392-12.02-12.02s5.392-12.02,12.02-12.02\ns12.02,5.392,12.02,12.02S50.194,160.555,43.566,160.555z M95.167,82.973c0,2.16-1.757,3.917-3.917,3.917H56.671l11.948-21.111\nh26.547V82.973z M145.118,124.894c-1.126,1.126-2.623,1.746-4.215,1.746s-3.089-0.62-4.215-1.746c-2.324-2.324-2.324-6.105,0-8.43\nl21.284-21.285c-2.343-5.704-1.076-12.387,3.363-16.826c3.094-3.092,7.309-4.707,11.698-4.501c0.988,0.048,1.854,0.674,2.211,1.597\nc0.356,0.922,0.135,1.969-0.564,2.668l-6.087,6.087c-0.276,0.276-0.317,0.598-0.317,0.766s0.041,0.489,0.317,0.765l7.253,7.253\nc0.276,0.275,0.598,0.317,0.766,0.317c0.167,0,0.489-0.042,0.766-0.317l6.087-6.086c0.7-0.701,1.746-0.921,2.668-0.564\nc0.923,0.356,1.549,1.223,1.597,2.211c0.211,4.363-1.43,8.627-4.501,11.698c-2.919,2.918-6.8,4.526-10.929,4.526\nc-2.027,0-4.034-0.398-5.896-1.163L145.118,124.894z M177.647,160.555c-6.628,0-12.02-5.392-12.02-12.02s5.392-12.02,12.02-12.02\ns12.02,5.392,12.02,12.02S184.275,160.555,177.647,160.555z"
    })
  }));
});
const Shirt = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-shirt",
    x: "0px",
    y: "0px",
    viewBox: "0 0 512 512",
    enableBackground: "new 0 0 512 512",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M400.907,138.616v-0.003l-0.004-0.002v-0.001l-67.824-27.01c-0.785,3.893-2.036,8.898-4.012,14.43\nc-1.539,4.31-3.516,8.948-6.058,13.625c-0.04,0.099-0.099,0.189-0.149,0.288c-13.705,25.016-36.159,38.234-64.939,38.234\nc-28.492,0-51.443-13.029-66.369-37.668c-0.288-0.477-0.566-0.953-0.844-1.43c-2.691-4.628-4.846-9.196-6.544-13.427\nc-2.225-5.522-3.675-10.467-4.608-14.201l-68.405,27.142v0.004l-0.001-0.001L8.206,259.383l83.033,80.018l19.91-20.408V512\nh289.758V319.051L420.76,339.4l83.034-80.017L400.907,138.616z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M270.919,100.785V87.924c17.64-6.17,30.329-22.983,30.329-42.703C301.247,20.286,280.961,0,256.026,0\nc-24.936,0-45.222,20.286-45.222,45.222h29.793c0-8.507,6.922-15.428,15.429-15.428s15.428,6.921,15.428,15.428\nc0,8.507-6.922,15.428-15.428,15.428h-14.88l-0.02,40.135h-33.417c0.367,1.946,1.639,7.865,4.578,14.896\nc1.351,3.218,3.049,6.684,5.184,10.1c1.063,1.698,2.165,3.297,3.327,4.797c9.166,11.967,21.372,17.806,37.122,17.806\nc15.701,0,27.44-5.839,35.752-17.806c0.924-1.331,1.807-2.741,2.652-4.231c2.016-3.555,3.575-7.23,4.767-10.666\nc2.433-6.972,3.387-12.94,3.655-14.896H270.919z"
        })
      })
    })]
  }));
});
const ShoppingBags = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-shopping-bags",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M496,256h-48v-16c0-44.096-35.872-80-80-80s-80,35.904-80,80v16h-48c-8.832,0-16,7.168-16,16v176 c0,35.296,28.704,64,64,64h160c35.296,0,64-28.704,64-64V272C512,263.168,504.832,256,496,256z M416,256h-96v-16 c0-26.464,21.536-48,48-48s48,21.536,48,48V256z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M304,128h-48V96c0-52.928-43.072-96-96-96c-52.928,0-96,43.072-96,96v32H16c-8.832,0-16,7.168-16,16v304 c0,35.296,28.704,64,64,64h152.96C201.632,494.976,192,472.672,192,448V272c0-26.464,21.536-48,48-48h17.152 c5.344-37.28,29.344-68.288,61.984-84.288C317.248,133.024,311.328,128,304,128z M224,128H96V96c0-35.296,28.704-64,64-64 s64,28.704,64,64V128z"
        })
      })
    })]
  }));
});
const ShoppingBasket = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-shopping-basket",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    enableBackground: "new 0 0 512 512",
    viewBox: "0 0 512 512",
    children: [/* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "m377.679 177.715 11.786-22.755c-18.218-27.365-49.195-44.365-82.718-44.365-21.263 0-42.088 7.146-59.25 19.654l22.037 47.466z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m335.589 258.974 27.068-52.259h-213.723l27.068 52.259c3.21 6.198 5.06 12.742 5.688 19.298h148.21c.629-6.556 2.479-13.1 5.689-19.298z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m66.375 278.272-36.203-69.892c-17.408 5.059-30.172 21.142-30.172 40.161v29.731z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m429.668 308.272c-10.185 19.224-30.673 30.193-52.352 27.967-6.647-.683-13.037-2.593-18.994-5.679-9.957-5.157-17.586-13.053-22.467-22.288h-160.118c-4.881 9.235-12.51 17.131-22.467 22.288-5.957 3.086-12.347 4.996-18.994 5.679-21.679 2.226-42.167-8.742-52.352-27.967h-49.849l29.975 203.728h387.9l29.975-203.728zm-287.564 163.431h-30v-104.019h30zm64.304 0h-30v-104.019h30zm64.305 0h-30v-104.019h30zm64.305 0h-30v-104.019h30zm64.304 0h-30v-104.019h30z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m445.217 278.272h66.783v-29.731c0-19.148-12.938-35.32-30.528-40.263z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m107.435 294.49c6.124 11.824 20.674 16.444 32.498 10.32 11.824-6.124 16.444-20.674 10.32-32.498l-107.397-207.341-42.817 22.178z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m361.34 272.312c-6.124 11.824-1.504 26.373 10.32 32.498 11.824 6.124 26.373 1.504 32.498-10.32l107.395-207.341-42.817-22.178z"
      })]
    }), /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "m127.509 65.548v62.775l-9.316 19.043 15.72 30.349h103.648l-25.904-55.796v-56.371z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m127.509 0h84.148v35.548h-84.148z"
      })]
    })]
  }));
});
const SmartPhone = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-smart-phone",
    x: "0px",
    y: "0px",
    viewBox: "0 0 503.604 503.604",
    enableBackground: "new 0 0 503.604 503.604",
    xmlSpace: "preserve",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M337.324,0H167.192c-28.924,0-53.5,23.584-53.5,52.5v398.664c0,28.916,24.056,52.44,52.98,52.44l170.412-0.184\nc28.92,0,52.58-23.528,52.58-52.448l0.248-398.5C389.908,23.452,366.364,0,337.324,0z M227.68,31.476h49.36\nc4.336,0,7.868,3.52,7.868,7.868c0,4.348-3.532,7.868-7.868,7.868h-49.36c-4.348,0-7.868-3.52-7.868-7.868\nC219.812,34.996,223.332,31.476,227.68,31.476z M198.02,33.98c2.916-2.912,8.224-2.952,11.136,0c1.46,1.456,2.324,3.5,2.324,5.588\nc0,2.048-0.864,4.088-2.324,5.548c-1.452,1.46-3.504,2.32-5.548,2.32c-2.084,0-4.088-0.86-5.588-2.32\nc-1.452-1.456-2.28-3.5-2.28-5.548C195.736,37.48,196.568,35.436,198.02,33.98z M250.772,488.008\nc-12.984,0-23.544-10.568-23.544-23.548c0-12.984,10.56-23.548,23.544-23.548s23.544,10.564,23.544,23.548\nC274.316,477.44,263.752,488.008,250.772,488.008z M365.488,424.908H141.232V74.756h224.256V424.908z"
    })
  }));
});
const SortNumberAsc = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-sort-number-asc",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    width: "511.63px",
    height: "511.63px",
    viewBox: "0 0 511.63 511.63",
    enableBackground: "new 0 0 511.63 511.63",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsxs$2("g", {
        children: [/* @__PURE__ */ jsx$3("path", {
          d: "M240.214,401.991h-54.816V9.136c0-2.663-0.855-4.856-2.57-6.567C181.115,0.859,178.928,0,176.261,0h-54.816\nc-2.664,0-4.858,0.855-6.567,2.568c-1.711,1.715-2.57,3.905-2.57,6.567v392.855H57.491c-4.186,0-7.042,1.902-8.566,5.708\nc-1.524,3.621-0.854,6.95,1.999,9.996l91.36,91.365c2.096,1.707,4.283,2.562,6.567,2.562c2.475,0,4.665-0.855,6.567-2.562\nl91.076-91.078c1.908-2.279,2.857-4.571,2.857-6.844c0-2.676-0.855-4.859-2.57-6.584\nC245.068,402.847,242.881,401.991,240.214,401.991z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "M440.062,319.332c-15.609-17.986-35.115-26.977-58.529-26.977c-20.749,0-37.973,6.943-51.679,20.841\nc-13.698,13.894-20.55,30.834-20.55,50.819c0,19.226,6.369,35.638,19.13,49.252c12.758,13.605,29.212,20.409,49.389,20.409\nc8.385,0,16.427-1.331,24.133-3.997c7.7-2.662,13.562-6.188,17.56-10.561h0.571c-3.046,16.557-9.377,30.402-18.986,41.538\ns-22.415,16.7-38.403,16.7c-7.228,0-14.366-1.235-21.402-3.71c-3.046-0.76-5.995-1.807-8.85-3.142l-11.136,32.265\nc3.426,1.334,7.419,2.758,11.995,4.295c8.75,3.035,19.034,4.564,30.833,4.564c13.135,0,25.267-2.33,36.401-6.994\nc11.137-4.661,20.513-10.887,28.12-18.699c7.618-7.812,14.089-16.882,19.418-27.265c5.328-10.376,9.229-21.228,11.703-32.537\nc2.478-11.328,3.72-22.895,3.72-34.694C463.485,361.356,455.673,337.326,440.062,319.332z M413.516,394.288\nc-6.659,5.14-14.753,7.71-24.267,7.71c-12.939,0-22.895-3.617-29.845-10.849c-6.947-7.23-10.424-16.279-10.424-27.124\nc0-10.841,2.95-19.79,8.85-26.833c5.899-7.046,13.798-10.571,23.698-10.571c11.229,0,21.033,5.041,29.414,15.13\nc8.377,10.088,12.559,21.121,12.559,33.119C423.501,382.673,420.182,389.151,413.516,394.288z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "M358.979,60.817c3.426-3.427,5.9-6.374,7.42-8.851l1.995-3.428h0.571v4.57c0,0.948-0.055,2.568-0.144,4.853\nc-0.089,2.284-0.144,4.093-0.144,5.424v123.338h-47.671v32.548H454.91v-32.548h-47.109V0h-35.118l-54.816,52.825l23.421,24.554\nL358.979,60.817z"
        })]
      })
    })
  }));
});
const SortNumberDesc = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-sort-number-desc",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    width: "511.63px",
    height: "511.63px",
    viewBox: "0 0 511.63 511.63",
    enableBackground: "new 0 0 511.63 511.63",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsxs$2("g", {
        children: [/* @__PURE__ */ jsx$3("path", {
          d: "M240.214,401.994h-54.816V9.139c0-2.663-0.855-4.856-2.57-6.567c-1.713-1.709-3.899-2.568-6.567-2.568h-54.816\nc-2.664,0-4.858,0.856-6.567,2.568c-1.711,1.714-2.57,3.905-2.57,6.567v392.855H57.491c-4.186,0-7.042,1.903-8.566,5.709\nc-1.524,3.62-0.854,6.95,1.999,9.999l91.36,91.365c2.096,1.704,4.283,2.56,6.567,2.56c2.475,0,4.665-0.855,6.567-2.56\nl91.076-91.078c1.908-2.282,2.857-4.571,2.857-6.848c0-2.673-0.855-4.855-2.57-6.581\nC245.068,402.85,242.881,401.994,240.214,401.994z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "M407.804,292.369L407.804,292.369h-35.114l-54.823,52.814l23.421,24.55l17.7-16.556c3.425-3.433,5.899-6.379,7.419-8.854\nl1.995-3.429h0.571v4.568c0,0.955-0.055,2.57-0.144,4.856c-0.089,2.285-0.144,4.093-0.144,5.427v123.339h-47.671v32.544h133.902\nv-32.544h-47.109V292.369H407.804z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "M440.062,26.98C424.452,8.992,404.946,0,381.532,0c-20.749,0-37.973,6.949-51.679,20.845\nc-13.698,13.894-20.55,30.833-20.55,50.819c0,19.224,6.369,35.642,19.13,49.249c12.758,13.611,29.212,20.417,49.389,20.417\nc8.385,0,16.427-1.334,24.133-3.999c7.7-2.667,13.562-6.189,17.56-10.566h0.571c-3.046,16.558-9.377,30.404-18.986,41.54\nc-9.609,11.134-22.415,16.702-38.403,16.702c-7.228,0-14.366-1.237-21.402-3.711c-3.046-0.759-5.995-1.809-8.85-3.14\nl-11.136,32.264c3.426,1.332,7.419,2.758,11.995,4.283c8.75,3.044,19.034,4.569,30.833,4.569c13.135,0,25.267-2.329,36.401-6.993\nc11.137-4.665,20.513-10.9,28.12-18.702c7.618-7.806,14.089-16.892,19.418-27.264c5.328-10.373,9.229-21.223,11.703-32.548\nc2.478-11.326,3.72-22.886,3.72-34.689C463.485,69,455.673,44.971,440.062,26.98z M413.516,101.929\nc-6.659,5.14-14.753,7.71-24.267,7.71c-12.939,0-22.891-3.617-29.845-10.85c-6.943-7.232-10.424-16.274-10.424-27.122\nc0-10.85,2.95-19.794,8.85-26.836c5.896-7.043,13.798-10.566,23.698-10.566c11.229,0,21.033,5.042,29.414,15.131\nc8.377,10.09,12.559,21.128,12.559,33.12C423.501,90.319,420.175,96.792,413.516,101.929z"
        })]
      })
    })
  }));
});
const SortStringAsc = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-sort-string-asc",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    width: "511.626px",
    height: "511.627px",
    viewBox: "0 0 511.626 511.627",
    enableBackground: "new 0 0 511.626 511.627",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsxs$2("g", {
        children: [/* @__PURE__ */ jsx$3("path", {
          d: "M215.232,401.991h-54.818V9.136c0-2.663-0.854-4.856-2.568-6.567C156.133,0.859,153.946,0,151.279,0H96.461\nc-2.663,0-4.856,0.855-6.567,2.568c-1.709,1.715-2.568,3.905-2.568,6.567v392.855H32.507c-4.184,0-7.039,1.902-8.563,5.708\nc-1.525,3.621-0.856,6.95,1.997,9.996l91.361,91.365c2.096,1.707,4.281,2.562,6.567,2.562c2.474,0,4.664-0.855,6.567-2.562\nl91.076-91.078c1.906-2.279,2.856-4.571,2.856-6.844c0-2.676-0.854-4.859-2.568-6.584\nC220.086,402.847,217.9,401.991,215.232,401.991z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "M428.511,479.082h-70.808c-3.997,0-6.852,0.191-8.559,0.568l-4.001,0.571v-0.571l3.142-3.142\nc2.848-3.419,4.853-5.896,5.996-7.409l105.344-151.331v-25.406H297.744v65.377h34.263v-32.832h66.236\nc3.422,0,6.283-0.288,8.555-0.855c0.572,0,1.287-0.048,2.143-0.145c0.853-0.085,1.475-0.144,1.852-0.144v0.855l-3.142,2.574\nc-1.704,1.711-3.713,4.273-5.995,7.706L296.31,485.934v25.693h166.734v-66.521h-34.54v33.976H428.511z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "M468.475,189.008L402.807,0h-46.25l-65.664,189.008h-19.979v30.264h81.933v-30.264h-21.409l13.419-41.112h69.381\nl13.415,41.112H406.25v30.264h82.228v-30.264H468.475z M354.278,116.487l20.841-62.241c0.76-2.285,1.479-5.046,2.143-8.28\nc0.66-3.236,0.996-4.949,0.996-5.139l0.855-5.708h1.143c0,0.761,0.191,2.664,0.562,5.708l3.433,13.418l20.554,62.241H354.278z"
        })]
      })
    })
  }));
});
const SortStringDesc = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-sort-string-desc",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    width: "511.626px",
    height: "511.627px",
    viewBox: "0 0 511.626 511.627",
    enableBackground: "new 0 0 511.626 511.627",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsxs$2("g", {
        children: [/* @__PURE__ */ jsx$3("path", {
          d: "M215.232,401.991h-54.818V9.136c0-2.663-0.854-4.856-2.568-6.567C156.133,0.859,153.946,0,151.279,0H96.461\nc-2.663,0-4.856,0.855-6.567,2.568c-1.709,1.715-2.568,3.905-2.568,6.567v392.855H32.507c-4.184,0-7.039,1.902-8.563,5.708\nc-1.525,3.621-0.856,6.95,1.997,9.996l91.361,91.365c2.096,1.707,4.281,2.562,6.567,2.562c2.474,0,4.664-0.855,6.567-2.562\nl91.076-91.078c1.906-2.279,2.856-4.571,2.856-6.844c0-2.676-0.854-4.859-2.568-6.584\nC220.086,402.847,217.9,401.991,215.232,401.991z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "M468.475,481.361l-65.664-189.01h-46.25L290.9,481.364H270.92v30.263h81.934v-30.266h-21.412l13.418-41.11h69.381\nl13.415,41.11H406.25v30.266h82.228v-30.266H468.475z M354.278,408.846l20.841-62.242c0.76-2.283,1.479-5.045,2.143-8.278\nc0.66-3.234,0.996-4.948,0.996-5.137l0.855-5.715h1.143c0,0.767,0.191,2.669,0.562,5.715l3.433,13.415l20.554,62.242H354.278z"
        }), /* @__PURE__ */ jsx$3("path", {
          d: "M463.055,152.745h-34.537v33.975H357.71c-4.001,0-6.852,0.097-8.556,0.288l-4.004,0.854v-0.854l3.142-2.858\nc2.851-3.422,4.853-5.896,5.996-7.421L459.632,25.41V0H297.754v65.387h34.259V32.552h66.232c3.426,0,6.283-0.288,8.56-0.859\nc0.571,0,1.286-0.048,2.142-0.144c0.855-0.094,1.476-0.144,1.854-0.144v0.855l-3.141,2.568c-1.708,1.713-3.71,4.283-5.996,7.71\nL296.32,193.569v25.697h166.735V152.745z"
        })]
      })
    })
  }));
});
const SortUpDown = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-sort-up-down",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 479.71 479.71",
    enableBackground: "new 0 0 479.71 479.71",
    xmlSpace: "preserve",
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M469.936,328.847c-0.96-0.927-1.977-1.792-3.045-2.592c-13.381-8.971-31.276-7.013-42.4,4.64l-10.08,10.08\nc-3.469,3.481-6.383,7.474-8.64,11.84l-6.24,12V66.575c0.634-16.247-10.62-30.552-26.56-33.76\nc-17.486-2.564-33.74,9.534-36.303,27.02c-0.242,1.649-0.354,3.314-0.337,4.98v299.52l-4.32-9.44\nc-2.335-5.046-5.529-9.648-9.44-13.6l-10.56-10.56c-11.124-11.653-29.019-13.611-42.4-4.64\nc-14.259,10.441-17.355,30.464-6.914,44.724c0.844,1.152,1.764,2.247,2.754,3.276l80,80c12.49,12.504,32.751,12.515,45.255,0.025\nc0.008-0.008,0.017-0.017,0.025-0.025l80-80C483.006,361.38,482.65,341.122,469.936,328.847z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M214.411,104.655l-78.88-79.04C123.041,13.111,102.78,13.1,90.276,25.59c-0.008,0.008-0.017,0.017-0.025,0.025l-80,80\nc-11.653,11.124-13.611,29.019-4.64,42.4c10.441,14.259,30.464,17.355,44.724,6.914c1.152-0.844,2.247-1.764,3.276-2.754\nl10.88-10.88c5.215-5.219,9.158-11.57,11.52-18.56l4.32-9.92v302.24c-0.607,16.347,10.812,30.689,26.88,33.76\nc17.445,2.829,33.881-9.019,36.71-26.465c0.297-1.83,0.434-3.682,0.41-5.535v-304l3.2,9.12c2.403,6.746,6.284,12.869,11.36,17.92\nl11.52,11.52c12.492,12.501,32.753,12.509,45.255,0.017c0.621-0.621,1.217-1.267,1.785-1.937\nC228.183,135.984,226.864,116.552,214.411,104.655z"
        })
      })
    })]
  }));
});
const SpaFacial = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-spa-facial",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    width: "959.199px",
    height: "959.199px",
    viewBox: "0 0 959.199 959.199",
    enableBackground: "new 0 0 959.199 959.199",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "M788.143,259.2c-16.699-44.2-41.399-81.7-73.399-111.5c-32.7-30.5-73-52.8-120-66.5c0,0,0,0-0.101-0.1\nc-52.3-52.3-121.9-81.1-195.9-81.1s-143.5,28.8-195.8,81.1c-52.3,52.3-81.1,121.9-81.1,195.9c0,18.9,1.9,37.5,5.6,55.7\nc-14.3,41.7-20.8,85.9-19.4,132.101c2.4,78.5,27.9,160.899,75.6,244.899c0.1,0.102,0.2,0.301,0.3,0.4\nc18.6,140.6,138.9,249.1,284.6,249.1c128.3,0,237-84.199,273.8-200.398c9.8-7.5,19.101-15.602,27.9-24.5\nc52.3-52.301,81.1-121.9,81.1-195.9c0-50.9-13.6-99.701-39.1-142.201C812.443,370.3,809.843,316.5,788.143,259.2z M597.643,705.199\nc-33.5,0-60.6-27.1-60.6-60.6s27.1-60.6,60.6-60.6s60.601,27.1,60.601,60.6S631.043,705.199,597.643,705.199z M630.843,435.2h145.9\nc16.2,31.601,24.7,66.701,24.7,103.201c0,50-16.101,97.5-45.801,136.699c0-1,0-2.1,0-3.1\nC755.643,573.699,706.143,486.9,630.843,435.2z M762.143,385.2h-20.3c-76.8,0-153.399-1.2-230.3-1.3\nc-55.8,0-112.901,5-163.901,27.7c-83.399,37.1-133.399,117.099-155.1,203c-1.2-2.9-2.3-5.799-3.5-8.699\nc-19.2-49-29.7-96.801-31.1-142.701c-0.5-15.7,0.1-31.1,1.7-46.2c1.5-14,3.9-27.8,7.2-41.3c3.3-13.6,7.5-26.8,12.6-39.8\nc5.8-14.6,12.7-28.9,20.7-42.7c30.8-52.9,77.3-97.7,134.6-129.4c53.399-29.6,113.399-45.9,168.8-45.9c17.6,0,34.6,1.6,50.6,4.9\nc4.7,1,9.4,2,13.9,3.1c14.7,3.6,28.7,8.2,41.8,13.6c14.4,6,27.9,13,40.3,21.2c41.301,26.9,71.7,65.5,90.801,115.6\nc7,18.4,11.699,36.5,14.899,53.1c2.9,14.9,4.5,28.6,5.3,40.2C761.743,375.2,762.043,380.5,762.143,385.2z M398.842,50\nc31.2,0,61.4,6.3,89.3,18.2c-59.3,2.7-121.7,20.9-177.5,51.8c-55,30.5-101.399,71.7-135.8,120.4c7.5-46.7,29.4-89.7,63.5-123.8\nC281.142,73.6,338.142,50,398.842,50z M342.443,705.199c-33.5,0-60.601-27.1-60.601-60.6c0-18.799,8.5-35.5,21.9-46.6\nc6.7-5.5,14.5-9.6,23.1-11.9c5-1.299,10.2-2,15.5-2c3.3,0,6.5,0.301,9.7,0.801c28.9,4.6,50.9,29.6,50.9,59.799\nc0,11.602-3.301,22.5-8.9,31.701c-4.5,7.299-10.4,13.5-17.4,18.299c-7.1,4.9-15.3,8.301-24.1,9.701\nC349.342,704.9,345.943,705.199,342.443,705.199z M515.143,874.199c-5.899,13.201-23.8,22.801-45.1,22.801\nc-21.3,0-39.3-9.6-45.1-22.801c-2.101-4.6,3-9.299,10.1-9.299h70.201C512.243,864.9,517.243,869.5,515.143,874.199z M505.143,839.5\nh-70.2c-7.101,0-12.101-4.699-10.101-9.301c4.9-11.1,14-19.6,30.3-22.1c2-0.299,4,0,5.9,0.9l4.5,2.199c2.8,1.4,6.1,1.4,8.9,0\nl4.399-2.199c1.8-0.9,3.901-1.199,5.901-0.9c16.3,2.4,25.399,11,30.3,22.1C517.243,834.9,512.243,839.5,505.143,839.5z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M386.542,665.9c2.1-3.4,2.8-7.701,1.6-11.9c-2-6.9-8.399-11.199-15.199-10.9c-1.101,0.1-2.2,0.201-3.301,0.5\nc-7.1,2-14.699,3.201-22.6,3.5c-1.2,0-2.4,0.1-3.6,0.1c-8.801,0-17.4-1.1-25.301-3.299c-1.399-0.4-2.699-0.801-4-1.201\nc-7.899-2.6-16.3,1.701-18.899,9.5c-2.601,7.9,1.7,16.301,9.5,18.9c9.399,3.1,19.3,5,29.7,5.701c3,0.199,6,0.299,9,0.299\nc6.699,0,13.3-0.5,19.699-1.5c5-0.799,9.9-1.799,14.7-3.199C381.642,671.5,384.642,669.1,386.542,665.9z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M625.643,643.801c-8.199,2.299-17,3.5-26.199,3.5c-10.301,0-20.4-1.602-29.301-4.5c-7.899-2.602-16.3,1.699-18.899,9.5\nc-2.601,7.898,1.7,16.299,9.5,18.898c12.1,4,25.1,6,38.7,6c12,0,23.5-1.6,34.399-4.699c8-2.301,12.601-10.6,10.3-18.5\nC641.943,646.1,633.643,641.5,625.643,643.801z"
      })]
    })
  }));
});
const SpaFingernailPolish = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-spa-fingernail-polish",
    enableBackground: "new 0 0 512 512",
    height: "512",
    viewBox: "0 0 512 512",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m467 120h-92c-8.291 0-15 6.709-15 15v45h-90c0-6.46-4.131-12.188-10.254-14.224l-90-30c-4.6-1.567-9.595-.776-13.521 2.051-3.911 2.827-6.225 7.354-6.225 12.173v90c0 4.819 2.314 9.346 6.226 12.173 4.065 2.917 9.155 3.534 13.521 2.051l90-30c6.122-2.036 10.253-7.764 10.253-14.224h90v45c0 8.291 6.709 15 15 15h92c24.814 0 45-20.186 45-45v-60c0-24.814-20.186-45-45-45z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m15 90c24.814 0 45 20.186 45 45 0 8.291 6.709 15 15 15s15-6.709 15-15c0-24.814 20.186-45 45-45 8.291 0 15-6.709 15-15s-6.709-15-15-15c-24.814 0-45-20.186-45-45 0-8.291-6.709-15-15-15s-15 6.709-15 15c0 24.814-20.186 45-45 45-8.291 0-15 6.709-15 15s6.709 15 15 15zm60-30.463c4.382 5.887 9.576 11.081 15.463 15.463-5.887 4.382-11.081 9.576-15.463 15.463-4.382-5.887-9.576-11.081-15.463-15.463 5.887-4.382 11.081-9.576 15.463-15.463z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m79.834 205.21c-3.091 2.842-4.834 6.841-4.834 11.03v83.76c0 32.651 26.543 59.575 59.18 60h.82c35.464 0 60-30.3 60-63.208v-19.362l-15.762 5.255c-12.682 4.325-28.052 2.787-40.503-6.138-11.762-8.51-18.735-22.148-18.735-36.547v-57.746c-17.574 4.534-32.166 15.577-40.166 22.956z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m15 512h240c8.284 0 15-6.716 15-15v-152c0-31.459-11.243-59.929-29.368-82.786l-15.632 5.213v29.365c0 51.401-40.371 93.208-90 93.208h-.82c-49.351-.645-89.18-41.016-89.18-90v-54.965c-27.431 24.71-45 60.14-45 99.965v152c0 8.284 6.716 15 15 15z"
    })]
  }));
});
const StoreFront = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-store-front",
    enableBackground: "new 0 0 19.955 19.955",
    viewBox: "0 0 19.955 19.955",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M18.435,9.003c0.229,0.012,1.288,0.024,1.52,0.039l-1.793-6.162H18.13\nc0.308-0.134,0.52-0.396,0.52-0.702V1.713c0-0.44-0.437-0.798-0.975-0.798H2.249c-0.538,0-0.974,0.357-0.974,0.798v0.465\nc0,0.306,0.211,0.567,0.519,0.702H1.762L0,9.161c0.01-0.002,1.06-0.036,1.487-0.085v8.569H0.738v1.396h18.416v-1.396h-0.718\nL18.435,9.003L18.435,9.003z M13.212,3.678l0.332,4.716c-0.84-0.024-1.631-0.04-2.383-0.05L11.06,3.678\nc0-0.306,0.212-0.568,0.52-0.702h1.112C13.001,3.11,13.212,3.373,13.212,3.678z M9.149,3.678l-0.1,4.654\nC8.183,8.335,7.391,8.347,6.667,8.365l0.33-4.687c0-0.306,0.212-0.568,0.52-0.702h1.114C8.938,3.11,9.149,3.373,9.149,3.678z\nM2.979,3.678c0-0.305,0.212-0.568,0.52-0.702h1.113C4.919,3.11,5.131,3.373,5.131,3.678L4.593,8.439\nc-1.009,0.049-1.807,0.109-2.41,0.164L2.979,3.678z M11.404,14.002H3.121v-3.84h8.283V14.002z M16.72,16.783h-3.217v-6.621h3.217\nV16.783z M15.619,8.466l-0.54-4.788c0-0.306,0.212-0.568,0.519-0.702h1.114c0.306,0.134,0.518,0.397,0.518,0.702l0.793,4.901\nC17.188,8.535,16.387,8.498,15.619,8.466z"
    })
  }));
});
const Swimming = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-swimming",
    enableBackground: "new 0 0 511.851 511.851",
    height: "512",
    viewBox: "0 0 511.851 511.851",
    width: "512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "m178.75 362.707c6.449 4.42 8.622 5.909 15.818 5.909 7.195 0 9.367-1.489 15.816-5.909 8.782-6.019 22.054-15.116 45.534-15.116 23.481 0 36.752 9.096 45.535 15.116 6.449 4.42 8.622 5.909 15.818 5.909 7.197 0 9.37-1.489 15.819-5.91 6.579-4.509 15.678-10.745 29.701-13.59l-41.219-76.174 34.492-94.305 87.426-75.017c11.853-10.171 13.217-28.025 3.046-39.878-10.172-11.853-28.025-13.217-39.878-3.046l-93.032 79.828c-3.675 3.154-6.48 7.2-8.143 11.748l-42.212 115.408-.214.635-151.67 82.3c6.112-1.819 13.293-3.024 21.829-3.024 23.48 0 36.752 9.097 45.534 15.116z"
      }), /* @__PURE__ */ jsx$3("ellipse", {
        cx: "404.755",
        cy: "262.623",
        rx: "56.875",
        ry: "56.875",
        transform: "matrix(.994 -.112 .112 .994 -26.803 46.856)"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m35.244 393.057c8.03 5.504 18.025 12.354 36.619 12.354 18.595 0 28.589-6.85 36.619-12.354 7.069-4.845 12.652-8.671 24.734-8.671 12.081 0 17.664 3.826 24.732 8.671 8.031 5.504 18.025 12.354 36.62 12.354 18.594 0 28.588-6.85 36.618-12.354 7.068-4.845 12.651-8.671 24.732-8.671s17.664 3.827 24.733 8.671c8.03 5.504 18.025 12.354 36.619 12.354 18.595 0 28.59-6.85 36.62-12.354 7.069-4.845 12.652-8.671 24.734-8.671 12.083 0 17.666 3.827 24.736 8.672 8.031 5.504 18.026 12.353 36.622 12.353s28.591-6.85 36.621-12.353c7.069-4.845 12.653-8.672 24.736-8.672 5.806 0 10.513-4.707 10.513-10.513s-4.707-10.513-10.513-10.513c-18.596 0-28.591 6.85-36.622 12.353-7.069 4.845-12.653 8.672-24.735 8.672-12.083 0-17.666-3.827-24.736-8.672-8.031-5.504-18.026-12.353-36.622-12.353-18.595 0-28.59 6.85-36.62 12.353-7.069 4.845-12.652 8.672-24.734 8.672-12.081 0-17.664-3.827-24.733-8.671-8.03-5.504-18.025-12.354-36.619-12.354s-28.589 6.85-36.619 12.354c-7.068 4.845-12.651 8.671-24.731 8.671-12.081 0-17.664-3.827-24.733-8.671-8.03-5.504-18.024-12.354-36.619-12.354s-28.59 6.85-36.62 12.354c-7.069 4.845-12.652 8.671-24.733 8.671s-17.664-3.826-24.731-8.671c-8.03-5.504-18.025-12.354-36.619-12.354-5.806 0-10.513 4.707-10.513 10.513s4.707 10.513 10.513 10.513c12.081-.001 17.663 3.826 24.731 8.671z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m353.89 445.62c-8.03 5.504-18.025 12.354-36.62 12.354s-28.589-6.85-36.619-12.354c-7.069-4.845-12.652-8.671-24.733-8.671s-17.664 3.826-24.732 8.671c-8.03 5.504-18.024 12.354-36.618 12.354-18.595 0-28.589-6.85-36.62-12.354-7.068-4.845-12.651-8.671-24.732-8.671s-17.665 3.827-24.734 8.671c-8.03 5.504-18.025 12.354-36.619 12.354-33.929 0-35.702-21.025-61.35-21.025-5.806 0-10.513-4.707-10.513-10.513s4.707-10.513 10.513-10.513c33.929 0 35.702 21.025 61.35 21.025 25.098 0 27.837-21.025 61.353-21.025 18.595 0 28.589 6.85 36.619 12.354 7.069 4.845 12.652 8.671 24.733 8.671 12.08 0 17.663-3.826 24.731-8.671 8.03-5.504 18.024-12.354 36.619-12.354s28.589 6.85 36.619 12.354c7.069 4.845 12.652 8.671 24.733 8.671 12.082 0 17.665-3.827 24.734-8.672 8.03-5.504 18.025-12.353 36.62-12.353 18.596 0 28.591 6.85 36.622 12.353 7.069 4.845 12.653 8.672 24.736 8.672 12.082 0 17.666-3.827 24.735-8.672 8.031-5.504 18.026-12.353 36.622-12.353 5.806 0 10.513 4.707 10.513 10.513s-4.707 10.513-10.513 10.513c-12.083 0-17.666 3.827-24.736 8.672-8.031 5.504-18.026 12.353-36.621 12.353-18.596 0-28.591-6.85-36.622-12.353-7.069-4.845-12.653-8.672-24.736-8.672-12.081 0-17.665 3.827-24.734 8.671z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "m403.359 445.621c8.031 5.504 18.026 12.353 36.622 12.353s28.591-6.85 36.621-12.353c7.069-4.845 12.653-8.672 24.736-8.672 5.806 0 10.513-4.707 10.513-10.513s-4.707-10.513-10.513-10.513c-18.596 0-28.591 6.85-36.622 12.353-7.069 4.845-12.653 8.672-24.735 8.672-12.083 0-17.666-3.827-24.736-8.672-8.031-5.504-18.026-12.353-36.622-12.353-18.595 0-28.59 6.85-36.62 12.353-7.069 4.845-12.652 8.672-24.734 8.672-12.081 0-17.664-3.827-24.733-8.671-8.03-5.504-18.025-12.354-36.619-12.354s-28.589 6.85-36.619 12.354c-7.068 4.845-12.651 8.671-24.731 8.671-12.081 0-17.664-3.827-24.733-8.671-8.03-5.504-18.024-12.354-36.619-12.354-33.931 0-35.704 21.025-61.353 21.025-12.081 0-17.664-3.826-24.731-8.671-8.03-5.504-18.025-12.354-36.619-12.354-5.805.001-10.512 4.707-10.512 10.513s4.707 10.513 10.513 10.513c25.097 0 27.836 21.025 61.35 21.025 18.595 0 28.589-6.85 36.619-12.354 7.069-4.845 12.652-8.671 24.734-8.671 12.081 0 17.664 3.826 24.732 8.671 8.031 5.504 18.025 12.354 36.62 12.354 18.594 0 28.588-6.85 36.618-12.354 7.068-4.845 12.651-8.671 24.732-8.671s17.664 3.827 24.733 8.671c8.03 5.504 18.025 12.354 36.619 12.354 18.595 0 28.59-6.85 36.62-12.354 7.069-4.845 12.652-8.671 24.734-8.671 12.083 0 17.666 3.827 24.735 8.672z"
      })]
    })
  }));
});
const Target$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-target",
    viewBox: "0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "m492 195.998h-60.921c-9.968-109.28-101.784-195.998-215.079-195.998-119.377 0-216 96.605-216 215.998 0 57.695 22.468 111.937 63.265 152.734 9.18 9.18 19.046 17.422 29.473 24.699l-50.149 88.724c-5.435 9.615-2.046 21.817 7.57 27.252 9.667 5.465 21.847 1.994 27.252-7.57l50.12-88.672c27.46 12.335 57.464 18.832 88.469 18.832s61.009-6.498 88.469-18.832l50.12 88.672c5.411 9.574 17.594 13.028 27.252 7.57 9.616-5.435 13.005-17.637 7.57-27.252l-50.149-88.724c10.427-7.277 20.293-15.519 29.473-24.699 36.045-36.045 57.77-82.589 62.344-132.734h60.921c11.046 0 20-8.954 20-20s-8.954-20-20-20zm-276-40c-33.084 0-60 26.916-60 59.999s26.916 59.999 60 59.999c26.073 0 48.303-16.722 56.56-40h39.386c-9.26 44.478-48.76 77.999-95.946 77.999-54.038 0-98-43.962-98-97.999s43.962-97.999 98-97.999c47.185 0 86.686 33.521 95.946 77.999h-39.386c-8.257-23.276-30.487-39.998-56.56-39.998zm20 60c0 11.028-8.972 20-20 20s-20-8.972-20-20 8.972-20 20-20 20 8.971 20 20zm-20-137.999c-76.093 0-138 61.906-138 137.999s61.907 137.998 138 137.998c69.301 0 126.827-51.35 136.546-117.999h38.311c-9.962 87.663-84.573 155.999-174.857 155.999-97.047 0-176-78.952-176-175.998s78.953-175.998 176-175.998c90.284 0 164.895 68.336 174.857 155.998h-38.311c-9.719-66.648-67.245-117.999-136.546-117.999z"
    })
  }));
});
const TrashCan = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2(__spreadProps2(__spreadValues2({
    id: "applab-icon-basic-trash-can",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    viewBox: "0 0 24 24"
  }), props), {
    children: /* @__PURE__ */ jsx$3("path", {
      d: "M3 6v18h18v-18h-18zm5 14c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4-18v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712z"
    })
  }));
});
const UmbrellaCheck = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-umbrella-check",
    viewBox: "0 -15 449.26509 449",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m447.679688 261.132812c-28.777344-12.726562-56.113282-28.488281-81.535157-47.027343-25.425781 18.539062-52.761719 34.300781-81.539062 47.027343-.96875.4375-1.589844 1.40625-1.582031 2.472657v46.246093c0 22.746094 8.054687 42.855469 23.984374 60.015626v-.328126c0-3.3125 2.683594-6 6-6 3.3125 0 6 2.6875 6 6v5.449219c0 1.691407-.714843 3.300781-1.964843 4.433594 2.234375 1.890625 4.578125 3.738281 7.027343 5.542969 12.40625 9.015625 26.074219 16.152344 40.5625 21.1875 14.984376-5.015625 29.167969-12.164063 42.109376-21.230469 2.785156-1.976563 5.429687-4.003906 7.9375-6.085937-.90625-1.074219-1.402344-2.4375-1.402344-3.847657v-5.449219c.007812-3.195312 2.519531-5.828124 5.710937-5.980468 3.195313-.15625 5.949219 2.21875 6.261719 5.402344 15.953125-16.964844 24.015625-36.765626 24.015625-59.109376v-46.246093c.003906-1.066407-.617187-2.035157-1.585937-2.472657zm-110.960938 113.855469c0 3.316407-2.6875 6-6 6s-6-2.683593-6-6v-5.449219c0-3.3125 2.6875-6 6-6s6 2.6875 6 6zm17.710938 0c0 3.316407-2.683594 6-6 6-3.3125 0-6-2.683593-6-6v-5.449219c0-3.3125 2.6875-6 6-6 3.316406 0 6 2.6875 6 6zm-.175782-43.46875-20.179687-20.179687c-2.3125-2.347656-2.296875-6.121094.035156-8.449219 2.328125-2.332031 6.101563-2.34375 8.449219-.035156l15.9375 15.9375 31.234375-31.234375c2.355469-2.285156 6.109375-2.261719 8.429687.058594 2.320313 2.320312 2.34375 6.078124.054688 8.429687l-35.472656 35.472656c-2.34375 2.339844-6.140626 2.339844-8.484376 0zm17.890625 43.46875c0 3.316407-2.6875 6-6 6-3.316406 0-6-2.683593-6-6v-5.449219c0-3.3125 2.683594-6 6-6 3.3125 0 6 2.6875 6 6zm17.710938 0c0 3.316407-2.6875 6-6 6s-6-2.683593-6-6v-5.449219c0-3.3125 2.6875-6 6-6s6 2.6875 6 6zm17.710937 0c0 3.316407-2.6875 6-6 6s-6-2.683593-6-6v-5.449219c0-3.3125 2.6875-6 6-6s6 2.6875 6 6zm0 0"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m292.632812 197.90625c-.167968-10.871094 4.074219-21.34375 11.765626-29.027344 7.6875-7.683594 18.164062-11.921875 29.035156-11.746094h.199218c10.746094-.027343 21.070313 4.179688 28.738282 11.707032 5.90625 6.355468 10.664062 20.851562 12 25.917968.773437 2.910157 3.585937 4.800782 6.574218 4.414063 2.984376-.386719 5.222657-2.929687 5.226563-5.941406v-.246094c-.066406-106.527344-86.4375-192.847656-192.960937-192.851563h-.367188c-106.578125.070313-192.9140625 86.523438-192.84375 193.101563.00390625 3.011719 2.242188 5.550781 5.230469 5.9375s5.796875-1.503906 6.570312-4.414063c1.328125-5.050781 6.054688-19.472656 11.960938-25.875 7.84375-7.574218 18.332031-11.792968 29.234375-11.753906 10.75-.027344 21.074218 4.179688 28.746094 11.710938 7.539062 7.796875 11.769531 18.214844 11.800781 29.0625 0 3.3125 2.683593 6 6 6 3.3125 0 6-2.6875 6-6-.167969-10.90625 4.105469-21.40625 11.835937-29.097656 7.734375-7.6875 18.257813-11.902344 29.164063-11.675782 10.746093-.027344 21.074219 4.179688 28.742187 11.710938 7.539063 7.800781 11.769532 18.214844 11.800782 29.0625v167.851562c-.113282 22.394532-18.296876 40.488282-40.691407 40.488282-22.390625 0-40.578125-18.09375-40.6875-40.488282 0-3.3125-2.6875-6-6-6s-6 2.6875-6 6c.125 29.011719 23.679688 52.460938 52.6875 52.460938 29.011719 0 52.5625-23.449219 52.691407-52.460938v-167.855468c-.167969-10.867188 4.078124-21.339844 11.765624-29.023438 7.691407-7.683594 18.164063-11.921875 29.03125-11.746094h.203126c10.746093-.027344 21.078124 4.179688 28.746093 11.710938 7.542969 7.800781 11.769531 18.214844 11.800781 29.066406 0 3.3125 2.683594 6 6 6 3.3125 0 6-2.6875 6-6zm0 0"
    })]
  }));
});
const Upload$1 = memo((props) => {
  return /* @__PURE__ */ jsx$3("svg", __spreadProps2(__spreadValues2({
    version: "1.1",
    id: "Capa_1",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 488.4 488.4",
    enableBackground: "new 0 0 488.4 488.4",
    xmlSpace: "preserve",
    children: /* @__PURE__ */ jsxs$2("g", {
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "M483.6,295.2l-69.5-107.4c-5.4-8.3-14.5-13.3-24.4-13.3H359c-4.5,0-7.2,5-4.7,8.7l75,116c1,1.5-0.1,3.5-1.9,3.5h-32.9 h-26.8H342c-3.1,0-5.5,2.5-5.7,5.5c-2.9,48.4-43,86.8-92.2,86.8s-89.3-38.4-92.2-86.8c-0.2-3.1-2.6-5.5-5.7-5.5h-25.7h-23H60.9 c-1.8,0-2.8-2-1.9-3.5l75-116c2.4-3.8-0.3-8.7-4.7-8.7H98.6c-9.9,0-19,5-24.4,13.3L4.8,295.2C1.7,300,0,305.7,0,311.5v149.6 c0,14.6,11.9,26.5,26.5,26.5h217.7h217.7c14.6,0,26.5-11.9,26.5-26.5V311.5C488.4,305.7,486.8,300.1,483.6,295.2z"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M252.2,4.7c-4.1-5.2-12-5.2-16.1,0l-65.9,83.8c-5.3,6.7-0.5,16.6,8,16.6h26v158.3c0,22.1,17.9,40,40,40l0,0 c22.1,0,40-17.9,40-40V105h26c8.5,0,13.3-9.9,8-16.6L252.2,4.7z"
      })]
    })
  }));
});
const WaterSpigot = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-water-spigot",
    viewBox: "0 0 512 512",
    enableBackground: "new 0 0 512 512",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "m212 30v-30h-90v30h-90v30h270v-30z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m482 322v-35c0-74.439-60.561-135-135-135h-105v-32h30v-30h-210v30h30v32h-92v140h93.517c19.555 19.145 45.963 30 73.483 30 27.519 0 53.927-10.855 73.482-30h76.518c8.271 0 15 6.729 15 15v15h-30v30h210v-30z"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "m407 352.002-48.022 64.022c-7.836 10.448-11.978 22.889-11.978 35.976 0 33.084 26.916 60 60 60s60-26.916 60-60c0-13.088-4.142-25.528-11.979-35.976z"
    })]
  }));
});
const WeatherStorm = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-weather-storm",
    viewBox: "0 0 509.86719 509",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M 381.933594 275.546875 L 296.601562 403.546875 L 339.265625 403.546875 L 317.933594 510.214844 L 403.265625 382.214844 L 360.601562 382.214844 Z M 381.933594 275.546875 "
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M 168.601562 275.546875 L 83.265625 403.546875 L 125.933594 403.546875 L 104.601562 510.214844 L 189.933594 382.214844 L 147.265625 382.214844 Z M 168.601562 275.546875 "
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M 467.265625 179.546875 C 467.265625 175.28125 467.265625 171.015625 467.265625 168.882812 C 467.265625 121.949219 428.867188 83.546875 381.933594 83.546875 C 373.398438 83.546875 362.734375 85.679688 354.199219 87.816406 C 332.867188 19.546875 260.332031 -14.585938 192.066406 6.746094 C 138.734375 23.816406 104.601562 70.746094 104.601562 126.214844 C 44.867188 126.214844 0.0664062 173.148438 0.0664062 232.882812 C 0.0664062 290.480469 42.734375 337.414062 100.332031 339.546875 L 189.933594 211.546875 L 177.132812 339.546875 L 313.667969 339.546875 L 403.265625 211.546875 L 390.464844 339.546875 L 424.601562 339.546875 C 471.53125 339.546875 509.933594 301.148438 509.933594 254.214844 C 509.933594 224.347656 492.867188 194.480469 467.265625 179.546875 Z M 232.601562 318.214844 L 253.933594 232.882812 L 211.265625 232.882812 L 296.601562 126.214844 L 275.265625 211.546875 L 317.933594 211.546875 Z M 232.601562 318.214844 "
    })]
  }));
});
const WineGlasses = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-wine-glasses",
    viewBox: "0 0 511.999 511.999",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M282.368,68.639L96.896,18.943c-8.48-2.304-17.28,2.752-19.584,11.328l-41.408,154.56 c-7.744,28.896-3.776,59.072,11.2,84.992c12.224,21.216,30.848,37.088,52.96,46.528l-33.568,125.12l-46.368-12.416 c-8.512-2.016-17.312,2.816-19.584,11.328c-2.272,8.512,2.784,17.28,11.328,19.584l61.792,16.544l61.824,16.576 c1.408,0.352,2.784,0.544,4.16,0.544c7.072,0,13.536-4.704,15.424-11.872c2.272-8.544-2.784-17.28-11.328-19.584l-46.368-12.416 l33.44-124.8c4.48,0.544,8.96,0.896,13.408,0.896c19.392,0,38.56-5.088,55.808-15.072c25.92-14.976,44.448-39.136,52.192-68 l41.408-154.56C295.968,79.679,290.912,70.911,282.368,68.639z M244.896,146.591c-20.256-14.24-51.072-24.256-89.888-9.6 c-37.888,14.208-60.64-3.968-69.536-13.632l18.592-69.376l154.56,41.408L244.896,146.591z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M511.456,440.383c-2.272-8.544-11.072-13.376-19.584-11.328l-46.368,12.416l-33.536-125.152 c22.112-9.44,40.736-25.312,52.96-46.528c14.944-25.92,18.944-56.064,11.2-84.992L434.72,30.239 c-2.304-8.544-11.104-13.6-19.584-11.328l-106.4,28.544c4.288,3.584,8.192,7.68,11.04,12.64c2.912,5.024,4.704,10.464,5.664,16 l82.496-22.112l18.592,69.376c-8.864,9.664-31.648,27.84-69.504,13.632c-15.072-5.696-28.864-7.584-41.376-7.04l-32.48,121.088 c-2.176,8.192-5.312,15.936-8.8,23.456c9.504,14.688,21.984,27.296,37.568,36.288c17.248,9.984,36.384,15.072,55.808,15.072 c4.48,0,8.96-0.352,13.408-0.896l33.44,124.8l-46.368,12.416c-8.544,2.304-13.6,11.072-11.328,19.584 c1.92,7.168,8.384,11.872,15.456,11.872c1.376,0,2.752-0.192,4.16-0.544l61.824-16.576l61.792-16.544 C508.672,457.663,513.728,448.927,511.456,440.383z"
        })
      })
    })]
  }));
});
const WorldWideWeb = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    id: "applab-icon-basic-world-wide-web",
    viewBox: "0 0 490.667 490.667",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M256,44.075V128h66.923C307.307,82.645,283.2,50.773,256,44.075z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M167.744,128h66.923V44.075C207.467,50.773,183.36,82.645,167.744,128z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M396.075,110.208c-24.747-27.605-56.341-47.509-90.965-58.283c16.661,18.517,30.549,44.629,40.512,76.075h42.496 c4.203,0,8.021-2.475,9.749-6.315C399.595,117.845,398.891,113.344,396.075,110.208z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M94.592,110.208c-2.816,3.136-3.52,7.637-1.813,11.477c1.728,3.84,5.525,6.315,9.749,6.315h42.496 c9.963-31.445,23.851-57.557,40.512-76.075C150.933,62.699,119.317,82.603,94.592,110.208z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M167.744,362.667c15.616,45.355,39.723,77.227,66.923,83.925v-83.925H167.744z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M256,362.667v83.925c27.2-6.699,51.307-38.571,66.923-83.925H256z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M397.888,368.981c-1.728-3.84-5.547-6.315-9.749-6.315h-42.496c-9.963,31.445-23.851,57.557-40.512,76.075 c34.624-10.773,66.219-30.677,90.965-58.283C398.891,377.323,399.595,372.821,397.888,368.981z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M145.024,362.667h-42.496c-4.203,0-8.021,2.475-9.749,6.315c-1.707,3.84-1.003,8.341,1.813,11.477 c24.747,27.605,56.341,47.509,90.965,58.283C168.875,420.224,154.987,394.112,145.024,362.667z"
        })
      })
    }), /* @__PURE__ */ jsx$3("g", {
      children: /* @__PURE__ */ jsx$3("g", {
        children: /* @__PURE__ */ jsx$3("path", {
          d: "M437.333,149.333h-384C23.915,149.333,0,173.269,0,202.667V288c0,29.397,23.915,53.333,53.333,53.333h384 c29.419,0,53.333-23.936,53.333-53.333v-85.333C490.667,173.269,466.752,149.333,437.333,149.333z M170.347,205.248 l-21.333,85.333c-1.152,4.608-5.205,7.893-9.941,8.064c-0.149,0-0.299,0-0.427,0c-4.587,0-8.661-2.923-10.133-7.296 l-11.179-33.621l-11.2,33.643c-1.493,4.48-4.885,7.509-10.539,7.275c-4.736-0.171-8.789-3.477-9.941-8.064L64.32,205.248 c-1.429-5.696,2.027-11.499,7.765-12.928c5.632-1.451,11.499,2.027,12.928,7.765l12.437,49.792l9.749-29.248 c2.923-8.704,17.344-8.704,20.245,0l9.749,29.248l12.437-49.792c1.451-5.739,7.147-9.195,12.949-7.765 C168.32,193.749,171.776,199.552,170.347,205.248z M298.347,205.248l-21.333,85.333c-1.152,4.608-5.205,7.893-9.941,8.064 c-0.149,0-0.299,0-0.427,0c-4.587,0-8.661-2.923-10.133-7.296l-11.179-33.621l-11.2,33.643c-1.493,4.48-4.971,7.509-10.539,7.275 c-4.736-0.171-8.789-3.477-9.941-8.064l-21.333-85.333c-1.429-5.696,2.027-11.499,7.765-12.928 c5.632-1.451,11.52,2.027,12.928,7.765l12.437,49.792l9.749-29.248c2.923-8.704,17.344-8.704,20.245,0l9.749,29.248l12.437-49.792 c1.408-5.739,7.125-9.195,12.928-7.765C296.32,193.749,299.776,199.552,298.347,205.248z M426.347,205.248l-21.333,85.333 c-1.152,4.608-5.205,7.893-9.941,8.064c-0.149,0-0.299,0-0.427,0c-4.587,0-8.661-2.923-10.133-7.296l-11.179-33.621l-11.2,33.643 c-1.493,4.48-5.077,7.509-10.539,7.275c-4.736-0.171-8.789-3.477-9.941-8.064l-21.333-85.333 c-1.408-5.717,2.048-11.499,7.765-12.928c5.632-1.451,11.52,2.027,12.928,7.765l12.437,49.792l9.749-29.248 c2.923-8.704,17.344-8.704,20.245,0l9.749,29.248l12.437-49.792c1.408-5.739,7.104-9.195,12.928-7.765 C424.32,193.749,427.776,199.552,426.347,205.248z"
        })
      })
    })]
  }));
});
var BasicIcons = /* @__PURE__ */ ((BasicIcons2) => {
  BasicIcons2["Airplane"] = "basic/Airplane";
  BasicIcons2["Alert"] = "basic/Alert";
  BasicIcons2["AlertQuestion"] = "basic/AlertQuestion";
  BasicIcons2["AnimalFootprint"] = "basic/AnimalFootprint";
  BasicIcons2["AppStore"] = "basic/AppStore";
  BasicIcons2["AppSubscription"] = "basic/AppSubscription";
  BasicIcons2["Bill"] = "basic/Bill";
  BasicIcons2["BillEnvelope"] = "basic/BillEnvelope";
  BasicIcons2["Books"] = "basic/Books";
  BasicIcons2["Bowling"] = "basic/Bowling";
  BasicIcons2["Briefcase"] = "basic/Briefcase";
  BasicIcons2["Calendar"] = "basic/Calendar";
  BasicIcons2["Car"] = "basic/Car";
  BasicIcons2["CardsView"] = "basic/CardsView";
  BasicIcons2["CaretDownArrow"] = "basic/CaretDownArrow";
  BasicIcons2["Checkmark"] = "basic/Checkmark";
  BasicIcons2["Checkmark2"] = "basic/Checkmark2";
  BasicIcons2["ChevronRight"] = "basic/ChevronRight";
  BasicIcons2["ChevronRight2"] = "basic/ChevronRight2";
  BasicIcons2["CircusTent"] = "basic/CircusTent";
  BasicIcons2["Close"] = "basic/Close";
  BasicIcons2["CreditCard"] = "basic/CreditCard";
  BasicIcons2["CreditCardCheck"] = "basic/CreditCardCheck";
  BasicIcons2["CreditCards"] = "basic/CreditCards";
  BasicIcons2["CupOfTea"] = "basic/CupOfTea";
  BasicIcons2["Dashboard"] = "basic/Dashboard";
  BasicIcons2["DollarInHand"] = "basic/DollarInHand";
  BasicIcons2["DollarRecurring"] = "basic/DollarRecurring";
  BasicIcons2["DollarRecurring2"] = "basic/DollarRecurring2";
  BasicIcons2["DollarRecurring3"] = "basic/DollarRecurring3";
  BasicIcons2["DollarRecurring4"] = "basic/DollarRecurring4";
  BasicIcons2["DollarTransfer"] = "basic/DollarTransfer";
  BasicIcons2["DramaArts"] = "basic/DramaArts";
  BasicIcons2["EatingUtensils"] = "basic/EatingUtensils";
  BasicIcons2["EventTicket"] = "basic/EventTicket";
  BasicIcons2["Exit"] = "basic/Exit";
  BasicIcons2["FileUpload"] = "basic/FileUpload";
  BasicIcons2["Flame"] = "basic/Flame";
  BasicIcons2["FuelPump"] = "basic/FuelPump";
  BasicIcons2["GearCog"] = "basic/GearCog";
  BasicIcons2["Gift"] = "basic/Gift";
  BasicIcons2["Golf"] = "basic/Golf";
  BasicIcons2["GraduationCap"] = "basic/GraduationCap";
  BasicIcons2["HamburgerMenu"] = "basic/HamburgerMenu";
  BasicIcons2["HandHoldingHeart"] = "basic/HandHoldingHeart";
  BasicIcons2["HandHoldingHeart2"] = "basic/HandHoldingHeart2";
  BasicIcons2["HandshakeHeart"] = "basic/HandshakeHeart";
  BasicIcons2["HealthCross"] = "basic/HealthCross";
  BasicIcons2["HeartHealth"] = "basic/HeartHealth";
  BasicIcons2["HeartHealth2"] = "basic/HeartHealth2";
  BasicIcons2["HelpBubble"] = "basic/HelpBubble";
  BasicIcons2["Home"] = "basic/Home";
  BasicIcons2["Institution"] = "basic/Institution";
  BasicIcons2["Investment"] = "basic/Investment";
  BasicIcons2["Island"] = "basic/Island";
  BasicIcons2["LightbulbElectricity"] = "basic/LightbulbElectricity";
  BasicIcons2["MoneyBag"] = "basic/MoneyBag";
  BasicIcons2["MoneyBag2"] = "basic/MoneyBag2";
  BasicIcons2["MoneyBallAndChain"] = "basic/MoneyBallAndChain";
  BasicIcons2["MoreButton"] = "basic/MoreButton";
  BasicIcons2["New"] = "basic/New";
  BasicIcons2["OnlineShopping"] = "basic/OnlineShopping";
  BasicIcons2["PaidBill"] = "basic/PaidBill";
  BasicIcons2["PeopleLiftWorld"] = "basic/PeopleLiftWorld";
  BasicIcons2["PersonalCare"] = "basic/PersonalCare";
  BasicIcons2["PieChart"] = "basic/PieChart";
  BasicIcons2["PieChart2"] = "basic/PieChart2";
  BasicIcons2["PiggyBank"] = "basic/PiggyBank";
  BasicIcons2["Pizza"] = "basic/Pizza";
  BasicIcons2["PlayStore"] = "basic/PlayStore";
  BasicIcons2["RightArrow"] = "basic/RightArrow";
  BasicIcons2["Safe"] = "basic/Safe";
  BasicIcons2["Search"] = "basic/Search";
  BasicIcons2["SearchMagnifyingGlass"] = "basic/SearchMagnifyingGlass";
  BasicIcons2["ServiceVan"] = "basic/ServiceVan";
  BasicIcons2["Shirt"] = "basic/Shirt";
  BasicIcons2["ShoppingBags"] = "basic/ShoppingBags";
  BasicIcons2["ShoppingBasket"] = "basic/ShoppingBasket";
  BasicIcons2["SmartPhone"] = "basic/SmartPhone";
  BasicIcons2["SortNumberAsc"] = "basic/SortNumberAsc";
  BasicIcons2["SortNumberDesc"] = "basic/SortNumberDesc";
  BasicIcons2["SortStringAsc"] = "basic/SortStringAsc";
  BasicIcons2["SortStringDesc"] = "basic/SortStringDesc";
  BasicIcons2["SortUpDown"] = "basic/SortUpDown";
  BasicIcons2["SpaFacial"] = "basic/SpaFacial";
  BasicIcons2["SpaFingernailPolish"] = "basic/SpaFingernailPolish";
  BasicIcons2["StoreFront"] = "basic/StoreFront";
  BasicIcons2["Swimming"] = "basic/Swimming";
  BasicIcons2["Target"] = "basic/Target";
  BasicIcons2["TrashCan"] = "basic/TrashCan";
  BasicIcons2["UmbrellaCheck"] = "basic/UmbrellaCheck";
  BasicIcons2["Upload"] = "basic/Upload";
  BasicIcons2["WaterSpigot"] = "basic/WaterSpigot";
  BasicIcons2["WeatherStorm"] = "basic/WeatherStorm";
  BasicIcons2["WineGlasses"] = "basic/WineGlasses";
  BasicIcons2["WorldWideWeb"] = "basic/WorldWideWeb";
  return BasicIcons2;
})(BasicIcons || {});
var Basic = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BasicIcons,
  Airplane,
  Alert,
  AlertQuestion,
  AnimalFootprint,
  AppStore,
  AppSubscription,
  Bill,
  BillEnvelope,
  Books,
  Bowling,
  Briefcase: Briefcase$1,
  Calendar: Calendar$1,
  Car,
  CardsView,
  CaretDownArrow,
  Checkmark,
  Checkmark2,
  ChevronRight: ChevronRight$1,
  ChevronRight2,
  CircusTent,
  Close: Close$1$1,
  CreditCard,
  CreditCardCheck,
  CreditCards,
  CupOfTea,
  Dashboard: Dashboard$1,
  DollarInHand,
  DollarRecurring,
  DollarRecurring2,
  DollarRecurring3,
  DollarRecurring4,
  DollarTransfer,
  DramaArts,
  EatingUtensils,
  EventTicket,
  Exit,
  FileUpload,
  Flame,
  FuelPump,
  GearCog,
  Gift: Gift$1,
  Golf,
  GraduationCap,
  HamburgerMenu,
  HandHoldingHeart,
  HandHoldingHeart2,
  HandshakeHeart,
  HealthCross,
  HeartHealth,
  HeartHealth2,
  HelpBubble,
  Home: Home$1,
  Institution,
  Investment,
  Island,
  LightbulbElectricity,
  MoneyBag,
  MoneyBag2,
  MoneyBallAndChain,
  MoreButton,
  New: New$1,
  OnlineShopping,
  PaidBill,
  PeopleLiftWorld,
  PersonalCare,
  PieChart: PieChart$1,
  PieChart2,
  PiggyBank,
  Pizza,
  PlayStore,
  RightArrow,
  Safe,
  Search: Search$1,
  SearchMagnifyingGlass,
  ServiceVan,
  Shirt,
  ShoppingBags,
  ShoppingBasket,
  SmartPhone,
  SortNumberAsc,
  SortNumberDesc,
  SortStringAsc,
  SortStringDesc,
  SortUpDown,
  SpaFacial,
  SpaFingernailPolish,
  StoreFront,
  Swimming,
  Target: Target$1,
  TrashCan,
  UmbrellaCheck,
  Upload: Upload$1,
  WaterSpigot,
  WeatherStorm,
  WineGlasses,
  WorldWideWeb
}, Symbol.toStringTag, { value: "Module" }));
const Activity = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.489 5.054c-.113-.527-.865-.527-.978 0L7.317 10.63A3 3 0 014.383 13H3a1 1 0 110-2h1.383a1 1 0 00.978-.79l1.194-5.575C7.12 2 10.88 2 11.445 4.635l3.066 14.31c.113.528.865.528.978 0l1.194-5.574A3 3 0 0119.617 11H21a1 1 0 110 2h-1.383a1 1 0 00-.978.79l-1.194 5.575c-.565 2.635-4.325 2.635-4.89 0L9.49 5.055z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 2.659,
        x2: 12,
        y2: 21.341,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const AddCircle = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    height: "100%",
    width: "100%",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: 12,
      cy: 12,
      r: 10,
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13 8a1 1 0 10-2 0v3H8a1 1 0 100 2h3v3a1 1 0 102 0v-3h3a1 1 0 100-2h-3V8z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 2,
        x2: 12,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          className: "prefix__stopColor-1",
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          className: "prefix__stopColor-2",
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 12,
        y1: 7,
        x2: 12,
        y2: 17,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          className: "prefix__stopColor-3",
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          className: "prefix__stopColor-4",
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Add = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 4a1 1 0 011 1v14a1 1 0 11-2 0V5a1 1 0 011-1z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 12a1 1 0 011-1h14a1 1 0 110 2H5a1 1 0 01-1-1z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 13,
        y1: 12,
        x2: 11,
        y2: 12,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 12,
        y1: 11,
        x2: 12,
        y2: 13,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Alarm = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "13",
      r: "8",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M7.46603 4.08494C7.21611 3.59352 6.61217 3.39399 6.14542 3.68741C4.75273 4.56294 3.57391 5.73998 2.69627 7.13134C2.40214 7.59764 2.60076 8.20189 3.0918 8.45255C3.58284 8.70322 4.17964 8.50453 4.4831 8.04424C5.15697 7.02209 6.03245 6.14794 7.05561 5.47561C7.51636 5.17285 7.71596 4.57636 7.46603 4.08494Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16.5339 4.08494C16.7839 3.59352 17.3878 3.39399 17.8546 3.68741C19.2472 4.56294 20.4261 5.73998 21.3037 7.13134C21.5978 7.59764 21.3992 8.20189 20.9082 8.45255C20.4171 8.70322 19.8203 8.50453 19.5169 8.04424C18.843 7.02209 17.9675 6.14794 16.9444 5.47561C16.4836 5.17285 16.284 4.57636 16.5339 4.08494Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 8C12.5523 8 13 8.44772 13 9V12.5858L14.7071 14.2929C15.0976 14.6834 15.0976 15.3166 14.7071 15.7071C14.3166 16.0976 13.6834 16.0976 13.2929 15.7071L11.5858 14C11.2107 13.6249 11 13.1162 11 12.5858V9C11 8.44772 11.4477 8 12 8Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "3.55057",
        x2: "12",
        y2: "8.5619",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "3.55057",
        x2: "12",
        y2: "8.5619",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "13",
        y1: "8",
        x2: "13",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const AlertCircle = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 14C12.5523 14 13 13.5523 13 13V8.00001C13 7.44772 12.5523 7.00001 12 7.00001C11.4477 7.00001 11 7.44772 11 8.00001V13C11 13.5523 11.4477 14 12 14Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "17",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "7.00001",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "16",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Anchor = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "5",
      r: "2",
      stroke: "url(#paint0_linear)",
      "stroke-width": "2"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13 7.82928C12.6872 7.93984 12.3506 7.99999 12 7.99999C11.6494 7.99999 11.3128 7.93984 11 7.82928V19.9381C7.38128 19.4868 4.51314 16.6187 4.06189 13H6C6.55228 13 7 12.5523 7 12C7 11.4477 6.55228 11 6 11H3C2.44772 11 2 11.4477 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 11.4477 21.5523 11 21 11H18C17.4477 11 17 11.4477 17 12C17 12.5523 17.4477 13 18 13H19.9381C19.4869 16.6187 16.6187 19.4868 13 19.9381V7.82928Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7.82928",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Android = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.00391 5.63174C5.48343 5.35773 6.09428 5.52433 6.36829 6.00385L8.36829 9.50385C8.6423 9.98337 8.47571 10.5942 7.99619 10.8682C7.51667 11.1422 6.90582 10.9756 6.63181 10.4961L4.63181 6.99613C4.3578 6.51661 4.52439 5.90575 5.00391 5.63174Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.9961 5.63174C18.5166 5.35773 17.9057 5.52433 17.6317 6.00385L15.6317 9.50385C15.3577 9.98337 15.5243 10.5942 16.0038 10.8682C16.4833 11.1422 17.0942 10.9756 17.3682 10.4961L19.3682 6.99613C19.6422 6.51661 19.4756 5.90575 18.9961 5.63174Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M12 8C6.81417 8 2.55031 11.9474 2.04924 17.0014C1.99475 17.551 2.44772 18 3 18H21C21.5523 18 22.0053 17.551 21.9508 17.0014C21.4497 11.9474 17.1858 8 12 8Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M8 15C7.44772 15 7 14.5523 7 14C7 13.4477 7.44772 13 8 13C8.55228 13 9 13.4477 9 14C9 14.5523 8.55228 15 8 15V15Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16 15C15.4477 15 15 14.5523 15 14C15 13.4477 15.4477 13 16 13C16.5523 13 17 13.4477 17 14C17 14.5523 16.5523 15 16 15V15Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "6.50005",
        y1: "5.49982",
        x2: "6.50005",
        y2: "11.0002",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17.5",
        y1: "5.49982",
        x2: "17.5",
        y2: "11.0002",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "8",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "8",
        y1: "13",
        x2: "8",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "16",
        y1: "13",
        x2: "16",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Apple = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M17.6007 12.6254C17.6189 14.5792 18.72 15.6915 19.5062 16.238C19.9243 16.5286 20.1748 17.0414 19.98 17.5118C19.7585 18.0466 19.4081 18.7754 18.9009 19.5166C18.0673 20.735 17.2022 21.9489 15.8393 21.974C14.5001 21.9987 14.0695 21.1799 12.5385 21.1799C11.0079 21.1799 10.5294 21.9489 9.26177 21.9987C7.94625 22.0485 6.94445 20.6812 6.10397 19.4673C4.38647 16.9843 3.07394 12.4508 4.83633 9.39063C5.71185 7.87094 7.27647 6.90861 8.97472 6.88393C10.2665 6.85929 11.4858 7.75302 12.2755 7.75302C13.0648 7.75302 14.5465 6.67823 16.1042 6.83608C16.6396 6.85836 17.9693 7.02162 19.0786 8.03151C19.4999 8.41504 19.3498 9.06684 18.9435 9.46619C18.3256 10.0736 17.5872 11.1156 17.6007 12.6254Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M15.0839 5.1933C15.5962 4.57312 15.9857 3.77455 16.1062 2.93078C16.1805 2.4105 15.7098 2.01136 15.2105 2.1755C14.4517 2.42494 13.6902 2.91638 13.178 3.5158C12.6822 4.089 12.2336 4.92592 12.1196 5.80214C12.0587 6.27027 12.4602 6.65053 12.9217 6.55129C13.763 6.37039 14.5529 5.83644 15.0839 5.1933Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.1425",
        y1: "6.82025",
        x2: "12.1425",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "14.1185",
        y1: "2",
        x2: "14.1185",
        y2: "6.61718",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Archive = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M5.12132 2.87868C5.68393 2.31607 6.44699 2 7.24264 2H16.7574C17.553 2 18.3161 2.31607 18.8787 2.87868L21.2164 5.21639C21.7181 5.71813 22 6.39863 22 7.10819V7.10819C22 7.60072 21.6007 8 21.1082 8H2.89181C2.39928 8 2 7.60072 2 7.10819V7.10819C2 6.39863 2.28187 5.71813 2.78361 5.21639L5.12132 2.87868Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2 7C2 6.44772 2.44772 6 3 6H21C21.5523 6 22 6.44772 22 7V19C22 20.6569 20.6569 22 19 22H5C3.34315 22 2 20.6569 2 19V7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13.002 10.9996C13.002 10.4473 12.5542 9.99959 12.002 9.99959C11.4497 9.99959 11.002 10.4473 11.002 10.9996V15.0859L10.2071 14.291C9.81658 13.9005 9.18342 13.9005 8.79289 14.291C8.40237 14.6816 8.40237 15.3147 8.79289 15.7053L10.5877 17.5C11.3687 18.2811 12.635 18.2811 13.4161 17.5L15.2071 15.7091C15.5976 15.3185 15.5976 14.6854 15.2071 14.2948C14.8166 13.9043 14.1834 13.9043 13.7929 14.2948L13.002 15.0858V10.9996Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "9.99959",
        x2: "12",
        y2: "18.0858",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const ArrowLeft = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21 12C21 11.4477 20.5523 11 20 11L4.5 11C3.94772 11 3.5 11.4477 3.5 12C3.5 12.5523 3.94772 13 4.5 13L20 13C20.5523 13 21 12.5523 21 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10.7071 19.2071C11.0976 18.8166 11.0976 18.1834 10.7071 17.7929L4.91421 12L10.7071 6.20711C11.0976 5.81658 11.0976 5.18342 10.7071 4.79289C10.3166 4.40237 9.68342 4.40237 9.29289 4.79289L3.5 10.5858C2.71895 11.3668 2.71895 12.6332 3.5 13.4142L9.29289 19.2071C9.68342 19.5976 10.3166 19.5976 10.7071 19.2071Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "21",
        y1: "12",
        x2: "3.5",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11",
        y1: "12",
        x2: "2.91421",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ArrowDown = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 3C12.5523 3 13 3.44772 13 4V19.5C13 20.0523 12.5523 20.5 12 20.5C11.4477 20.5 11 20.0523 11 19.5V4C11 3.44772 11.4477 3 12 3Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.79289 13.2929C5.18342 12.9024 5.81658 12.9024 6.20711 13.2929L12 19.0858L17.7929 13.2929C18.1834 12.9024 18.8166 12.9024 19.2071 13.2929C19.5976 13.6834 19.5976 14.3166 19.2071 14.7071L13.4142 20.5C12.6332 21.281 11.3668 21.281 10.5858 20.5L4.79289 14.7071C4.40237 14.3166 4.40237 13.6834 4.79289 13.2929Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "20.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "21.0858",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ArrowRight = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 12C3 11.4477 3.44772 11 4 11L19.5 11C20.0523 11 20.5 11.4477 20.5 12C20.5 12.5523 20.0523 13 19.5 13L4 13C3.44772 13 3 12.5523 3 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13.2929 19.2071C12.9024 18.8166 12.9024 18.1834 13.2929 17.7929L19.0858 12L13.2929 6.20711C12.9024 5.81658 12.9024 5.18342 13.2929 4.79289C13.6834 4.40237 14.3166 4.40237 14.7071 4.79289L20.5 10.5858C21.281 11.3668 21.281 12.6332 20.5 13.4142L14.7071 19.2071C14.3166 19.5976 13.6834 19.5976 13.2929 19.2071Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "3",
        y1: "12",
        x2: "20.5",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13",
        y1: "12",
        x2: "21.0858",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ArrowUpDown = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3.70711 9.20708C3.31658 9.5976 2.68342 9.5976 2.29289 9.20708C1.90237 8.81655 1.90237 8.18339 2.29289 7.79286L5.58579 4.49997C6.36684 3.71892 7.63317 3.71892 8.41421 4.49997L11.7071 7.79286C12.0976 8.18339 12.0976 8.81655 11.7071 9.20708C11.3166 9.5976 10.6834 9.5976 10.2929 9.20708L8 6.91418V19C8 19.5523 7.55228 20 7 20C6.44772 20 6 19.5523 6 19V6.91418L3.70711 9.20708Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M18 5C18 4.44772 17.5523 4 17 4C16.4477 4 16 4.44772 16 5V17.0858L13.7071 14.7929C13.3166 14.4024 12.6834 14.4024 12.2929 14.7929C11.9024 15.1834 11.9024 15.8166 12.2929 16.2071L15.5858 19.5C16.3668 20.281 17.6332 20.281 18.4142 19.5L21.7071 16.2071C22.0976 15.8166 22.0976 15.1834 21.7071 14.7929C21.3166 14.4024 20.6834 14.4024 20.2929 14.7929L18 17.0858V5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "7",
        y1: "3.91418",
        x2: "7",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17",
        y1: "4",
        x2: "17",
        y2: "20.0858",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const ArrowUp = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 21C12.5523 21 13 20.5523 13 20V4.5C13 3.94772 12.5523 3.5 12 3.5C11.4477 3.5 11 3.94772 11 4.5V20C11 20.5523 11.4477 21 12 21Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.79289 10.7071C5.18342 11.0976 5.81658 11.0976 6.20711 10.7071L12 4.91421L17.7929 10.7071C18.1834 11.0976 18.8166 11.0976 19.2071 10.7071C19.5976 10.3166 19.5976 9.68342 19.2071 9.29289L13.4142 3.5C12.6332 2.71895 11.3668 2.71895 10.5858 3.5L4.79289 9.29289C4.40237 9.68342 4.40237 10.3166 4.79289 10.7071Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "21",
        x2: "12",
        y2: "3.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "2.91421",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const AtSign = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C13.279 20 14.4852 19.7006 15.555 19.169C16.0495 18.9232 16.6497 19.1249 16.8955 19.6194C17.1413 20.114 16.9396 20.7142 16.445 20.96C15.1049 21.626 13.5947 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13C22 14.409 21.6473 15.5353 20.987 16.3277C20.3167 17.132 19.4033 17.5 18.5 17.5C17.2731 17.5 16.0324 16.8089 15.4101 15.6567C14.5168 16.4901 13.318 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C13.1256 7 14.1643 7.37194 15 7.99963C15.0002 7.44752 15.4478 7 16 7C16.5523 7 17 7.44772 17 8V14C17 14.8839 17.7362 15.5 18.5 15.5C18.8467 15.5 19.1833 15.368 19.4505 15.0473C19.7277 14.7147 20 14.091 20 13V12C20 7.58172 16.4183 4 12 4ZM15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Attachment = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.6997 7.61397C17.5281 6.44239 15.6286 6.44239 14.4571 7.61397L8.80022 13.2708C8.40969 13.6613 8.40969 14.2945 8.80022 14.685C9.19074 15.0756 9.82391 15.0756 10.2144 14.685L15.8713 9.02818C16.2618 8.63765 16.895 8.63765 17.2855 9.02818C17.676 9.4187 17.676 10.0519 17.2855 10.4424L11.6286 16.0992C10.4571 17.2708 8.55758 17.2708 7.386 16.0992C6.21443 14.9277 6.21443 13.0282 7.386 11.8566L13.0429 6.19975C14.9955 4.24713 18.1613 4.24713 20.1139 6.19975C22.0665 8.15237 22.0665 11.3182 20.1139 13.2708L14.4571 18.9277C11.7234 21.6613 7.29125 21.6613 4.55758 18.9277C1.82391 16.194 1.82391 11.7618 4.55758 9.02818L10.2144 3.37132C10.605 2.9808 11.2381 2.9808 11.6286 3.37132C12.0192 3.76185 12.0192 4.39501 11.6286 4.78554L5.97179 10.4424C4.01917 12.395 4.01917 15.5608 5.97179 17.5135C7.92441 19.4661 11.0902 19.4661 13.0429 17.5135L18.6997 11.8566C19.8713 10.685 19.8713 8.78554 18.6997 7.61397Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.0429",
        y1: "3.07843",
        x2: "12.0429",
        y2: "20.9779",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Badge$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M7 13H17V21.156C17 21.8258 16.3543 22.3063 15.7127 22.1138L12 21L8.28735 22.1138C7.64574 22.3063 7 21.8258 7 21.156L7 13Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M10.0541 2.65824C11.1754 1.7027 12.8246 1.7027 13.9459 2.65824L14.0162 2.71817C14.4967 3.12764 15.0941 3.3751 15.7234 3.42532L15.8155 3.43267C17.284 3.54986 18.4501 4.71599 18.5673 6.18452L18.5747 6.27662C18.6249 6.90592 18.8724 7.50334 19.2818 7.98383L19.3418 8.05415C20.2973 9.17542 20.2973 10.8246 19.3418 11.9459L19.2818 12.0162C18.8724 12.4967 18.6249 13.0941 18.5747 13.7234L18.5673 13.8155C18.4501 15.284 17.284 16.4501 15.8155 16.5673L15.7234 16.5747C15.0941 16.6249 14.4967 16.8724 14.0162 17.2818L13.9459 17.3418C12.8246 18.2973 11.1754 18.2973 10.0541 17.3418L9.98383 17.2818C9.50334 16.8724 8.90592 16.6249 8.27662 16.5747L8.18452 16.5673C6.71599 16.4501 5.54986 15.284 5.43267 13.8155L5.42532 13.7234C5.3751 13.0941 5.12764 12.4967 4.71817 12.0162L4.65824 11.9459C3.7027 10.8246 3.7027 9.17542 4.65824 8.05415L4.71817 7.98383C5.12764 7.50334 5.3751 6.90592 5.42532 6.27662L5.43267 6.18452C5.54986 4.71599 6.71599 3.54986 8.18452 3.43267L8.27662 3.42532C8.90592 3.3751 9.50334 3.12764 9.98383 2.71817L10.0541 2.65824Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "10",
      r: "3",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "22.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "1",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Bank = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M10.2691 2.72161L3.02878 6.19695C1.11035 7.11779 1.76624 10 3.89424 10H20.1058C22.2338 10 22.8897 7.1178 20.9712 6.19695L13.7309 2.72161C12.6367 2.1964 11.3633 2.1964 10.2691 2.72161Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 11C12.5523 11 13 11.4477 13 12V18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18V12C11 11.4477 11.4477 11 12 11Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5 11C5.55228 11 6 11.4477 6 12V18C6 18.5523 5.55228 19 5 19C4.44772 19 4 18.5523 4 18V12C4 11.4477 4.44772 11 5 11Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19 11C19.5523 11 20 11.4477 20 12V18C20 18.5523 19.5523 19 19 19C18.4477 19 18 18.5523 18 18V12C18 11.4477 18.4477 11 19 11Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 21C2 20.4477 2.44772 20 3 20H21C21.5523 20 22 20.4477 22 21C22 21.5523 21.5523 22 21 22H3C2.44772 22 2 21.5523 2 21Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2.3277",
        x2: "12",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "5",
        y1: "11",
        x2: "5",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "19",
        y1: "11",
        x2: "19",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "12",
        y1: "20",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const BarChart = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 2C3.55228 2 4 2.44772 4 3V19C4 19.5523 4.44772 20 5 20H21C21.5523 20 22 20.4477 22 21C22 21.5523 21.5523 22 21 22H5C3.34315 22 2 20.6569 2 19V3C2 2.44772 2.44772 2 3 2Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 8C7.55228 8 8 8.44772 8 9V17C8 17.5523 7.55228 18 7 18C6.44772 18 6 17.5523 6 17V9C6 8.44772 6.44772 8 7 8Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11 14C11.5523 14 12 14.4477 12 15V17C12 17.5523 11.5523 18 11 18C10.4477 18 10 17.5523 10 17V15C10 14.4477 10.4477 14 11 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15 4C15.5523 4 16 4.44772 16 5V17C16 17.5523 15.5523 18 15 18C14.4477 18 14 17.5523 14 17V5C14 4.44772 14.4477 4 15 4Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19 10C19.5523 10 20 10.4477 20 11V17C20 17.5523 19.5523 18 19 18C18.4477 18 18 17.5523 18 17V11C18 10.4477 18.4477 10 19 10Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "7",
        y1: "8",
        x2: "7",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11",
        y1: "14",
        x2: "11",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "15",
        y1: "4",
        x2: "15",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "19",
        y1: "10",
        x2: "19",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Basket = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12.7071 4.12132C12.3166 3.7308 11.6834 3.7308 11.2929 4.12132L8.41424 7H15.5858L12.7071 4.12132ZM9.87871 2.70711C11.0503 1.53554 12.9498 1.53554 14.1213 2.70711L20.4142 9H3.58582L9.87871 2.70711Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2.16306 8.14142C2.077 7.53899 2.54446 7 3.15301 7H20.847C21.4555 7 21.923 7.53899 21.8369 8.14142L20.368 18.4243C20.1568 19.9022 18.8911 21 17.3981 21H6.60189C5.10894 21 3.84317 19.9022 3.63204 18.4243L2.16306 8.14142Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 11C8.55228 11 9 11.4477 9 12V16C9 16.5523 8.55228 17 8 17C7.44772 17 7 16.5523 7 16V12C7 11.4477 7.44772 11 8 11Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 11C12.5523 11 13 11.4477 13 12V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V12C11 11.4477 11.4477 11 12 11Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 11C16.5523 11 17 11.4477 17 12V16C17 16.5523 16.5523 17 16 17C15.4477 17 15 16.5523 15 16V12C15 11.4477 15.4477 11 16 11Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1.82843",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "8",
        y1: "11",
        x2: "8",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "16",
        y1: "11",
        x2: "16",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const BatteryCharging = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "5",
      width: "12",
      height: "17",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 3C10 2.44772 10.4477 2 11 2H13C13.5523 2 14 2.44772 14 3C14 3.55228 13.5523 4 13 4H11C10.4477 4 10 3.55228 10 3Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13.7071 9.79289C14.0977 10.1834 14.0977 10.8166 13.7071 11.2071L12.4142 12.5H14C14.4045 12.5 14.7691 12.7436 14.9239 13.1173C15.0787 13.491 14.9931 13.9211 14.7071 14.2071L11.7071 17.2071C11.3166 17.5976 10.6834 17.5976 10.2929 17.2071C9.9024 16.8166 9.9024 16.1834 10.2929 15.7929L11.5858 14.5H10C9.59557 14.5 9.23093 14.2564 9.07615 13.8827C8.92137 13.509 9.00692 13.0789 9.29292 12.7929L12.2929 9.79289C12.6834 9.40237 13.3166 9.40237 13.7071 9.79289Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "4",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "9.5",
        x2: "12",
        y2: "17.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const BatteryFull = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "5",
      width: "12",
      height: "17",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 3C10 2.44772 10.4477 2 11 2H13C13.5523 2 14 2.44772 14 3C14 3.55228 13.5523 4 13 4H11C10.4477 4 10 3.55228 10 3Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 18C9 17.4477 9.44772 17 10 17H14C14.5523 17 15 17.4477 15 18C15 18.5523 14.5523 19 14 19H10C9.44772 19 9 18.5523 9 18Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 15C9 14.4477 9.44772 14 10 14H14C14.5523 14 15 14.4477 15 15C15 15.5523 14.5523 16 14 16H10C9.44772 16 9 15.5523 9 15Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 12C9 11.4477 9.44772 11 10 11H14C14.5523 11 15 11.4477 15 12C15 12.5523 14.5523 13 14 13H10C9.44772 13 9 12.5523 9 12Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 9C9 8.44772 9.44772 8 10 8H14C14.5523 8 15 8.44772 15 9C15 9.55228 14.5523 10 14 10H10C9.44772 10 9 9.55228 9 9Z",
      fill: "url(#paint5_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "4",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "17",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint5_linear",
        x1: "12",
        y1: "8",
        x2: "12",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const BatteryHalf = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "5",
      width: "12",
      height: "17",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 3C10 2.44772 10.4477 2 11 2H13C13.5523 2 14 2.44772 14 3C14 3.55228 13.5523 4 13 4H11C10.4477 4 10 3.55228 10 3Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 18C9 17.4477 9.44772 17 10 17H14C14.5523 17 15 17.4477 15 18C15 18.5523 14.5523 19 14 19H10C9.44772 19 9 18.5523 9 18Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 15C9 14.4477 9.44772 14 10 14H14C14.5523 14 15 14.4477 15 15C15 15.5523 14.5523 16 14 16H10C9.44772 16 9 15.5523 9 15Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "4",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "17",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const BatteryLow = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "5",
      width: "12",
      height: "17",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 3C10 2.44772 10.4477 2 11 2H13C13.5523 2 14 2.44772 14 3C14 3.55228 13.5523 4 13 4H11C10.4477 4 10 3.55228 10 3Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 18C9 17.4477 9.44772 17 10 17H14C14.5523 17 15 17.4477 15 18C15 18.5523 14.5523 19 14 19H10C9.44772 19 9 18.5523 9 18Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "4",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "17",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Battery = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "5",
      width: "12",
      height: "17",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 3C10 2.44772 10.4477 2 11 2H13C13.5523 2 14 2.44772 14 3C14 3.55228 13.5523 4 13 4H11C10.4477 4 10 3.55228 10 3Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "4",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const BluetoothOff = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.99996 8.5841V9.60789L6.57798 7.18399C6.1273 6.86476 5.50316 6.97132 5.18393 7.42199C4.8647 7.87267 4.97126 8.49681 5.42194 8.81604L9.91697 12L5.42194 15.184C4.97126 15.5032 4.8647 16.1274 5.18393 16.578C5.50316 17.0287 6.1273 17.1353 6.57798 16.816L9.99996 14.3921V20.0842C9.99996 21.2709 11.3128 21.9877 12.3111 21.3459L17.2947 18.1422C17.8059 17.8136 18.1051 17.3079 18.1888 16.7729L13.5101 12.0943L13.3771 12L13.3998 11.9839L9.99996 8.5841ZM12 19.1683V13.4755L16.2132 16.4598L12 19.1683Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M15.0555 10.8112L17.3692 9.17223C18.5257 8.35307 18.4868 6.62419 17.2947 5.85783L12.3111 2.65408C11.3128 2.01233 9.99996 2.7291 9.99996 3.91584V5.75567L12 7.75567V4.83168L16.2132 7.54018L13.6208 9.37648L15.0555 10.8112Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.29289 2.29289C2.68342 1.90237 3.31658 1.90237 3.70711 2.29289L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L2.29289 3.70711C1.90237 3.31658 1.90237 2.68342 2.29289 2.29289Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.6065",
        y1: "2.41339",
        x2: "11.6065",
        y2: "21.5866",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.6065",
        y1: "2.41339",
        x2: "11.6065",
        y2: "21.5866",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Bluetooth = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 4.83168V10.5246L16.2132 7.54018L12 4.83168ZM9.99996 9.60789V3.91584C9.99996 2.7291 11.3128 2.01233 12.3111 2.65408L17.2947 5.85783C18.4868 6.62419 18.5257 8.35307 17.3692 9.17223L13.3771 12L17.3692 14.8278C18.5257 15.647 18.4868 17.3758 17.2947 18.1422L12.3111 21.3459C11.3128 21.9877 9.99996 21.2709 9.99996 20.0842V14.3921L6.57798 16.816C6.1273 17.1353 5.50316 17.0287 5.18393 16.578C4.8647 16.1274 4.97126 15.5032 5.42194 15.184L9.91697 12L5.42194 8.81604C4.97126 8.49681 4.8647 7.87267 5.18393 7.42199C5.50316 6.97132 6.1273 6.86476 6.57798 7.18399L9.99996 9.60789ZM12 13.4755V19.1683L16.2132 16.4598L12 13.4755Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.6065",
        y1: "2.41339",
        x2: "11.6065",
        y2: "21.5866",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Bold = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.27273 5H13C14.6569 5 16 6.34315 16 8C16 9.65685 14.6569 11 13 11H8V6.27273C8 5.56982 8.56982 5 9.27273 5ZM6 6.27273C6 4.46525 7.46525 3 9.27273 3H13C15.7614 3 18 5.23858 18 8C18 9.43071 17.3991 10.7211 16.4359 11.6325C17.9657 12.4875 19 14.123 19 16C19 18.7614 16.7614 21 14 21H9.25C7.45507 21 6 19.5449 6 17.75V6.27273ZM8 13V17.75C8 18.4404 8.55964 19 9.25 19H14C15.6569 19 17 17.6569 17 16C17 14.3431 15.6569 13 14 13H8Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.5",
        y1: "3",
        x2: "12.5",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Book = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5 4C3.34315 4 2 5.34315 2 7V17C2 18.6569 3.34315 20 5 20H8.02633C8.67123 20 9.3119 20.104 9.9237 20.3079L12 21L14.0763 20.3079C14.6881 20.104 15.3288 20 15.9737 20H19C20.6569 20 22 18.6569 22 17V7C22 5.34315 20.6569 4 19 4H15C13.8053 4 12.7329 4.52376 12 5.35418C11.2671 4.52376 10.1947 4 9 4H5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 7C2 5.34315 3.34315 4 5 4H9C10.1947 4 11.2671 4.52376 12 5.35418L12 21L9.9237 20.3079C9.3119 20.104 8.67123 20 8.02633 20H5C3.34315 20 2 18.6569 2 17V7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "7",
        y1: "4",
        x2: "7",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Bookmark = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M4 5C4 3.34315 5.34315 2 7 2H17C18.6569 2 20 3.34315 20 5V18C20 20.4721 17.1777 21.8833 15.2 20.4L12 18L8.8 20.4C6.82229 21.8833 4 20.4721 4 18V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 7C8 6.44772 8.44772 6 9 6H15C15.5523 6 16 6.44772 16 7C16 7.55228 15.5523 8 15 8H9C8.44772 8 8 7.55228 8 7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "24",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Box = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.3798 2C6.50403 2 5.67198 2.38269 5.10204 3.04763L2.72223 5.82406C2.25618 6.36779 2 7.06031 2 7.77644V8V9V19C2 20.6569 3.34315 22 5 22H19C20.6569 22 22 20.6569 22 19V9V8V7.77644C22 7.06031 21.7438 6.36779 21.2778 5.82406L18.898 3.04763C18.328 2.38269 17.496 2 16.6202 2H7.3798Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M21.8978 7H2.10221C2.03485 7.25141 2 7.51232 2 7.77644V9H22V7.77644C22 7.51232 21.9652 7.25141 21.8978 7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M10.3333 2H13.6667L15.8124 6.59793C15.936 6.86276 16 7.15145 16 7.4437V12C16 12.5523 15.5523 13 15 13H9C8.44772 13 8 12.5523 8 12V7.4437C8 7.15145 8.06405 6.86276 8.18763 6.59793L10.3333 2Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Briefcase = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "5",
      width: "20",
      height: "17",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "10",
      y: "12",
      width: "4",
      height: "2",
      rx: "1",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8.24567 3.88583L7.8 5H5C3.34315 5 2 6.34315 2 8V10C2 11.6569 3.34315 13 5 13H8C8 11.3431 9.34315 10 11 10H13C14.6569 10 16 11.3431 16 13H19C20.6569 13 22 11.6569 22 10V8C22 6.34315 20.6569 5 19 5H16.2L15.7543 3.88583C15.2987 2.74685 14.1956 2 12.9689 2H11.0311C9.80439 2 8.70126 2.74685 8.24567 3.88583ZM12.9689 4H11.0311C10.6222 4 10.2545 4.24895 10.1026 4.62861L9.95407 5H14.0459L13.8974 4.62861C13.7455 4.24895 13.3778 4 12.9689 4Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "12",
        x2: "12",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Brush = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M4 5C4 3.34315 5.34315 2 7 2H17C18.6569 2 20 3.34315 20 5V11H4V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.54383 15.3914C4.08033 15.1662 3 13.907 3 12.4262V12C3 11.4477 3.44772 11 4 11H20C20.5523 11 21 11.4477 21 12V12.4262C21 13.907 19.9197 15.1662 18.4562 15.3914L16.3439 15.7163C15.3055 15.8761 14.5677 16.8121 14.6549 17.8592L14.7509 19.0104C14.885 20.6197 13.6149 22 12 22V22C10.3851 22 9.11502 20.6197 9.24914 19.0104L9.34507 17.8592C9.43232 16.8121 8.69454 15.8761 7.65609 15.7163L5.54383 15.3914Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Building = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M14 8h3a3 3 0 013 3v11h-6V8z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M4 7.342a3 3 0 012.272-2.91l6-1.5A3 3 0 0116 5.842V22H4V7.342z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 17a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z",
      fill: "url(#prefix__paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 13a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z",
      fill: "url(#prefix__paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 9a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z",
      fill: "url(#prefix__paint4_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 21a1 1 0 011-1h18a1 1 0 110 2H3a1 1 0 01-1-1z",
      fill: "url(#prefix__paint5_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 17,
        y1: 8,
        x2: 17,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 10,
        y1: 2,
        x2: 10,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint2_linear",
        x1: 10,
        y1: 16,
        x2: 10,
        y2: 18,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint3_linear",
        x1: 10,
        y1: 12,
        x2: 10,
        y2: 14,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint4_linear",
        x1: 10,
        y1: 8,
        x2: 10,
        y2: 10,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint5_linear",
        x1: 12,
        y1: 20,
        x2: 12,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Bulb = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 14.7453C17.8135 13.4804 19 11.3787 19 9C19 5.13401 15.866 2 12 2C8.13401 2 5 5.13401 5 9C5 11.3787 6.18652 13.4804 8 14.7453V15.5C8 17.1569 9.34315 18.5 11 18.5H13C14.6569 18.5 16 17.1569 16 15.5V14.7453Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 21C9 20.4477 9.44772 20 10 20H14C14.5523 20 15 20.4477 15 21C15 21.5523 14.5523 22 14 22H10C9.44772 22 9 21.5523 9 21Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "18.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "20",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Calendar = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "4",
      width: "20",
      height: "18",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2 7C2 5.34315 3.34315 4 5 4H19C20.6569 4 22 5.34315 22 7V10H2V7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 2C7.55228 2 8 2.44772 8 3V5C8 5.55228 7.55228 6 7 6C6.44772 6 6 5.55228 6 5V3C6 2.44772 6.44772 2 7 2Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 2C17.5523 2 18 2.44772 18 3V5C18 5.55228 17.5523 6 17 6C16.4477 6 16 5.55228 16 5V3C16 2.44772 16.4477 2 17 2Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "7",
        y1: "2",
        x2: "7",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "17",
        y1: "2",
        x2: "17",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Camera = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2 7C2 5.34315 3.34315 4 5 4H7L7.17082 3.65836C7.679 2.64201 8.71779 2 9.8541 2H14.1459C15.2822 2 16.321 2.64201 16.8292 3.65836L17 4H19C20.6569 4 22 5.34315 22 7V17C22 18.6569 20.6569 20 19 20H5C3.34315 20 2 18.6569 2 17V7Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "18",
      cy: "8",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "8",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "18",
        y1: "7",
        x2: "18",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Cart = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 4C2 3.44772 2.44772 3 3 3H3.43845C4.81505 3 6.015 3.93689 6.34888 5.27239L6.53078 6H18.5068C20.426 6 21.8517 7.77725 21.4353 9.65079L20.3242 14.6508C20.0192 16.0234 18.8018 17 17.3957 17H9.56155C8.18495 17 6.985 16.0631 6.65112 14.7276L4.40859 5.75746C4.2973 5.3123 3.89731 5 3.43845 5H3C2.44772 5 2 4.55228 2 4Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.5 21C10.3284 21 11 20.3284 11 19.5C11 18.6716 10.3284 18 9.5 18C8.67157 18 8 18.6716 8 19.5C8 20.3284 8.67157 21 9.5 21Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17.5 21C18.3284 21 19 20.3284 19 19.5C19 18.6716 18.3284 18 17.5 18C16.6716 18 16 18.6716 16 19.5C16 20.3284 16.6716 21 17.5 21Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.754",
        y1: "3",
        x2: "11.754",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9.5",
        y1: "18",
        x2: "9.5",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17.5",
        y1: "18",
        x2: "17.5",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Cast = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "4",
      width: "20",
      height: "16",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 12C2 11.4477 2.44772 11 3 11C7.41828 11 11 14.5817 11 19C11 19.5523 10.5523 20 10 20C9.44772 20 9 19.5523 9 19C9 15.6863 6.31371 13 3 13C2.44772 13 2 12.5523 2 12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 15.5C2 14.9477 2.44772 14.5 3 14.5C5.48528 14.5 7.5 16.5147 7.5 19C7.5 19.5523 7.05228 20 6.5 20C5.94772 20 5.5 19.5523 5.5 19C5.5 17.6193 4.38071 16.5 3 16.5C2.44772 16.5 2 16.0523 2 15.5Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "3",
      cy: "19",
      r: "1",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "6.5",
        y1: "11",
        x2: "6.5",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "4.75",
        y1: "14.5",
        x2: "4.75",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "3",
        y1: "18",
        x2: "3",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Category = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "3",
      y: "3",
      width: "8",
      height: "8",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "3",
      y: "13",
      width: "8",
      height: "8",
      rx: "3",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "13",
      y: "3",
      width: "8",
      height: "8",
      rx: "3",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "13",
      y: "13",
      width: "8",
      height: "8",
      rx: "3",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "7",
        y1: "3",
        x2: "7",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "7",
        y1: "13",
        x2: "7",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17",
        y1: "3",
        x2: "17",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "17",
        y1: "13",
        x2: "17",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const CenterAlign = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 6C3 5.44772 3.44772 5 4 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55228 3 6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6 10C6 9.44772 6.44772 9 7 9H17C17.5523 9 18 9.44772 18 10C18 10.5523 17.5523 11 17 11H7C6.44772 11 6 10.5523 6 10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 14C3 13.4477 3.44772 13 4 13H20C20.5523 13 21 13.4477 21 14C21 14.5523 20.5523 15 20 15H4C3.44772 15 3 14.5523 3 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6 18C6 17.4477 6.44772 17 7 17H17C17.5523 17 18 17.4477 18 18C18 18.5523 17.5523 19 17 19H7C6.44772 19 6 18.5523 6 18Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "17",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const CheckAll = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.7071 7.29289C17.0976 7.68342 17.0976 8.31658 16.7071 8.70711L9.12132 16.2929C7.94975 17.4645 6.05025 17.4645 4.87868 16.2929L2.29289 13.7071C1.90237 13.3166 1.90237 12.6834 2.29289 12.2929C2.68342 11.9024 3.31658 11.9024 3.70711 12.2929L6.29289 14.8787C6.68342 15.2692 7.31658 15.2692 7.70711 14.8787L15.2929 7.29289C15.6834 6.90237 16.3166 6.90237 16.7071 7.29289Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21.707 7.24291C22.0976 7.63343 22.0976 8.26659 21.707 8.65712L14.0713 16.2929C12.8997 17.4645 11.0002 17.4645 9.82863 16.2929L7.24284 13.7071C6.85232 13.3166 6.85232 12.6834 7.24284 12.2929C7.63337 11.9024 8.26653 11.9024 8.65706 12.2929L11.2428 14.8787C11.6334 15.2692 12.2665 15.2692 12.6571 14.8787L20.2928 7.24291C20.6834 6.85238 21.3165 6.85238 21.707 7.24291Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "9.5",
        y1: "7",
        x2: "9.5",
        y2: "17.1716",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "14.4749",
        y1: "6.95001",
        x2: "14.4749",
        y2: "17.1716",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const CheckCircle = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M19.3608 5.23092C19.8156 5.72529 20.2213 6.26561 20.5701 6.84411L12.4142 15C11.6332 15.781 10.3668 15.781 9.58579 15L6.79289 12.2071C6.40237 11.8166 6.40237 11.1834 6.79289 10.7929C7.18342 10.4024 7.81658 10.4024 8.20711 10.7929L11 13.5858L19.2929 5.29289C19.3148 5.27101 19.3374 5.25035 19.3608 5.23092Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13.5351",
        y1: "5.23092",
        x2: "13.5351",
        y2: "15.5858",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Check = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.7071 6.29289C21.0976 6.68342 21.0976 7.31658 20.7071 7.70711L12.1213 16.2929C10.9497 17.4645 9.05026 17.4645 7.87868 16.2929L4.29289 12.7071C3.90237 12.3166 3.90237 11.6834 4.29289 11.2929C4.68342 10.9024 5.31658 10.9024 5.70711 11.2929L9.29289 14.8787C9.68342 15.2692 10.3166 15.2692 10.7071 14.8787L19.2929 6.29289C19.6834 5.90237 20.3166 5.90237 20.7071 6.29289Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.5",
        y1: "6",
        x2: "12.5",
        y2: "17.1716",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const ChevronLeft = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15.7071 19.2071C16.0976 18.8166 16.0976 18.1834 15.7071 17.7929L9.91421 12L15.7071 6.20711C16.0976 5.81658 16.0976 5.18342 15.7071 4.79289C15.3166 4.40237 14.6834 4.40237 14.2929 4.79289L8.5 10.5858C7.71895 11.3668 7.71895 12.6332 8.5 13.4142L14.2929 19.2071C14.6834 19.5976 15.3166 19.5976 15.7071 19.2071Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "16",
        y1: "12",
        x2: "7.91421",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const ChevronDoubleLeft = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12.2071 19.2071C12.5976 18.8166 12.5976 18.1834 12.2071 17.7929L6.41422 12L12.2071 6.20711C12.5976 5.81658 12.5976 5.18342 12.2071 4.79289C11.8166 4.40237 11.1834 4.40237 10.7929 4.79289L5 10.5858C4.21895 11.3668 4.21895 12.6332 5 13.4142L10.7929 19.2071C11.1834 19.5976 11.8166 19.5976 12.2071 19.2071Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.4571 19.2071C18.8476 18.8166 18.8476 18.1834 18.4571 17.7929L12.6642 12L18.4571 6.20711C18.8476 5.81658 18.8476 5.18342 18.4571 4.79289C18.0666 4.40237 17.4334 4.40237 17.0429 4.79289L11.25 10.5858C10.469 11.3668 10.469 12.6332 11.25 13.4142L17.0429 19.2071C17.4334 19.5976 18.0666 19.5976 18.4571 19.2071Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.5",
        y1: "12",
        x2: "4.41422",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18.75",
        y1: "12",
        x2: "10.6642",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ChevronDoubleRight = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11.543 19.207a1 1 0 010-1.414L17.336 12l-5.793-5.793a1 1 0 011.414-1.414l5.793 5.793a2 2 0 010 2.828l-5.793 5.793a1 1 0 01-1.414 0z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.293 19.207a1 1 0 010-1.414L11.086 12 5.293 6.207a1 1 0 011.414-1.414l5.793 5.793a2 2 0 010 2.828l-5.793 5.793a1 1 0 01-1.414 0z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 11.25,
        y1: 12,
        x2: 19.336,
        y2: 12,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 5,
        y1: 12,
        x2: 13.086,
        y2: 12,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ChevronDoubleDown = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.79289 11.7929C5.18342 11.4024 5.81658 11.4024 6.20711 11.7929L12 17.5858L17.7929 11.7929C18.1834 11.4024 18.8166 11.4024 19.2071 11.7929C19.5976 12.1834 19.5976 12.8166 19.2071 13.2071L13.4142 19C12.6332 19.781 11.3668 19.781 10.5858 19L4.79289 13.2071C4.40237 12.8166 4.40237 12.1834 4.79289 11.7929Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.79289 5.54289C5.18342 5.15237 5.81658 5.15237 6.20711 5.54289L12 11.3358L17.7929 5.54289C18.1834 5.15237 18.8166 5.15237 19.2071 5.54289C19.5976 5.93341 19.5976 6.56658 19.2071 6.9571L13.4142 12.75C12.6332 13.531 11.3668 13.531 10.5858 12.75L4.79289 6.95711C4.40237 6.56658 4.40237 5.93342 4.79289 5.54289Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "11.5",
        x2: "12",
        y2: "19.5858",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "5.25",
        x2: "12",
        y2: "13.3358",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ChevronDoubleUp = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.79289 12.4571C5.18342 12.8476 5.81658 12.8476 6.20711 12.4571L12 6.66422L17.7929 12.4571C18.1834 12.8476 18.8166 12.8476 19.2071 12.4571C19.5976 12.0666 19.5976 11.4334 19.2071 11.0429L13.4142 5.25C12.6332 4.46895 11.3668 4.46895 10.5858 5.25L4.79289 11.0429C4.40237 11.4334 4.40237 12.0666 4.79289 12.4571Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.79289 18.7071C5.18342 19.0976 5.81658 19.0976 6.20711 18.7071L12 12.9142L17.7929 18.7071C18.1834 19.0976 18.8166 19.0976 19.2071 18.7071C19.5976 18.3166 19.5976 17.6834 19.2071 17.2929L13.4142 11.5C12.6332 10.719 11.3668 10.719 10.5858 11.5L4.79289 17.2929C4.40237 17.6834 4.40237 18.3166 4.79289 18.7071Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "12.75",
        x2: "12",
        y2: "4.66422",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "19",
        x2: "12",
        y2: "10.9142",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ChevronDown = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.79289 8.54289C5.18342 8.15237 5.81658 8.15237 6.20711 8.54289L12 14.3358L17.7929 8.54289C18.1834 8.15237 18.8166 8.15237 19.2071 8.54289C19.5976 8.93341 19.5976 9.56658 19.2071 9.9571L13.4142 15.75C12.6332 16.531 11.3668 16.531 10.5858 15.75L4.79289 9.95711C4.40237 9.56658 4.40237 8.93342 4.79289 8.54289Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "8.25",
        x2: "12",
        y2: "16.3358",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const ChevronRight = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8.04289 19.2071C7.65237 18.8166 7.65237 18.1834 8.04289 17.7929L13.8358 12L8.04289 6.20711C7.65237 5.81658 7.65237 5.18342 8.04289 4.79289C8.43342 4.40237 9.06658 4.40237 9.45711 4.79289L15.25 10.5858C16.031 11.3668 16.031 12.6332 15.25 13.4142L9.45711 19.2071C9.06658 19.5976 8.43342 19.5976 8.04289 19.2071Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "7.75",
        y1: "12",
        x2: "15.8358",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const ChevronUp = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.79289 15.4571C5.18342 15.8476 5.81658 15.8476 6.20711 15.4571L12 9.66422L17.7929 15.4571C18.1834 15.8476 18.8166 15.8476 19.2071 15.4571C19.5976 15.0666 19.5976 14.4334 19.2071 14.0429L13.4142 8.25C12.6332 7.46895 11.3668 7.46895 10.5858 8.25L4.79289 14.0429C4.40237 14.4334 4.40237 15.0666 4.79289 15.4571Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "15.75",
        x2: "12",
        y2: "7.66422",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Chip = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "6",
      width: "12",
      height: "12",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 16C2 15.4477 2.44772 15 3 15H4C4.55228 15 5 15.4477 5 16C5 16.5523 4.55228 17 4 17H3C2.44772 17 2 16.5523 2 16Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19 16C19 15.4477 19.4477 15 20 15H21C21.5523 15 22 15.4477 22 16C22 16.5523 21.5523 17 21 17H20C19.4477 17 19 16.5523 19 16Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 12C2 11.4477 2.44772 11 3 11H4C4.55228 11 5 11.4477 5 12C5 12.5523 4.55228 13 4 13H3C2.44772 13 2 12.5523 2 12Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19 12C19 11.4477 19.4477 11 20 11H21C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13H20C19.4477 13 19 12.5523 19 12Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 8C2 7.44772 2.44772 7 3 7H4C4.55228 7 5 7.44772 5 8C5 8.55228 4.55228 9 4 9H3C2.44772 9 2 8.55228 2 8Z",
      fill: "url(#paint5_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19 8C19 7.44772 19.4477 7 20 7H21C21.5523 7 22 7.44772 22 8C22 8.55228 21.5523 9 21 9H20C19.4477 9 19 8.55228 19 8Z",
      fill: "url(#paint6_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 2C16.5523 2 17 2.44772 17 3V4C17 4.55228 16.5523 5 16 5C15.4477 5 15 4.55228 15 4V3C15 2.44772 15.4477 2 16 2Z",
      fill: "url(#paint7_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 19C16.5523 19 17 19.4477 17 20V21C17 21.5523 16.5523 22 16 22C15.4477 22 15 21.5523 15 21V20C15 19.4477 15.4477 19 16 19Z",
      fill: "url(#paint8_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 2C12.5523 2 13 2.44772 13 3V4C13 4.55228 12.5523 5 12 5C11.4477 5 11 4.55228 11 4V3C11 2.44772 11.4477 2 12 2Z",
      fill: "url(#paint9_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 19C12.5523 19 13 19.4477 13 20V21C13 21.5523 12.5523 22 12 22C11.4477 22 11 21.5523 11 21V20C11 19.4477 11.4477 19 12 19Z",
      fill: "url(#paint10_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 2C8.55228 2 9 2.44772 9 3V4C9 4.55228 8.55228 5 8 5C7.44772 5 7 4.55228 7 4V3C7 2.44772 7.44772 2 8 2Z",
      fill: "url(#paint11_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 19C8.55228 19 9 19.4477 9 20V21C9 21.5523 8.55228 22 8 22C7.44772 22 7 21.5523 7 21V20C7 19.4477 7.44772 19 8 19Z",
      fill: "url(#paint12_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "3.5",
        y1: "15",
        x2: "3.5",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "20.5",
        y1: "15",
        x2: "20.5",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "3.5",
        y1: "11",
        x2: "3.5",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "20.5",
        y1: "11",
        x2: "20.5",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint5_linear",
        x1: "3.5",
        y1: "7",
        x2: "3.5",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint6_linear",
        x1: "20.5",
        y1: "7",
        x2: "20.5",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint7_linear",
        x1: "16",
        y1: "2",
        x2: "16",
        y2: "5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint8_linear",
        x1: "16",
        y1: "19",
        x2: "16",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint9_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint10_linear",
        x1: "12",
        y1: "19",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint11_linear",
        x1: "8",
        y1: "2",
        x2: "8",
        y2: "5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint12_linear",
        x1: "8",
        y1: "19",
        x2: "8",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Chrome = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12.0828 7L20.6601 7C17.8986 2.21709 11.7828 0.578349 6.99984 3.33977C6.09465 3.86238 5.30208 4.50513 4.63064 5.23626L7.40155 10.0356C7.81141 9.07421 8.525 8.23274 9.49979 7.66994C10.3144 7.19965 11.2062 6.98461 12.0828 7Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M9.82816 21.7614C7.19018 21.1738 4.79742 19.5251 3.33958 17C1.48889 13.7945 1.61459 9.99029 3.3386 6.99839L7.66263 14.4878L7.66967 14.5001C8.70149 16.2872 10.67 17.1964 12.5971 16.9656L9.82816 21.7614Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M11.9988 22.0017C13.6987 22.0034 15.4218 21.5713 16.9998 20.6603C21.1366 18.2719 22.9213 13.3743 21.5415 8.99999L16.0004 9C16.1186 9.15808 16.2288 9.32486 16.3299 9.50007C17.2723 11.1324 17.1898 13.0752 16.2819 14.5833L11.9988 22.0017Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "3",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.9998",
        y1: "1.99835",
        x2: "11.9998",
        y2: "22.0017",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.9998",
        y1: "1.99835",
        x2: "11.9998",
        y2: "22.0017",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11.9998",
        y1: "1.99835",
        x2: "11.9998",
        y2: "22.0017",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Clipboard = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "3",
      y: "3",
      width: "18",
      height: "19",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M14 3C14 1.89543 13.1046 1 12 1C10.8954 1 10 1.89543 10 3H8V5C8 5.55228 8.44772 6 9 6H15C15.5523 6 16 5.55228 16 5V3H14Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 11C7 10.4477 7.44772 10 8 10L16 10C16.5523 10 17 10.4477 17 11C17 11.5523 16.5523 12 16 12L8 12C7.44772 12 7 11.5523 7 11Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 15C7 14.4477 7.44772 14 8 14L12 14C12.5523 14 13 14.4477 13 15C13 15.5523 12.5523 16 12 16L8 16C7.44772 16 7 15.5523 7 15Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "1",
        x2: "12",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "10",
        x2: "12",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "10",
        y1: "14",
        x2: "10",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Clock = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 6C12.5523 6 13 6.44772 13 7V11.5858L15.2071 13.7929C15.5976 14.1834 15.5976 14.8166 15.2071 15.2071C14.8166 15.5976 14.1834 15.5976 13.7929 15.2071L11.5858 13C11.2107 12.6249 11 12.1162 11 11.5858V7C11 6.44772 11.4477 6 12 6Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13.25",
        y1: "6",
        x2: "13.25",
        y2: "15.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const CloseCircle = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8.29292 14.2929C7.9024 14.6834 7.9024 15.3166 8.29292 15.7071C8.68345 16.0976 9.31661 16.0976 9.70714 15.7071L12 13.4142L14.2929 15.7071C14.6834 16.0977 15.3166 16.0977 15.7071 15.7071C16.0976 15.3166 16.0976 14.6835 15.7071 14.2929L13.4142 12L15.7071 9.70711C16.0977 9.31658 16.0977 8.68342 15.7071 8.29289C15.3166 7.90237 14.6834 7.90237 14.2929 8.29289L12 10.5858L9.70711 8.29292C9.31658 7.9024 8.68342 7.9024 8.29289 8.29292C7.90237 8.68345 7.90237 9.31661 8.29289 9.70714L10.5858 12L8.29292 14.2929Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "8",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Close$3 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.29292 18.7071C4.9024 18.3166 4.9024 17.6834 5.29292 17.2929L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289C19.0977 5.68342 19.0977 6.31658 18.7071 6.70711L6.70714 18.7071C6.31661 19.0976 5.68345 19.0976 5.29292 18.7071Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.2929",
        y1: "11.2929",
        x2: "12.7071",
        y2: "12.7071",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12.7071",
        y1: "11.2929",
        x2: "11.2929",
        y2: "12.7071",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const CloudDownload = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 9C22 12.866 18.866 16 15 16H7C4.23858 16 2 13.7614 2 11C2 8.23858 4.23858 6 7 6C7.54527 6 8.07015 6.08728 8.56143 6.24864C9.63037 3.75042 12.1108 2 15 2C18.866 2 22 5.13401 22 9Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M9.70711 17.2929C9.31658 16.9024 8.68342 16.9024 8.29289 17.2929C7.90237 17.6834 7.90237 18.3166 8.29289 18.7071L11.2929 21.7071C11.4874 21.9016 11.7421 21.9992 11.997 22L12 22L12.003 22C12.1375 21.9996 12.2657 21.9727 12.3828 21.9241C12.5007 21.8753 12.6112 21.803 12.7071 21.7071L15.7071 18.7071C16.0976 18.3166 16.0976 17.6834 15.7071 17.2929C15.3166 16.9024 14.6834 16.9024 14.2929 17.2929L13 18.5858V13C13 12.4477 12.5523 12 12 12C11.4477 12 11 12.4477 11 13V18.5858L9.70711 17.2929Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "22",
        x2: "12",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const CloudOff = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M9.3216 7.90574C9.02136 8.32142 8.76564 8.77138 8.56143 9.24864C8.07015 9.08728 7.54527 9 7 9C4.23858 9 2 11.2386 2 14C2 16.7614 4.23858 19 7 19H15C16.5287 19 17.943 18.51 19.0943 17.6784L9.3216 7.90574Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M20.5329 16.2886C21.4525 15.1039 22 13.6159 22 12C22 8.13401 18.866 5 15 5C13.3841 5 11.8961 5.54751 10.7114 6.46713L20.5329 16.2886Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.29289 2.29289C2.68342 1.90237 3.31658 1.90237 3.70711 2.29289L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L2.29289 3.70711C1.90237 3.31658 1.90237 2.68342 2.29289 2.29289Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const CloudUpload = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 10C22 13.866 18.866 17 15 17H7C4.23858 17 2 14.7614 2 12C2 9.23858 4.23858 7 7 7C7.54527 7 8.07015 7.08728 8.56143 7.24864C9.63037 4.75042 12.1108 3 15 3C18.866 3 22 6.13401 22 10Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M9.70711 15.7071C9.31658 16.0976 8.68342 16.0976 8.29289 15.7071C7.90237 15.3166 7.90237 14.6834 8.29289 14.2929L11.2929 11.2929C11.4874 11.0984 11.7421 11.0008 11.997 11L12 11L12.003 11C12.1375 11.0004 12.2657 11.0273 12.3828 11.0759C12.5007 11.1247 12.6112 11.197 12.7071 11.2929L15.7071 14.2929C16.0976 14.6834 16.0976 15.3166 15.7071 15.7071C15.3166 16.0976 14.6834 16.0976 14.2929 15.7071L13 14.4142V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V14.4142L9.70711 15.7071Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Cloud = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 12C22 15.866 18.866 19 15 19H7C4.23858 19 2 16.7614 2 14C2 11.2386 4.23858 9 7 9C7.54527 9 8.07015 9.08728 8.56143 9.24864C9.63037 6.75042 12.1108 5 15 5C18.866 5 22 8.13401 22 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Code = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.2929 16.7071C15.9024 16.3166 15.9024 15.6834 16.2929 15.2929L19.5858 12L16.2929 8.7071C15.9024 8.31657 15.9024 7.68341 16.2929 7.29289C16.6834 6.90236 17.3166 6.90236 17.7071 7.29289L21.7071 11.2929C22.0976 11.6834 22.0976 12.3166 21.7071 12.7071L17.7071 16.7071C17.3166 17.0976 16.6834 17.0976 16.2929 16.7071Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.70711 16.7071C8.09763 16.3166 8.09763 15.6834 7.70711 15.2929L4.41421 12L7.70711 8.7071C8.09763 8.31657 8.09763 7.68341 7.70711 7.29289C7.31658 6.90236 6.68342 6.90236 6.29289 7.29289L2.29289 11.2929C1.90237 11.6834 1.90237 12.3166 2.29289 12.7071L6.29289 16.7071C6.68342 17.0976 7.31658 17.0976 7.70711 16.7071Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14.2747 4.03849C13.7437 3.88677 13.1902 4.19426 13.0385 4.72529L9.03846 18.7253C8.88674 19.2563 9.19423 19.8098 9.72527 19.9615C10.2563 20.1133 10.8098 19.8058 10.9615 19.2747L14.9615 5.27473C15.1132 4.7437 14.8057 4.19021 14.2747 4.03849Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "16",
        y1: "12",
        x2: "22",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "8",
        y1: "12",
        x2: "2",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "3.99976",
        x2: "12",
        y2: "20.0003",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Coffee = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5 3C3.89543 3 3 3.89543 3 5V13C3 15.7614 5.23858 18 8 18H13C15.6482 18 17.8155 15.9413 17.9888 13.3371L19.9487 12.6838C21.1737 12.2754 22 11.129 22 9.83772V7C22 5.89543 21.1046 5 20 5H18C18 3.89543 17.1046 3 16 3H5ZM18 11.2251V7H20V9.83772C20 10.2682 19.7246 10.6503 19.3162 10.7864L18 11.2251Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 20C2 19.4477 2.44772 19 3 19H19C19.5523 19 20 19.4477 20 20C20 20.5523 19.5523 21 19 21H3C2.44772 21 2 20.5523 2 20Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.5",
        y1: "3",
        x2: "12.5",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11",
        y1: "19",
        x2: "11",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Collapse = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 19C16 17.3431 17.3431 16 19 16H21C21.5523 16 22 16.4477 22 17C22 17.5523 21.5523 18 21 18H19C18.4477 18 18 18.4477 18 19V21C18 21.5523 17.5523 22 17 22C16.4477 22 16 21.5523 16 21V19Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 5C16 6.65685 17.3431 8 19 8H21C21.5523 8 22 7.55228 22 7C22 6.44772 21.5523 6 21 6H19C18.4477 6 18 5.55228 18 5V3C18 2.44772 17.5523 2 17 2C16.4477 2 16 2.44772 16 3V5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 5C8 6.65685 6.65685 8 5 8H3C2.44772 8 2 7.55228 2 7C2 6.44772 2.44772 6 3 6H5C5.55228 6 6 5.55228 6 5V3C6 2.44772 6.44772 2 7 2C7.55228 2 8 2.44772 8 3V5Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 19C8 17.3431 6.65685 16 5 16H3C2.44772 16 2 16.4477 2 17C2 17.5523 2.44772 18 3 18H5C5.55228 18 6 18.4477 6 19V21C6 21.5523 6.44772 22 7 22C7.55228 22 8 21.5523 8 21V19Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "19",
        y1: "16",
        x2: "19",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "19",
        y1: "8",
        x2: "19",
        y2: "2",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "5",
        y1: "8",
        x2: "5",
        y2: "2",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "5",
        y1: "16",
        x2: "5",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ColorPalette = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19.7866 14C20.9581 14 22 13.1714 22 12V12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22V22C13.1714 22 14 20.9581 14 19.7866V18C14 15.7909 15.7909 14 18 14H19.7866Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "11.5",
      cy: "6",
      r: "1.5",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "17.5",
      cy: "9.5",
      r: "1.5",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "6.5",
      cy: "10",
      r: "1.5",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "8",
      cy: "16.5",
      r: "1.5",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.5",
        y1: "4.5",
        x2: "11.5",
        y2: "7.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17.5",
        y1: "8",
        x2: "17.5",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "6.5",
        y1: "8.5",
        x2: "6.5",
        y2: "11.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "8",
        y1: "15",
        x2: "8",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Command = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5V8H14V6.5C14 4.567 15.567 3 17.5 3C19.433 3 21 4.567 21 6.5C21 8.433 19.433 10 17.5 10H16V14H17.5C19.433 14 21 15.567 21 17.5C21 19.433 19.433 21 17.5 21C15.567 21 14 19.433 14 17.5V16H10V17.5C10 19.433 8.433 21 6.5 21C4.567 21 3 19.433 3 17.5C3 15.567 4.567 14 6.5 14H8V10H6.5C4.567 10 3 8.433 3 6.5ZM8 8V6.5C8 5.67157 7.32843 5 6.5 5C5.67157 5 5 5.67157 5 6.5C5 7.32843 5.67157 8 6.5 8H8ZM10 10V14H14V10H10ZM8 16H6.5C5.67157 16 5 16.6716 5 17.5C5 18.3284 5.67157 19 6.5 19C7.32843 19 8 18.3284 8 17.5V16ZM16 16V17.5C16 18.3284 16.6716 19 17.5 19C18.3284 19 19 18.3284 19 17.5C19 16.6716 18.3284 16 17.5 16H16ZM16 8H17.5C18.3284 8 19 7.32843 19 6.5C19 5.67157 18.3284 5 17.5 5C16.6716 5 16 5.67157 16 6.5V8Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Compass = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M10.3512 9.1808L15.4401 7.27247C16.244 6.97101 17.029 7.75604 16.7275 8.55992L14.8192 13.6488C14.6164 14.1896 14.1896 14.6164 13.6488 14.8192L8.55992 16.7275C7.75604 17.029 6.97101 16.244 7.27247 15.4401L9.1808 10.3512C9.38361 9.81036 9.81036 9.38361 10.3512 9.1808Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "6.5",
        x2: "12",
        y2: "17.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Crop = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M17 21C17 21.5523 17.4477 22 18 22C18.5523 22 19 21.5523 19 21L19 8C19 6.34315 17.6569 5 16 5L7 5V7L16 7C16.5523 7 17 7.44772 17 8L17 21Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M5 7V5L3 5C2.44772 5 2 5.44772 2 6C2 6.55229 2.44772 7 3 7L5 7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 18C22 18.5523 21.5523 19 21 19L8 19C6.34315 19 5 17.6569 5 16L5 3C5 2.44771 5.44772 2 6 2C6.55229 2 7 2.44771 7 3L7 16C7 16.5523 7.44772 17 8 17L21 17C21.5523 17 22 17.4477 22 18Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10.5",
        y1: "5",
        x2: "10.5",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "10.5",
        y1: "5",
        x2: "10.5",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "13.5",
        y1: "2",
        x2: "13.5",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Crosshairs = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 3C13 2.44772 12.5523 2 12 2C11.4477 2 11 2.44772 11 3V4.06189C7.38128 4.51314 4.51314 7.38128 4.06189 11H3C2.44772 11 2 11.4477 2 12C2 12.5523 2.44772 13 3 13H4.06189C4.51314 16.6187 7.38128 19.4869 11 19.9381V21C11 21.5523 11.4477 22 12 22C12.5523 22 13 21.5523 13 21V19.9381C16.6187 19.4869 19.4869 16.6187 19.9381 13H21C21.5523 13 22 12.5523 22 12C22 11.4477 21.5523 11 21 11H19.9381C19.4869 7.38128 16.6187 4.51314 13 4.06189V3ZM18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18C15.3137 18 18 15.3137 18 12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Cursor$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12.6603 14.8384C13.1386 14.5623 13.7502 14.7262 14.0264 15.2045L17.0264 20.4006C17.3025 20.8789 17.1386 21.4905 16.6603 21.7666C16.182 22.0428 15.5705 21.8789 15.2943 21.4006L12.2943 16.2045C12.0182 15.7262 12.182 15.1146 12.6603 14.8384Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M5.46714 17.8244L4.19279 4.72415C3.98498 2.58785 6.38862 1.20012 8.1348 2.44823L18.8428 10.102C20.5895 11.3505 20.0536 14.0749 17.9642 14.5688L14.0361 15.4974C13.4648 15.6325 12.9457 15.9322 12.543 16.3595L9.77481 19.297C8.30232 20.8595 5.67501 19.9614 5.46714 17.8244Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.6603",
        y1: "14.8384",
        x2: "16.6603",
        y2: "21.7666",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12.0353",
        y1: "1.97607",
        x2: "12.0353",
        y2: "20.0857",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Dashboard = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12 3C6.477 3 2 7.477 2 13c0 2.344.807 4.5 2.158 6.205.18.227.457.351.747.351h14.19c.29 0 .568-.124.747-.35A9.957 9.957 0 0022 13c0-5.523-4.477-10-10-10z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17.207 9.207a1 1 0 00-1.414-1.414l-3.275 3.275a2 2 0 101.414 1.414l3.275-3.275z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 3,
        x2: 12,
        y2: 19.556,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 13.75,
        y1: 7.5,
        x2: 13.75,
        y2: 15,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Database = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12 16C17.0495 16 21 14.2723 21 12V7H3V12C3 14.2723 6.95053 16 12 16Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21 12C21 14.2723 17.0495 16 12 16C6.95053 16 3 14.2723 3 12V17C3 19.2723 6.95053 21 12 21C17.0495 21 21 19.2723 21 17V12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M21 7.11429C21 9.38654 16.9706 11 12 11C7.02944 11 3 9.38654 3 7.11429C3 4.84203 7.02944 3 12 3C16.9706 3 21 4.84203 21 7.11429Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "12",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Design = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2.80763 9.8787C1.63606 8.70713 1.63606 6.80763 2.80763 5.63606L5.63606 2.80763C6.80763 1.63606 8.70713 1.63606 9.8787 2.80763L21.1924 14.1213C22.364 15.2929 22.364 17.1924 21.1924 18.364L18.364 21.1924C17.1924 22.364 15.2929 22.364 14.1213 21.1924L2.80763 9.8787Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M15.4202 2.9645C16.5918 1.79292 18.4913 1.79292 19.6629 2.96449L21.0771 4.37871C22.2487 5.55028 22.2487 7.44977 21.0771 8.62134L9.32772 20.3708C9.04852 20.65 8.69292 20.8403 8.30573 20.9178L3.29933 21.9191C2.59961 22.059 1.98269 21.4421 2.12264 20.7424L3.12392 15.7359C3.20135 15.3488 3.39166 14.9932 3.67086 14.714L15.4202 2.9645Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1.92896",
        x2: "12",
        y2: "22.0711",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12.0292",
        y1: "2.08582",
        x2: "12.0292",
        y2: "21.939",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Diamond = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M1.84023 7.1842L4.76734 3.21844C5.3329 2.45219 6.22869 2 7.18106 2H16.8189C17.7713 2 18.6671 2.45219 19.2327 3.21844L22.1598 7.1842C22.9535 8.25957 22.9401 9.73033 22.1269 10.791L14.3808 20.8946C13.18 22.4609 10.82 22.4609 9.61918 20.8946L1.87314 10.791C1.05992 9.73033 1.0465 8.25957 1.84023 7.1842Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M22.7458 9H1.2541C1.24684 8.36315 1.44181 7.72409 1.83994 7.18453V7.18453L4.76729 3.21844C5.33285 2.45219 6.22864 2 7.18101 2H16.8189C17.7713 2 18.667 2.45219 19.2326 3.21844L22.1597 7.1842L22.1607 7.18557C22.5583 7.72491 22.7531 8.36356 22.7458 9Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "24",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Document = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3 5a3 3 0 013-3h9.757a3 3 0 012.122.879L20.12 5.12A3 3 0 0121 7.243V19a3 3 0 01-3 3H6a3 3 0 01-3-3V5z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 11a1 1 0 011-1h8a1 1 0 110 2H8a1 1 0 01-1-1z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 15a1 1 0 011-1h4a1 1 0 110 2H8a1 1 0 01-1-1z",
      fill: "url(#prefix__paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17.707 2.707l2.586 2.586C20.746 5.746 21 6.36 21 7h-3a2 2 0 01-2-2V2c.64 0 1.254.254 1.707.707z",
      fill: "url(#prefix__paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 2,
        x2: 12,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 12,
        y1: 10,
        x2: 12,
        y2: 12,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint2_linear",
        x1: 10,
        y1: 14,
        x2: 10,
        y2: 16,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint3_linear",
        x1: 18.5,
        y1: 2,
        x2: 18.5,
        y2: 7,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Dollar = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 1C12.5523 1 13 1.44772 13 2V4C13 4.55228 12.5523 5 12 5C11.4477 5 11 4.55228 11 4V2C11 1.44772 11.4477 1 12 1Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 19C12.5523 19 13 19.4477 13 20V22C13 22.5523 12.5523 23 12 23C11.4477 23 11 22.5523 11 22V20C11 19.4477 11.4477 19 12 19Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5 7C5 4.79086 6.79086 3 9 3H15C17.2091 3 19 4.79086 19 7V8C19 8.55228 18.5523 9 18 9C17.4477 9 17 8.55228 17 8V7C17 5.89543 16.1046 5 15 5H9C7.89543 5 7 5.89543 7 7V7.11696C7 8.40825 7.82629 9.55467 9.05132 9.96301L15.5811 12.1396C17.6228 12.8202 19 14.7309 19 16.883V17C19 19.2091 17.2091 21 15 21H9C6.79086 21 5 19.2091 5 17V16C5 15.4477 5.44772 15 6 15C6.55228 15 7 15.4477 7 16V17C7 18.1046 7.89543 19 9 19H15C16.1046 19 17 18.1046 17 17V16.883C17 15.5917 16.1737 14.4453 14.9487 14.037L8.41886 11.8604C6.37715 11.1798 5 9.26912 5 7.11696V7Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1",
        x2: "12",
        y2: "5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "19",
        x2: "12",
        y2: "23",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const DonutChart = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M11 4.99999C11 4.4477 10.5509 3.99424 10.002 4.05548C8.57508 4.21469 7.20174 4.7137 5.99987 5.51676C4.51983 6.50569 3.36628 7.9113 2.68509 9.55584C2.0039 11.2004 1.82567 13.01 2.17294 14.7558C2.5202 16.5016 3.37737 18.1053 4.63604 19.3639C5.89472 20.6226 7.49836 21.4798 9.24419 21.8271C10.99 22.1743 12.7996 21.9961 14.4442 21.3149C16.0887 20.6337 17.4943 19.4802 18.4832 18.0001C19.2863 16.7982 19.7853 15.4249 19.9445 13.9979C20.0057 13.4491 19.5523 13 19 13H15.0079C14.4556 13 14.0234 13.4596 13.8432 13.9817C13.7596 14.2239 13.6449 14.4557 13.501 14.6711C13.1705 15.1657 12.7007 15.5513 12.1511 15.7789C11.6015 16.0066 10.9967 16.0661 10.4132 15.9501C9.82972 15.834 9.29376 15.5476 8.8731 15.1269C8.45244 14.7062 8.16597 14.1703 8.04991 13.5868C7.93385 13.0033 7.99341 12.3985 8.22107 11.8489C8.44873 11.2993 8.83426 10.8295 9.32891 10.499C9.54426 10.3551 9.77608 10.2404 10.0183 10.1568C10.5404 9.97655 11 9.54438 11 8.99209V4.99999Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M21 11C21.5523 11 22.0057 10.5509 21.9445 10.002C21.8509 9.16274 21.6394 8.33912 21.3149 7.55583C20.8626 6.4639 20.1997 5.47175 19.364 4.63602C18.5282 3.8003 17.5361 3.13736 16.4442 2.68507C15.6609 2.36062 14.8372 2.14912 13.9979 2.05548C13.4491 1.99424 13 2.4477 13 2.99998V6.99209C13 7.54438 13.4596 7.97655 13.9817 8.1568C14.0387 8.17648 14.0952 8.19791 14.1511 8.22105C14.516 8.37221 14.8476 8.59377 15.1269 8.87308C15.4062 9.15239 15.6278 9.48398 15.7789 9.84891C15.8021 9.90479 15.8235 9.96128 15.8432 10.0183C16.0234 10.5403 16.4556 11 17.0079 11H21Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10.975",
        y1: "4.04993",
        x2: "10.975",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17.475",
        y1: "2.04993",
        x2: "17.475",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Download = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M13.0019 4.99959C13.0019 4.4473 12.5542 3.99959 12.0019 3.99959C11.4496 3.99959 11.0019 4.4473 11.0019 4.99959V13.0859L8.20894 10.2929C7.81841 9.90237 7.18525 9.90237 6.79472 10.2929C6.4042 10.6834 6.4042 11.3166 6.79472 11.7071L10.5877 15.5C11.3687 16.2811 12.635 16.2811 13.4161 15.5L17.2071 11.7091C17.5976 11.3185 17.5976 10.6854 17.2071 10.2948C16.8166 9.90432 16.1834 9.90432 15.7929 10.2948L13.0019 13.0858V4.99959Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 14C4.55228 14 5 14.4477 5 15V17C5 17.5523 5.44772 18 6 18H18C18.5523 18 19 17.5523 19 17V15C19 14.4477 19.4477 14 20 14C20.5523 14 21 14.4477 21 15V17C21 18.6569 19.6569 20 18 20H6C4.34315 20 3 18.6569 3 17V15C3 14.4477 3.44772 14 4 14Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.0009",
        y1: "3.99959",
        x2: "12.0009",
        y2: "16.0858",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Drop = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M18.2725 8.94348C19.3752 10.319 20.0348 12.0651 20.0348 13.9652C20.0348 18.4027 16.4375 22 12 22C7.5625 22 3.96521 18.4027 3.96521 13.9652C3.96521 12.0651 4.62478 10.319 5.72747 8.94348L5.73397 8.93538C5.73397 8.93538 8.52282 5.20153 10.6792 2.56137C11.3689 1.71688 12.6313 1.71655 13.3215 2.56071C15.4847 5.20669 18.2772 8.94348 18.2772 8.94348H18.2725Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6.90112 14.02C7.44236 13.9101 7.9702 14.2598 8.08006 14.8011C8.39785 16.3666 9.63342 17.6022 11.199 17.92C11.7402 18.0298 12.0899 18.5577 11.98 19.0989C11.8702 19.6402 11.3423 19.9899 10.8011 19.88C8.44838 19.4024 6.59761 17.5517 6.12004 15.1989C6.01017 14.6577 6.35987 14.1299 6.90112 14.02Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "22",
        x2: "12",
        y2: "1",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9.05004",
        y1: "13.9998",
        x2: "9.05004",
        y2: "19.9002",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Edit = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3.98549 21.1911L8.9919 20.1898C9.37908 20.1124 9.73468 19.9221 10.0139 19.6429L18.0666 11.5901L12.4098 5.93329L4.35702 13.986C4.07782 14.2652 3.88751 14.6208 3.81007 15.008L2.80879 20.0144C2.66885 20.7141 3.28577 21.3311 3.98549 21.1911Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M20.1924 5.22182L18.7782 3.8076C17.6067 2.63603 15.7072 2.63603 14.5356 3.80761L12.4099 5.93328L18.0668 11.5901L20.1924 9.46446C21.364 8.29288 21.364 6.39339 20.1924 5.22182Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10.4277",
        y1: "5.93329",
        x2: "10.4277",
        y2: "21.2111",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "16.7405",
        y1: "2.92892",
        x2: "16.7405",
        y2: "11.5901",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const EventAdd = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "4",
      width: "20",
      height: "18",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 2C7.55228 2 8 2.44772 8 3V7C8 7.55228 7.55228 8 7 8C6.44772 8 6 7.55228 6 7V3C6 2.44772 6.44772 2 7 2Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 2C17.5523 2 18 2.44772 18 3V7C18 7.55228 17.5523 8 17 8C16.4477 8 16 7.55228 16 7V3C16 2.44772 16.4477 2 17 2Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13 10C13 9.44772 12.5523 9 12 9C11.4477 9 11 9.44772 11 10L11 12H9C8.44772 12 8 12.4477 8 13C8 13.5523 8.44772 14 9 14H11L11 16C11 16.5523 11.4477 17 12 17C12.5523 17 13 16.5523 13 16L13 14H15C15.5523 14 16 13.5523 16 13C16 12.4477 15.5523 12 15 12H13L13 10Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "7",
        y1: "2",
        x2: "7",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17",
        y1: "2",
        x2: "17",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const EventScheduled = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "4",
      width: "20",
      height: "18",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 2C7.55228 2 8 2.44772 8 3V7C8 7.55228 7.55228 8 7 8C6.44772 8 6 7.55228 6 7V3C6 2.44772 6.44772 2 7 2Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 2C17.5523 2 18 2.44772 18 3V7C18 7.55228 17.5523 8 17 8C16.4477 8 16 7.55228 16 7V3C16 2.44772 16.4477 2 17 2Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.7071 10.2929C17.0976 10.6834 17.0976 11.3166 16.7071 11.7071L11.7071 16.7071C11.3166 17.0976 10.6834 17.0976 10.2929 16.7071L7.79289 14.2071C7.40237 13.8166 7.40237 13.1834 7.79289 12.7929C8.18342 12.4024 8.81658 12.4024 9.20711 12.7929L11 14.5858L15.2929 10.2929C15.6834 9.90237 16.3166 9.90237 16.7071 10.2929Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "7",
        y1: "2",
        x2: "7",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17",
        y1: "2",
        x2: "17",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12.25",
        y1: "10",
        x2: "12.25",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Expand = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 5C2 3.34315 3.34315 2 5 2H7C7.55228 2 8 2.44772 8 3C8 3.55228 7.55228 4 7 4H5C4.44772 4 4 4.44772 4 5V7C4 7.55228 3.55228 8 3 8C2.44772 8 2 7.55228 2 7V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 19C2 20.6569 3.34315 22 5 22H7C7.55228 22 8 21.5523 8 21C8 20.4477 7.55228 20 7 20H5C4.44772 20 4 19.5523 4 19V17C4 16.4477 3.55228 16 3 16C2.44772 16 2 16.4477 2 17V19Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 19C22 20.6569 20.6569 22 19 22H17C16.4477 22 16 21.5523 16 21C16 20.4477 16.4477 20 17 20H19C19.5523 20 20 19.5523 20 19V17C20 16.4477 20.4477 16 21 16C21.5523 16 22 16.4477 22 17V19Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 5C22 3.34315 20.6569 2 19 2H17C16.4477 2 16 2.44772 16 3C16 3.55228 16.4477 4 17 4H19C19.5523 4 20 4.44772 20 5V7C20 7.55228 20.4477 8 21 8C21.5523 8 22 7.55228 22 7V5Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "5",
        y1: "2",
        x2: "5",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "5",
        y1: "22",
        x2: "5",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "19",
        y1: "22",
        x2: "19",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "19",
        y1: "2",
        x2: "19",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Facebook = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 7C13 5.89543 13.8954 5 15 5H16C16.5523 5 17 4.55228 17 4C17 3.44772 16.5523 3 16 3H15C12.7909 3 11 4.79086 11 7V9H8.5C7.94772 9 7.5 9.44772 7.5 10C7.5 10.5523 7.94772 11 8.5 11H11V20C11 20.5523 11.4477 21 12 21C12.5523 21 13 20.5523 13 20V11H15.5C16.0523 11 16.5 10.5523 16.5 10C16.5 9.44772 16.0523 9 15.5 9H13V7Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.25",
        y1: "3",
        x2: "12.25",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const FastLeft = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M13.2 9.6C11.6 10.8 11.6 13.2 13.2 14.4L17.2 17.4C19.1777 18.8833 22 17.4721 22 15V9C22 6.52786 19.1777 5.11672 17.2 6.6L13.2 9.6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M3.2 9.6C1.6 10.8 1.6 13.2 3.2 14.4L7.2 17.4C9.17771 18.8833 12 17.4721 12 15V9C12 6.52786 9.17771 5.11672 7.2 6.6L3.2 9.6Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "16",
        y1: "3",
        x2: "16",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "6",
        y1: "3",
        x2: "6",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const FastRight = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M10.8 9.60003C12.4 10.8 12.4 13.2 10.8 14.4L6.8 17.4C4.82229 18.8833 2 17.4722 2 15V9.00003C2 6.52789 4.82229 5.11675 6.8 6.60003L10.8 9.60003Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M20.8 9.6C22.4 10.8 22.4 13.2 20.8 14.4L16.8 17.4C14.8223 18.8833 12 17.4721 12 15V9C12 6.52786 14.8223 5.11672 16.8 6.6L20.8 9.6Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "8",
        y1: "3.00003",
        x2: "8",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18",
        y1: "3",
        x2: "18",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Figma = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "15",
      cy: "12",
      r: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 6C6 4.34315 7.34315 3 9 3H12V9H9C7.34315 9 6 7.65685 6 6V6Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M12 3H15C16.6569 3 18 4.34315 18 6V6C18 7.65685 16.6569 9 15 9H12V3Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 12C6 10.3431 7.34314 9 8.99999 9L11 9C11.5523 9 12 9.44772 12 10V14C12 14.5523 11.5523 15 11 15H8.99999C7.34314 15 6 13.6568 6 12V12Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 18C6 16.3431 7.34315 15 9 15H11C11.5523 15 12 15.4477 12 16V18C12 19.6569 10.6569 21 9 21V21C7.34315 21 6 19.6569 6 18V18Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "15",
        y1: "9",
        x2: "15",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9",
        y1: "3",
        x2: "9",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "15",
        y1: "3",
        x2: "15",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "9",
        y1: "9",
        x2: "9",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "9",
        y1: "15",
        x2: "9",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const FileAdd = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3 5C3 3.34315 4.34315 2 6 2H15.7574C16.553 2 17.3161 2.31607 17.8787 2.87868L20.1213 5.12132C20.6839 5.68393 21 6.44699 21 7.24264V19C21 20.6569 19.6569 22 18 22H6C4.34315 22 3 20.6569 3 19V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17.7071 2.70711L20.2929 5.29289C20.7456 5.74565 21 6.35971 21 7H18C16.8954 7 16 6.10457 16 5V2C16.6403 2 17.2544 2.25435 17.7071 2.70711Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13 10C13 9.44772 12.5523 9 12 9C11.4477 9 11 9.44772 11 10L11 12H9C8.44772 12 8 12.4477 8 13C8 13.5523 8.44772 14 9 14H11L11 16C11 16.5523 11.4477 17 12 17C12.5523 17 13 16.5523 13 16L13 14H15C15.5523 14 16 13.5523 16 13C16 12.4477 15.5523 12 15 12H13L13 10Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18.5",
        y1: "2",
        x2: "18.5",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const File = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3 5C3 3.34315 4.34315 2 6 2H15.7574C16.553 2 17.3161 2.31607 17.8787 2.87868L20.1213 5.12132C20.6839 5.68393 21 6.44699 21 7.24264V19C21 20.6569 19.6569 22 18 22H6C4.34315 22 3 20.6569 3 19V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17.7071 2.70711L20.2929 5.29289C20.7456 5.74565 21 6.35971 21 7H18C16.8954 7 16 6.10457 16 5V2C16.6403 2 17.2544 2.25435 17.7071 2.70711Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18.5",
        y1: "2",
        x2: "18.5",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Files = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3 9C3 7.34315 4.34315 6 6 6H12.7574C13.553 6 14.3161 6.31607 14.8787 6.87868L16.1213 8.12132C16.6839 8.68393 17 9.44699 17 10.2426V19C17 20.6569 15.6569 22 14 22H6C4.34315 22 3 20.6569 3 19V9Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M7 5C7 3.34315 8.34315 2 10 2H15.7574C16.553 2 17.3161 2.31607 17.8787 2.87868L20.1213 5.12132C20.6839 5.68393 21 6.44699 21 7.24264V15C21 16.6569 19.6569 18 18 18H10C8.34315 18 7 16.6569 7 15V5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16 5V2C16.6403 2 17.2544 2.25435 17.7071 2.70711L20.2929 5.29289C20.7456 5.74565 21 6.35971 21 7H18C16.8954 7 16 6.10457 16 5Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10",
        y1: "6",
        x2: "10",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "14",
        y1: "2",
        x2: "14",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "18.5",
        y1: "2",
        x2: "18.5",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Film = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 5H16V7H13V5ZM18 7V5H19C19.5523 5 20 5.44771 20 6V7H18ZM13 9H17H20V15H17H13V9ZM16 17H13V19H16V17ZM18 19V17H20V18C20 18.5523 19.5523 19 19 19H18ZM11 5H8V7H11V5ZM11 9H7H4V15H7H11V9ZM11 17H8V19H11V17ZM12 21H19C20.6569 21 22 19.6569 22 18V16V8V6C22 4.34315 20.6569 3 19 3H5C3.34315 3 2 4.34315 2 6V8V16V18C2 19.6569 3.34315 21 5 21H12ZM6 5H5C4.44772 5 4 5.44772 4 6V7H6V5ZM4 18V17H6V19H5C4.44772 19 4 18.5523 4 18Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "4",
      y: "9",
      width: "7",
      height: "6",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "13",
      y: "9",
      width: "7",
      height: "6",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "7.5",
        y1: "9",
        x2: "7.5",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "16.5",
        y1: "9",
        x2: "16.5",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Filter = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M20 2H4C2.89543 2 2 2.89543 2 4V5.42191C2 6.4098 2.48635 7.33437 3.30041 7.89403L10 12.5V20.3415C10 21.0945 10.8008 21.5774 11.4668 21.2259L13.4668 20.1703C13.7947 19.9972 14 19.6568 14 19.2859V12.5L20.6996 7.89403C21.5137 7.33437 22 6.4098 22 5.42191V4C22 2.89543 21.1046 2 20 2Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Fire = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12 22C16.2526 22 20 19 20 15C20 11 17 9 16 8C14.5939 6.5939 14.1521 4.74612 14.0254 3.4746C13.9552 2.77067 13.2759 2.27145 12.6864 2.66243C11.5335 3.42702 9.90375 4.98749 9 8C8.35747 10.1418 9 12 9 12C9 12 8 11.5 7.5 10C7.3353 9.5059 7.11635 8.90329 6.89675 8.31727C6.58071 7.47387 5.44066 7.48134 5.1629 8.33811C4.61497 10.0282 4 12.3031 4 14C4 19 7.74745 22 12 22Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M11 18C13.4745 18 16.2142 16.4557 16.8623 14.0924C16.9998 13.5912 17.7035 13.3597 17.8435 13.8603C17.946 14.2264 18.0001 14.6079 18.0001 15C18.0001 17.7614 15.3138 20 12.0001 20C9.86222 20 7.98549 19.0682 6.92281 17.6654C6.60896 17.2511 7.16881 16.8749 7.62054 17.132C8.58297 17.6797 9.74658 18 11 18Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "22",
        x2: "12",
        y2: "2",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12.0461",
        y1: "12.1233",
        x2: "12.0461",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Flag = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3 4C3 3.44772 3.44772 3 4 3H10.0263C10.6712 3 11.3119 3.10397 11.9237 3.3079L13.0763 3.6921C13.6881 3.89603 14.3288 4 14.9737 4H18C19.6569 4 21 5.34315 21 7V13C21 14.6569 19.6569 16 18 16H14.9737C14.3288 16 13.6881 15.896 13.0763 15.6921L11.9237 15.3079C11.3119 15.104 10.6712 15 10.0263 15H4C3.44772 15 3 14.5523 3 14V4Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 2C4.55228 2 5 2.44772 5 3V21C5 21.5523 4.55228 22 4 22C3.44772 22 3 21.5523 3 21V3C3 2.44772 3.44772 2 4 2Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "4",
        y1: "2",
        x2: "4",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Flashlight = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M7 12L5.3359 10.8906C4.5013 10.3342 4 9.39751 4 8.39445V7C4 6.44772 4.44772 6 5 6H19C19.5523 6 20 6.44772 20 7V8.39445C20 9.39751 19.4987 10.3342 18.6641 10.8906L17 12V19C17 20.6569 15.6569 22 14 22H10C8.34315 22 7 20.6569 7 19V12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 13C12.5523 13 13 13.4477 13 14V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V14C11 13.4477 11.4477 13 12 13Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 1C12.5523 1 13 1.44772 13 2V3C13 3.55228 12.5523 4 12 4C11.4477 4 11 3.55228 11 3V2C11 1.44772 11.4477 1 12 1Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.05276 2.10555C7.54674 1.85856 8.14741 2.05878 8.3944 2.55276L8.8944 3.55276C9.14139 4.04674 8.94117 4.64741 8.44719 4.8944C7.95321 5.14139 7.35254 4.94117 7.10555 4.44719L6.60555 3.44719C6.35856 2.95321 6.55878 2.35254 7.05276 2.10555Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.9472 2.10555C17.4412 2.35254 17.6414 2.95321 17.3944 3.44719L16.8944 4.44719C16.6474 4.94117 16.0467 5.14139 15.5528 4.8944C15.0588 4.64741 14.8586 4.04674 15.1055 3.55276L15.6055 2.55276C15.8525 2.05878 16.4532 1.85856 16.9472 2.10555Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "1",
        x2: "12",
        y2: "4",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "7.74997",
        y1: "1.99976",
        x2: "7.74997",
        y2: "5.00019",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "16.25",
        y1: "1.99976",
        x2: "16.25",
        y2: "5.00019",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Flight = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2 14.5C2 14.8135 2.14706 15.1089 2.39725 15.2979C2.64744 15.4869 2.97178 15.5476 3.27338 15.4619L10.6393 13.3684H13.3607L20.7266 15.4619C21.0282 15.5476 21.3526 15.4869 21.6028 15.2979C21.8529 15.1089 22 14.8135 22 14.5V13.2737C22 12.1082 21.3249 11.0481 20.2687 10.5552L13.9229 7.59382C13.7905 7.53202 13.6461 7.5 13.5 7.5H10.5C10.3539 7.5 10.2095 7.53202 10.0771 7.59382L3.73134 10.5552C2.67512 11.0481 2 12.1082 2 13.2737V14.5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M7.5 21.5C7.5 21.8565 7.68976 22.186 7.99807 22.3649C8.30639 22.5438 8.68664 22.5451 8.99614 22.3682L12 20.6518L15.0039 22.3682C15.3134 22.5451 15.6936 22.5438 16.0019 22.3649C16.3102 22.186 16.5 21.8565 16.5 21.5V19C16.5 18.3705 16.2036 17.7777 15.7 17.4L14.5 16.5V4C14.5 2.61929 13.3807 1.5 12 1.5C10.6193 1.5 9.5 2.61929 9.5 4L9.5 16.5L8.3 17.4C7.79639 17.7777 7.5 18.3705 7.5 19V21.5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "7.5",
        x2: "12",
        y2: "15.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "1.5",
        x2: "12",
        y2: "22.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const FolderAdd = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M5 21H19C20.6569 21 22 19.6569 22 18V8C22 6.34315 20.6569 5 19 5H11L9.87868 3.87868C9.31607 3.31607 8.55301 3 7.75736 3H5C3.34315 3 2 4.34315 2 6V18C2 19.6569 3.34315 21 5 21Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13 10C13 9.44772 12.5523 9 12 9C11.4477 9 11 9.44772 11 10L11 12H9C8.44772 12 8 12.4477 8 13C8 13.5523 8.44772 14 9 14H11L11 16C11 16.5523 11.4477 17 12 17C12.5523 17 13 16.5523 13 16L13 14H15C15.5523 14 16 13.5523 16 13C16 12.4477 15.5523 12 15 12H13L13 10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Folder = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M5 21H19C20.6569 21 22 19.6569 22 18V8C22 6.34315 20.6569 5 19 5H11L9.87868 3.87868C9.31607 3.31607 8.55301 3 7.75736 3H5C3.34315 3 2 4.34315 2 6V18C2 19.6569 3.34315 21 5 21Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "7",
      width: "20",
      height: "14",
      rx: "3",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Frown = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.39944 16.7995C7.84102 17.1313 8.46789 17.0422 8.7996 16.6006C9.53115 15.6268 10.6922 15 12 15C13.3079 15 14.469 15.6268 15.2005 16.6006C15.5322 17.0422 16.1591 17.1313 16.6007 16.7995C17.0422 16.4678 17.1313 15.841 16.7996 15.3994C15.7067 13.9445 13.9637 13 12 13C10.0364 13 8.2934 13.9445 7.20052 15.3994C6.86881 15.841 6.95787 16.4678 7.39944 16.7995Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.29289 8.29289C7.68342 7.90237 8.31658 7.90237 8.70711 8.29289L9.20711 8.79289C9.59763 9.18342 9.59763 9.81658 9.20711 10.2071C8.81658 10.5976 8.18342 10.5976 7.79289 10.2071L7.29289 9.70711C6.90237 9.31658 6.90237 8.68342 7.29289 8.29289Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.7071 8.29289C16.3166 7.90237 15.6834 7.90237 15.2929 8.29289L14.7929 8.79289C14.4024 9.18342 14.4024 9.81658 14.7929 10.2071C15.1834 10.5976 15.8166 10.5976 16.2071 10.2071L16.7071 9.70711C17.0976 9.31658 17.0976 8.68342 16.7071 8.29289Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12.0001",
        y1: "17.0001",
        x2: "12.0001",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "8.25",
        y1: "8",
        x2: "8.25",
        y2: "10.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "15.75",
        y1: "8",
        x2: "15.75",
        y2: "10.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Fuel = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M4 5C4 3.34315 5.34315 2 7 2H13C14.6569 2 16 3.34315 16 5V20H4V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.2929 5.29289C18.6834 4.90237 19.3166 4.90237 19.7071 5.29289L21.4142 7C21.7893 7.37507 22 7.88378 22 8.41421V16.5C22 17.8807 20.8807 19 19.5 19C18.1193 19 17 17.8807 17 16.5V15C17 14.4477 16.5523 14 16 14V12C17.6569 12 19 13.3431 19 15V16.5C19 16.7761 19.2239 17 19.5 17C19.7761 17 20 16.7761 20 16.5V10.4142L19.5858 10C19.2107 9.62493 19 9.11622 19 8.58579V7.41421L18.2929 6.70711C17.9024 6.31658 17.9024 5.68342 18.2929 5.29289Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 21C2 20.4477 2.44772 20 3 20H17C17.5523 20 18 20.4477 18 21C18 21.5523 17.5523 22 17 22H3C2.44772 22 2 21.5523 2 21Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 5C6 4.44772 6.44772 4 7 4H13C13.5523 4 14 4.44772 14 5V9C14 9.55228 13.5523 10 13 10H7C6.44772 10 6 9.55228 6 9V5Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10",
        y1: "2",
        x2: "10",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "19",
        y1: "5",
        x2: "19",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "10",
        y1: "20",
        x2: "10",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "10",
        y1: "4",
        x2: "10",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Gamepad = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 3C12.5523 3 13 3.44772 13 4V6C13 6.55228 12.5523 7 12 7C11.4477 7 11 6.55228 11 6V4C11 3.44772 11.4477 3 12 3Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "5",
      width: "20",
      height: "14",
      rx: "4",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 13C17.5523 13 18 12.5523 18 12C18 11.4477 17.5523 11 17 11C16.4477 11 16 11.4477 16 12C16 12.5523 16.4477 13 17 13ZM20 12C20 13.6569 18.6569 15 17 15C15.3431 15 14 13.6569 14 12C14 10.3431 15.3431 9 17 9C18.6569 9 20 10.3431 20 12Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 10C8 9.44772 7.55228 9 7 9C6.44772 9 6 9.44772 6 10V11L5 11C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13H6V14C6 14.5523 6.44772 15 7 15C7.55228 15 8 14.5523 8 14V13H9C9.55228 13 10 12.5523 10 12C10 11.4477 9.55228 11 9 11H8V10Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17",
        y1: "9",
        x2: "17",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "7",
        y1: "9",
        x2: "7",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Gift = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3 12.874V19a3 3 0 003 3h12a3 3 0 003-3v-6.126A4.01 4.01 0 0120 13H4a4.01 4.01 0 01-1-.126z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2 8a2 2 0 012-2h16a2 2 0 012 2v1a2 2 0 01-2 2H4a2 2 0 01-2-2V8z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 3.5l-1.189-1.486A2.702 2.702 0 008.701 1H8.5a2.5 2.5 0 000 5H11v16h2V6h2.5a2.5 2.5 0 000-5h-.202c-.82 0-1.596.373-2.11 1.014L12 3.5zM9.839 4l-.59-.737A.702.702 0 008.702 3H8.5a.5.5 0 000 1h1.339zm4.322 0l.59-.737A.701.701 0 0115.298 3h.202a.5.5 0 010 1h-1.339z",
      fill: "url(#prefix__paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 12.874,
        x2: 12,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 12,
        y1: 6,
        x2: 12,
        y2: 11,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint2_linear",
        x1: 12,
        y1: 1,
        x2: 12,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Grid = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 3C9.55228 3 10 3.44772 10 4V8H14V4C14 3.44772 14.4477 3 15 3C15.5523 3 16 3.44772 16 4V8H20C20.5523 8 21 8.44772 21 9C21 9.55228 20.5523 10 20 10H16V14H20C20.5523 14 21 14.4477 21 15C21 15.5523 20.5523 16 20 16H16V20C16 20.5523 15.5523 21 15 21C14.4477 21 14 20.5523 14 20V16H10V20C10 20.5523 9.55228 21 9 21C8.44772 21 8 20.5523 8 20V16H4C3.44772 16 3 15.5523 3 15C3 14.4477 3.44772 14 4 14H8V10H4C3.44772 10 3 9.55228 3 9C3 8.44772 3.44772 8 4 8H8V4C8 3.44772 8.44772 3 9 3ZM14 14V10H10V14H14Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19 4H5C4.44771 4 4 4.44772 4 5V19C4 19.5523 4.44772 20 5 20H19C19.5523 20 20 19.5523 20 19V5C20 4.44771 19.5523 4 19 4ZM5 2C3.34315 2 2 3.34315 2 5V19C2 20.6569 3.34315 22 5 22H19C20.6569 22 22 20.6569 22 19V5C22 3.34315 20.6569 2 19 2H5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Group = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: 14,
      cy: 7,
      r: 4,
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M12 13a6 6 0 00-6 6 2 2 0 002 2h12a2 2 0 002-2v-1a5 5 0 00-5-5h-5z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M7 13a5 5 0 00-5 5v1a2 2 0 002 2h12a2 2 0 002-2v-1a5 5 0 00-5-5H7z",
      fill: "url(#prefix__paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: 10,
      cy: 7,
      r: 4,
      fill: "url(#prefix__paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 14,
        y1: 3,
        x2: 14,
        y2: 11,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 14,
        y1: 13,
        x2: 14,
        y2: 21,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint2_linear",
        x1: 10,
        y1: 13,
        x2: 10,
        y2: 21,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint3_linear",
        x1: 10,
        y1: 3,
        x2: 10,
        y2: 11,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Growth = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 2a1 1 0 011 1v16a1 1 0 001 1h16a1 1 0 110 2H5a3 3 0 01-3-3V3a1 1 0 011-1z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17 6.5a1 1 0 100 2h1.586L14.5 12.586 11.914 10a2 2 0 00-2.828 0l-2.793 2.793a1 1 0 101.414 1.414l2.793-2.793L13.086 14a2 2 0 002.828 0L20 9.914V11.5a1 1 0 102 0v-4a1 1 0 00-1-1h-4z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 2,
        x2: 12,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 14,
        y1: 6.5,
        x2: 14,
        y2: 14.586,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const HandCursor = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M18.6508 11.478L12 10V3.99305C12 2.89232 11.1077 2 10.0069 2C8.90621 2 8.01388 2.89232 8.01388 3.99305V15L6.65093 12.6231C5.68971 10.9468 3.17615 11.2954 2.70748 13.1701C2.57426 13.703 2.65046 14.2667 2.92039 14.7451L6.15298 20.4742C6.68489 21.4169 7.68337 22 8.76577 22H18C19.6569 22 21 20.6569 21 19V14.4065C21 13.0004 20.0234 11.783 18.6508 11.478Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.75",
        y1: "2",
        x2: "11.75",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Headphone = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 4C7.58172 4 4 7.58172 4 12V13H2V12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12V13H20V12C20 7.58172 16.4183 4 12 4Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 12H2V18C2 19.6569 3.34315 21 5 21H6C7.65685 21 9 19.6569 9 18V15C9 13.3431 7.65685 12 6 12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M18 12C16.3431 12 15 13.3431 15 15V18C15 19.6569 16.3431 21 18 21H19C20.6569 21 22 19.6569 22 18V12H18Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "12",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "12",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Heart = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M11.8003 5.21366C9.55838 2.92878 5.91553 2.92878 3.67364 5.21366C1.44212 7.48794 1.44212 11.1676 3.67364 13.4419L9.85864 19.7454C11.0346 20.944 12.9654 20.944 14.1414 19.7454L20.3264 13.4419C22.5579 11.1676 22.5579 7.48794 20.3264 5.21366C18.0845 2.92878 14.4416 2.92878 12.1997 5.21366L12 5.41721L11.8003 5.21366Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M19 9.5C19 7.84315 17.6569 6.5 16 6.5",
      stroke: "url(#paint1_linear)",
      "stroke-width": "2",
      "stroke-linecap": "round"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3.5",
        x2: "12",
        y2: "20.6443",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17.5",
        y1: "6.5",
        x2: "17.5",
        y2: "9.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Help = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "18",
      r: "1",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 8C11.1307 8 10.3886 8.5551 10.1135 9.33325C9.92948 9.85396 9.35815 10.1269 8.83744 9.94284C8.31672 9.75879 8.0438 9.18747 8.22784 8.66675C8.77648 7.11451 10.2568 6 12 6C14.2091 6 16 7.79086 16 10C16 11.8638 14.7252 13.4299 13 13.874V15C13 15.5523 12.5523 16 12 16C11.4477 16 11 15.5523 11 15V13C11 12.4477 11.4477 12 12 12C13.1045 12 14 11.1046 14 10C14 8.89543 13.1045 8 12 8Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "17",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12.0852",
        y1: "6",
        x2: "12.0852",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Hide = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M7.50095 6.08514C4.98539 7.38359 3.39301 9.5472 2.60173 10.8666C2.17947 11.5708 2.17947 12.4292 2.60173 13.1334C3.79002 15.1148 6.78492 19 11.9999 19C14.6126 19 16.6681 18.0248 18.2183 16.8025L7.50095 6.08514Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M19.6822 15.438C20.4494 14.6012 21.0168 13.7693 21.3982 13.1334C21.8204 12.4292 21.8204 11.5708 21.3982 10.8666C20.2099 8.88521 17.215 5 11.9999 5C11.1202 5 10.3036 5.11057 9.54816 5.30393L19.6822 15.438Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M10.7077 9.29185C9.69769 9.77469 9 10.8059 9 12C9 13.6569 10.3431 15 12 15C13.1941 15 14.2253 14.3023 14.7081 13.2923L10.7077 9.29185Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.29289 2.29289C2.68342 1.90237 3.31658 1.90237 3.70711 2.29289L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L2.29289 3.70711C1.90237 3.31658 1.90237 2.68342 2.29289 2.29289Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.9999",
        y1: "5",
        x2: "11.9999",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.9999",
        y1: "5",
        x2: "11.9999",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11.8541",
        y1: "9.29185",
        x2: "11.8541",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Home = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 11.336a3 3 0 01.993-2.23l7-6.3a3 3 0 014.014 0l7 6.3a3 3 0 01.993 2.23V19a3 3 0 01-3 3H5a3 3 0 01-3-3v-7.664z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M9 16a2 2 0 012-2h2a2 2 0 012 2v6H9v-6z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 2.036,
        x2: 12,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 12,
        y1: 14,
        x2: 12,
        y2: 22,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Hourglass = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M9.456 18.0704L7 22H17L14.544 18.0704C13.369 16.1904 10.631 16.1904 9.456 18.0704Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17 7H7L9 11H15L17 7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 3C4 2.44772 4.44772 2 5 2H19C19.5523 2 20 2.44772 20 3C20 3.55228 19.5523 4 19 4V4.5778C19 6.15719 18.5325 7.70126 17.6564 9.0154L15.6667 12L17.6564 14.9846C18.5325 16.2987 19 17.8428 19 19.4222V20C19.5523 20 20 20.4477 20 21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21C4 20.4477 4.44772 20 5 20V19.4222C5 17.8428 5.4675 16.2987 6.3436 14.9846L8.33333 12L6.3436 9.0154C5.4675 7.70126 5 6.15719 5 4.5778V4C4.44772 4 4 3.55228 4 3ZM7 20H17V19.4222C17 18.2377 16.6494 17.0796 15.9923 16.094L13.9296 13H10.0704L8.0077 16.094C7.35063 17.0796 7 18.2377 7 19.4222V20ZM7 4H17V4.5778C17 5.76234 16.6494 6.92039 15.9923 7.90599L13.9296 11H10.0704L8.0077 7.906C7.35063 6.92039 7 5.76234 7 4.5778V4Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Image$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "2",
      width: "20",
      height: "20",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "17",
      cy: "7",
      r: "2",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2 14.5V19C2 20.6569 3.34315 22 5 22H19C19.8479 22 20.6136 21.6483 21.1592 21.0828L10.569 9.52987C9.34177 8.19102 7.21566 8.24121 6.05292 9.63649L2 14.5Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17",
        y1: "5",
        x2: "17",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11.5796",
        y1: "8.55704",
        x2: "11.5796",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Inbox = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2 14C2 13.4477 2.44772 13 3 13H8.38197C8.76074 13 9.107 13.214 9.27639 13.5528L9.5 14L9.99724 14.9945C9.99893 14.9979 10.0024 15 10.0062 15H13.9938C13.9976 15 14.0011 14.9979 14.0028 14.9945L14.7236 13.5528C14.893 13.214 15.2393 13 15.618 13H21C21.5523 13 22 13.4477 22 14V18C22 19.6569 20.6569 21 19 21H5C3.34315 21 2 19.6569 2 18V14Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M7.2629 3C5.92346 3 4.74631 3.88793 4.37833 5.17584L2.07695 13.2307C2.0259 13.4094 2 13.5943 2 13.7801V14C2 13.4477 2.44772 13 3 13H8.38197C8.76074 13 9.107 13.214 9.27639 13.5528L9.99724 14.9945C9.99893 14.9979 10.0024 15 10.0062 15H13.9938C13.9976 15 14.0011 14.9979 14.0028 14.9945L14.7236 13.5528C14.893 13.214 15.2393 13 15.618 13H21C21.5523 13 22 13.4477 22 14V13.7801C22 13.5943 21.9741 13.4094 21.923 13.2307L19.6217 5.17584C19.2537 3.88793 18.0765 3 16.7371 3H7.2629Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Info$4 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 11C12.5523 11 13 11.4477 13 12V17.0009C13 17.5532 12.5523 18.0009 12 18.0009C11.4477 18.0009 11 17.5532 11 17.0009V12C11 11.4477 11.4477 11 12 11Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "8",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "18.0009",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Instagram = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15ZM12 17C14.7614 17 17 14.7614 17 12C17 9.23858 14.7614 7 12 7C9.23858 7 7 9.23858 7 12C7 14.7614 9.23858 17 12 17Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "17",
      cy: "7",
      r: "1",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 4H8C5.79086 4 4 5.79086 4 8V16C4 18.2091 5.79086 20 8 20H16C18.2091 20 20 18.2091 20 16V8C20 5.79086 18.2091 4 16 4ZM8 2C4.68629 2 2 4.68629 2 8V16C2 19.3137 4.68629 22 8 22H16C19.3137 22 22 19.3137 22 16V8C22 4.68629 19.3137 2 16 2H8Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17",
        y1: "6",
        x2: "17",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Internet = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11.9999 22C14.0502 22 15.8123 19.5318 16.5839 16H21.1678C21.4453 15.365 21.6587 14.6956 21.7999 14H16.8999C16.9655 13.3538 16.9999 12.6849 16.9999 12C16.9999 11.3151 16.9655 10.6462 16.8999 10H21.7999C21.6587 9.30439 21.4453 8.635 21.1678 8H16.5839C15.8123 4.46819 14.0502 2 11.9999 2C9.9496 2 8.18752 4.46819 7.41596 8H2.832C2.55456 8.635 2.34115 9.30439 2.19995 10H7.09993C7.03435 10.6462 6.99992 11.3151 6.99992 12C6.99992 12.6849 7.03435 13.3538 7.09993 14H2.19995C2.34115 14.6956 2.55456 15.365 2.832 16H7.41596C8.18752 19.5318 9.9496 22 11.9999 22ZM14.5297 16C14.3211 16.8293 14.0531 17.5635 13.7466 18.1766C12.9481 19.7737 12.215 20 11.9999 20C11.7849 20 11.0518 19.7737 10.2532 18.1766C9.94668 17.5635 9.67872 16.8293 9.47011 16H14.5297ZM13.7466 5.82336C14.0531 6.43647 14.3211 7.17074 14.5297 8H9.47011C9.67872 7.17074 9.94668 6.43647 10.2532 5.82336C11.0518 4.22632 11.7849 4 11.9999 4C12.215 4 12.9481 4.22632 13.7466 5.82336ZM14.9999 12C14.9999 11.3051 14.9607 10.6359 14.8885 10H9.11137C9.0391 10.6359 8.99992 11.3051 8.99992 12C8.99992 12.6949 9.0391 13.3641 9.11137 14H14.8885C14.9607 13.3641 14.9999 12.6949 14.9999 12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.9999",
        y1: "2",
        x2: "11.9999",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Italics = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6.5 20C6.5 19.4477 6.94772 19 7.5 19H13C13.5523 19 14 19.4477 14 20C14 20.5523 13.5523 21 13 21H7.5C6.94772 21 6.5 20.5523 6.5 20Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 4C10 3.44772 10.4477 3 11 3H16.5C17.0523 3 17.5 3.44772 17.5 4C17.5 4.55228 17.0523 5 16.5 5H11C10.4477 5 10 4.55228 10 4Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M14.7808 5H12.7192L9.21924 19H11.2808L14.7808 5Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M14.0213 3C14.0066 2.99967 13.9919 2.99968 13.9772 3H14.0213Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M10.0221 21H9.97945C9.9937 21.0003 10.0079 21.0003 10.0221 21Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10.25",
        y1: "19",
        x2: "10.25",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13.75",
        y1: "3",
        x2: "13.75",
        y2: "5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2.99976",
        x2: "12",
        y2: "21.0002",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "2.99976",
        x2: "12",
        y2: "21.0002",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "12",
        y1: "2.99976",
        x2: "12",
        y2: "21.0002",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Justify = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 6C3 5.44772 3.44772 5 4 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55228 3 6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 10C3 9.44772 3.44772 9 4 9H20C20.5523 9 21 9.44772 21 10C21 10.5523 20.5523 11 20 11H4C3.44772 11 3 10.5523 3 10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 14C3 13.4477 3.44772 13 4 13H20C20.5523 13 21 13.4477 21 14C21 14.5523 20.5523 15 20 15H4C3.44772 15 3 14.5523 3 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 18C3 17.4477 3.44772 17 4 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H4C3.44772 19 3 18.5523 3 18Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "17",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Key = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M22 12C22 15.3137 19.3137 18 16 18C13.7792 18 11.8401 16.7934 10.8027 15H5.41427C5.14906 15 4.8947 14.8946 4.70717 14.7071L2.70696 12.7069C2.31649 12.3165 2.31642 11.6834 2.7068 11.2929L4.70574 9.29305C4.89329 9.10542 5.14771 9 5.413 9H10.8027C11.8401 7.2066 13.7792 6 16 6C19.3137 6 22 8.68629 22 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 14C17.1046 14 18 13.1046 18 12C18 10.8954 17.1046 10 16 10C14.8954 10 14 10.8954 14 12C14 13.1046 14.8954 14 16 14Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.207",
        y1: "6",
        x2: "12.207",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "16",
        y1: "10",
        x2: "16",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Laptop = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "3",
      width: "20",
      height: "15",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M1 20C1 19.4477 1.44772 19 2 19H22C22.5523 19 23 19.4477 23 20C23 20.5523 22.5523 21 22 21H2C1.44772 21 1 20.5523 1 20Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "19",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Laugh = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6.14944 14.0324C6.67592 16.1447 8.56055 18 12 18C15.4395 18 17.3242 16.1447 17.8506 14.0324C17.9883 13.4798 17.5246 13 16.9551 13H7.04494C6.47541 13 6.01171 13.4798 6.14944 14.0324Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "8",
      cy: "9",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "16",
      cy: "9",
      r: "1",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "8",
        y1: "8",
        x2: "8",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "16",
        y1: "8",
        x2: "16",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Layers = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M13.7087 3.30729C12.6049 2.90591 11.395 2.90591 10.2913 3.30729L3.24266 5.87042C1.48732 6.50872 1.4873 8.99128 3.24266 9.62959L10.2913 12.1927C11.395 12.5941 12.6049 12.5941 13.7087 12.1927L20.7573 9.62959C22.5126 8.99128 22.5126 6.50873 20.7573 5.87042L13.7087 3.30729Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.05781 12.395C2.24283 11.8746 2.81467 11.6028 3.33504 11.7878L11.33 14.6304C11.7634 14.7845 12.2367 14.7845 12.67 14.6304L20.665 11.7878C21.1854 11.6028 21.7572 11.8746 21.9422 12.395C22.1273 12.9154 21.8554 13.4872 21.335 13.6722L13.3401 16.5149C12.4733 16.8231 11.5268 16.8231 10.66 16.5149L2.66502 13.6722C2.14465 13.4872 1.87279 12.9154 2.05781 12.395Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.05781 16.645C2.24283 16.1246 2.81467 15.8528 3.33504 16.0378L11.33 18.8804C11.7634 19.0345 12.2367 19.0345 12.67 18.8804L20.665 16.0378C21.1854 15.8528 21.7572 16.1246 21.9422 16.645C22.1273 17.1654 21.8554 17.7372 21.335 17.9222L13.3401 20.7649C12.4733 21.0731 11.5268 21.0731 10.66 20.7649L2.66502 17.9222C2.14465 17.7372 1.87279 17.1654 2.05781 16.645Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3.00626",
        x2: "12",
        y2: "12.4938",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "11.7297",
        x2: "12",
        y2: "16.746",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "15.9797",
        x2: "12",
        y2: "20.996",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Layout = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M13 10C13 9.44772 12.5523 9 12 9H4C3.44772 9 3 9.44772 3 10V18C3 19.6569 4.34315 21 6 21H12C12.5523 21 13 20.5523 13 20V10Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16 21C15.4477 21 15 20.5523 15 20V10C15 9.44772 15.4477 9 16 9H20C20.5523 9 21 9.44772 21 10V18C21 19.6569 19.6569 21 18 21H16Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M3 6C3 4.34315 4.34315 3 6 3H18C19.6569 3 21 4.34315 21 6V6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55229 3 6V6Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Leaderboard = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2 13C2 11.3431 3.34315 10 5 10H10V19H3C2.44772 19 2 18.5523 2 18V13Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M14 12H19C20.6569 12 22 13.3431 22 15V18C22 18.5523 21.5523 19 21 19H14V12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M8 8C8 6.34315 9.34315 5 11 5H13C14.6569 5 16 6.34315 16 8V19H8V8Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "6",
        y1: "10",
        x2: "6",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18",
        y1: "12",
        x2: "18",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const LeftAlign = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 6C3 5.44772 3.44772 5 4 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55228 3 6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 10C3 9.44772 3.44772 9 4 9H14C14.5523 9 15 9.44772 15 10C15 10.5523 14.5523 11 14 11H4C3.44772 11 3 10.5523 3 10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 14C3 13.4477 3.44772 13 4 13H20C20.5523 13 21 13.4477 21 14C21 14.5523 20.5523 15 20 15H4C3.44772 15 3 14.5523 3 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 18C3 17.4477 3.44772 17 4 17H14C14.5523 17 15 17.4477 15 18C15 18.5523 14.5523 19 14 19H4C3.44772 19 3 18.5523 3 18Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9",
        y1: "9",
        x2: "9",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "9",
        y1: "17",
        x2: "9",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const LineChart = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 2C3.55228 2 4 2.44772 4 3V19C4 19.5523 4.44772 20 5 20H21C21.5523 20 22 20.4477 22 21C22 21.5523 21.5523 22 21 22H5C3.34315 22 2 20.6569 2 19V3C2 2.44772 2.44772 2 3 2Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21.7071 8.29289C22.0976 8.68342 22.0976 9.31658 21.7071 9.70711L17.1213 14.2929C15.9497 15.4645 14.0503 15.4645 12.8787 14.2929L10.7071 12.1213C10.3166 11.7308 9.68342 11.7308 9.29289 12.1213L7.20711 14.2071C6.81658 14.5976 6.18342 14.5976 5.79289 14.2071C5.40237 13.8166 5.40237 13.1834 5.79289 12.7929L7.87868 10.7071C9.05025 9.53553 10.9497 9.53553 12.1213 10.7071L14.2929 12.8787C14.6834 13.2692 15.3166 13.2692 15.7071 12.8787L20.2929 8.29289C20.6834 7.90237 21.3166 7.90237 21.7071 8.29289Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13.75",
        y1: "8",
        x2: "13.75",
        y2: "15.1716",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Link$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 12C2 9.23858 4.23858 7 7 7H10C10.5523 7 11 7.44772 11 8C11 8.55228 10.5523 9 10 9H7C5.34315 9 4 10.3431 4 12C4 13.6569 5.34315 15 7 15H10C10.5523 15 11 15.4477 11 16C11 16.5523 10.5523 17 10 17H7C4.23858 17 2 14.7614 2 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 8C13 7.44772 13.4477 7 14 7H17C19.7614 7 22 9.23858 22 12C22 14.7614 19.7614 17 17 17H14C13.4477 17 13 16.5523 13 16C13 15.4477 13.4477 15 14 15H17C18.6569 15 20 13.6569 20 12C20 10.3431 18.6569 9 17 9H14C13.4477 9 13 8.55228 13 8Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 12C8 11.4477 8.44772 11 9 11H15C15.5523 11 16 11.4477 16 12C16 12.5523 15.5523 13 15 13H9C8.44772 13 8 12.5523 8 12Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "6.5",
        y1: "7",
        x2: "6.5",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17.5",
        y1: "7",
        x2: "17.5",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const LinkedIn = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6 8C6.55228 8 7 8.44772 7 9V18C7 18.5523 6.55228 19 6 19C5.44772 19 5 18.5523 5 18V9C5 8.44772 5.44772 8 6 8Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11 8.99963C10.9998 8.44752 10.5522 8 10 8C9.44772 8 9 8.44772 9 9V13V18C9 18.5523 9.44772 19 10 19C10.5523 19 11 18.5523 11 18V13C11 11.3431 12.3431 10 14 10C15.6569 10 17 11.3431 17 13V18C17 18.5523 17.4477 19 18 19C18.5523 19 19 18.5523 19 18V13C19 10.2386 16.7614 8 14 8C12.8744 8 11.8357 8.37194 11 8.99963Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M7 6C7 6.55228 6.55228 7 6 7C5.44772 7 5 6.55228 5 6C5 5.44772 5.44772 5 6 5C6.55228 5 7 5.44772 7 6Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "6",
        y1: "8",
        x2: "6",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "14",
        y1: "8",
        x2: "14",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "6",
        y1: "5",
        x2: "6",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const List = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 7C7 6.44772 7.44772 6 8 6H20C20.5523 6 21 6.44772 21 7C21 7.55228 20.5523 8 20 8H8C7.44772 8 7 7.55228 7 7Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 12C7 11.4477 7.44772 11 8 11H20C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13H8C7.44772 13 7 12.5523 7 12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 17C7 16.4477 7.44772 16 8 16H20C20.5523 16 21 16.4477 21 17C21 17.5523 20.5523 18 20 18H8C7.44772 18 7 17.5523 7 17Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "4",
      cy: "7",
      r: "1",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "4",
      cy: "12",
      r: "1",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "4",
      cy: "17",
      r: "1",
      fill: "url(#paint5_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "14",
        y1: "6",
        x2: "14",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "14",
        y1: "11",
        x2: "14",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "14",
        y1: "16",
        x2: "14",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "4",
        y1: "6",
        x2: "4",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "4",
        y1: "11",
        x2: "4",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint5_linear",
        x1: "4",
        y1: "16",
        x2: "4",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Live = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 11.9004C10 13.005 10.8954 13.9004 12 13.9004C13.1046 13.9004 14 13.005 14 11.9004C14 10.7958 13.1046 9.90039 12 9.90039C10.8954 9.90039 10 10.7958 10 11.9004Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 11.9004C16 10.7564 15.617 9.70477 14.9718 8.86265C14.6359 8.42426 14.719 7.79657 15.1574 7.46067C15.5958 7.12476 16.2234 7.20785 16.5594 7.64624C17.4627 8.82522 18 10.3015 18 11.9004C18 13.5668 17.4164 15.0997 16.4434 16.3018C16.0959 16.7311 15.4662 16.7974 15.0369 16.4499C14.6077 16.1025 14.5413 15.4728 14.8888 15.0435C15.5842 14.1844 16 13.0923 16 11.9004Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 11.9004C8 10.7549 8.38397 9.70196 9.03075 8.85928C9.36702 8.42117 9.28446 7.79341 8.84635 7.45714C8.40823 7.12088 7.78048 7.20344 7.44421 7.64155C6.53871 8.82129 6 10.2993 6 11.9004C6 13.5655 6.58267 15.0973 7.55437 16.299C7.90163 16.7284 8.53128 16.7951 8.96074 16.4478C9.39019 16.1006 9.45682 15.4709 9.10956 15.0415C8.41518 14.1827 8 13.0914 8 11.9004Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20 11.9004C20 9.66837 19.1888 7.62835 17.8438 6.05526C17.4849 5.63549 17.5342 5.00425 17.954 4.64535C18.3738 4.28645 19.005 4.3358 19.3639 4.75557C21.0069 6.67719 22 9.1741 22 11.9004C22 14.6895 20.9607 17.2382 19.2497 19.1767C18.8843 19.5908 18.2523 19.6302 17.8383 19.2647C17.4242 18.8993 17.3848 18.2673 17.7503 17.8532C19.1511 16.2661 20 14.1836 20 11.9004Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 11.9004C4 9.66855 4.81114 7.62864 6.15595 6.05559C6.51483 5.6358 6.46545 5.00457 6.04566 4.64568C5.62588 4.2868 4.99464 4.33618 4.63576 4.75597C2.99299 6.67754 2 9.17431 2 11.9004C2 14.6857 3.03649 17.2314 4.74335 19.1689C5.10842 19.5833 5.74032 19.6233 6.15474 19.2582C6.56915 18.8932 6.60915 18.2613 6.24408 17.8469C4.8466 16.2605 4 14.1806 4 11.9004Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "14",
        y1: "11.9004",
        x2: "10",
        y2: "11.9004",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18",
        y1: "11.9635",
        x2: "14.6661",
        y2: "11.9635",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "6",
        y1: "11.9603",
        x2: "9.332",
        y2: "11.9603",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "22",
        y1: "11.9602",
        x2: "17.5",
        y2: "11.9602",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "2",
        y1: "11.9568",
        x2: "6.49373",
        y2: "11.9568",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Loader = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 2C12.5523 2 13 2.44772 13 3V5C13 5.55228 12.5523 6 12 6C11.4477 6 11 5.55228 11 5V3C11 2.44772 11.4477 2 12 2Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 18C12.5523 18 13 18.4477 13 19V21C13 21.5523 12.5523 22 12 22C11.4477 22 11 21.5523 11 21V19C11 18.4477 11.4477 18 12 18Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.92891 4.92893C5.31943 4.53841 5.9526 4.53841 6.34312 4.92893L7.75734 6.34315C8.14786 6.73367 8.14786 7.36684 7.75734 7.75736C7.36681 8.14788 6.73365 8.14788 6.34312 7.75736L4.92891 6.34315C4.53838 5.95262 4.53838 5.31946 4.92891 4.92893Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.2426 16.2426C16.6332 15.8521 17.2663 15.8521 17.6568 16.2426L19.0711 17.6569C19.4616 18.0474 19.4616 18.6805 19.0711 19.0711C18.6805 19.4616 18.0474 19.4616 17.6568 19.0711L16.2426 17.6569C15.8521 17.2663 15.8521 16.6332 16.2426 16.2426Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 12C2 11.4477 2.44772 11 3 11L5 11C5.55228 11 6 11.4477 6 12C6 12.5523 5.55228 13 5 13L3 13C2.44772 13 2 12.5523 2 12Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18 12C18 11.4477 18.4477 11 19 11L21 11C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13L19 13C18.4477 13 18 12.5523 18 12Z",
      fill: "url(#paint5_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.92888 19.0711C4.53836 18.6805 4.53836 18.0474 4.92888 17.6569L6.34309 16.2426C6.73362 15.8521 7.36678 15.8521 7.75731 16.2426C8.14783 16.6332 8.14783 17.2663 7.75731 17.6569L6.34309 19.0711C5.95257 19.4616 5.3194 19.4616 4.92888 19.0711Z",
      fill: "url(#paint6_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.2426 7.75736C15.8521 7.36684 15.8521 6.73367 16.2426 6.34315L17.6568 4.92894C18.0473 4.53841 18.6805 4.53841 19.071 4.92894C19.4616 5.31946 19.4616 5.95263 19.071 6.34315L17.6568 7.75736C17.2663 8.14789 16.6331 8.14789 16.2426 7.75736Z",
      fill: "url(#paint7_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "18",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "4.92891",
        y1: "4.92893",
        x2: "7.75734",
        y2: "7.75736",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "16.2426",
        y1: "16.2426",
        x2: "19.0711",
        y2: "19.0711",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "2",
        y1: "12",
        x2: "6",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint5_linear",
        x1: "18",
        y1: "12",
        x2: "22",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint6_linear",
        x1: "4.92888",
        y1: "19.0711",
        x2: "7.75731",
        y2: "16.2426",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint7_linear",
        x1: "16.2426",
        y1: "7.75736",
        x2: "19.071",
        y2: "4.92894",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Location = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M18.2725 15.0565C19.3752 13.681 20.0348 11.9349 20.0348 10.0348C20.0348 5.5973 16.4375 2 12 2C7.5625 2 3.96521 5.5973 3.96521 10.0348C3.96521 11.9349 4.62478 13.681 5.72747 15.0565L5.73397 15.0646C5.73397 15.0646 8.52282 18.7985 10.6792 21.4386C11.3689 22.2831 12.6313 22.2834 13.3215 21.4393C15.4847 18.7933 18.2772 15.0565 18.2772 15.0565H18.2725Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "23",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Lock = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 8V7C7 4.23858 9.23858 2 12 2C14.7614 2 17 4.23858 17 7V8C18.6569 8 20 9.34315 20 11V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V11C4 9.34315 5.34315 8 7 8ZM9 7C9 5.34315 10.3431 4 12 4C13.6569 4 15 5.34315 15 7V8H9V7Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13 15.7324C13.5978 15.3866 14 14.7403 14 14C14 12.8954 13.1046 12 12 12C10.8954 12 10 12.8954 10 14C10 14.7403 10.4022 15.3866 11 15.7324V17C11 17.5523 11.4477 18 12 18C12.5523 18 13 17.5523 13 17V15.7324Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "12",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Login = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M18 2C19.6569 2 21 3.34315 21 5V19C21 20.6569 19.6569 22 18 22H12C10.3431 22 9 20.6569 9 19V5C9 3.34315 10.3431 2 12 2H18Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M12.7071 7.79289C12.3166 7.40237 11.6834 7.40237 11.2929 7.79289C10.9024 8.18342 10.9024 8.81658 11.2929 9.20711L13.0858 11H4C3.44772 11 3 11.4477 3 12C3 12.5523 3.44772 13 4 13H13.0858L11.2929 14.7929C10.9024 15.1834 10.9024 15.8166 11.2929 16.2071C11.6834 16.5976 12.3166 16.5976 12.7071 16.2071L15.5 13.4142C16.2811 12.6332 16.281 11.3668 15.5 10.5858L12.7071 7.79289Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "15",
        y1: "2",
        x2: "15",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9.54289",
        y1: "7.5",
        x2: "9.54289",
        y2: "16.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Logout = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12 2C13.6569 2 15 3.34315 15 5V19C15 20.6569 13.6569 22 12 22H6C4.34315 22 3 20.6569 3 19V5C3 3.34315 4.34315 2 6 2H12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17.7071 7.79289C17.3166 7.40237 16.6834 7.40237 16.2929 7.79289C15.9024 8.18342 15.9024 8.81658 16.2929 9.20711L18.0858 11H9C8.44772 11 8 11.4477 8 12C8 12.5523 8.44772 13 9 13H18.0858L16.2929 14.7929C15.9024 15.1834 15.9024 15.8166 16.2929 16.2071C16.6834 16.5976 17.3166 16.5976 17.7071 16.2071L20.5 13.4142C21.2811 12.6332 21.281 11.3668 20.5 10.5858L17.7071 7.79289Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "9",
        y1: "2",
        x2: "9",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "14.5429",
        y1: "7.5",
        x2: "14.5429",
        y2: "16.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Mail = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "4",
      width: "20",
      height: "16",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M10.91 12.2915L2 6.5C2 5.11929 3.11929 4 4.5 4H19.5C20.8807 4 22 5.11929 22 6.5L13.09 12.2915C12.4272 12.7223 11.5728 12.7223 10.91 12.2915Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Map$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M8.14074 3.23568L4.20645 4.3148C2.90334 4.67223 2 5.85671 2 7.20795V17.7219C2 19.3719 3.57012 20.5693 5.16129 20.1329L8.14073 19.3157C8.70147 19.1619 9.29483 19.1743 9.84861 19.3516L14.1514 20.7284C14.7052 20.9057 15.2985 20.9181 15.8593 20.7643L19.7936 19.6852C21.0967 19.3278 22 18.1433 22 16.7921V6.27805C22 4.62811 20.4299 3.43066 18.8387 3.8671L15.8593 4.68432C15.2985 4.83812 14.7052 4.82566 14.1514 4.64845L9.84861 3.27156C9.29483 3.09434 8.70147 3.08188 8.14074 3.23568Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M15 4.79045V20.8705C14.7133 20.8642 14.4274 20.8168 14.1514 20.7284L9.84861 19.3516C9.57259 19.2632 9.28674 19.2158 9 19.2095V3.12955C9.28674 3.13583 9.57259 3.18323 9.84861 3.27156L14.1514 4.64845C14.4274 4.73677 14.7133 4.78417 15 4.79045Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "3.12955",
        x2: "12",
        y2: "20.8705",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Meh = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "8",
      cy: "9",
      r: "1",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "16",
      cy: "9",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 15C7 14.4477 7.44772 14 8 14H16C16.5523 14 17 14.4477 17 15C17 15.5523 16.5523 16 16 16H8C7.44772 16 7 15.5523 7 15Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "8",
        y1: "8",
        x2: "8",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "16",
        y1: "8",
        x2: "16",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Menu$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 16C4 15.4477 4.44772 15 5 15H19C19.5523 15 20 15.4477 20 16C20 16.5523 19.5523 17 19 17H5C4.44772 17 4 16.5523 4 16Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 8C4 7.44772 4.44772 7 5 7H19C19.5523 7 20 7.44772 20 8C20 8.55228 19.5523 9 19 9H5C4.44772 9 4 8.55228 4 8Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "15",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Message$2 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2 6a3 3 0 013-3h14a3 3 0 013 3v10a3 3 0 01-3 3H8l-2.72 2.266C3.978 22.352 2 21.426 2 19.73V6z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 9a1 1 0 011-1h8a1 1 0 110 2H8a1 1 0 01-1-1z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 13a1 1 0 011-1h4a1 1 0 110 2H8a1 1 0 01-1-1z",
      fill: "url(#prefix__paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 3,
        x2: 12,
        y2: 24,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 12,
        y1: 8,
        x2: 12,
        y2: 10,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint2_linear",
        x1: 10,
        y1: 12,
        x2: 10,
        y2: 14,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Messages = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M22 13C22 14.6569 20.6569 16 19 16H9C7.34315 16 6 14.6569 6 13V7C6 5.34315 7.34315 4 9 4H16L18.8906 2.07293C20.2197 1.18686 22 2.13964 22 3.73703V13Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2 11C2 9.34315 3.34315 8 5 8H15C16.6569 8 18 9.34315 18 11V17C18 18.6569 16.6569 20 15 20H7L5.24939 21.4005C3.93986 22.4481 2 21.5158 2 19.8388V11Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6 14C6 13.4477 6.44772 13 7 13H13C13.5523 13 14 13.4477 14 14C14 14.5523 13.5523 15 13 15H7C6.44772 15 6 14.5523 6 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "14",
        y1: "16",
        x2: "14",
        y2: "0",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "10",
        y1: "8",
        x2: "10",
        y2: "24",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "10",
        y1: "13",
        x2: "10",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const MicOff = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 7.58414V11C9 12.6569 10.3431 14 12 14C12.9343 14 13.7689 13.5729 14.3191 12.9032L9 7.58414ZM15 10.7557V5C15 3.34315 13.6569 2 12 2C10.4223 2 9.12905 3.21787 9.00908 4.76479L15 10.7557Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15.7374 14.3215C14.8215 15.3513 13.4865 16 12 16C9.23858 16 7 13.7614 7 11C7 10.4477 6.55228 10 6 10C5.44772 10 5 10.4477 5 11C5 14.5265 7.60771 17.4439 11 17.9291V20H9C8.44772 20 8 20.4477 8 21C8 21.5523 8.44772 22 9 22H15C15.5523 22 16 21.5523 16 21C16 20.4477 15.5523 20 15 20H13V17.9291C14.6346 17.6953 16.087 16.8968 17.1533 15.7375L15.7374 14.3215ZM18.2997 14.0554C18.7484 13.1322 19 12.0955 19 11C19 10.4477 18.5523 10 18 10C17.4477 10 17 10.4477 17 11C17 11.5301 16.9175 12.0409 16.7647 12.5204L18.2997 14.0554Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.29289 2.29289C2.68342 1.90237 3.31658 1.90237 3.70711 2.29289L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L2.29289 3.70711C1.90237 3.31658 1.90237 2.68342 2.29289 2.29289Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "10",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Mic = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "9",
      y: "2",
      width: "6",
      height: "12",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M7 11C7 10.4477 6.55228 10 6 10C5.44772 10 5 10.4477 5 11C5 14.5265 7.60771 17.4439 11 17.9291V20H9C8.44772 20 8 20.4477 8 21C8 21.5523 8.44772 22 9 22H15C15.5523 22 16 21.5523 16 21C16 20.4477 15.5523 20 15 20H13V17.9291C16.3923 17.4439 19 14.5265 19 11C19 10.4477 18.5523 10 18 10C17.4477 10 17 10.4477 17 11C17 13.7614 14.7614 16 12 16C9.23858 16 7 13.7614 7 11Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "10",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Mobile = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M5 5C5 3.34315 6.34315 2 8 2H16C17.6569 2 19 3.34315 19 5V19C19 20.6569 17.6569 22 16 22H8C6.34315 22 5 20.6569 5 19V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M8 2H16V2C16 3.10457 15.1046 4 14 4H10C8.89543 4 8 3.10457 8 2V2Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "4",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Moon = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.2691 15.3752C20.6118 14.5798 19.866 13.8166 19 13.8166V13.8166C14.0294 13.8166 10 9.78715 10 4.81658V4.81658C10 3.95053 9.23674 3.20475 8.4414 3.54749C5.24067 4.92676 3 8.11 3 11.8166C3 16.7871 7.02944 20.8166 12 20.8166C15.7066 20.8166 18.8898 18.5759 20.2691 15.3752Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.6771",
        y1: "3.46231",
        x2: "11.6771",
        y2: "20.8166",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const MoreHorizontal = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "6",
      cy: "12",
      r: "2",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "2",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "18",
      cy: "12",
      r: "2",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "6",
        y1: "10",
        x2: "6",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "10",
        x2: "12",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "18",
        y1: "10",
        x2: "18",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const MoreVertical = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "6",
      r: "2",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "2",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "18",
      r: "2",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "10",
        x2: "12",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "16",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Mouse = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "5",
      y: "2",
      width: "14",
      height: "20",
      rx: "7",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 6C12.5523 6 13 6.44772 13 7L13 10C13 10.5523 12.5523 11 12 11C11.4477 11 11 10.5523 11 10L11 7C11 6.44771 11.4477 6 12 6Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13",
        y1: "8.5",
        x2: "11",
        y2: "8.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Music = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12 6.34233C12 4.96573 12.9369 3.76578 14.2724 3.4319L16.3837 2.90408C18.2206 2.44485 20 3.83417 20 5.72761V5.72761C20 7.06311 19.0911 8.22723 17.7955 8.55114L12 10V6.34233Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M12 10V13.5351C11.4117 13.1948 10.7286 13 10 13C7.79086 13 6 14.7909 6 17C6 19.2091 7.79086 21 10 21C12.2091 21 14 19.2091 14 17V9.5L12 10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "16",
        y1: "2",
        x2: "16",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "10",
        y1: "9.5",
        x2: "10",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const New = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M13.9458 2.3444C12.8245 1.38886 11.1754 1.38886 10.0541 2.3444L8.78264 3.42794C8.62248 3.56443 8.42334 3.64692 8.21357 3.66366L6.54833 3.79654C5.0798 3.91373 3.91367 5.07986 3.79648 6.54839L3.66359 8.21363C3.64686 8.4234 3.56437 8.62254 3.42788 8.7827L2.34434 10.0542C1.3888 11.1754 1.3888 12.8246 2.34434 13.9459L3.42788 15.2173C3.56437 15.3775 3.64686 15.5766 3.66359 15.7864L3.79648 17.4517C3.91367 18.9202 5.0798 20.0863 6.54833 20.2035L8.21357 20.3364C8.42334 20.3531 8.62248 20.4356 8.78264 20.5721L10.0541 21.6556C11.1754 22.6112 12.8245 22.6112 13.9458 21.6556L15.2173 20.5721C15.3774 20.4356 15.5766 20.3531 15.7863 20.3364L17.4516 20.2035C18.9201 20.0863 20.0863 18.9202 20.2034 17.4517L20.3363 15.7864C20.3531 15.5766 20.4356 15.3775 20.572 15.2173L21.6556 13.9459C22.6111 12.8246 22.6111 11.1754 21.6556 10.0542L20.572 8.7827C20.4356 8.62254 20.3531 8.4234 20.3363 8.21363L20.2034 6.54839C20.0863 5.07986 18.9201 3.91373 17.4516 3.79654L15.7863 3.66366C15.5766 3.64692 15.3774 3.56443 15.2173 3.42794L13.9458 2.3444Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1.62775",
        x2: "12",
        y2: "22.3723",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Next = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M15.6041 9.4142C17.5761 10.5741 17.5761 13.4259 15.6041 14.5858L7.52106 19.3406C5.52116 20.517 3 19.075 3 16.7548V7.24525C3 4.925 5.52116 3.48304 7.52106 4.65945L15.6041 9.4142Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20 4C20.5523 4 21 4.44772 21 5V19C21 19.5523 20.5523 20 20 20C19.4477 20 19 19.5523 19 19V5C19 4.44772 19.4477 4 20 4Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.5",
        y1: "2",
        x2: "11.5",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "20",
        y1: "4",
        x2: "20",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Note = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6 4C5.44772 4 5 4.44772 5 5V19C5 19.5523 5.44772 20 6 20H18C18.5523 20 19 19.5523 19 19V12C19 11.4477 19.4477 11 20 11C20.5523 11 21 11.4477 21 12V19C21 20.6569 19.6569 22 18 22H6C4.34315 22 3 20.6569 3 19V5C3 3.34315 4.34315 2 6 2H12C12.5523 2 13 2.44772 13 3C13 3.55228 12.5523 4 12 4H6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M15.6066 4.12132L14.2573 5.47055L18.5 9.71319L19.8492 8.36397C21.0208 7.19239 21.0208 5.2929 19.8492 4.12133C18.6776 2.94975 16.7781 2.94975 15.6066 4.12132Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M8.44125 16.6607L11.7411 16.1893C11.9553 16.1587 12.1538 16.0594 12.3068 15.9064L18.5 9.71322L14.2574 5.47058L8.06413 11.6638C7.91113 11.8168 7.81188 12.0153 7.78128 12.2295L7.30988 15.5293C7.2156 16.1893 7.78128 16.755 8.44125 16.6607Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17.4926",
        y1: "3.24265",
        x2: "17.4926",
        y2: "9.71319",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12.8998",
        y1: "5.47058",
        x2: "12.8998",
        y2: "16.671",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Notes = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "5",
      width: "16",
      height: "10",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "9",
      width: "16",
      height: "10",
      rx: "3",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "14",
      cy: "14",
      r: "2",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "9",
      cy: "14",
      r: "1",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "19",
      cy: "14",
      r: "1",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10",
        y1: "5",
        x2: "10",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "14",
        y1: "9",
        x2: "14",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "14",
        y1: "12",
        x2: "14",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "9",
        y1: "13",
        x2: "9",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "19",
        y1: "13",
        x2: "19",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const NotificationOff = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "18",
      r: "4",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M22 16.5858C22 16.9141 21.8881 17.2163 21.7004 17.4563L7.5923 3.34813C8.86046 2.49678 10.3867 2 12.0293 2C16.4314 2 20 5.56859 20 9.97067L20 13.1716C20 13.702 20.2107 14.2107 20.5858 14.5858L21.5858 15.5858C21.851 15.851 22 16.2107 22 16.5858Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6.08015 4.66593L6.08087 4.66512L19.4157 18H19.4142L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L16.5858 18H3.40408C2.62863 18 2 17.3714 2 16.5959C2 16.2151 2.15471 15.8506 2.42864 15.586L3.45759 14.5922C3.84928 14.2139 4.06977 13.6922 4.06814 13.1476L4.05867 9.9946C4.05473 8.67981 4.3693 7.43859 4.92966 6.34388L2.29289 3.70711C1.90237 3.31658 1.90237 2.68342 2.29289 2.29289C2.68342 1.90237 3.31658 1.90237 3.70711 2.29289L6.08015 4.66593Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Notification = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "18",
      r: "4",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M20.5858 18H3.40408C2.62863 18 2 17.3714 2 16.5959C2 16.2151 2.15471 15.8506 2.42864 15.586L3.45759 14.5922C3.84928 14.2139 4.06977 13.6922 4.06814 13.1476L4.05867 9.9946C4.04543 5.58319 7.61789 2 12.0293 2C16.4314 2 20 5.56859 20 9.97067L20 13.1716C20 13.702 20.2107 14.2107 20.5858 14.5858L21.5858 15.5858C21.851 15.851 22 16.2107 22 16.5858C22 17.3668 21.3668 18 20.5858 18Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Open = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M19 9C19 9.55229 19.4477 10 20 10C20.5523 10 21 9.55229 21 9V5C21 3.89543 20.1046 3 19 3H15C14.4477 3 14 3.44772 14 4C14 4.55228 14.4477 5 15 5L17.5858 5L11.2929 11.2929C10.9024 11.6834 10.9024 12.3166 11.2929 12.7071C11.6834 13.0976 12.3166 13.0976 12.7071 12.7071L19 6.41421V9Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 6C3 4.34315 4.34315 3 6 3H11C11.5523 3 12 3.44772 12 4C12 4.55228 11.5523 5 11 5H6C5.44772 5 5 5.44772 5 6V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V13C19 12.4477 19.4477 12 20 12C20.5523 12 21 12.4477 21 13V18C21 19.6569 19.6569 21 18 21H6C4.34315 21 3 19.6569 3 18V6Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "16",
        y1: "3",
        x2: "16",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const PaintRoller = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 5C17 4.44772 17.4477 4 18 4H19C20.6569 4 22 5.34315 22 7V8.86039C22 10.2904 20.9906 11.5217 19.5883 11.8021L12.8039 13.159C12.3365 13.2525 12 13.6629 12 14.1396V15C12 15.5523 11.5523 16 11 16C10.4477 16 10 15.5523 10 15V14.1396C10 12.7096 11.0094 11.4783 12.4117 11.1979L19.1961 9.84097C19.6635 9.74749 20 9.33707 20 8.86039V7C20 6.44772 19.5523 6 19 6H18C17.4477 6 17 5.55228 17 5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 2C4.34315 2 3 3.34315 3 5V6C3 7.65685 4.34315 9 6 9H16C17.6569 9 19 7.65685 19 6V5C19 3.34315 17.6569 2 16 2H6Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "10",
      y: "15",
      width: "2",
      height: "6",
      rx: "1",
      stroke: "url(#paint2_linear)",
      "stroke-width": "2"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "16",
        y1: "4",
        x2: "16",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11",
        y1: "2",
        x2: "11",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11",
        y1: "14",
        x2: "11",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Pause = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 4C7.44772 4 7 4.44772 7 5V19C7 19.5523 7.44772 20 8 20C8.55228 20 9 19.5523 9 19V5C9 4.44772 8.55228 4 8 4Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16 4C15.4477 4 15 4.44772 15 5V19C15 19.5523 15.4477 20 16 20C16.5523 20 17 19.5523 17 19V5C17 4.44772 16.5523 4 16 4Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "8",
        y1: "4",
        x2: "8",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "16",
        y1: "4",
        x2: "16",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Payment = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "4",
      width: "20",
      height: "16",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 10H2V8H22V10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 15C4 14.4477 4.44772 14 5 14H11C11.5523 14 12 14.4477 12 15C12 15.5523 11.5523 16 11 16H5C4.44772 16 4 15.5523 4 15Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "8",
        x2: "12",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "8",
        y1: "14",
        x2: "8",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Pen = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M11.269 2.28326L6.48938 7.40423C5.60154 8.35549 5.42815 9.77064 6.06008 10.9081L9.44445 17H14.5556L17.9399 10.9081C18.5719 9.77064 18.3985 8.35549 17.5106 7.40423L12.7311 2.28326C12.3357 1.85968 11.6643 1.85968 11.269 2.28326Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 3C13 2.44772 12.5523 2 12 2C11.4477 2 11 2.44772 11 3V8.26756C10.4022 8.61337 10 9.25972 10 10C10 11.1046 10.8954 12 12 12C13.1046 12 14 11.1046 14 10C14 9.25972 13.5978 8.61337 13 8.26756V3Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "17",
      width: "12",
      height: "5",
      rx: "2.5",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1.96558",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "17",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Percent = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 9C8.10457 9 9 8.10457 9 7C9 5.89543 8.10457 5 7 5C5.89543 5 5 5.89543 5 7C5 8.10457 5.89543 9 7 9ZM7 11C9.20914 11 11 9.20914 11 7C11 4.79086 9.20914 3 7 3C4.79086 3 3 4.79086 3 7C3 9.20914 4.79086 11 7 11Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 19C18.1046 19 19 18.1046 19 17C19 15.8954 18.1046 15 17 15C15.8954 15 15 15.8954 15 17C15 18.1046 15.8954 19 17 19ZM17 21C19.2091 21 21 19.2091 21 17C21 14.7909 19.2091 13 17 13C14.7909 13 13 14.7909 13 17C13 19.2091 14.7909 21 17 21Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.6001 3.2C19.0419 3.53137 19.1314 4.15817 18.8001 4.6L6.80006 20.6C6.46869 21.0418 5.84189 21.1314 5.40006 20.8C4.95823 20.4686 4.86869 19.8418 5.20006 19.4L17.2001 3.4C17.5314 2.95817 18.1582 2.86863 18.6001 3.2Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "7",
        y1: "3",
        x2: "7",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17",
        y1: "13",
        x2: "17",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12.0001",
        y1: "2.99994",
        x2: "12.0001",
        y2: "21.0001",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Person = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "7",
      r: "5",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M3 19V20C3 21.1046 3.89543 22 5 22H19C20.1046 22 21 21.1046 21 20V19C21 16.2386 18.7614 14 16 14H8C5.23858 14 3 16.2386 3 19Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const PhoneCallIncoming = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsxs$2("g", {
      "clip-path": "url(#clip0)",
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "M2.89996 10.489C1.44046 7.83826 2.74822 4.82598 5.28873 3.18212V3.18212C6.32355 2.51253 7.70098 2.76584 8.42987 3.75979L9.9375 5.81565C10.6026 6.72262 10.7046 7.92542 10.2016 8.93138L9.79184 9.75084C9.67323 9.98805 9.65448 10.2625 9.77581 10.4983C9.99686 10.928 10.4676 11.6894 11.3744 12.5962C12.2812 13.503 13.0426 13.9737 13.4723 14.1948C13.7081 14.3161 13.9825 14.2973 14.2197 14.1787L15.0392 13.769C16.0451 13.266 17.2479 13.3679 18.1549 14.0331L20.2108 15.5407C21.2047 16.2696 21.458 17.647 20.7884 18.6818V18.6818C19.1446 21.2223 16.1323 22.5301 13.4816 21.0706C11.7516 20.1181 9.67124 18.6712 7.48528 16.4853C5.29932 14.2993 3.85249 12.219 2.89996 10.489Z",
        fill: "url(#paint0_linear)"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M20.2071 5.20711C20.5976 4.81658 20.5976 4.18342 20.2071 3.79289C19.8166 3.40237 19.1834 3.40237 18.7929 3.79289L16 6.58579V6C16 5.44772 15.5523 5 15 5C14.4477 5 14 5.44772 14 6V8.5C14 9.32843 14.6716 10 15.5 10H18C18.5523 10 19 9.55228 19 9C19 8.44772 18.5523 8 18 8H17.4142L20.2071 5.20711Z",
        fill: "url(#paint1_linear)"
      })]
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "2.53553",
        y1: "4.46447",
        x2: "19.5061",
        y2: "21.435",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17.25",
        y1: "3.5",
        x2: "17.25",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsx$3("clipPath", {
        id: "clip0",
        children: /* @__PURE__ */ jsx$3("rect", {
          width: "100%",
          height: "100%",
          fill: "white"
        })
      })]
    })]
  }));
});
const PhoneCallOutgoing = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsxs$2("g", {
      "clip-path": "url(#clip0)",
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "M2.89996 10.489C1.44046 7.83826 2.74822 4.82598 5.28873 3.18212V3.18212C6.32355 2.51253 7.70098 2.76584 8.42987 3.75979L9.9375 5.81565C10.6026 6.72262 10.7046 7.92542 10.2016 8.93138L9.79184 9.75084C9.67323 9.98805 9.65448 10.2625 9.77581 10.4983C9.99686 10.928 10.4676 11.6894 11.3744 12.5962C12.2812 13.503 13.0426 13.9737 13.4723 14.1948C13.7081 14.3161 13.9825 14.2973 14.2197 14.1787L15.0392 13.769C16.0451 13.266 17.2479 13.3679 18.1549 14.0331L20.2108 15.5407C21.2047 16.2696 21.458 17.647 20.7884 18.6818V18.6818C19.1446 21.2223 16.1323 22.5301 13.4816 21.0706C11.7516 20.1181 9.67124 18.6712 7.48528 16.4853C5.29932 14.2993 3.85249 12.219 2.89996 10.489Z",
        fill: "url(#paint0_linear)"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M16 3.5C15.4477 3.5 15 3.94772 15 4.5C15 5.05228 15.4477 5.5 16 5.5H17.0858L14.2929 8.29289C13.9024 8.68342 13.9024 9.31658 14.2929 9.70711C14.6834 10.0976 15.3166 10.0976 15.7071 9.70711L18.5 6.91421V8C18.5 8.55228 18.9477 9 19.5 9C20.0523 9 20.5 8.55228 20.5 8V5.5C20.5 4.39543 19.6046 3.5 18.5 3.5H16Z",
        fill: "url(#paint1_linear)"
      })]
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "2.53553",
        y1: "4.46447",
        x2: "19.5061",
        y2: "21.435",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17.25",
        y1: "3.5",
        x2: "17.25",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsx$3("clipPath", {
        id: "clip0",
        children: /* @__PURE__ */ jsx$3("rect", {
          width: "100%",
          height: "100%",
          fill: "white"
        })
      })]
    })]
  }));
});
const PhoneCallRejected = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsxs$2("g", {
      "clip-path": "url(#clip0)",
      children: [/* @__PURE__ */ jsx$3("path", {
        d: "M2.89996 10.489C1.44046 7.83826 2.74822 4.82598 5.28873 3.18212V3.18212C6.32355 2.51253 7.70098 2.76584 8.42987 3.75979L9.9375 5.81565C10.6026 6.72262 10.7046 7.92542 10.2016 8.93138L9.79184 9.75084C9.67323 9.98805 9.65448 10.2625 9.77581 10.4983C9.99686 10.928 10.4676 11.6894 11.3744 12.5962C12.2812 13.503 13.0426 13.9737 13.4723 14.1948C13.7081 14.3161 13.9825 14.2973 14.2197 14.1787L15.0392 13.769C16.0451 13.266 17.2479 13.3679 18.1549 14.0331L20.2108 15.5407C21.2047 16.2696 21.458 17.647 20.7884 18.6818V18.6818C19.1446 21.2223 16.1323 22.5301 13.4816 21.0706C11.7516 20.1181 9.67124 18.6712 7.48528 16.4853C5.29932 14.2993 3.85249 12.219 2.89996 10.489Z",
        fill: "url(#paint0_linear)"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M14.2929 8.29289C13.9024 8.68342 13.9024 9.31658 14.2929 9.70711C14.6834 10.0976 15.3166 10.0976 15.7071 9.70711L17 8.41425L18.2929 9.70715C18.6834 10.0977 19.3166 10.0977 19.7071 9.70715C20.0976 9.31663 20.0976 8.68346 19.7071 8.29293L18.4142 7.00003L19.7071 5.70711C20.0977 5.31658 20.0977 4.68342 19.7071 4.29289C19.3166 3.90237 18.6834 3.90237 18.2929 4.29289L17 5.58582L15.7071 4.29292C15.3166 3.9024 14.6834 3.9024 14.2929 4.29292C13.9024 4.68344 13.9024 5.31661 14.2929 5.70714L15.5858 7.00003L14.2929 8.29289Z",
        fill: "url(#paint1_linear)"
      })]
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "2.53553",
        y1: "4.46447",
        x2: "19.5061",
        y2: "21.435",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17",
        y1: "4",
        x2: "17",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsx$3("clipPath", {
        id: "clip0",
        children: /* @__PURE__ */ jsx$3("rect", {
          width: "100%",
          height: "100%",
          fill: "white"
        })
      })]
    })]
  }));
});
const Phone = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      "clip-path": "url(#clip0)",
      children: /* @__PURE__ */ jsx$3("path", {
        d: "M2.89996 10.489C1.44046 7.83826 2.74822 4.82598 5.28873 3.18212V3.18212C6.32355 2.51253 7.70098 2.76584 8.42987 3.75979L9.9375 5.81565C10.6026 6.72262 10.7046 7.92542 10.2016 8.93138L9.79184 9.75084C9.67323 9.98805 9.65448 10.2625 9.77581 10.4983C9.99686 10.928 10.4676 11.6894 11.3744 12.5962C12.2812 13.503 13.0426 13.9737 13.4723 14.1948C13.7081 14.3161 13.9825 14.2973 14.2197 14.1787L15.0392 13.769C16.0451 13.266 17.2479 13.3679 18.1549 14.0331L20.2108 15.5407C21.2047 16.2696 21.458 17.647 20.7884 18.6818V18.6818C19.1446 21.2223 16.1323 22.5301 13.4816 21.0706C11.7516 20.1181 9.67124 18.6712 7.48528 16.4853C5.29932 14.2993 3.85249 12.219 2.89996 10.489Z",
        fill: "url(#paint0_linear)"
      })
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "2.53553",
        y1: "4.46447",
        x2: "19.5061",
        y2: "21.435",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsx$3("clipPath", {
        id: "clip0",
        children: /* @__PURE__ */ jsx$3("rect", {
          width: "100%",
          height: "100%",
          fill: "white"
        })
      })]
    })]
  }));
});
const Photos = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "6",
      width: "16",
      height: "16",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "6",
      y: "2",
      width: "16",
      height: "16",
      rx: "3",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "17.5",
      cy: "6.5",
      r: "1.5",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M19.7954 15.6061C19.7648 15.5654 19.7316 15.5254 19.6959 15.4864L13.319 8.52987C12.0918 7.19102 9.96566 7.24121 8.80293 8.63649L8 9.6V15C8 15.5523 8.44772 16 9 16H19C19.3244 16 19.6127 15.8455 19.7954 15.6061Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10",
        y1: "6",
        x2: "10",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "14",
        y1: "2",
        x2: "14",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17.5",
        y1: "5",
        x2: "17.5",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "13.8977",
        y1: "7.55704",
        x2: "13.8977",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const PieChart$2 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 6C8.41775 6 6.87104 6.46919 5.55544 7.34824C4.23985 8.22729 3.21447 9.47672 2.60897 10.9385C2.00347 12.4003 1.84504 14.0089 2.15372 15.5607C2.4624 17.1126 3.22433 18.538 4.34315 19.6569C5.46197 20.7757 6.88743 21.5376 8.43928 21.8463C9.99113 22.155 11.5997 21.9965 13.0615 21.391C14.5233 20.7855 15.7727 19.7602 16.6518 18.4446C17.5308 17.129 18 15.5823 18 14C18 13.4477 17.5523 13 17 13H12C11.4477 13 11 12.5523 11 12V7C11 6.44772 10.5523 6 10 6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M14 2C13.7348 2 13.4804 2.10536 13.2929 2.29289C13.1054 2.48043 13 2.73478 13 3V10C13 10.2652 13.1054 10.5196 13.2929 10.7071C13.4804 10.8946 13.7348 11 14 11L21 11C21.2652 11 21.5196 10.8946 21.7071 10.7071C21.8946 10.5196 22 10.2652 22 10C22 7.87827 21.1571 5.84344 19.6569 4.34314C18.1566 2.84285 16.1217 2 14 2Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10",
        y1: "6",
        x2: "10",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17.5",
        y1: "2",
        x2: "17.5",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Pin = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 14C12.5523 14 13 14.4477 13 15V21C13 21.5523 12.5523 22 12 22C11.4477 22 11 21.5523 11 21V15C11 14.4477 11.4477 14 12 14Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M18 15V14.6759C18 13.0042 17.1645 11.443 15.7735 10.5157L15.4453 10.2969C15.1671 10.1114 15 9.79917 15 9.46482V7.85078C15 7.62371 15.0773 7.4034 15.2191 7.22609L16.7809 5.27391C16.9227 5.0966 17 4.87629 17 4.64922V3C17 2.44772 16.5523 2 16 2H8C7.44772 2 7 2.44772 7 3V4.64922C7 4.87629 7.07728 5.0966 7.21913 5.27391L8.78087 7.22609C8.92272 7.4034 9 7.62371 9 7.85078V9.46482C9 9.79917 8.8329 10.1114 8.5547 10.2969L8.2265 10.5157C6.83551 11.443 6 13.0042 6 14.6759V15C6 15.5523 6.44772 16 7 16H17C17.5523 16 18 15.5523 18 15Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Pinterest = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12.3193 2.04042C14.9805 1.91787 17.7186 2.86659 19.2894 4.88611C23.2876 10.0267 19.4207 17 14 17C12.7127 17 11.7014 16.7173 10.9326 16.2093C10.6371 16.0141 10.3892 15.7933 10.1819 15.5581L8.41697 21.2941C8.25455 21.822 7.69497 22.1183 7.16711 21.9558C6.63924 21.7934 6.34299 21.2338 6.50541 20.706L10.5054 7.70598C10.6678 7.17812 11.2274 6.88187 11.7553 7.04429C12.2832 7.20671 12.5794 7.76629 12.417 8.29415L11.2058 12.2304C11.2036 12.246 11.2009 12.2657 11.1981 12.2892C11.1888 12.3687 11.1784 12.4885 11.177 12.6343C11.1742 12.9331 11.2099 13.3024 11.3396 13.6519C11.4649 13.9891 11.6743 14.3023 12.0352 14.5407C12.4014 14.7827 13.0033 15 14 15C17.7154 15 20.7124 9.97335 17.7106 6.11399C16.6407 4.73836 14.6094 3.93707 12.4113 4.03831C10.2374 4.13842 8.08493 5.11717 6.79319 7.05478C5.95325 8.3147 5.87675 9.51735 6.12255 10.4266C6.38508 11.3977 6.96936 11.9314 7.33302 12.0473C7.8592 12.2151 8.14973 12.7777 7.98194 13.3039C7.81415 13.8301 7.25158 14.1206 6.7254 13.9528C5.5211 13.5688 4.57136 12.3524 4.19185 10.9485C3.79561 9.48277 3.96906 7.68542 5.12909 5.94538C6.83739 3.38294 9.63398 2.16409 12.3193 2.04042Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.4688",
        y1: "2.02991",
        x2: "12.4688",
        y2: "22.0003",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const PlayCircle = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M15.3923 10.268C16.7256 11.0378 16.7256 12.9623 15.3923 13.7321L11 16.268C9.66667 17.0378 8 16.0755 8 14.5359L8 9.4641C8 7.9245 9.66667 6.96225 11 7.73205L15.3923 10.268Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13.1962",
        y1: "6",
        x2: "13.1962",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Play = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M17.6041 9.4142C19.5761 10.5741 19.5761 13.4259 17.6041 14.5858L9.52106 19.3406C7.52116 20.517 5 19.075 5 16.7548V7.24525C5 4.925 7.52116 3.48304 9.52106 4.65945L17.6041 9.4142Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "13.5",
        y1: "2",
        x2: "13.5",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Playlist = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 6C2 5.44772 2.44772 5 3 5H11C11.5523 5 12 5.44772 12 6C12 6.55228 11.5523 7 11 7H3C2.44772 7 2 6.55228 2 6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M3 10H11",
      stroke: "url(#paint1_linear)",
      "stroke-width": "2",
      "stroke-linecap": "round"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M3 14H6",
      stroke: "url(#paint2_linear)",
      "stroke-width": "2",
      "stroke-linecap": "round"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16.2724 3.43195C14.9369 3.76583 14 4.96578 14 6.34238V13.5351C13.4117 13.1948 12.7286 13 12 13C9.79086 13 8 14.7909 8 17C8 19.2091 9.79086 21 12 21C14.2091 21 16 19.2091 16 17V9.50005L19.7955 8.55119C21.0911 8.22728 22 7.06316 22 5.72766C22 3.83422 20.2206 2.4449 18.3837 2.90413L16.2724 3.43195Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "7",
        y1: "5",
        x2: "7",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "7",
        y1: "10",
        x2: "7",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "4.5",
        y1: "14",
        x2: "4.5",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "15",
        y1: "2.8158",
        x2: "15",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Power = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M15.6324 4.87109C15.8829 4.37949 16.4883 4.17955 16.9491 4.48294C18.3473 5.40344 19.467 6.69992 20.1733 8.23209C21.0196 10.068 21.2233 12.1353 20.7513 14.101C20.2794 16.0667 19.1594 17.8163 17.5719 19.0679C15.9843 20.3194 14.0216 21 12 21C9.97845 21 8.01575 20.3194 6.42817 19.0679C4.8406 17.8164 3.72061 16.0668 3.24868 14.1011C2.77675 12.1353 2.98036 10.068 3.82671 8.23211C4.53305 6.69993 5.65273 5.40346 7.05089 4.48295C7.51172 4.17956 8.11713 4.3795 8.36761 4.8711C8.61809 5.36269 8.41731 5.95877 7.96632 6.27661C6.96389 6.98309 6.1595 7.94427 5.64118 9.06859C4.98273 10.4969 4.82431 12.1053 5.19148 13.6346C5.55864 15.1639 6.42999 16.5251 7.66512 17.4988C8.90025 18.4725 10.4272 19.002 12 19.002C13.5728 19.002 15.0998 18.4725 16.3349 17.4988C17.57 16.5251 18.4414 15.1639 18.8085 13.6346C19.1757 12.1053 19.0173 10.4969 18.3588 9.06857C17.8405 7.94426 17.0361 6.98308 16.0337 6.2766C15.5827 5.95876 15.3819 5.36268 15.6324 4.87109Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 2C12.5523 2 13 2.44772 13 3V8C13 8.55228 12.5523 9 12 9C11.4477 9 11 8.55228 11 8V3C11 2.44772 11.4477 2 12 2Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4.33936",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Presentation = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12 14C12.5523 14 13 14.4477 13 15V16.5858L16.7071 20.2929C17.0976 20.6834 17.0976 21.3166 16.7071 21.7071C16.3166 22.0976 15.6834 22.0976 15.2929 21.7071L13 19.4142V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V19.4142L8.70711 21.7071C8.31658 22.0976 7.68342 22.0976 7.29289 21.7071C6.90237 21.3166 6.90237 20.6834 7.29289 20.2929L11 16.5858V15C11 14.4477 11.4477 14 12 14Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2 4H22V13C22 14.6569 20.6569 16 19 16H5C3.34315 16 2 14.6569 2 13V4Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "8",
      cy: "10",
      r: "3",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M1 3C1 2.44772 1.44772 2 2 2H22C22.5523 2 23 2.44772 23 3C23 3.55228 22.5523 4 22 4H2C1.44772 4 1 3.55228 1 3Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14 8C14 7.44772 14.4477 7 15 7H18C18.5523 7 19 7.44772 19 8C19 8.55228 18.5523 9 18 9H15C14.4477 9 14 8.55228 14 8Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14 12C14 11.4477 14.4477 11 15 11H18C18.5523 11 19 11.4477 19 12C19 12.5523 18.5523 13 18 13H15C14.4477 13 14 12.5523 14 12Z",
      fill: "url(#paint5_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "8",
        y1: "7",
        x2: "8",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "4",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "16.5",
        y1: "7",
        x2: "16.5",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint5_linear",
        x1: "16.5",
        y1: "11",
        x2: "16.5",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Previous = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M8.39586 9.4142C6.42395 10.5741 6.42395 13.4259 8.39586 14.5858L16.4789 19.3406C18.4788 20.517 21 19.075 21 16.7548V7.24525C21 4.925 18.4788 3.48304 16.4789 4.65945L8.39586 9.4142Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 4C3.44772 4 3 4.44772 3 5V19C3 19.5523 3.44772 20 4 20C4.55228 20 5 19.5523 5 19V5C5 4.44772 4.55228 4 4 4Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.5",
        y1: "2",
        x2: "12.5",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "4",
        y1: "4",
        x2: "4",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Printer = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M7 5C7 3.34315 8.34315 2 10 2H14C15.6569 2 17 3.34315 17 5V9H7V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5 19C3.34315 19 2 17.6569 2 16V10C2 8.34315 3.34315 7 5 7H19C20.6569 7 22 8.34315 22 10V16C22 17.6569 20.6569 19 19 19H5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 14C5.44772 14 5 14.4477 5 15C5 15.5523 5.44772 16 6 16H7V19C7 20.6569 8.34315 22 10 22H14C15.6569 22 17 20.6569 17 19V16H18C18.5523 16 19 15.5523 19 15C19 14.4477 18.5523 14 18 14H6Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "18",
      cy: "11",
      r: "0.5",
      stroke: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "18",
        y1: "10",
        x2: "18",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const ProfileCircle = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "10",
      r: "3",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M5.44116 19.5488C6.43459 16.8918 8.99637 15 12 15C15.0036 15 17.5654 16.8918 18.5588 19.5488C16.8031 21.0756 14.5095 22 12 22C9.49052 22 7.19693 21.0756 5.44116 19.5488Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "15",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Promotion = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M13.9458 2.34434C12.8245 1.3888 11.1754 1.3888 10.0541 2.34434L8.78264 3.42788C8.62248 3.56437 8.42334 3.64686 8.21357 3.66359L6.54833 3.79648C5.0798 3.91367 3.91367 5.0798 3.79648 6.54833L3.66359 8.21357C3.64686 8.42334 3.56437 8.62248 3.42788 8.78264L2.34434 10.0541C1.3888 11.1754 1.3888 12.8245 2.34434 13.9458L3.42788 15.2173C3.56437 15.3774 3.64686 15.5766 3.66359 15.7863L3.79648 17.4516C3.91367 18.9201 5.0798 20.0863 6.54833 20.2034L8.21357 20.3363C8.42334 20.3531 8.62248 20.4356 8.78264 20.572L10.0541 21.6556C11.1754 22.6111 12.8245 22.6111 13.9458 21.6556L15.2173 20.572C15.3774 20.4356 15.5766 20.3531 15.7863 20.3363L17.4516 20.2034C18.9201 20.0863 20.0863 18.9201 20.2034 17.4516L20.3363 15.7863C20.3531 15.5766 20.4356 15.3774 20.572 15.2173L21.6556 13.9458C22.6111 12.8245 22.6111 11.1754 21.6556 10.0541L20.572 8.78264C20.4356 8.62248 20.3531 8.42334 20.3363 8.21357L20.2034 6.54833C20.0863 5.0798 18.9201 3.91367 17.4516 3.79648L15.7863 3.66359C15.5766 3.64686 15.3774 3.56437 15.2173 3.42788L13.9458 2.34434Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "8.5",
      cy: "8.5",
      r: "1.5",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "15.5",
      cy: "15.5",
      r: "1.5",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15.9735 7.2318C16.3978 7.58537 16.4551 8.21593 16.1015 8.64021L9.43487 16.6402C9.08131 17.0645 8.45074 17.1218 8.02647 16.7682C7.60219 16.4147 7.54487 15.7841 7.89843 15.3598L14.5651 7.35984C14.9187 6.93556 15.5492 6.87824 15.9735 7.2318Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1.62769",
        x2: "12",
        y2: "22.3722",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "8.5",
        y1: "7",
        x2: "8.5",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "15.5",
        y1: "14",
        x2: "15.5",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "17.0001",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Rain = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 10C22 13.866 18.866 17 15 17H7C4.23858 17 2 14.7614 2 12C2 9.23858 4.23858 7 7 7C7.54527 7 8.07015 7.08728 8.56143 7.24864C9.63037 4.75042 12.1108 3 15 3C18.866 3 22 6.13401 22 10Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M8.39952 16.1071L6.89954 20.1071",
      stroke: "url(#paint1_linear)",
      "stroke-width": "2",
      "stroke-linecap": "round"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M12.3995 16.1071L10.8995 20.1071",
      stroke: "url(#paint2_linear)",
      "stroke-width": "2",
      "stroke-linecap": "round"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16.3995 16.1071L14.8995 20.1071",
      stroke: "url(#paint3_linear)",
      "stroke-width": "2",
      "stroke-linecap": "round"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "8.19976",
        y1: "16.0535",
        x2: "7.09928",
        y2: "20.1606",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12.1998",
        y1: "16.0535",
        x2: "11.0993",
        y2: "20.1606",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "16.1998",
        y1: "16.0535",
        x2: "15.0993",
        y2: "20.1606",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Receipt = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M8.6 21.55L10 20.5L11.4 21.55C11.7556 21.8167 12.2444 21.8167 12.6 21.55L14 20.5L15.4 21.55C15.7556 21.8167 16.2444 21.8167 16.6 21.55L18 20.5L19.3598 21.6332C20.0111 22.1759 21 21.7128 21 20.8649V3.13503C21 2.28719 20.0111 1.82404 19.3598 2.36681L18 3.49999L16.6 2.44999C16.2444 2.18332 15.7556 2.18332 15.4 2.44999L14 3.49999L12.6 2.44999C12.2444 2.18332 11.7556 2.18332 11.4 2.44999L10 3.49999L8.6 2.44999C8.24444 2.18332 7.75556 2.18332 7.4 2.44999L6 3.49999L4.64018 2.36681C3.98886 1.82403 3 2.28719 3 3.13503V20.8649C3 21.7128 3.98886 22.1759 4.64018 21.6332L6 20.5L7.4 21.55C7.75556 21.8167 8.24444 21.8167 8.6 21.55Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 10C7 9.44772 7.44772 9 8 9H16C16.5523 9 17 9.44772 17 10C17 10.5523 16.5523 11 16 11H8C7.44772 11 7 10.5523 7 10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 14C7 13.4477 7.44772 13 8 13H12C12.5523 13 13 13.4477 13 14C13 14.5523 12.5523 15 12 15H8C7.44772 15 7 14.5523 7 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2.13312",
        x2: "12",
        y2: "21.8669",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "10",
        y1: "13",
        x2: "10",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Reload = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C15.1315 20 17.7905 18.1991 19.1045 15.555C19.3503 15.0604 19.9505 14.8587 20.445 15.1045C20.9396 15.3503 21.1413 15.9505 20.8955 16.445C19.2641 19.7278 15.9359 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C15.9359 2 19.2641 4.27225 20.8955 7.55497C21.1413 8.04955 20.9396 8.64973 20.445 8.89551C19.9505 9.1413 19.3503 8.93961 19.1045 8.44503C17.7905 5.80088 15.1315 4 12 4Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.5 3C21.0523 3 21.5 3.44771 21.5 4L21.5 8C21.5 8.26572 21.3942 8.52052 21.2061 8.70814C21.0179 8.89576 20.7628 9.00077 20.4971 9L16.4971 8.98828C15.9448 8.98666 15.4984 8.53763 15.5 7.98535C15.5016 7.43307 15.9506 6.98667 16.5029 6.98829L19.5 6.99707L19.5 4C19.5 3.44772 19.9477 3 20.5 3Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.5001",
        y1: "2",
        x2: "11.5001",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18.5",
        y1: "3",
        x2: "18.5",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Remove = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5 12C5 11.4477 5.44772 11 6 11H18C18.5523 11 19 11.4477 19 12C19 12.5523 18.5523 13 18 13H6C5.44772 13 5 12.5523 5 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Repeat = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M16.2071 2.7929C15.8166 2.40237 15.1834 2.40237 14.7929 2.79289C14.4024 3.18341 14.4024 3.81658 14.7929 4.2071L15.582 4.99622H10C6.13401 4.99622 3 8.13022 3 11.9962V12.9962C3 13.5485 3.44772 13.9962 4 13.9962C4.55228 13.9962 5 13.5485 5 12.9962V11.9962C5 9.23479 7.23858 6.99622 10 6.99622H15.5866L14.7929 7.78992C14.4024 8.18045 14.4024 8.81362 14.7929 9.20414C15.1834 9.59466 15.8166 9.59465 16.2071 9.20412L18.352 7.05916C18.9378 6.47337 18.9378 5.52363 18.352 4.93785L16.2071 2.7929Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13.9985 19C17.8645 19 20.9985 15.866 20.9985 12V11C20.9985 10.4477 20.5508 10 19.9985 10C19.4462 10 18.9985 10.4477 18.9985 11V12C18.9985 14.7614 16.7599 17 13.9985 17H8.41182L9.20564 16.2062C9.59616 15.8156 9.59615 15.1825 9.20563 14.792C8.8151 14.4014 8.18193 14.4014 7.79141 14.792L5.64648 16.9369C5.06071 17.5227 5.06071 18.4725 5.64649 19.0582L7.79141 21.2032C8.18194 21.5937 8.8151 21.5937 9.20563 21.2032C9.59615 20.8127 9.59616 20.1795 9.20564 19.789L8.41666 19H13.9985Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10.8957",
        y1: "2.5",
        x2: "10.8957",
        y2: "13.9962",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13.1028",
        y1: "10",
        x2: "13.1028",
        y2: "21.4961",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const RightAlign = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 6C3 5.44772 3.44772 5 4 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H4C3.44772 7 3 6.55228 3 6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 10C9 9.44772 9.44772 9 10 9H20C20.5523 9 21 9.44772 21 10C21 10.5523 20.5523 11 20 11H10C9.44772 11 9 10.5523 9 10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 14C3 13.4477 3.44772 13 4 13H20C20.5523 13 21 13.4477 21 14C21 14.5523 20.5523 15 20 15H4C3.44772 15 3 14.5523 3 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 18C9 17.4477 9.44772 17 10 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H10C9.44772 19 9 18.5523 9 18Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "15",
        y1: "9",
        x2: "15",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "13",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "15",
        y1: "17",
        x2: "15",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Rocket = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M7 12H8.1802C8.65688 12 9.06729 12.3365 9.16078 12.8039L10 17L5.5547 19.9635C4.89015 20.4066 4 19.9302 4 19.1315V15C4 13.3431 5.34315 12 7 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17 12H15.8198C15.3431 12 14.9327 12.3365 14.8392 12.8039L14 17L18.4453 19.9635C19.1099 20.4066 20 19.9302 20 19.1315V15C20 13.3431 18.6569 12 17 12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13.166 20H10.834C10.3603 20 9.94759 20.338 9.98729 20.81C10.0498 21.5534 10.4005 22.5925 11.8042 22.9553C11.932 22.9883 12.068 22.9883 12.1958 22.9553C13.5995 22.5925 13.9502 21.5534 14.0127 20.81C14.0524 20.338 13.6396 20 13.166 20Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6.99995 8C7.7498 5.75067 10.1861 3.22024 11.3583 2.09474C11.7197 1.74777 12.2803 1.74777 12.6416 2.09474C13.8139 3.22024 16.2502 5.75066 16.9999 8C17.7732 10.3198 16.8307 14.4868 16.1286 16.9724C15.7824 18.198 14.6476 19 13.3741 19H10.6172C9.34782 19 8.21578 18.2032 7.8678 16.9824C7.16224 14.5072 6.21616 10.3511 6.99995 8Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "10",
      r: "2",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "7",
        y1: "12",
        x2: "7",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17",
        y1: "12",
        x2: "17",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "20",
        x2: "12",
        y2: "23",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "11.9971",
        y1: "1.5",
        x2: "11.9971",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "12",
        y1: "8",
        x2: "12",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Ruler = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M14.1212 2.80751C15.2928 1.63594 17.1923 1.63594 18.3639 2.80751L21.1923 5.63594C22.3639 6.80751 22.3639 8.70701 21.1923 9.87858L9.87858 21.1923C8.70701 22.3639 6.80751 22.3639 5.63594 21.1923L2.80751 18.3639C1.63594 17.1923 1.63594 15.2928 2.80751 14.1212L14.1212 2.80751Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14.8284 7.75729L11.9999 4.92886L13.4141 3.51465L16.2426 6.34308C16.6331 6.7336 16.6331 7.36676 16.2426 7.75729C15.852 8.14781 15.2189 8.14781 14.8284 7.75729Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.1715 13.4141L6.34307 10.5857L7.75729 9.1715L10.5857 11.9999C10.9762 12.3905 10.9762 13.0236 10.5857 13.4141C10.1952 13.8047 9.56203 13.8047 9.1715 13.4141Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11.2928 9.87861L9.1715 7.75729L10.5857 6.34308L12.707 8.4644C13.0976 8.85492 13.0976 9.48808 12.707 9.87861C12.3165 10.2691 11.6833 10.2691 11.2928 9.87861Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.63597 15.5355L3.51465 13.4141L4.92886 11.9999L7.05018 14.1212C7.44071 14.5118 7.44071 15.1449 7.05018 15.5355C6.65966 15.926 6.02649 15.926 5.63597 15.5355Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.9999",
        y1: "1.92883",
        x2: "11.9999",
        y2: "22.071",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "10.0251",
        y1: "3.51465",
        x2: "10.0251",
        y2: "15.8284",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "10.0251",
        y1: "3.51465",
        x2: "10.0251",
        y2: "15.8284",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "10.0251",
        y1: "3.51465",
        x2: "10.0251",
        y2: "15.8284",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "10.0251",
        y1: "3.51465",
        x2: "10.0251",
        y2: "15.8284",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Sad = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.01565 16.9163C7.52174 17.1375 8.11126 16.9065 8.33238 16.4004C8.95054 14.9855 10.3613 14 12 14C13.6387 14 15.0494 14.9855 15.6676 16.4004C15.8887 16.9065 16.4782 17.1375 16.9843 16.9163C17.4904 16.6952 17.7214 16.1057 17.5003 15.5996C16.5753 13.4826 14.4619 12 12 12C9.53804 12 7.42463 13.4826 6.49967 15.5996C6.27855 16.1057 6.50957 16.6952 7.01565 16.9163Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "8",
      cy: "9",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "16",
      cy: "9",
      r: "1",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "17.0002",
        x2: "12",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "8",
        y1: "8",
        x2: "8",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "16",
        y1: "8",
        x2: "16",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Save = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2 5C2 3.34315 3.34315 2 5 2H15.7574C16.553 2 17.3161 2.31607 17.8787 2.87868L21.1213 6.12132C21.6839 6.68393 22 7.44699 22 8.24264V19C22 20.6569 20.6569 22 19 22H5C3.34315 22 2 20.6569 2 19V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 16C6 14.8954 6.89543 14 8 14H16C17.1046 14 18 14.8954 18 16V22H6V16Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M15.7574 2H7V6C7 7.10457 7.89543 8 9 8H15C16.1046 8 17 7.10457 17 6V2.26946C16.6135 2.09355 16.1902 2 15.7574 2Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Scan = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M10 6C8.34315 6 7 7.34315 7 9V13H17V9C17 7.34315 15.6569 6 14 6H10Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17 15H7C7 16.6569 8.34315 18 10 18H14C15.6569 18 17 16.6569 17 15Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 12C2 11.4477 2.44772 11 3 11H21C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13H3C2.44772 13 2 12.5523 2 12Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 5C2 3.34315 3.34315 2 5 2H7C7.55228 2 8 2.44772 8 3C8 3.55228 7.55228 4 7 4H5C4.44772 4 4 4.44772 4 5V7C4 7.55228 3.55228 8 3 8C2.44772 8 2 7.55228 2 7V5Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 19C2 20.6569 3.34315 22 5 22H7C7.55228 22 8 21.5523 8 21C8 20.4477 7.55228 20 7 20H5C4.44772 20 4 19.5523 4 19V17C4 16.4477 3.55228 16 3 16C2.44772 16 2 16.4477 2 17V19Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 19C22 20.6569 20.6569 22 19 22H17C16.4477 22 16 21.5523 16 21C16 20.4477 16.4477 20 17 20H19C19.5523 20 20 19.5523 20 19V17C20 16.4477 20.4477 16 21 16C21.5523 16 22 16.4477 22 17V19Z",
      fill: "url(#paint5_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M22 5C22 3.34315 20.6569 2 19 2H17C16.4477 2 16 2.44772 16 3C16 3.55228 16.4477 4 17 4H19C19.5523 4 20 4.44772 20 5V7C20 7.55228 20.4477 8 21 8C21.5523 8 22 7.55228 22 7V5Z",
      fill: "url(#paint6_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "5",
        y1: "2",
        x2: "5",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "5",
        y1: "22",
        x2: "5",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint5_linear",
        x1: "19",
        y1: "22",
        x2: "19",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint6_linear",
        x1: "19",
        y1: "2",
        x2: "19",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Schedule = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "4",
      width: "20",
      height: "18",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "17",
      cy: "17",
      r: "6",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 14C17.5523 14 18 14.4477 18 15V16.5858L19.2071 17.7929C19.5976 18.1834 19.5976 18.8166 19.2071 19.2071C18.8166 19.5976 18.1834 19.5976 17.7929 19.2071L16.2929 17.7071C16.1054 17.5196 16 17.2652 16 17V15C16 14.4477 16.4477 14 17 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 2C7.55228 2 8 2.44772 8 3V5C8 5.55228 7.55228 6 7 6C6.44772 6 6 5.55228 6 5V3C6 2.44772 6.44772 2 7 2Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 2C17.5523 2 18 2.44772 18 3V5C18 5.55228 17.5523 6 17 6C16.4477 6 16 5.55228 16 5V3C16 2.44772 16.4477 2 17 2Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "17",
        y1: "11",
        x2: "17",
        y2: "23",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17.75",
        y1: "14",
        x2: "17.75",
        y2: "19.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "7",
        y1: "2",
        x2: "7",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "17",
        y1: "2",
        x2: "17",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Scissors = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17.4151 2.7907C17.8934 3.06684 18.0573 3.67843 17.7811 4.15672L9.03111 19.3122C8.75497 19.7905 8.14338 19.9543 7.66508 19.6782C7.18679 19.402 7.02292 18.7905 7.29906 18.3122L16.0491 3.15672C16.3252 2.67843 16.9368 2.51455 17.4151 2.7907Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.24997 18.8612C5.96741 19.2754 6.8848 19.0296 7.29901 18.3122C7.71323 17.5947 7.46741 16.6773 6.74997 16.2631C6.03254 15.8489 5.11515 16.0947 4.70094 16.8122C4.28672 17.5296 4.53254 18.447 5.24997 18.8612ZM4.24997 20.5933C5.924 21.5598 8.06456 20.9862 9.03106 19.3122C9.99756 17.6381 9.424 15.4976 7.74997 14.5311C6.07595 13.5646 3.93538 14.1381 2.96889 15.8122C2.00239 17.4862 2.57595 19.6268 4.24997 20.5933Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6.58488 2.7907C6.10659 3.06684 5.94272 3.67843 6.21886 4.15672L14.9689 19.3122C15.245 19.7905 15.8566 19.9543 16.3349 19.6782C16.8132 19.402 16.9771 18.7905 16.7009 18.3122L7.95091 3.15672C7.67477 2.67843 7.06318 2.51455 6.58488 2.7907Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.75 18.8612C18.0325 19.2754 17.1151 19.0296 16.7009 18.3122C16.2867 17.5947 16.5325 16.6773 17.25 16.2631C17.9674 15.8489 18.8848 16.0947 19.299 16.8122C19.7132 17.5296 19.4674 18.447 18.75 18.8612ZM19.75 20.5933C18.076 21.5598 15.9354 20.9862 14.9689 19.3122C14.0024 17.6381 14.5759 15.4976 16.25 14.5311C17.924 13.5646 20.0646 14.1381 21.0311 15.8122C21.9976 17.4862 21.424 19.6268 19.75 20.5933Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.5401",
        y1: "2.65656",
        x2: "12.5401",
        y2: "19.8123",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "5.99997",
        y1: "14.0616",
        x2: "5.99997",
        y2: "21.0628",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11.4599",
        y1: "2.65656",
        x2: "11.4599",
        y2: "19.8123",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "18",
        y1: "14.0616",
        x2: "18",
        y2: "21.0628",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Search = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.2929 16.2929C16.6834 15.9024 17.3166 15.9024 17.7071 16.2929L20.7071 19.2929C21.0976 19.6834 21.0976 20.3166 20.7071 20.7071C20.3166 21.0976 19.6834 21.0976 19.2929 20.7071L16.2929 17.7071C15.9024 17.3166 15.9024 16.6834 16.2929 16.2929Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11 18C14.866 18 18 14.866 18 11C18 7.13401 14.866 4 11 4C7.13401 4 4 7.13401 4 11C4 14.866 7.13401 18 11 18ZM20 11C20 15.9706 15.9706 20 11 20C6.02944 20 2 15.9706 2 11C2 6.02944 6.02944 2 11 2C15.9706 2 20 6.02944 20 11Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "18.5",
        y1: "16",
        x2: "18.5",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11",
        y1: "2",
        x2: "11",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Send = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsxs$2("g", {
      "clip-path": "url(#clip0)",
      children: [/* @__PURE__ */ jsx$3("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M2.1928 6.57843C1.36183 4.08552 3.91013 1.80468 6.29603 2.90587L20.0983 9.27616C22.422 10.3487 22.422 13.6514 20.0983 14.7239L6.29603 21.0941C3.91013 22.1953 1.36184 19.9145 2.19281 17.4216L3.68377 12.9487C3.88904 12.3329 3.88904 11.6672 3.68377 11.0514L2.1928 6.57843Z",
        fill: "url(#paint0_linear)"
      }), /* @__PURE__ */ jsx$3("path", {
        d: "M3.66677 13L3.68387 12.9487C3.88913 12.3329 3.88913 11.6672 3.68387 11.0514L3.66675 11H14.0001C14.5524 11 15.0001 11.4477 15.0001 12C15.0001 12.5523 14.5524 13 14.0001 13H3.66677Z",
        fill: "url(#paint1_linear)"
      })]
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "13",
        y1: "0",
        x2: "13",
        y2: "24",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9.33342",
        y1: "11",
        x2: "9.33342",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsx$3("clipPath", {
        id: "clip0",
        children: /* @__PURE__ */ jsx$3("rect", {
          width: "100%",
          height: "100%",
          fill: "white"
        })
      })]
    })]
  }));
});
const Settings$1 = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M7.992 4.787c.504-.28.92-.71 1.102-1.257l.388-1.162A2 2 0 0111.379 1h1.242a2 2 0 011.897 1.368l.388 1.162c.182.547.598.977 1.102 1.257.078.044.155.089.232.135.495.297 1.076.442 1.641.327l1.202-.246a2 2 0 012.133.96l.62 1.075a2 2 0 01-.235 2.327l-.815.919c-.382.43-.547 1.005-.538 1.58.002.09.002.181 0 .272-.009.575.156 1.15.538 1.58l.815.92a2 2 0 01.236 2.326l-.621 1.076a2 2 0 01-2.133.96l-1.202-.247c-.565-.115-1.146.03-1.64.327a8.36 8.36 0 01-.233.135c-.504.28-.92.71-1.102 1.257l-.388 1.163A2 2 0 0112.621 23h-1.242a2 2 0 01-1.897-1.367l-.388-1.163c-.182-.547-.598-.977-1.102-1.257a8.377 8.377 0 01-.232-.135c-.495-.297-1.076-.442-1.641-.327l-1.202.246a2 2 0 01-2.133-.96l-.62-1.075a2 2 0 01.235-2.327l.815-.919c.382-.43.547-1.005.538-1.58a8.566 8.566 0 010-.272c.009-.575-.156-1.15-.538-1.58l-.815-.92a2 2 0 01-.236-2.326l.621-1.076a2 2 0 012.133-.96l1.202.247c.565.115 1.146-.03 1.64-.327a8.21 8.21 0 01.233-.135z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 15a3 3 0 100-6 3 3 0 000 6z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 1,
        x2: 12,
        y2: 23,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 12,
        y1: 9,
        x2: 12,
        y2: 15,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Share = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17.5145 6.8575L7.51447 12.8575L6.48547 11.1425L16.4855 5.14251L17.5145 6.8575Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.4855 18.8575L6.48547 12.8575L7.51447 11.1425L17.5145 17.1425L16.4855 18.8575Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 9C18.6569 9 20 7.65685 20 6C20 4.34315 18.6569 3 17 3C15.3431 3 14 4.34315 14 6C14 7.65685 15.3431 9 17 9Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 21C18.6569 21 20 19.6569 20 18C20 16.3431 18.6569 15 17 15C15.3431 15 14 16.3431 14 18C14 19.6569 15.3431 21 17 21Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 15C8.65685 15 10 13.6569 10 12C10 10.3431 8.65685 9 7 9C5.34315 9 4 10.3431 4 12C4 13.6569 5.34315 15 7 15Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5.14251",
        x2: "12",
        y2: "12.8575",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "11.1425",
        x2: "12",
        y2: "18.8575",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17",
        y1: "3",
        x2: "17",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "17",
        y1: "15",
        x2: "17",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "7",
        y1: "9",
        x2: "7",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ShieldCheck = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 6.66228C3 5.37099 3.82629 4.22457 5.05132 3.81623L11.0513 1.81623C11.6671 1.61096 12.3329 1.61096 12.9487 1.81623L18.9487 3.81623C20.1737 4.22457 21 5.37099 21 6.66228V12C21 17.502 15.4398 20.8417 13.0601 22.0192C12.3875 22.3519 11.6125 22.3519 10.9399 22.0192C8.56019 20.8417 3 17.502 3 12V6.66228Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15.7071 9.29289C16.0976 9.68342 16.0976 10.3166 15.7071 10.7071L12.2728 14.1414C11.5698 14.8444 10.4302 14.8444 9.72721 14.1414L8.29289 12.7071C7.90237 12.3166 7.90237 11.6834 8.29289 11.2929C8.68342 10.9024 9.31658 10.9024 9.70711 11.2929L11 12.5858L14.2929 9.29289C14.6834 8.90237 15.3166 8.90237 15.7071 9.29289Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1.5",
        x2: "12",
        y2: "22.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "14.6686",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Shield = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 6.66228C3 5.37099 3.82629 4.22457 5.05132 3.81623L11.0513 1.81623C11.6671 1.61096 12.3329 1.61096 12.9487 1.81623L18.9487 3.81623C20.1737 4.22457 21 5.37099 21 6.66228V12C21 17.502 15.4398 20.8417 13.0601 22.0192C12.3875 22.3519 11.6125 22.3519 10.9399 22.0192C8.56019 20.8417 3 17.502 3 12V6.66228Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M12 22.2687V1.66228C12.3204 1.66228 12.6408 1.71359 12.9487 1.81623L18.9487 3.81623C20.1737 4.22457 21 5.37099 21 6.66228V12C21 17.25 15.9375 20.5312 13.4063 21.8438C13.2847 21.9068 13.1691 21.9652 13.0601 22.0192C12.7238 22.1855 12.3619 22.2687 12 22.2687Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1.5",
        x2: "12",
        y2: "22.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "16.5",
        y1: "1.66228",
        x2: "16.5",
        y2: "22.2687",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Ship = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 3C13 2.44772 12.5523 2 12 2C11.4477 2 11 2.44772 11 3V4H10C8.34315 4 7 5.34315 7 7V8H17V7C17 5.34315 15.6569 4 14 4H13V3Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M4 15V11C4 9.34315 5.34315 8 7 8H17C18.6569 8 20 9.34315 20 11V15H4Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.65833 21.4472C3.50292 21.8695 4.49703 21.8695 5.34162 21.4472L5.55276 21.3416C5.83429 21.2009 6.16566 21.2009 6.44719 21.3416L6.65833 21.4472C7.50292 21.8695 8.49703 21.8695 9.34162 21.4472L9.55276 21.3416C9.83429 21.2009 10.1657 21.2009 10.4472 21.3416L10.6583 21.4472C11.5029 21.8695 12.497 21.8695 13.3416 21.4472L13.5528 21.3416C13.8343 21.2009 14.1657 21.2009 14.4472 21.3416L14.6583 21.4472C15.5029 21.8695 16.497 21.8695 17.3416 21.4472L17.5528 21.3416C17.8343 21.2009 18.1657 21.2009 18.4472 21.3416L18.6583 21.4472C19.5029 21.8695 20.497 21.8695 21.3416 21.4472L21.4472 21.3944C21.9412 21.1474 22.1414 20.5467 21.8944 20.0528C21.6474 19.5588 21.0467 19.3586 20.5528 19.6056L20.4472 19.6583C20.1657 19.7991 19.8343 19.7991 19.5528 19.6583L19.3416 19.5528C18.497 19.1305 17.5029 19.1305 16.6583 19.5528L16.4472 19.6583C16.1657 19.7991 15.8343 19.7991 15.5528 19.6583L15.3416 19.5528C14.497 19.1305 13.5029 19.1305 12.6583 19.5528L12.4472 19.6583C12.1657 19.7991 11.8343 19.7991 11.5528 19.6583L11.3416 19.5528C10.497 19.1305 9.50292 19.1305 8.65833 19.5528L8.44719 19.6583C8.16566 19.7991 7.83429 19.7991 7.55276 19.6583L7.34162 19.5528C6.49703 19.1305 5.50292 19.1305 4.65833 19.5528L4.44719 19.6583C4.16566 19.7991 3.83429 19.7991 3.55276 19.6583L3.44719 19.6056C2.95321 19.3586 2.35254 19.5588 2.10555 20.0528C1.85856 20.5467 2.05878 21.1474 2.55276 21.3944L2.65833 21.4472Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M3.86163 13.3253C2.55063 13.6998 1.78153 15.0558 2.13285 16.3732L2.96675 19.5004C3.12794 19.4949 3.29277 19.5284 3.44718 19.6056L3.55275 19.6584C3.83428 19.7991 4.16565 19.7991 4.44718 19.6584L4.65832 19.5528C5.50291 19.1305 6.49702 19.1305 7.34161 19.5528L7.55275 19.6584C7.83428 19.7991 8.16565 19.7991 8.44718 19.6584L8.65832 19.5528C9.50291 19.1305 10.497 19.1305 11.3416 19.5528L11.5528 19.6584C11.8343 19.7991 12.1657 19.7991 12.4472 19.6584L12.6583 19.5528C13.5029 19.1305 14.497 19.1305 15.3416 19.5528L15.5528 19.6584C15.8343 19.7991 16.1657 19.7991 16.4472 19.6584L16.6583 19.5528C17.5029 19.1305 18.497 19.1305 19.3416 19.5528L19.5528 19.6584C19.8343 19.7991 20.1657 19.7991 20.4472 19.6584L20.5528 19.6056C20.7072 19.5284 20.872 19.4948 21.0332 19.5004L21.8671 16.3732C22.2184 15.0558 21.4494 13.6998 20.1383 13.3253L12.8242 11.2355C12.2855 11.0816 11.7145 11.0816 11.1758 11.2355L3.86163 13.3253Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "8",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "21.7639",
        x2: "12",
        y2: "19.2361",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "11.1201",
        x2: "12",
        y2: "19.7639",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ShoppingBag = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3.67151 8.6279C3.85917 7.12661 5.13538 6 6.64835 6H17.3517C18.8646 6 20.1408 7.12661 20.3285 8.6279L21.5785 18.6279C21.8023 20.4185 20.4061 22 18.6017 22H5.39835C3.59385 22 2.19769 20.4185 2.42151 18.6279L3.67151 8.6279Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V8C16 8.55228 15.5523 9 15 9C14.4477 9 14 8.55228 14 8V6C14 4.89543 13.1046 4 12 4C10.8954 4 10 4.89543 10 6V8C10 8.55228 9.55228 9 9 9C8.44772 9 8 8.55228 8 8V6Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Show = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 19C17.215 19 20.2099 15.1148 21.3982 13.1334C21.8205 12.4292 21.8205 11.5708 21.3982 10.8666C20.2099 8.88521 17.215 5 12 5C6.78498 5 3.79007 8.88521 2.60179 10.8666C2.17952 11.5708 2.17952 12.4292 2.60179 13.1334C3.79007 15.1148 6.78498 19 12 19Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "3",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "9",
        x2: "12",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Shuffle = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12.9227 14.118C13.3783 15.2569 14.4814 16.0038 15.7081 16.0038H18.5867L17.7929 15.21C17.4024 14.8195 17.4024 14.1863 17.7929 13.7958C18.1834 13.4053 18.8166 13.4053 19.2071 13.7958L21.352 15.9407C21.9378 16.5265 21.9378 17.4762 21.352 18.062L19.2071 20.207C18.8166 20.5975 18.1834 20.5975 17.7929 20.207C17.4024 19.8165 17.4024 19.1833 17.7929 18.7928L18.5819 18.0038H15.7081C13.6636 18.0038 11.8251 16.759 11.0657 14.8607L9.0773 9.88961C8.62171 8.75064 7.51858 8.00378 6.29187 8.00378H3C2.44772 8.00378 2 7.55607 2 7.00378C2 6.4515 2.44772 6.00378 3 6.00378H6.29187C8.33639 6.00378 10.1749 7.24854 10.9343 9.14683L12.9227 14.118Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M19.2071 3.79302C18.8166 3.40249 18.1834 3.40249 17.7929 3.79301C17.4024 4.18353 17.4024 4.8167 17.7929 5.20722L18.5819 5.99622H15.7081C13.6636 5.99622 11.8251 7.24097 11.0657 9.13926L9.0773 14.1104C8.62171 15.2494 7.51858 15.9962 6.29187 15.9962H3C2.44772 15.9962 2 16.4439 2 16.9962C2 17.5485 2.44772 17.9962 3 17.9962H6.29187C8.33639 17.9962 10.1749 16.7515 10.9343 14.8532L12.9227 9.88204C13.3783 8.74307 14.4814 7.99622 15.7081 7.99622H18.5867L17.7929 8.79005C17.4024 9.18057 17.4024 9.81374 17.7929 10.2043C18.1834 10.5948 18.8166 10.5948 19.2071 10.2042L21.352 8.05928C21.9378 7.47349 21.9378 6.52376 21.352 5.93797L19.2071 3.79302Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.8957",
        y1: "6.00378",
        x2: "11.8957",
        y2: "20.4999",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.8957",
        y1: "3.50012",
        x2: "11.8957",
        y2: "17.9962",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Size = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M20 10C19.4477 10 19 9.55229 19 9V6.41417L6.41417 19H9C9.55228 19 10 19.4477 10 20C10 20.5523 9.55228 21 9 21H5C3.89543 21 3 20.1046 3 19V15C3 14.4477 3.44772 14 4 14C4.55228 14 5 14.4477 5 15V17.5857L17.5857 5L15 5C14.4477 5 14 4.55228 14 4C14 3.44772 14.4477 3 15 3H19C20.1046 3 21 3.89543 21 5V9C21 9.55229 20.5523 10 20 10Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M3 5C3 3.89543 3.89543 3 5 3H9C9.55228 3 10 3.44772 10 4C10 4.55228 9.55228 5 9 5H5V9C5 9.55228 4.55228 10 4 10C3.44772 10 3 9.55228 3 9V5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M21 19C21 20.1046 20.1046 21 19 21H15C14.4477 21 14 20.5523 14 20C14 19.4477 14.4477 19 15 19H19V15C19 14.4477 19.4477 14 20 14C20.5523 14 21 14.4477 21 15V19Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "6.5",
        y1: "3",
        x2: "6.5",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "17.5",
        y1: "21",
        x2: "17.5",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Slack = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "1.5",
      y: "6.5",
      width: "10",
      height: "5",
      rx: "2.5",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M7.5 3.5C7.5 2.39543 8.39543 1.5 9.5 1.5V1.5C10.6046 1.5 11.5 2.39543 11.5 3.5V4.5C11.5 5.05228 11.0523 5.5 10.5 5.5H9.5C8.39543 5.5 7.5 4.60457 7.5 3.5V3.5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "22.5",
      y: "17.5",
      width: "10",
      height: "5",
      rx: "2.5",
      transform: "rotate(180 22.5 17.5)",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16.5 20.5C16.5 21.6046 15.6046 22.5 14.5 22.5V22.5C13.3954 22.5 12.5 21.6046 12.5 20.5L12.5 19.5C12.5 18.9477 12.9477 18.5 13.5 18.5L14.5 18.5C15.6046 18.5 16.5 19.3954 16.5 20.5V20.5Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "6.5",
      y: "22.5",
      width: "10",
      height: "5",
      rx: "2.5",
      transform: "rotate(-90 6.5 22.5)",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M3.5 13.5L4.5 13.5L4.5 14.5C4.5 15.0523 4.05228 15.5 3.5 15.5C2.94772 15.5 2.5 15.0523 2.5 14.5C2.5 13.9477 2.94772 13.5 3.5 13.5Z",
      fill: "url(#paint5_linear)",
      stroke: "url(#paint6_linear)",
      "stroke-width": "2",
      "stroke-linecap": "round",
      "stroke-linejoin": "round"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "17.5",
      y: "1.5",
      width: "10",
      height: "5",
      rx: "2.5",
      transform: "rotate(90 17.5 1.5)",
      fill: "url(#paint7_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M20.5 10.5L19.5 10.5L19.5 9.5C19.5 8.94772 19.9477 8.5 20.5 8.5C21.0523 8.5 21.5 8.94772 21.5 9.5C21.5 10.0523 21.0523 10.5 20.5 10.5Z",
      fill: "url(#paint8_linear)",
      stroke: "url(#paint9_linear)",
      "stroke-width": "2",
      "stroke-linecap": "round",
      "stroke-linejoin": "round"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "6.5",
        y1: "6.5",
        x2: "6.5",
        y2: "11.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9.5",
        y1: "1.5",
        x2: "9.5",
        y2: "5.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "27.5",
        y1: "17.5",
        x2: "27.5",
        y2: "22.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "14.5",
        y1: "22.5",
        x2: "14.5",
        y2: "18.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "11.5",
        y1: "22.5",
        x2: "11.5",
        y2: "27.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint5_linear",
        x1: "1.5",
        y1: "14.5",
        x2: "5.5",
        y2: "14.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint6_linear",
        x1: "1.5",
        y1: "14.5",
        x2: "5.5",
        y2: "14.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint7_linear",
        x1: "22.5",
        y1: "1.5",
        x2: "22.5",
        y2: "6.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint8_linear",
        x1: "22.5",
        y1: "9.5",
        x2: "18.5",
        y2: "9.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint9_linear",
        x1: "22.5",
        y1: "9.5",
        x2: "18.5",
        y2: "9.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Smile = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.01565 13.0837C7.52174 12.8625 8.11126 13.0935 8.33238 13.5996C8.95054 15.0145 10.3613 16 12 16C13.6387 16 15.0494 15.0145 15.6676 13.5996C15.8887 13.0935 16.4782 12.8625 16.9843 13.0837C17.4904 13.3048 17.7214 13.8943 17.5003 14.4004C16.5753 16.5174 14.4619 18 12 18C9.53804 18 7.42463 16.5174 6.49967 14.4004C6.27855 13.8943 6.50957 13.3048 7.01565 13.0837Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "8",
      cy: "9",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "16",
      cy: "9",
      r: "1",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "12.9998",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "8",
        y1: "8",
        x2: "8",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "16",
        y1: "8",
        x2: "16",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Snapchat = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M5 15.5C6.10535 14.7615 6.36094 13.8505 6 13C5.65537 12.1873 3.11111 11.4444 3.66667 10.3333C4.22222 9.22222 5.50289 10.6502 6.44444 9.77778C6.35915 8.19759 6.13755 6.83277 6.80081 5.34581C7.76907 3.11111 9.77778 2 12 2C14.2222 2 16.2309 3.11111 17.1992 5.34581C17.8624 6.83277 17.6409 8.19759 17.5556 9.77778C18.4971 10.6502 19.7778 9.22222 20.3333 10.3333C20.8889 11.4444 18.3446 12.1873 18 13C17.6391 13.8505 17.8947 14.7615 19 15.5C20.6724 16.6174 22 16.4444 22 17.5788C22 18.6667 19.5764 18.9111 19 19L18.3 19.9333C18.1111 20.1851 17.814 20.3339 17.4992 20.3295C16.2405 20.3117 15.8219 20.2642 14.7778 20.8889C13.9231 21.4002 13.0636 22 12 22C10.9364 22 10.0769 21.4002 9.22222 20.8889C8.17809 20.2642 7.75948 20.3117 6.50075 20.3295C6.18603 20.3339 5.88885 20.1851 5.7 19.9333L5 19C4.42359 18.9111 2 18.6667 2 17.5788C2 16.4444 3.32757 16.6174 5 15.5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Snowflake = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8.51512 2.40398C8.90564 2.01345 9.53881 2.01345 9.92933 2.40398L12 4.47465L14.0707 2.40398C14.4612 2.01345 15.0944 2.01345 15.4849 2.40398C15.8754 2.7945 15.8754 3.42767 15.4849 3.81819L12.7071 6.59597C12.3166 6.98649 11.6834 6.98649 11.2929 6.59597L8.51512 3.81819C8.12459 3.42767 8.12459 2.7945 8.51512 2.40398ZM5.43208 4.184C5.96555 4.04106 6.51389 4.35764 6.65683 4.89111L7.67356 8.68563C7.74221 8.94181 7.70627 9.21476 7.57366 9.44445C7.44106 9.67413 7.22264 9.84173 6.96646 9.91037L3.17194 10.9271C2.63848 11.07 2.09014 10.7535 1.9472 10.22C1.80426 9.68653 2.12084 9.1382 2.6543 8.99526L5.48289 8.23734L4.72498 5.40875C4.58203 4.87528 4.89862 4.32695 5.43208 4.184ZM18.5679 4.184C19.1014 4.32695 19.418 4.87528 19.275 5.40875L18.5171 8.23734L21.3457 8.99526C21.8792 9.1382 22.1958 9.68653 22.0528 10.22C21.9099 10.7535 21.3615 11.07 20.8281 10.9271L17.0336 9.91037C16.5001 9.76743 16.1835 9.21909 16.3264 8.68563L17.3432 4.89111C17.4861 4.35764 18.0345 4.04106 18.5679 4.184ZM1.94716 13.78C2.09011 13.2465 2.63844 12.93 3.17191 13.0729L6.96642 14.0896C7.49989 14.2326 7.81647 14.7809 7.67353 15.3144L6.65679 19.1089C6.51385 19.6424 5.96552 19.9589 5.43205 19.816C4.89858 19.6731 4.582 19.1247 4.72494 18.5913L5.48286 15.7627L2.65427 15.0047C2.1208 14.8618 1.80422 14.3135 1.94716 13.78ZM22.0528 13.78C22.1958 14.3135 21.8792 14.8618 21.3457 15.0047L18.5171 15.7627L19.275 18.5913C19.418 19.1247 19.1014 19.6731 18.5679 19.816C18.0345 19.9589 17.4861 19.6424 17.3432 19.1089L16.3264 15.3144C16.1835 14.7809 16.5001 14.2326 17.0335 14.0896L20.8281 13.0729C21.3615 12.93 21.9099 13.2465 22.0528 13.78ZM12 19.5253L9.92933 21.596C9.53881 21.9865 8.90564 21.9865 8.51512 21.596C8.12459 21.2054 8.12459 20.5723 8.51512 20.1818L11.2929 17.404C11.6834 17.0135 12.3166 17.0135 12.7071 17.404L15.4849 20.1818C15.8754 20.5723 15.8754 21.2054 15.4849 21.596C15.0944 21.9865 14.4612 21.9865 14.0707 21.596L12 19.5253Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12.0001 4.88892C12.5524 4.88892 13.0001 5.33663 13.0001 5.88892V10.268L16.7925 8.07848C17.2707 7.80233 17.8823 7.96621 18.1585 8.4445C18.4346 8.9228 18.2707 9.53439 17.7925 9.81053L14.0001 12.0001L17.7925 14.1896C18.2707 14.4657 18.4346 15.0773 18.1585 15.5556C17.8823 16.0339 17.2707 16.1978 16.7924 15.9216L13.0001 13.7321V18.1111C13.0001 18.6634 12.5524 19.1111 12.0001 19.1111C11.4478 19.1111 11.0001 18.6634 11.0001 18.1111V13.7321L7.20769 15.9216C6.72939 16.1978 6.1178 16.0339 5.84166 15.5556C5.56552 15.0773 5.72939 14.4657 6.20769 14.1896L10.0001 12.0001L6.20772 9.81053C5.72943 9.53438 5.56555 8.92279 5.8417 8.4445C6.11784 7.96621 6.72943 7.80233 7.20772 8.07848L11.0001 10.268V5.88892C11.0001 5.33663 11.4478 4.88892 12.0001 4.88892Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2.11108",
        x2: "12",
        y2: "21.8889",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12.0001",
        y1: "4.88892",
        x2: "12.0001",
        y2: "19.1111",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Sort = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 6C4 5.44772 4.44772 5 5 5H20C20.5523 5 21 5.44772 21 6C21 6.55228 20.5523 7 20 7H5C4.44772 7 4 6.55228 4 6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 12C4 11.4477 4.44772 11 5 11H15C15.5523 11 16 11.4477 16 12C16 12.5523 15.5523 13 15 13H5C4.44772 13 4 12.5523 4 12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 18C4 17.4477 4.44772 17 5 17H11C11.5523 17 12 17.4477 12 18C12 18.5523 11.5523 19 11 19H5C4.44772 19 4 18.5523 4 18Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.5",
        y1: "5",
        x2: "12.5",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "10",
        y1: "11",
        x2: "10",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "8",
        y1: "17",
        x2: "8",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Spotify = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "10",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6.97957 8.11086C6.44752 8.25898 6.13627 8.81036 6.28438 9.34241C6.43245 9.87432 6.98357 10.1855 7.51549 10.0377L7.51445 10.038C7.53592 10.0323 7.55746 10.0269 7.57904 10.0216C7.63028 10.0091 7.7109 9.99037 7.81875 9.96804C8.03453 9.92336 8.35862 9.86451 8.77371 9.81284C9.60479 9.7094 10.7947 9.63551 12.2069 9.75906C13.6192 9.88261 14.7782 10.162 15.5787 10.4082C15.9785 10.5312 16.2874 10.6454 16.4922 10.7269C16.5886 10.7653 16.6848 10.8048 16.7791 10.8483L16.7802 10.8489C17.2781 11.0857 17.8739 10.8748 18.1119 10.3772C18.3501 9.87893 18.1393 9.28188 17.6411 9.04363L17.6401 9.04317L17.639 9.04263L17.6362 9.04129C17.5988 9.02368 17.561 9.00673 17.5232 8.99011C17.4544 8.9599 17.3567 8.91834 17.2316 8.86859C16.9817 8.76912 16.6221 8.63665 16.1666 8.49656C15.2564 8.21665 13.9576 7.90459 12.3812 7.76667C10.8049 7.62876 9.47163 7.71055 8.52669 7.82816C8.05377 7.88702 7.67664 7.95504 7.4132 8.00959C7.28143 8.03687 7.17794 8.06082 7.10497 8.07863C7.0648 8.08843 7.0247 8.09857 6.98481 8.10942L6.98181 8.11024C6.97827 8.11122 7.42617 9.71515 6.97957 8.11086Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.75021 11.1773C7.21304 11.3056 6.8816 11.8451 7.00992 12.3823C7.138 12.9185 7.67571 13.2497 8.21188 13.1233L8.21731 13.1221C8.22393 13.1206 8.23633 13.1179 8.25436 13.1142C8.29042 13.1068 8.34897 13.0954 8.42889 13.0819C8.58875 13.0548 8.83387 13.0191 9.15525 12.9892C9.79818 12.9295 10.7448 12.8935 11.9238 12.9967C13.1027 13.0998 14.0287 13.2996 14.6515 13.4701C14.9628 13.5553 15.198 13.633 15.3507 13.6875C15.4652 13.7283 15.5333 13.756 15.5521 13.7638L15.5569 13.7658C16.063 13.9834 16.6504 13.7507 16.8696 13.2449C17.0893 12.7382 16.8565 12.1493 16.3498 11.9297L16.3478 11.9288L16.3452 11.9277C16.3146 11.9146 16.2837 11.9021 16.2528 11.8899C16.198 11.8682 16.1209 11.8387 16.0223 11.8036C15.8252 11.7333 15.5421 11.6403 15.1794 11.541C14.4542 11.3426 13.4096 11.119 12.0981 11.0043C10.7865 10.8895 9.71897 10.9283 8.97034 10.9978C8.59594 11.0326 8.30094 11.075 8.09463 11.11C7.99146 11.1275 7.91041 11.1431 7.85264 11.155C7.82006 11.1617 7.78754 11.1686 7.75515 11.1761L7.7524 11.1768L7.75123 11.1771C7.75123 11.1771 8.13808 12.801 7.75021 11.1773Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8.34968 14.2957C7.83606 14.4987 7.58424 15.0796 7.78724 15.5933C7.98884 16.1033 8.56317 16.3552 9.07416 16.1598C9.10872 16.1478 9.14378 16.1374 9.17902 16.1276C9.27239 16.1016 9.42753 16.0639 9.64324 16.0296C10.074 15.9611 10.75 15.9054 11.6622 15.9853C12.5745 16.0651 13.2306 16.2373 13.6429 16.3795C13.8494 16.4508 13.9956 16.5148 14.083 16.5566C14.116 16.5724 14.1488 16.5888 14.1807 16.6066C14.65 16.8877 15.2593 16.7394 15.5465 16.2721C15.8356 15.8015 15.6884 15.1857 15.2179 14.8966L15.2165 14.8957L15.215 14.8948L15.185 14.877C15.1701 14.8684 15.1514 14.8578 15.1287 14.8454C15.0834 14.8207 15.0225 14.789 14.9458 14.7523C14.7924 14.6789 14.576 14.5858 14.2952 14.4889C13.7331 14.295 12.9167 14.0874 11.8366 13.9929C10.7564 13.8984 9.91636 13.961 9.32912 14.0544C9.03583 14.1011 8.80651 14.1552 8.64266 14.2008C8.56075 14.2236 8.49526 14.2443 8.44637 14.2608C8.41495 14.2714 8.38372 14.2825 8.35279 14.2945L8.35119 14.2951C8.34892 14.296 8.96328 15.8482 8.34968 14.2957Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12.3812",
        y1: "7.76667",
        x2: "12.1415",
        y2: "10.5065",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12.0981",
        y1: "11.0043",
        x2: "11.8802",
        y2: "13.495",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "11.8366",
        y1: "13.9929",
        x2: "11.6187",
        y2: "16.4836",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Star = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("g", {
      "clip-path": "url(#clip0)",
      children: /* @__PURE__ */ jsx$3("path", {
        d: "M10.1109 3.43478C10.7335 1.64366 13.2665 1.64366 13.8891 3.43478L14.8347 6.15493C15.1093 6.94508 15.8467 7.48082 16.683 7.49786L19.5622 7.55653C21.4581 7.59517 22.2409 10.0043 20.7298 11.1499L18.4349 12.8897C17.7683 13.3951 17.4867 14.2619 17.7289 15.0626L18.5628 17.819C19.112 19.634 17.0627 21.1229 15.5062 20.0398L13.1424 18.3949C12.4557 17.9171 11.5443 17.9171 10.8576 18.3949L8.49383 20.0398C6.93734 21.1229 4.88805 19.634 5.43715 17.819L6.27107 15.0626C6.51331 14.2619 6.23165 13.3951 5.56506 12.8897L3.27022 11.1499C1.75915 10.0043 2.54191 7.59517 4.43776 7.55653L7.31697 7.49786C8.15331 7.48082 8.89069 6.94508 9.16535 6.15494L10.1109 3.43478Z",
        fill: "url(#paint0_linear)"
      })
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "-2",
        x2: "12",
        y2: "26",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsx$3("clipPath", {
        id: "clip0",
        children: /* @__PURE__ */ jsx$3("rect", {
          width: "100%",
          height: "100%",
          fill: "white"
        })
      })]
    })]
  }));
});
const Stop = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Store = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M16.357 11.2572L16.9994 11.0002L17.0005 11.0002L17.7016 11.3508C18.5394 11.7697 19.4995 11.8751 20.4084 11.6479C20.6211 11.5947 20.8191 11.5146 21 11.4121V19C21 20.6569 19.6569 22 18 22H6C4.34315 22 3 20.6569 3 19V11.4121C3.18091 11.5146 3.37895 11.5947 3.59166 11.6479C4.50046 11.8751 5.46056 11.7697 6.29844 11.3508L6.99955 11.0002L7.00058 11.0002L7.64305 11.2572C8.83511 11.734 10.1649 11.734 11.357 11.2572L12 11L12.6431 11.2572C13.8351 11.734 15.1649 11.734 16.357 11.2572Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M9 18C9 16.3431 10.3431 15 12 15V15C13.6569 15 15 16.3431 15 18V22H9V18Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16.9994 11.0002L16.357 11.2572C15.1649 11.734 13.8351 11.734 12.6431 11.2572L12 11L11.357 11.2572C10.1649 11.734 8.83511 11.734 7.64305 11.2572L7.00058 11.0002L6.99955 11.0002L6.29844 11.3508C5.46056 11.7697 4.50046 11.8751 3.59166 11.6479C2.21624 11.3041 1.45439 9.83157 1.96825 8.51023L3.75619 3.91266C4.20463 2.75954 5.31497 2 6.55221 2H8.4799C8.49258 1.99976 8.5053 1.99976 8.51806 2H15.4819C15.4946 1.99976 15.5073 1.99976 15.52 2H17.4478C18.685 2 19.7954 2.75955 20.2438 3.91266L22.0318 8.51023C22.5456 9.83158 21.7838 11.3041 20.4084 11.6479C19.4995 11.8751 18.5394 11.7697 17.7016 11.3508L17.0005 11.0002L16.9994 11.0002Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "11",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "15",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "1.99982",
        x2: "12",
        y2: "11.7651",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Sun = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 17.5C15.0376 17.5 17.5 15.0376 17.5 12C17.5 8.96243 15.0376 6.5 12 6.5C8.96243 6.5 6.5 8.96243 6.5 12C6.5 15.0376 8.96243 17.5 12 17.5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11.9951 2C12.5474 2 12.9951 2.44772 12.9951 3V4C12.9951 4.55228 12.5474 5 11.9951 5C11.4428 5 10.9951 4.55228 10.9951 4V3C10.9951 2.44772 11.4428 2 11.9951 2Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11.9951 18.9996C12.5474 18.9996 12.9951 19.4473 12.9951 19.9996V20.9964C12.9951 21.5487 12.5474 21.9964 11.9951 21.9964C11.4428 21.9964 10.9951 21.5487 10.9951 20.9964V19.9996C10.9951 19.4473 11.4428 18.9996 11.9951 18.9996Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.92537 4.92842C5.31589 4.5379 5.94906 4.5379 6.33958 4.92842L7.20405 5.79289C7.59458 6.18342 7.59458 6.81658 7.20405 7.20711C6.81353 7.59763 6.18036 7.59763 5.78984 7.20711L4.92537 6.34264C4.53484 5.95211 4.53484 5.31895 4.92537 4.92842Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.793 16.796C17.1835 16.4055 17.8166 16.4055 18.2072 16.796L19.065 17.6538C19.4555 18.0444 19.4555 18.6775 19.0649 19.0681C18.6744 19.4586 18.0413 19.4586 17.6507 19.068L16.7929 18.2102C16.4024 17.8197 16.4024 17.1865 16.793 16.796Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M1.99695 11.9982C1.99695 11.4459 2.44466 10.9982 2.99695 10.9982H3.99695C4.54923 10.9982 4.99695 11.4459 4.99695 11.9982C4.99695 12.5505 4.54923 12.9982 3.99695 12.9982H2.99695C2.44466 12.9982 1.99695 12.5505 1.99695 11.9982Z",
      fill: "url(#paint5_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.9966 11.9982C18.9966 11.4459 19.4443 10.9982 19.9966 10.9982H20.9934C21.5456 10.9982 21.9934 11.4459 21.9934 11.9982C21.9934 12.5505 21.5456 12.9982 20.9934 12.9982H19.9966C19.4443 12.9982 18.9966 12.5505 18.9966 11.9982Z",
      fill: "url(#paint6_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4.92534 19.068C4.53482 18.6775 4.53482 18.0444 4.92534 17.6538L5.78627 16.7929C6.1768 16.4024 6.80996 16.4024 7.20048 16.7929C7.59101 17.1834 7.59101 17.8166 7.20048 18.2071L6.33955 19.068C5.94903 19.4586 5.31586 19.4586 4.92534 19.068Z",
      fill: "url(#paint7_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.7863 7.20711C16.3958 6.81658 16.3958 6.18341 16.7863 5.7929L17.6508 4.9284C18.0414 4.53789 18.6745 4.5379 19.065 4.92843C19.4556 5.31896 19.4555 5.95212 19.065 6.34264L18.2005 7.20714C17.81 7.59765 17.1768 7.59764 16.7863 7.20711Z",
      fill: "url(#paint8_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "6.5",
        x2: "12",
        y2: "17.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.9951",
        y1: "2",
        x2: "11.9951",
        y2: "5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11.9951",
        y1: "18.9996",
        x2: "11.9951",
        y2: "21.9964",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "4.92537",
        y1: "4.92842",
        x2: "7.20405",
        y2: "7.20711",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "16.7929",
        y1: "16.796",
        x2: "19.065",
        y2: "19.068",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint5_linear",
        x1: "1.99695",
        y1: "11.9982",
        x2: "4.99695",
        y2: "11.9982",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint6_linear",
        x1: "18.9966",
        y1: "11.9982",
        x2: "21.9934",
        y2: "11.9982",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint7_linear",
        x1: "4.92534",
        y1: "19.068",
        x2: "7.20048",
        y2: "16.7929",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint8_linear",
        x1: "16.7863",
        y1: "7.20713",
        x2: "19.065",
        y2: "4.92841",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Sync = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M4 12C4 7.58172 7.58172 4 12 4C14.5171 4 16.7288 5.1635 18.1822 6.99321L16.5029 6.98829C15.9506 6.98667 15.5016 7.43307 15.5 7.98535C15.4984 8.53763 15.9448 8.98666 16.4971 8.98828L19.9399 8.99836C19.9783 9.00071 20.017 9.00084 20.0557 8.9987L20.4971 9C20.7628 9.00077 21.0179 8.89576 21.2061 8.70814C21.3942 8.52052 21.5 8.26572 21.5 8L21.5 4C21.5 3.44771 21.0523 3 20.5 3C19.9477 3 19.5 3.44772 19.5 4L19.5 5.44947C17.6875 3.34038 15.023 2 12 2C6.47715 2 2 6.47715 2 12C2 12.5523 2.44772 13 3 13C3.55228 13 4 12.5523 4 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M20 12C20 16.4183 16.4183 20 12 20C9.48295 20 7.27119 18.8365 5.81776 17.0068L7.49707 17.0117C8.04935 17.0133 8.49838 16.5669 8.5 16.0146C8.50161 15.4624 8.05521 15.0133 7.50293 15.0117L4.06007 15.0016C4.02166 14.9993 3.983 14.9992 3.94428 15.0013L3.50293 15C3.23721 14.9992 2.9821 15.1042 2.79393 15.2919C2.60576 15.4795 2.5 15.7343 2.5 16L2.5 20C2.5 20.5523 2.94772 21 3.5 21C4.05229 21 4.5 20.5523 4.5 20L4.5 18.5505C6.31255 20.6596 8.97702 22 12 22C17.5228 22 22 17.5228 22 12C22 11.4477 21.5523 11 21 11C20.4477 11 20 11.4477 20 12Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.75",
        y1: "2",
        x2: "11.75",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12.25",
        y1: "11",
        x2: "12.25",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Tablet = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "3",
      y: "2",
      width: "18",
      height: "20",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "19",
      r: "1",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "18",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Tag = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M20.6811 13.2434C21.3004 12.6241 21.6181 11.7652 21.5509 10.892L21.1469 5.63919C21.0334 4.16385 19.8611 2.99161 18.3858 2.87812L13.133 2.47406C12.2598 2.40689 11.4009 2.72463 10.7816 3.3439L3.27199 10.8535C2.10042 12.0251 2.10042 13.9246 3.27199 15.0962L8.92884 20.753C10.1004 21.9246 11.9999 21.9246 13.1715 20.753L20.6811 13.2434Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M14.5857 7.318C13.9999 7.90379 13.9999 8.85354 14.5857 9.43932C15.1715 10.0251 16.1212 10.0251 16.707 9.43932C17.2928 8.85354 17.2928 7.90379 16.707 7.318C16.1212 6.73222 15.1715 6.73222 14.5857 7.318Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.51469 13.682L10.3431 16.5104C10.7336 16.9009 11.3668 16.9009 11.7573 16.5104C12.1479 16.1199 12.1479 15.4867 11.7573 15.0962L8.92891 12.2677C8.53838 11.8772 7.90522 11.8772 7.5147 12.2677C7.12417 12.6583 7.12417 13.2914 7.51469 13.682Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.9765",
        y1: "2.46521",
        x2: "11.9765",
        y2: "21.6317",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "15.6464",
        y1: "6.87866",
        x2: "15.6464",
        y2: "9.87866",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "9.63602",
        y1: "11.9749",
        x2: "9.63602",
        y2: "16.8033",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Target = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16ZM12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M19.7822 2.4794C19.6655 1.66374 18.6677 1.33138 18.0851 1.91409L15.8534 4.14647C15.6309 4.36903 15.5261 4.68335 15.5706 4.9949L15.8231 6.76264L11.7929 10.7929C11.4024 11.1834 11.4024 11.8166 11.7929 12.2071C12.1834 12.5976 12.8166 12.5976 13.2071 12.2071L17.2374 8.17679L19.0049 8.4293C19.3165 8.47381 19.6309 8.36902 19.8535 8.14645L22.0857 5.91419C22.6684 5.3315 22.3358 4.33366 21.52 4.21714L19.9999 4.00001L19.7822 2.4794Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "10",
        x2: "12",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "16.9398",
        y1: "1.62",
        x2: "16.9398",
        y2: "12.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Thermometer = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 13.9995C10 14.4328 9.85927 14.8544 9.59899 15.2009C9.22238 15.7021 9 16.3222 9 17C9 18.6569 10.3431 20 12 20C13.6569 20 15 18.6569 15 17C15 16.3222 14.7776 15.7021 14.401 15.2009C14.1407 14.8544 14 14.4328 14 13.9995V6C14 4.89543 13.1046 4 12 4C10.8954 4 10 4.89543 10 6V13.9995ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V13.9995C16.6279 14.8353 17 15.8742 17 17C17 19.7614 14.7614 22 12 22C9.23858 22 7 19.7614 7 17C7 15.8742 7.37209 14.8353 8 13.9995V6Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13 8C13 7.44772 12.5523 7 12 7C11.4477 7 11 7.44772 11 8V15.2676C10.4022 15.6134 10 16.2597 10 17C10 18.1046 10.8954 19 12 19C13.1046 19 14 18.1046 14 17C14 16.2597 13.5978 15.6134 13 15.2676V8Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ThumbsDown = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2 10C2 11.6569 3.34315 13 5 13H7V3H5C3.34315 3 2 4.34315 2 6V10Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M22.3788 12.5124C22.6944 13.7744 21.7402 14.9971 20.4393 14.9976L14.5 15L15.049 18.2938C15.3145 19.8871 14.469 21.4582 12.9929 22.1142V22.1142C12.0557 22.5308 11 21.8447 11 20.8191V19.0523C11 18.3711 10.7682 17.7102 10.3426 17.1783L7 13V3H17.6578C19.0344 3 20.2343 3.93679 20.5682 5.2722L22.3788 12.5124Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "4.5",
        y1: "13",
        x2: "4.5",
        y2: "3",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "15",
        y1: "23",
        x2: "15",
        y2: "3",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ThumbsUp = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2 15C2 13.3431 3.34315 12 5 12H7V22H5C3.34315 22 2 20.6569 2 19V15Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M22.3788 12.4876C22.6944 11.2256 21.7402 10.0029 20.4393 10.0024L14.5 10L15.049 6.70618C15.3145 5.11294 14.469 3.54176 12.9929 2.88576V2.88576C12.0557 2.4692 11 3.15526 11 4.18092V5.94766C11 6.62887 10.7682 7.2898 10.3426 7.82174L7 12V22H17.6578C19.0344 22 20.2343 21.0632 20.5682 19.7278L22.3788 12.4876Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "4.5",
        y1: "12",
        x2: "4.5",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "15",
        y1: "2",
        x2: "15",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Ticket = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2 7C2 5.34315 3.34315 4 5 4H19C20.6569 4 22 5.34315 22 7V9C22 9.55228 21.5255 9.97928 21.041 10.2445C20.4207 10.5841 20 11.2429 20 12C20 12.7571 20.4207 13.4159 21.041 13.7555C21.5255 14.0207 22 14.4477 22 15V17C22 18.6569 20.6569 20 19 20H5C3.34315 20 2 18.6569 2 17V15C2 14.4477 2.47452 14.0207 2.95897 13.7555C3.57933 13.4159 4 12.7571 4 12C4 11.2429 3.57933 10.5841 2.95897 10.2445C2.47452 9.97928 2 9.55228 2 9V7Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M11.0554 8.71739C11.3667 7.82183 12.6333 7.82183 12.9446 8.71739L13.1822 9.40107C13.3195 9.79614 13.6882 10.064 14.1064 10.0725L14.8301 10.0873C15.778 10.1066 16.1694 11.3111 15.4138 11.8839L14.837 12.3212C14.5038 12.5739 14.3629 13.0074 14.484 13.4077L14.6936 14.1005C14.9682 15.008 13.9435 15.7524 13.1653 15.2109L12.5712 14.7975C12.2279 14.5586 11.7721 14.5586 11.4288 14.7975L10.8347 15.2109C10.0565 15.7524 9.03181 15.008 9.30636 14.1005L9.51596 13.4077C9.63708 13.0074 9.49625 12.5739 9.16295 12.3212L8.58616 11.8839C7.83063 11.3111 8.22201 10.1066 9.16994 10.0873L9.8936 10.0725C10.3118 10.064 10.6805 9.79614 10.8178 9.40107L11.0554 8.71739Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "6",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Timer = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M10 2C9.44772 2 9 2.44772 9 3C9 3.55228 9.44772 4 10 4H11V5.06189C7.05369 5.55399 4 8.92038 4 13C4 17.4183 7.58172 21 12 21C16.4183 21 20 17.4183 20 13C20 8.92038 16.9463 5.55399 13 5.06189V4H14C14.5523 4 15 3.55228 15 3C15 2.44772 14.5523 2 14 2H10Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6.77131 4.47379C6.4831 4.0038 5.86523 3.85291 5.4233 4.18254C5.03325 4.47346 4.66294 4.78994 4.3148 5.1299C3.92035 5.51508 3.97313 6.14891 4.39247 6.50683C4.81181 6.86474 5.43843 6.81021 5.84055 6.43305C6.04287 6.24329 6.25385 6.06297 6.47283 5.89268C6.90803 5.55424 7.05952 4.94377 6.77131 4.47379Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17.2286 4.47379C17.5168 4.0038 18.1347 3.85291 18.5766 4.18254C18.9666 4.47346 19.337 4.78994 19.6851 5.1299C20.0795 5.51508 20.0268 6.14891 19.6074 6.50683C19.1881 6.86474 18.5615 6.81021 18.1593 6.43305C17.957 6.24329 17.746 6.06297 17.5271 5.89268C17.0919 5.55424 16.9404 4.94377 17.2286 4.47379Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15.2071 11.2071C15.5976 10.8166 15.5976 10.1834 15.2071 9.79289C14.8166 9.40237 14.1834 9.40237 13.7929 9.79289L12.518 11.0677C12.3528 11.0236 12.1792 11 12 11C10.8954 11 10 11.8954 10 13C10 14.1046 10.8954 15 12 15C13.1046 15 14 14.1046 14 13C14 12.8208 13.9764 12.6472 13.9323 12.482L15.2071 11.2071Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.9999",
        y1: "4.0058",
        x2: "11.9999",
        y2: "6.74769",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11.9999",
        y1: "4.0058",
        x2: "11.9999",
        y2: "6.74769",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12.75",
        y1: "9.5",
        x2: "12.75",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const ToggleOff = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M9 5C5.13401 5 2 8.13401 2 12C2 15.866 5.13401 19 9 19H15C18.866 19 22 15.866 22 12C22 8.13401 18.866 5 15 5H9Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M9 8.5C7.067 8.5 5.5 10.067 5.5 12C5.5 13.933 7.067 15.5 9 15.5C10.933 15.5 12.5 13.933 12.5 12C12.5 10.067 10.933 8.5 9 8.5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9",
        y1: "8.5",
        x2: "9",
        y2: "15.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ToggleOn = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M9 5C5.13401 5 2 8.13401 2 12C2 15.866 5.13401 19 9 19H15C18.866 19 22 15.866 22 12C22 8.13401 18.866 5 15 5H9Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M15 8.5C13.067 8.5 11.5 10.067 11.5 12C11.5 13.933 13.067 15.5 15 15.5C16.933 15.5 18.5 13.933 18.5 12C18.5 10.067 16.933 8.5 15 8.5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "15",
        y1: "8.5",
        x2: "15",
        y2: "15.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Tool = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M10.999 10.158l2.828 2.829-7.07 7.07a2 2 0 01-2.83-2.828L11 10.16z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16.829 4.328c.488-.488.338-1.31-.337-1.453a6 6 0 104.618 4.618c-.143-.675-.965-.824-1.453-.336L18.07 8.744a2 2 0 11-2.829-2.829l1.588-1.587z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 8.585,
        y1: 10.158,
        x2: 8.585,
        y2: 20.643,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 15.242,
        y1: 2.744,
        x2: 15.242,
        y2: 14.744,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Train = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M14 1C14.5523 1 15 1.44772 15 2H18C19.6569 2 21 3.34315 21 5V15C21 16.6569 19.6569 18 18 18H6C4.34315 18 3 16.6569 3 15V5C3 3.34315 4.34315 2 6 2H9C9 1.44772 9.44772 1 10 1H14Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "6",
      cy: "15",
      r: "1",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "18",
      cy: "15",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M8.23602 21C7.85725 21 7.51098 21.214 7.34159 21.5528L6.89441 22.4472C6.64743 22.9412 6.04676 23.1414 5.55278 22.8944C5.05879 22.6475 4.85856 22.0468 5.10554 21.5528L5.55272 20.6584C6.06089 19.642 7.09969 19 8.23602 19H15.7639C16.9002 19 17.939 19.642 18.4472 20.6583L18.8944 21.5528C19.1414 22.0468 18.9412 22.6474 18.4472 22.8944C17.9532 23.1414 17.3525 22.9412 17.1056 22.4472L16.6583 21.5528C16.4889 21.214 16.1427 21 15.7639 21H8.23602Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M5 5C5 4.44772 5.44772 4 6 4H18C18.5523 4 19 4.44772 19 5V9C19 9.55228 18.5523 10 18 10H6C5.44772 10 5 9.55228 5 9V5Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "1",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "6",
        y1: "14",
        x2: "6",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "18",
        y1: "14",
        x2: "18",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "19",
        x2: "12",
        y2: "23.0002",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "10",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Trash = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M4 7H20V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 10C9.55228 10 10 10.4477 10 11V18C10 18.5523 9.55228 19 9 19C8.44772 19 8 18.5523 8 18V11C8 10.4477 8.44772 10 9 10Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15 10C15.5523 10 16 10.4477 16 11V18C16 18.5523 15.5523 19 15 19C14.4477 19 14 18.5523 14 18V11C14 10.4477 14.4477 10 15 10Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 5C7 3.34315 8.34315 2 10 2H14C15.6569 2 17 3.34315 17 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H3C2.44772 7 2 6.55228 2 6C2 5.44772 2.44772 5 3 5H7ZM10 4H14C14.5523 4 15 4.44772 15 5H9C9 4.44772 9.44772 4 10 4Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "7",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9",
        y1: "10",
        x2: "9",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "15",
        y1: "10",
        x2: "15",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "7",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const TrendingDown = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.7071 16.7071C21.0976 16.3166 21.0976 15.6834 20.7071 15.2929L14.4142 9C13.6332 8.21895 12.3668 8.21895 11.5858 9L9 11.5858L3.70711 6.29289C3.31658 5.90237 2.68342 5.90237 2.29289 6.29289C1.90237 6.68342 1.90237 7.31658 2.29289 7.70711L7.58579 13C8.36683 13.781 9.63316 13.7811 10.4142 13L13 10.4142L19.2929 16.7071C19.6834 17.0976 20.3166 17.0976 20.7071 16.7071Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15 17C15 17.5523 15.4477 18 16 18H21C21.5523 18 22 17.5523 22 17V12C22 11.4477 21.5523 11 21 11C20.4477 11 20 11.4477 20 12V16H16C15.4477 16 15 16.4477 15 17Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.5",
        y1: "17",
        x2: "11.5",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18.5",
        y1: "18",
        x2: "18.5",
        y2: "11",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const TrendingUp = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M20.7071 7.29289C21.0976 7.68342 21.0976 8.31658 20.7071 8.70711L14.4142 15C13.6332 15.7811 12.3668 15.781 11.5858 15L9 12.4142L3.70711 17.7071C3.31658 18.0976 2.68342 18.0976 2.29289 17.7071C1.90237 17.3166 1.90237 16.6834 2.29289 16.2929L7.58579 11C8.36683 10.219 9.63316 10.2189 10.4142 11L13 13.5858L19.2929 7.29289C19.6834 6.90237 20.3166 6.90237 20.7071 7.29289Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15 7C15 6.44772 15.4477 6 16 6H21C21.5523 6 22 6.44772 22 7V12C22 12.5523 21.5523 13 21 13C20.4477 13 20 12.5523 20 12V8H16C15.4477 8 15 7.55228 15 7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.5",
        y1: "7",
        x2: "11.5",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18.5",
        y1: "6",
        x2: "18.5",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Trophy = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13 20H16C16.5523 20 17 20.4477 17 21C17 21.5523 16.5523 22 16 22H8C7.44772 22 7 21.5523 7 21C7 20.4477 7.44772 20 8 20H11V15H13V20Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5 6H3V8C3 9.10457 3.89543 10 5 10V6ZM3 4C1.89543 4 1 4.89543 1 6V8C1 10.2091 2.79086 12 5 12H7V4H3Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M19 6H21V8C21 9.10457 20.1046 10 19 10V6ZM21 4C22.1046 4 23 4.89543 23 6V8C23 10.2091 21.2091 12 19 12H17V4H21Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M5 4C5 2.89543 5.89543 2 7 2H17C18.1046 2 19 2.89543 19 4V10C19 13.866 15.866 17 12 17V17C8.13401 17 5 13.866 5 10V4Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "15",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "4",
        y1: "4",
        x2: "4",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "20",
        y1: "4",
        x2: "20",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Truck = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14 6H17.1459C18.2822 6 19.321 6.64201 19.8292 7.65836L21.6833 11.3666C21.8916 11.7831 22 12.2425 22 12.7082V15C22 16.6569 20.6569 18 19 18H14V6ZM16 8H17.1459C17.5247 8 17.8709 8.214 18.0403 8.55279L19.2639 11H16V8Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2 7C2 5.34315 3.34315 4 5 4H13C14.6569 4 16 5.34315 16 7V18H5C3.34315 18 2 16.6569 2 15V7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "7",
      cy: "18",
      r: "2",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "18",
      cy: "18",
      r: "2",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "18",
        y1: "6",
        x2: "18",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9",
        y1: "4",
        x2: "9",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "7",
        y1: "16",
        x2: "7",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "18",
        y1: "16",
        x2: "18",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const TV = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "3",
      width: "20",
      height: "15",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 20C7 19.4477 7.44772 19 8 19H16C16.5523 19 17 19.4477 17 20C17 20.5523 16.5523 21 16 21H8C7.44772 21 7 20.5523 7 20Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "19",
        x2: "12",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Twitch = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M3 5C3 3.34315 4.34315 2 6 2H18C19.6569 2 21 3.34315 21 5V12.8488C21 13.5899 20.7257 14.3048 20.2299 14.8557L17.3938 18.0069C16.8249 18.639 16.0144 19 15.1639 19H12.3837C12.1367 19 11.8984 19.0914 11.7148 19.2567L8.66897 21.9979C8.02544 22.5771 7 22.1204 7 21.2546V19H6C4.34315 19 3 17.6569 3 16V5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M10 7C10.5523 7 11 7.44772 11 8V12C11 12.5523 10.5523 13 10 13C9.44772 13 9 12.5523 9 12V8C9 7.44772 9.44772 7 10 7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M15 7C15.5523 7 16 7.44772 16 8V12C16 12.5523 15.5523 13 15 13C14.4477 13 14 12.5523 14 12V8C14 7.44772 14.4477 7 15 7Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "23.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "10",
        y1: "7",
        x2: "10",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "15",
        y1: "7",
        x2: "15",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Twitter = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M20.1066 8.63423C20.0826 8.41077 20.0546 8.23168 20.0316 8.10405L21.9161 5.27735C22.0345 5.09962 22.027 4.86625 21.8974 4.6965C21.7677 4.52675 21.5446 4.45811 21.3419 4.52566L18.7212 5.39922C18.5827 5.19265 18.3773 4.92019 18.1036 4.64645C17.5491 4.09195 16.6794 3.5 15.5 3.5C14.2775 3.5 13.3727 3.84218 12.7266 4.40395C12.0872 4.95995 11.75 5.68869 11.5775 6.37873C11.4052 7.06789 11.3898 7.74611 11.4147 8.24372C11.422 8.38883 11.4327 8.52017 11.4444 8.63384C10.1893 8.90075 8.87591 8.49188 7.58934 7.72835C6.17064 6.88641 4.87015 5.66301 3.85358 4.64645C3.71259 4.50546 3.50131 4.46171 3.31593 4.53513C3.13054 4.60855 3.0065 4.78509 3.00027 4.98438C2.87287 9.0612 3.71338 13.9958 7.51119 16.498C5.9138 17.3622 4.34766 17.7652 2.43801 18.0039C2.21938 18.0312 2.04441 18.1984 2.00721 18.4156C1.97001 18.6328 2.07935 18.8487 2.27642 18.9472C7.43512 21.5266 14.1199 21.3401 17.9 16.3C19.467 14.2107 19.9921 12.1159 20.1233 10.5415C20.1888 9.7552 20.1563 9.09808 20.1066 8.63423Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "3.5",
        x2: "12",
        y2: "20.5815",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const Umbrella = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 12C12.5523 12 13 12.4477 13 13V19C13 20.6569 11.6569 22 10 22C8.34315 22 7 20.6569 7 19V18C7 17.4477 7.44772 17 8 17C8.55228 17 9 17.4477 9 18V19C9 19.5523 9.44772 20 10 20C10.5523 20 11 19.5523 11 19V13C11 12.4477 11.4477 12 12 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 1C12.5523 1 13 1.44772 13 2V4C13 4.55228 12.5523 5 12 5C11.4477 5 11 4.55228 11 4V2C11 1.44772 11.4477 1 12 1Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M12 3C6.81417 3 2.55031 6.94741 2.04924 12.0014C1.99475 12.551 2.44772 13 3 13H21C21.5523 13 22.0053 12.551 21.9508 12.0014C21.4497 6.94741 17.1858 3 12 3Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10",
        y1: "12",
        x2: "10",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "1",
        x2: "12",
        y2: "5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "3",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Underline = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M5 21C5 20.4477 5.44772 20 6 20H18C18.5523 20 19 20.4477 19 21C19 21.5523 18.5523 22 18 22H6C5.44772 22 5 21.5523 5 21Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6 2C6.55228 2 7 2.44772 7 3V11C7 13.7614 9.23858 16 12 16C14.7614 16 17 13.7614 17 11V3C17 2.44772 17.4477 2 18 2C18.5523 2 19 2.44772 19 3V11C19 14.866 15.866 18 12 18C8.13401 18 5 14.866 5 11V3C5 2.44772 5.44772 2 6 2Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "20",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Unlock = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14.9055 6.24926C14.5724 4.95512 13.3964 4 11.9999 4C10.3431 4 8.99992 5.34315 8.99992 7V8H17C18.6569 8 20 9.34315 20 11V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V11C4 9.34317 5.3431 8.00004 6.99992 8V7C6.99992 4.23858 9.2385 2 11.9999 2C14.3311 2 16.2873 3.59442 16.8423 5.75074C16.98 6.28559 16.658 6.83078 16.1232 6.96844C15.5883 7.1061 15.0431 6.78411 14.9055 6.24926Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M13 15.7324C13.5978 15.3866 14 14.7403 14 14C14 12.8954 13.1046 12 12 12C10.8954 12 10 12.8954 10 14C10 14.7403 10.4022 15.3866 11 15.7324V17C11 17.5523 11.4477 18 12 18C12.5523 18 13 17.5523 13 17V15.7324Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "12",
        x2: "12",
        y2: "18",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Update = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M4 12C4 7.58172 7.58172 4 12 4C14.5171 4 16.7288 5.1635 18.1822 6.99321L16.5029 6.98829C15.9506 6.98667 15.5016 7.43307 15.5 7.98535C15.4984 8.53763 15.9448 8.98666 16.4971 8.98828L19.9399 8.99836C19.9783 9.00071 20.017 9.00084 20.0557 8.9987L20.4971 9C20.7628 9.00077 21.0179 8.89576 21.2061 8.70814C21.3942 8.52052 21.5 8.26572 21.5 8L21.5 4C21.5 3.44771 21.0523 3 20.5 3C19.9477 3 19.5 3.44772 19.5 4L19.5 5.44947C17.6875 3.34038 15.023 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C15.9359 22 19.2641 19.7278 20.8955 16.445C21.1413 15.9505 20.9396 15.3503 20.445 15.1045C19.9505 14.8587 19.3503 15.0604 19.1045 15.555C17.7905 18.1991 15.1315 20 12 20C7.58172 20 4 16.4183 4 12Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 7C12.5523 7 13 7.44772 13 8V11.5858L14.7071 13.2929C15.0976 13.6834 15.0976 14.3166 14.7071 14.7071C14.3166 15.0976 13.6834 15.0976 13.2929 14.7071L11.5858 13C11.2107 12.6249 11 12.1162 11 11.5858V8C11 7.44772 11.4477 7 12 7Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.75",
        y1: "2",
        x2: "11.75",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13",
        y1: "7",
        x2: "13",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Upload = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M17.2071 9.2905C17.5976 9.68103 17.5976 10.3142 17.2071 10.7047C16.8166 11.0952 16.1834 11.0952 15.7929 10.7047L13.0019 7.91377V15C13.0019 15.5523 12.5542 16 12.0019 16C11.4496 16 11.0019 15.5523 11.0019 15V7.91368L8.20894 10.7067C7.81841 11.0972 7.18525 11.0972 6.79472 10.7067C6.4042 10.3161 6.4042 9.68298 6.79472 9.29245L11.2948 4.79241C11.4823 4.60487 11.7367 4.49951 12.0019 4.49951C12.2671 4.49951 12.5214 4.60487 12.709 4.79241L17.2071 9.2905Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M4 14C4.55228 14 5 14.4477 5 15V17C5 17.5523 5.44772 18 6 18H18C18.5523 18 19 17.5523 19 17V15C19 14.4477 19.4477 14 20 14C20.5523 14 21 14.4477 21 15V17C21 18.6569 19.6569 20 18 20H6C4.34315 20 3 18.6569 3 17V15C3 14.4477 3.44772 14 4 14Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12.0009",
        y1: "4.49951",
        x2: "12.0009",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "14",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Utensils = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M20 4C20 3.44772 19.5523 3 19 3C16.2386 3 14 5.23858 14 8V14C14 14.5523 14.4477 15 15 15H18L18 20C18 20.5523 18.4477 21 19 21C19.5523 21 20 20.5523 20 20L20 4Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6 4C6 3.44772 5.55228 3 5 3C4.44772 3 4 3.44772 4 4V9C4 10.8638 5.27477 12.4299 7 12.874V20C7 20.5523 7.44772 21 8 21C8.55228 21 9 20.5523 9 20V12.874C10.7252 12.4299 12 10.8638 12 9V4C12 3.44772 11.5523 3 11 3C10.4477 3 10 3.44772 10 4V8H9V4C9 3.44772 8.55228 3 8 3C7.44772 3 7 3.44772 7 4V8H6V4Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "17",
        y1: "3",
        x2: "17",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "8",
        y1: "3",
        x2: "8",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const VideoOff = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.29289 2.29289C2.68342 1.90237 3.31658 1.90237 3.70711 2.29289L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L2.29289 3.70711C1.90237 3.31658 1.90237 2.68342 2.29289 2.29289Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M21.0564 16.8121C21.6083 16.4703 22 15.8644 22 15.1136V8.8864C22 7.25965 20.1613 6.31341 18.8375 7.25893L15 10V10.7557L21.0564 16.8121Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M6.41586 5H5C3.34315 5 2 6.34315 2 8V16C2 17.6569 3.34315 19 5 19H14C15.6569 19 17 17.6569 17 16V15.5841L6.41586 5Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17 12.7557V8C17 6.34315 15.6569 5 14 5H9.24429L17 12.7557Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "18.5",
        y1: "6.88287",
        x2: "18.5",
        y2: "16.8121",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "9.5",
        y1: "5",
        x2: "9.5",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "9.5",
        y1: "5",
        x2: "9.5",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const VideoRecorder = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M18.8375 7.25891L15 10V14L18.8375 16.7411C20.1613 17.6866 22 16.7404 22 15.1136V8.88638C22 7.25963 20.1613 6.31339 18.8375 7.25891Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "5",
      width: "15",
      height: "14",
      rx: "3",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "18.5",
        y1: "5",
        x2: "18.5",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9.5",
        y1: "5",
        x2: "9.5",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const VolumeHigh = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M15.2361 15.8042C15.4068 16.3295 15.9782 16.6251 16.4591 16.3535C17.0797 16.003 17.6216 15.5218 18.0451 14.9389C18.6658 14.0847 19 13.0559 19 12C19 10.9441 18.6658 9.91529 18.0451 9.06106C17.6216 8.47819 17.0797 7.99701 16.4591 7.64646C15.9782 7.37483 15.4068 7.6705 15.2361 8.19576C15.0654 8.72101 15.3691 9.27406 15.8096 9.6072C16.0439 9.78437 16.2523 9.99606 16.4271 10.2366C16.7995 10.7492 17 11.3664 17 12C17 12.6335 16.7995 13.2508 16.4271 13.7633C16.2523 14.0039 16.0439 14.2156 15.8096 14.3928C15.3691 14.7259 15.0654 15.279 15.2361 15.8042Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17.1631 18.6574C17.3337 19.1827 17.9015 19.4757 18.4014 19.2409C19.6178 18.6695 20.6758 17.7982 21.4721 16.7023C22.4651 15.3355 22.9999 13.6894 22.9999 12C22.9999 10.3106 22.4651 8.6645 21.4721 7.29772C20.6758 6.20179 19.6178 5.33054 18.4014 4.75913C17.9015 4.52431 17.3337 4.81735 17.1631 5.34261C16.9924 5.86786 17.2854 6.42489 17.775 6.68033C18.5933 7.10721 19.3063 7.71936 19.854 8.47329C20.5988 9.49838 20.9999 10.7329 20.9999 12C20.9999 13.2671 20.5988 14.5016 19.854 15.5267C19.3063 16.2806 18.5933 16.8928 17.775 17.3197C17.2854 17.5751 16.9924 18.1321 17.1631 18.6574Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M14 19.5925V4.40754C14 2.68922 11.9762 1.77086 10.683 2.90238L6 7H4C2.34315 7 1 8.34315 1 10V14C1 15.6569 2.34315 17 4 17H6L10.683 21.0976C11.9762 22.2291 14 21.3108 14 19.5925Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "17.094",
        y1: "7.5437",
        x2: "17.094",
        y2: "16.4563",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "20.057",
        y1: "4.67719",
        x2: "20.057",
        y2: "19.3228",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "7.5",
        y1: "0",
        x2: "7.5",
        y2: "24",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const VolumeOff = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M8.41586 6.99998H7C5.34315 6.99998 4 8.34313 4 9.99998V14C4 15.6568 5.34315 17 7 17H9L13.683 21.0976C14.9762 22.2291 17 21.3108 17 19.5924V15.5841L8.41586 6.99998Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17 12.7557V4.40752C17 2.6892 14.9762 1.77084 13.683 2.90236L10.197 5.95265L17 12.7557Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.29289 2.29289C2.68342 1.90237 3.31658 1.90237 3.70711 2.29289L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L2.29289 3.70711C1.90237 3.31658 1.90237 2.68342 2.29289 2.29289Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "10.5",
        y1: "2.40363",
        x2: "10.5",
        y2: "21.5963",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "10.5",
        y1: "2.40363",
        x2: "10.5",
        y2: "21.5963",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Volume = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("mask", {
      id: "path-1-inside-1",
      fill: "white",
      children: /* @__PURE__ */ jsx$3("path", {
        d: "M17.2361 15.8042C17.4067 16.3295 17.9782 16.6251 18.459 16.3535C19.0796 16.003 19.6216 15.5218 20.0451 14.9389C20.6657 14.0847 21 13.0559 21 12C21 10.9441 20.6657 9.91531 20.0451 9.06107C19.6216 8.47821 19.0796 7.99702 18.459 7.64647C17.9782 7.37485 17.4067 7.67052 17.2361 8.19577V8.19577C17.0654 8.72103 17.3691 9.27408 17.8096 9.60721C18.0439 9.78439 18.2523 9.99608 18.4271 10.2366C18.7994 10.7492 19 11.3665 19 12C19 12.6335 18.7994 13.2508 18.4271 13.7634C18.2523 14.0039 18.0439 14.2156 17.8096 14.3928C17.3691 14.7259 17.0654 15.279 17.2361 15.8042V15.8042Z"
      })
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M17.2361 15.8042C17.4067 16.3295 17.9782 16.6251 18.459 16.3535C19.0796 16.003 19.6216 15.5218 20.0451 14.9389C20.6657 14.0847 21 13.0559 21 12C21 10.9441 20.6657 9.91531 20.0451 9.06107C19.6216 8.47821 19.0796 7.99702 18.459 7.64647C17.9782 7.37485 17.4067 7.67052 17.2361 8.19577V8.19577C17.0654 8.72103 17.3691 9.27408 17.8096 9.60721C18.0439 9.78439 18.2523 9.99608 18.4271 10.2366C18.7994 10.7492 19 11.3665 19 12C19 12.6335 18.7994 13.2508 18.4271 13.7634C18.2523 14.0039 18.0439 14.2156 17.8096 14.3928C17.3691 14.7259 17.0654 15.279 17.2361 15.8042V15.8042Z",
      stroke: "url(#paint0_linear)",
      "stroke-width": "4",
      mask: "url(#path-1-inside-1)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16 19.5925V4.40754C16 2.68922 13.9762 1.77086 12.683 2.90238L8 7H6C4.34315 7 3 8.34315 3 10V14C3 15.6569 4.34315 17 6 17H8L12.683 21.0976C13.9762 22.2291 16 21.3108 16 19.5925Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "16",
        y1: "7",
        x2: "16",
        y2: "17",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "9.5",
        y1: "0",
        x2: "9.5",
        y2: "24",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Wallet = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M22 19V9C22 7.34315 20.6569 6 19 6H5V4H2V19C2 20.6569 3.34315 22 5 22H19C20.6569 22 22 20.6569 22 19Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M16 14C16 12.8954 16.8954 12 18 12H22V16H18C16.8954 16 16 15.1046 16 14V14Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M4 2C2.89543 2 2 2.89543 2 4C2 5.10457 2.89543 6 4 6H19C19.3506 6 19.6872 6.06015 20 6.17071V3C20 2.44772 19.5523 2 19 2H4Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "19",
        y1: "12",
        x2: "19",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "11",
        y1: "2",
        x2: "11",
        y2: "6.17071",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Warning = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M9.394 4.574c1.15-2.02 4.062-2.02 5.213 0l6.805 11.94c1.14 2-.305 4.486-2.607 4.486H5.195c-2.302 0-3.746-2.485-2.606-4.485L9.394 4.574z",
      fill: "url(#prefix__paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 14a1 1 0 001-1V8a1 1 0 10-2 0v5a1 1 0 001 1z",
      fill: "url(#prefix__paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: 12,
      cy: 17,
      r: 1,
      fill: "url(#prefix__paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint0_linear",
        x1: 12,
        y1: 0,
        x2: 12,
        y2: 21,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#fff"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint1_linear",
        x1: 12,
        y1: 14,
        x2: 12,
        y2: 7,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "prefix__paint2_linear",
        x1: 12,
        y1: 16,
        x2: 12,
        y2: 18,
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: 1,
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Watch = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7.99184 4.37141C8.28824 2.9882 9.51063 2 10.9252 2H13.0748C14.4894 2 15.7118 2.9882 16.0082 4.37141L17 9H7L7.99184 4.37141Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 15H17L16.0082 19.6286C15.7118 21.0118 14.4894 22 13.0748 22H10.9253C9.51068 22 8.2883 21.0118 7.99189 19.6286L7 15Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("rect", {
      x: "17",
      y: "10",
      width: "3",
      height: "4",
      rx: "1.5",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "12",
      r: "7",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 8C12.5523 8 13 8.44772 13 9V11.5858L14.2071 12.7929C14.5976 13.1834 14.5976 13.8166 14.2071 14.2071C13.8166 14.5976 13.1834 14.5976 12.7929 14.2071L11.4393 12.8536C11.158 12.5722 11 12.1907 11 11.7929V9C11 8.44772 11.4477 8 12 8Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "15",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "18.5",
        y1: "10",
        x2: "18.5",
        y2: "14",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "12.75",
        y1: "8",
        x2: "12.75",
        y2: "14.5",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const WifiOff = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "18",
      r: "2",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M13.5997 12.1838C13.0858 12.0636 12.5503 12 12 12C10.0641 12 8.31009 12.7872 7.04395 14.0566C6.65392 14.4476 6.65472 15.0807 7.04574 15.4708C7.43676 15.8608 8.06993 15.86 8.45996 15.469C9.36624 14.5604 10.6167 14 12 14C13.3833 14 14.6338 14.5604 15.54 15.469C15.9188 15.8487 16.5267 15.8604 16.9196 15.5038L13.5997 12.1838Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9.66447 8.24861C7.56653 8.7024 5.69105 9.75464 4.22721 11.2165C3.83642 11.6067 3.83599 12.2399 4.22625 12.6307C4.61651 13.0215 5.24967 13.0219 5.64046 12.6317C7.145 11.1292 9.17593 10.1576 11.4334 10.0175L9.66447 8.24861ZM14.6363 10.392C16.0592 10.8272 17.3322 11.6056 18.3596 12.6317C18.7504 13.0219 19.3836 13.0215 19.7738 12.6307C20.1641 12.2399 20.1637 11.6067 19.7729 11.2165C17.8379 9.28413 15.1836 8.06747 12.247 8.00272L14.6363 10.392Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M6.46887 5.05301C4.55047 5.81449 2.82645 6.96012 1.39244 8.39441C1.00195 8.78497 1.00201 9.41813 1.39257 9.80862C1.78313 10.1991 2.4163 10.199 2.80678 9.80849C4.2533 8.36169 6.03797 7.25476 8.03226 6.6164L6.46887 5.05301ZM10.3482 6.10389C10.8891 6.03533 11.4404 6 12 6C15.5906 6 18.8396 7.45434 21.1933 9.80849C21.5838 10.199 22.217 10.1991 22.6075 9.80862C22.9981 9.41813 22.9981 8.78497 22.6077 8.39441C19.8942 5.68044 16.1424 4 12 4C10.8398 4 9.71026 4.13183 8.62556 4.38126L10.3482 6.10389Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M2.29289 2.29289C2.68342 1.90237 3.31658 1.90237 3.70711 2.29289L21.7071 20.2929C22.0976 20.6834 22.0976 21.3166 21.7071 21.7071C21.3166 22.0976 20.6834 22.0976 20.2929 21.7071L2.29289 3.70711C1.90237 3.31658 1.90237 2.68342 2.29289 2.29289Z",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "16",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.8358",
        y1: "12",
        x2: "11.8358",
        y2: "15.7628",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "8.00272",
        x2: "12",
        y2: "12.9241",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "10.1014",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Wifi = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("circle", {
      cx: "12",
      cy: "18",
      r: "2",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 14C10.6167 14 9.36624 14.5604 8.45996 15.469C8.06993 15.86 7.43676 15.8608 7.04574 15.4708C6.65472 15.0807 6.65392 14.4476 7.04395 14.0566C8.31009 12.7872 10.0641 12 12 12C13.9359 12 15.6899 12.7872 16.9561 14.0566C17.3461 14.4476 17.3453 15.0807 16.9543 15.4708C16.5632 15.8608 15.9301 15.86 15.54 15.469C14.6338 14.5604 13.3833 14 12 14Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 10C9.5167 10 7.26988 11.0045 5.64046 12.6317C5.24967 13.0219 4.61651 13.0215 4.22625 12.6307C3.83599 12.2399 3.83642 11.6067 4.22721 11.2165C6.21631 9.2301 8.96548 8 12 8C15.0346 8 17.7838 9.2301 19.7729 11.2165C20.1637 11.6067 20.1641 12.2399 19.7738 12.6307C19.3836 13.0215 18.7504 13.0219 18.3596 12.6317C16.7302 11.0045 14.4834 10 12 10Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M12 6C8.40947 6 5.16048 7.45434 2.80678 9.80849C2.4163 10.199 1.78313 10.1991 1.39257 9.80862C1.00201 9.41813 1.00195 8.78497 1.39244 8.39441C4.10589 5.68044 7.85767 4 12 4C16.1424 4 19.8942 5.68044 22.6077 8.39441C22.9981 8.78497 22.9981 9.41813 22.6075 9.80862C22.217 10.1991 21.5838 10.199 21.1933 9.80849C18.8396 7.45434 15.5906 6 12 6Z",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "16",
        x2: "12",
        y2: "20",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "12",
        x2: "12",
        y2: "15.7628",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "8",
        x2: "12",
        y2: "12.9241",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "12",
        y1: "4",
        x2: "12",
        y2: "10.1014",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Wind = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M9 5C8.63112 5 8.30758 5.19922 8.13317 5.50073C7.85663 5.97879 7.2449 6.14215 6.76684 5.86561C6.28878 5.58906 6.12542 4.97733 6.40196 4.49927C6.91916 3.60518 7.88832 3 9 3C10.6569 3 12 4.34315 12 6C12 7.65685 10.6569 9 9 9H4C3.44772 9 3 8.55228 3 8C3 7.44772 3.44772 7 4 7H9C9.55228 7 10 6.55228 10 6C10 5.44772 9.55228 5 9 5Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M14 19C13.6311 19 13.3076 18.8008 13.1332 18.4993C12.8566 18.0212 12.2449 17.8579 11.7668 18.1344C11.2888 18.4109 11.1254 19.0227 11.402 19.5007C11.9192 20.3948 12.8883 21 14 21C15.6569 21 17 19.6569 17 18C17 16.3431 15.6569 15 14 15H4C3.44772 15 3 15.4477 3 16C3 16.5523 3.44772 17 4 17H14C14.5523 17 15 17.4477 15 18C15 18.5523 14.5523 19 14 19Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M17 7C16.1307 7 15.3886 7.5551 15.1135 8.33325C14.9295 8.85396 14.3582 9.12689 13.8375 8.94284C13.3167 8.75879 13.0438 8.18747 13.2279 7.66675C13.7765 6.11451 15.2568 5 17 5C19.2091 5 21 6.79086 21 9C21 11.2091 19.2091 13 17 13H4C3.44772 13 3 12.5523 3 12C3 11.4477 3.44772 11 4 11H17C18.1046 11 19 10.1046 19 9C19 7.89543 18.1046 7 17 7Z",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "7.5",
        y1: "3",
        x2: "7.5",
        y2: "9",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "10",
        y1: "21",
        x2: "10",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "13",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const Window = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("rect", {
      x: "2",
      y: "2",
      width: "20",
      height: "20",
      rx: "3",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M2 5C2 3.34315 3.34315 2 5 2H19C20.6569 2 22 3.34315 22 5V8H2V5Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "5",
      cy: "5",
      r: "1",
      fill: "url(#paint2_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "8",
      cy: "5",
      r: "1",
      fill: "url(#paint3_linear)"
    }), /* @__PURE__ */ jsx$3("circle", {
      cx: "11",
      cy: "5",
      r: "1",
      fill: "url(#paint4_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "22",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "12",
        y1: "2",
        x2: "12",
        y2: "8",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint2_linear",
        x1: "5",
        y1: "4",
        x2: "5",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint3_linear",
        x1: "8",
        y1: "4",
        x2: "8",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint4_linear",
        x1: "11",
        y1: "4",
        x2: "11",
        y2: "6",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const YouTube = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M2.62305 8.2617C2.84605 6.92367 3.93069 5.89659 5.27887 5.74679L5.80914 5.68787C9.92372 5.2307 14.0763 5.2307 18.1909 5.68787L18.7211 5.74679C20.0693 5.89659 21.1539 6.92367 21.3769 8.2617V8.2617C21.7895 10.7368 21.7895 13.2632 21.3769 15.7383V15.7383C21.1539 17.0763 20.0693 18.1034 18.7211 18.2532L18.1909 18.3121C14.0763 18.7693 9.92372 18.7693 5.80914 18.3121L5.27887 18.2532C3.93069 18.1034 2.84605 17.0763 2.62305 15.7383V15.7383C2.21053 13.2632 2.21053 10.7368 2.62305 8.2617V8.2617Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      d: "M14.7519 11.1679C15.3457 11.5638 15.3457 12.4362 14.7519 12.8321L11.5547 14.9635C10.8901 15.4066 10 14.9302 10 14.1315V9.86852C10 9.06982 10.8901 8.59343 11.5547 9.03647L14.7519 11.1679Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "12",
        y1: "5",
        x2: "12",
        y2: "19",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "13",
        y1: "8",
        x2: "13",
        y2: "16",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      })]
    })]
  }));
});
const Zap = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M15.0034 4.69724C15.451 2.17765 12.2728 0.692639 10.6273 2.65246L3.58895 11.0353C2.22322 12.6619 3.37965 15.1429 5.50357 15.1429H9.7351L8.99616 19.3027C8.54859 21.8223 11.7267 23.3073 13.3722 21.3475L20.4107 12.9647C21.7764 11.3381 20.62 8.85714 18.496 8.85714H14.2645L15.0034 4.69724Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("defs", {
      children: /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11.9998",
        y1: "1.75031",
        x2: "11.9998",
        y2: "22.2497",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })
    })]
  }));
});
const ZoomIn = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      d: "M12 8C12 7.44772 11.5523 7 11 7C10.4477 7 10 7.44772 10 8V10H8C7.44772 10 7 10.4477 7 11C7 11.5523 7.44772 12 8 12H10V14C10 14.5523 10.4477 15 11 15C11.5523 15 12 14.5523 12 14V12H14C14.5523 12 15 11.5523 15 11C15 10.4477 14.5523 10 14 10H12V8Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.0319 16.6177C19.2635 15.078 20 13.125 20 11C20 6.02944 15.9706 2 11 2C6.02944 2 2 6.02944 2 11C2 15.9706 6.02944 20 11 20C13.125 20 15.078 19.2635 16.6177 18.0319L19.2929 20.7071C19.6834 21.0976 20.3166 21.0976 20.7071 20.7071C21.0976 20.3166 21.0976 19.6834 20.7071 19.2929L18.0319 16.6177ZM18 11C18 14.866 14.866 18 11 18C7.13401 18 4 14.866 4 11C4 7.13401 7.13401 4 11 4C14.866 4 18 7.13401 18 11Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11",
        y1: "7",
        x2: "11",
        y2: "15",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.5",
        y1: "2",
        x2: "11.5",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
const ZoomOut = memo((props) => {
  return /* @__PURE__ */ jsxs$2("svg", __spreadProps2(__spreadValues2({
    width: "100%",
    height: "100%",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), {
    children: [/* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M7 11C7 10.4477 7.44772 10 8 10H14C14.5523 10 15 10.4477 15 11C15 11.5523 14.5523 12 14 12H8C7.44772 12 7 11.5523 7 11Z",
      fill: "url(#paint0_linear)"
    }), /* @__PURE__ */ jsx$3("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M18.0319 16.6177C19.2635 15.078 20 13.125 20 11C20 6.02944 15.9706 2 11 2C6.02944 2 2 6.02944 2 11C2 15.9706 6.02944 20 11 20C13.125 20 15.078 19.2635 16.6177 18.0319L19.2929 20.7071C19.6834 21.0976 20.3166 21.0976 20.7071 20.7071C21.0976 20.3166 21.0976 19.6834 20.7071 19.2929L18.0319 16.6177ZM18 11C18 14.866 14.866 18 11 18C7.13401 18 4 14.866 4 11C4 7.13401 7.13401 4 11 4C14.866 4 18 7.13401 18 11Z",
      fill: "url(#paint1_linear)"
    }), /* @__PURE__ */ jsxs$2("defs", {
      children: [/* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint0_linear",
        x1: "11",
        y1: "10",
        x2: "11",
        y2: "12",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "#6073D8"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#5C5ACA"
        })]
      }), /* @__PURE__ */ jsxs$2("linearGradient", {
        id: "paint1_linear",
        x1: "11.5",
        y1: "2",
        x2: "11.5",
        y2: "21",
        gradientUnits: "userSpaceOnUse",
        children: [/* @__PURE__ */ jsx$3("stop", {
          stopColor: "white"
        }), /* @__PURE__ */ jsx$3("stop", {
          offset: "1",
          stopColor: "#D1DAEE"
        })]
      })]
    })]
  }));
});
var DualLightIcons = /* @__PURE__ */ ((DualLightIcons2) => {
  DualLightIcons2["Activity"] = "dual-light/Activity";
  DualLightIcons2["AddCircle"] = "dual-light/AddCircle";
  DualLightIcons2["Add"] = "dual-light/Add";
  DualLightIcons2["Alarm"] = "dual-light/Alarm";
  DualLightIcons2["AlertCircle"] = "dual-light/AlertCircle";
  DualLightIcons2["Anchor"] = "dual-light/Anchor";
  DualLightIcons2["Android"] = "dual-light/Android";
  DualLightIcons2["Apple"] = "dual-light/Apple";
  DualLightIcons2["Archive"] = "dual-light/Archive";
  DualLightIcons2["ArrowLeft"] = "dual-light/ArrowLeft";
  DualLightIcons2["ArrowDown"] = "dual-light/ArrowDown";
  DualLightIcons2["ArrowRight"] = "dual-light/ArrowRight";
  DualLightIcons2["ArrowUpDown"] = "dual-light/ArrowUpDown";
  DualLightIcons2["ArrowUp"] = "dual-light/ArrowUp";
  DualLightIcons2["AtSign"] = "dual-light/AtSign";
  DualLightIcons2["Attachment"] = "dual-light/Attachment";
  DualLightIcons2["Badge"] = "dual-light/Badge";
  DualLightIcons2["Bank"] = "dual-light/Bank";
  DualLightIcons2["BarChart"] = "dual-light/BarChart";
  DualLightIcons2["Basket"] = "dual-light/Basket";
  DualLightIcons2["BatteryCharging"] = "dual-light/BatteryCharging";
  DualLightIcons2["BatteryFull"] = "dual-light/BatteryFull";
  DualLightIcons2["BatteryHalf"] = "dual-light/BatteryHalf";
  DualLightIcons2["BatteryLow"] = "dual-light/BatteryLow";
  DualLightIcons2["Battery"] = "dual-light/Battery";
  DualLightIcons2["BluetoothOff"] = "dual-light/BluetoothOff";
  DualLightIcons2["Bluetooth"] = "dual-light/Bluetooth";
  DualLightIcons2["Bold"] = "dual-light/Bold";
  DualLightIcons2["Book"] = "dual-light/Book";
  DualLightIcons2["Bookmark"] = "dual-light/Bookmark";
  DualLightIcons2["Box"] = "dual-light/Box";
  DualLightIcons2["Briefcase"] = "dual-light/Briefcase";
  DualLightIcons2["Brush"] = "dual-light/Brush";
  DualLightIcons2["Building"] = "dual-light/Building";
  DualLightIcons2["Bulb"] = "dual-light/Bulb";
  DualLightIcons2["Calendar"] = "dual-light/Calendar";
  DualLightIcons2["Camera"] = "dual-light/Camera";
  DualLightIcons2["Cart"] = "dual-light/Cart";
  DualLightIcons2["Cast"] = "dual-light/Cast";
  DualLightIcons2["Category"] = "dual-light/Category";
  DualLightIcons2["CenterAlign"] = "dual-light/CenterAlign";
  DualLightIcons2["CheckAll"] = "dual-light/CheckAll";
  DualLightIcons2["CheckCircle"] = "dual-light/CheckCircle";
  DualLightIcons2["Check"] = "dual-light/Check";
  DualLightIcons2["ChevronLeft"] = "dual-light/ChevronLeft";
  DualLightIcons2["ChevronDoubleLeft"] = "dual-light/ChevronDoubleLeft";
  DualLightIcons2["ChevronDoubleRight"] = "dual-light/ChevronDoubleRight";
  DualLightIcons2["ChevronDoubleDown"] = "dual-light/ChevronDoubleDown";
  DualLightIcons2["ChevronDoubleUp"] = "dual-light/ChevronDoubleUp";
  DualLightIcons2["ChevronDown"] = "dual-light/ChevronDown";
  DualLightIcons2["ChevronRight"] = "dual-light/ChevronRight";
  DualLightIcons2["ChevronUp"] = "dual-light/ChevronUp";
  DualLightIcons2["Chip"] = "dual-light/Chip";
  DualLightIcons2["Chrome"] = "dual-light/Chrome";
  DualLightIcons2["Clipboard"] = "dual-light/Clipboard";
  DualLightIcons2["Clock"] = "dual-light/Clock";
  DualLightIcons2["CloseCircle"] = "dual-light/CloseCircle";
  DualLightIcons2["Close"] = "dual-light/Close";
  DualLightIcons2["CloudDownload"] = "dual-light/CloudDownload";
  DualLightIcons2["CloudOff"] = "dual-light/CloudOff";
  DualLightIcons2["CloudUpload"] = "dual-light/CloudUpload";
  DualLightIcons2["Cloud"] = "dual-light/Cloud";
  DualLightIcons2["Code"] = "dual-light/Code";
  DualLightIcons2["Coffee"] = "dual-light/Coffee";
  DualLightIcons2["Collapse"] = "dual-light/Collapse";
  DualLightIcons2["ColorPalette"] = "dual-light/ColorPalette";
  DualLightIcons2["Command"] = "dual-light/Command";
  DualLightIcons2["Compass"] = "dual-light/Compass";
  DualLightIcons2["Crop"] = "dual-light/Crop";
  DualLightIcons2["Crosshairs"] = "dual-light/Crosshairs";
  DualLightIcons2["Cursor"] = "dual-light/Cursor";
  DualLightIcons2["Dashboard"] = "dual-light/Dashboard";
  DualLightIcons2["Database"] = "dual-light/Database";
  DualLightIcons2["Design"] = "dual-light/Design";
  DualLightIcons2["Diamond"] = "dual-light/Diamond";
  DualLightIcons2["Document"] = "dual-light/Document";
  DualLightIcons2["Dollar"] = "dual-light/Dollar";
  DualLightIcons2["DonutChart"] = "dual-light/DonutChart";
  DualLightIcons2["Download"] = "dual-light/Download";
  DualLightIcons2["Drop"] = "dual-light/Drop";
  DualLightIcons2["Edit"] = "dual-light/Edit";
  DualLightIcons2["EventAdd"] = "dual-light/EventAdd";
  DualLightIcons2["EventScheduled"] = "dual-light/EventScheduled";
  DualLightIcons2["Expand"] = "dual-light/Expand";
  DualLightIcons2["Facebook"] = "dual-light/Facebook";
  DualLightIcons2["FastLeft"] = "dual-light/FastLeft";
  DualLightIcons2["FastRight"] = "dual-light/FastRight";
  DualLightIcons2["Figma"] = "dual-light/Figma";
  DualLightIcons2["FileAdd"] = "dual-light/FileAdd";
  DualLightIcons2["File"] = "dual-light/File";
  DualLightIcons2["Files"] = "dual-light/Files";
  DualLightIcons2["Film"] = "dual-light/Film";
  DualLightIcons2["Filter"] = "dual-light/Filter";
  DualLightIcons2["Fire"] = "dual-light/Fire";
  DualLightIcons2["Flag"] = "dual-light/Flag";
  DualLightIcons2["Flashlight"] = "dual-light/Flashlight";
  DualLightIcons2["Flight"] = "dual-light/Flight";
  DualLightIcons2["FolderAdd"] = "dual-light/FolderAdd";
  DualLightIcons2["Folder"] = "dual-light/Folder";
  DualLightIcons2["Frown"] = "dual-light/Frown";
  DualLightIcons2["Fuel"] = "dual-light/Fuel";
  DualLightIcons2["Gamepad"] = "dual-light/Gamepad";
  DualLightIcons2["Gift"] = "dual-light/Gift";
  DualLightIcons2["Grid"] = "dual-light/Grid";
  DualLightIcons2["Group"] = "dual-light/Group";
  DualLightIcons2["Growth"] = "dual-light/Growth";
  DualLightIcons2["HandCursor"] = "dual-light/HandCursor";
  DualLightIcons2["Headphone"] = "dual-light/Headphone";
  DualLightIcons2["Heart"] = "dual-light/Heart";
  DualLightIcons2["Help"] = "dual-light/Help";
  DualLightIcons2["Hide"] = "dual-light/Hide";
  DualLightIcons2["Home"] = "dual-light/Home";
  DualLightIcons2["Hourglass"] = "dual-light/Hourglass";
  DualLightIcons2["Image"] = "dual-light/Image";
  DualLightIcons2["Inbox"] = "dual-light/Inbox";
  DualLightIcons2["Info"] = "dual-light/Info";
  DualLightIcons2["Instagram"] = "dual-light/Instagram";
  DualLightIcons2["Internet"] = "dual-light/Internet";
  DualLightIcons2["Italics"] = "dual-light/Italics";
  DualLightIcons2["Justify"] = "dual-light/Justify";
  DualLightIcons2["Key"] = "dual-light/Key";
  DualLightIcons2["Laptop"] = "dual-light/Laptop";
  DualLightIcons2["Laugh"] = "dual-light/Laugh";
  DualLightIcons2["Layers"] = "dual-light/Layers";
  DualLightIcons2["Layout"] = "dual-light/Layout";
  DualLightIcons2["Leaderboard"] = "dual-light/Leaderboard";
  DualLightIcons2["LeftAlign"] = "dual-light/LeftAlign";
  DualLightIcons2["LineChart"] = "dual-light/LineChart";
  DualLightIcons2["Link"] = "dual-light/Link";
  DualLightIcons2["LinkedIn"] = "dual-light/LinkedIn";
  DualLightIcons2["List"] = "dual-light/List";
  DualLightIcons2["Live"] = "dual-light/Live";
  DualLightIcons2["Loader"] = "dual-light/Loader";
  DualLightIcons2["Location"] = "dual-light/Location";
  DualLightIcons2["Lock"] = "dual-light/Lock";
  DualLightIcons2["Login"] = "dual-light/Login";
  DualLightIcons2["Logout"] = "dual-light/Logout";
  DualLightIcons2["Mail"] = "dual-light/Mail";
  DualLightIcons2["Map"] = "dual-light/Map";
  DualLightIcons2["Meh"] = "dual-light/Meh";
  DualLightIcons2["Menu"] = "dual-light/Menu";
  DualLightIcons2["Message"] = "dual-light/Message";
  DualLightIcons2["Messages"] = "dual-light/Messages";
  DualLightIcons2["MicOff"] = "dual-light/MicOff";
  DualLightIcons2["Mic"] = "dual-light/Mic";
  DualLightIcons2["Mobile"] = "dual-light/Mobile";
  DualLightIcons2["Moon"] = "dual-light/Moon";
  DualLightIcons2["MoreHorizontal"] = "dual-light/MoreHorizontal";
  DualLightIcons2["MoreVertical"] = "dual-light/MoreVertical";
  DualLightIcons2["Mouse"] = "dual-light/Mouse";
  DualLightIcons2["Music"] = "dual-light/Music";
  DualLightIcons2["New"] = "dual-light/New";
  DualLightIcons2["Next"] = "dual-light/Next";
  DualLightIcons2["Note"] = "dual-light/Note";
  DualLightIcons2["Notes"] = "dual-light/Notes";
  DualLightIcons2["NotificationOff"] = "dual-light/NotificationOff";
  DualLightIcons2["Notification"] = "dual-light/Notification";
  DualLightIcons2["Open"] = "dual-light/Open";
  DualLightIcons2["PaintRoller"] = "dual-light/PaintRoller";
  DualLightIcons2["Pause"] = "dual-light/Pause";
  DualLightIcons2["Payment"] = "dual-light/Payment";
  DualLightIcons2["Pen"] = "dual-light/Pen";
  DualLightIcons2["Percent"] = "dual-light/Percent";
  DualLightIcons2["Person"] = "dual-light/Person";
  DualLightIcons2["PhoneCallIncoming"] = "dual-light/PhoneCallIncoming";
  DualLightIcons2["PhoneCallOutgoing"] = "dual-light/PhoneCallOutgoing";
  DualLightIcons2["PhoneCallRejected"] = "dual-light/PhoneCallRejected";
  DualLightIcons2["Phone"] = "dual-light/Phone";
  DualLightIcons2["Photos"] = "dual-light/Photos";
  DualLightIcons2["PieChart"] = "dual-light/PieChart";
  DualLightIcons2["Pin"] = "dual-light/Pin";
  DualLightIcons2["Pinterest"] = "dual-light/Pinterest";
  DualLightIcons2["PlayCircle"] = "dual-light/PlayCircle";
  DualLightIcons2["Play"] = "dual-light/Play";
  DualLightIcons2["Playlist"] = "dual-light/Playlist";
  DualLightIcons2["Power"] = "dual-light/Power";
  DualLightIcons2["Presentation"] = "dual-light/Presentation";
  DualLightIcons2["Previous"] = "dual-light/Previous";
  DualLightIcons2["Printer"] = "dual-light/Printer";
  DualLightIcons2["ProfileCircle"] = "dual-light/ProfileCircle";
  DualLightIcons2["Promotion"] = "dual-light/Promotion";
  DualLightIcons2["Rain"] = "dual-light/Rain";
  DualLightIcons2["Receipt"] = "dual-light/Receipt";
  DualLightIcons2["Reload"] = "dual-light/Reload";
  DualLightIcons2["Remove"] = "dual-light/Remove";
  DualLightIcons2["Repeat"] = "dual-light/Repeat";
  DualLightIcons2["RightAlign"] = "dual-light/RightAlign";
  DualLightIcons2["Rocket"] = "dual-light/Rocket";
  DualLightIcons2["Ruler"] = "dual-light/Ruler";
  DualLightIcons2["Sad"] = "dual-light/Sad";
  DualLightIcons2["Save"] = "dual-light/Save";
  DualLightIcons2["Scan"] = "dual-light/Scan";
  DualLightIcons2["Schedule"] = "dual-light/Schedule";
  DualLightIcons2["Scissors"] = "dual-light/Scissors";
  DualLightIcons2["Search"] = "dual-light/Search";
  DualLightIcons2["Send"] = "dual-light/Send";
  DualLightIcons2["Settings"] = "dual-light/Settings";
  DualLightIcons2["Share"] = "dual-light/Share";
  DualLightIcons2["ShieldCheck"] = "dual-light/ShieldCheck";
  DualLightIcons2["Shield"] = "dual-light/Shield";
  DualLightIcons2["Ship"] = "dual-light/Ship";
  DualLightIcons2["ShoppingBag"] = "dual-light/ShoppingBag";
  DualLightIcons2["Show"] = "dual-light/Show";
  DualLightIcons2["Shuffle"] = "dual-light/Shuffle";
  DualLightIcons2["Size"] = "dual-light/Size";
  DualLightIcons2["Slack"] = "dual-light/Slack";
  DualLightIcons2["Smile"] = "dual-light/Smile";
  DualLightIcons2["Snapchat"] = "dual-light/Snapchat";
  DualLightIcons2["Snowflake"] = "dual-light/Snowflake";
  DualLightIcons2["Sort"] = "dual-light/Sort";
  DualLightIcons2["Spotify"] = "dual-light/Spotify";
  DualLightIcons2["Star"] = "dual-light/Star";
  DualLightIcons2["Stop"] = "dual-light/Stop";
  DualLightIcons2["Store"] = "dual-light/Store";
  DualLightIcons2["Sun"] = "dual-light/Sun";
  DualLightIcons2["Sync"] = "dual-light/Sync";
  DualLightIcons2["Tablet"] = "dual-light/Tablet";
  DualLightIcons2["Tag"] = "dual-light/Tag";
  DualLightIcons2["Target"] = "dual-light/Target";
  DualLightIcons2["Thermometer"] = "dual-light/Thermometer";
  DualLightIcons2["ThumbsDown"] = "dual-light/ThumbsDown";
  DualLightIcons2["ThumbsUp"] = "dual-light/ThumbsUp";
  DualLightIcons2["Ticket"] = "dual-light/Ticket";
  DualLightIcons2["Timer"] = "dual-light/Timer";
  DualLightIcons2["ToggleOff"] = "dual-light/ToggleOff";
  DualLightIcons2["ToggleOn"] = "dual-light/ToggleOn";
  DualLightIcons2["Tool"] = "dual-light/Tool";
  DualLightIcons2["Train"] = "dual-light/Train";
  DualLightIcons2["Trash"] = "dual-light/Trash";
  DualLightIcons2["TrendingDown"] = "dual-light/TrendingDown";
  DualLightIcons2["TrendingUp"] = "dual-light/TrendingUp";
  DualLightIcons2["Trophy"] = "dual-light/Trophy";
  DualLightIcons2["Truck"] = "dual-light/Truck";
  DualLightIcons2["TV"] = "dual-light/TV";
  DualLightIcons2["Twitch"] = "dual-light/Twitch";
  DualLightIcons2["Twitter"] = "dual-light/Twitter";
  DualLightIcons2["Umbrella"] = "dual-light/Umbrella";
  DualLightIcons2["Underline"] = "dual-light/Underline";
  DualLightIcons2["Unlock"] = "dual-light/Unlock";
  DualLightIcons2["Update"] = "dual-light/Update";
  DualLightIcons2["Upload"] = "dual-light/Upload";
  DualLightIcons2["Utensils"] = "dual-light/Utensils";
  DualLightIcons2["VideoOff"] = "dual-light/VideoOff";
  DualLightIcons2["VideoRecorder"] = "dual-light/VideoRecorder";
  DualLightIcons2["VolumeHigh"] = "dual-light/VolumeHigh";
  DualLightIcons2["VolumeOff"] = "dual-light/VolumeOff";
  DualLightIcons2["Volume"] = "dual-light/Volume";
  DualLightIcons2["Wallet"] = "dual-light/Wallet";
  DualLightIcons2["Warning"] = "dual-light/Warning";
  DualLightIcons2["Watch"] = "dual-light/Watch";
  DualLightIcons2["WifiOff"] = "dual-light/WifiOff";
  DualLightIcons2["Wifi"] = "dual-light/Wifi";
  DualLightIcons2["Wind"] = "dual-light/Wind";
  DualLightIcons2["Window"] = "dual-light/Window";
  DualLightIcons2["YouTube"] = "dual-light/YouTube";
  DualLightIcons2["Zap"] = "dual-light/Zap";
  DualLightIcons2["ZoomIn"] = "dual-light/ZoomIn";
  DualLightIcons2["ZoomOut"] = "dual-light/ZoomOut";
  return DualLightIcons2;
})(DualLightIcons || {});
var DualLight = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DualLightIcons,
  Activity,
  AddCircle,
  Add,
  Alarm,
  AlertCircle,
  Anchor,
  Android,
  Apple,
  Archive,
  ArrowLeft,
  ArrowDown,
  ArrowRight,
  ArrowUpDown,
  ArrowUp,
  AtSign,
  Attachment,
  Badge: Badge$1,
  Bank,
  BarChart,
  Basket,
  BatteryCharging,
  BatteryFull,
  BatteryHalf,
  BatteryLow,
  Battery,
  BluetoothOff,
  Bluetooth,
  Bold,
  Book,
  Bookmark,
  Box,
  Briefcase,
  Brush,
  Building,
  Bulb,
  Calendar,
  Camera,
  Cart,
  Cast,
  Category,
  CenterAlign,
  CheckAll,
  CheckCircle,
  Check,
  ChevronLeft,
  ChevronDoubleLeft,
  ChevronDoubleRight,
  ChevronDoubleDown,
  ChevronDoubleUp,
  ChevronDown,
  ChevronRight,
  ChevronUp,
  Chip,
  Chrome,
  Clipboard,
  Clock,
  CloseCircle,
  Close: Close$3,
  CloudDownload,
  CloudOff,
  CloudUpload,
  Cloud,
  Code,
  Coffee,
  Collapse,
  ColorPalette,
  Command,
  Compass,
  Crop,
  Crosshairs,
  Cursor: Cursor$1,
  Dashboard,
  Database,
  Design,
  Diamond,
  Document,
  Dollar,
  DonutChart,
  Download,
  Drop,
  Edit,
  EventAdd,
  EventScheduled,
  Expand,
  Facebook,
  FastLeft,
  FastRight,
  Figma,
  FileAdd,
  File,
  Files,
  Film,
  Filter,
  Fire,
  Flag,
  Flashlight,
  Flight,
  FolderAdd,
  Folder,
  Frown,
  Fuel,
  Gamepad,
  Gift,
  Grid,
  Group,
  Growth,
  HandCursor,
  Headphone,
  Heart,
  Help,
  Hide,
  Home,
  Hourglass,
  Image: Image$1,
  Inbox,
  Info: Info$4,
  Instagram,
  Internet,
  Italics,
  Justify,
  Key,
  Laptop,
  Laugh,
  Layers,
  Layout,
  Leaderboard,
  LeftAlign,
  LineChart,
  Link: Link$1,
  LinkedIn,
  List,
  Live,
  Loader,
  Location,
  Lock,
  Login,
  Logout,
  Mail,
  Map: Map$1,
  Meh,
  Menu: Menu$1,
  Message: Message$2,
  Messages,
  MicOff,
  Mic,
  Mobile,
  Moon,
  MoreHorizontal,
  MoreVertical,
  Mouse,
  Music,
  New,
  Next,
  Note,
  Notes,
  NotificationOff,
  Notification,
  Open,
  PaintRoller,
  Pause,
  Payment,
  Pen,
  Percent,
  Person,
  PhoneCallIncoming,
  PhoneCallOutgoing,
  PhoneCallRejected,
  Phone,
  Photos,
  PieChart: PieChart$2,
  Pin,
  Pinterest,
  PlayCircle,
  Play,
  Playlist,
  Power,
  Presentation,
  Previous,
  Printer,
  ProfileCircle,
  Promotion,
  Rain,
  Receipt,
  Reload,
  Remove,
  Repeat,
  RightAlign,
  Rocket,
  Ruler,
  Sad,
  Save,
  Scan,
  Schedule,
  Scissors,
  Search,
  Send,
  Settings: Settings$1,
  Share,
  ShieldCheck,
  Shield,
  Ship,
  ShoppingBag,
  Show,
  Shuffle,
  Size,
  Slack,
  Smile,
  Snapchat,
  Snowflake,
  Sort,
  Spotify,
  Star,
  Stop,
  Store,
  Sun,
  Sync,
  Tablet,
  Tag,
  Target,
  Thermometer,
  ThumbsDown,
  ThumbsUp,
  Ticket,
  Timer,
  ToggleOff,
  ToggleOn,
  Tool,
  Train,
  Trash,
  TrendingDown,
  TrendingUp,
  Trophy,
  Truck,
  TV,
  Twitch,
  Twitter,
  Umbrella,
  Underline,
  Unlock,
  Update,
  Upload,
  Utensils,
  VideoOff,
  VideoRecorder,
  VolumeHigh,
  VolumeOff,
  Volume,
  Wallet,
  Warning,
  Watch,
  WifiOff,
  Wifi,
  Wind,
  Window,
  YouTube,
  Zap,
  ZoomIn,
  ZoomOut
}, Symbol.toStringTag, { value: "Module" }));
function getIcon(name2) {
  const _a2 = Basic, otherBasicIcons = __objRest2(_a2, [
    "BasicIcons"
  ]);
  const _b = DualLight, otherDualLightIcons = __objRest2(_b, [
    "DualLightIcons"
  ]);
  const matchedIcon = [...Object.entries(name2.includes("basic/") ? __spreadValues2({}, BasicIcons) : __spreadValues2({}, DualLightIcons))].find(([key, value2]) => value2 === name2);
  if (matchedIcon && matchedIcon[0]) {
    return name2.includes("basic/") ? otherBasicIcons[matchedIcon[0]] : otherDualLightIcons[matchedIcon[0]];
  }
  return null;
}
var q$6 = ((U2) => (U2.Comment = "comment", U2.Create = "create", U2.Delete = "delete", U2.Edit = "edit", U2.Invoice = "invoice", U2.Message = "message", U2.PageView = "pageView", U2.Paid = "paid", U2.Payment = "payment", U2.Purchase = "purchase", U2.Referral = "referral", U2.Renewal = "renewal", U2.Signup = "signup", U2.Subscription = "subscription", U2.Upgrade = "upgrade", U2))(q$6 || {});
var R$2 = ((U2) => (U2.Business = "business", U2.Engineering = "engineering", U2.Exception = "exception", U2.LogMessage = "log-message", U2.Marketing = "marketing", U2.PageLeave = "page-leave", U2.PageView = "page-view", U2.Product = "product", U2.QualityManagement = "quality-management", U2.UserAccess = "user-access", U2.UserLogin = "user-login", U2.UserLogout = "user-logout", U2.UserSignup = "user-signup", U2.UserPreferencesChanged = "user-preferences-changed", U2.WebsiteVisit = "website-visit", U2))(R$2 || {});
var F$2 = ((o2) => (o2.CloseTab = "close-tab", o2.ExternalLink = "external-link", o2.NavigateAway = "navigate-away", o2.Unknown = "unknown", o2))(F$2 || {});
var H$2 = ((De2) => (De2.Ecs = "Ecs", De2))(H$2 || {}), O$1 = ((o2) => (o2.Finished = "Finished", o2.Queued = "Queued", o2.Running = "Running", o2.Started = "Started", o2))(O$1 || {});
var j$2 = ((o2) => (o2.Mobile = "mobile", o2.TV = "tv", o2.Watch = "watch", o2.Web = "web", o2))(j$2 || {});
var V$2 = ((P2) => (P2.Development = "Development", P2.NonProduction = "NonProduction", P2.Production = "Production", P2))(V$2 || {});
var W$1 = ((P2) => (P2.Completed = "completed", P2.Started = "started", P2.Uncompleted = "uncompleted", P2))(W$1 || {});
var J$2 = ((P2) => (P2.Build = "Build", P2.Deployment = "Deployment", P2.Test = "Test", P2))(J$2 || {});
var Z$1 = ((_) => (_.Canceled = "Canceled", _.Completed = "Completed", _.Failed = "Failed", _.Running = "Running", _.Queued = "Queued", _.Waiting = "Waiting", _))(Z$1 || {}), Y$1 = ((_) => (_.Canceled = "Canceled", _.Completed = "Completed", _.Failed = "Failed", _.Running = "Running", _.Queued = "Queued", _.Waiting = "Waiting", _))(Y$1 || {});
var Q$1 = ((_) => (_.ForgotPassword = "forgot_password", _.Index = "index", _.Login = "login", _.PageNotFound = "404", _.Signup = "signup", _.VerifyCode = "verify_code", _))(Q$1 || {});
var $$2 = ((o2) => (o2.Info = "info", o2.Warning = "warning", o2.Error = "error", o2.Success = "success", o2))($$2 || {});
var X$2 = ((N2) => (N2.Details = "details", N2.Dialog = "dialog", N2))(X$2 || {});
var C$2 = ((o2) => (o2.Info = "info", o2.Warning = "warning", o2.Error = "error", o2.Success = "success", o2))(C$2 || {});
var aa$1 = ((h2) => (h2.AccountBalance = "AccountBalance", h2.UserAssets = "UserAssets", h2.UserCreditCardDebt = "UserCreditCardDebt", h2.UserCreditLimit = "UserCreditLimit", h2.UserCreditUtilization = "UserCreditUtilization", h2.UserDebt = "UserDebt", h2.UserInvestments = "UserInvestments", h2.UserRetirement = "UserRetirement", h2.UserSavings = "UserSavings", h2))(aa$1 || {});
var ea$1 = ((o2) => (o2.DateTime = "date_time", o2.True = "true", o2.False = "false", o2.UniqueId = "unique_id", o2))(ea$1 || {});
var ia$1 = ((N2) => (N2.DomainModel = "domain_entity", N2.GenericModel = "generic_entity", N2))(ia$1 || {});
var na$1 = ((T2) => (T2.AirportCode = "airport-code", T2.BankIDCode = "bank-id-code", T2.BitcoinAddress = "bitcoin-address", T2.Boolean = "boolean", T2.City = "city", T2.Color = "color", T2.CountryCode = "country-code", T2.CreditCard = "credit-card", T2.CurrencyAmount = "currency-amount", T2.CurrencyCode = "currency-code", T2.DataURI = "data-uri", T2.Date = "date", T2.DateRange = "date-range", T2.DateTime = "date-time", T2.DayOfMonth = "day-of-month", T2.DomainName = "domain-name", T2.EmailAddress = "email-address", T2.EthereumAddress = "ethereum-address", T2.EAN = "european-article-number", T2.EIN = "employer-identification-number", T2.Float = "float", T2.GeographicCoordinate = "geographic-coordinate", T2.GeographicCoordinates = "geographic-coordinates", T2.GitRepositoryURL = "git-repository-url", T2.HSLColor = "hsl-color", T2.HexColor = "hex-color", T2.Hexadecimal = "hexadecimal", T2.IBAN = "international-bank-account-number", T2.IMEI = "international-mobile-equipment-identifier", T2.IPAddress = "ip-address", T2.IPAddressRange = "ip-address-range", T2.ISBN = "international-standard-book-number", T2.ISIN = "international-stock-number", T2.ISMN = "international-standard-music-number", T2.ISSN = "international-standard-serial-number", T2.ISO8601 = "iso-8601", T2.ISO31661Alpha2 = "iso-31661-alpha-2", T2.ISO31661Alpha3 = "iso-31661-alpha-3", T2.ISO4217 = "iso-4217", T2.Image = "image", T2.Integer = "integer", T2.JSON = "json", T2.LanguageCode = "language-code", T2.LicensePlateNumber = "license-plate-number", T2.LongText = "long-text", T2.MD5 = "md5", T2.Markdown = "markdown", T2.Menu = "menu", T2.Number = "number", T2.MACAddress = "mac-address", T2.MagnetURI = "magnet-uri", T2.MimeType = "mime-type", T2.Month = "month", T2.Password = "password", T2.PassportNumber = "passport-number", T2.Percent = "percent", T2.PhoneNumber = "phone-number", T2.Port = "port", T2.PostalCode = "postal-code", T2.Province = "province", T2.RFC3339 = "rfc-3339", T2.RGBColor = "rgb-color", T2.SemanticVersion = "semantic-version", T2.SSN = "social-security-number", T2.State = "state", T2.StreetAddress = "street-address", T2.String = "string", T2.Tags = "tags", T2.TaxIDNumber = "tax-id-number", T2.Time = "time", T2.TimeOfDay = "time-of-day", T2.TimeRange = "time-range", T2.TimezoneRegion = "timezone-region", T2.URL = "url", T2.URLPath = "url-path", T2.UUID = "uuid", T2.VATIDNumber = "value-added-tax-id-number", T2.VerificationCode = "verification-code", T2.Video = "video", T2.Weekday = "weekday", T2.Year = "year", T2))(na$1 || {});
var ra$1 = ((o2) => (o2.Critical = "Critical", o2.Error = "Error", o2.Fatal = "Fatal", o2.Warning = "Warning", o2))(ra$1 || {});
var x$4 = ((l2) => (l2.Contains = "contains", l2.HasCharacterCount = "has-character-count", l2.HasNumberCount = "has-number-count", l2.HasLetterCount = "has-letter-count", l2.HasLowercaseCount = "has-lowercase-count", l2.HasSpacesCount = "has-spaces-count", l2.HasSymbolCount = "has-symbol-count", l2.HasUppercaseCount = "has-uppercase-count", l2.IsAfter = "is-after", l2.IsAfterOrEqual = "is-after-or-equal", l2.IsAirport = "is-airport", l2.IsAlpha = "is-alpha", l2.IsAlphanumeric = "is-alphanumeric", l2.IsAlgorithmHash = "is-algorithm-hash", l2.IsAscii = "is-ascii", l2.IsBase64 = "is-base-64", l2.IsBefore = "is-before", l2.IsBeforeOrAfter = "is-before-or-after", l2.IsBeforeOrEqual = "is-before-or-equal", l2.IsBetween = "is-between", l2.IsBIC = "is-bic", l2.IsBitcoinAddress = "is-bitcoin-address", l2.IsBoolean = "is-boolean", l2.IsColor = "is-color", l2.IsComplexEnough = "is-complex-enough", l2.IsCountry = "is-country", l2.IsCreditCard = "is-credit-card", l2.IsCurrency = "is-currency", l2.IsDataURI = "is-data-uri", l2.IsDate = "is-date", l2.IsDateRange = "is-date-range", l2.IsDateTime = "is-date-time", l2.IsDayOfMonth = "is-day-of-month", l2.IsDecimal = "is-decimal", l2.IsDivisibleBy = "is-divisible-by", l2.IsDomainName = "is-domain-name", l2.IsEmailAddress = "is-email-address", l2.IsEthereumAddress = "is-ethereum-address", l2.IsEAN = "is-ean", l2.IsEIN = "is-ein", l2.IsEqual = "is-equal", l2.IsEvenNumber = "is-even-number", l2.IsFloat = "is-float", l2.IsIBAN = "is-iban", l2.IsGreaterThan = "greater-than", l2.IsGreaterThanOrEqual = "greater-than-or-equal", l2.IsHSLColor = "is-hsl-color", l2.IsHexColor = "is-hex-color", l2.IsHexadecimal = "is-hexadecimal", l2.IsIdentityCardCode = "is-identity-card-code", l2.IsIMEI = "is-imei", l2.IsInIPAddressRange = "is-in-ip-address-range", l2.IsInList = "is-in-list", l2.IsInTheLast = "is-in-the-last", l2.IsInteger = "is-integer", l2.IsIPAddress = "is-ip-address", l2.IsIPAddressRange = "is-ip-address-range", l2.IsISBN = "is-isbn", l2.IsISIN = "is-isin", l2.IsISMN = "is-ismn", l2.IsISRC = "is-isrc", l2.IsISSN = "is-issn", l2.IsISO4217 = "is-iso-4217", l2.IsISO8601 = "is-iso-8601", l2.IsISO31661Alpha2 = "is-iso-31661-alpha-2", l2.IsISO31661Alpha3 = "is-iso-31661-alpha-3", l2.IsJSON = "is-json", l2.IsLanguage = "is-language", l2.IsLatitude = "is-latitude", l2.IsLongitude = "is-longitude", l2.IsLengthEqual = "is-length-equal", l2.IsLengthGreaterThan = "is-length-greater-than", l2.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal", l2.IsLengthLessThan = "is-length-less-than", l2.IsLengthLessThanOrEqual = "is-length-less-than-or-equal", l2.IsLessThan = "less-than", l2.IsLessThanOrEqual = "less-than-or-equal", l2.IsLicensePlateNumber = "is-license-plate-number", l2.IsLowercase = "is-lowercase", l2.IsOctal = "is-octal", l2.IsMACAddress = "is-mac-address", l2.IsMD5 = "is-md5", l2.IsMagnetURI = "is-magnet-uri", l2.IsMarkdown = "is-markdown", l2.IsMimeType = "is-mime-type", l2.IsMonth = "is-month", l2.IsNegativeNumber = "is-negative-number", l2.IsNotDate = "is-not-date", l2.IsNotEqual = "is-not-equal", l2.IsNotInIPAddressRange = "is-not-in-ip-address-range", l2.IsNotInList = "is-not-in-list", l2.IsNotNull = "is-not-null", l2.IsNotRegexMatch = "is-not-regex-match", l2.IsNotToday = "is-not-today", l2.IsNumber = "is-number", l2.IsNumeric = "is-numeric", l2.IsOddNumber = "is-odd-number", l2.IsPassportNumber = "is-passport-number", l2.IsPhoneNumber = "is-phone-number", l2.IsPort = "is-port", l2.IsPositiveNumber = "is-positive-number", l2.IsPostalCode = "is-postal-code", l2.IsProvince = "is-province", l2.IsRGBColor = "is-rgb-color", l2.IsRegexMatch = "is-regex-match", l2.IsRequired = "is-required", l2.IsSemanticVersion = "is-semantic-version", l2.IsSlug = "is-slug", l2.IsSSN = "is-ssn", l2.IsState = "is-state", l2.IsStreetAddress = "is-street-address", l2.IsString = "is-string", l2.IsStrongPassword = "is-strong-password", l2.IsTags = "is-tags", l2.IsTaxIDNumber = "is-tax-id-number", l2.IsThisMonth = "is-this-month", l2.IsThisQuarter = "is-this-quarter", l2.IsThisWeek = "is-this-week", l2.IsThisWeekend = "is-this-weekend", l2.IsThisYear = "is-this-year", l2.IsTime = "is-time", l2.IsTimeOfDay = "is-time-of-day", l2.IsTimeRange = "is-time-range", l2.IsToday = "is-today", l2.IsURL = "is-url", l2.IsUUID = "is-uuid", l2.IsUppercase = "is-uppercase", l2.IsUsernameAvailable = "is-username-available", l2.IsValidStreetAddress = "is-valid-street-address", l2.IsVATIDNumber = "is-vat-id-number", l2.IsWeekday = "is-weekday", l2.IsWeekend = "is-weekend", l2.IsYear = "is-year", l2))(x$4 || {}), sa$1 = ((o2) => (o2.IsAuthenticated = "is-authenticated", o2.IsNotAuthenticated = "is-not-authenticated", o2.IsUsernameAvailable = "is-username-available", o2.PasswordMismatch = "password-mismatch", o2))(sa$1 || {});
var ta$1 = ((A2) => (A2[A2.IsHSLColor = "is-hsl-color"] = "IsHSLColor", A2[A2.IsHexColor = "is-hex-color"] = "IsHexColor", A2[A2.IsNotNull = "is-not-null"] = "IsNotNull", A2[A2.IsRGBColor = "is-rgb-color"] = "IsRGBColor", A2[A2.IsString = "is-string"] = "IsString", A2))(ta$1 || {});
var oa$1 = ((c2) => (c2[c2.IsBetween = "is-between"] = "IsBetween", c2[c2.IsCurrency = "is-currency"] = "IsCurrency", c2[c2.IsDecimal = "is-decimal"] = "IsDecimal", c2[c2.IsDivisibleBy = "is-divisible-by"] = "IsDivisibleBy", c2[c2.IsEvenNumber = "is-even-number"] = "IsEvenNumber", c2[c2.IsFloat = "is-float"] = "IsFloat", c2[c2.IsGreaterThan = "greater-than"] = "IsGreaterThan", c2[c2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", c2[c2.IsInteger = "is-integer"] = "IsInteger", c2[c2.IsISO8601 = "is-iso-8601"] = "IsISO8601", c2[c2.IsLessThan = "less-than"] = "IsLessThan", c2[c2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", c2[c2.IsNegativeNumber = "is-negative-number"] = "IsNegativeNumber", c2[c2.IsNotEqual = "is-not-equal"] = "IsNotEqual", c2[c2.IsNotNull = "is-not-null"] = "IsNotNull", c2[c2.IsNumber = "is-number"] = "IsNumber", c2[c2.IsOddNumber = "is-odd-number"] = "IsOddNumber", c2[c2.IsPositiveNumber = "is-positive-number"] = "IsPositiveNumber", c2))(oa$1 || {}), ma$1 = ((o2) => (o2[o2.IsBitcoinAddress = "is-bitcoin-address"] = "IsBitcoinAddress", o2[o2.IsEqual = "is-equal"] = "IsEqual", o2[o2.IsNotEqual = "is-not-equal"] = "IsNotEqual", o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2))(ma$1 || {}), la$1 = ((o2) => (o2[o2.IsEthereumAddress = "is-ethereum-address"] = "IsEthereumAddress", o2[o2.IsEqual = "is-equal"] = "IsEqual", o2[o2.IsNotEqual = "is-not-equal"] = "IsNotEqual", o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2))(la$1 || {});
var ca$1 = ((A2) => (A2[A2.IsEqual = "is-equal"] = "IsEqual", A2[A2.IsJSON = "is-json"] = "IsJSON", A2[A2.IsLanguage = "is-language"] = "IsLanguage", A2[A2.IsNotEqual = "is-not-equal"] = "IsNotEqual", A2[A2.IsNotNull = "is-not-null"] = "IsNotNull", A2))(ca$1 || {});
var ua$1 = ((d2) => (d2[d2.IsAlpha = "is-alpha"] = "IsAlpha", d2[d2.IsEqual = "is-equal"] = "IsEqual", d2[d2.IsInList = "is-in-list"] = "IsInList", d2[d2.IsNotEqual = "is-not-equal"] = "IsNotEqual", d2[d2.IsNotInList = "is-not-in-list"] = "IsNotInList", d2[d2.IsNotNull = "is-not-null"] = "IsNotNull", d2[d2.IsString = "is-string"] = "IsString", d2))(ua$1 || {}), da$1 = ((e2) => (e2[e2.IsAlpha = "is-alpha"] = "IsAlpha", e2[e2.IsCountry = "is-country"] = "IsCountry", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(da$1 || {}), pa$1 = ((A2) => (A2[A2.IsEqual = "is-equal"] = "IsEqual", A2[A2.IsFloat = "is-float"] = "IsFloat", A2[A2.IsNotEqual = "is-not-equal"] = "IsNotEqual", A2[A2.IsNotNull = "is-not-null"] = "IsNotNull", A2[A2.IsNumeric = "is-numeric"] = "IsNumeric", A2))(pa$1 || {}), ga$1 = ((A2) => (A2[A2.IsEqual = "is-equal"] = "IsEqual", A2[A2.IsFloat = "is-float"] = "IsFloat", A2[A2.IsNotEqual = "is-not-equal"] = "IsNotEqual", A2[A2.IsNotNull = "is-not-null"] = "IsNotNull", A2[A2.IsNumeric = "is-numeric"] = "IsNumeric", A2))(ga$1 || {}), Aa$1 = ((o2) => (o2[o2.IsEqual = "is-equal"] = "IsEqual", o2[o2.IsNotEqual = "is-not-equal"] = "IsNotEqual", o2[o2.IsPostalCode = "is-postal-code"] = "IsPostalCode", o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2))(Aa$1 || {}), Ta$1 = ((e2) => (e2[e2.IsAlpha = "is-alpha"] = "IsAlpha", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsProvince = "is-province"] = "IsProvince", e2[e2.IsString = "is-string"] = "IsString", e2))(Ta$1 || {}), fa$1 = ((e2) => (e2[e2.IsAlpha = "is-alpha"] = "IsAlpha", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsState = "is-state"] = "IsState", e2[e2.IsString = "is-string"] = "IsString", e2))(fa$1 || {}), _a$1 = ((_) => (_[_.IsAlphanumeric = "is-alphanumeric"] = "IsAlphanumeric", _[_.IsEqual = "is-equal"] = "IsEqual", _[_.IsNotEqual = "is-not-equal"] = "IsNotEqual", _[_.IsNotNull = "is-not-null"] = "IsNotNull", _[_.IsString = "is-string"] = "IsString", _[_.IsStreetAddress = "is-street-address"] = "IsStreetAddress", _))(_a$1 || {});
var ha$1 = ((e2) => (e2[e2.IsAirport = "is-airport"] = "IsAirport", e2[e2.IsAlpha = "is-alpha"] = "IsAlpha", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(ha$1 || {});
var Sa$1 = ((d2) => (d2[d2.IsAlgorithmHash = "is-algorithm-hash"] = "IsAlgorithmHash", d2[d2.IsEqual = "is-equal"] = "IsEqual", d2[d2.IsInList = "is-in-list"] = "IsInList", d2[d2.IsNotEqual = "is-not-equal"] = "IsNotEqual", d2[d2.IsNotInList = "is-not-in-list"] = "IsNotInList", d2[d2.IsNotNull = "is-not-null"] = "IsNotNull", d2[d2.IsString = "is-string"] = "IsString", d2))(Sa$1 || {}), Ia$1 = ((d2) => (d2[d2.IsEqual = "is-equal"] = "IsEqual", d2[d2.IsInList = "is-in-list"] = "IsInList", d2[d2.IsNotEqual = "is-not-equal"] = "IsNotEqual", d2[d2.IsNotInList = "is-not-in-list"] = "IsNotInList", d2[d2.IsNotNull = "is-not-null"] = "IsNotNull", d2[d2.IsSemanticVersion = "is-semantic-version"] = "IsSemanticVersion", d2[d2.IsString = "is-string"] = "IsString", d2))(Ia$1 || {}), ba$1 = ((d2) => (d2[d2.IsEqual = "is-equal"] = "IsEqual", d2[d2.IsInList = "is-in-list"] = "IsInList", d2[d2.IsNotEqual = "is-not-equal"] = "IsNotEqual", d2[d2.IsNotInList = "is-not-in-list"] = "IsNotInList", d2[d2.IsNotNull = "is-not-null"] = "IsNotNull", d2[d2.IsString = "is-string"] = "IsString", d2[d2.IsUUID = "is-uuid"] = "IsUUID", d2))(ba$1 || {}), va$1 = ((d2) => (d2[d2.IsEqual = "is-equal"] = "IsEqual", d2[d2.IsInList = "is-in-list"] = "IsInList", d2[d2.IsMD5 = "is-md5"] = "IsMD5", d2[d2.IsNotEqual = "is-not-equal"] = "IsNotEqual", d2[d2.IsNotInList = "is-not-in-list"] = "IsNotInList", d2[d2.IsNotNull = "is-not-null"] = "IsNotNull", d2[d2.IsString = "is-string"] = "IsString", d2))(va$1 || {});
var Ua$1 = ((o2) => (o2[o2.IsBoolean = "is-boolean"] = "IsBoolean", o2[o2.IsEqual = "is-equal"] = "IsEqual", o2[o2.IsNotEqual = "is-not-equal"] = "IsNotEqual", o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2))(Ua$1 || {});
var Ea$1 = ((g2) => (g2[g2.IsAfter = "is-after"] = "IsAfter", g2[g2.IsAfterOrEqual = "is-after-or-equal"] = "IsAfterOrEqual", g2[g2.IsBefore = "is-before"] = "IsBefore", g2[g2.IsBeforeOrEqual = "is-before-or-equal"] = "IsBeforeOrEqual", g2[g2.IsBetween = "is-between"] = "IsBetween", g2[g2.IsDate = "is-date"] = "IsDate", g2[g2.IsEqual = "is-equal"] = "IsEqual", g2[g2.IsNotDate = "is-not-date"] = "IsNotDate", g2[g2.IsNotEqual = "is-not-equal"] = "IsNotEqual", g2[g2.IsNotNull = "is-not-null"] = "IsNotNull", g2[g2.IsNotToday = "is-not-today"] = "IsNotToday", g2[g2.IsThisWeek = "is-this-week"] = "IsThisWeek", g2[g2.IsThisMonth = "is-this-month"] = "IsThisMonth", g2[g2.IsThisQuarter = "is-this-quarter"] = "IsThisQuarter", g2[g2.IsThisYear = "is-this-year"] = "IsThisYear", g2[g2.IsToday = "is-today"] = "IsToday", g2[g2.IsWeekend = "is-weekend"] = "IsWeekend", g2))(Ea$1 || {}), ya$1 = ((h2) => (h2[h2.IsAfter = "is-after"] = "IsAfter", h2[h2.IsBefore = "is-before"] = "IsBefore", h2[h2.IsBeforeOrAfter = "is-before-or-after"] = "IsBeforeOrAfter", h2[h2.IsBetween = "is-between"] = "IsBetween", h2[h2.IsDate = "is-date"] = "IsDate", h2[h2.IsDateRange = "is-date-range"] = "IsDateRange", h2[h2.IsEqual = "is-equal"] = "IsEqual", h2[h2.IsNotEqual = "is-not-equal"] = "IsNotEqual", h2[h2.IsNotNull = "is-not-null"] = "IsNotNull", h2))(ya$1 || {}), xa$1 = ((g2) => (g2[g2.IsAfter = "is-after"] = "IsAfter", g2[g2.IsAfterOrEqual = "is-after-or-equal"] = "IsAfterOrEqual", g2[g2.IsBefore = "is-before"] = "IsBefore", g2[g2.IsBeforeOrEqual = "is-before-or-equal"] = "IsBeforeOrEqual", g2[g2.IsBetween = "is-between"] = "IsBetween", g2[g2.IsDate = "is-date"] = "IsDate", g2[g2.IsEqual = "is-equal"] = "IsEqual", g2[g2.IsNotDate = "is-not-date"] = "IsNotDate", g2[g2.IsNotEqual = "is-not-equal"] = "IsNotEqual", g2[g2.IsNotNull = "is-not-null"] = "IsNotNull", g2[g2.IsNotToday = "is-not-today"] = "IsNotToday", g2[g2.IsThisWeek = "is-this-week"] = "IsThisWeek", g2[g2.IsThisMonth = "is-this-month"] = "IsThisMonth", g2[g2.IsThisQuarter = "is-this-quarter"] = "IsThisQuarter", g2[g2.IsThisYear = "is-this-year"] = "IsThisYear", g2[g2.IsToday = "is-today"] = "IsToday", g2[g2.IsWeekend = "is-weekend"] = "IsWeekend", g2))(xa$1 || {}), Na$1 = ((v2) => (v2[v2.IsAfter = "is-after"] = "IsAfter", v2[v2.IsAfterOrEqual = "is-after-or-equal"] = "IsAfterOrEqual", v2[v2.IsBefore = "is-before"] = "IsBefore", v2[v2.IsBeforeOrEqual = "is-before-or-equal"] = "IsBeforeOrEqual", v2[v2.IsBetween = "is-between"] = "IsBetween", v2[v2.IsDayOfMonth = "is-day-of-month"] = "IsDayOfMonth", v2[v2.IsEvenNumber = "is-even-number"] = "IsEvenNumber", v2[v2.IsEqual = "is-equal"] = "IsEqual", v2[v2.IsGreaterThan = "greater-than"] = "IsGreaterThan", v2[v2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", v2[v2.IsInteger = "is-integer"] = "IsInteger", v2[v2.IsLessThan = "less-than"] = "IsLessThan", v2[v2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", v2[v2.IsNotEqual = "is-not-equal"] = "IsNotEqual", v2[v2.IsNotNull = "is-not-null"] = "IsNotNull", v2[v2.IsNumber = "is-number"] = "IsNumber", v2[v2.IsOddNumber = "is-odd-number"] = "IsOddNumber", v2[v2.IsToday = "is-today"] = "IsToday", v2[v2.IsWeekday = "is-weekday"] = "IsWeekday", v2[v2.IsWeekend = "is-weekend"] = "IsWeekend", v2))(Na$1 || {}), Pa$1 = ((c2) => (c2[c2.IsAfter = "is-after"] = "IsAfter", c2[c2.IsAfterOrEqual = "is-after-or-equal"] = "IsAfterOrEqual", c2[c2.IsBefore = "is-before"] = "IsBefore", c2[c2.IsBeforeOrEqual = "is-before-or-equal"] = "IsBeforeOrEqual", c2[c2.IsBetween = "is-between"] = "IsBetween", c2[c2.IsEvenNumber = "is-even-number"] = "IsEvenNumber", c2[c2.IsEqual = "is-equal"] = "IsEqual", c2[c2.IsGreaterThan = "greater-than"] = "IsGreaterThan", c2[c2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", c2[c2.IsInteger = "is-integer"] = "IsInteger", c2[c2.IsLessThan = "less-than"] = "IsLessThan", c2[c2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", c2[c2.IsMonth = "is-month"] = "IsMonth", c2[c2.IsNotEqual = "is-not-equal"] = "IsNotEqual", c2[c2.IsNotNull = "is-not-null"] = "IsNotNull", c2[c2.IsNumber = "is-number"] = "IsNumber", c2[c2.IsOddNumber = "is-odd-number"] = "IsOddNumber", c2[c2.IsThisMonth = "is-this-month"] = "IsThisMonth", c2))(Pa$1 || {}), ka$1 = ((h2) => (h2[h2.IsAfter = "is-after"] = "IsAfter", h2[h2.IsAfterOrEqual = "is-after-or-equal"] = "IsAfterOrEqual", h2[h2.IsBefore = "is-before"] = "IsBefore", h2[h2.IsBeforeOrEqual = "is-before-or-equal"] = "IsBeforeOrEqual", h2[h2.IsBetween = "is-between"] = "IsBetween", h2[h2.IsEqual = "is-equal"] = "IsEqual", h2[h2.IsNotEqual = "is-not-equal"] = "IsNotEqual", h2[h2.IsNotNull = "is-not-null"] = "IsNotNull", h2[h2.IsTime = "is-time"] = "IsTime", h2))(ka$1 || {}), Ma$1 = ((h2) => (h2[h2.IsAfter = "is-after"] = "IsAfter", h2[h2.IsBefore = "is-before"] = "IsBefore", h2[h2.IsBeforeOrAfter = "is-before-or-after"] = "IsBeforeOrAfter", h2[h2.IsBetween = "is-between"] = "IsBetween", h2[h2.IsTime = "is-time"] = "IsTime", h2[h2.IsEqual = "is-equal"] = "IsEqual", h2[h2.IsNotEqual = "is-not-equal"] = "IsNotEqual", h2[h2.IsNotNull = "is-not-null"] = "IsNotNull", h2[h2.IsTimeRange = "is-time-range"] = "IsTimeRange", h2))(Ma$1 || {}), za$2 = ((I2) => (I2[I2.IsAfter = "is-after"] = "IsAfter", I2[I2.IsBefore = "is-before"] = "IsBefore", I2[I2.IsBeforeOrAfter = "is-before-or-after"] = "IsBeforeOrAfter", I2[I2.IsBetween = "is-between"] = "IsBetween", I2[I2.IsEqual = "is-equal"] = "IsEqual", I2[I2.IsInList = "is-in-list"] = "IsInList", I2[I2.IsNotEqual = "is-not-equal"] = "IsNotEqual", I2[I2.IsNotInList = "is-not-in-list"] = "IsNotInList", I2[I2.IsNotNull = "is-not-null"] = "IsNotNull", I2[I2.IsTimeOfDay = "is-time-of-day"] = "IsTimeOfDay", I2[I2.IsTimeRange = "is-time-range"] = "IsTimeRange", I2))(za$2 || {}), La$1 = ((g2) => (g2[g2.IsAfter = "is-after"] = "IsAfter", g2[g2.IsAfterOrEqual = "is-after-or-equal"] = "IsAfterOrEqual", g2[g2.IsBefore = "is-before"] = "IsBefore", g2[g2.IsBeforeOrEqual = "is-before-or-equal"] = "IsBeforeOrEqual", g2[g2.IsBetween = "is-between"] = "IsBetween", g2[g2.IsEvenNumber = "is-even-number"] = "IsEvenNumber", g2[g2.IsEqual = "is-equal"] = "IsEqual", g2[g2.IsGreaterThan = "greater-than"] = "IsGreaterThan", g2[g2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", g2[g2.IsLessThan = "less-than"] = "IsLessThan", g2[g2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", g2[g2.IsNotEqual = "is-not-equal"] = "IsNotEqual", g2[g2.IsNotNull = "is-not-null"] = "IsNotNull", g2[g2.IsNumber = "is-number"] = "IsNumber", g2[g2.IsOddNumber = "is-odd-number"] = "IsOddNumber", g2[g2.IsWeekday = "is-weekday"] = "IsWeekday", g2[g2.IsWeekend = "is-weekend"] = "IsWeekend", g2))(La$1 || {}), Ba$1 = ((c2) => (c2[c2.IsAfter = "is-after"] = "IsAfter", c2[c2.IsAfterOrEqual = "is-after-or-equal"] = "IsAfterOrEqual", c2[c2.IsBefore = "is-before"] = "IsBefore", c2[c2.IsBeforeOrEqual = "is-before-or-equal"] = "IsBeforeOrEqual", c2[c2.IsBetween = "is-between"] = "IsBetween", c2[c2.IsEvenNumber = "is-even-number"] = "IsEvenNumber", c2[c2.IsEqual = "is-equal"] = "IsEqual", c2[c2.IsGreaterThan = "greater-than"] = "IsGreaterThan", c2[c2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", c2[c2.IsInteger = "is-integer"] = "IsInteger", c2[c2.IsLessThan = "less-than"] = "IsLessThan", c2[c2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", c2[c2.IsNotEqual = "is-not-equal"] = "IsNotEqual", c2[c2.IsNotNull = "is-not-null"] = "IsNotNull", c2[c2.IsNumber = "is-number"] = "IsNumber", c2[c2.IsOddNumber = "is-odd-number"] = "IsOddNumber", c2[c2.IsThisYear = "is-this-year"] = "IsThisYear", c2[c2.IsYear = "is-year"] = "IsYear", c2))(Ba$1 || {});
var Da$1 = ((p2) => (p2[p2.IsEqual = "is-equal"] = "IsEqual", p2[p2.IsHexadecimal = "is-hexadecimal"] = "IsHexadecimal", p2[p2.IsLengthEqual = "is-length-equal"] = "IsLengthEqual", p2[p2.IsLengthGreaterThan = "is-length-greater-than"] = "IsLengthGreaterThan", p2[p2.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal"] = "IsLengthGreaterThanOrEqual", p2[p2.IsLengthLessThan = "is-length-less-than"] = "IsLengthLessThan", p2[p2.IsLengthLessThanOrEqual = "is-length-less-than-or-equal"] = "IsLengthLessThanOrEqual", p2[p2.IsNotEqual = "is-not-equal"] = "IsNotEqual", p2[p2.IsNotNull = "is-not-null"] = "IsNotNull", p2[p2.IsString = "is-string"] = "IsString", p2))(Da$1 || {}), Ga$1 = ((o2) => (o2[o2.IsEqual = "is-equal"] = "IsEqual", o2[o2.IsJSON = "is-json"] = "IsJSON", o2[o2.IsNotEqual = "is-not-equal"] = "IsNotEqual", o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2))(Ga$1 || {}), Ka$1 = ((A2) => (A2[A2.IsEqual = "is-equal"] = "IsEqual", A2[A2.IsNotEqual = "is-not-equal"] = "IsNotEqual", A2[A2.IsNotNull = "is-not-null"] = "IsNotNull", A2[A2.IsMarkdown = "is-markdown"] = "IsMarkdown", A2[A2.IsString = "is-string"] = "IsString", A2))(Ka$1 || {});
var wa$1 = ((o2) => (o2[o2.Contains = "contains"] = "Contains", o2[o2.IsEqual = "is-equal"] = "IsEqual", o2[o2.IsNotEqual = "is-not-equal"] = "IsNotEqual", o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2))(wa$1 || {}), qa$1 = ((o2) => (o2[o2.Contains = "contains"] = "Contains", o2[o2.IsEqual = "is-equal"] = "IsEqual", o2[o2.IsNotEqual = "is-not-equal"] = "IsNotEqual", o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2))(qa$1 || {});
var Ra$2 = ((_) => (_[_.Contains = "contains"] = "Contains", _[_.IsDataURI = "is-data-uri"] = "IsDataURI", _[_.IsEqual = "is-equal"] = "IsEqual", _[_.IsNotEqual = "is-not-equal"] = "IsNotEqual", _[_.IsNotNull = "is-not-null"] = "IsNotNull", _[_.IsString = "is-string"] = "IsString", _))(Ra$2 || {}), Fa$1 = ((_) => (_[_.Contains = "contains"] = "Contains", _[_.IsDomainName = "is-domain-name"] = "IsDomainName", _[_.IsEqual = "is-equal"] = "IsEqual", _[_.IsNotEqual = "is-not-equal"] = "IsNotEqual", _[_.IsNotNull = "is-not-null"] = "IsNotNull", _[_.IsString = "is-string"] = "IsString", _))(Fa$1 || {}), Ha$1 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEmailAddress = "is-email-address"] = "IsEmailAddress", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(Ha$1 || {}), Oa$1 = ((p2) => (p2[p2.Contains = "contains"] = "Contains", p2[p2.IsEqual = "is-equal"] = "IsEqual", p2[p2.IsIPAddress = "is-ip-address"] = "IsIPAddress", p2[p2.IsInIPAddressRange = "is-in-ip-address-range"] = "IsInIPAddressRange", p2[p2.IsInList = "is-in-list"] = "IsInList", p2[p2.IsNotEqual = "is-not-equal"] = "IsNotEqual", p2[p2.IsNotInList = "is-not-in-list"] = "IsNotInList", p2[p2.IsNotInIPAddressRange = "is-not-in-ip-address-range"] = "IsNotInIPAddressRange", p2[p2.IsNotNull = "is-not-null"] = "IsNotNull", p2[p2.IsString = "is-string"] = "IsString", p2))(Oa$1 || {}), ja$2 = ((e2) => (e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsIPAddressRange = "is-ip-address-range"] = "IsIPAddressRange", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotInIPAddressRange = "is-not-in-ip-address-range"] = "IsNotInIPAddressRange", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(ja$2 || {}), Va$2 = ((e2) => (e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsGreaterThan = "greater-than"] = "IsGreaterThan", e2[e2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", e2[e2.IsInteger = "is-integer"] = "IsInteger", e2[e2.IsLessThan = "less-than"] = "IsLessThan", e2[e2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2))(Va$2 || {}), Wa$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsMACAddress = "is-mac-address"] = "IsMACAddress", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(Wa$2 || {}), Ja$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsMagnetURI = "is-magnet-uri"] = "IsMagnetURI", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(Ja$2 || {}), Za$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsMimeType = "is-mime-type"] = "IsMimeType", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(Za$2 || {}), Ya$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2[e2.IsSlug = "is-slug"] = "IsSlug", e2))(Ya$2 || {}), Qa$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2[e2.IsURL = "is-url"] = "IsURL", e2))(Qa$2 || {});
var $a$2 = ((f2) => (f2[f2.IsAfter = "is-after"] = "IsAfter", f2[f2.IsAfterOrEqual = "is-after-or-equal"] = "IsAfterOrEqual", f2[f2.IsBefore = "is-before"] = "IsBefore", f2[f2.IsBeforeOrEqual = "is-before-or-equal"] = "IsBeforeOrEqual", f2[f2.IsBetween = "is-between"] = "IsBetween", f2[f2.IsDecimal = "is-decimal"] = "IsDecimal", f2[f2.IsDivisibleBy = "is-divisible-by"] = "IsDivisibleBy", f2[f2.IsEAN = "is-ean"] = "IsEAN", f2[f2.IsEIN = "is-ein"] = "IsEIN", f2[f2.IsEqual = "is-equal"] = "IsEqual", f2[f2.IsEvenNumber = "is-even-number"] = "IsEvenNumber", f2[f2.IsFloat = "is-float"] = "IsFloat", f2[f2.IsGreaterThan = "greater-than"] = "IsGreaterThan", f2[f2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", f2[f2.IsInt = "is-integer"] = "IsInt", f2[f2.IsISBN = "is-isbn"] = "IsISBN", f2[f2.IsISMN = "is-ismn"] = "IsISMN", f2[f2.IsISSN = "is-issn"] = "IsISSN", f2[f2.IsLatitude = "is-latitude"] = "IsLatitude", f2[f2.IsLongitude = "is-longitude"] = "IsLongitude", f2[f2.IsLessThan = "less-than"] = "IsLessThan", f2[f2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", f2[f2.IsMACAddress = "is-mac-address"] = "IsMACAddress", f2[f2.IsNumber = "is-number"] = "IsNumber", f2[f2.IsNegativeNumber = "is-negative-number"] = "IsNegativeNumber", f2[f2.IsNotEqual = "is-not-equal"] = "IsNotEqual", f2[f2.IsNotNull = "is-not-null"] = "IsNotNull", f2[f2.IsOddNumber = "is-odd-number"] = "IsOddNumber", f2[f2.IsPassportNumber = "is-passport-number"] = "IsPassportNumber", f2[f2.IsPhoneNumber = "is-phone-number"] = "IsPhoneNumber", f2[f2.IsPort = "is-port"] = "IsPort", f2[f2.IsPositiveNumber = "is-positive-number"] = "IsPositiveNumber", f2[f2.IsPostalCode = "is-postal-code"] = "IsPostalCode", f2[f2.IsSemanticVersion = "is-semantic-version"] = "IsSemanticVersion", f2[f2.IsSSN = "is-ssn"] = "IsSSN", f2[f2.IsTaxIDNumber = "is-tax-id-number"] = "IsTaxIDNumber", f2[f2.IsUUID = "is-uuid"] = "IsUUID", f2[f2.IsVATIDNumber = "is-vat-id-number"] = "IsVATIDNumber", f2))($a$2 || {}), Xa$2 = ((p2) => (p2[p2.IsEqual = "is-equal"] = "IsEqual", p2[p2.IsFloat = "is-float"] = "IsFloat", p2[p2.IsGreaterThan = "greater-than"] = "IsGreaterThan", p2[p2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", p2[p2.IsLessThan = "less-than"] = "IsLessThan", p2[p2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", p2[p2.IsNotEqual = "is-not-equal"] = "IsNotEqual", p2[p2.IsNotNull = "is-not-null"] = "IsNotNull", p2[p2.IsNumber = "is-number"] = "IsNumber", p2[p2.IsNumeric = "is-numeric"] = "IsNumeric", p2))(Xa$2 || {}), Ca$2 = ((p2) => (p2[p2.IsEqual = "is-equal"] = "IsEqual", p2[p2.IsInteger = "is-integer"] = "IsInteger", p2[p2.IsGreaterThan = "greater-than"] = "IsGreaterThan", p2[p2.IsGreaterThanOrEqual = "greater-than-or-equal"] = "IsGreaterThanOrEqual", p2[p2.IsLessThan = "less-than"] = "IsLessThan", p2[p2.IsLessThanOrEqual = "less-than-or-equal"] = "IsLessThanOrEqual", p2[p2.IsNotEqual = "is-not-equal"] = "IsNotEqual", p2[p2.IsNotNull = "is-not-null"] = "IsNotNull", p2[p2.IsNumber = "is-number"] = "IsNumber", p2[p2.IsNumeric = "is-numeric"] = "IsNumeric", p2))(Ca$2 || {});
var ae$2 = ((I2) => (I2[I2.IsCreditCard = "is-credit-card"] = "IsCreditCard", I2[I2.IsEqual = "is-equal"] = "IsEqual", I2[I2.IsLengthEqual = "is-length-equal"] = "IsLengthEqual", I2[I2.IsLengthGreaterThan = "is-length-greater-than"] = "IsLengthGreaterThan", I2[I2.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal"] = "IsLengthGreaterThanOrEqual", I2[I2.IsLengthLessThan = "is-length-less-than"] = "IsLengthLessThan", I2[I2.IsLengthLessThanOrEqual = "is-length-less-than-or-equal"] = "IsLengthLessThanOrEqual", I2[I2.IsNotEqual = "is-not-equal"] = "IsNotEqual", I2[I2.IsNotNull = "is-not-null"] = "IsNotNull", I2[I2.IsRegexMatch = "is-regex-match"] = "IsRegexMatch", I2[I2.IsNotRegexMatch = "is-not-regex-match"] = "IsNotRegexMatch", I2))(ae$2 || {}), ee$2 = ((E2) => (E2[E2.isEmailAddress = "is-email-address"] = "isEmailAddress", E2[E2.IsEqual = "is-equal"] = "IsEqual", E2[E2.IsInList = "is-in-list"] = "IsInList", E2[E2.IsLengthEqual = "is-length-equal"] = "IsLengthEqual", E2[E2.IsLengthGreaterThan = "is-length-greater-than"] = "IsLengthGreaterThan", E2[E2.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal"] = "IsLengthGreaterThanOrEqual", E2[E2.IsLengthLessThan = "is-length-less-than"] = "IsLengthLessThan", E2[E2.IsLengthLessThanOrEqual = "is-length-less-than-or-equal"] = "IsLengthLessThanOrEqual", E2[E2.IsNotEqual = "is-not-equal"] = "IsNotEqual", E2[E2.IsNotInList = "is-not-in-list"] = "IsNotInList", E2[E2.IsNotNull = "is-not-null"] = "IsNotNull", E2[E2.IsRegexMatch = "is-regex-match"] = "IsRegexMatch", E2[E2.IsNotRegexMatch = "is-not-regex-match"] = "IsNotRegexMatch", E2))(ee$2 || {}), Ge$2 = ((A2) => (A2[A2.IsLicensePlateNumber = "is-license-plate-number"] = "IsLicensePlateNumber", A2[A2.IsNotNull = "is-not-null"] = "IsNotNull", A2[A2.IsNotRegexMatch = "is-not-regex-match"] = "IsNotRegexMatch", A2[A2.IsString = "is-string"] = "IsString", A2[A2.IsRegexMatch = "is-regex-match"] = "IsRegexMatch", A2))(Ge$2 || {}), ie$2 = ((o2) => (o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2[o2.IsPassportNumber = "is-passport-number"] = "IsPassportNumber", o2[o2.IsString = "is-string"] = "IsString", o2[o2.IsRegexMatch = "is-regex-match"] = "IsRegexMatch", o2))(ie$2 || {}), ne$2 = ((y2) => (y2[y2.IsComplexEnough = "is-complex-enough"] = "IsComplexEnough", y2[y2.IsInList = "is-in-list"] = "IsInList", y2[y2.IsNotInList = "is-not-in-list"] = "IsNotInList", y2[y2.IsNotNull = "is-not-null"] = "IsNotNull", y2[y2.IsNotRegexMatch = "is-not-regex-match"] = "IsNotRegexMatch", y2[y2.IsLengthGreaterThan = "is-length-greater-than"] = "IsLengthGreaterThan", y2[y2.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal"] = "IsLengthGreaterThanOrEqual", y2[y2.IsLengthLessThan = "is-length-less-than"] = "IsLengthLessThan", y2[y2.IsLengthLessThanOrEqual = "is-length-less-than-or-equal"] = "IsLengthLessThanOrEqual", y2[y2.IsStrongPassword = "is-strong-password"] = "IsStrongPassword", y2[y2.IsString = "is-string"] = "IsString", y2[y2.IsRegexMatch = "is-regex-match"] = "IsRegexMatch", y2))(ne$2 || {}), re$2 = ((A2) => (A2[A2.IsNotNull = "is-not-null"] = "IsNotNull", A2[A2.IsNotRegexMatch = "is-not-regex-match"] = "IsNotRegexMatch", A2[A2.IsNumber = "is-number"] = "IsNumber", A2[A2.IsPhoneNumber = "is-phone-number"] = "IsPhoneNumber", A2[A2.IsRegexMatch = "is-regex-match"] = "IsRegexMatch", A2))(re$2 || {}), se$2 = ((o2) => (o2[o2.IsNotNull = "is-not-null"] = "IsNotNull", o2[o2.IsSSN = "is-ssn"] = "IsSSN", o2[o2.IsString = "is-string"] = "IsString", o2[o2.IsRegexMatch = "is-regex-match"] = "IsRegexMatch", o2))(se$2 || {});
var te$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsBIC = "is-bic"] = "IsBIC", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(te$2 || {}), oe$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEAN = "is-ean"] = "IsEAN", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(oe$2 || {}), me$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEIN = "is-ein"] = "IsEIN", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(me$2 || {}), le$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsIBAN = "is-iban"] = "IsIBAN", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(le$2 || {}), ce$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsISBN = "is-isbn"] = "IsISBN", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(ce$2 || {}), ue$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsISIN = "is-isin"] = "IsISIN", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(ue$2 || {}), de$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsISMN = "is-ismn"] = "IsISMN", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(de$2 || {}), pe$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsISSN = "is-issn"] = "IsISSN", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2))(pe$2 || {}), ge$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2[e2.IsTaxIDNumber = "is-tax-id-number"] = "IsTaxIDNumber", e2))(ge$2 || {}), Ae$2 = ((e2) => (e2[e2.Contains = "contains"] = "Contains", e2[e2.IsEqual = "is-equal"] = "IsEqual", e2[e2.IsInList = "is-in-list"] = "IsInList", e2[e2.IsNotEqual = "is-not-equal"] = "IsNotEqual", e2[e2.IsNotInList = "is-not-in-list"] = "IsNotInList", e2[e2.IsNotNull = "is-not-null"] = "IsNotNull", e2[e2.IsString = "is-string"] = "IsString", e2[e2.IsVATIDNumber = "is-vat-id-number"] = "IsVATIDNumber", e2))(Ae$2 || {});
var Te$2 = ((t2) => (t2[t2.Contains = "contains"] = "Contains", t2[t2.HasNumberCount = "has-number-count"] = "HasNumberCount", t2[t2.HasLowercaseCount = "has-lowercase-count"] = "HasLowercaseCount", t2[t2.HasLetterCount = "has-letter-count"] = "HasLetterCount", t2[t2.HasSpacesCount = "has-spaces-count"] = "HasSpacesCount", t2[t2.HasSymbolCount = "has-symbol-count"] = "HasSymbolCount", t2[t2.HasUppercaseCount = "has-uppercase-count"] = "HasUppercaseCount", t2[t2.IsAlpha = "is-alpha"] = "IsAlpha", t2[t2.IsAlphanumeric = "is-alphanumeric"] = "IsAlphanumeric", t2[t2.IsAscii = "is-ascii"] = "IsAscii", t2[t2.IsBase64 = "is-base-64"] = "IsBase64", t2[t2.IsColor = "is-color"] = "IsColor", t2[t2.IsComplexEnough = "is-complex-enough"] = "IsComplexEnough", t2[t2.IsCreditCard = "is-credit-card"] = "IsCreditCard", t2[t2.IsDataURI = "is-data-uri"] = "IsDataURI", t2[t2.IsDomainName = "is-domain-name"] = "IsDomainName", t2[t2.IsEmailAddress = "is-email-address"] = "IsEmailAddress", t2[t2.IsEthereumAddress = "is-ethereum-address"] = "IsEthereumAddress", t2[t2.IsEAN = "is-ean"] = "IsEAN", t2[t2.IsEIN = "is-ein"] = "IsEIN", t2[t2.IsEqual = "is-equal"] = "IsEqual", t2[t2.IsIBAN = "is-iban"] = "IsIBAN", t2[t2.IsHSLColor = "is-hsl-color"] = "IsHSLColor", t2[t2.IsHexColor = "is-hex-color"] = "IsHexColor", t2[t2.IsHexadecimal = "is-hexadecimal"] = "IsHexadecimal", t2[t2.IsIdentityCardCode = "is-identity-card-code"] = "IsIdentityCardCode", t2[t2.IsIMEI = "is-imei"] = "IsIMEI", t2[t2.IsInList = "is-in-list"] = "IsInList", t2[t2.IsIPAddress = "is-ip-address"] = "IsIPAddress", t2[t2.IsInIPAddressRange = "is-in-ip-address-range"] = "IsInIPAddressRange", t2[t2.IsISBN = "is-isbn"] = "IsISBN", t2[t2.IsISIN = "is-isin"] = "IsISIN", t2[t2.IsISMN = "is-ismn"] = "IsISMN", t2[t2.IsISRC = "is-isrc"] = "IsISRC", t2[t2.IsISSN = "is-issn"] = "IsISSN", t2[t2.IsLanguage = "is-language"] = "IsLanguage", t2[t2.IsLatitude = "is-latitude"] = "IsLatitude", t2[t2.IsLongitude = "is-longitude"] = "IsLongitude", t2[t2.IsLengthEqual = "is-length-equal"] = "IsLengthEqual", t2[t2.IsLengthGreaterThan = "is-length-greater-than"] = "IsLengthGreaterThan", t2[t2.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal"] = "IsLengthGreaterThanOrEqual", t2[t2.IsLengthLessThan = "is-length-less-than"] = "IsLengthLessThan", t2[t2.IsLengthLessThanOrEqual = "is-length-less-than-or-equal"] = "IsLengthLessThanOrEqual", t2[t2.IsLicensePlateNumber = "is-license-plate-number"] = "IsLicensePlateNumber", t2[t2.IsLowercase = "is-lowercase"] = "IsLowercase", t2[t2.IsOctal = "is-octal"] = "IsOctal", t2[t2.IsMACAddress = "is-mac-address"] = "IsMACAddress", t2[t2.IsMD5 = "is-md5"] = "IsMD5", t2[t2.IsMagnetURI = "is-magnet-uri"] = "IsMagnetURI", t2[t2.IsMarkdown = "is-markdown"] = "IsMarkdown", t2[t2.IsMimeType = "is-mime-type"] = "IsMimeType", t2[t2.IsMonth = "is-month"] = "IsMonth", t2[t2.IsNotInIPAddressRange = "is-not-in-ip-address-range"] = "IsNotInIPAddressRange", t2[t2.IsNotInList = "is-not-in-list"] = "IsNotInList", t2[t2.IsNotNull = "is-not-null"] = "IsNotNull", t2[t2.IsNotRegexMatch = "is-not-regex-match"] = "IsNotRegexMatch", t2[t2.IsNumber = "is-number"] = "IsNumber", t2[t2.IsNumeric = "is-numeric"] = "IsNumeric", t2[t2.IsPassportNumber = "is-passport-number"] = "IsPassportNumber", t2[t2.IsPhoneNumber = "is-phone-number"] = "IsPhoneNumber", t2[t2.IsPort = "is-port"] = "IsPort", t2[t2.IsPostalCode = "is-postal-code"] = "IsPostalCode", t2[t2.IsProvince = "is-province"] = "IsProvince", t2[t2.IsRegexMatch = "is-regex-match"] = "IsRegexMatch", t2[t2.IsSemanticVersion = "is-semantic-version"] = "IsSemanticVersion", t2[t2.IsSlug = "is-slug"] = "IsSlug", t2[t2.IsSSN = "is-ssn"] = "IsSSN", t2[t2.IsState = "is-state"] = "IsState", t2[t2.IsStreetAddress = "is-street-address"] = "IsStreetAddress", t2[t2.IsString = "is-string"] = "IsString", t2[t2.IsTaxIDNumber = "is-tax-id-number"] = "IsTaxIDNumber", t2[t2.IsURL = "is-url"] = "IsURL", t2[t2.IsUUID = "is-uuid"] = "IsUUID", t2[t2.IsUppercase = "is-uppercase"] = "IsUppercase", t2[t2.IsVATIDNumber = "is-vat-id-number"] = "IsVATIDNumber", t2[t2.IsWeekday = "is-weekday"] = "IsWeekday", t2[t2.IsWeekend = "is-weekend"] = "IsWeekend", t2[t2.IsYear = "is-year"] = "IsYear", t2))(Te$2 || {}), fe$2 = ((p2) => (p2[p2.Contains = "contains"] = "Contains", p2[p2.IsAlpha = "is-alpha"] = "IsAlpha", p2[p2.IsAlphanumeric = "is-alphanumeric"] = "IsAlphanumeric", p2[p2.IsInList = "is-in-list"] = "IsInList", p2[p2.IsMarkdown = "is-markdown"] = "IsMarkdown", p2[p2.IsNotInList = "is-not-in-list"] = "IsNotInList", p2[p2.IsNumeric = "is-numeric"] = "IsNumeric", p2[p2.IsLowercase = "is-lowercase"] = "IsLowercase", p2[p2.IsString = "is-string"] = "IsString", p2[p2.IsUppercase = "is-uppercase"] = "IsUppercase", p2))(fe$2 || {});
var _e$2 = ((e2) => (e2.InvalidCharacters = "invalid-characters", e2.InvalidPattern = "invalid-pattern", e2.NotComplexEnough = "not-complex-enough", e2.NotUnique = "not-unique", e2.NotValidEmail = "not-valid-email", e2.TooLong = "too-long", e2.TooShort = "too-short", e2.Required = "required", e2))(_e$2 || {});
var he$2 = ((N2) => (N2[N2.Allowed = 0] = "Allowed", N2[N2.Blocked = 1] = "Blocked", N2))(he$2 || {});
var Se$2 = ((d2) => (d2.Canceled = "Canceled", d2.Completed = "Completed", d2.Created = "Created", d2.Faulted = "Faulted", d2.Queued = "Queued", d2.Running = "Running", d2.Waiting = "Waiting", d2))(Se$2 || {});
var Ie$2 = ((d2) => (d2.Archived = "ARCHIVED", d2.Compromised = "COMPROMISED", d2.Confirmed = "CONFIRMED", d2.ForcePasswordChange = "FORCE_CHANGE_PASSWORD", d2.ResetRequired = "RESET_REQUIRED", d2.Unconfirmed = "UNCONFIRMED", d2.Unknown = "UNKNOWN", d2))(Ie$2 || {});
var be$2 = ((o2) => (o2.Owner = "Owner", o2.Admin = "Admin", o2.User = "User", o2.Visitor = "Visitor", o2))(be$2 || {});
var ve$2 = ((d2) => (d2.RequiresPaymentMethod = "requires_payment_method", d2.RequiresConfirmation = "requires_confirmation", d2.RequiresAction = "requires_action", d2.Processing = "processing", d2.RequiresCapture = "requires_capture", d2.Canceled = "canceled", d2.Succeeded = "succeeded", d2))(ve$2 || {});
var Ue$2 = ((d2) => (d2.Incomplete = "incomplete", d2.IncompleteExpired = "incomplete_expired", d2.Trialing = "trialing", d2.Active = "active", d2.PastDue = "past_due", d2.Canceled = "canceled", d2.Unpaid = "unpaid", d2))(Ue$2 || {}), Ee$2 = ((o2) => (o2.Monthly = "monthly", o2.Quarterly = "quarterly", o2.Yearly = "yearly", o2.Lifetime = "lifetime", o2))(Ee$2 || {});
var ye$2 = ((o2) => (o2.Delivered = "delivered", o2.Read = "read", o2.Sending = "sending", o2.Sent = "sent", o2))(ye$2 || {}), xe$2 = ((A2) => (A2.Audio = "audio", A2.File = "file", A2.Image = "image", A2.Text = "text", A2.Video = "video", A2))(xe$2 || {}), Ne$2 = ((o2) => (o2.Audio = "audio", o2.File = "file", o2.Image = "image", o2.Video = "video", o2))(Ne$2 || {}), Pe$2 = ((e2) => (e2.Angry = "angry", e2.Laugh = "laugh", e2.Like = "like", e2.Love = "love", e2.Sad = "sad", e2.Wow = "wow", e2.Wink = "wink", e2.Yay = "yay", e2))(Pe$2 || {});
var ke$2 = ((N2) => (N2.Email = "email", N2.PhoneNumber = "phone_number", N2))(ke$2 || {});
var Me$2 = ((d2) => (d2.Analytics = "analytics", d2.Critical = "critical", d2.Debug = "debug", d2.Exception = "exception", d2.Http = "http", d2.Info = "info", d2.Warning = "warning", d2))(Me$2 || {});
var ze$1 = ((_) => (_.Delete = "delete", _.Get = "get", _.Head = "head", _.Patch = "patch", _.Post = "post", _.Put = "put", _))(ze$1 || {}), Le$2 = ((u2) => (u2[u2.CONTINUE = 100] = "CONTINUE", u2[u2.SWITCHING_PROTOCOLS = 101] = "SWITCHING_PROTOCOLS", u2[u2.PROCESSING = 102] = "PROCESSING", u2[u2.OK = 200] = "OK", u2[u2.CREATED = 201] = "CREATED", u2[u2.ACCEPTED = 202] = "ACCEPTED", u2[u2.NON_AUTHORITATIVE_INFORMATION = 203] = "NON_AUTHORITATIVE_INFORMATION", u2[u2.NO_CONTENT = 204] = "NO_CONTENT", u2[u2.RESET_CONTENT = 205] = "RESET_CONTENT", u2[u2.PARTIAL_CONTENT = 206] = "PARTIAL_CONTENT", u2[u2.MULTI_STATUS = 207] = "MULTI_STATUS", u2[u2.ALREADY_REPORTED = 208] = "ALREADY_REPORTED", u2[u2.IM_USED = 226] = "IM_USED", u2[u2.MULTIPLE_CHOICES = 300] = "MULTIPLE_CHOICES", u2[u2.MOVED_PERMANENTLY = 301] = "MOVED_PERMANENTLY", u2[u2.FOUND = 302] = "FOUND", u2[u2.SEE_OTHER = 303] = "SEE_OTHER", u2[u2.NOT_MODIFIED = 304] = "NOT_MODIFIED", u2[u2.USE_PROXY = 305] = "USE_PROXY", u2[u2.SWITCH_PROXY = 306] = "SWITCH_PROXY", u2[u2.TEMPORARY_REDIRECT = 307] = "TEMPORARY_REDIRECT", u2[u2.PERMANENT_REDIRECT = 308] = "PERMANENT_REDIRECT", u2[u2.BAD_REQUEST = 400] = "BAD_REQUEST", u2[u2.UNAUTHORIZED = 401] = "UNAUTHORIZED", u2[u2.PAYMENT_REQUIRED = 402] = "PAYMENT_REQUIRED", u2[u2.FORBIDDEN = 403] = "FORBIDDEN", u2[u2.NOT_FOUND = 404] = "NOT_FOUND", u2[u2.METHOD_NOT_ALLOWED = 405] = "METHOD_NOT_ALLOWED", u2[u2.NOT_ACCEPTABLE = 406] = "NOT_ACCEPTABLE", u2[u2.PROXY_AUTHENTICATION_REQUIRED = 407] = "PROXY_AUTHENTICATION_REQUIRED", u2[u2.REQUEST_TIMEOUT = 408] = "REQUEST_TIMEOUT", u2[u2.CONFLICT = 409] = "CONFLICT", u2[u2.GONE = 410] = "GONE", u2[u2.LENGTH_REQUIRED = 411] = "LENGTH_REQUIRED", u2[u2.PRECONDITION_FAILED = 412] = "PRECONDITION_FAILED", u2[u2.PAYLOAD_TOO_LARGE = 413] = "PAYLOAD_TOO_LARGE", u2[u2.URI_TOO_LONG = 414] = "URI_TOO_LONG", u2[u2.UNSUPPORTED_MEDIA_TYPE = 415] = "UNSUPPORTED_MEDIA_TYPE", u2[u2.RANGE_NOT_SATISFIABLE = 416] = "RANGE_NOT_SATISFIABLE", u2[u2.EXPECTATION_FAILED = 417] = "EXPECTATION_FAILED", u2[u2.I_AM_A_TEAPOT = 418] = "I_AM_A_TEAPOT", u2[u2.MISDIRECTED_REQUEST = 421] = "MISDIRECTED_REQUEST", u2[u2.UNPROCESSABLE_ENTITY = 422] = "UNPROCESSABLE_ENTITY", u2[u2.LOCKED = 423] = "LOCKED", u2[u2.FAILED_DEPENDENCY = 424] = "FAILED_DEPENDENCY", u2[u2.TOO_EARLY = 425] = "TOO_EARLY", u2[u2.UPGRADE_REQUIRED = 426] = "UPGRADE_REQUIRED", u2[u2.PRECONDITION_REQUIRED = 428] = "PRECONDITION_REQUIRED", u2[u2.TOO_MANY_REQUESTS = 429] = "TOO_MANY_REQUESTS", u2[u2.REQUEST_HEADER_FIELDS_TOO_LARGE = 431] = "REQUEST_HEADER_FIELDS_TOO_LARGE", u2[u2.UNAVAILABLE_FOR_LEGAL_REASONS = 451] = "UNAVAILABLE_FOR_LEGAL_REASONS", u2[u2.INTERNAL_SERVER_ERROR = 500] = "INTERNAL_SERVER_ERROR", u2[u2.NOT_IMPLEMENTED = 501] = "NOT_IMPLEMENTED", u2[u2.BAD_GATEWAY = 502] = "BAD_GATEWAY", u2[u2.SERVICE_UNAVAILABLE = 503] = "SERVICE_UNAVAILABLE", u2[u2.GATEWAY_TIMEOUT = 504] = "GATEWAY_TIMEOUT", u2[u2.HTTP_VERSION_NOT_SUPPORTED = 505] = "HTTP_VERSION_NOT_SUPPORTED", u2[u2.VARIANT_ALSO_NEGOTIATES = 506] = "VARIANT_ALSO_NEGOTIATES", u2[u2.INSUFFICIENT_STORAGE = 507] = "INSUFFICIENT_STORAGE", u2[u2.LOOP_DETECTED = 508] = "LOOP_DETECTED", u2[u2.BANDWIDTH_LIMIT_EXCEEDED = 509] = "BANDWIDTH_LIMIT_EXCEEDED", u2[u2.NOT_EXTENDED = 510] = "NOT_EXTENDED", u2[u2.NETWORK_AUTHENTICATION_REQUIRED = 511] = "NETWORK_AUTHENTICATION_REQUIRED", u2))(Le$2 || {});
var k$3 = ((n2) => (n2.Afghanistan = "AF", n2.Albania = "AL", n2.Algeria = "DZ", n2.AmericanSamoa = "AS", n2.Andorra = "AD", n2.Angola = "AO", n2.Anguilla = "AI", n2.Antarctica = "AQ", n2.AntiguaAndBarbuda = "AG", n2.Argentina = "AR", n2.Armenia = "AM", n2.Aruba = "AW", n2.Australia = "AU", n2.Austria = "AT", n2.Azerbaijan = "AZ", n2.Bahamas = "BS", n2.Bahrain = "BH", n2.Bangladesh = "BD", n2.Barbados = "BB", n2.Belarus = "BY", n2.Belgium = "BE", n2.Belize = "BZ", n2.Benin = "BJ", n2.Bermuda = "BM", n2.Bhutan = "BT", n2.Bolivia = "BO", n2.BosniaAndHerzegovina = "BA", n2.Botswana = "BW", n2.BouvetIsland = "BV", n2.Brazil = "BR", n2.BritishIndianOceanTerritory = "IO", n2.Brunei = "BN", n2.Bulgaria = "BG", n2.BurkinaFaso = "BF", n2.Burundi = "BI", n2.Cambodia = "KH", n2.Cameroon = "CM", n2.Canada = "CA", n2.CapeVerde = "CV", n2.CaymanIslands = "KY", n2.CentralAfricanRepublic = "CF", n2.Chad = "TD", n2.Chile = "CL", n2.China = "CN", n2.ChristmasIsland = "CX", n2.CocosKeelingIslands = "CC", n2.Colombia = "CO", n2.Comoros = "KM", n2.Congo = "CG", n2.CongoTheDemocraticRepublicOfThe = "CD", n2.CookIslands = "CK", n2.CostaRica = "CR", n2.CoteDIvoire = "CI", n2.Croatia = "HR", n2.Cuba = "CU", n2.Cyprus = "CY", n2.CzechRepublic = "CZ", n2.Denmark = "DK", n2.Djibouti = "DJ", n2.Dominica = "DM", n2.DominicanRepublic = "DO", n2.Ecuador = "EC", n2.Egypt = "EG", n2.ElSalvador = "SV", n2.EquatorialGuinea = "GQ", n2.Eritrea = "ER", n2.Estonia = "EE", n2.Ethiopia = "ET", n2.FalklandIslands = "FK", n2.FaroeIslands = "FO", n2.Fiji = "FJ", n2.Finland = "FI", n2.France = "FR", n2.FrenchGuiana = "GF", n2.FrenchPolynesia = "PF", n2.FrenchSouthernTerritories = "TF", n2.Gabon = "GA", n2.Gambia = "GM", n2.Georgia = "GE", n2.Germany = "DE", n2.Ghana = "GH", n2.Gibraltar = "GI", n2.Greece = "GR", n2.Greenland = "GL", n2.Grenada = "GD", n2.Guadeloupe = "GP", n2.Guam = "GU", n2.Guatemala = "GT", n2.Guernsey = "GG", n2.Guinea = "GN", n2.GuineaBissau = "GW", n2.Guyana = "GY", n2.Haiti = "HT", n2.HeardIslandMcdonaldIslands = "HM", n2.HolySeeVaticanCityState = "VA", n2.Honduras = "HN", n2.HongKong = "HK", n2.Hungary = "HU", n2.Iceland = "IS", n2.India = "IN", n2.Indonesia = "ID", n2.Iran = "IR", n2.Iraq = "IQ", n2.Ireland = "IE", n2.IsleOfMan = "IM", n2.Israel = "IL", n2.Italy = "IT", n2.Jamaica = "JM", n2.Japan = "JP", n2.Jersey = "JE", n2.Jordan = "JO", n2.Kazakhstan = "KZ", n2.Kenya = "KE", n2.Kiribati = "KI", n2.Kuwait = "KW", n2.Kyrgyzstan = "KG", n2.Laos = "LA", n2.Latvia = "LV", n2.Lebanon = "LB", n2.Lesotho = "LS", n2.Liberia = "LR", n2.Libya = "LY", n2.Liechtenstein = "LI", n2.Lithuania = "LT", n2.Luxembourg = "LU", n2.Macau = "MO", n2.Madagascar = "MG", n2.Malawi = "MW", n2.Malaysia = "MY", n2.Maldives = "MV", n2.Mali = "ML", n2.Malta = "MT", n2.MarshallIslands = "MH", n2.Martinique = "MQ", n2.Mauritania = "MR", n2.Mauritius = "MU", n2.Mayotte = "YT", n2.Mexico = "MX", n2.MicronesiaFederatedStatesOf = "FM", n2.Moldova = "MD", n2.Monaco = "MC", n2.Mongolia = "MN", n2.Montenegro = "ME", n2.Montserrat = "MS", n2.Morocco = "MA", n2.Mozambique = "MZ", n2.Myanmar = "MM", n2.Namibia = "NA", n2.Nauru = "NR", n2.Nepal = "NP", n2.Netherlands = "NL", n2.NetherlandsAntilles = "AN", n2.NewCaledonia = "NC", n2.NewZealand = "NZ", n2.NorthKorea = "KP", n2.Nicaragua = "NI", n2.Niger = "NE", n2.Nigeria = "NG", n2.Niue = "NU", n2.NorfolkIsland = "NF", n2.NorthMacedonia = "MK", n2.NorthernMarianaIslands = "MP", n2.Norway = "NO", n2.Oman = "OM", n2.Pakistan = "PK", n2.Palau = "PW", n2.PalestinianTerritoryOccupied = "PS", n2.Panama = "PA", n2.PapuaNewGuinea = "PG", n2.Paraguay = "PY", n2.Peru = "PE", n2.Philippines = "PH", n2.Pitcairn = "PN", n2.Poland = "PL", n2.Portugal = "PT", n2.PuertoRico = "PR", n2.Qatar = "QA", n2.Reunion = "RE", n2.Romania = "RO", n2.RussianFederation = "RU", n2.Rwanda = "RW", n2.SaintBarthelemy = "BL", n2.SaintHelena = "SH", n2.SaintKittsAndNevis = "KN", n2.SaintLucia = "LC", n2.SaintMartin = "MF", n2.SaintPierreAndMiquelon = "PM", n2.SaintVincentAndTheGrenadines = "VC", n2.Samoa = "WS", n2.SanMarino = "SM", n2.SaoTomeAndPrincipe = "ST", n2.SaudiArabia = "SA", n2.Senegal = "SN", n2.Serbia = "RS", n2.SerbiaAndMontenegro = "CS", n2.Seychelles = "SC", n2.SierraLeone = "SL", n2.Singapore = "SG", n2.Slovakia = "SK", n2.Slovenia = "SI", n2.SolomonIslands = "SB", n2.Somalia = "SO", n2.SouthAfrica = "ZA", n2.SouthGeorgiaAndTheSouthSandwichIslands = "GS", n2.SouthKorea = "KR", n2.Spain = "ES", n2.SriLanka = "LK", n2.Sudan = "SD", n2.Suriname = "SR", n2.SvalbardAndJanMayen = "SJ", n2.Swaziland = "SZ", n2.Sweden = "SE", n2.Switzerland = "CH", n2.Syria = "SY", n2.Taiwan = "TW", n2.Tajikistan = "TJ", n2.Tanzania = "TZ", n2.Thailand = "TH", n2.TimorLeste = "TL", n2.Togo = "TG", n2.Tokelau = "TK", n2.Tonga = "TO", n2.TrinidadAndTobago = "TT", n2.Tunisia = "TN", n2.Turkey = "TR", n2.Turkmenistan = "TM", n2.TurksAndCaicosIslands = "TC", n2.Tuvalu = "TV", n2.Uganda = "UG", n2.Ukraine = "UA", n2.UnitedArabEmirates = "AE", n2.UnitedKingdom = "GB", n2.UnitedStates = "US", n2.UnitedStatesMinorOutlyingIslands = "UM", n2.Uruguay = "UY", n2.Uzbekistan = "UZ", n2.Vanuatu = "VU", n2.Venezuela = "VE", n2.Vietnam = "VN", n2.VirginIslandsBritish = "VG", n2.VirginIslandsUS = "VI", n2.WallisAndFutuna = "WF", n2.WesternSahara = "EH", n2.Yemen = "YE", n2.Zambia = "ZM", n2.Zimbabwe = "ZW", n2))(k$3 || {});
var D$2 = ((s2) => (s2.AfghanistanAfghani = "AFN", s2.AlbaniaLek = "ALL", s2.ArmeniaDram = "AMD", s2.AlgeriaDinar = "DZD", s2.AmericanSamoaTala = "WST", s2.AngolaKwanza = "AOA", s2.ArgentinaPeso = "ARS", s2.AustraliaDollar = "AUD", s2.ArubaFlorin = "AWG", s2.AzerbaijanNewManat = "AZN", s2.BosniaAndHerzegovinaConvertibleMark = "BAM", s2.BahrainDinar = "BHD", s2.BarbadosDollar = "BBD", s2.BangladeshTaka = "BDT", s2.BelgiumFranc = "BGN", s2.BermudaDollar = "BMD", s2.BruneiDollar = "BND", s2.BoliviaBoliviano = "BOB", s2.BrazilReal = "BRL", s2.BahamasDollar = "BSD", s2.BhutanNgultrum = "BTN", s2.BotswanaPula = "BWP", s2.BelarusRuble = "BYN", s2.BelizeDollar = "BZD", s2.BulgariaLev = "BGN", s2.BurundiFranc = "BIF", s2.BritishPound = "GBP", s2.CanadaDollar = "CAD", s2.CambodiaRiel = "KHR", s2.ComorosFranc = "KMF", s2.CaymanIslandsDollar = "KYD", s2.ChilePeso = "CLP", s2.ChinaYuan = "CNY", s2.ColombiaPeso = "COP", s2.CostaRicaColon = "CRC", s2.CroatiaKuna = "HRK", s2.CubaConvertiblePeso = "CUC", s2.CubaPeso = "CUP", s2.CapeVerdeEscudo = "CVE", s2.CyprusPound = "CYP", s2.CzechRepublicKoruna = "CZK", s2.DjiboutiFranc = "DJF", s2.DenmarkKrone = "DKK", s2.DominicaDollar = "XCD", s2.DominicanRepublicPeso = "DOP", s2.EastCaribbeanDollar = "XCD", s2.EgyptPound = "EGP", s2.ElSalvadorColon = "SVC", s2.EquatorialGuineaEkwele = "GQE", s2.EritreaNakfa = "ERN", s2.EstoniaKroon = "EEK", s2.EthiopiaBirr = "ETB", s2.Euro = "EUR", s2.FijiDollar = "FJD", s2.FalklandIslandsPound = "FKP", s2.GambiaDalasi = "GMD", s2.GabonFranc = "GMD", s2.GeorgiaLari = "GEL", s2.GhanaCedi = "GHS", s2.GibraltarPound = "GIP", s2.GuatemalaQuetzal = "GTQ", s2.GuernseyPound = "GGP", s2.GuineaBissauPeso = "GWP", s2.GuyanaDollar = "GYD", s2.HongKongDollar = "HKD", s2.HondurasLempira = "HNL", s2.HaitiGourde = "HTG", s2.HungaryForint = "HUF", s2.IndonesiaRupiah = "IDR", s2.IsleOfManPound = "IMP", s2.IsraelNewShekel = "ILS", s2.IndiaRupee = "INR", s2.IraqDinar = "IQD", s2.IranRial = "IRR", s2.IcelandKrona = "ISK", s2.JamaicaDollar = "JMD", s2.JapanYen = "JPY", s2.JerseyPound = "JEP", s2.JordanDinar = "JOD", s2.KazakhstanTenge = "KZT", s2.KenyaShilling = "KES", s2.KyrgyzstanSom = "KGS", s2.NorthKoreaWon = "KPW", s2.SouthKoreaWon = "KRW", s2.KuwaitDinar = "KWD", s2.LaosKip = "LAK", s2.LebanonPound = "LBP", s2.LiberiaDollar = "LRD", s2.LesothoLoti = "LSL", s2.LibyanDinar = "LYD", s2.LithuaniaLitas = "LTL", s2.LatviaLats = "LVL", s2.LibyaDinar = "LYD", s2.MacauPataca = "MOP", s2.MaldivesRufiyaa = "MVR", s2.MalawiKwacha = "MWK", s2.MaltaLira = "MTL", s2.MauritiusRupee = "MUR", s2.MongoliaTughrik = "MNT", s2.MoroccoDirham = "MAD", s2.MoldovaLeu = "MDL", s2.MozambiqueMetical = "MZN", s2.MadagascarAriary = "MGA", s2.MacedoniaDenar = "MKD", s2.MexicoPeso = "MXN", s2.MalaysiaRinggit = "MYR", s2.MyanmarKyat = "MMK", s2.MicronesiaFederatedStatesDollar = "USD", s2.NicaraguaCordoba = "NIO", s2.NamibiaDollar = "NAD", s2.NetherlandsAntillesGuilder = "ANG", s2.NewCaledoniaFranc = "XPF", s2.NigeriaNaira = "NGN", s2.NicaraguaCordobaOro = "NIO", s2.NigerCFAFranc = "XOF", s2.NorwayKrone = "NOK", s2.NepalRupee = "NPR", s2.NewZealandDollar = "NZD", s2.OmanRial = "OMR", s2.PanamaBalboa = "PAB", s2.PeruNuevoSol = "PEN", s2.PapuaNewGuineaKina = "PGK", s2.PhilippinesPeso = "PHP", s2.PakistanRupee = "PKR", s2.PeruNuevo = "PEN", s2.PolandZloty = "PLN", s2.ParaguayGuarani = "PYG", s2.QatarRial = "QAR", s2.RomaniaNewLeu = "RON", s2.SerbiaDinar = "RSD", s2.SriLankaRupee = "LKR", s2.RussiaRuble = "RUB", s2.RwandaFranc = "RWF", s2.SaudiArabiaRiyal = "SAR", s2.SlovakiaKoruna = "SKK", s2.SloveniaTolar = "SIT", s2.SolomonIslandsDollar = "SBD", s2.SeychellesRupee = "SCR", s2.SudanPound = "SDG", s2.SwedenKrona = "SEK", s2.SingaporeDollar = "SGD", s2.SaintHelenaPound = "SHP", s2.SierraLeoneLeone = "SLL", s2.SomaliaShilling = "SOS", s2.SurinameDollar = "SRD", s2.SintMaartenPound = "SXD", s2.SyriaPound = "SYP", s2.SwazilandLilangeni = "SZL", s2.SwitzerlandFranc = "CHF", s2.ThailandBaht = "THB", s2.TajikistanSomoni = "TJS", s2.TurkmenistanManat = "TMT", s2.TunisiaDinar = "TND", s2.TongaPaanga = "TOP", s2.TurkeyLira = "TRY", s2.TrinidadAndTobagoDollar = "TTD", s2.TaiwanNewDollar = "TWD", s2.TanzaniaShilling = "TZS", s2.UnitedArabEmiratesDirham = "AED", s2.UkraineHryvnia = "UAH", s2.UgandaShilling = "UGX", s2.UnitedKingdomPound = "GBP", s2.UnitedStatesDollar = "USD", s2.UruguayPeso = "UYU", s2.UzbekistanSom = "UZS", s2.VenezuelaBolivar = "VEF", s2.VietnamDong = "VND", s2.VanuatuVatu = "VUV", s2.SamoaTala = "WST", s2.YemenRial = "YER", s2.SouthAfricaRand = "ZAR", s2.ZambiaKwacha = "ZMW", s2.ZimbabweDollar = "ZWL", s2))(D$2 || {}), Be$2 = ((b2) => (b2.Bitcoin = "BTC", b2.Ethereum = "ETH", b2.Litecoin = "LTC", b2.Ripple = "XRP", b2.Dash = "DASH", b2.Zcash = "ZEC", b2.Dogecoin = "DOGE", b2.Monero = "XMR", b2.BitcoinCash = "BCH", b2.EOS = "EOS", b2.Binance = "BNB", b2.Stellar = "XLM", b2.Cardano = "ADA", b2.IOTA = "IOTA", b2.Tezos = "XTZ", b2.NEO = "NEO", b2.TRON = "TRX", b2.EOSClassic = "EOSC", b2.Ontology = "ONT", b2.VeChain = "VEN", b2.QTUM = "QTUM", b2.Lisk = "LSK", b2.Waves = "WAVES", b2.OmiseGO = "OMG", b2.Zilliqa = "ZIL", b2.BitcoinGold = "BTG", b2.Decred = "DCR", b2.Stratis = "STRAT", b2.Populous = "PPT", b2.Augur = "REP", b2.Golem = "GNT", b2.Siacoin = "SC", b2.BasicAttentionToken = "BAT", b2.ZCoin = "XZC", b2.StratisHedged = "SNT", b2.VeChainHedged = "VEN", b2.PowerLedger = "POWR", b2.WavesHedged = "WAVE", b2.ZilliqaHedged = "ZRX", b2.BitcoinDiamond = "BCD", b2.DigiByte = "DGB", b2.DigiByteHedged = "DGB", b2.Bytecoin = "BCN", b2.BytecoinHedged = "BCN", b2))(Be$2 || {});
var G$3 = ((m2) => (m2.Afrikaans = "af", m2.Albanian = "sq", m2.Amharic = "am", m2.Arabic = "ar", m2.Armenian = "hy", m2.Azerbaijani = "az", m2.Bashkir = "ba", m2.Basque = "eu", m2.Belarusian = "be", m2.Bengali = "bn", m2.Berber = "ber", m2.Bhutani = "dz", m2.Bihari = "bh", m2.Bislama = "bi", m2.Bosnian = "bs", m2.Breten = "br", m2.Bulgarian = "bg", m2.Burmese = "my", m2.Cantonese = "yue", m2.Catalan = "ca", m2.Chinese = "zh", m2.Chuvash = "cv", m2.Corsican = "co", m2.Croatian = "hr", m2.Czech = "cs", m2.Danish = "da", m2.Dari = "prs", m2.Divehi = "dv", m2.Dutch = "nl", m2.English = "en", m2.Esperanto = "eo", m2.Estonian = "et", m2.Faroese = "fo", m2.Farsi = "fa", m2.Filipino = "fil", m2.Finnish = "fi", m2.French = "fr", m2.Frisian = "fy", m2.Galician = "gl", m2.Georgian = "ka", m2.German = "de", m2.Greek = "el", m2.Greenlandic = "kl", m2.Gujarati = "gu", m2.Haitian = "ht", m2.Hausa = "ha", m2.Hebrew = "he", m2.Hindi = "hi", m2.Hungarian = "hu", m2.Icelandic = "is", m2.Igbo = "ig", m2.Indonesian = "id", m2.Irish = "ga", m2.Italian = "it", m2.Japanese = "ja", m2.Javanese = "jv", m2.Kannada = "kn", m2.Karelian = "krl", m2.Kazakh = "kk", m2.Khmer = "km", m2.Komi = "kv", m2.Konkani = "kok", m2.Korean = "ko", m2.Kurdish = "ku", m2.Kyrgyz = "ky", m2.Lao = "lo", m2.Latin = "la", m2.Latvian = "lv", m2.Lithuanian = "lt", m2.Luxembourgish = "lb", m2.Ossetian = "os", m2.Macedonian = "mk", m2.Malagasy = "mg", m2.Malay = "ms", m2.Malayalam = "ml", m2.Maltese = "mt", m2.Maori = "mi", m2.Marathi = "mr", m2.Mari = "mhr", m2.Mongolian = "mn", m2.Montenegrin = "me", m2.Nepali = "ne", m2.NorthernSotho = "nso", m2.Norwegian = "no", m2.NorwegianBokmal = "nb", m2.NorwegianNynorsk = "nn", m2.Oriya = "or", m2.Pashto = "ps", m2.Persian = "fa", m2.Polish = "pl", m2.Portuguese = "pt", m2.Punjabi = "pa", m2.Quechua = "qu", m2.Romanian = "ro", m2.Russian = "ru", m2.Sakha = "sah", m2.Sami = "se", m2.Samoan = "sm", m2.Sanskrit = "sa", m2.Scots = "gd", m2.Serbian = "sr", m2.SerbianCyrillic = "sr-Cyrl", m2.Sesotho = "st", m2.Shona = "sn", m2.Sindhi = "sd", m2.Sinhala = "si", m2.Slovak = "sk", m2.Slovenian = "sl", m2.Somali = "so", m2.Spanish = "es", m2.Sudanese = "su", m2.Sutu = "sx", m2.Swahili = "sw", m2.Swedish = "sv", m2.Syriac = "syr", m2.Tagalog = "tl", m2.Tajik = "tg", m2.Tamazight = "tmh", m2.Tamil = "ta", m2.Tatar = "tt", m2.Telugu = "te", m2.Thai = "th", m2.Tibetan = "bo", m2.Tsonga = "ts", m2.Tswana = "tn", m2.Turkish = "tr", m2.Turkmen = "tk", m2.Ukrainian = "uk", m2.Urdu = "ur", m2.Uzbek = "uz", m2.Vietnamese = "vi", m2.Welsh = "cy", m2.Xhosa = "xh", m2.Yiddish = "yi", m2.Yoruba = "yo", m2.Zulu = "zu", m2))(G$3 || {});
var z$3 = ((i2) => (i2.Afrikaans = "af", i2.AfrikaansSouthAfrica = "af-ZA", i2.Albanian = "sq", i2.AlbanianAlbania = "sq-AL", i2.Amharic = "am", i2.AmharicEthiopia = "am-ET", i2.Arabic = "ar", i2.ArabicAlgeria = "ar-DZ", i2.ArabicBahrain = "ar-BH", i2.ArabicEgypt = "ar-EG", i2.ArabicIraq = "ar-IQ", i2.ArabicJordan = "ar-JO", i2.ArabicKuwait = "ar-KW", i2.ArabicLebanon = "ar-LB", i2.ArabicLibya = "ar-LY", i2.ArabicMorocco = "ar-MA", i2.ArabicOman = "ar-OM", i2.ArabicQatar = "ar-QA", i2.ArabicSaudiArabia = "ar-SA", i2.ArabicSyria = "ar-SY", i2.ArabicTunisia = "ar-TN", i2.ArabicUnitedArabEmirates = "ar-AE", i2.ArabicYemen = "ar-YE", i2.Armenian = "hy", i2.ArmenianArmenia = "hy-AM", i2.Azerbaijani = "az", i2.AzerbaijaniAzerbaijan = "az-AZ", i2.AzerbaijaniCyrillicAzerbaijan = "az-Cyrl-AZ", i2.Bashkir = "ba", i2.Basque = "eu", i2.BasqueSpain = "eu-ES", i2.Belarusian = "be", i2.BelarusianBelarus = "be-BY", i2.Bengali = "bn", i2.BengaliBangladesh = "bn-BD", i2.BengaliIndia = "bn-IN", i2.Berber = "ber", i2.Bhutani = "dz", i2.BhutaniBhutan = "dz-BT", i2.Bosnian = "bs", i2.BosnianBosniaAndHerzegovina = "bs-BA", i2.Breton = "br", i2.Bulgarian = "bg", i2.BulgarianBosniaAndHerzegovina = "bg-BG", i2.BulgarianBulgaria = "bg-BG", i2.Burmese = "my", i2.BurmeseMyanmar = "my-MM", i2.Cantonese = "yue", i2.CantoneseHongKong = "yue-HK", i2.Catalan = "ca", i2.CatalanSpain = "ca-ES", i2.Chechen = "ce", i2.Cherokee = "chr", i2.Chinese = "zh", i2.ChineseSimplified = "zh-Hans", i2.ChineseSimplifiedChina = "zh-Hans-CN", i2.ChineseSimplifiedHongKong = "zh-Hans-HK", i2.ChineseSimplifiedMacau = "zh-Hans-MO", i2.ChineseSimplifiedSingapore = "zh-Hans-SG", i2.ChineseTraditional = "zh-Hant", i2.ChineseTraditionalHongKong = "zh-Hant-HK", i2.ChineseTraditionalMacau = "zh-Hant-MO", i2.ChineseTraditionalSingapore = "zh-Hant-SG", i2.ChineseTraditionalTaiwan = "zh-Hant-TW", i2.Chuvash = "cv", i2.CorsicanFrance = "co-FR", i2.Croatian = "hr", i2.CroatianBosniaAndHerzegovina = "hr-BA", i2.CroatianCroatia = "hr-HR", i2.Czech = "cs", i2.CzechCzechRepublic = "cs-CZ", i2.Danish = "da", i2.DanishDenmark = "da-DK", i2.Dari = "prs", i2.DariAfghanistan = "prs-AF", i2.Divehi = "dv", i2.DivehiMaldives = "dv-MV", i2.Dutch = "nl", i2.DutchBelgium = "nl-BE", i2.DutchNetherlands = "nl-NL", i2.English = "en", i2.EnglishAustralia = "en-AU", i2.EnglishBelgium = "en-BE", i2.EnglishBelize = "en-BZ", i2.EnglishCanada = "en-CA", i2.EnglishCaribbean = "en-029", i2.EnglishIreland = "en-IE", i2.EnglishJamaica = "en-JM", i2.EnglishNewZealand = "en-NZ", i2.EnglishPhilippines = "en-PH", i2.EnglishSingapore = "en-SG", i2.EnglishSouthAfrica = "en-ZA", i2.EnglishTrinidadAndTobago = "en-TT", i2.EnglishUnitedKingdom = "en-GB", i2.EnglishUnitedStates = "en-US", i2.EnglishZimbabwe = "en-ZW", i2.Esperanto = "eo", i2.Estonian = "et", i2.EstonianEstonia = "et-EE", i2.Faroese = "fo", i2.FaroeseFaroeIslands = "fo-FO", i2.Farsi = "fa", i2.FarsiIran = "fa-IR", i2.Filipino = "fil", i2.FilipinoPhilippines = "fil-PH", i2.Finnish = "fi", i2.FinnishFinland = "fi-FI", i2.French = "fr", i2.FrenchBelgium = "fr-BE", i2.FrenchCanada = "fr-CA", i2.FrenchFrance = "fr-FR", i2.FrenchLuxembourg = "fr-LU", i2.FrenchMonaco = "fr-MC", i2.FrenchReunion = "fr-RE", i2.FrenchSwitzerland = "fr-CH", i2.Frisian = "fy", i2.FrisianNetherlands = "fy-NL", i2.Galician = "gl", i2.GalicianSpain = "gl-ES", i2.Georgian = "ka", i2.GeorgianGeorgia = "ka-GE", i2.German = "de", i2.GermanAustria = "de-AT", i2.GermanBelgium = "de-BE", i2.GermanGermany = "de-DE", i2.GermanLiechtenstein = "de-LI", i2.GermanLuxembourg = "de-LU", i2.GermanSwitzerland = "de-CH", i2.Greenlandic = "kl", i2.GreenlandicGreenland = "kl-GL", i2.Greek = "el", i2.GreekGreece = "el-GR", i2.Gujarati = "gu", i2.GujaratiIndia = "gu-IN", i2.Haitian = "ht", i2.Hausa = "ha", i2.HausaGhana = "ha-GH", i2.HausaNiger = "ha-NE", i2.HausaNigeria = "ha-NG", i2.Hebrew = "he", i2.HebrewIsrael = "he-IL", i2.Hindi = "hi", i2.HindiIndia = "hi-IN", i2.Hungarian = "hu", i2.HungarianHungary = "hu-HU", i2.Icelandic = "is", i2.IcelandicIceland = "is-IS", i2.Igbo = "ig", i2.IgboNigeria = "ig-NG", i2.Indonesian = "id", i2.IndonesianIndonesia = "id-ID", i2.Irish = "ga", i2.IrishIreland = "ga-IE", i2.Italian = "it", i2.ItalianItaly = "it-IT", i2.ItalianSwitzerland = "it-CH", i2.Japanese = "ja", i2.JapaneseJapan = "ja-JP", i2.Javanese = "jv", i2.Kannada = "kn", i2.KannadaIndia = "kn-IN", i2.Karelian = "krl", i2.Kazakh = "kk", i2.KazakhKazakhstan = "kk-KZ", i2.Khmer = "km", i2.KhmerCambodia = "km-KH", i2.KinyarwandaRwanda = "rw-RW", i2.Komi = "kv", i2.Konkani = "kok", i2.KonkaniIndia = "kok-IN", i2.Korean = "ko", i2.KoreanSouthKorea = "ko-KR", i2.Kurdish = "ku", i2.KurdishIraq = "ku-IQ", i2.KurdishTurkey = "ku-TR", i2.Kyrgyz = "ky", i2.KyrgyzKyrgyzstan = "ky-KG", i2.Lao = "lo", i2.LaoLaos = "lo-LA", i2.Latin = "la", i2.Latvian = "lv", i2.LatvianLatvia = "lv-LV", i2.Lithuanian = "lt", i2.LithuanianLithuania = "lt-LT", i2.Luxembourgish = "lb", i2.LuxembourgishBelgium = "lb-LU", i2.LuxembourgishLuxembourg = "lb-LU", i2.Macedonian = "mk", i2.MacedonianNorthMacedonia = "mk-MK", i2.Malagasy = "mg", i2.Malay = "ms", i2.MalayBrunei = "ms-BN", i2.MalayIndia = "ms-IN", i2.MalayMalaysia = "ms-MY", i2.MalaySingapore = "ms-SG", i2.Malayalam = "ml", i2.MalayalamIndia = "ml-IN", i2.Maltese = "mt", i2.MalteseMalta = "mt-MT", i2.Maori = "mi", i2.MaoriNewZealand = "mi-NZ", i2.Marathi = "mr", i2.MarathiIndia = "mr-IN", i2.Mari = "chm", i2.Mongolian = "mn", i2.MongolianMongolia = "mn-MN", i2.Montenegrin = "me", i2.MontenegrinMontenegro = "me-ME", i2.Nepali = "ne", i2.NepaliNepal = "ne-NP", i2.NorthernSotho = "ns", i2.NorthernSothoSouthAfrica = "ns-ZA", i2.Norwegian = "nb", i2.NorwegianBokmalNorway = "nb-NO", i2.NorwegianNynorskNorway = "nn-NO", i2.Oriya = "or", i2.OriyaIndia = "or-IN", i2.Ossetian = "os", i2.Pashto = "ps", i2.PashtoAfghanistan = "ps-AF", i2.Persian = "fa", i2.PersianIran = "fa-IR", i2.Polish = "pl", i2.PolishPoland = "pl-PL", i2.Portuguese = "pt", i2.PortugueseBrazil = "pt-BR", i2.PortuguesePortugal = "pt-PT", i2.Punjabi = "pa", i2.PunjabiIndia = "pa-IN", i2.PunjabiPakistan = "pa-PK", i2.Quechua = "qu", i2.QuechuaBolivia = "qu-BO", i2.QuechuaEcuador = "qu-EC", i2.QuechuaPeru = "qu-PE", i2.Romanian = "ro", i2.RomanianRomania = "ro-RO", i2.Russian = "ru", i2.RussianKazakhstan = "ru-KZ", i2.RussianKyrgyzstan = "ru-KG", i2.RussianRussia = "ru-RU", i2.RussianUkraine = "ru-UA", i2.Sakha = "sah", i2.Sanskrit = "sa", i2.SanskritIndia = "sa-IN", i2.Sami = "se", i2.SamiNorway = "se-NO", i2.SamiSweden = "se-SE", i2.SamiFinland = "se-FI", i2.Samoan = "sm", i2.SamoanSamoa = "sm-WS", i2.Scots = "gd", i2.Serbian = "sr", i2.SerbianBosniaAndHerzegovina = "sr-BA", i2.SerbianSerbiaAndMontenegro = "sr-SP", i2.SerbianCyrillic = "sr-SP-Cyrl", i2.SerbianCyrillicBosniaAndHerzegovina = "sr-Cyrl-BA", i2.SerbianCyrillicSerbiaAndMontenegro = "sr-Cyrl-SP", i2.Sesotho = "st", i2.SesothoSouthAfrica = "st-ZA", i2.Shona = "sn", i2.ShonaZimbabwe = "sn-ZW", i2.Sindhi = "sd", i2.SindhiPakistan = "sd-PK", i2.Sinhala = "si", i2.SinhalaSriLanka = "si-LK", i2.Slovak = "sk", i2.SlovakSlovakia = "sk-SK", i2.Slovenian = "sl", i2.SlovenianSlovenia = "sl-SI", i2.Somali = "so", i2.SomaliSomalia = "so-SO", i2.Spanish = "es", i2.SpanishArgentina = "es-AR", i2.SpanishBolivia = "es-BO", i2.SpanishChile = "es-CL", i2.SpanishColombia = "es-CO", i2.SpanishCostaRica = "es-CR", i2.SpanishCuba = "es-CU", i2.SpanishDominicanRepublic = "es-DO", i2.SpanishEcuador = "es-EC", i2.SpanishEquatorialGuinea = "es-GQ", i2.SpanishElSalvador = "es-SV", i2.SpanishGuatemala = "es-GT", i2.SpanishHonduras = "es-HN", i2.SpanishMexico = "es-MX", i2.SpanishNicaragua = "es-NI", i2.SpanishPanama = "es-PA", i2.SpanishParaguay = "es-PY", i2.SpanishPeru = "es-PE", i2.SpanishPuertoRico = "es-PR", i2.SpanishSpain = "es-ES", i2.SpanishUnitedStates = "es-US", i2.SpanishUruguay = "es-UY", i2.SpanishVenezuela = "es-VE", i2.Sudanese = "su", i2.Sutu = "st", i2.SutuSouthAfrica = "st-ZA", i2.Swahili = "sw", i2.SwahiliKenya = "sw-KE", i2.Swedish = "sv", i2.SwedishFinland = "sv-FI", i2.SwedishSweden = "sv-SE", i2.Syriac = "syr", i2.SyriacSyria = "syr-SY", i2.Tajik = "tg", i2.TajikTajikistan = "tg-TJ", i2.Tagalog = "tl", i2.TagalogPhilippines = "tl-PH", i2.Tamazight = "tmh", i2.Tamil = "ta", i2.TamilIndia = "ta-IN", i2.Tatar = "tt", i2.Telugu = "te", i2.TeluguIndia = "te-IN", i2.Thai = "th", i2.ThaiThailand = "th-TH", i2.Tibetan = "bo", i2.TibetanBhutan = "bo-BT", i2.TibetanChina = "bo-CN", i2.TibetanIndia = "bo-IN", i2.Tsonga = "ts", i2.Tswana = "tn", i2.TswanaSouthAfrica = "tn-ZA", i2.Turkish = "tr", i2.TurkishTurkey = "tr-TR", i2.Turkmen = "tk", i2.Ukrainian = "uk", i2.UkrainianUkraine = "uk-UA", i2.Urdu = "ur", i2.UrduAfghanistan = "ur-AF", i2.UrduIndia = "ur-IN", i2.UrduPakistan = "ur-PK", i2.Uzbek = "uz", i2.UzbekCyrillic = "uz-Cyrl-UZ", i2.UzbekLatin = "uz-Latn-UZ", i2.UzbekUzbekistan = "uz-UZ", i2.Vietnamese = "vi", i2.VietnameseVietnam = "vi-VN", i2.Welsh = "cy", i2.WelshUnitedKingdom = "cy-GB", i2.Xhosa = "xh", i2.XhosaSouthAfrica = "xh-ZA", i2.Yiddish = "yi", i2.Yoruba = "yo", i2.YorubaNigeria = "yo-NG", i2.ZhuyinMandarinChina = "yue-Hant-CN", i2.Zulu = "zu", i2.ZuluSouthAfrica = "zu-ZA", i2))(z$3 || {});
var L$2 = ((a) => (a.AfricaAbidjan = "Africa/Abidjan", a.AfricaAccra = "Africa/Accra", a.AfricaAddisAbaba = "Africa/Addis_Ababa", a.AfricaAlgiers = "Africa/Algiers", a.AfricaAsmara = "Africa/Asmara", a.AfricaBamako = "Africa/Bamako", a.AfricaBangui = "Africa/Bangui", a.AfricaBanjul = "Africa/Banjul", a.AfricaBissau = "Africa/Bissau", a.AfricaBlantyre = "Africa/Blantyre", a.AfricaBrazzaville = "Africa/Brazzaville", a.AfricaBujumbura = "Africa/Bujumbura", a.AfricaCairo = "Africa/Cairo", a.AfricaCasablanca = "Africa/Casablanca", a.AfricaCeuta = "Africa/Ceuta", a.AfricaConakry = "Africa/Conakry", a.AfricaDakar = "Africa/Dakar", a.AfricaDarEsSalaam = "Africa/Dar_es_Salaam", a.AfricaDjibouti = "Africa/Djibouti", a.AfricaDouala = "Africa/Douala", a.AfricaElAaiun = "Africa/El_Aaiun", a.AfricaFreetown = "Africa/Freetown", a.AfricaGaborone = "Africa/Gaborone", a.AfricaHarare = "Africa/Harare", a.AfricaJohannesburg = "Africa/Johannesburg", a.AfricaJuba = "Africa/Juba", a.AfricaKampala = "Africa/Kampala", a.AfricaKhartoum = "Africa/Khartoum", a.AfricaKigali = "Africa/Kigali", a.AfricaKinshasa = "Africa/Kinshasa", a.AfricaLagos = "Africa/Lagos", a.AfricaLibreville = "Africa/Libreville", a.AfricaLome = "Africa/Lome", a.AfricaLuanda = "Africa/Luanda", a.AfricaLubumbashi = "Africa/Lubumbashi", a.AfricaLusaka = "Africa/Lusaka", a.AfricaMalabo = "Africa/Malabo", a.AfricaMaputo = "Africa/Maputo", a.AfricaMaseru = "Africa/Maseru", a.AfricaMbabane = "Africa/Mbabane", a.AfricaMogadishu = "Africa/Mogadishu", a.AfricaMonrovia = "Africa/Monrovia", a.AfricaNairobi = "Africa/Nairobi", a.AfricaNdjamena = "Africa/Ndjamena", a.AfricaNiamey = "Africa/Niamey", a.AfricaNouakchott = "Africa/Nouakchott", a.AfricaOuagadougou = "Africa/Ouagadougou", a.AfricaPortoNovo = "Africa/Porto-Novo", a.AfricaSaoTome = "Africa/Sao_Tome", a.AfricaTripoli = "Africa/Tripoli", a.AfricaTunis = "Africa/Tunis", a.AfricaWindhoek = "Africa/Windhoek", a.AmericaAdak = "America/Adak", a.AmericaAnchorage = "America/Anchorage", a.AmericaAnguilla = "America/Anguilla", a.AmericaAntigua = "America/Antigua", a.AmericaAraguaina = "America/Araguaina", a.AmericaArgentinaBuenosAires = "America/Argentina/Buenos_Aires", a.AmericaArgentinaCatamarca = "America/Argentina/Catamarca", a.AmericaArgentinaCordoba = "America/Argentina/Cordoba", a.AmericaArgentinaJujuy = "America/Argentina/Jujuy", a.AmericaArgentinaLaRioja = "America/Argentina/La_Rioja", a.AmericaArgentinaMendoza = "America/Argentina/Mendoza", a.AmericaArgentinaRioGallegos = "America/Argentina/Rio_Gallegos", a.AmericaArgentinaSalta = "America/Argentina/Salta", a.AmericaArgentinaSanJuan = "America/Argentina/San_Juan", a.AmericaArgentinaSanLuis = "America/Argentina/San_Luis", a.AmericaArgentinaTucuman = "America/Argentina/Tucuman", a.AmericaArgentinaUshuaia = "America/Argentina/Ushuaia", a.AmericaAruba = "America/Aruba", a.AmericaAsuncion = "America/Asuncion", a.AmericaAtikokan = "America/Atikokan", a.AmericaAtka = "America/Atka", a.AmericaBahia = "America/Bahia", a.AmericaBahiaBanderas = "America/Bahia_Banderas", a.AmericaBarbados = "America/Barbados", a.AmericaBelem = "America/Belem", a.AmericaBelize = "America/Belize", a.AmericaBlancSablon = "America/Blanc-Sablon", a.AmericaBoaVista = "America/Boa_Vista", a.AmericaBogota = "America/Bogota", a.AmericaBoise = "America/Boise", a.AmericaCambridgeBay = "America/Cambridge_Bay", a.AmericaCampoGrande = "America/Campo_Grande", a.AmericaCancun = "America/Cancun", a.AmericaCaracas = "America/Caracas", a.AmericaCayenne = "America/Cayenne", a.AmericaCayman = "America/Cayman", a.AmericaChicago = "America/Chicago", a.AmericaChihuahua = "America/Chihuahua", a.AmericaCoralHarbour = "America/Coral_Harbour", a.AmericaCordoba = "America/Cordoba", a.AmericaCostaRica = "America/Costa_Rica", a.AmericaCreston = "America/Creston", a.AmericaCuiaba = "America/Cuiaba", a.AmericaCuracao = "America/Curacao", a.AmericaDanmarkshavn = "America/Danmarkshavn", a.AmericaDawson = "America/Dawson", a.AmericaDawsonCreek = "America/Dawson_Creek", a.AmericaDenver = "America/Denver", a.AmericaDetroit = "America/Detroit", a.AmericaDominica = "America/Dominica", a.AmericaEdmonton = "America/Edmonton", a.AmericaEirunepe = "America/Eirunepe", a.AmericaElSalvador = "America/El_Salvador", a.AmericaFortaleza = "America/Fortaleza", a.AmericaGlaceBay = "America/Glace_Bay", a.AmericaGodthab = "America/Godthab", a.AmericaGooseBay = "America/Goose_Bay", a.AmericaGrandTurk = "America/Grand_Turk", a.AmericaGrenada = "America/Grenada", a.AmericaGuadeloupe = "America/Guadeloupe", a.AmericaGuatemala = "America/Guatemala", a.AmericaGuayaquil = "America/Guayaquil", a.AmericaGuyana = "America/Guyana", a.AmericaHalifax = "America/Halifax", a.AmericaHavana = "America/Havana", a.AmericaHermosillo = "America/Hermosillo", a.AmericaIndianaIndianapolis = "America/Indiana/Indianapolis", a.AmericaIndianaKnox = "America/Indiana/Knox", a.AmericaIndianaMarengo = "America/Indiana/Marengo", a.AmericaIndianaPetersburg = "America/Indiana/Petersburg", a.AmericaIndianaTellCity = "America/Indiana/Tell_City", a.AmericaIndianaVevay = "America/Indiana/Vevay", a.AmericaIndianaVincennes = "America/Indiana/Vincennes", a.AmericaIndianaWinamac = "America/Indiana/Winamac", a.AmericaInuvik = "America/Inuvik", a.AmericaIqaluit = "America/Iqaluit", a.AmericaJamaica = "America/Jamaica", a.AmericaJuneau = "America/Juneau", a.AmericaKentuckyLouisville = "America/Kentucky/Louisville", a.AmericaKentuckyMonticello = "America/Kentucky/Monticello", a.AmericaKralendijk = "America/Kralendijk", a.AmericaLaPaz = "America/La_Paz", a.AmericaLima = "America/Lima", a.AmericaLosAngeles = "America/Los_Angeles", a.AmericaLouisville = "America/Louisville", a.AmericaLowerPrinces = "America/Lower_Princes", a.AmericaMaceio = "America/Maceio", a.AmericaManagua = "America/Managua", a.AmericaManaus = "America/Manaus", a.AmericaMarigot = "America/Marigot", a.AmericaMartinique = "America/Martinique", a.AmericaMatamoros = "America/Matamoros", a.AmericaMazatlan = "America/Mazatlan", a.AmericaMenominee = "America/Menominee", a.AmericaMerida = "America/Merida", a.AmericaMetlakatla = "America/Metlakatla", a.AmericaMexicoCity = "America/Mexico_City", a.AmericaMiquelon = "America/Miquelon", a.AmericaMoncton = "America/Moncton", a.AmericaMonterrey = "America/Monterrey", a.AmericaMontevideo = "America/Montevideo", a.AmericaMontserrat = "America/Montserrat", a.AmericaMontreal = "America/Montreal", a.AmericaNassau = "America/Nassau", a.AmericaNewYork = "America/New_York", a.AmericaNipigon = "America/Nipigon", a.AmericaNome = "America/Nome", a.AmericaNoronha = "America/Noronha", a.AmericaNorthDakotaBeulah = "America/North_Dakota/Beulah", a.AmericaNorthDakotaCenter = "America/North_Dakota/Center", a.AmericaNorthDakotaNewSalem = "America/North_Dakota/New_Salem", a.AmericaOjinaga = "America/Ojinaga", a.AmericaPanama = "America/Panama", a.AmericaPangnirtung = "America/Pangnirtung", a.AmericaParamaribo = "America/Paramaribo", a.AmericaPhoenix = "America/Phoenix", a.AmericaPortAuPrince = "America/Port-au-Prince", a.AmericaPortOfSpain = "America/Port_of_Spain", a.AmericaPortoVelho = "America/Porto_Velho", a.AmericaPuertoRico = "America/Puerto_Rico", a.AmericaRainyRiver = "America/Rainy_River", a.AmericaRankinInlet = "America/Rankin_Inlet", a.AmericaRecife = "America/Recife", a.AmericaRegina = "America/Regina", a.AmericaResolute = "America/Resolute", a.AmericaRioBranco = "America/Rio_Branco", a.AmericaSantaIsabel = "America/Santa_Isabel", a.AmericaSantarem = "America/Santarem", a.AmericaSantiago = "America/Santiago", a.AmericaSantoDomingo = "America/Santo_Domingo", a.AmericaSaoPaulo = "America/Sao_Paulo", a.AmericaScoresbysund = "America/Scoresbysund", a.AmericaShiprock = "America/Shiprock", a.AmericaSitka = "America/Sitka", a.AmericaStBarthelemy = "America/St_Barthelemy", a.AmericaStJohns = "America/St_Johns", a.AmericaStKitts = "America/St_Kitts", a.AmericaStLucia = "America/St_Lucia", a.AmericaStThomas = "America/St_Thomas", a.AmericaStVincent = "America/St_Vincent", a.AmericaSwiftCurrent = "America/Swift_Current", a.AmericaTegucigalpa = "America/Tegucigalpa", a.AmericaThule = "America/Thule", a.AmericaThunderBay = "America/Thunder_Bay", a.AmericaTijuana = "America/Tijuana", a.AmericaToronto = "America/Toronto", a.AmericaTortola = "America/Tortola", a.AmericaVancouver = "America/Vancouver", a.AmericaWhitehorse = "America/Whitehorse", a.AmericaWinnipeg = "America/Winnipeg", a.AmericaYakutat = "America/Yakutat", a.AmericaYellowknife = "America/Yellowknife", a.AntarcticaCasey = "Antarctica/Casey", a.AntarcticaDavis = "Antarctica/Davis", a.AntarcticaDumontDUrville = "Antarctica/DumontDUrville", a.AntarcticaMacquarie = "Antarctica/Macquarie", a.AntarcticaMawson = "Antarctica/Mawson", a.AntarcticaMcMurdo = "Antarctica/McMurdo", a.AntarcticaPalmer = "Antarctica/Palmer", a.AntarcticaRothera = "Antarctica/Rothera", a.AntarcticaSyowa = "Antarctica/Syowa", a.AntarcticaTroll = "Antarctica/Troll", a.AntarcticaVostok = "Antarctica/Vostok", a.ArcticLongyearbyen = "Arctic/Longyearbyen", a.AsiaAden = "Asia/Aden", a.AsiaAlmaty = "Asia/Almaty", a.AsiaAmman = "Asia/Amman", a.AsiaAnadyr = "Asia/Anadyr", a.AsiaAqtau = "Asia/Aqtau", a.AsiaAqtobe = "Asia/Aqtobe", a.AsiaAshgabat = "Asia/Ashgabat", a.AsiaBaghdad = "Asia/Baghdad", a.AsiaBahrain = "Asia/Bahrain", a.AsiaBaku = "Asia/Baku", a.AsiaBangkok = "Asia/Bangkok", a.AsiaBarnaul = "Asia/Barnaul", a.AsiaBeirut = "Asia/Beirut", a.AsiaBishkek = "Asia/Bishkek", a.AsiaBrunei = "Asia/Brunei", a.AsiaChita = "Asia/Chita", a.AsiaChoibalsan = "Asia/Choibalsan", a.AsiaColombo = "Asia/Colombo", a.AsiaDamascus = "Asia/Damascus", a.AsiaDhaka = "Asia/Dhaka", a.AsiaDili = "Asia/Dili", a.AsiaDubai = "Asia/Dubai", a.AsiaDushanbe = "Asia/Dushanbe", a.AsiaFamagusta = "Asia/Famagusta", a.AsiaGaza = "Asia/Gaza", a.AsiaHebron = "Asia/Hebron", a.AsiaHoChiMinh = "Asia/Ho_Chi_Minh", a.AsiaHongKong = "Asia/Hong_Kong", a.AsiaHovd = "Asia/Hovd", a.AsiaIrkutsk = "Asia/Irkutsk", a.AsiaJakarta = "Asia/Jakarta", a.AsiaJayapura = "Asia/Jayapura", a.AsiaJerusalem = "Asia/Jerusalem", a.AsiaKabul = "Asia/Kabul", a.AsiaKamchatka = "Asia/Kamchatka", a.AsiaKarachi = "Asia/Karachi", a.AsiaKathmandu = "Asia/Kathmandu", a.AsiaKhandyga = "Asia/Khandyga", a.AsiaKolkata = "Asia/Kolkata", a.AsiaKrasnoyarsk = "Asia/Krasnoyarsk", a.AsiaKualaLumpur = "Asia/Kuala_Lumpur", a.AsiaKuching = "Asia/Kuching", a.AsiaKuwait = "Asia/Kuwait", a.AsiaMacau = "Asia/Macau", a.AsiaMagadan = "Asia/Magadan", a.AsiaMakassar = "Asia/Makassar", a.AsiaManila = "Asia/Manila", a.AsiaMuscat = "Asia/Muscat", a.AsiaNicosia = "Asia/Nicosia", a.AsiaNovokuznetsk = "Asia/Novokuznetsk", a.AsiaNovosibirsk = "Asia/Novosibirsk", a.AsiaOmsk = "Asia/Omsk", a.AsiaOral = "Asia/Oral", a.AsiaPhnomPenh = "Asia/Phnom_Penh", a.AsiaPontianak = "Asia/Pontianak", a.AsiaPyongyang = "Asia/Pyongyang", a.AsiaQatar = "Asia/Qatar", a.AsiaQyzylorda = "Asia/Qyzylorda", a.AsiaRangoon = "Asia/Rangoon", a.AsiaRiyadh = "Asia/Riyadh", a.AsiaSakhalin = "Asia/Sakhalin", a.AsiaSamarkand = "Asia/Samarkand", a.AsiaSeoul = "Asia/Seoul", a.AsiaShanghai = "Asia/Shanghai", a.AsiaSingapore = "Asia/Singapore", a.AsiaSrednekolymsk = "Asia/Srednekolymsk", a.AsiaTaipei = "Asia/Taipei", a.AsiaTashkent = "Asia/Tashkent", a.AsiaTbilisi = "Asia/Tbilisi", a.AsiaTehran = "Asia/Tehran", a.AsiaThimphu = "Asia/Thimphu", a.AsiaTokyo = "Asia/Tokyo", a.AsiaTomsk = "Asia/Tomsk", a.AsiaUlaanbaatar = "Asia/Ulaanbaatar", a.AsiaUrumqi = "Asia/Urumqi", a.AsiaUstNera = "Asia/Ust-Nera", a.AsiaVientiane = "Asia/Vientiane", a.AsiaVladivostok = "Asia/Vladivostok", a.AsiaYakutsk = "Asia/Yakutsk", a.AsiaYekaterinburg = "Asia/Yekaterinburg", a.AsiaYerevan = "Asia/Yerevan", a.AtlanticAzores = "Atlantic/Azores", a.AtlanticBermuda = "Atlantic/Bermuda", a.AtlanticCanary = "Atlantic/Canary", a.AtlanticCapeVerde = "Atlantic/Cape_Verde", a.AtlanticFaroe = "Atlantic/Faroe", a.AtlanticMadeira = "Atlantic/Madeira", a.AtlanticReykjavik = "Atlantic/Reykjavik", a.AtlanticSouthGeorgia = "Atlantic/South_Georgia", a.AtlanticStHelena = "Atlantic/St_Helena", a.AtlanticStanley = "Atlantic/Stanley", a.AustraliaAdelaide = "Australia/Adelaide", a.AustraliaBrisbane = "Australia/Brisbane", a.AustraliaBrokenHill = "Australia/Broken_Hill", a.AustraliaCanberra = "Australia/Canberra", a.AustraliaCurrie = "Australia/Currie", a.AustraliaDarwin = "Australia/Darwin", a.AustraliaEucla = "Australia/Eucla", a.AustraliaHobart = "Australia/Hobart", a.AustraliaLindeman = "Australia/Lindeman", a.AustraliaLordHowe = "Australia/Lord_Howe", a.AustraliaMelbourne = "Australia/Melbourne", a.AustraliaPerth = "Australia/Perth", a.AustraliaSydney = "Australia/Sydney", a.EuropeAmsterdam = "Europe/Amsterdam", a.EuropeAndorra = "Europe/Andorra", a.EuropeAthens = "Europe/Athens", a.EuropeBelgrade = "Europe/Belgrade", a.EuropeBerlin = "Europe/Berlin", a.EuropeBratislava = "Europe/Bratislava", a.EuropeBrussels = "Europe/Brussels", a.EuropeBucharest = "Europe/Bucharest", a.EuropeBudapest = "Europe/Budapest", a.EuropeBusingen = "Europe/Busingen", a.EuropeChisinau = "Europe/Chisinau", a.EuropeCopenhagen = "Europe/Copenhagen", a.EuropeDublin = "Europe/Dublin", a.EuropeGibraltar = "Europe/Gibraltar", a.EuropeGuernsey = "Europe/Guernsey", a.EuropeHelsinki = "Europe/Helsinki", a.EuropeIsleOfMan = "Europe/Isle_of_Man", a.EuropeIstanbul = "Europe/Istanbul", a.EuropeJersey = "Europe/Jersey", a.EuropeKaliningrad = "Europe/Kaliningrad", a.EuropeKiev = "Europe/Kiev", a.EuropeKirov = "Europe/Kirov", a.EuropeLisbon = "Europe/Lisbon", a.EuropeLjubljana = "Europe/Ljubljana", a.EuropeLondon = "Europe/London", a.EuropeLuxembourg = "Europe/Luxembourg", a.EuropeMadrid = "Europe/Madrid", a.EuropeMalta = "Europe/Malta", a.EuropeMariehamn = "Europe/Mariehamn", a.EuropeMinsk = "Europe/Minsk", a.EuropeMonaco = "Europe/Monaco", a.EuropeMoscow = "Europe/Moscow", a.EuropeOslo = "Europe/Oslo", a.EuropeParis = "Europe/Paris", a.EuropePodgorica = "Europe/Podgorica", a.EuropePrague = "Europe/Prague", a.EuropeRiga = "Europe/Riga", a.EuropeRome = "Europe/Rome", a.EuropeSamara = "Europe/Samara", a.EuropeSanMarino = "Europe/San_Marino", a.EuropeSarajevo = "Europe/Sarajevo", a.EuropeSimferopol = "Europe/Simferopol", a.EuropeSkopje = "Europe/Skopje", a.EuropeSofia = "Europe/Sofia", a.EuropeStockholm = "Europe/Stockholm", a.EuropeTallinn = "Europe/Tallinn", a.EuropeTirane = "Europe/Tirane", a.EuropeUzhgorod = "Europe/Uzhgorod", a.EuropeVaduz = "Europe/Vaduz", a.EuropeVatican = "Europe/Vatican", a.EuropeVienna = "Europe/Vienna", a.EuropeVilnius = "Europe/Vilnius", a.EuropeVolgograd = "Europe/Volgograd", a.EuropeWarsaw = "Europe/Warsaw", a.EuropeZagreb = "Europe/Zagreb", a.EuropeZaporozhye = "Europe/Zaporozhye", a.EuropeZurich = "Europe/Zurich", a.GMT = "GMT", a.IndianAntananarivo = "Indian/Antananarivo", a.IndianChagos = "Indian/Chagos", a.IndianChristmas = "Indian/Christmas", a.IndianCocos = "Indian/Cocos", a.IndianComoro = "Indian/Comoro", a.IndianKerguelen = "Indian/Kerguelen", a.IndianMahe = "Indian/Mahe", a.IndianMaldives = "Indian/Maldives", a.IndianMauritius = "Indian/Mauritius", a.IndianMayotte = "Indian/Mayotte", a.IndianReunion = "Indian/Reunion", a.PacificApia = "Pacific/Apia", a.PacificAuckland = "Pacific/Auckland", a.PacificBougainville = "Pacific/Bougainville", a.PacificChatham = "Pacific/Chatham", a.PacificChuuk = "Pacific/Chuuk", a.PacificEaster = "Pacific/Easter", a.PacificEfate = "Pacific/Efate", a.PacificEnderbury = "Pacific/Enderbury", a.PacificFakaofo = "Pacific/Fakaofo", a.PacificFiji = "Pacific/Fiji", a.PacificFunafuti = "Pacific/Funafuti", a.PacificGalapagos = "Pacific/Galapagos", a.PacificGambier = "Pacific/Gambier", a.PacificGuadalcanal = "Pacific/Guadalcanal", a.PacificGuam = "Pacific/Guam", a.PacificHonolulu = "Pacific/Honolulu", a.PacificJohnston = "Pacific/Johnston", a.PacificKiritimati = "Pacific/Kiritimati", a.PacificKosrae = "Pacific/Kosrae", a.PacificKwajalein = "Pacific/Kwajalein", a.PacificMajuro = "Pacific/Majuro", a.PacificMarquesas = "Pacific/Marquesas", a.PacificMidway = "Pacific/Midway", a.PacificNauru = "Pacific/Nauru", a.PacificNiue = "Pacific/Niue", a.PacificNorfolk = "Pacific/Norfolk", a.PacificNoumea = "Pacific/Noumea", a.PacificPagoPago = "Pacific/Pago_Pago", a.PacificPalau = "Pacific/Palau", a.PacificPitcairn = "Pacific/Pitcairn", a.PacificPohnpei = "Pacific/Pohnpei", a.PacificPonape = "Pacific/Ponape", a.PacificPortMoresby = "Pacific/Port_Moresby", a.PacificRarotonga = "Pacific/Rarotonga", a.PacificSaipan = "Pacific/Saipan", a.PacificSamoa = "Pacific/Samoa", a.PacificTahiti = "Pacific/Tahiti", a.PacificTarawa = "Pacific/Tarawa", a.PacificTongatapu = "Pacific/Tongatapu", a.PacificTruk = "Pacific/Truk", a.PacificWake = "Pacific/Wake", a.PacificWallis = "Pacific/Wallis", a.PacificYap = "Pacific/Yap", a))(L$2 || {});
var M = ((S) => (S.UTC_MINUS_12 = "UTC-12", S.UTC_MINUS_11_30 = "UTC-11:30", S.UTC_MINUS_11 = "UTC-11", S.UTC_MINUS_10_30 = "UTC-10:30", S.UTC_MINUS_10 = "UTC-10", S.UTC_MINUS_9_30 = "UTC-9:30", S.UTC_MINUS_9 = "UTC-09", S.UTC_MINUS_8_45 = "UTC-8:45", S.UTC_MINUS_8 = "UTC-08", S.UTC_MINUS_7 = "UTC-07", S.UTC_MINUS_6_30 = "UTC-6:30", S.UTC_MINUS_6 = "UTC-06", S.UTC_MINUS_5_45 = "UTC-5:45", S.UTC_MINUS_5_30 = "UTC-5:30", S.UTC_MINUS_5 = "UTC-05", S.UTC_MINUS_4_30 = "UTC-4:30", S.UTC_MINUS_4 = "UTC-04", S.UTC_MINUS_3_30 = "UTC-3:30", S.UTC_MINUS_3 = "UTC-03", S.UTC_MINUS_2_30 = "UTC-2:30", S.UTC_MINUS_2 = "UTC-02", S.UTC_MINUS_1 = "UTC-01", S.UTC_0 = "UTC+00", S.UTC_PLUS_1 = "UTC+01", S.UTC_PLUS_2 = "UTC+02", S.UTC_PLUS_3 = "UTC+03", S.UTC_PLUS_3_30 = "UTC+3:30", S.UTC_PLUS_4 = "UTC+04", S.UTC_PLUS_4_30 = "UTC+4:30", S.UTC_PLUS_5 = "UTC+05", S.UTC_PLUS_5_30 = "UTC+5:30", S.UTC_PLUS_5_45 = "UTC+5:45", S.UTC_PLUS_6 = "UTC+06", S.UTC_PLUS_6_30 = "UTC+6:30", S.UTC_PLUS_7 = "UTC+07", S.UTC_PLUS_8 = "UTC+08", S.UTC_PLUS_8_45 = "UTC+8:45", S.UTC_PLUS_9 = "UTC+09", S.UTC_PLUS_9_30 = "UTC+9:30", S.UTC_PLUS_10 = "UTC+10", S.UTC_PLUS_10_30 = "UTC+10:30", S.UTC_PLUS_11 = "UTC+11", S.UTC_PLUS_11_30 = "UTC+11:30", S.UTC_PLUS_12 = "UTC+12", S.UTC_PLUS_12_45 = "UTC+12:45", S.UTC_PLUS_13 = "UTC+13", S.UTC_PLUS_13_45 = "UTC+13:45", S.UTC_PLUS_14 = "UTC+14", S))(M || {});
var B$2 = ((r2) => (r2.AcreTime = "ACT", r2.AfghanistanTime = "AFT", r2.AIXCentralEuropeanTime = "DFT", r2.AlaskaDaylightTime = "AKDT", r2.AlaskaStandardTime = "AKST", r2.AlmaAtaTime = "ALMT", r2.AmazonSummerTime = "AMST", r2.AmazonTime = "AMT", r2.AnadyrTime = "ANAT", r2.AqtobeTime = "AQTT", r2.ArabiaStandardTime = "AST", r2.ArgentinaTime = "ART", r2.ArmeniaTime = "AMT", r2.ASEANCommonTime = "ASEAN", r2.AtlanticDaylightTime = "ADT", r2.AtlanticStandardTime = "AST", r2.AustralianCentralDaylightSavingTime = "ACDT", r2.AustralianCentralStandardTime = "ACST", r2.AustralianCentralWesternStandardTime = "ACWST", r2.AustralianEasternDaylightSavingTime = "AEDT", r2.AustralianEasternStandardTime = "AEST", r2.AustralianEasternTime = "AET", r2.AustralianWesternStandardTime = "AWST", r2.AzerbaijanTime = "AZT", r2.AzoresStandardTime = "AZOT", r2.AzoresSummerTime = "AZOST", r2.BakerIslandTime = "BIT", r2.BangladeshStandardTime = "BST", r2.BhutanTime = "BTT", r2.BoliviaTime = "BOT", r2.BougainvilleStandardTime = "BST", r2.BrasiliaSummerTime = "BRST", r2.BrasiliaTime = "BRT", r2.BritishIndianOceanTime = "BIOT", r2.BritishSummerTime = "BST", r2.BruneiTime = "BNT", r2.CapeVerdeTime = "CVT", r2.CentralAfricaTime = "CAT", r2.CentralDaylightTime = "CDT", r2.CentralEuropeanSummerTime = "CEST", r2.CentralEuropeanTime = "CET", r2.CentralIndonesiaTime = "WITA", r2.CentralStandardTime = "CST", r2.CentralTime = "CT", r2.CentralWesternStandardTime = "CWST", r2.ChamorroStandardTime = "CHST", r2.ChathamDaylightTime = "CHADT", r2.ChathamStandardTime = "CHAST", r2.ChileStandardTime = "CLT", r2.ChileSummerTime = "CLST", r2.ChinaStandardTime = "CST", r2.ChoibalsanStandardTime = "CHOT", r2.ChoibalsanSummerTime = "CHOST", r2.ChristmasIslandTime = "CXT", r2.ChuukTime = "CHUT", r2.ClipptertonIslandStandardTime = "CIST", r2.CocosIslandsTime = "CCT", r2.ColombiaSummerTime = "COST", r2.ColombiaTime = "COT", r2.CookIslandTime = "CKT", r2.CoordinatedUniversalTime = "UTC", r2.CubaDaylightTime = "CDT", r2.CubaStandardTime = "CST", r2.DavisTime = "DAVT", r2.DumontDUrvilleTime = "DDUT", r2.EastAfricaTime = "EAT", r2.EasterIslandStandardTime = "EAST", r2.EasterIslandSummerTime = "EASST", r2.EasternCaribbeanTime = "ECT", r2.EasternDaylightTime = "EDT", r2.EasternEuropeanSummerTime = "EEST", r2.EasternEuropeanTime = "EET", r2.EasternGreenlandSummerTime = "EGST", r2.EasternGreenlandTime = "EGT", r2.EasternIndonesianTime = "WIT", r2.EasternStandardTime = "EST", r2.EasternTime = "ET", r2.EcuadorTime = "ECT", r2.FalklandIslandsSummerTime = "FKST", r2.FalklandIslandsTime = "FKT", r2.FernandoDeNoronhaTime = "FNT", r2.FijiTime = "FJT", r2.FrenchGuianaTime = "GFT", r2.FrenchSouthernAndAntarcticTime = "TFT", r2.FurtherEasternEuropeanTime = "FET", r2.GalapagosTime = "GALT", r2.GambierIslandTime = "GIT", r2.GambierIslandsTime = "GAMT", r2.GeorgiaStandardTime = "GET", r2.GilbertIslandTime = "GILT", r2.GreenwichMeanTime = "GMT", r2.GulfStandardTime = "GST", r2.GuyanaTime = "GYT", r2.HawaiiAleutianDaylightTime = "HDT", r2.HawaiiAleutianStandardTime = "HST", r2.HeardAndMcDonaldIslandsTime = "HMT", r2.HeureAvanceeDEuropeCentraleTime = "HAEC", r2.HongKongTime = "HKT", r2.HovdSummerTime = "HOVST", r2.HovdTime = "HOVT", r2.IndianOceanTime = "IOT", r2.IndianStandardTime = "IST", r2.IndochinaTime = "ICT", r2.InternationalDayLineWestTime = "IDLW", r2.IranDaylightTime = "IRDT", r2.IranStandardTime = "IRST", r2.IrishStandardTime = "IST", r2.IrkutskSummerTime = "IRKST", r2.IrkutskTime = "IRKT", r2.IsraelDaylightTime = "IDT", r2.IsraelStandardTime = "IST", r2.JapanStandardTime = "JST", r2.KaliningradTime = "KALT", r2.KamchatkaTime = "KAMT", r2.KoreaStandardTime = "KST", r2.KosraeTime = "KOST", r2.KrasnoyarskSummerTime = "KRAST", r2.KrasnoyarskTime = "KRAT", r2.KyrgyzstanTime = "KGT", r2.LineIslandsTime = "LINT", r2.KazakhstanStandardTime = "KAST", r2.LordHoweStandardTime = "LHST", r2.LordHoweSummerTime = "LHST", r2.MacquarieIslandStationTime = "MIST", r2.MagadanTime = "MAGT", r2.MalaysiaStandardTime = "MST", r2.MalaysiaTime = "MYT", r2.MaldivesTime = "MVT", r2.MarquesasIslandsTime = "MART", r2.MarshallIslandsTime = "MHT", r2.MauritiusTime = "MUT", r2.MawsonStationTime = "MAWT", r2.MiddleEuropeanSummerTime = "MEDT", r2.MiddleEuropeanTime = "MET", r2.MoscowTime = "MSK", r2.MountainDaylightTime = "MDT", r2.MountainStandardTime = "MST", r2.MyanmarStandardTime = "MMT", r2.NepalTime = "NCT", r2.NauruTime = "NRT", r2.NewCaledoniaTime = "NCT", r2.NewZealandDaylightTime = "NZDT", r2.NewZealandStandardTime = "NZST", r2.NewfoundlandDaylightTime = "NDT", r2.NewfoundlandStandardTime = "NST", r2.NewfoundlandTime = "NT", r2.NiueTime = "NUT", r2.NorfolkIslandTime = "NFT", r2.NovosibirskTime = "NOVT", r2.OmskTime = "OMST", r2.OralTime = "ORAT", r2.PacificDaylightTime = "PDT", r2.PacificStandardTime = "PST", r2.PakistanStandardTime = "PKT", r2.PalauTime = "PWT", r2.PapuaNewGuineaTime = "PGT", r2.ParaguaySummerTime = "PYST", r2.ParaguayTime = "PYT", r2.PeruTime = "PET", r2.PhilippineStandardTime = "PHST", r2.PhilippineTime = "PHT", r2.PhoenixIslandTime = "PHOT", r2.PitcairnTime = "PST", r2.PohnpeiStandardTime = "PONT", r2.ReunionTime = "RET", r2.RotheraResearchStationTime = "ROTT", r2.SaintPierreAndMiquelonDaylightTime = "PMDT", r2.SaintPierreAndMiquelonStandardTime = "PMST", r2.SakhalinIslandTime = "SAKT", r2.SamaraTime = "SAMT", r2.SamoaDaylightTime = "SDT", r2.SamoaStandardTime = "SST", r2.SeychellesTime = "SCT", r2.ShowaStationTime = "SYOT", r2.SingaporeStandardTime = "SST", r2.SingaporeTime = "SGT", r2.SolomonIslandsTime = "SBT", r2.SouthAfricanStandardTime = "SAST", r2.SouthGeorgiaAndTheSouthSandwichIslandsTime = "GST", r2.SrednekolymskTime = "SRET", r2.SriLankaStandardTime = "SLST", r2.SurinameTime = "SRT", r2.TahitiTime = "TAHT", r2.TajikistanTime = "TJT", r2.ThailandStandardTime = "THA", r2.TimorLesteTime = "TLT", r2.TokelauTime = "TKT", r2.TongaTime = "TOT", r2.TurkeyTime = "TRT", r2.TurkmenistanTime = "TMT", r2.TuvaluTime = "TVT", r2.UlaanbaatarStandardTime = "ULAT", r2.UlaanbaatarSummerTime = "ULAST", r2.UruguayStandardTime = "UYT", r2.UruguaySummerTime = "UYST", r2.UzbekistanTime = "UZT", r2.VanuatuTime = "VUT", r2.VenezuelaStandardTime = "VET", r2.VladivostokTime = "VLAT", r2.VolgogradTime = "VOLT", r2.VostokStationTime = "VOST", r2.WakeIslandTime = "WAKT", r2.WestAfricaSummerTime = "WAST", r2.WestAfricaTime = "WAT", r2.WestGreenlandSummerTime = "WGST", r2.WestGreenlandTime = "WGT", r2.WestKazakhstanTime = "WKT", r2.WesternEuropeanSummerTime = "WEDT", r2.WesternEuropeanTime = "WET", r2.WesternIndonesianTime = "WIT", r2.WesternStandardTime = "WST", r2.YakutskTime = "YAKT", r2.YekaterinburgTime = "YEKT", r2))(B$2 || {});
var K$2 = ((_) => (_.Africa = "Africa", _.Americas = "Americas", _.Asia = "Asia", _.Europe = "Europe", _.Oceania = "Oceania", _.Polar = "Polar", _))(K$2 || {}), w$3 = ((c2) => (c2.CentralAmerica = "Central America", c2.EasternAsia = "Eastern Asia", c2.EasternEurope = "Eastern Europe", c2.EasternAfrica = "Eastern Africa", c2.MiddleAfrica = "Middle Africa", c2.MiddleEast = "Middle East", c2.NorthernAfrica = "Northern Africa", c2.NorthernAmerica = "Northern America", c2.NorthernEurope = "Northern Europe", c2.Polynesia = "Polynesia", c2.SouthAmerica = "South America", c2.SouthernAfrica = "Southern Africa", c2.SouthernAsia = "Southern Asia", c2.SouthernEurope = "Southern Europe", c2.WesternAfrica = "Western Africa", c2.WesternAsia = "Western Asia", c2.WesternEurope = "Western Europe", c2.WesternAustralia = "Western Australia", c2))(w$3 || {});
var AlignHorizontal = /* @__PURE__ */ ((AlignHorizontal2) => {
  AlignHorizontal2["Baseline"] = "baseline";
  AlignHorizontal2["Center"] = "center";
  AlignHorizontal2["Default"] = "default";
  AlignHorizontal2["Left"] = "start";
  AlignHorizontal2["Right"] = "end";
  AlignHorizontal2["SpaceAround"] = "space-around";
  AlignHorizontal2["SpaceBetween"] = "space-between";
  AlignHorizontal2["SpaceEvenly"] = "space-evenly";
  AlignHorizontal2["Stretch"] = "stretch";
  return AlignHorizontal2;
})(AlignHorizontal || {});
var AlignVertical = /* @__PURE__ */ ((AlignVertical2) => {
  AlignVertical2["Baseline"] = "baseline";
  AlignVertical2["Bottom"] = "end";
  AlignVertical2["Center"] = "center";
  AlignVertical2["Default"] = "default";
  AlignVertical2["SpaceAround"] = "space-around";
  AlignVertical2["SpaceBetween"] = "space-between";
  AlignVertical2["SpaceEvenly"] = "space-evenly";
  AlignVertical2["Stretch"] = "stretch";
  AlignVertical2["Top"] = "start";
  return AlignVertical2;
})(AlignVertical || {});
var Orientation = /* @__PURE__ */ ((Orientation2) => {
  Orientation2["Horizontal"] = "horizontal";
  Orientation2["Vertical"] = "vertical";
  return Orientation2;
})(Orientation || {});
var Overflow = /* @__PURE__ */ ((Overflow2) => {
  Overflow2["ClipVertical"] = "clip-vertical";
  Overflow2["ClipHorizontal"] = "clip-horizontal";
  Overflow2["ClipBoth"] = "clip-both";
  Overflow2["Hidden"] = "hidden";
  Overflow2["ScrollVertical"] = "scroll-vertical";
  Overflow2["ScrollHorizontal"] = "scroll-horizontal";
  Overflow2["ScrollBoth"] = "scroll-both";
  Overflow2["Visible"] = "visible";
  return Overflow2;
})(Overflow || {});
var Animations = /* @__PURE__ */ ((Animations2) => {
  Animations2["FadeIn"] = "fade-in";
  Animations2["FadeOut"] = "fade-out";
  Animations2["SlideDown"] = "slide-down";
  Animations2["SlideLeft"] = "slide-left";
  Animations2["SlideRight"] = "slide-right";
  Animations2["SlideUp"] = "slide-up";
  Animations2["Scale"] = "scale";
  Animations2["Skew"] = "skew";
  Animations2["Rotate"] = "rotate";
  Animations2["Opacity"] = "opacity";
  Animations2["None"] = "none";
  return Animations2;
})(Animations || {});
var Colors = /* @__PURE__ */ ((Colors2) => {
  Colors2["Black"] = "var(--color-black-rgb)";
  Colors2["Default"] = "var(--color-default-rgb)";
  Colors2["Error"] = "var(--color-error-rgb)";
  Colors2["Info"] = "var(--color-info-rgb)";
  Colors2["Inherit"] = "inherit";
  Colors2["Primary"] = "var(--color-primary-rgb)";
  Colors2["Secondary"] = "var(--color-secondary-rgb)";
  Colors2["Success"] = "var(--color-success-rgb)";
  Colors2["Transparent"] = "transparent";
  Colors2["Warning"] = "var(--color-warning-rgb)";
  Colors2["White"] = "var(--color-white-rgb)";
  return Colors2;
})(Colors || {});
var ContrastColors = /* @__PURE__ */ ((ContrastColors2) => {
  ContrastColors2["Black"] = "var(--color-black-contrast-rgb)";
  ContrastColors2["Default"] = "var(--color-default-contrast-rgb)";
  ContrastColors2["Error"] = "var(--color-error-contrast-rgb)";
  ContrastColors2["Info"] = "var(--color-info-contrast-rgb)";
  ContrastColors2["Primary"] = "var(--color-primary-contrast-rgb)";
  ContrastColors2["Secondary"] = "var(--color-secondary-contrast-rgb)";
  ContrastColors2["Success"] = "var(--color-success-contrast-rgb)";
  ContrastColors2["Warning"] = "var(--color-warning-contrast-rgb)";
  ContrastColors2["White"] = "var(--color-white-contrast-rgb)";
  return ContrastColors2;
})(ContrastColors || {});
var BackgroundColorShade = /* @__PURE__ */ ((BackgroundColorShade2) => {
  BackgroundColorShade2["Lightest"] = "var(--bg-color-lightest-rgb)";
  BackgroundColorShade2["Lighter"] = "var(--bg-color-lighter-rgb)";
  BackgroundColorShade2["Light"] = "var(--bg-color-light-rgb)";
  BackgroundColorShade2["Default"] = "var(--bg-color-default-rgb)";
  BackgroundColorShade2["Dark"] = "var(--bg-color-dark-rgb)";
  BackgroundColorShade2["Darker"] = "var(--bg-color-darker-rgb)";
  BackgroundColorShade2["Darkest"] = "var(--bg-color-darkest-rgb)";
  BackgroundColorShade2["Transparent"] = "transparent";
  return BackgroundColorShade2;
})(BackgroundColorShade || {});
var BackgroundColors = ((BackgroundColors2) => {
  BackgroundColors2["Card"] = "var(--bg-color-card-rgb)";
  BackgroundColors2["CloseButton"] = "var(--bg-color-close-button-rgb)";
  BackgroundColors2["DataGrid"] = "var(--bg-color-data-grid-rgb)";
  BackgroundColors2["DataGridHeader"] = "var(--bg-color-data-grid-header-rgb)";
  BackgroundColors2["DataGridColumnHeaders"] = "var(--bg-color-data-grid-column-headers-rgb)";
  BackgroundColors2["DataGridCell"] = "var(--bg-color-data-grid-cell-rgb)";
  BackgroundColors2["DataGridRow"] = "var(--bg-color-data-grid-row-rgb)";
  BackgroundColors2["DropdownMenu"] = "var(--bg-color-dropdown-menu-rgb)";
  BackgroundColors2["InputControl"] = "var(--bg-color-input-control-rgb)";
  BackgroundColors2["Button"] = "var(--bg-color-button-rgb)";
  BackgroundColors2["MenuButton"] = "var(--bg-color-menu-button-rgb)";
  BackgroundColors2["MenuItem"] = "var(--bg-color-menu-item-rgb)";
  BackgroundColors2["MoreMenu"] = "var(--bg-color-more-menu-rgb)";
  BackgroundColors2["NavigationBar"] = "var(--bg-color-navigation-bar-rgb)";
  BackgroundColors2["NavigationMenu"] = "var(--bg-color-navigation-menu-rgb)";
  BackgroundColors2["Page"] = "var(--bg-color-page-rgb)";
  BackgroundColors2["SlidePanel"] = "var(--bg-color-slide-panel-rgb)";
  BackgroundColors2["Workspace"] = "var(--bg-color-workspace-rgb)";
  BackgroundColors2["Lightest"] = "var(--bg-color-lightest-rgb)";
  BackgroundColors2["Lighter"] = "var(--bg-color-lighter-rgb)";
  BackgroundColors2["Light"] = "var(--bg-color-light-rgb)";
  BackgroundColors2["Default"] = "var(--bg-color-default-rgb)";
  BackgroundColors2["Dark"] = "var(--bg-color-dark-rgb)";
  BackgroundColors2["Darker"] = "var(--bg-color-darker-rgb)";
  BackgroundColors2["Darkest"] = "var(--bg-color-darkest-rgb)";
  BackgroundColors2[BackgroundColors2["Black"] = Colors.Black] = "Black";
  BackgroundColors2[BackgroundColors2["BlackContrast"] = ContrastColors.Black] = "BlackContrast";
  BackgroundColors2[BackgroundColors2["Error"] = Colors.Error] = "Error";
  BackgroundColors2[BackgroundColors2["ErrorContrast"] = ContrastColors.Error] = "ErrorContrast";
  BackgroundColors2[BackgroundColors2["Info"] = Colors.Info] = "Info";
  BackgroundColors2[BackgroundColors2["InfoContrast"] = ContrastColors.Info] = "InfoContrast";
  BackgroundColors2[BackgroundColors2["Primary"] = Colors.Primary] = "Primary";
  BackgroundColors2[BackgroundColors2["PrimaryContrast"] = ContrastColors.Primary] = "PrimaryContrast";
  BackgroundColors2[BackgroundColors2["Secondary"] = Colors.Secondary] = "Secondary";
  BackgroundColors2[BackgroundColors2["SecondaryContrast"] = ContrastColors.Secondary] = "SecondaryContrast";
  BackgroundColors2[BackgroundColors2["Success"] = Colors.Success] = "Success";
  BackgroundColors2[BackgroundColors2["SuccessContrast"] = ContrastColors.Success] = "SuccessContrast";
  BackgroundColors2[BackgroundColors2["Transparent"] = Colors.Transparent] = "Transparent";
  BackgroundColors2[BackgroundColors2["Warning"] = Colors.Warning] = "Warning";
  BackgroundColors2[BackgroundColors2["WarningContrast"] = ContrastColors.Warning] = "WarningContrast";
  BackgroundColors2[BackgroundColors2["White"] = Colors.White] = "White";
  BackgroundColors2[BackgroundColors2["WhiteContrast"] = ContrastColors.White] = "WhiteContrast";
  return BackgroundColors2;
})(BackgroundColors || {});
var BackgroundSize = /* @__PURE__ */ ((BackgroundSize2) => {
  BackgroundSize2["Auto"] = "auto";
  BackgroundSize2["Cover"] = "cover";
  BackgroundSize2["Contain"] = "contain";
  BackgroundSize2["Fill"] = "fill";
  BackgroundSize2["FillHorizontal"] = "fill-horizontal";
  BackgroundSize2["FillVertical"] = "fill-vertical";
  return BackgroundSize2;
})(BackgroundSize || {});
var BorderColorShade = /* @__PURE__ */ ((BorderColorShade2) => {
  BorderColorShade2["Lightest"] = "var(--border-color-lightest-rgb)";
  BorderColorShade2["Lighter"] = "var(--border-color-lighter-rgb)";
  BorderColorShade2["Light"] = "var(--border-color-light-rgb)";
  BorderColorShade2["Default"] = "var(--border-color-default-rgb)";
  BorderColorShade2["Dark"] = "var(--border-color-dark-rgb)";
  BorderColorShade2["Darker"] = "var(--border-color-darker-rgb)";
  BorderColorShade2["Darkest"] = "var(--border-color-darkest-rgb)";
  return BorderColorShade2;
})(BorderColorShade || {});
var BorderColors = ((BorderColors2) => {
  BorderColors2["InputControl"] = "var(--border-color-input-control-rgb)";
  BorderColors2["Lightest"] = "var(--border-color-lightest-rgb)";
  BorderColors2["Lighter"] = "var(--border-color-lighter-rgb)";
  BorderColors2["Light"] = "var(--border-color-light-rgb)";
  BorderColors2["Default"] = "var(--border-color-default-rgb)";
  BorderColors2["Dark"] = "var(--border-color-dark-rgb)";
  BorderColors2["Darker"] = "var(--border-color-darker-rgb)";
  BorderColors2["Darkest"] = "var(--border-color-darkest-rgb)";
  BorderColors2[BorderColors2["Black"] = Colors.Black] = "Black";
  BorderColors2[BorderColors2["BlackContrast"] = ContrastColors.Black] = "BlackContrast";
  BorderColors2[BorderColors2["Error"] = Colors.Error] = "Error";
  BorderColors2[BorderColors2["ErrorContrast"] = ContrastColors.Error] = "ErrorContrast";
  BorderColors2[BorderColors2["Info"] = Colors.Info] = "Info";
  BorderColors2[BorderColors2["InfoContrast"] = ContrastColors.Info] = "InfoContrast";
  BorderColors2[BorderColors2["Primary"] = Colors.Primary] = "Primary";
  BorderColors2[BorderColors2["PrimaryContrast"] = ContrastColors.Primary] = "PrimaryContrast";
  BorderColors2[BorderColors2["Secondary"] = Colors.Primary] = "Secondary";
  BorderColors2[BorderColors2["SecondaryContrast"] = ContrastColors.Secondary] = "SecondaryContrast";
  BorderColors2[BorderColors2["Success"] = Colors.Success] = "Success";
  BorderColors2[BorderColors2["SuccessContrast"] = ContrastColors.Success] = "SuccessContrast";
  BorderColors2[BorderColors2["Transparent"] = Colors.Transparent] = "Transparent";
  BorderColors2[BorderColors2["Warning"] = Colors.Warning] = "Warning";
  BorderColors2[BorderColors2["WarningContrast"] = ContrastColors.Warning] = "WarningContrast";
  BorderColors2[BorderColors2["White"] = Colors.White] = "White";
  BorderColors2[BorderColors2["WhiteContrast"] = ContrastColors.White] = "WhiteContrast";
  return BorderColors2;
})(BorderColors || {});
var BorderStyle = /* @__PURE__ */ ((BorderStyle2) => {
  BorderStyle2["Dashed"] = "dashed";
  BorderStyle2["Dotted"] = "dotted";
  BorderStyle2["Double"] = "double";
  BorderStyle2["Groove"] = "groove";
  BorderStyle2["Inset"] = "inset";
  BorderStyle2["None"] = "none";
  BorderStyle2["Outset"] = "outset";
  BorderStyle2["Ridge"] = "ridge";
  BorderStyle2["Solid"] = "solid";
  BorderStyle2["Wavy"] = "wavy";
  return BorderStyle2;
})(BorderStyle || {});
var Cursor = /* @__PURE__ */ ((Cursor2) => {
  Cursor2["Auto"] = "auto";
  Cursor2["Crosshair"] = "crosshair";
  Cursor2["Default"] = "default";
  Cursor2["Help"] = "help";
  Cursor2["Move"] = "move";
  Cursor2["NotAllowed"] = "not-allowed";
  Cursor2["Pointer"] = "pointer";
  Cursor2["Resize"] = "resize";
  Cursor2["ResizeTopLeft"] = "resize-nw";
  Cursor2["ResizeTop"] = "resize-top";
  Cursor2["ResizeTopRight"] = "resize-ne";
  Cursor2["ResizeRight"] = "resize-right";
  Cursor2["ResizeBottomRight"] = "resize-se";
  Cursor2["ResizeBottom"] = "resize-bottom";
  Cursor2["ResizeBottomLeft"] = "resize-sw";
  Cursor2["ResizeLeft"] = "resize-left";
  Cursor2["Text"] = "text";
  Cursor2["Wait"] = "wait";
  return Cursor2;
})(Cursor || {});
var Depth = /* @__PURE__ */ ((Depth2) => {
  Depth2["Lowest"] = "lowest";
  Depth2["Lower"] = "lower";
  Depth2["Low"] = "low";
  Depth2["Surface"] = "surface";
  Depth2["High"] = "high";
  Depth2["Higher"] = "higher";
  Depth2["Highest"] = "highest";
  return Depth2;
})(Depth || {});
var DepthShadow = /* @__PURE__ */ ((DepthShadow2) => {
  DepthShadow2["Lowest"] = "var(--shadow-depth-lowest)";
  DepthShadow2["Lower"] = "var(--shadow-depth-lower)";
  DepthShadow2["Low"] = "var(--shadow-depth-low)";
  DepthShadow2["Surface"] = "var(--shadow-depth-surface)";
  DepthShadow2["High"] = "var(--shadow-depth-high)";
  DepthShadow2["Higher"] = "var(--shadow-depth-higher)";
  DepthShadow2["Highest"] = "var(--shadow-depth-highest)";
  return DepthShadow2;
})(DepthShadow || {});
var ForegroundColorShade = /* @__PURE__ */ ((ForegroundColorShade2) => {
  ForegroundColorShade2["Lightest"] = "var(--fg-color-lightest-rgb)";
  ForegroundColorShade2["Lighter"] = "var(--fg-color-lighter-rgb)";
  ForegroundColorShade2["Light"] = "var(--fg-color-light-rgb)";
  ForegroundColorShade2["Default"] = "var(--fg-color-default-rgb)";
  ForegroundColorShade2["Dark"] = "var(--fg-color-dark-rgb)";
  ForegroundColorShade2["Darker"] = "var(--fg-color-darker-rgb)";
  ForegroundColorShade2["Darkest"] = "var(--fg-color-darkest-rgb)";
  ForegroundColorShade2["Transparent"] = "transparent";
  return ForegroundColorShade2;
})(ForegroundColorShade || {});
var ForegroundColors = ((ForegroundColors2) => {
  ForegroundColors2["CloseButton"] = "var(--fg-color-close-button-rgb)";
  ForegroundColors2["MoreMenu"] = "var(--fg-color-more-menu-rgb)";
  ForegroundColors2["Lightest"] = "var(--fg-color-lightest-rgb)";
  ForegroundColors2["Lighter"] = "var(--fg-color-lighter-rgb)";
  ForegroundColors2["Light"] = "var(--fg-color-light-rgb)";
  ForegroundColors2["Default"] = "var(--fg-color-default-rgb)";
  ForegroundColors2["Dark"] = "var(--fg-color-dark-rgb)";
  ForegroundColors2["Darker"] = "var(--fg-color-darker-rgb)";
  ForegroundColors2["Darkest"] = "var(--fg-color-darkest-rgb)";
  ForegroundColors2[ForegroundColors2["Black"] = Colors.Black] = "Black";
  ForegroundColors2[ForegroundColors2["BlackContrast"] = ContrastColors.Black] = "BlackContrast";
  ForegroundColors2[ForegroundColors2["Error"] = Colors.Error] = "Error";
  ForegroundColors2[ForegroundColors2["ErrorContrast"] = ContrastColors.Error] = "ErrorContrast";
  ForegroundColors2[ForegroundColors2["Info"] = Colors.Info] = "Info";
  ForegroundColors2[ForegroundColors2["InfoContrast"] = ContrastColors.Info] = "InfoContrast";
  ForegroundColors2[ForegroundColors2["Primary"] = Colors.Primary] = "Primary";
  ForegroundColors2[ForegroundColors2["PrimaryContrast"] = ContrastColors.Primary] = "PrimaryContrast";
  ForegroundColors2[ForegroundColors2["Secondary"] = Colors.Primary] = "Secondary";
  ForegroundColors2[ForegroundColors2["SecondaryContrast"] = ContrastColors.Secondary] = "SecondaryContrast";
  ForegroundColors2[ForegroundColors2["Success"] = Colors.Success] = "Success";
  ForegroundColors2[ForegroundColors2["SuccessContrast"] = ContrastColors.Success] = "SuccessContrast";
  ForegroundColors2[ForegroundColors2["Transparent"] = Colors.Transparent] = "Transparent";
  ForegroundColors2[ForegroundColors2["Warning"] = Colors.Warning] = "Warning";
  ForegroundColors2[ForegroundColors2["WarningContrast"] = ContrastColors.Warning] = "WarningContrast";
  ForegroundColors2[ForegroundColors2["White"] = Colors.White] = "White";
  ForegroundColors2[ForegroundColors2["WhiteContrast"] = ContrastColors.White] = "WhiteContrast";
  return ForegroundColors2;
})(ForegroundColors || {});
var PositionBehavior = /* @__PURE__ */ ((PositionBehavior2) => {
  PositionBehavior2["Absolute"] = "absolute";
  PositionBehavior2["Fixed"] = "fixed";
  PositionBehavior2["Relative"] = "relative";
  PositionBehavior2["Static"] = "static";
  PositionBehavior2["Sticky"] = "sticky";
  return PositionBehavior2;
})(PositionBehavior || {});
var Amount = /* @__PURE__ */ ((Amount2) => {
  Amount2["None"] = "var(--amount-none)";
  Amount2["Least"] = "var(--amount-least)";
  Amount2["Less"] = "var(--amount-less)";
  Amount2["Default"] = "var(--amount-default)";
  Amount2["More"] = "var(--amount-more)";
  Amount2["Most"] = "var(--amount-most)";
  Amount2["All"] = "var(--amount-all)";
  return Amount2;
})(Amount || {});
var Sizes = /* @__PURE__ */ ((Sizes2) => {
  Sizes2["Smallest"] = "var(--size-smallest)";
  Sizes2["Smaller"] = "var(--size-smaller)";
  Sizes2["Small"] = "var(--size-small)";
  Sizes2["Default"] = "var(--size-default)";
  Sizes2["Large"] = "var(--size-large)";
  Sizes2["Larger"] = "var(--size-larger)";
  Sizes2["Largest"] = "var(--size-largest)";
  return Sizes2;
})(Sizes || {});
var Fill = /* @__PURE__ */ ((Fill2) => {
  Fill2["Both"] = "both";
  Fill2["Horizontal"] = "horizontal";
  Fill2["None"] = "none";
  Fill2["Vertical"] = "vertical";
  return Fill2;
})(Fill || {});
var TransformOrigin = /* @__PURE__ */ ((TransformOrigin2) => {
  TransformOrigin2["TopLeft"] = "top left";
  TransformOrigin2["TopRight"] = "top right";
  TransformOrigin2["Top"] = "top";
  TransformOrigin2["BottomLeft"] = "bottom left";
  TransformOrigin2["BottomRight"] = "bottom right";
  TransformOrigin2["Bottom"] = "bottom";
  TransformOrigin2["Left"] = "left";
  TransformOrigin2["Right"] = "right";
  TransformOrigin2["Center"] = "center";
  return TransformOrigin2;
})(TransformOrigin || {});
var AutoComplete = /* @__PURE__ */ ((AutoComplete2) => {
  AutoComplete2["Birthday"] = "bday";
  AutoComplete2["BirthdayDay"] = "bday-day";
  AutoComplete2["BirthdayMonth"] = "bday-month";
  AutoComplete2["BirthdayYear"] = "bday-year";
  AutoComplete2["Country"] = "country";
  AutoComplete2["CountryName"] = "country-name";
  AutoComplete2["CreditCardExpiration"] = "cc-exp";
  AutoComplete2["CreditCardExpirationMonth"] = "cc-exp-month";
  AutoComplete2["CreditCardExpirationYear"] = "cc-exp-year";
  AutoComplete2["CreditCardName"] = "cc-name";
  AutoComplete2["CreditCardNumber"] = "cc-number";
  AutoComplete2["CreditCardSecurityCode"] = "cc-csc";
  AutoComplete2["CreditCardType"] = "cc-type";
  AutoComplete2["CurrentPassword"] = "current-password";
  AutoComplete2["EmailAddress"] = "email";
  AutoComplete2["GivenName"] = "given-name";
  AutoComplete2["Language"] = "language";
  AutoComplete2["FamilyName"] = "family-name";
  AutoComplete2["NewPassword"] = "new-password";
  AutoComplete2["OneTimeCode"] = "one-time-code";
  AutoComplete2["Organization"] = "organization";
  AutoComplete2["PhoneNumber"] = "tel";
  AutoComplete2["PostalCode"] = "postal-code";
  AutoComplete2["Sex"] = "sex";
  AutoComplete2["StreetAddress"] = "street-address";
  AutoComplete2["Username"] = "username";
  return AutoComplete2;
})(AutoComplete || {});
var InputType = /* @__PURE__ */ ((InputType2) => {
  InputType2["Email"] = "email";
  InputType2["Text"] = "text";
  InputType2["Number"] = "number";
  InputType2["Password"] = "password";
  InputType2["Search"] = "search";
  return InputType2;
})(InputType || {});
var TextAlign = /* @__PURE__ */ ((TextAlign2) => {
  TextAlign2["Center"] = "center";
  TextAlign2["Default"] = "initial";
  TextAlign2["Justify"] = "justify";
  TextAlign2["Left"] = "left";
  TextAlign2["Right"] = "right";
  return TextAlign2;
})(TextAlign || {});
var TextColors = ((TextColors2) => {
  TextColors2["DataGridColumnHeaders"] = "var(--text-color-data-grid-column-headers-rgb)";
  TextColors2["DataGridCell"] = "var(--text-color-data-grid-cell-rgb)";
  TextColors2["DropdownMenu"] = "var(--text-color-dropdown-menu-rgb)";
  TextColors2["InputControl"] = "var(--text-color-input-control-rgb)";
  TextColors2["InputPlaceholder"] = "var(--text-color-input-placeholder-rgb)";
  TextColors2["Button"] = "var(--text-color-button-rgb)";
  TextColors2["InputLabel"] = "var(--text-color-input-label-rgb)";
  TextColors2["Link"] = "var(--text-color-link-rgb)";
  TextColors2["MenuButton"] = "var(--text-color-menu-button-rgb)";
  TextColors2["MenuItem"] = "var(--text-color-menu-item-rgb)";
  TextColors2["Paragraph"] = "var(--text-color-paragraph-rgb)";
  TextColors2["Text"] = "var(--text-color-text-rgb)";
  TextColors2["Title"] = "var(--text-color-title-rgb)";
  TextColors2["SubTitle"] = "var(--text-color-sub-title-rgb)";
  TextColors2["WorkspaceTitle"] = "var(--text-color-workspace-title-rgb)";
  TextColors2[TextColors2["Lightest"] = ForegroundColors.Lightest] = "Lightest";
  TextColors2[TextColors2["Lighter"] = ForegroundColors.Lighter] = "Lighter";
  TextColors2[TextColors2["Light"] = ForegroundColors.Light] = "Light";
  TextColors2[TextColors2["Default"] = ForegroundColors.Default] = "Default";
  TextColors2[TextColors2["DefaultContrast"] = ContrastColors.Default] = "DefaultContrast";
  TextColors2[TextColors2["Dark"] = ForegroundColors.Dark] = "Dark";
  TextColors2[TextColors2["Darker"] = ForegroundColors.Darker] = "Darker";
  TextColors2[TextColors2["Darkest"] = ForegroundColors.Darkest] = "Darkest";
  TextColors2[TextColors2["Black"] = Colors.Black] = "Black";
  TextColors2[TextColors2["BlackContrast"] = ContrastColors.Black] = "BlackContrast";
  TextColors2[TextColors2["Error"] = Colors.Error] = "Error";
  TextColors2[TextColors2["ErrorContrast"] = ContrastColors.Error] = "ErrorContrast";
  TextColors2[TextColors2["Info"] = Colors.Info] = "Info";
  TextColors2[TextColors2["InfoContrast"] = ContrastColors.Info] = "InfoContrast";
  TextColors2[TextColors2["Inherit"] = Colors.Inherit] = "Inherit";
  TextColors2[TextColors2["Primary"] = Colors.Primary] = "Primary";
  TextColors2[TextColors2["PrimaryContrast"] = ContrastColors.Primary] = "PrimaryContrast";
  TextColors2[TextColors2["Secondary"] = Colors.Primary] = "Secondary";
  TextColors2[TextColors2["SecondaryContrast"] = ContrastColors.Secondary] = "SecondaryContrast";
  TextColors2[TextColors2["Success"] = Colors.Success] = "Success";
  TextColors2[TextColors2["SuccessContrast"] = ContrastColors.Success] = "SuccessContrast";
  TextColors2[TextColors2["Warning"] = Colors.Warning] = "Warning";
  TextColors2[TextColors2["WarningContrast"] = ContrastColors.Warning] = "WarningContrast";
  TextColors2[TextColors2["White"] = Colors.White] = "White";
  TextColors2[TextColors2["WhiteContrast"] = ContrastColors.White] = "WhiteContrast";
  return TextColors2;
})(TextColors || {});
var TextDecorationLine = /* @__PURE__ */ ((TextDecorationLine2) => {
  TextDecorationLine2["LineThrough"] = "line-through";
  TextDecorationLine2["None"] = "none";
  TextDecorationLine2["Overline"] = "overline";
  TextDecorationLine2["Underline"] = "underline";
  return TextDecorationLine2;
})(TextDecorationLine || {});
var TextDecorationStyle = /* @__PURE__ */ ((TextDecorationStyle2) => {
  TextDecorationStyle2["Solid"] = "solid";
  TextDecorationStyle2["Double"] = "double";
  TextDecorationStyle2["Dotted"] = "dotted";
  TextDecorationStyle2["Dashed"] = "dashed";
  TextDecorationStyle2["None"] = "none";
  TextDecorationStyle2["Wavy"] = "wavy";
  return TextDecorationStyle2;
})(TextDecorationStyle || {});
var TextOverflow = /* @__PURE__ */ ((TextOverflow2) => {
  TextOverflow2["Clip"] = "clip";
  TextOverflow2["Ellipsis"] = "ellipsis";
  return TextOverflow2;
})(TextOverflow || {});
var TextWeight = /* @__PURE__ */ ((TextWeight2) => {
  TextWeight2["Least"] = "var(--text-weight-least)";
  TextWeight2["Less"] = "var(--text-weight-less)";
  TextWeight2["Default"] = "var(--text-weight-default)";
  TextWeight2["More"] = "var(--text-weight-more)";
  TextWeight2["Most"] = "var(--text-weight-most)";
  return TextWeight2;
})(TextWeight || {});
var TextSize = /* @__PURE__ */ ((TextSize2) => {
  TextSize2["Smallest"] = "var(--text-size-smallest)";
  TextSize2["Smaller"] = "var(--text-size-smaller)";
  TextSize2["Small"] = "var(--text-size-small)";
  TextSize2["Default"] = "var(--text-size-default)";
  TextSize2["Large"] = "var(--text-size-large)";
  TextSize2["Larger"] = "var(--text-size-larger)";
  TextSize2["Largest"] = "var(--text-size-largest)";
  return TextSize2;
})(TextSize || {});
function getHorizontalAlignStyle(alignment) {
  const {
    horizontal,
    orientation
  } = alignment != null ? alignment : {};
  if (orientation === Orientation.Horizontal) {
    switch (horizontal) {
      case AlignHorizontal.Center:
        return css$2(["justify-content:center;"]);
      case AlignHorizontal.Right:
        return css$2(["justify-content:flex-end;"]);
      case AlignHorizontal.Left:
        return css$2(["justify-content:flex-start;"]);
      default:
        return css$2(["justify-content:stretch;"]);
    }
  }
  switch (horizontal) {
    case AlignHorizontal.Center:
      return css$2(["align-items:center;"]);
    case AlignHorizontal.Right:
      return css$2(["align-items:flex-end;"]);
    case AlignHorizontal.Left:
      return css$2(["align-items:flex-start;"]);
    default:
      return css$2(["align-items:stretch;"]);
  }
}
function getVerticalAlignStyle(alignment) {
  const {
    orientation,
    vertical
  } = alignment != null ? alignment : {};
  if (orientation === Orientation.Horizontal) {
    switch (vertical) {
      case AlignVertical.Bottom:
        return css$2(["align-items:flex-end;"]);
      case AlignVertical.Center:
        return css$2(["align-items:center;"]);
      case AlignVertical.Top:
        return css$2(["align-items:flex-start;"]);
      default:
        return css$2(["align-items:stretch;"]);
    }
  }
  switch (vertical) {
    case AlignVertical.Bottom:
      return css$2(["justify-content:flex-end;"]);
    case AlignVertical.Center:
      return css$2(["justify-content:center;"]);
    case AlignVertical.Top:
      return css$2(["justify-content:flex-start;"]);
    default:
      return css$2(["justify-content:stretch;"]);
  }
}
function getOverflowStyle(overflow) {
  switch (overflow) {
    case Overflow.ClipBoth:
      return css$2(["overflow:clip;"]);
    case Overflow.ClipHorizontal:
      return css$2(["overflow-x:clip;"]);
    case Overflow.ClipVertical:
      return css$2(["overflow-y:clip;"]);
    case Overflow.ScrollBoth:
      return css$2(["bottom:0;left:0;overflow:scroll;position:absolute !important;right:0;top:0;"]);
    case Overflow.ScrollHorizontal:
      return css$2(["bottom:0;left:0;overflow:hidden;overflow-x:scroll;position:absolute !important;right:0;top:0;"]);
    case Overflow.ScrollVertical:
      return css$2(["bottom:0;left:0;overflow:hidden;overflow-y:scroll;position:absolute !important;right:0;top:0;"]);
    case Overflow.Visible:
      return css$2(["overflow:visible;"]);
    case Overflow.Hidden:
      return css$2(["overflow:hidden;"]);
    default:
      return null;
  }
}
function getFlexDirection(alignment) {
  switch (alignment == null ? void 0 : alignment.orientation) {
    case Orientation.Horizontal:
      return css$2(["flex-direction:row;"]);
    case Orientation.Vertical:
    default:
      return css$2(["flex-direction:column;"]);
  }
}
function getAlignmentStyles(alignment) {
  return css$2(["display:flex;", " ", " ", " ", ""], (alignment == null ? void 0 : alignment.orientation) && getFlexDirection(alignment), (alignment == null ? void 0 : alignment.horizontal) && getHorizontalAlignStyle(alignment), (alignment == null ? void 0 : alignment.vertical) && getVerticalAlignStyle(alignment), (alignment == null ? void 0 : alignment.overflow) && getOverflowStyle(alignment.overflow));
}
css$2(["", ""], (props) => getAlignmentStyles(props.alignment));
let nanoid = (size = 21) => {
  let id2 = "";
  let bytes = crypto.getRandomValues(new Uint8Array(size));
  while (size--) {
    let byte = bytes[size] & 63;
    if (byte < 36) {
      id2 += byte.toString(36);
    } else if (byte < 62) {
      id2 += (byte - 26).toString(36).toUpperCase();
    } else if (byte < 63) {
      id2 += "_";
    } else {
      id2 += "-";
    }
  }
  return id2;
};
function getAnimationKeyframes(animation, name2, props) {
  return css$2(["@keyframes ", "{from{", "}to{", "}}"], name2, getContainerStyles(__spreadValues({}, animation.from)), getContainerStyles(__spreadValues({}, animation.to)));
}
function getAnimationStyles(props) {
  var _a2, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l, _m, _n, _o;
  if (!props.animations || !((_a2 = props.animations) == null ? void 0 : _a2.length))
    return null;
  const animations = props.animations;
  let names = [];
  let keyframes = [];
  let iterations = [];
  let delays = [];
  let durations = [];
  let easings = [];
  for (const animation of animations) {
    if (animation.from && animation.to) {
      const name2 = (_b = animation.name) != null ? _b : `animation_${nanoid()}`;
      names = [...names, name2];
      keyframes = [...keyframes, getAnimationKeyframes(animation, name2)];
      delays = [...delays, (_d = (_c = animation.timing) == null ? void 0 : _c.delay) != null ? _d : 0];
      durations = [...durations, (_f = (_e2 = animation.timing) == null ? void 0 : _e2.duration) != null ? _f : 3];
      iterations = [...iterations, (_h = (_g = animation.timing) == null ? void 0 : _g.iterations) != null ? _h : "infinite"];
      easings = [...easings, (_j = (_i2 = animation.timing) == null ? void 0 : _i2.easing) != null ? _j : "linear"];
    }
  }
  return css$2(["", " ", " ", " ", " ", " ", ""], keyframes, names && names.length > 0 && css$2(["animation:", ";"], (_k = names.join(", ").trim()) != null ? _k : "none"), durations && durations.length > 0 && css$2(["animation-duration:", "s;"], (_l = durations.join(", ").trim()) != null ? _l : 3), iterations && iterations.length > 0 && css$2(["animation-iteration-count:", ";"], (_m = iterations.join(", ").trim()) != null ? _m : "infinite"), easings && easings.length > 0 && css$2(["animation-timing-function:", ";"], (_n = easings.join(", ").trim()) != null ? _n : "linear"), delays && delays.length > 0 && css$2(["animation-delay:", "s;"], (_o = delays.join(", ").trim()) != null ? _o : 0));
}
css$2(["", ""], (props) => getAnimationStyles(props));
function getBackgroundColorStyle(color, opacity) {
  if (color === BackgroundColors.Transparent)
    return css$2(["background-color:transparent;"]);
  if (color && !opacity)
    return css$2(["background-color:rgb(", ");"], color);
  if (color && opacity)
    return css$2(["background-color:rgba(", ",", "%);"], color, opacity);
  if (!color && opacity)
    return css$2(["background-color:rgba(initial,", "%);"], opacity);
  return css$2(["background-color:", ";"], color);
}
const getBackgroundImageSizeStyle = (size) => {
  if (!size)
    return css$2(["background-size:auto;"]);
  switch (size) {
    case BackgroundSize.Auto:
      return css$2(["background-size:auto;"]);
    case BackgroundSize.Cover:
      return css$2(["background-size:cover;"]);
    case BackgroundSize.Contain:
      return css$2(["background-size:contain;"]);
    case BackgroundSize.Fill:
      return css$2(["background-size:'100% 100%';"]);
    case BackgroundSize.FillHorizontal:
      return css$2(["background-size:'100% 0';"]);
    case BackgroundSize.FillVertical:
      return css$2(["background-size:'0 100%';"]);
    default:
      return css$2(["background-size:", ";"], size);
  }
};
function getBackgroundImageRepeatStyle(repeat) {
  return css$2(["background-repeat:", ";"], repeat);
}
function getBackgroundImageStyle(image) {
  var _a2;
  return css$2(["background-image:url(", ");", " ", ""], (_a2 = image == null ? void 0 : image.path) != null ? _a2 : image == null ? void 0 : image.url, (image == null ? void 0 : image.size) && getBackgroundImageSizeStyle(image.size), (image == null ? void 0 : image.repeat) && getBackgroundImageSizeStyle(image.size));
}
function getBackgroundStyles(background) {
  const {
    color,
    image,
    opacity
  } = background || {};
  return css$2(["", " ", " ", " ", ""], color && getBackgroundColorStyle(color, opacity), image && getBackgroundImageStyle(image), (image == null ? void 0 : image.size) && getBackgroundImageSizeStyle(image.size), (image == null ? void 0 : image.repeat) && getBackgroundImageRepeatStyle(image == null ? void 0 : image.repeat));
}
const BackgroundStyles = css$2(["", ""], (props) => getBackgroundStyles(props.background));
function getCSSMeasurementValue(val) {
  if (typeof val === "string" && val.includes("var(")) {
    return val;
  }
  if (typeof val === "string" && val.includes("%")) {
    return val;
  }
  if (typeof val === "number") {
    return `${val}px`;
  }
  return val;
}
function getCSSColorValue(val) {
  if (!val)
    return val;
  if (val === "transparent") {
    return "transparent";
  }
  return `rgb(${val})`;
}
function getBorderDirectionProperty(direction) {
  return `border${direction === "all" ? "" : `-${direction}`}`;
}
function getBorderColorStyle(color, direction) {
  return css$2(["", "-color:", ";"], getBorderDirectionProperty(direction), getCSSColorValue(color != null ? color : BorderColors.Default));
}
function getBorderStyleStyle(direction, style2) {
  return css$2(["", "-style:", ";"], getBorderDirectionProperty(direction), style2 != null ? style2 : "solid");
}
function getBorderWidthStyle(width, direction) {
  return css$2(["", "-width:", ";"], getBorderDirectionProperty(direction), getCSSMeasurementValue(width != null ? width : 0));
}
function getBorderStyle(border, direction) {
  if (!border || !direction)
    return;
  return css$2(["", " ", " ", ""], border.color && getBorderColorStyle(border.color, direction), getBorderStyleStyle(direction, border.style), border.width !== void 0 && getBorderWidthStyle(border.width, direction));
}
function getBorderStyles(border) {
  return css$2(["", " ", " ", " ", " ", ""], (border == null ? void 0 : border.all) && getBorderStyle(border.all, "all"), (border == null ? void 0 : border.bottom) && getBorderStyle(border.bottom, "bottom"), (border == null ? void 0 : border.left) && getBorderStyle(border.left, "left"), (border == null ? void 0 : border.right) && getBorderStyle(border.right, "right"), (border == null ? void 0 : border.top) && getBorderStyle(border.top, "top"));
}
css$2(["", ""], (props) => getBorderStyles(props.border));
function getBorderRadiusStyles(borderRadius) {
  if (!borderRadius)
    return;
  const {
    all,
    bottomLeft,
    bottomRight,
    topLeft,
    topRight
  } = borderRadius;
  return css$2(["", " ", " ", " ", " ", ""], all && css$2(["border-radius:", ";"], getCSSMeasurementValue(all)), bottomLeft && css$2(["border-bottom-left-radius:", ";"], getCSSMeasurementValue(bottomLeft)), bottomRight && css$2(["border-bottom-right-radius:", ";"], getCSSMeasurementValue(bottomRight)), topLeft && css$2(["border-top-left-radius:", ";"], getCSSMeasurementValue(topLeft)), topRight && css$2(["border-top-right-radius:", ";"], getCSSMeasurementValue(topRight)));
}
const BorderRadiusStyles = css$2(["", ""], (props) => getBorderRadiusStyles(props.borderRadius));
function getCursorStyle(cursor) {
  return css$2(["cursor:", ";"], cursor);
}
function getCursorStyles(cursor) {
  return css$2(["", ""], cursor && getCursorStyle(cursor));
}
css$2(["", ""], (props) => getCursorStyles(props.cursor));
function getZIndexValue(depth) {
  switch (depth) {
    case Depth.Lowest:
      return -3;
    case Depth.Lower:
      return -2;
    case Depth.Low:
      return -1;
    case Depth.Surface:
      return 0;
    case Depth.High:
      return 1;
    case Depth.Higher:
      return 2;
    case Depth.Highest:
      return 3;
    default:
      return 0;
  }
}
function getZIndexStyle(depth) {
  return css$2(["z-index:", ";"], getZIndexValue(depth));
}
function getDepthStyles(depth) {
  return css$2(["", ""], depth && getZIndexStyle(depth));
}
css$2(["", ""], (props) => getDepthStyles(props.depth));
function getMarginStyles(margin) {
  if (!margin)
    return;
  const {
    all,
    bottom,
    left,
    right,
    top
  } = margin;
  return css$2(["", " ", " ", " ", " ", ""], all && css$2(["margin:", ";"], getCSSMeasurementValue(margin.all)), bottom && css$2(["margin-bottom:", ";"], getCSSMeasurementValue(margin.bottom)), left && css$2(["margin-left:", ";"], getCSSMeasurementValue(margin.left)), right && css$2(["margin-right:", ";"], getCSSMeasurementValue(margin.right)), top && css$2(["margin-top:", ";"], getCSSMeasurementValue(margin.top)));
}
const MarginStyles = css$2(["", ""], (props) => getMarginStyles(props.margin));
function getPaddingStyles(padding) {
  if (!padding)
    return;
  const {
    all,
    bottom,
    left,
    right,
    top
  } = padding;
  return css$2(["", " ", " ", " ", " ", ""], all && css$2(["padding:", ";"], getCSSMeasurementValue(padding.all)), bottom && css$2(["padding-bottom:", ";"], getCSSMeasurementValue(padding.bottom)), left && css$2(["padding-left:", ";"], getCSSMeasurementValue(padding.left)), right && css$2(["padding-right:", ";"], getCSSMeasurementValue(padding.right)), top && css$2(["padding-top:", ";"], getCSSMeasurementValue(padding.top)));
}
css$2(["", ""], (props) => getPaddingStyles(props.padding));
function getPositionStyles(position) {
  const {
    behavior,
    bottom,
    left,
    right,
    top
  } = position || {};
  return css$2(["position:relative;", " ", " ", " ", " ", ""], behavior && css$2(["position:", ";"], behavior), (bottom || bottom === 0) && css$2(["bottom:", ";"], getCSSMeasurementValue(bottom)), (left || left === 0) && css$2(["left:", ";"], getCSSMeasurementValue(left)), (right || right === 0) && css$2(["right:", ";"], getCSSMeasurementValue(right)), (top || top === 0) && css$2(["top:", ";"], getCSSMeasurementValue(top)));
}
css$2(["", ""], (props) => getPositionStyles(props.position));
function getShadowStyles(shadow) {
  if (!shadow) {
    return null;
  }
  if (typeof shadow === "string") {
    return css$2(["box-shadow:", ";"], shadow);
  }
  if (Array.isArray(shadow)) {
    return css$2(["box-shadow:", ";"], shadow.map(getShadowStyles).join(", "));
  }
  if (typeof shadow === "object") {
    const {
      color,
      x,
      y: y2,
      blur,
      spread
    } = shadow;
    return css$2(["box-shadow:", " ", " ", " ", " ", ";"], blur, x, y2, spread, color);
  }
}
const ShadowStyles = css$2(["", ""], (props) => getShadowStyles(props.shadow));
function getFillStyles(fill) {
  if (!fill)
    return null;
  switch (fill) {
    case Fill.Both:
    case Fill.Horizontal:
    case Fill.Vertical:
      return css$2(["flex-grow:1;"]);
    case Fill.None:
    default:
      return css$2(["flex-grow:0;"]);
  }
}
function getMaxHeightStyle(maxHeight) {
  if (!maxHeight)
    return null;
  return css$2(["max-height:", ";"], getCSSMeasurementValue(maxHeight));
}
function getMinHeightStyle(minHeight) {
  if (!minHeight)
    return null;
  return css$2(["min-height:", ";"], getCSSMeasurementValue(minHeight));
}
function getHeightStyle(height) {
  if (!height)
    return null;
  return css$2(["height:", ";"], getCSSMeasurementValue(height));
}
function getMaxWidthStyle(maxWidth) {
  if (!maxWidth)
    return null;
  return css$2(["max-width:", ";"], getCSSMeasurementValue(maxWidth));
}
function getMinWidthStyle(minWidth) {
  if (!minWidth)
    return null;
  return css$2(["min-width:", ";"], getCSSMeasurementValue(minWidth));
}
function getWidthStyle(width) {
  if (!width)
    return null;
  return css$2(["width:", ";"], getCSSMeasurementValue(width));
}
function getSizeStyles(size) {
  if (!size)
    return null;
  const {
    fill,
    maxHeight,
    minHeight,
    maxWidth,
    minWidth,
    width,
    height
  } = size != null ? size : {};
  return css$2(["", " ", " ", " ", " ", " ", " ", ""], fill && getFillStyles(fill), maxHeight && getMaxHeightStyle(maxHeight), minHeight && getMinHeightStyle(minHeight), height && getHeightStyle(height), maxWidth && getMaxWidthStyle(maxWidth), minWidth && getMinWidthStyle(minWidth), width && getWidthStyle(width));
}
const SizeStyles = css$2(["", ""], (props) => getSizeStyles(props.size));
function getTransformArgumentValue(transform) {
  if (!transform)
    return null;
  let cssValue = "";
  const {
    rotate,
    scale,
    skew,
    translate
  } = transform;
  if (rotate) {
    if (rotate.x && rotate.y && rotate.z) {
      cssValue += `rotate3d(${rotate.x}, ${rotate.y}, ${rotate.z}, ${rotate.angle}deg) `;
    } else if (rotate.x && rotate.y) {
      cssValue += `rotate3d(${rotate.x}, ${rotate.y}, ${rotate.angle}deg) `;
    } else {
      cssValue += `rotate(${rotate.angle}deg) `;
    }
  }
  if (scale) {
    if (scale.x && scale.y && scale.z) {
      cssValue += `scale3d(${scale.x}, ${scale.y}, ${scale.z}) `;
    } else if (scale.x && scale.y) {
      cssValue += `scale3d(${scale.x}, ${scale.y}) `;
    } else {
      cssValue += `scale(${scale.x}) `;
    }
  }
  if (skew) {
    if (skew.x && skew.y) {
      cssValue += `skew(${skew.x}, ${skew.y}) `;
    } else {
      cssValue += `skew(${skew.x}) `;
    }
  }
  if (translate) {
    if (translate.x && translate.y) {
      cssValue += `translate(${getCSSMeasurementValue(translate.x)}, ${getCSSMeasurementValue(translate.y)}) `;
    } else if (translate.x && !translate.y) {
      cssValue += `translateX(${getCSSMeasurementValue(translate.x)}) `;
    } else if (translate.y && !translate.x) {
      cssValue += `translateY(${getCSSMeasurementValue(translate.y)}) `;
    } else {
      cssValue += `translate(${getCSSMeasurementValue(translate.x)}) `;
    }
  }
  return cssValue;
}
function getTransformStyles(transform) {
  var _a2;
  if (!transform)
    return;
  return css$2(["", " ", ""], (transform == null ? void 0 : transform.origin) && css$2(["transform-origin:", ";"], getCSSMeasurementValue(transform.origin)), ((transform == null ? void 0 : transform.rotate) || (transform == null ? void 0 : transform.scale) || (transform == null ? void 0 : transform.skew) || (transform == null ? void 0 : transform.translate)) && css$2(["transform:", ";"], (_a2 = getTransformArgumentValue(transform)) != null ? _a2 : "none"));
}
css$2(["", ""], (props) => getTransformStyles(props.transform));
function getOpacityStyle(visibility) {
  if (!visibility)
    return null;
  if ((visibility == null ? void 0 : visibility.hidden) === true || (visibility == null ? void 0 : visibility.visible) === false) {
    return css$2(["opacity:0;"]);
  }
  if (visibility == null ? void 0 : visibility.opacity) {
    return css$2(["opacity:", "%;"], visibility.opacity);
  }
  return css$2(["opacity:1;"]);
}
function getPointerEventsStyle(visibility) {
  if (!visibility)
    return null;
  if ((visibility == null ? void 0 : visibility.hidden) === true || (visibility == null ? void 0 : visibility.visible) === false) {
    return css$2(["pointer-events:none;"]);
  }
  if ((visibility == null ? void 0 : visibility.opacity) && visibility.opacity === 0) {
    return css$2(["pointer-events:none;"]);
  }
  return css$2(["pointer-events:all;"]);
}
function getVisibilityStyle(visibility) {
  if (!visibility)
    return null;
  if ((visibility == null ? void 0 : visibility.hidden) === true || (visibility == null ? void 0 : visibility.visible) === false) {
    return css$2(["visibility:hidden;"]);
  }
  if ((visibility == null ? void 0 : visibility.opacity) && visibility.opacity === 0) {
    return css$2(["visibility:hidden;"]);
  }
  return css$2(["visibility:visible;"]);
}
function getVisibilityStyles(visibility) {
  return css$2(["", " ", " ", ""], getOpacityStyle(visibility), getPointerEventsStyle(visibility), getVisibilityStyle(visibility));
}
css$2(["", ""], (props) => getVisibilityStyles(props.visibility));
const getContainerStyles = (props) => {
  return css$2(["", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " transition:background 0.13s ease-in-out,background-color 0.13s ease-in-out,border-radius 0.13s ease-in-out,border-bottom-left-radius 0.13s ease-in-out,border-bottom-right-radius 0.13s ease-in-out,border-top-left-radius 0.13s ease-in-out,border-top-right-radius 0.13s ease-in-out,border 0.13s ease-in-out,border-color 0.13s ease-in-out,box-shadow 0.13s ease-in-out,color 0.13s ease-in,opacity 0.13s ease-in-out,transform 0.13s ease-in-out;"], getAlignmentStyles(props.alignment), getAnimationStyles(props), getBackgroundStyles(props.background), getBorderStyles(props.border), getBorderRadiusStyles(props.borderRadius), getCursorStyles(props.cursor), getDepthStyles(props.depth), getMarginStyles(props.margin), getPaddingStyles(props.padding), getPositionStyles(props.position), getShadowStyles(props.shadow), getSizeStyles(props.size), getTransformStyles(props.transform), getVisibilityStyles(props.visibility));
};
const ContainerStyles = css$2(["", ""], (props) => getContainerStyles(props));
function getDisabledStateStyles$1() {
  return css$2(["cursor:not-allowed !important;opacity:0.3;"]);
}
function getFocusedStyles() {
  return css$2(["outline:none;&:before{transition:opacity 0.2s ease-in-out;}&:before{bottom:-4px;content:'';display:block;border-color:blue;border-style:solid;border-width:2px;opacity:1;left:-4px;position:absolute;pointer-events:none;right:-4px;top:-4px;transition:opacity 0.2s ease-in-out;}"]);
}
function getVisibleStateStyles() {
  return css$2(["opacity:1;pointer-events:all;visibility:visible;"]);
}
function getHiddenStateStyles() {
  return css$2(["opacity:0;pointer-events:none;visibility:hidden;"]);
}
function getContainerStatesStyles(props) {
  const _a2 = props, {
    states
  } = _a2, otherProps = __objRest(_a2, [
    "states"
  ]);
  if (!states) {
    return;
  }
  const {
    active,
    current,
    disabled,
    error,
    focused,
    hovered,
    loaded,
    loading,
    on,
    state,
    success,
    visible,
    warning
  } = states;
  return css$2(["", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", ""], active && css$2(["", ""], (state == null ? void 0 : state.active) ? css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), active))) : css$2(["&::active{", "}"], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), active)))), current && (state == null ? void 0 : state.current) && css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), current))), disabled && (state == null ? void 0 : state.disabled) ? css$2(["", " ", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), disabled)), getDisabledStateStyles$1()) : css$2(["&:disabled{", " ", "}"], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), disabled)), getDisabledStateStyles$1()), error && (state == null ? void 0 : state.error) && css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), error))), focused && css$2(["", ""], (state == null ? void 0 : state.focused) ? css$2(["", " ", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), focused)), getFocusedStyles()) : css$2(["&:focus{", " ", "}"], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), focused)), getFocusedStyles())), hovered && !(state == null ? void 0 : state.current) && css$2(["", ""], (state == null ? void 0 : state.hovered) ? css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), hovered))) : css$2(["&:hover{", "}"], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), hovered)))), loaded && (state == null ? void 0 : state.loaded) && css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), loaded))), loading && (state == null ? void 0 : state.loading) && css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), loading))), on && (state == null ? void 0 : state.on) && css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), on))), success && (state == null ? void 0 : state.success) && css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), success))), visible && (state == null ? void 0 : state.visible) && css$2(["", " ", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), visible)), getVisibleStateStyles()), visible && (state == null ? void 0 : state.visible) === false && css$2(["", " ", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), visible)), getHiddenStateStyles()), !visible && (state == null ? void 0 : state.visible) === false && css$2(["", ""], getHiddenStateStyles()), warning && (state == null ? void 0 : state.warning) && css$2(["", ""], getContainerStyles(__spreadValues(__spreadValues({}, otherProps), warning))));
}
const StateStyles = css$2(["", ""], (props) => getContainerStatesStyles(props));
function getEventHandlers(events) {
  const entries = [...Object.entries(events)];
  let handlers = {};
  for (const entry of entries) {
    for (const handler of [...Object.entries(entry[1])]) {
      if (handler[0] !== "onValueChange" && handler[0] !== "onSubmitted") {
        handlers = __spreadProps(__spreadValues({}, handlers), {
          [handler[0]]: handler[1]
        });
      }
    }
  }
  return handlers;
}
var jsxRuntime$1 = { exports: {} };
var reactJsxRuntime_production_min$1 = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols$1 = Object.getOwnPropertySymbols;
var hasOwnProperty$5 = Object.prototype.hasOwnProperty;
var propIsEnumerable$1 = Object.prototype.propertyIsEnumerable;
function toObject$1(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative$1() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i2 = 0; i2 < 10; i2++) {
      test2["_" + String.fromCharCode(i2)] = i2;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
shouldUseNative$1() ? Object.assign : function(target, source) {
  var from2;
  var to = toObject$1(target);
  var symbols;
  for (var s2 = 1; s2 < arguments.length; s2++) {
    from2 = Object(arguments[s2]);
    for (var key in from2) {
      if (hasOwnProperty$5.call(from2, key)) {
        to[key] = from2[key];
      }
    }
    if (getOwnPropertySymbols$1) {
      symbols = getOwnPropertySymbols$1(from2);
      for (var i2 = 0; i2 < symbols.length; i2++) {
        if (propIsEnumerable$1.call(from2, symbols[i2])) {
          to[symbols[i2]] = from2[symbols[i2]];
        }
      }
    }
  }
  return to;
};
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$3 = e$3, g$4 = 60103;
reactJsxRuntime_production_min$1.Fragment = 60107;
if (typeof Symbol === "function" && Symbol.for) {
  var h$5 = Symbol.for;
  g$4 = h$5("react.element");
  reactJsxRuntime_production_min$1.Fragment = h$5("react.fragment");
}
var m$4 = f$3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, n$5 = Object.prototype.hasOwnProperty, p$5 = { key: true, ref: true, __self: true, __source: true };
function q$5(c2, a, k2) {
  var b2, d2 = {}, e2 = null, l2 = null;
  k2 !== void 0 && (e2 = "" + k2);
  a.key !== void 0 && (e2 = "" + a.key);
  a.ref !== void 0 && (l2 = a.ref);
  for (b2 in a)
    n$5.call(a, b2) && !p$5.hasOwnProperty(b2) && (d2[b2] = a[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a = c2.defaultProps, a)
      d2[b2] === void 0 && (d2[b2] = a[b2]);
  return { $$typeof: g$4, type: c2, key: e2, ref: l2, props: d2, _owner: m$4.current };
}
reactJsxRuntime_production_min$1.jsx = q$5;
reactJsxRuntime_production_min$1.jsxs = q$5;
{
  jsxRuntime$1.exports = reactJsxRuntime_production_min$1;
}
const jsx$2 = jsxRuntime$1.exports.jsx;
const jsxs$1 = jsxRuntime$1.exports.jsxs;
const Fragment = jsxRuntime$1.exports.Fragment;
const Wrapper$3 = styled.div.withConfig({
  displayName: "Wrapper",
  componentId: "sc-19tf6wk-0"
})(["", ";", ";"], (props) => getContainerStyles(props), (props) => getContainerStatesStyles(props));
const Container$8 = memo((_a2) => {
  var _b = _a2, {
    alignment,
    as = "div",
    children,
    className = "",
    events = {},
    states = {}
  } = _b, props = __objRest(_b, [
    "alignment",
    "as",
    "children",
    "className",
    "events",
    "states"
  ]);
  var _a3, _b2;
  const [eventHandlers, setEventHandlers] = useState({});
  useEffect(() => {
    if (events && Object.keys(events).length > 0) {
      setEventHandlers(getEventHandlers(events));
    }
  }, []);
  return /* @__PURE__ */ jsx$2(Wrapper$3, __spreadProps(__spreadValues(__spreadValues({
    alignment: __spreadValues({
      fill: Fill.Horizontal,
      horizontal: AlignHorizontal.Stretch,
      orientation: Orientation.Vertical,
      vertical: AlignVertical.Stretch
    }, alignment),
    as,
    className: `${className} container`,
    disabled: (_a3 = states == null ? void 0 : states.state) == null ? void 0 : _a3.disabled,
    states: __spreadProps(__spreadValues({}, states), {
      state: __spreadProps(__spreadValues({}, states.state), {
        hidden: ((_b2 = states == null ? void 0 : states.state) == null ? void 0 : _b2.visible) === false
      })
    })
  }, props), eventHandlers), {
    children
  }));
});
const Img = styled.img.withConfig({
  displayName: "Img",
  componentId: "sc-152mfqb-0"
})(["", ";", ";"], ContainerStyles, StateStyles);
const Image = memo((_c) => {
  var _d = _c, {
    alt,
    className = "",
    description,
    path,
    url,
    size = {
      height: "100%",
      width: "100%"
    }
  } = _d, props = __objRest(_d, [
    "alt",
    "className",
    "description",
    "path",
    "url",
    "size"
  ]);
  return /* @__PURE__ */ jsx$2(Img, __spreadValues({
    alt: alt != null ? alt : description,
    className: `${className} image`,
    size,
    src: path != null ? path : url
  }, props));
});
const Wrapper$2 = styled.span.withConfig({
  displayName: "Wrapper",
  componentId: "sc-9vccki-0"
})(["", ";svg{", ";height:100%;width:100%;transition:fill 0.13s ease-in-out;}"], (props) => getContainerStyles(props), (props) => props.color && css$2(["fill:", ";"], props.color === "inherit" ? "currentColor" : `rgb(${props.color})`));
const Icon = memo((_e2) => {
  var _f = _e2, {
    as = "i",
    alignment = {},
    color = TextColors.Default,
    className = "",
    component,
    name: name2,
    path,
    size = {},
    svg,
    url
  } = _f, props = __objRest(_f, [
    "as",
    "alignment",
    "color",
    "className",
    "component",
    "name",
    "path",
    "size",
    "svg",
    "url"
  ]);
  if (name2) {
    const IconComponent = getIcon(name2);
    if (IconComponent)
      return /* @__PURE__ */ jsx$2(Wrapper$2, __spreadProps(__spreadValues({
        alignment: __spreadValues({
          horizontal: AlignHorizontal.Center,
          vertical: AlignVertical.Center
        }, alignment),
        as,
        color,
        className: `${className} icon`,
        size: __spreadValues({
          height: Sizes.Default,
          width: Sizes.Default
        }, size)
      }, props), {
        children: IconComponent && /* @__PURE__ */ jsx$2(IconComponent, {})
      }));
  }
  if (component) {
    return component;
  }
  if (path) {
    return /* @__PURE__ */ jsx$2(Image, {
      alt: "icon",
      className: `${className} icon`,
      path
    });
  }
  if (url) {
    return /* @__PURE__ */ jsx$2(Image, {
      alt: "icon",
      className: `${className} icon`,
      url
    });
  }
  return /* @__PURE__ */ jsx$2(Fragment, {});
});
const getTextStyles = (props) => {
  const {
    bold,
    cursor,
    italic,
    lineHeight,
    lineWrap,
    textOverflow,
    selectable,
    textAlign,
    textColor,
    textDecoration,
    textSize,
    textWeight
  } = props;
  return css$2(["color:", ";font-size:", ";line-height:", ";", ";", ";", ";", ";", ";", ";", ";", ";", ";transition:color 0.13s ease-in-out,font-size 0.13s ease-in-out,font-weight 0.13s ease-in-out,text-decoration 0.13s ease-in-out,text-decoration-color 0.13s ease-in-out,text-decoration-style 0.13s ease-in-out,text-decoration-thickness 0.13s ease-in-out;"], getCSSColorValue(textColor != null ? textColor : TextColors.Default), getCSSMeasurementValue(textSize != null ? textSize : TextSize.Default), getCSSMeasurementValue(lineHeight != null ? lineHeight : Sizes.Default), bold && css$2(["font-weight:bold;"]), cursor && css$2(["cursor:", ";"], cursor), italic && css$2(["font-style:italic;"]), lineWrap && css$2(["white-space:nowrap;"]), selectable && css$2(["user-select:text;"]), textAlign && css$2(["text-align:", ";"], textAlign), textDecoration && css$2(["text-decoration:", ";text-decoration-color:", ";text-decoration-style:", ";text-decoration-thickness:", ";"], textDecoration.line ? textDecoration.line : "none", getCSSColorValue(textDecoration.color), textDecoration.style ? textDecoration.style : "solid", getCSSMeasurementValue(textDecoration.thickness)), textOverflow && css$2(["text-overflow:", ";"], textOverflow), textWeight && css$2(["font-weight:", ";"], textWeight));
};
const TextStyles = css$2(["", ";"], (props) => getTextStyles(props));
function getDisabledStateStyles() {
  return css$2(["opacity:0.1 !important;background-color:yellow !important;"]);
}
function getTextStatesStyles(props) {
  const _a2 = props, {
    states
  } = _a2, otherProps = __objRest(_a2, [
    "states"
  ]);
  if (!states) {
    return;
  }
  const {
    active,
    current,
    disabled,
    error,
    focused,
    hovered,
    loading,
    state,
    success,
    visible,
    warning
  } = states;
  return css$2(["", ";", ";", ";", ";", ";", ";", ";", ";", ";", ";"], current && (state == null ? void 0 : state.current) && !(state == null ? void 0 : state.active) && css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), current))), disabled && css$2(["", ";"], (state == null ? void 0 : state.disabled) ? css$2(["", ";", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), disabled)), getDisabledStateStyles()) : css$2(["&:disabled{", ";", ";}"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), disabled)), getDisabledStateStyles())), error && (state == null ? void 0 : state.error) && css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), error))), focused && css$2(["", ";"], (state == null ? void 0 : state.focused) ? css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), focused))) : css$2(["&:focus{", ";}"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), focused)))), hovered && !(state == null ? void 0 : state.active) && css$2(["", ";"], (state == null ? void 0 : state.hovered) ? css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), hovered))) : css$2(["&:hover{", ";}"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), hovered)))), active && css$2(["", ";"], (state == null ? void 0 : state.active) ? css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), active))) : css$2(["&::active{", ";}"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), active)))), loading && (state == null ? void 0 : state.loading) && css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), loading))), success && (state == null ? void 0 : state.success) && css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), success))), visible && (state == null ? void 0 : state.visible) && css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), visible))), warning && (state == null ? void 0 : state.warning) && css$2(["", ";"], getTextStyles(__spreadValues(__spreadValues({}, otherProps), warning))));
}
css$2(["", ";"], (props) => getTextStatesStyles(props));
const Wrapper$1 = styled.span.withConfig({
  displayName: "Wrapper",
  componentId: "sc-196umx6-0"
})(["", ";", ";"], (props) => getTextStyles(props), (props) => getTextStatesStyles(props));
const Text = memo((_g) => {
  var _h = _g, {
    as = "span",
    children,
    className = "",
    lineHeight = Sizes.Default,
    lineWrap = true,
    selectable = true,
    textAlign = TextAlign.Left,
    textColor = TextColors.Default,
    textSize = TextSize.Default,
    textOverflow = TextOverflow.Ellipsis,
    textWeight = TextWeight.Default
  } = _h, props = __objRest(_h, [
    "as",
    "children",
    "className",
    "lineHeight",
    "lineWrap",
    "selectable",
    "textAlign",
    "textColor",
    "textSize",
    "textOverflow",
    "textWeight"
  ]);
  return /* @__PURE__ */ jsx$2(Wrapper$1, __spreadProps(__spreadValues({
    textAlign,
    textColor,
    as,
    className: `${className} text`,
    selectable,
    lineHeight,
    textOverflow,
    textSize,
    textWeight
  }, props), {
    children
  }));
});
const Label = memo((_i2) => {
  var _j = _i2, {
    alignment = {},
    as = "span",
    children,
    className = "",
    icon: icon2,
    lineHeight = Sizes.Default,
    lineWrap = false,
    selectable = true,
    states = {},
    textAlign = TextAlign.Default,
    textColor = TextColors.Default,
    textOverflow = TextOverflow.Ellipsis,
    textSize = TextSize.Default,
    textWeight = TextWeight.Default
  } = _j, props = __objRest(_j, [
    "alignment",
    "as",
    "children",
    "className",
    "icon",
    "lineHeight",
    "lineWrap",
    "selectable",
    "states",
    "textAlign",
    "textColor",
    "textOverflow",
    "textSize",
    "textWeight"
  ]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    }, alignment),
    as,
    className: `${className} label`,
    states
  }, props), {
    children: [icon2 && (icon2.component || icon2.name || icon2.path || icon2.url || icon2.svg) && /* @__PURE__ */ jsx$2(Icon, __spreadValues({
      margin: __spreadValues({
        right: Amount.Least
      }, icon2.margin)
    }, icon2)), /* @__PURE__ */ jsx$2(Text, {
      lineHeight,
      selectable,
      states,
      textAlign,
      textColor,
      textOverflow,
      textSize,
      textWeight,
      children
    })]
  }));
});
var ButtonType = /* @__PURE__ */ ((ButtonType2) => {
  ButtonType2["Default"] = "black";
  ButtonType2["Error"] = "error";
  ButtonType2["Info"] = "info";
  ButtonType2["Inline"] = "inline";
  ButtonType2["Link"] = "link";
  ButtonType2["Primary"] = "primary";
  ButtonType2["Secondary"] = "secondary";
  ButtonType2["Success"] = "success";
  ButtonType2["Transparent"] = "transparent";
  ButtonType2["Warning"] = "warning";
  ButtonType2["White"] = "white";
  return ButtonType2;
})(ButtonType || {});
const Button$1 = memo((_k) => {
  var _l = _k, {
    alignment = {},
    as = "button",
    background = {},
    border = {},
    borderRadius = {},
    children,
    className = "",
    cursor = Cursor.Pointer,
    form,
    icon: icon2,
    label,
    lineHeight = Sizes.Default,
    padding = {},
    states = {},
    textAlign = TextAlign.Center,
    textColor,
    textDecoration = {},
    textSize = TextSize.Default,
    textWeight,
    type = "black"
  } = _l, props = __objRest(_l, [
    "alignment",
    "as",
    "background",
    "border",
    "borderRadius",
    "children",
    "className",
    "cursor",
    "form",
    "icon",
    "label",
    "lineHeight",
    "padding",
    "states",
    "textAlign",
    "textColor",
    "textDecoration",
    "textSize",
    "textWeight",
    "type"
  ]);
  var _a2, _b;
  const getColors = () => {
    if (!type)
      return {
        backgroundColor: BackgroundColors.Black,
        textColor: TextColors.BlackContrast
      };
    switch (type) {
      case "black":
        return {
          backgroundColor: BackgroundColors.Default,
          textColor: TextColors.DefaultContrast
        };
      case "error":
        return {
          backgroundColor: BackgroundColors.Error,
          textColor: TextColors.ErrorContrast
        };
      case "info":
        return {
          backgroundColor: BackgroundColors.Info,
          textColor: TextColors.InfoContrast
        };
      case "inline":
        return {
          backgroundColor: BackgroundColors.Transparent,
          textColor: TextColors.Default
        };
      case "link":
        return {
          backgroundColor: BackgroundColors.Transparent,
          textColor: TextColors.Primary
        };
      case "primary":
        return {
          backgroundColor: BackgroundColors.Primary,
          textColor: TextColors.PrimaryContrast
        };
      case "secondary":
        return {
          backgroundColor: BackgroundColors.Secondary,
          textColor: TextColors.SecondaryContrast
        };
      case "success":
        return {
          backgroundColor: BackgroundColors.Success,
          textColor: TextColors.SuccessContrast
        };
      case "transparent":
        return {
          backgroundColor: BackgroundColors.Transparent,
          textColor: TextColors.Default
        };
      case "warning":
        return {
          backgroundColor: BackgroundColors.Warning,
          textColor: TextColors.WarningContrast
        };
      case "white":
        return {
          backgroundColor: BackgroundColors.White,
          textColor: TextColors.WhiteContrast
        };
    }
  };
  const colors = getColors();
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      horizontal: AlignHorizontal.Center,
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    }, alignment),
    as,
    background: __spreadValues({
      color: colors == null ? void 0 : colors.backgroundColor
    }, background),
    border: __spreadValues({
      all: {
        style: BorderStyle.None
      }
    }, border),
    borderRadius: __spreadValues({
      all: Amount.All
    }, borderRadius),
    className: `${className} button`,
    cursor,
    form,
    padding: typeof children === "string" ? __spreadValues({
      left: lineHeight,
      right: lineHeight
    }, padding) : padding,
    states: __spreadValues({
      active: {
        background: {
          color: (_a2 = background == null ? void 0 : background.color) != null ? _a2 : colors == null ? void 0 : colors.backgroundColor,
          opacity: 80
        }
      },
      hovered: {
        background: {
          color: (_b = background == null ? void 0 : background.color) != null ? _b : colors == null ? void 0 : colors.backgroundColor,
          opacity: 90
        }
      }
    }, states)
  }, props), {
    children: typeof children === "string" ? /* @__PURE__ */ jsx$2(Label, {
      icon: icon2,
      lineHeight,
      textAlign,
      textColor: colors == null ? void 0 : colors.textColor,
      textDecoration: __spreadValues({
        line: TextDecorationLine.None
      }, textDecoration),
      textSize,
      textWeight,
      states,
      children
    }) : /* @__PURE__ */ jsx$2(Fragment, {
      children
    })
  }));
});
var si$1 = Object.create;
var P$1 = Object.defineProperty;
var ui$1 = Object.getOwnPropertyDescriptor;
var ri$1 = Object.getOwnPropertyNames;
var ti$1 = Object.getPrototypeOf, li$1 = Object.prototype.hasOwnProperty;
var mi$1 = (a, l2, c2) => l2 in a ? P$1(a, l2, { enumerable: true, configurable: true, writable: true, value: c2 }) : a[l2] = c2;
var oi$1 = (a) => P$1(a, "__esModule", { value: true });
var U = (a, l2) => () => (l2 || a((l2 = { exports: {} }).exports, l2), l2.exports);
var ci$1 = (a, l2, c2, A2) => {
  if (l2 && typeof l2 == "object" || typeof l2 == "function")
    for (let o2 of ri$1(l2))
      !li$1.call(a, o2) && (c2 || o2 !== "default") && P$1(a, o2, { get: () => l2[o2], enumerable: !(A2 = ui$1(l2, o2)) || A2.enumerable });
  return a;
}, L$1 = (a, l2) => ci$1(oi$1(P$1(a != null ? si$1(ti$1(a)) : {}, "default", !l2 && a && a.__esModule ? { get: () => a.default, enumerable: true } : { value: a, enumerable: true })), a);
var h$4 = (a, l2, c2) => (mi$1(a, typeof l2 != "symbol" ? l2 + "" : l2, c2), c2);
var Ge$1 = U((qe2) => {
  var Ii2 = /^[-!#$%&'*+\/0-9=?A-Z^_a-z{|}~](\.?[-!#$%&'*+\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\.?[a-zA-Z0-9])*\.[a-zA-Z](-?[a-zA-Z0-9])+$/;
  qe2.validate = function(a) {
    if (!a || a.length > 254)
      return false;
    var l2 = Ii2.test(a);
    if (!l2)
      return false;
    var c2 = a.split("@");
    if (c2[0].length > 64)
      return false;
    var A2 = c2[1].split(".");
    return !A2.some(function(o2) {
      return o2.length > 63;
    });
  };
});
var F$1 = U((c_, we2) => {
  we2.exports = { error: { length: "Length should be a valid positive number", password: "Password should be a valid string" }, regex: { digits: "(\\d.*)", letters: "([a-zA-Z].*)", symbols: "([`~\\!@#\\$%\\^\\&\\*\\(\\)\\-_\\=\\+\\[\\{\\}\\]\\\\|;:\\'\",<.>\\/\\?\u20AC\xA3\xA5\u20B9\xA7\xB1].*)", spaces: "([\\s].*)" } };
});
var xe$1 = U((A_, Ke2) => {
  var M2 = F$1().regex;
  function B2(a, l2) {
    if (l2 && l2 > 1) {
      let c2 = parseInt(l2, 10);
      return new RegExp(a + "{" + c2 + ",}").test(this.password) === this.positive;
    }
    return new RegExp(a).test(this.password) === this.positive;
  }
  Ke2.exports = { not: function(l2) {
    return this.positive = false, l2 ? B2.call(this, l2) : true;
  }, has: function(l2) {
    return this.positive = true, l2 ? B2.call(this, l2) : true;
  }, is: function() {
    return this.positive = true, true;
  }, min: function(l2) {
    return this.password.length >= l2;
  }, max: function(l2) {
    return this.password.length <= l2;
  }, digits: function(l2) {
    return B2.call(this, M2.digits, l2);
  }, letters: function(l2) {
    return B2.call(this, M2.letters, l2);
  }, uppercase: function(l2) {
    if (l2 && l2 > 1) {
      let c2 = 0, A2 = 0;
      for (; A2 < l2 && c2 < this.password.length; ) {
        let o2 = this.password.charAt(c2);
        o2 !== o2.toLowerCase() && A2++, c2++;
      }
      return A2 === l2 === this.positive;
    }
    return this.password !== this.password.toLowerCase() === this.positive;
  }, lowercase: function(l2) {
    if (l2 && l2 > 1) {
      let c2 = 0, A2 = 0;
      for (; A2 < l2 && c2 < this.password.length; ) {
        let o2 = this.password.charAt(c2);
        o2 !== o2.toUpperCase() && A2++, c2++;
      }
      return A2 === l2 === this.positive;
    }
    return this.password !== this.password.toUpperCase() === this.positive;
  }, symbols: function(l2) {
    return B2.call(this, M2.symbols, l2);
  }, spaces: function(l2) {
    return B2.call(this, M2.spaces, l2);
  }, oneOf: function(l2) {
    return l2.indexOf(this.password) >= 0 === this.positive;
  } };
});
var He$1 = U((d_, Oe2) => {
  Oe2.exports = function(a, l2, c2) {
    let A2 = c2 ? gi2 : hi2;
    return A2[a] && A2[a](l2);
  };
  var hi2 = { min: (a) => `The string should have a minimum length of ${a} character${f2(a)}`, max: (a) => `The string should have a maximum length of ${a} character${f2(a)}`, letters: (a = 1) => `The string should have a minimum of ${a} letter${f2(a)}`, digits: (a = 1) => `The string should have a minimum of ${a} digit${f2(a)}`, uppercase: (a = 1) => `The string should have a minimum of ${a} uppercase letter${f2(a)}`, lowercase: (a = 1) => `The string should have a minimum of ${a} lowercase letter${f2(a)}`, symbols: (a = 1) => `The string should have a minimum of ${a} symbol${f2(a)}`, spaces: (a = 1) => `The string should have a minimum of ${a} space${f2(a)}`, oneOf: (a) => `The string should be ${a.length > 1 ? `one of ${a.slice(0, -1).join(", ")} and ` : ""}${a[a.length - 1]}`, has: (a) => `The string should have pattern '${a}'`, not: (a) => `The string should not have pattern '${a}'` }, gi2 = { min: (a) => `The string should have a maximum length of ${a} character${f2(a)}`, max: (a) => `The string should have a minimum length of ${a} character${f2(a)}`, letters: (a = 0) => `The string should ${a === 0 ? "not have" : `have a maximum of ${a}`} letter${f2(a)}`, digits: (a = 0) => `The string should ${a === 0 ? "not have" : `have a maximum of ${a}`} digit${f2(a)}`, uppercase: (a = 0) => `The string should ${a === 0 ? "not have" : `have a maximum of ${a}`} uppercase letter${f2(a)}`, lowercase: (a = 0) => `The string should ${a === 0 ? "not have" : `have a maximum of ${a}`} lowercase letter${f2(a)}`, symbols: (a = 0) => `The string should ${a === 0 ? "not have" : `have a maximum of ${a}`} symbol${f2(a)}`, spaces: (a = 0) => `The string should ${a === 0 ? "not have" : `have a maximum of ${a}`} space${f2(a)}`, oneOf: (a) => `The string should not be ${a.length > 1 ? `one of ${a.slice(0, -1).join(", ")} and ` : ""}${a[a.length - 1]}`, has: (a) => `The string should not have pattern '${a}'`, not: (a) => `The string should have pattern '${a}'` };
  function f2(a) {
    return a === 1 ? "" : "s";
  }
});
var We$1 = U((I_, ze2) => {
  var fi2 = xe$1(), _i2 = F$1().error, Ei2 = He$1();
  function S(a) {
    let l2 = Number(a);
    if (isNaN(l2) || !Number.isInteger(l2) || l2 < 1)
      throw new Error(_i2.length);
  }
  function je2(a) {
    return fi2[a.method].apply(this, a.arguments);
  }
  function _(a, l2, c2) {
    return this.properties.push({ method: a, arguments: l2, description: c2 }), this;
  }
  var Ve2 = class {
    constructor() {
      this.properties = [];
    }
    validate(l2, c2) {
      return this.list = Boolean(c2 && c2.list), this.details = Boolean(c2 && c2.details), this.password = String(l2), this.positive = true, this.list || this.details ? this.properties.reduce((A2, o2) => {
        if (!je2.call(this, o2)) {
          var I2 = o2.method;
          if (this.details) {
            I2 = { validation: o2.method }, o2.arguments && o2.arguments[0] && (I2.arguments = o2.arguments[0]), !this.positive && o2.method !== "not" && (I2.inverted = true);
            var d2 = o2.arguments && o2.arguments[1], g2 = d2 || Ei2(o2.method, I2.arguments, I2.inverted);
            I2.message = g2;
          }
          return A2.concat(I2);
        }
        return A2;
      }, []) : this.properties.every(je2.bind(this));
    }
    letters(l2) {
      return l2 && S(l2), _.call(this, "letters", arguments);
    }
    digits(l2) {
      return l2 && S(l2), _.call(this, "digits", arguments);
    }
    symbols(l2) {
      return l2 && S(l2), _.call(this, "symbols", arguments);
    }
    min(l2) {
      return S(l2), _.call(this, "min", arguments);
    }
    max(l2) {
      return S(l2), _.call(this, "max", arguments);
    }
    lowercase(l2) {
      return l2 && S(l2), _.call(this, "lowercase", arguments);
    }
    uppercase(l2) {
      return l2 && S(l2), _.call(this, "uppercase", arguments);
    }
    spaces(l2) {
      return l2 && S(l2), _.call(this, "spaces", arguments);
    }
    has() {
      return _.call(this, "has", arguments);
    }
    not() {
      return _.call(this, "not", arguments);
    }
    is() {
      return _.call(this, "is", arguments);
    }
    oneOf() {
      return _.call(this, "oneOf", arguments);
    }
  };
  ze2.exports = Ve2;
});
var q$4;
(function(a) {
  a.Comment = "comment", a.Create = "create", a.Delete = "delete", a.Edit = "edit", a.Invoice = "invoice", a.Message = "message", a.PageView = "pageView", a.Paid = "paid", a.Payment = "payment", a.Purchase = "purchase", a.Referral = "referral", a.Renewal = "renewal", a.Signup = "signup", a.Subscription = "subscription", a.Upgrade = "upgrade";
})(q$4 || (q$4 = {}));
var G$2;
(function(a) {
  a.Business = "business", a.Engineering = "engineering", a.Exception = "exception", a.LogMessage = "log-message", a.Marketing = "marketing", a.PageLeave = "page-leave", a.PageView = "page-view", a.Product = "product", a.QualityManagement = "quality-management", a.UserAccess = "user-access", a.UserLogin = "user-login", a.UserLogout = "user-logout", a.UserSignup = "user-signup", a.UserPreferencesChanged = "user-preferences-changed", a.WebsiteVisit = "website-visit";
})(G$2 || (G$2 = {}));
var w$2;
(function(a) {
  a.CloseTab = "close-tab", a.ExternalLink = "external-link", a.NavigateAway = "navigate-away", a.Unknown = "unknown";
})(w$2 || (w$2 = {}));
var K$1;
(function(a) {
  a.Ecs = "Ecs";
})(K$1 || (K$1 = {}));
var x$3;
(function(a) {
  a.Finished = "Finished", a.Queued = "Queued", a.Running = "Running", a.Started = "Started";
})(x$3 || (x$3 = {}));
var O;
(function(a) {
  a.Mobile = "mobile", a.TV = "tv", a.Watch = "watch", a.Web = "web";
})(O || (O = {}));
var H$1;
(function(a) {
  a.Development = "Development", a.NonProduction = "NonProduction", a.Production = "Production";
})(H$1 || (H$1 = {}));
var j$1;
(function(a) {
  a.Completed = "completed", a.Started = "started", a.Uncompleted = "uncompleted";
})(j$1 || (j$1 = {}));
var V$1;
(function(a) {
  a.Build = "Build", a.Deployment = "Deployment", a.Test = "Test";
})(V$1 || (V$1 = {}));
var z$2;
(function(a) {
  a.Canceled = "Canceled", a.Completed = "Completed", a.Failed = "Failed", a.Running = "Running", a.Queued = "Queued", a.Waiting = "Waiting";
})(z$2 || (z$2 = {}));
var W;
(function(a) {
  a.Canceled = "Canceled", a.Completed = "Completed", a.Failed = "Failed", a.Running = "Running", a.Queued = "Queued", a.Waiting = "Waiting";
})(W || (W = {}));
var R$1;
(function(a) {
  a.ForgotPassword = "forgot_password", a.Index = "index", a.Login = "login", a.PageNotFound = "404", a.Signup = "signup", a.VerifyCode = "verify_code";
})(R$1 || (R$1 = {}));
var J$1;
(function(a) {
  a.Info = "info", a.Warning = "warning", a.Error = "error", a.Success = "success";
})(J$1 || (J$1 = {}));
var Z;
(function(a) {
  a.Details = "details", a.Dialog = "dialog";
})(Z || (Z = {}));
var Y;
(function(a) {
  a.Info = "info", a.Warning = "warning", a.Error = "error", a.Success = "success";
})(Y || (Y = {}));
var $$1;
(function(a) {
  a.AccountBalance = "AccountBalance", a.UserAssets = "UserAssets", a.UserCreditCardDebt = "UserCreditCardDebt", a.UserCreditLimit = "UserCreditLimit", a.UserCreditUtilization = "UserCreditUtilization", a.UserDebt = "UserDebt", a.UserInvestments = "UserInvestments", a.UserRetirement = "UserRetirement", a.UserSavings = "UserSavings";
})($$1 || ($$1 = {}));
var Q;
(function(a) {
  a.DateTime = "date_time", a.True = "true", a.False = "false", a.UniqueId = "unique_id";
})(Q || (Q = {}));
var X$1;
(function(a) {
  a.DomainModel = "domain_entity", a.GenericModel = "generic_entity";
})(X$1 || (X$1 = {}));
var C$1;
(function(a) {
  a.AirportCode = "airport-code", a.BankIDCode = "bank-id-code", a.BitcoinAddress = "bitcoin-address", a.Boolean = "boolean", a.City = "city", a.Color = "color", a.CountryCode = "country-code", a.CreditCard = "credit-card", a.CurrencyAmount = "currency-amount", a.CurrencyCode = "currency-code", a.DataURI = "data-uri", a.Date = "date", a.DateRange = "date-range", a.DateTime = "date-time", a.DayOfMonth = "day-of-month", a.DomainName = "domain-name", a.EmailAddress = "email-address", a.EthereumAddress = "ethereum-address", a.EAN = "european-article-number", a.EIN = "employer-identification-number", a.Float = "float", a.GeographicCoordinate = "geographic-coordinate", a.GeographicCoordinates = "geographic-coordinates", a.GitRepositoryURL = "git-repository-url", a.HSLColor = "hsl-color", a.HexColor = "hex-color", a.Hexadecimal = "hexadecimal", a.IBAN = "international-bank-account-number", a.IMEI = "international-mobile-equipment-identifier", a.IPAddress = "ip-address", a.IPAddressRange = "ip-address-range", a.ISBN = "international-standard-book-number", a.ISIN = "international-stock-number", a.ISMN = "international-standard-music-number", a.ISSN = "international-standard-serial-number", a.ISO8601 = "iso-8601", a.ISO31661Alpha2 = "iso-31661-alpha-2", a.ISO31661Alpha3 = "iso-31661-alpha-3", a.ISO4217 = "iso-4217", a.Image = "image", a.Integer = "integer", a.JSON = "json", a.LanguageCode = "language-code", a.LicensePlateNumber = "license-plate-number", a.LongText = "long-text", a.MD5 = "md5", a.Markdown = "markdown", a.Menu = "menu", a.Number = "number", a.MACAddress = "mac-address", a.MagnetURI = "magnet-uri", a.MimeType = "mime-type", a.Month = "month", a.Password = "password", a.PassportNumber = "passport-number", a.Percent = "percent", a.PhoneNumber = "phone-number", a.Port = "port", a.PostalCode = "postal-code", a.Province = "province", a.RFC3339 = "rfc-3339", a.RGBColor = "rgb-color", a.SemanticVersion = "semantic-version", a.SSN = "social-security-number", a.State = "state", a.StreetAddress = "street-address", a.String = "string", a.Tags = "tags", a.TaxIDNumber = "tax-id-number", a.Time = "time", a.TimeOfDay = "time-of-day", a.TimeRange = "time-range", a.TimezoneRegion = "timezone-region", a.URL = "url", a.URLPath = "url-path", a.UUID = "uuid", a.VATIDNumber = "value-added-tax-id-number", a.VerificationCode = "verification-code", a.Video = "video", a.Weekday = "weekday", a.Year = "year";
})(C$1 || (C$1 = {}));
var aa;
(function(a) {
  a.Critical = "Critical", a.Error = "Error", a.Fatal = "Fatal", a.Warning = "Warning";
})(aa || (aa = {}));
var i$2;
(function(a) {
  a.Contains = "contains", a.HasCharacterCount = "has-character-count", a.HasNumberCount = "has-number-count", a.HasLetterCount = "has-letter-count", a.HasLowercaseCount = "has-lowercase-count", a.HasSpacesCount = "has-spaces-count", a.HasSymbolCount = "has-symbol-count", a.HasUppercaseCount = "has-uppercase-count", a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsAirport = "is-airport", a.IsAlpha = "is-alpha", a.IsAlphanumeric = "is-alphanumeric", a.IsAlgorithmHash = "is-algorithm-hash", a.IsAscii = "is-ascii", a.IsBase64 = "is-base-64", a.IsBefore = "is-before", a.IsBeforeOrAfter = "is-before-or-after", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsBIC = "is-bic", a.IsBitcoinAddress = "is-bitcoin-address", a.IsBoolean = "is-boolean", a.IsColor = "is-color", a.IsComplexEnough = "is-complex-enough", a.IsCountry = "is-country", a.IsCreditCard = "is-credit-card", a.IsCurrency = "is-currency", a.IsDataURI = "is-data-uri", a.IsDate = "is-date", a.IsDateRange = "is-date-range", a.IsDateTime = "is-date-time", a.IsDayOfMonth = "is-day-of-month", a.IsDecimal = "is-decimal", a.IsDivisibleBy = "is-divisible-by", a.IsDomainName = "is-domain-name", a.IsEmailAddress = "is-email-address", a.IsEthereumAddress = "is-ethereum-address", a.IsEAN = "is-ean", a.IsEIN = "is-ein", a.IsEqual = "is-equal", a.IsEvenNumber = "is-even-number", a.IsFloat = "is-float", a.IsIBAN = "is-iban", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsHSLColor = "is-hsl-color", a.IsHexColor = "is-hex-color", a.IsHexadecimal = "is-hexadecimal", a.IsIdentityCardCode = "is-identity-card-code", a.IsIMEI = "is-imei", a.IsInIPAddressRange = "is-in-ip-address-range", a.IsInList = "is-in-list", a.IsInTheLast = "is-in-the-last", a.IsInteger = "is-integer", a.IsIPAddress = "is-ip-address", a.IsIPAddressRange = "is-ip-address-range", a.IsISBN = "is-isbn", a.IsISIN = "is-isin", a.IsISMN = "is-ismn", a.IsISRC = "is-isrc", a.IsISSN = "is-issn", a.IsISO4217 = "is-iso-4217", a.IsISO8601 = "is-iso-8601", a.IsISO31661Alpha2 = "is-iso-31661-alpha-2", a.IsISO31661Alpha3 = "is-iso-31661-alpha-3", a.IsJSON = "is-json", a.IsLanguage = "is-language", a.IsLatitude = "is-latitude", a.IsLongitude = "is-longitude", a.IsLengthEqual = "is-length-equal", a.IsLengthGreaterThan = "is-length-greater-than", a.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal", a.IsLengthLessThan = "is-length-less-than", a.IsLengthLessThanOrEqual = "is-length-less-than-or-equal", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsLicensePlateNumber = "is-license-plate-number", a.IsLowercase = "is-lowercase", a.IsOctal = "is-octal", a.IsMACAddress = "is-mac-address", a.IsMD5 = "is-md5", a.IsMagnetURI = "is-magnet-uri", a.IsMarkdown = "is-markdown", a.IsMimeType = "is-mime-type", a.IsMonth = "is-month", a.IsNegativeNumber = "is-negative-number", a.IsNotDate = "is-not-date", a.IsNotEqual = "is-not-equal", a.IsNotInIPAddressRange = "is-not-in-ip-address-range", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsNotRegexMatch = "is-not-regex-match", a.IsNotToday = "is-not-today", a.IsNumber = "is-number", a.IsNumeric = "is-numeric", a.IsOddNumber = "is-odd-number", a.IsPassportNumber = "is-passport-number", a.IsPhoneNumber = "is-phone-number", a.IsPort = "is-port", a.IsPositiveNumber = "is-positive-number", a.IsPostalCode = "is-postal-code", a.IsProvince = "is-province", a.IsRGBColor = "is-rgb-color", a.IsRegexMatch = "is-regex-match", a.IsRequired = "is-required", a.IsSemanticVersion = "is-semantic-version", a.IsSlug = "is-slug", a.IsSSN = "is-ssn", a.IsState = "is-state", a.IsStreetAddress = "is-street-address", a.IsString = "is-string", a.IsStrongPassword = "is-strong-password", a.IsTags = "is-tags", a.IsTaxIDNumber = "is-tax-id-number", a.IsThisMonth = "is-this-month", a.IsThisQuarter = "is-this-quarter", a.IsThisWeek = "is-this-week", a.IsThisWeekend = "is-this-weekend", a.IsThisYear = "is-this-year", a.IsTime = "is-time", a.IsTimeOfDay = "is-time-of-day", a.IsTimeRange = "is-time-range", a.IsToday = "is-today", a.IsURL = "is-url", a.IsUUID = "is-uuid", a.IsUppercase = "is-uppercase", a.IsUsernameAvailable = "is-username-available", a.IsValidStreetAddress = "is-valid-street-address", a.IsVATIDNumber = "is-vat-id-number", a.IsWeekday = "is-weekday", a.IsWeekend = "is-weekend", a.IsYear = "is-year";
})(i$2 || (i$2 = {}));
var ea;
(function(a) {
  a.IsAuthenticated = "is-authenticated", a.IsNotAuthenticated = "is-not-authenticated", a.IsUsernameAvailable = "is-username-available", a.PasswordMismatch = "password-mismatch";
})(ea || (ea = {}));
var ia;
(function(a) {
  a[a.IsHSLColor = i$2.IsHSLColor] = "IsHSLColor", a[a.IsHexColor = i$2.IsHexColor] = "IsHexColor", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsRGBColor = i$2.IsRGBColor] = "IsRGBColor", a[a.IsString = i$2.IsString] = "IsString";
})(ia || (ia = {}));
var na;
(function(a) {
  a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsCurrency = i$2.IsCurrency] = "IsCurrency", a[a.IsDecimal = i$2.IsDecimal] = "IsDecimal", a[a.IsDivisibleBy = i$2.IsDivisibleBy] = "IsDivisibleBy", a[a.IsEvenNumber = i$2.IsEvenNumber] = "IsEvenNumber", a[a.IsFloat = i$2.IsFloat] = "IsFloat", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsInteger = i$2.IsInteger] = "IsInteger", a[a.IsISO8601 = i$2.IsISO8601] = "IsISO8601", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsNegativeNumber = i$2.IsNegativeNumber] = "IsNegativeNumber", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsOddNumber = i$2.IsOddNumber] = "IsOddNumber", a[a.IsPositiveNumber = i$2.IsPositiveNumber] = "IsPositiveNumber";
})(na || (na = {}));
var sa;
(function(a) {
  a[a.IsBitcoinAddress = i$2.IsBitcoinAddress] = "IsBitcoinAddress", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(sa || (sa = {}));
var ua;
(function(a) {
  a[a.IsEthereumAddress = i$2.IsEthereumAddress] = "IsEthereumAddress", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(ua || (ua = {}));
var ra;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsJSON = i$2.IsJSON] = "IsJSON", a[a.IsLanguage = i$2.IsLanguage] = "IsLanguage", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(ra || (ra = {}));
var ta;
(function(a) {
  a[a.IsAlpha = i$2.IsAlpha] = "IsAlpha", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(ta || (ta = {}));
var la;
(function(a) {
  a[a.IsAlpha = i$2.IsAlpha] = "IsAlpha", a[a.IsCountry = i$2.IsCountry] = "IsCountry", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(la || (la = {}));
var ma;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsFloat = i$2.IsFloat] = "IsFloat", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumeric = i$2.IsNumeric] = "IsNumeric";
})(ma || (ma = {}));
var oa;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsFloat = i$2.IsFloat] = "IsFloat", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumeric = i$2.IsNumeric] = "IsNumeric";
})(oa || (oa = {}));
var ca;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsPostalCode = i$2.IsPostalCode] = "IsPostalCode", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(ca || (ca = {}));
var Aa;
(function(a) {
  a[a.IsAlpha = i$2.IsAlpha] = "IsAlpha", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsProvince = i$2.IsProvince] = "IsProvince", a[a.IsString = i$2.IsString] = "IsString";
})(Aa || (Aa = {}));
var da;
(function(a) {
  a[a.IsAlpha = i$2.IsAlpha] = "IsAlpha", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsState = i$2.IsState] = "IsState", a[a.IsString = i$2.IsString] = "IsString";
})(da || (da = {}));
var Ia;
(function(a) {
  a[a.IsAlphanumeric = i$2.IsAlphanumeric] = "IsAlphanumeric", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString", a[a.IsStreetAddress = i$2.IsStreetAddress] = "IsStreetAddress";
})(Ia || (Ia = {}));
var ha;
(function(a) {
  a[a.IsAirport = i$2.IsAirport] = "IsAirport", a[a.IsAlpha = i$2.IsAlpha] = "IsAlpha", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(ha || (ha = {}));
var ga;
(function(a) {
  a[a.IsAlgorithmHash = i$2.IsAlgorithmHash] = "IsAlgorithmHash", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(ga || (ga = {}));
var fa;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsSemanticVersion = i$2.IsSemanticVersion] = "IsSemanticVersion", a[a.IsString = i$2.IsString] = "IsString";
})(fa || (fa = {}));
var _a;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString", a[a.IsUUID = i$2.IsUUID] = "IsUUID";
})(_a || (_a = {}));
var Ea;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsMD5 = i$2.IsMD5] = "IsMD5", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(Ea || (Ea = {}));
var Sa;
(function(a) {
  a[a.IsBoolean = i$2.IsBoolean] = "IsBoolean", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(Sa || (Sa = {}));
var Ta;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsAfterOrEqual = i$2.IsAfterOrEqual] = "IsAfterOrEqual", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrEqual = i$2.IsBeforeOrEqual] = "IsBeforeOrEqual", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsDate = i$2.IsDate] = "IsDate", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotDate = i$2.IsNotDate] = "IsNotDate", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNotToday = i$2.IsNotToday] = "IsNotToday", a[a.IsThisWeek = i$2.IsThisWeek] = "IsThisWeek", a[a.IsThisMonth = i$2.IsThisMonth] = "IsThisMonth", a[a.IsThisQuarter = i$2.IsThisQuarter] = "IsThisQuarter", a[a.IsThisYear = i$2.IsThisYear] = "IsThisYear", a[a.IsToday = i$2.IsToday] = "IsToday", a[a.IsWeekend = i$2.IsWeekend] = "IsWeekend";
})(Ta || (Ta = {}));
var pa;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrAfter = i$2.IsBeforeOrAfter] = "IsBeforeOrAfter", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsDate = i$2.IsDate] = "IsDate", a[a.IsDateRange = i$2.IsDateRange] = "IsDateRange", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(pa || (pa = {}));
var ba;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsAfterOrEqual = i$2.IsAfterOrEqual] = "IsAfterOrEqual", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrEqual = i$2.IsBeforeOrEqual] = "IsBeforeOrEqual", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsDate = i$2.IsDate] = "IsDate", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotDate = i$2.IsNotDate] = "IsNotDate", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNotToday = i$2.IsNotToday] = "IsNotToday", a[a.IsThisWeek = i$2.IsThisWeek] = "IsThisWeek", a[a.IsThisMonth = i$2.IsThisMonth] = "IsThisMonth", a[a.IsThisQuarter = i$2.IsThisQuarter] = "IsThisQuarter", a[a.IsThisYear = i$2.IsThisYear] = "IsThisYear", a[a.IsToday = i$2.IsToday] = "IsToday", a[a.IsWeekend = i$2.IsWeekend] = "IsWeekend";
})(ba || (ba = {}));
var va;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsAfterOrEqual = i$2.IsAfterOrEqual] = "IsAfterOrEqual", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrEqual = i$2.IsBeforeOrEqual] = "IsBeforeOrEqual", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsDayOfMonth = i$2.IsDayOfMonth] = "IsDayOfMonth", a[a.IsEvenNumber = i$2.IsEvenNumber] = "IsEvenNumber", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsInteger = i$2.IsInteger] = "IsInteger", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsOddNumber = i$2.IsOddNumber] = "IsOddNumber", a[a.IsToday = i$2.IsToday] = "IsToday", a[a.IsWeekday = i$2.IsWeekday] = "IsWeekday", a[a.IsWeekend = i$2.IsWeekend] = "IsWeekend";
})(va || (va = {}));
var Ba;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsAfterOrEqual = i$2.IsAfterOrEqual] = "IsAfterOrEqual", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrEqual = i$2.IsBeforeOrEqual] = "IsBeforeOrEqual", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsEvenNumber = i$2.IsEvenNumber] = "IsEvenNumber", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsInteger = i$2.IsInteger] = "IsInteger", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsMonth = i$2.IsMonth] = "IsMonth", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsOddNumber = i$2.IsOddNumber] = "IsOddNumber", a[a.IsThisMonth = i$2.IsThisMonth] = "IsThisMonth";
})(Ba || (Ba = {}));
var Na;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsAfterOrEqual = i$2.IsAfterOrEqual] = "IsAfterOrEqual", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrEqual = i$2.IsBeforeOrEqual] = "IsBeforeOrEqual", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsTime = i$2.IsTime] = "IsTime";
})(Na || (Na = {}));
var Ua;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrAfter = i$2.IsBeforeOrAfter] = "IsBeforeOrAfter", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsTime = i$2.IsTime] = "IsTime", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsTimeRange = i$2.IsTimeRange] = "IsTimeRange";
})(Ua || (Ua = {}));
var Da;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrAfter = i$2.IsBeforeOrAfter] = "IsBeforeOrAfter", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsTimeOfDay = i$2.IsTimeOfDay] = "IsTimeOfDay", a[a.IsTimeRange = i$2.IsTimeRange] = "IsTimeRange";
})(Da || (Da = {}));
var Pa;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsAfterOrEqual = i$2.IsAfterOrEqual] = "IsAfterOrEqual", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrEqual = i$2.IsBeforeOrEqual] = "IsBeforeOrEqual", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsEvenNumber = i$2.IsEvenNumber] = "IsEvenNumber", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsOddNumber = i$2.IsOddNumber] = "IsOddNumber", a[a.IsWeekday = i$2.IsWeekday] = "IsWeekday", a[a.IsWeekend = i$2.IsWeekend] = "IsWeekend";
})(Pa || (Pa = {}));
var ka;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsAfterOrEqual = i$2.IsAfterOrEqual] = "IsAfterOrEqual", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrEqual = i$2.IsBeforeOrEqual] = "IsBeforeOrEqual", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsEvenNumber = i$2.IsEvenNumber] = "IsEvenNumber", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsInteger = i$2.IsInteger] = "IsInteger", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsOddNumber = i$2.IsOddNumber] = "IsOddNumber", a[a.IsThisYear = i$2.IsThisYear] = "IsThisYear", a[a.IsYear = i$2.IsYear] = "IsYear";
})(ka || (ka = {}));
var Ma;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsHexadecimal = i$2.IsHexadecimal] = "IsHexadecimal", a[a.IsLengthEqual = i$2.IsLengthEqual] = "IsLengthEqual", a[a.IsLengthGreaterThan = i$2.IsLengthGreaterThan] = "IsLengthGreaterThan", a[a.IsLengthGreaterThanOrEqual = i$2.IsLengthGreaterThanOrEqual] = "IsLengthGreaterThanOrEqual", a[a.IsLengthLessThan = i$2.IsLengthLessThan] = "IsLengthLessThan", a[a.IsLengthLessThanOrEqual = i$2.IsLengthLessThanOrEqual] = "IsLengthLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(Ma || (Ma = {}));
var ya;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsJSON = i$2.IsJSON] = "IsJSON", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(ya || (ya = {}));
var Fa;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsMarkdown = i$2.IsMarkdown] = "IsMarkdown", a[a.IsString = i$2.IsString] = "IsString";
})(Fa || (Fa = {}));
var La;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(La || (La = {}));
var qa;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(qa || (qa = {}));
var Ga;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsDataURI = i$2.IsDataURI] = "IsDataURI", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(Ga || (Ga = {}));
var wa;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsDomainName = i$2.IsDomainName] = "IsDomainName", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(wa || (wa = {}));
var Ka;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEmailAddress = i$2.IsEmailAddress] = "IsEmailAddress", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(Ka || (Ka = {}));
var xa;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsIPAddress = i$2.IsIPAddress] = "IsIPAddress", a[a.IsInIPAddressRange = i$2.IsInIPAddressRange] = "IsInIPAddressRange", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotInIPAddressRange = i$2.IsNotInIPAddressRange] = "IsNotInIPAddressRange", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(xa || (xa = {}));
var Oa;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsIPAddressRange = i$2.IsIPAddressRange] = "IsIPAddressRange", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotInIPAddressRange = i$2.IsNotInIPAddressRange] = "IsNotInIPAddressRange", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(Oa || (Oa = {}));
var Ha;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsInteger = i$2.IsInteger] = "IsInteger", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull";
})(Ha || (Ha = {}));
var ja$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsMACAddress = i$2.IsMACAddress] = "IsMACAddress", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(ja$1 || (ja$1 = {}));
var Va$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsMagnetURI = i$2.IsMagnetURI] = "IsMagnetURI", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(Va$1 || (Va$1 = {}));
var za$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsMimeType = i$2.IsMimeType] = "IsMimeType", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(za$1 || (za$1 = {}));
var Wa$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString", a[a.IsSlug = i$2.IsSlug] = "IsSlug";
})(Wa$1 || (Wa$1 = {}));
var Ra$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString", a[a.IsURL = i$2.IsURL] = "IsURL";
})(Ra$1 || (Ra$1 = {}));
var Ja$1;
(function(a) {
  a[a.IsAfter = i$2.IsAfter] = "IsAfter", a[a.IsAfterOrEqual = i$2.IsAfterOrEqual] = "IsAfterOrEqual", a[a.IsBefore = i$2.IsBefore] = "IsBefore", a[a.IsBeforeOrEqual = i$2.IsBeforeOrEqual] = "IsBeforeOrEqual", a[a.IsBetween = i$2.IsBetween] = "IsBetween", a[a.IsDecimal = i$2.IsDecimal] = "IsDecimal", a[a.IsDivisibleBy = i$2.IsDivisibleBy] = "IsDivisibleBy", a[a.IsEAN = i$2.IsEAN] = "IsEAN", a[a.IsEIN = i$2.IsEIN] = "IsEIN", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsEvenNumber = i$2.IsEvenNumber] = "IsEvenNumber", a[a.IsFloat = i$2.IsFloat] = "IsFloat", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsInt = i$2.IsInteger] = "IsInt", a[a.IsISBN = i$2.IsISBN] = "IsISBN", a[a.IsISMN = i$2.IsISMN] = "IsISMN", a[a.IsISSN = i$2.IsISSN] = "IsISSN", a[a.IsLatitude = i$2.IsLatitude] = "IsLatitude", a[a.IsLongitude = i$2.IsLongitude] = "IsLongitude", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsMACAddress = i$2.IsMACAddress] = "IsMACAddress", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsNegativeNumber = i$2.IsNegativeNumber] = "IsNegativeNumber", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsOddNumber = i$2.IsOddNumber] = "IsOddNumber", a[a.IsPassportNumber = i$2.IsPassportNumber] = "IsPassportNumber", a[a.IsPhoneNumber = i$2.IsPhoneNumber] = "IsPhoneNumber", a[a.IsPort = i$2.IsPort] = "IsPort", a[a.IsPositiveNumber = i$2.IsPositiveNumber] = "IsPositiveNumber", a[a.IsPostalCode = i$2.IsPostalCode] = "IsPostalCode", a[a.IsSemanticVersion = i$2.IsSemanticVersion] = "IsSemanticVersion", a[a.IsSSN = i$2.IsSSN] = "IsSSN", a[a.IsTaxIDNumber = i$2.IsTaxIDNumber] = "IsTaxIDNumber", a[a.IsUUID = i$2.IsUUID] = "IsUUID", a[a.IsVATIDNumber = i$2.IsVATIDNumber] = "IsVATIDNumber";
})(Ja$1 || (Ja$1 = {}));
var Za$1;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsFloat = i$2.IsFloat] = "IsFloat", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsNumeric = i$2.IsNumeric] = "IsNumeric";
})(Za$1 || (Za$1 = {}));
var Ya$1;
(function(a) {
  a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInteger = i$2.IsInteger] = "IsInteger", a[a.IsGreaterThan = i$2.IsGreaterThan] = "IsGreaterThan", a[a.IsGreaterThanOrEqual = i$2.IsGreaterThanOrEqual] = "IsGreaterThanOrEqual", a[a.IsLessThan = i$2.IsLessThan] = "IsLessThan", a[a.IsLessThanOrEqual = i$2.IsLessThanOrEqual] = "IsLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsNumeric = i$2.IsNumeric] = "IsNumeric";
})(Ya$1 || (Ya$1 = {}));
var $a$1;
(function(a) {
  a[a.IsCreditCard = i$2.IsCreditCard] = "IsCreditCard", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsLengthEqual = i$2.IsLengthEqual] = "IsLengthEqual", a[a.IsLengthGreaterThan = i$2.IsLengthGreaterThan] = "IsLengthGreaterThan", a[a.IsLengthGreaterThanOrEqual = i$2.IsLengthGreaterThanOrEqual] = "IsLengthGreaterThanOrEqual", a[a.IsLengthLessThan = i$2.IsLengthLessThan] = "IsLengthLessThan", a[a.IsLengthLessThanOrEqual = i$2.IsLengthLessThanOrEqual] = "IsLengthLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsRegexMatch = i$2.IsRegexMatch] = "IsRegexMatch", a[a.IsNotRegexMatch = i$2.IsNotRegexMatch] = "IsNotRegexMatch";
})($a$1 || ($a$1 = {}));
var Qa$1;
(function(a) {
  a[a.isEmailAddress = i$2.IsEmailAddress] = "isEmailAddress", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsLengthEqual = i$2.IsLengthEqual] = "IsLengthEqual", a[a.IsLengthGreaterThan = i$2.IsLengthGreaterThan] = "IsLengthGreaterThan", a[a.IsLengthGreaterThanOrEqual = i$2.IsLengthGreaterThanOrEqual] = "IsLengthGreaterThanOrEqual", a[a.IsLengthLessThan = i$2.IsLengthLessThan] = "IsLengthLessThan", a[a.IsLengthLessThanOrEqual = i$2.IsLengthLessThanOrEqual] = "IsLengthLessThanOrEqual", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsRegexMatch = i$2.IsRegexMatch] = "IsRegexMatch", a[a.IsNotRegexMatch = i$2.IsNotRegexMatch] = "IsNotRegexMatch";
})(Qa$1 || (Qa$1 = {}));
var Xa$1;
(function(a) {
  a[a.IsLicensePlateNumber = i$2.IsLicensePlateNumber] = "IsLicensePlateNumber", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNotRegexMatch = i$2.IsNotRegexMatch] = "IsNotRegexMatch", a[a.IsString = i$2.IsString] = "IsString", a[a.IsRegexMatch = i$2.IsRegexMatch] = "IsRegexMatch";
})(Xa$1 || (Xa$1 = {}));
var Ca$1;
(function(a) {
  a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsPassportNumber = i$2.IsPassportNumber] = "IsPassportNumber", a[a.IsString = i$2.IsString] = "IsString", a[a.IsRegexMatch = i$2.IsRegexMatch] = "IsRegexMatch";
})(Ca$1 || (Ca$1 = {}));
var ae$1;
(function(a) {
  a[a.IsComplexEnough = i$2.IsComplexEnough] = "IsComplexEnough", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNotRegexMatch = i$2.IsNotRegexMatch] = "IsNotRegexMatch", a[a.IsLengthGreaterThan = i$2.IsLengthGreaterThan] = "IsLengthGreaterThan", a[a.IsLengthGreaterThanOrEqual = i$2.IsLengthGreaterThanOrEqual] = "IsLengthGreaterThanOrEqual", a[a.IsLengthLessThan = i$2.IsLengthLessThan] = "IsLengthLessThan", a[a.IsLengthLessThanOrEqual = i$2.IsLengthLessThanOrEqual] = "IsLengthLessThanOrEqual", a[a.IsStrongPassword = i$2.IsStrongPassword] = "IsStrongPassword", a[a.IsString = i$2.IsString] = "IsString", a[a.IsRegexMatch = i$2.IsRegexMatch] = "IsRegexMatch";
})(ae$1 || (ae$1 = {}));
var ee$1;
(function(a) {
  a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNotRegexMatch = i$2.IsNotRegexMatch] = "IsNotRegexMatch", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsPhoneNumber = i$2.IsPhoneNumber] = "IsPhoneNumber", a[a.IsRegexMatch = i$2.IsRegexMatch] = "IsRegexMatch";
})(ee$1 || (ee$1 = {}));
var ie$1;
(function(a) {
  a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsSSN = i$2.IsSSN] = "IsSSN", a[a.IsString = i$2.IsString] = "IsString", a[a.IsRegexMatch = i$2.IsRegexMatch] = "IsRegexMatch";
})(ie$1 || (ie$1 = {}));
var ne$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsBIC = i$2.IsBIC] = "IsBIC", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(ne$1 || (ne$1 = {}));
var se$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEAN = i$2.IsEAN] = "IsEAN", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(se$1 || (se$1 = {}));
var ue$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEIN = i$2.IsEIN] = "IsEIN", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(ue$1 || (ue$1 = {}));
var re$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsIBAN = i$2.IsIBAN] = "IsIBAN", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(re$1 || (re$1 = {}));
var te$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsISBN = i$2.IsISBN] = "IsISBN", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(te$1 || (te$1 = {}));
var le$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsISIN = i$2.IsISIN] = "IsISIN", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(le$1 || (le$1 = {}));
var me$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsISMN = i$2.IsISMN] = "IsISMN", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(me$1 || (me$1 = {}));
var oe$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsISSN = i$2.IsISSN] = "IsISSN", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString";
})(oe$1 || (oe$1 = {}));
var ce$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString", a[a.IsTaxIDNumber = i$2.IsTaxIDNumber] = "IsTaxIDNumber";
})(ce$1 || (ce$1 = {}));
var Ae$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsNotEqual = i$2.IsNotEqual] = "IsNotEqual", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsString = i$2.IsString] = "IsString", a[a.IsVATIDNumber = i$2.IsVATIDNumber] = "IsVATIDNumber";
})(Ae$1 || (Ae$1 = {}));
var de$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.HasNumberCount = i$2.HasNumberCount] = "HasNumberCount", a[a.HasLowercaseCount = i$2.HasLowercaseCount] = "HasLowercaseCount", a[a.HasLetterCount = i$2.HasLetterCount] = "HasLetterCount", a[a.HasSpacesCount = i$2.HasSpacesCount] = "HasSpacesCount", a[a.HasSymbolCount = i$2.HasSymbolCount] = "HasSymbolCount", a[a.HasUppercaseCount = i$2.HasUppercaseCount] = "HasUppercaseCount", a[a.IsAlpha = i$2.IsAlpha] = "IsAlpha", a[a.IsAlphanumeric = i$2.IsAlphanumeric] = "IsAlphanumeric", a[a.IsAscii = i$2.IsAscii] = "IsAscii", a[a.IsBase64 = i$2.IsBase64] = "IsBase64", a[a.IsColor = i$2.IsColor] = "IsColor", a[a.IsComplexEnough = i$2.IsComplexEnough] = "IsComplexEnough", a[a.IsCreditCard = i$2.IsCreditCard] = "IsCreditCard", a[a.IsDataURI = i$2.IsDataURI] = "IsDataURI", a[a.IsDomainName = i$2.IsDomainName] = "IsDomainName", a[a.IsEmailAddress = i$2.IsEmailAddress] = "IsEmailAddress", a[a.IsEthereumAddress = i$2.IsEthereumAddress] = "IsEthereumAddress", a[a.IsEAN = i$2.IsEAN] = "IsEAN", a[a.IsEIN = i$2.IsEIN] = "IsEIN", a[a.IsEqual = i$2.IsEqual] = "IsEqual", a[a.IsIBAN = i$2.IsIBAN] = "IsIBAN", a[a.IsHSLColor = i$2.IsHSLColor] = "IsHSLColor", a[a.IsHexColor = i$2.IsHexColor] = "IsHexColor", a[a.IsHexadecimal = i$2.IsHexadecimal] = "IsHexadecimal", a[a.IsIdentityCardCode = i$2.IsIdentityCardCode] = "IsIdentityCardCode", a[a.IsIMEI = i$2.IsIMEI] = "IsIMEI", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsIPAddress = i$2.IsIPAddress] = "IsIPAddress", a[a.IsInIPAddressRange = i$2.IsInIPAddressRange] = "IsInIPAddressRange", a[a.IsISBN = i$2.IsISBN] = "IsISBN", a[a.IsISIN = i$2.IsISIN] = "IsISIN", a[a.IsISMN = i$2.IsISMN] = "IsISMN", a[a.IsISRC = i$2.IsISRC] = "IsISRC", a[a.IsISSN = i$2.IsISSN] = "IsISSN", a[a.IsLanguage = i$2.IsLanguage] = "IsLanguage", a[a.IsLatitude = i$2.IsLatitude] = "IsLatitude", a[a.IsLongitude = i$2.IsLongitude] = "IsLongitude", a[a.IsLengthEqual = i$2.IsLengthEqual] = "IsLengthEqual", a[a.IsLengthGreaterThan = i$2.IsLengthGreaterThan] = "IsLengthGreaterThan", a[a.IsLengthGreaterThanOrEqual = i$2.IsLengthGreaterThanOrEqual] = "IsLengthGreaterThanOrEqual", a[a.IsLengthLessThan = i$2.IsLengthLessThan] = "IsLengthLessThan", a[a.IsLengthLessThanOrEqual = i$2.IsLengthLessThanOrEqual] = "IsLengthLessThanOrEqual", a[a.IsLicensePlateNumber = i$2.IsLicensePlateNumber] = "IsLicensePlateNumber", a[a.IsLowercase = i$2.IsLowercase] = "IsLowercase", a[a.IsOctal = i$2.IsOctal] = "IsOctal", a[a.IsMACAddress = i$2.IsMACAddress] = "IsMACAddress", a[a.IsMD5 = i$2.IsMD5] = "IsMD5", a[a.IsMagnetURI = i$2.IsMagnetURI] = "IsMagnetURI", a[a.IsMarkdown = i$2.IsMarkdown] = "IsMarkdown", a[a.IsMimeType = i$2.IsMimeType] = "IsMimeType", a[a.IsMonth = i$2.IsMonth] = "IsMonth", a[a.IsNotInIPAddressRange = i$2.IsNotInIPAddressRange] = "IsNotInIPAddressRange", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNotNull = i$2.IsNotNull] = "IsNotNull", a[a.IsNotRegexMatch = i$2.IsNotRegexMatch] = "IsNotRegexMatch", a[a.IsNumber = i$2.IsNumber] = "IsNumber", a[a.IsNumeric = i$2.IsNumeric] = "IsNumeric", a[a.IsPassportNumber = i$2.IsPassportNumber] = "IsPassportNumber", a[a.IsPhoneNumber = i$2.IsPhoneNumber] = "IsPhoneNumber", a[a.IsPort = i$2.IsPort] = "IsPort", a[a.IsPostalCode = i$2.IsPostalCode] = "IsPostalCode", a[a.IsProvince = i$2.IsProvince] = "IsProvince", a[a.IsRegexMatch = i$2.IsRegexMatch] = "IsRegexMatch", a[a.IsSemanticVersion = i$2.IsSemanticVersion] = "IsSemanticVersion", a[a.IsSlug = i$2.IsSlug] = "IsSlug", a[a.IsSSN = i$2.IsSSN] = "IsSSN", a[a.IsState = i$2.IsState] = "IsState", a[a.IsStreetAddress = i$2.IsStreetAddress] = "IsStreetAddress", a[a.IsString = i$2.IsString] = "IsString", a[a.IsTaxIDNumber = i$2.IsTaxIDNumber] = "IsTaxIDNumber", a[a.IsURL = i$2.IsURL] = "IsURL", a[a.IsUUID = i$2.IsUUID] = "IsUUID", a[a.IsUppercase = i$2.IsUppercase] = "IsUppercase", a[a.IsVATIDNumber = i$2.IsVATIDNumber] = "IsVATIDNumber", a[a.IsWeekday = i$2.IsWeekday] = "IsWeekday", a[a.IsWeekend = i$2.IsWeekend] = "IsWeekend", a[a.IsYear = i$2.IsYear] = "IsYear";
})(de$1 || (de$1 = {}));
var Ie$1;
(function(a) {
  a[a.Contains = i$2.Contains] = "Contains", a[a.IsAlpha = i$2.IsAlpha] = "IsAlpha", a[a.IsAlphanumeric = i$2.IsAlphanumeric] = "IsAlphanumeric", a[a.IsInList = i$2.IsInList] = "IsInList", a[a.IsMarkdown = i$2.IsMarkdown] = "IsMarkdown", a[a.IsNotInList = i$2.IsNotInList] = "IsNotInList", a[a.IsNumeric = i$2.IsNumeric] = "IsNumeric", a[a.IsLowercase = i$2.IsLowercase] = "IsLowercase", a[a.IsString = i$2.IsString] = "IsString", a[a.IsUppercase = i$2.IsUppercase] = "IsUppercase";
})(Ie$1 || (Ie$1 = {}));
var he$1;
(function(a) {
  a.InvalidCharacters = "invalid-characters", a.InvalidPattern = "invalid-pattern", a.NotComplexEnough = "not-complex-enough", a.NotUnique = "not-unique", a.NotValidEmail = "not-valid-email", a.TooLong = "too-long", a.TooShort = "too-short", a.Required = "required";
})(he$1 || (he$1 = {}));
var ge$1;
(function(a) {
  a[a.Allowed = 0] = "Allowed", a[a.Blocked = 1] = "Blocked";
})(ge$1 || (ge$1 = {}));
var fe$1;
(function(a) {
  a.Canceled = "Canceled", a.Completed = "Completed", a.Created = "Created", a.Faulted = "Faulted", a.Queued = "Queued", a.Running = "Running", a.Waiting = "Waiting";
})(fe$1 || (fe$1 = {}));
var _e$1;
(function(a) {
  a.Archived = "ARCHIVED", a.Compromised = "COMPROMISED", a.Confirmed = "CONFIRMED", a.ForcePasswordChange = "FORCE_CHANGE_PASSWORD", a.ResetRequired = "RESET_REQUIRED", a.Unconfirmed = "UNCONFIRMED", a.Unknown = "UNKNOWN";
})(_e$1 || (_e$1 = {}));
var Ee$1;
(function(a) {
  a.Code = "code", a.Link = "link";
})(Ee$1 || (Ee$1 = {}));
var Se$1;
(function(a) {
  a.Owner = "Owner", a.Admin = "Admin", a.User = "User", a.Visitor = "Visitor";
})(Se$1 || (Se$1 = {}));
var Te$1;
(function(a) {
  a.RequiresPaymentMethod = "requires_payment_method", a.RequiresConfirmation = "requires_confirmation", a.RequiresAction = "requires_action", a.Processing = "processing", a.RequiresCapture = "requires_capture", a.Canceled = "canceled", a.Succeeded = "succeeded";
})(Te$1 || (Te$1 = {}));
var pe$1;
(function(a) {
  a.Incomplete = "incomplete", a.IncompleteExpired = "incomplete_expired", a.Trialing = "trialing", a.Active = "active", a.PastDue = "past_due", a.Canceled = "canceled", a.Unpaid = "unpaid";
})(pe$1 || (pe$1 = {}));
var be$1;
(function(a) {
  a.Monthly = "monthly", a.Quarterly = "quarterly", a.Yearly = "yearly", a.Lifetime = "lifetime";
})(be$1 || (be$1 = {}));
var ve$1;
(function(a) {
  a.Delivered = "delivered", a.Read = "read", a.Sending = "sending", a.Sent = "sent";
})(ve$1 || (ve$1 = {}));
var Be$1;
(function(a) {
  a.Audio = "audio", a.File = "file", a.Image = "image", a.Text = "text", a.Video = "video";
})(Be$1 || (Be$1 = {}));
var Ne$1;
(function(a) {
  a.Audio = "audio", a.File = "file", a.Image = "image", a.Video = "video";
})(Ne$1 || (Ne$1 = {}));
var Ue$1;
(function(a) {
  a.Angry = "angry", a.Laugh = "laugh", a.Like = "like", a.Love = "love", a.Sad = "sad", a.Wow = "wow", a.Wink = "wink", a.Yay = "yay";
})(Ue$1 || (Ue$1 = {}));
var De$1;
(function(a) {
  a.Email = "email", a.PhoneNumber = "phone_number";
})(De$1 || (De$1 = {}));
var v$3;
(function(a) {
  a.Analytics = "analytics", a.Critical = "critical", a.Debug = "debug", a.Exception = "exception", a.Http = "http", a.Info = "info", a.Warning = "warning";
})(v$3 || (v$3 = {}));
var Pe$1;
(function(a) {
  a.Delete = "delete", a.Get = "get", a.Head = "head", a.Patch = "patch", a.Post = "post", a.Put = "put";
})(Pe$1 || (Pe$1 = {}));
var ke$1;
(function(a) {
  a[a.CONTINUE = 100] = "CONTINUE", a[a.SWITCHING_PROTOCOLS = 101] = "SWITCHING_PROTOCOLS", a[a.PROCESSING = 102] = "PROCESSING", a[a.OK = 200] = "OK", a[a.CREATED = 201] = "CREATED", a[a.ACCEPTED = 202] = "ACCEPTED", a[a.NON_AUTHORITATIVE_INFORMATION = 203] = "NON_AUTHORITATIVE_INFORMATION", a[a.NO_CONTENT = 204] = "NO_CONTENT", a[a.RESET_CONTENT = 205] = "RESET_CONTENT", a[a.PARTIAL_CONTENT = 206] = "PARTIAL_CONTENT", a[a.MULTI_STATUS = 207] = "MULTI_STATUS", a[a.ALREADY_REPORTED = 208] = "ALREADY_REPORTED", a[a.IM_USED = 226] = "IM_USED", a[a.MULTIPLE_CHOICES = 300] = "MULTIPLE_CHOICES", a[a.MOVED_PERMANENTLY = 301] = "MOVED_PERMANENTLY", a[a.FOUND = 302] = "FOUND", a[a.SEE_OTHER = 303] = "SEE_OTHER", a[a.NOT_MODIFIED = 304] = "NOT_MODIFIED", a[a.USE_PROXY = 305] = "USE_PROXY", a[a.SWITCH_PROXY = 306] = "SWITCH_PROXY", a[a.TEMPORARY_REDIRECT = 307] = "TEMPORARY_REDIRECT", a[a.PERMANENT_REDIRECT = 308] = "PERMANENT_REDIRECT", a[a.BAD_REQUEST = 400] = "BAD_REQUEST", a[a.UNAUTHORIZED = 401] = "UNAUTHORIZED", a[a.PAYMENT_REQUIRED = 402] = "PAYMENT_REQUIRED", a[a.FORBIDDEN = 403] = "FORBIDDEN", a[a.NOT_FOUND = 404] = "NOT_FOUND", a[a.METHOD_NOT_ALLOWED = 405] = "METHOD_NOT_ALLOWED", a[a.NOT_ACCEPTABLE = 406] = "NOT_ACCEPTABLE", a[a.PROXY_AUTHENTICATION_REQUIRED = 407] = "PROXY_AUTHENTICATION_REQUIRED", a[a.REQUEST_TIMEOUT = 408] = "REQUEST_TIMEOUT", a[a.CONFLICT = 409] = "CONFLICT", a[a.GONE = 410] = "GONE", a[a.LENGTH_REQUIRED = 411] = "LENGTH_REQUIRED", a[a.PRECONDITION_FAILED = 412] = "PRECONDITION_FAILED", a[a.PAYLOAD_TOO_LARGE = 413] = "PAYLOAD_TOO_LARGE", a[a.URI_TOO_LONG = 414] = "URI_TOO_LONG", a[a.UNSUPPORTED_MEDIA_TYPE = 415] = "UNSUPPORTED_MEDIA_TYPE", a[a.RANGE_NOT_SATISFIABLE = 416] = "RANGE_NOT_SATISFIABLE", a[a.EXPECTATION_FAILED = 417] = "EXPECTATION_FAILED", a[a.I_AM_A_TEAPOT = 418] = "I_AM_A_TEAPOT", a[a.MISDIRECTED_REQUEST = 421] = "MISDIRECTED_REQUEST", a[a.UNPROCESSABLE_ENTITY = 422] = "UNPROCESSABLE_ENTITY", a[a.LOCKED = 423] = "LOCKED", a[a.FAILED_DEPENDENCY = 424] = "FAILED_DEPENDENCY", a[a.TOO_EARLY = 425] = "TOO_EARLY", a[a.UPGRADE_REQUIRED = 426] = "UPGRADE_REQUIRED", a[a.PRECONDITION_REQUIRED = 428] = "PRECONDITION_REQUIRED", a[a.TOO_MANY_REQUESTS = 429] = "TOO_MANY_REQUESTS", a[a.REQUEST_HEADER_FIELDS_TOO_LARGE = 431] = "REQUEST_HEADER_FIELDS_TOO_LARGE", a[a.UNAVAILABLE_FOR_LEGAL_REASONS = 451] = "UNAVAILABLE_FOR_LEGAL_REASONS", a[a.INTERNAL_SERVER_ERROR = 500] = "INTERNAL_SERVER_ERROR", a[a.NOT_IMPLEMENTED = 501] = "NOT_IMPLEMENTED", a[a.BAD_GATEWAY = 502] = "BAD_GATEWAY", a[a.SERVICE_UNAVAILABLE = 503] = "SERVICE_UNAVAILABLE", a[a.GATEWAY_TIMEOUT = 504] = "GATEWAY_TIMEOUT", a[a.HTTP_VERSION_NOT_SUPPORTED = 505] = "HTTP_VERSION_NOT_SUPPORTED", a[a.VARIANT_ALSO_NEGOTIATES = 506] = "VARIANT_ALSO_NEGOTIATES", a[a.INSUFFICIENT_STORAGE = 507] = "INSUFFICIENT_STORAGE", a[a.LOOP_DETECTED = 508] = "LOOP_DETECTED", a[a.BANDWIDTH_LIMIT_EXCEEDED = 509] = "BANDWIDTH_LIMIT_EXCEEDED", a[a.NOT_EXTENDED = 510] = "NOT_EXTENDED", a[a.NETWORK_AUTHENTICATION_REQUIRED = 511] = "NETWORK_AUTHENTICATION_REQUIRED";
})(ke$1 || (ke$1 = {}));
var r$4;
(function(a) {
  a.Afghanistan = "AF", a.Albania = "AL", a.Algeria = "DZ", a.AmericanSamoa = "AS", a.Andorra = "AD", a.Angola = "AO", a.Anguilla = "AI", a.Antarctica = "AQ", a.AntiguaAndBarbuda = "AG", a.Argentina = "AR", a.Armenia = "AM", a.Aruba = "AW", a.Australia = "AU", a.Austria = "AT", a.Azerbaijan = "AZ", a.Bahamas = "BS", a.Bahrain = "BH", a.Bangladesh = "BD", a.Barbados = "BB", a.Belarus = "BY", a.Belgium = "BE", a.Belize = "BZ", a.Benin = "BJ", a.Bermuda = "BM", a.Bhutan = "BT", a.Bolivia = "BO", a.BosniaAndHerzegovina = "BA", a.Botswana = "BW", a.BouvetIsland = "BV", a.Brazil = "BR", a.BritishIndianOceanTerritory = "IO", a.Brunei = "BN", a.Bulgaria = "BG", a.BurkinaFaso = "BF", a.Burundi = "BI", a.Cambodia = "KH", a.Cameroon = "CM", a.Canada = "CA", a.CapeVerde = "CV", a.CaymanIslands = "KY", a.CentralAfricanRepublic = "CF", a.Chad = "TD", a.Chile = "CL", a.China = "CN", a.ChristmasIsland = "CX", a.CocosKeelingIslands = "CC", a.Colombia = "CO", a.Comoros = "KM", a.Congo = "CG", a.CongoTheDemocraticRepublicOfThe = "CD", a.CookIslands = "CK", a.CostaRica = "CR", a.CoteDIvoire = "CI", a.Croatia = "HR", a.Cuba = "CU", a.Cyprus = "CY", a.CzechRepublic = "CZ", a.Denmark = "DK", a.Djibouti = "DJ", a.Dominica = "DM", a.DominicanRepublic = "DO", a.Ecuador = "EC", a.Egypt = "EG", a.ElSalvador = "SV", a.EquatorialGuinea = "GQ", a.Eritrea = "ER", a.Estonia = "EE", a.Ethiopia = "ET", a.FalklandIslands = "FK", a.FaroeIslands = "FO", a.Fiji = "FJ", a.Finland = "FI", a.France = "FR", a.FrenchGuiana = "GF", a.FrenchPolynesia = "PF", a.FrenchSouthernTerritories = "TF", a.Gabon = "GA", a.Gambia = "GM", a.Georgia = "GE", a.Germany = "DE", a.Ghana = "GH", a.Gibraltar = "GI", a.Greece = "GR", a.Greenland = "GL", a.Grenada = "GD", a.Guadeloupe = "GP", a.Guam = "GU", a.Guatemala = "GT", a.Guernsey = "GG", a.Guinea = "GN", a.GuineaBissau = "GW", a.Guyana = "GY", a.Haiti = "HT", a.HeardIslandMcdonaldIslands = "HM", a.HolySeeVaticanCityState = "VA", a.Honduras = "HN", a.HongKong = "HK", a.Hungary = "HU", a.Iceland = "IS", a.India = "IN", a.Indonesia = "ID", a.Iran = "IR", a.Iraq = "IQ", a.Ireland = "IE", a.IsleOfMan = "IM", a.Israel = "IL", a.Italy = "IT", a.Jamaica = "JM", a.Japan = "JP", a.Jersey = "JE", a.Jordan = "JO", a.Kazakhstan = "KZ", a.Kenya = "KE", a.Kiribati = "KI", a.Kuwait = "KW", a.Kyrgyzstan = "KG", a.Laos = "LA", a.Latvia = "LV", a.Lebanon = "LB", a.Lesotho = "LS", a.Liberia = "LR", a.Libya = "LY", a.Liechtenstein = "LI", a.Lithuania = "LT", a.Luxembourg = "LU", a.Macau = "MO", a.Madagascar = "MG", a.Malawi = "MW", a.Malaysia = "MY", a.Maldives = "MV", a.Mali = "ML", a.Malta = "MT", a.MarshallIslands = "MH", a.Martinique = "MQ", a.Mauritania = "MR", a.Mauritius = "MU", a.Mayotte = "YT", a.Mexico = "MX", a.MicronesiaFederatedStatesOf = "FM", a.Moldova = "MD", a.Monaco = "MC", a.Mongolia = "MN", a.Montenegro = "ME", a.Montserrat = "MS", a.Morocco = "MA", a.Mozambique = "MZ", a.Myanmar = "MM", a.Namibia = "NA", a.Nauru = "NR", a.Nepal = "NP", a.Netherlands = "NL", a.NetherlandsAntilles = "AN", a.NewCaledonia = "NC", a.NewZealand = "NZ", a.NorthKorea = "KP", a.Nicaragua = "NI", a.Niger = "NE", a.Nigeria = "NG", a.Niue = "NU", a.NorfolkIsland = "NF", a.NorthMacedonia = "MK", a.NorthernMarianaIslands = "MP", a.Norway = "NO", a.Oman = "OM", a.Pakistan = "PK", a.Palau = "PW", a.PalestinianTerritoryOccupied = "PS", a.Panama = "PA", a.PapuaNewGuinea = "PG", a.Paraguay = "PY", a.Peru = "PE", a.Philippines = "PH", a.Pitcairn = "PN", a.Poland = "PL", a.Portugal = "PT", a.PuertoRico = "PR", a.Qatar = "QA", a.Reunion = "RE", a.Romania = "RO", a.RussianFederation = "RU", a.Rwanda = "RW", a.SaintBarthelemy = "BL", a.SaintHelena = "SH", a.SaintKittsAndNevis = "KN", a.SaintLucia = "LC", a.SaintMartin = "MF", a.SaintPierreAndMiquelon = "PM", a.SaintVincentAndTheGrenadines = "VC", a.Samoa = "WS", a.SanMarino = "SM", a.SaoTomeAndPrincipe = "ST", a.SaudiArabia = "SA", a.Senegal = "SN", a.Serbia = "RS", a.SerbiaAndMontenegro = "CS", a.Seychelles = "SC", a.SierraLeone = "SL", a.Singapore = "SG", a.Slovakia = "SK", a.Slovenia = "SI", a.SolomonIslands = "SB", a.Somalia = "SO", a.SouthAfrica = "ZA", a.SouthGeorgiaAndTheSouthSandwichIslands = "GS", a.SouthKorea = "KR", a.Spain = "ES", a.SriLanka = "LK", a.Sudan = "SD", a.Suriname = "SR", a.SvalbardAndJanMayen = "SJ", a.Swaziland = "SZ", a.Sweden = "SE", a.Switzerland = "CH", a.Syria = "SY", a.Taiwan = "TW", a.Tajikistan = "TJ", a.Tanzania = "TZ", a.Thailand = "TH", a.TimorLeste = "TL", a.Togo = "TG", a.Tokelau = "TK", a.Tonga = "TO", a.TrinidadAndTobago = "TT", a.Tunisia = "TN", a.Turkey = "TR", a.Turkmenistan = "TM", a.TurksAndCaicosIslands = "TC", a.Tuvalu = "TV", a.Uganda = "UG", a.Ukraine = "UA", a.UnitedArabEmirates = "AE", a.UnitedKingdom = "GB", a.UnitedStates = "US", a.UnitedStatesMinorOutlyingIslands = "UM", a.Uruguay = "UY", a.Uzbekistan = "UZ", a.Vanuatu = "VU", a.Venezuela = "VE", a.Vietnam = "VN", a.VirginIslandsBritish = "VG", a.VirginIslandsUS = "VI", a.WallisAndFutuna = "WF", a.WesternSahara = "EH", a.Yemen = "YE", a.Zambia = "ZM", a.Zimbabwe = "ZW";
})(r$4 || (r$4 = {}));
var m$3;
(function(a) {
  a.AfghanistanAfghani = "AFN", a.AlbaniaLek = "ALL", a.ArmeniaDram = "AMD", a.AlgeriaDinar = "DZD", a.AmericanSamoaTala = "WST", a.AngolaKwanza = "AOA", a.ArgentinaPeso = "ARS", a.AustraliaDollar = "AUD", a.ArubaFlorin = "AWG", a.AzerbaijanNewManat = "AZN", a.BosniaAndHerzegovinaConvertibleMark = "BAM", a.BahrainDinar = "BHD", a.BarbadosDollar = "BBD", a.BangladeshTaka = "BDT", a.BelgiumFranc = "BGN", a.BermudaDollar = "BMD", a.BruneiDollar = "BND", a.BoliviaBoliviano = "BOB", a.BrazilReal = "BRL", a.BahamasDollar = "BSD", a.BhutanNgultrum = "BTN", a.BotswanaPula = "BWP", a.BelarusRuble = "BYN", a.BelizeDollar = "BZD", a.BulgariaLev = "BGN", a.BurundiFranc = "BIF", a.BritishPound = "GBP", a.CanadaDollar = "CAD", a.CambodiaRiel = "KHR", a.ComorosFranc = "KMF", a.CaymanIslandsDollar = "KYD", a.ChilePeso = "CLP", a.ChinaYuan = "CNY", a.ColombiaPeso = "COP", a.CostaRicaColon = "CRC", a.CroatiaKuna = "HRK", a.CubaConvertiblePeso = "CUC", a.CubaPeso = "CUP", a.CapeVerdeEscudo = "CVE", a.CyprusPound = "CYP", a.CzechRepublicKoruna = "CZK", a.DjiboutiFranc = "DJF", a.DenmarkKrone = "DKK", a.DominicaDollar = "XCD", a.DominicanRepublicPeso = "DOP", a.EastCaribbeanDollar = "XCD", a.EgyptPound = "EGP", a.ElSalvadorColon = "SVC", a.EquatorialGuineaEkwele = "GQE", a.EritreaNakfa = "ERN", a.EstoniaKroon = "EEK", a.EthiopiaBirr = "ETB", a.Euro = "EUR", a.FijiDollar = "FJD", a.FalklandIslandsPound = "FKP", a.GambiaDalasi = "GMD", a.GabonFranc = "GMD", a.GeorgiaLari = "GEL", a.GhanaCedi = "GHS", a.GibraltarPound = "GIP", a.GuatemalaQuetzal = "GTQ", a.GuernseyPound = "GGP", a.GuineaBissauPeso = "GWP", a.GuyanaDollar = "GYD", a.HongKongDollar = "HKD", a.HondurasLempira = "HNL", a.HaitiGourde = "HTG", a.HungaryForint = "HUF", a.IndonesiaRupiah = "IDR", a.IsleOfManPound = "IMP", a.IsraelNewShekel = "ILS", a.IndiaRupee = "INR", a.IraqDinar = "IQD", a.IranRial = "IRR", a.IcelandKrona = "ISK", a.JamaicaDollar = "JMD", a.JapanYen = "JPY", a.JerseyPound = "JEP", a.JordanDinar = "JOD", a.KazakhstanTenge = "KZT", a.KenyaShilling = "KES", a.KyrgyzstanSom = "KGS", a.NorthKoreaWon = "KPW", a.SouthKoreaWon = "KRW", a.KuwaitDinar = "KWD", a.LaosKip = "LAK", a.LebanonPound = "LBP", a.LiberiaDollar = "LRD", a.LesothoLoti = "LSL", a.LibyanDinar = "LYD", a.LithuaniaLitas = "LTL", a.LatviaLats = "LVL", a.LibyaDinar = "LYD", a.MacauPataca = "MOP", a.MaldivesRufiyaa = "MVR", a.MalawiKwacha = "MWK", a.MaltaLira = "MTL", a.MauritiusRupee = "MUR", a.MongoliaTughrik = "MNT", a.MoroccoDirham = "MAD", a.MoldovaLeu = "MDL", a.MozambiqueMetical = "MZN", a.MadagascarAriary = "MGA", a.MacedoniaDenar = "MKD", a.MexicoPeso = "MXN", a.MalaysiaRinggit = "MYR", a.MyanmarKyat = "MMK", a.MicronesiaFederatedStatesDollar = "USD", a.NicaraguaCordoba = "NIO", a.NamibiaDollar = "NAD", a.NetherlandsAntillesGuilder = "ANG", a.NewCaledoniaFranc = "XPF", a.NigeriaNaira = "NGN", a.NicaraguaCordobaOro = "NIO", a.NigerCFAFranc = "XOF", a.NorwayKrone = "NOK", a.NepalRupee = "NPR", a.NewZealandDollar = "NZD", a.OmanRial = "OMR", a.PanamaBalboa = "PAB", a.PeruNuevoSol = "PEN", a.PapuaNewGuineaKina = "PGK", a.PhilippinesPeso = "PHP", a.PakistanRupee = "PKR", a.PeruNuevo = "PEN", a.PolandZloty = "PLN", a.ParaguayGuarani = "PYG", a.QatarRial = "QAR", a.RomaniaNewLeu = "RON", a.SerbiaDinar = "RSD", a.SriLankaRupee = "LKR", a.RussiaRuble = "RUB", a.RwandaFranc = "RWF", a.SaudiArabiaRiyal = "SAR", a.SlovakiaKoruna = "SKK", a.SloveniaTolar = "SIT", a.SolomonIslandsDollar = "SBD", a.SeychellesRupee = "SCR", a.SudanPound = "SDG", a.SwedenKrona = "SEK", a.SingaporeDollar = "SGD", a.SaintHelenaPound = "SHP", a.SierraLeoneLeone = "SLL", a.SomaliaShilling = "SOS", a.SurinameDollar = "SRD", a.SintMaartenPound = "SXD", a.SyriaPound = "SYP", a.SwazilandLilangeni = "SZL", a.SwitzerlandFranc = "CHF", a.ThailandBaht = "THB", a.TajikistanSomoni = "TJS", a.TurkmenistanManat = "TMT", a.TunisiaDinar = "TND", a.TongaPaanga = "TOP", a.TurkeyLira = "TRY", a.TrinidadAndTobagoDollar = "TTD", a.TaiwanNewDollar = "TWD", a.TanzaniaShilling = "TZS", a.UnitedArabEmiratesDirham = "AED", a.UkraineHryvnia = "UAH", a.UgandaShilling = "UGX", a.UnitedKingdomPound = "GBP", a.UnitedStatesDollar = "USD", a.UruguayPeso = "UYU", a.UzbekistanSom = "UZS", a.VenezuelaBolivar = "VEF", a.VietnamDong = "VND", a.VanuatuVatu = "VUV", a.SamoaTala = "WST", a.YemenRial = "YER", a.SouthAfricaRand = "ZAR", a.ZambiaKwacha = "ZMW", a.ZimbabweDollar = "ZWL";
})(m$3 || (m$3 = {}));
({ AfghanistanAfghani: { code: m$3.AfghanistanAfghani, countries: [r$4.Afghanistan], decimal_digits: 2, decimal_separator: ".", name: "Afghan Afghani", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u060B", symbol_native: "\u060B", symbol_placement: "before", thousands_separator: "," }, AlbaniaLek: { code: m$3.AlbaniaLek, countries: [r$4.Albania], decimal_digits: 2, decimal_separator: ",", name: "Albanian Lek", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Lek", symbol_native: "Lek", symbol_placement: "before", thousands_separator: "." }, AlgeriaDinar: { code: m$3.AlgeriaDinar, countries: [r$4.Algeria], decimal_digits: 2, decimal_separator: ".", name: "Algerian Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u062F.\u062C", symbol_native: "\u062F.\u062C", symbol_placement: "before", thousands_separator: "," }, ArgentinaPeso: { code: m$3.ArgentinaPeso, countries: [r$4.Argentina], decimal_digits: 2, decimal_separator: ".", name: "Argentine Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, ArmeniaDram: { code: m$3.ArmeniaDram, countries: [r$4.Armenia], decimal_digits: 2, decimal_separator: ",", name: "Armenian Dram", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0564\u0580.", symbol_native: "\u0564\u0580.", symbol_placement: "before", thousands_separator: "." }, ArubaFlorin: { code: m$3.ArubaFlorin, countries: [r$4.Aruba], decimal_digits: 2, decimal_separator: ".", name: "Aruban Florin", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0192", symbol_native: "\u0192", symbol_placement: "before", thousands_separator: "," }, AustraliaDollar: { code: m$3.AustraliaDollar, countries: [r$4.Australia], decimal_digits: 2, decimal_separator: ".", name: "Australian Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, AzerbaijanManat: { code: m$3.AzerbaijanNewManat, countries: [r$4.Azerbaijan], decimal_digits: 2, decimal_separator: ".", name: "Azerbaijani Manat", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u043C\u0430\u043D", symbol_native: "\u043C\u0430\u043D", symbol_placement: "before", thousands_separator: "," }, BahrainDinar: { code: m$3.BahrainDinar, countries: [r$4.Bahrain], decimal_digits: 3, decimal_separator: ".", name: "Bahraini Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: ".\u062F.\u0628", symbol_native: ".\u062F.\u0628", symbol_placement: "before", thousands_separator: "," }, BangladeshTaka: { code: m$3.BangladeshTaka, countries: [r$4.Bangladesh], decimal_digits: 2, decimal_separator: ".", name: "Bangladeshi Taka", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u09F3", symbol_native: "\u09F3", symbol_placement: "before", thousands_separator: "," }, BarbadosDollar: { code: m$3.BarbadosDollar, countries: [r$4.Barbados], decimal_digits: 2, decimal_separator: ".", name: "Barbadian Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, BelarusRuble: { code: m$3.BelarusRuble, countries: [r$4.Belarus], decimal_digits: 2, decimal_separator: ".", name: "Belarusian Ruble", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Br", symbol_native: "Br", symbol_placement: "before", thousands_separator: "." }, BelizeDollar: { code: m$3.BelizeDollar, countries: [r$4.Belize], decimal_digits: 2, decimal_separator: ".", name: "Belize Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "BZ$", symbol_native: "BZ$", symbol_placement: "before", thousands_separator: "," }, BermudaDollar: { code: m$3.BermudaDollar, countries: [r$4.Bermuda], decimal_digits: 2, decimal_separator: ".", name: "Bermudian Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, BoliviaBoliviano: { code: m$3.BoliviaBoliviano, countries: [r$4.Bolivia], decimal_digits: 2, decimal_separator: ".", name: "Bolivian Boliviano", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$b", symbol_native: "$b", symbol_placement: "before", thousands_separator: "," }, BosniaAndHerzegovinaConvertibleMarka: { code: m$3.BosniaAndHerzegovinaConvertibleMark, countries: [r$4.BosniaAndHerzegovina], decimal_digits: 2, decimal_separator: ",", name: "Bosnia and Herzegovina Convertible Marka", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "KM", symbol_native: "KM", symbol_placement: "before", thousands_separator: "." }, BotswanaPula: { code: m$3.BotswanaPula, countries: [r$4.Botswana], decimal_digits: 2, decimal_separator: ".", name: "Botswana Pula", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "P", symbol_native: "P", symbol_placement: "before", thousands_separator: "," }, BrazilReal: { code: m$3.BrazilReal, countries: [r$4.Brazil], decimal_digits: 2, decimal_separator: ",", name: "Brazilian Real", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "R$", symbol_native: "R$", symbol_placement: "before", thousands_separator: "." }, BruneiDollar: { code: m$3.BruneiDollar, countries: [r$4.Brunei], decimal_digits: 2, decimal_separator: ".", name: "Brunei Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, BulgariaLev: { code: m$3.BulgariaLev, countries: [r$4.Bulgaria], decimal_digits: 2, decimal_separator: ".", name: "Bulgarian Lev", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u043B\u0432", symbol_native: "\u043B\u0432", symbol_placement: "before", thousands_separator: "." }, BurundiFranc: { code: m$3.BurundiFranc, countries: [r$4.Burundi], decimal_digits: 0, decimal_separator: ".", name: "Burundian Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "FBu", symbol_native: "FBu", symbol_placement: "before", thousands_separator: "," }, CambodiaRiel: { code: m$3.CambodiaRiel, countries: [r$4.Cambodia], decimal_digits: 2, decimal_separator: ",", name: "Cambodian Riel", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u17DB", symbol_native: "\u17DB", symbol_placement: "before", thousands_separator: "." }, CanadaDollar: { code: m$3.CanadaDollar, countries: [r$4.Canada], decimal_digits: 2, decimal_separator: ".", name: "Canadian Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, CapeVerdeEscudo: { code: m$3.CapeVerdeEscudo, countries: [r$4.CapeVerde], decimal_digits: 2, decimal_separator: ".", name: "Cape Verde Escudo", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Esc", symbol_native: "Esc", symbol_placement: "before", thousands_separator: "," }, CaymanIslandsDollar: { code: m$3.CaymanIslandsDollar, countries: [r$4.CaymanIslands], decimal_digits: 2, decimal_separator: ".", name: "Cayman Islands Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, ChilePeso: { code: m$3.ChilePeso, countries: [r$4.Chile], decimal_digits: 0, decimal_separator: ".", name: "Chilean Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, ChinaYuanRenminbi: { code: m$3.ChinaYuan, countries: [r$4.China], decimal_digits: 2, decimal_separator: ".", name: "Chinese Yuan", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA5", symbol_native: "\xA5", symbol_placement: "before", thousands_separator: "," }, ColombiaPeso: { code: m$3.ColombiaPeso, countries: [r$4.Colombia], decimal_digits: 2, decimal_separator: ".", name: "Colombian Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, ComorosFranc: { code: m$3.ComorosFranc, countries: [r$4.Comoros], decimal_digits: 0, decimal_separator: ".", name: "Comoros Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "CF", symbol_native: "CF", symbol_placement: "before", thousands_separator: "," }, CostaRicaColon: { code: m$3.CostaRicaColon, countries: [r$4.CostaRica], decimal_digits: 2, decimal_separator: ".", name: "Costa Rican Colon", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A1", symbol_native: "\u20A1", symbol_placement: "before", thousands_separator: "," }, CroatiaKuna: { code: m$3.CroatiaKuna, countries: [r$4.Croatia], decimal_digits: 2, decimal_separator: ",", name: "Croatian Kuna", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kn", symbol_native: "kn", symbol_placement: "before", thousands_separator: "." }, CubaConvertiblePeso: { code: m$3.CubaConvertiblePeso, countries: [r$4.Cuba], decimal_digits: 2, decimal_separator: ",", name: "Cuba Convertible Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, CubaPeso: { code: m$3.CubaPeso, countries: [r$4.Cuba], decimal_digits: 2, decimal_separator: ",", name: "Cuba Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, CyprusPound: { code: m$3.CyprusPound, countries: [r$4.Cyprus], decimal_digits: 2, decimal_separator: ",", name: "Cyprus Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, CzechRepublicKoruna: { code: m$3.CzechRepublicKoruna, countries: [r$4.CzechRepublic], decimal_digits: 2, decimal_separator: ",", name: "Czech Republic Koruna", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "K\u010D", symbol_native: "K\u010D", symbol_placement: "before", thousands_separator: "." }, DenmarkKrone: { code: m$3.DenmarkKrone, countries: [r$4.Denmark], decimal_digits: 2, decimal_separator: ",", name: "Denmark Krone", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, DjiboutiFranc: { code: m$3.DjiboutiFranc, countries: [r$4.Djibouti], decimal_digits: 0, decimal_separator: ".", name: "Djibouti Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Fdj", symbol_native: "Fdj", symbol_placement: "before", thousands_separator: "," }, DominicanRepublicPeso: { code: m$3.DominicanRepublicPeso, countries: [r$4.DominicanRepublic], decimal_digits: 2, decimal_separator: ",", name: "Dominican Republic Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "RD$", symbol_native: "RD$", symbol_placement: "before", thousands_separator: "." }, EastCaribbeanDollar: { code: m$3.EastCaribbeanDollar, countries: [r$4.AntiguaAndBarbuda, r$4.Dominica, r$4.Grenada, r$4.SaintKittsAndNevis, r$4.SaintLucia, r$4.SaintVincentAndTheGrenadines], decimal_digits: 2, decimal_separator: ".", name: "East Caribbean Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, EgyptPound: { code: m$3.EgyptPound, countries: [r$4.Egypt], decimal_digits: 2, decimal_separator: ".", name: "Egypt Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "," }, ElSalvadorColon: { code: m$3.ElSalvadorColon, countries: [r$4.ElSalvador], decimal_digits: 2, decimal_separator: ",", name: "El Salvador Colon", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A1", symbol_native: "\u20A1", symbol_placement: "before", thousands_separator: "." }, EquatorialGuineaEkwele: { code: m$3.EquatorialGuineaEkwele, countries: [r$4.EquatorialGuinea], decimal_digits: 0, decimal_separator: ".", name: "Equatorial Guinea Ekwele", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "GQE", symbol_native: "GQE", symbol_placement: "before", thousands_separator: "," }, EritreaNakfa: { code: m$3.EritreaNakfa, countries: [r$4.Eritrea], decimal_digits: 2, decimal_separator: ",", name: "Eritrea Nakfa", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Nfk", symbol_native: "Nfk", symbol_placement: "before", thousands_separator: "." }, EstoniaKroon: { code: m$3.EstoniaKroon, countries: [r$4.Estonia], decimal_digits: 2, decimal_separator: ",", name: "Estonia Kroon", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, EthiopiaBirr: { code: m$3.EthiopiaBirr, countries: [r$4.Ethiopia], decimal_digits: 2, decimal_separator: ",", name: "Ethiopia Birr", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Br", symbol_native: "Br", symbol_placement: "before", thousands_separator: "." }, Euro: { code: m$3.Euro, countries: [r$4.Andorra, r$4.Austria, r$4.Belgium, r$4.Cyprus, r$4.Estonia, r$4.Finland, r$4.France, r$4.Germany, r$4.Greece, r$4.Ireland, r$4.Italy, r$4.Latvia, r$4.Lithuania, r$4.Luxembourg, r$4.Malta, r$4.Monaco, r$4.Netherlands, r$4.Portugal, r$4.Spain, r$4.Sweden, r$4.UnitedKingdom], decimal_digits: 2, decimal_separator: ",", name: "Euro", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AC", symbol_native: "\u20AC", symbol_placement: "before", thousands_separator: "." }, FalklandIslandsPound: { code: m$3.FalklandIslandsPound, countries: [r$4.FalklandIslands], decimal_digits: 2, decimal_separator: ",", name: "Equatorial Guinea Ekwele", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, FijiDollar: { code: m$3.FijiDollar, countries: [r$4.Fiji], decimal_digits: 2, decimal_separator: ",", name: "Fiji Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, GambiaDalasi: { code: m$3.GambiaDalasi, countries: [r$4.Gambia], decimal_digits: 2, decimal_separator: ",", name: "Gambia Dalasi", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "D", symbol_native: "D", symbol_placement: "before", thousands_separator: "." }, GeorgiaLari: { code: m$3.GeorgiaLari, countries: [r$4.Georgia], decimal_digits: 2, decimal_separator: ",", name: "Georgia Lari", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20BE", symbol_native: "\u20BE", symbol_placement: "before", thousands_separator: "." }, GhanaCedi: { code: m$3.GhanaCedi, countries: [r$4.Ghana], decimal_digits: 2, decimal_separator: ",", name: "Ghana Cedi", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B5", symbol_native: "\u20B5", symbol_placement: "before", thousands_separator: "." }, GibraltarPound: { code: m$3.GibraltarPound, countries: [r$4.Gibraltar], decimal_digits: 2, decimal_separator: ",", name: "Gibraltar Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, GuatemalaQuetzal: { code: m$3.GuatemalaQuetzal, countries: [r$4.Guatemala], decimal_digits: 2, decimal_separator: ",", name: "Guatemala Quetzal", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Q", symbol_native: "Q", symbol_placement: "before", thousands_separator: "." }, GuernseyPound: { code: m$3.GuernseyPound, countries: [r$4.Guernsey], decimal_digits: 2, decimal_separator: ",", name: "Guernsey Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, GuineaBissauPeso: { code: m$3.GuineaBissauPeso, countries: [r$4.GuineaBissau], decimal_digits: 2, decimal_separator: ",", name: "Guinea-Bissau Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B5", symbol_native: "\u20B5", symbol_placement: "before", thousands_separator: "." }, GuyanaDollar: { code: m$3.GuyanaDollar, countries: [r$4.Guyana], decimal_digits: 2, decimal_separator: ",", name: "Guyana Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, HaitiGourde: { code: m$3.HaitiGourde, countries: [r$4.Haiti], decimal_digits: 2, decimal_separator: ",", name: "Haiti Gourde", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "G", symbol_native: "G", symbol_placement: "before", thousands_separator: "." }, HondurasLempira: { code: m$3.HondurasLempira, countries: [r$4.Honduras], decimal_digits: 2, decimal_separator: ",", name: "Honduras Lempira", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "L", symbol_native: "L", symbol_placement: "before", thousands_separator: "." }, HongKongDollar: { code: m$3.HongKongDollar, countries: [r$4.HongKong], decimal_digits: 2, decimal_separator: ",", name: "Hong Kong Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, HungaryForint: { code: m$3.HungaryForint, countries: [r$4.Hungary], decimal_digits: 2, decimal_separator: ",", name: "Hungary Forint", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Ft", symbol_native: "Ft", symbol_placement: "before", thousands_separator: "." }, IcelandKrona: { code: m$3.IcelandKrona, countries: [r$4.Iceland], decimal_digits: 0, decimal_separator: ",", name: "Iceland Krona", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, IndianRupee: { code: m$3.IndiaRupee, countries: [r$4.India, r$4.Bhutan], decimal_digits: 2, decimal_separator: ",", name: "Indian Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B9", symbol_native: "\u20B9", symbol_placement: "before", thousands_separator: "." }, IndonesiaRupiah: { code: m$3.IndonesiaRupiah, countries: [r$4.Indonesia], decimal_digits: 0, decimal_separator: ",", name: "Indonesia Rupiah", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Rp", symbol_native: "Rp", symbol_placement: "before", thousands_separator: "." }, IranRial: { code: m$3.IranRial, countries: [r$4.Iran], decimal_digits: 0, decimal_separator: ",", name: "Iran Rial", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, IsleOfManPound: { code: m$3.IsleOfManPound, countries: [r$4.IsleOfMan], decimal_digits: 2, decimal_separator: ",", name: "Isle of Man Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, IsraeliShekel: { code: m$3.IsraelNewShekel, countries: [r$4.Israel], decimal_digits: 2, decimal_separator: ",", name: "Israeli Shekel", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AA", symbol_native: "\u20AA", symbol_placement: "before", thousands_separator: "." }, JamaicaDollar: { code: m$3.JamaicaDollar, countries: [r$4.Jamaica], decimal_digits: 2, decimal_separator: ",", name: "Jamaica Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "J$", symbol_native: "J$", symbol_placement: "before", thousands_separator: "." }, JapanYen: { code: m$3.JapanYen, countries: [r$4.Japan], decimal_digits: 0, decimal_separator: ",", name: "Japan Yen", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA5", symbol_native: "\uFFE5", symbol_placement: "before", thousands_separator: "." }, JerseyPound: { code: m$3.JerseyPound, countries: [r$4.Jersey], decimal_digits: 2, decimal_separator: ",", name: "Jersey Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, JordanDinar: { code: m$3.JordanDinar, countries: [r$4.Jordan], decimal_digits: 3, decimal_separator: ",", name: "Jordan Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "JD", symbol_native: "JD", symbol_placement: "before", thousands_separator: "." }, KazakhstanTenge: { code: m$3.KazakhstanTenge, countries: [r$4.Kazakhstan], decimal_digits: 2, decimal_separator: ",", name: "Kazakhstan Tenge", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B8", symbol_native: "\u20B8", symbol_placement: "before", thousands_separator: "." }, KenyaShilling: { code: m$3.KenyaShilling, countries: [r$4.Kenya], decimal_digits: 2, decimal_separator: ",", name: "Kenya Shilling", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "KSh", symbol_native: "KSh", symbol_placement: "before", thousands_separator: "." }, KuwaitDinar: { code: m$3.KuwaitDinar, countries: [r$4.Kuwait], decimal_digits: 3, decimal_separator: ",", name: "Kuwait Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "KD", symbol_native: "KD", symbol_placement: "before", thousands_separator: "." }, KyrgyzstanSom: { code: m$3.KyrgyzstanSom, countries: [r$4.Kyrgyzstan], decimal_digits: 2, decimal_separator: ",", name: "Kyrgyzstan Som", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "KGS", symbol_native: "KGS", symbol_placement: "before", thousands_separator: "." }, LaosKip: { code: m$3.LaosKip, countries: [r$4.Laos], decimal_digits: 0, decimal_separator: ",", name: "Laos Kip", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AD", symbol_native: "\u20AD", symbol_placement: "before", thousands_separator: "." }, LatviaLats: { code: m$3.LatviaLats, countries: [r$4.Latvia], decimal_digits: 2, decimal_separator: ",", name: "Latvia Lat", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Ls", symbol_native: "Ls", symbol_placement: "before", thousands_separator: "." }, LebanonPound: { code: m$3.LebanonPound, countries: [r$4.Lebanon], decimal_digits: 0, decimal_separator: ",", name: "Lebanon Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, LesothoLoti: { code: m$3.LesothoLoti, countries: [r$4.Lesotho], decimal_digits: 2, decimal_separator: ",", name: "Lesotho Loti", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "M", symbol_native: "M", symbol_placement: "before", thousands_separator: "." }, LiberiaDollar: { code: m$3.LiberiaDollar, countries: [r$4.Liberia], decimal_digits: 2, decimal_separator: ",", name: "Liberia Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, LibyanDinar: { code: m$3.LibyanDinar, countries: [r$4.Libya], decimal_digits: 3, decimal_separator: ",", name: "Libyan Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "LD", symbol_native: "LD", symbol_placement: "before", thousands_separator: "." }, LithuaniaLitas: { code: m$3.LithuaniaLitas, countries: [r$4.Lithuania], decimal_digits: 2, decimal_separator: ",", name: "Lithuania Litas", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Lt", symbol_native: "Lt", symbol_placement: "before", thousands_separator: "." }, MacauPataca: { code: m$3.MacauPataca, countries: [r$4.Macau], decimal_digits: 2, decimal_separator: ",", name: "Macau Pataca", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "MOP$", symbol_native: "MOP$", symbol_placement: "before", thousands_separator: "." }, MacedoniaDenar: { code: m$3.MacedoniaDenar, countries: [r$4.NorthMacedonia], decimal_digits: 2, decimal_separator: ",", name: "Macedonia Denar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0434\u0435\u043D", symbol_native: "\u0434\u0435\u043D", symbol_placement: "before", thousands_separator: "." }, MadagascarAriary: { code: m$3.MadagascarAriary, countries: [r$4.Madagascar], decimal_digits: 0, decimal_separator: ",", name: "Madagascar Ariary", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Ar", symbol_native: "Ar", symbol_placement: "before", thousands_separator: "." }, MalawiKwacha: { code: m$3.MalawiKwacha, countries: [r$4.Malawi], decimal_digits: 2, decimal_separator: ",", name: "Malawi Kwacha", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "MK", symbol_native: "MK", symbol_placement: "before", thousands_separator: "." }, MalaysiaRinggit: { code: m$3.MalaysiaRinggit, countries: [r$4.Malaysia], decimal_digits: 2, decimal_separator: ",", name: "Malaysia Ringgit", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "RM", symbol_native: "RM", symbol_placement: "before", thousands_separator: "." }, MaldivesRufiyaa: { code: m$3.MaldivesRufiyaa, countries: [r$4.Maldives], decimal_digits: 2, decimal_separator: ",", name: "Maldives Rufiyaa", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Rf", symbol_native: "Rf", symbol_placement: "before", thousands_separator: "." }, MaltaLira: { code: m$3.MaltaLira, countries: [r$4.Malta], decimal_digits: 2, decimal_separator: ",", name: "Malta Lira", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Lm", symbol_native: "Lm", symbol_placement: "before", thousands_separator: "." }, MauritiusRupee: { code: m$3.MauritiusRupee, countries: [r$4.Mauritius], decimal_digits: 2, decimal_separator: ",", name: "Mauritius Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, MexicoPeso: { code: m$3.MexicoPeso, countries: [r$4.Mexico], decimal_digits: 2, decimal_separator: ",", name: "Mexico Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, MoldovaLeu: { code: m$3.MoldovaLeu, countries: [r$4.Moldova], decimal_digits: 2, decimal_separator: ",", name: "Moldova Leu", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "L", symbol_native: "L", symbol_placement: "before", thousands_separator: "." }, MongoliaTughrik: { code: m$3.MongoliaTughrik, countries: [r$4.Mongolia], decimal_digits: 2, decimal_separator: ",", name: "Mongolia Tughrik", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AE", symbol_native: "\u20AE", symbol_placement: "before", thousands_separator: "." }, MoroccoDirham: { code: m$3.MoroccoDirham, countries: [r$4.Morocco], decimal_digits: 2, decimal_separator: ",", name: "Morocco Dirham", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "DH", symbol_native: "DH", symbol_placement: "before", thousands_separator: "." }, MozambiqueMetical: { code: m$3.MozambiqueMetical, countries: [r$4.Mozambique], decimal_digits: 2, decimal_separator: ",", name: "Mozambique Metical", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "MT", symbol_native: "MT", symbol_placement: "before", thousands_separator: "." }, MyanmarKyat: { code: m$3.MyanmarKyat, countries: [r$4.Myanmar], decimal_digits: 0, decimal_separator: ",", name: "Myanmar Kyat", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "K", symbol_native: "K", symbol_placement: "before", thousands_separator: "." }, NamibiaDollar: { code: m$3.NamibiaDollar, countries: [r$4.Namibia], decimal_digits: 2, decimal_separator: ",", name: "Namibia Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, NepalRupee: { code: m$3.NepalRupee, countries: [r$4.Nepal], decimal_digits: 2, decimal_separator: ",", name: "Nepal Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, NetherlandsAntillesGuilder: { code: m$3.NetherlandsAntillesGuilder, countries: [r$4.NetherlandsAntilles], decimal_digits: 2, decimal_separator: ",", name: "Netherlands Antilles Guilder", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0192", symbol_native: "\u0192", symbol_placement: "before", thousands_separator: "." }, NewCaledoniaFranc: { code: m$3.NewCaledoniaFranc, countries: [r$4.NewCaledonia], decimal_digits: 0, decimal_separator: ",", name: "New Caledonia Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A3", symbol_native: "\u20A3", symbol_placement: "before", thousands_separator: "." }, NewZealandDollar: { code: m$3.NewZealandDollar, countries: [r$4.NewZealand], decimal_digits: 2, decimal_separator: ",", name: "New Zealand Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, NicaraguaCordoba: { code: m$3.NicaraguaCordoba, countries: [r$4.Nicaragua], decimal_digits: 2, decimal_separator: ",", name: "Nicaragua Cordoba", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "C$", symbol_native: "C$", symbol_placement: "before", thousands_separator: "." }, NigerCFAFranc: { code: m$3.NigerCFAFranc, countries: [r$4.Niger], decimal_digits: 0, decimal_separator: ",", name: "Niger CFA Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "CFA", symbol_native: "CFA", symbol_placement: "before", thousands_separator: "." }, NigeriaNaira: { code: m$3.NigeriaNaira, countries: [r$4.Nigeria], decimal_digits: 2, decimal_separator: ",", name: "Nigeria Naira", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A6", symbol_native: "\u20A6", symbol_placement: "before", thousands_separator: "." }, NorthKoreaWon: { code: m$3.NorthKoreaWon, countries: [r$4.NorthKorea], decimal_digits: 0, decimal_separator: ",", name: "North Korea Won", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A9", symbol_native: "\u20A9", symbol_placement: "before", thousands_separator: "." }, NorwayKrone: { code: m$3.NorwayKrone, countries: [r$4.Norway], decimal_digits: 2, decimal_separator: ",", name: "Norway Krone", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, OmanRial: { code: m$3.OmanRial, countries: [r$4.Oman], decimal_digits: 3, decimal_separator: ",", name: "Oman Rial", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, PakistanRupee: { code: m$3.PakistanRupee, countries: [r$4.Pakistan], decimal_digits: 2, decimal_separator: ",", name: "Pakistan Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, PanamaBalboa: { code: m$3.PanamaBalboa, countries: [r$4.Panama], decimal_digits: 2, decimal_separator: ",", name: "Panama Balboa", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "B/.", symbol_native: "B/.", symbol_placement: "before", thousands_separator: "." }, ParaguayGuarani: { code: m$3.ParaguayGuarani, countries: [r$4.Paraguay], decimal_digits: 0, decimal_separator: ",", name: "Paraguay Guarani", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Gs", symbol_native: "Gs", symbol_placement: "before", thousands_separator: "." }, PeruvianNuevo: { code: m$3.PeruNuevo, countries: [r$4.Peru], decimal_digits: 2, decimal_separator: ",", name: "Peruvian Nuevo", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "S/.", symbol_native: "S/.", symbol_placement: "before", thousands_separator: "." }, PhilippinesPeso: { code: m$3.PhilippinesPeso, countries: [r$4.Philippines], decimal_digits: 2, decimal_separator: ",", name: "Philippines Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B1", symbol_native: "\u20B1", symbol_placement: "before", thousands_separator: "." }, PolandZloty: { code: m$3.PolandZloty, countries: [r$4.Poland], decimal_digits: 2, decimal_separator: ",", name: "Poland Zloty", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "z\u0142", symbol_native: "z\u0142", symbol_placement: "before", thousands_separator: "." }, QatarRial: { code: m$3.QatarRial, countries: [r$4.Qatar], decimal_digits: 2, decimal_separator: ",", name: "Qatar Rial", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, RomaniaNewLeu: { code: m$3.RomaniaNewLeu, countries: [r$4.Romania], decimal_digits: 2, decimal_separator: ",", name: "Romania New Leu", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "lei", symbol_native: "lei", symbol_placement: "before", thousands_separator: "." }, RussiaRuble: { code: m$3.RussiaRuble, countries: [r$4.RussianFederation], decimal_digits: 2, decimal_separator: ",", name: "Russia Ruble", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20BD", symbol_native: "\u20BD", symbol_placement: "before", thousands_separator: "." }, RwandaFranc: { code: m$3.RwandaFranc, countries: [r$4.Rwanda], decimal_digits: 0, decimal_separator: ",", name: "Rwanda Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "RF", symbol_native: "RF", symbol_placement: "before", thousands_separator: "." }, SaudiArabiaRiyal: { code: m$3.SaudiArabiaRiyal, countries: [r$4.SaudiArabia], decimal_digits: 2, decimal_separator: ",", name: "Saudi Arabia Riyal", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, SerbiaDinar: { code: m$3.SerbiaDinar, countries: [r$4.Serbia], decimal_digits: 0, decimal_separator: ",", name: "Serbia Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0414\u0438\u043D.", symbol_native: "\u0414\u0438\u043D.", symbol_placement: "before", thousands_separator: "." }, SeychellesRupee: { code: m$3.SeychellesRupee, countries: [r$4.Seychelles], decimal_digits: 2, decimal_separator: ",", name: "Seychelles Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, SingaporeDollar: { code: m$3.SingaporeDollar, countries: [r$4.Singapore], decimal_digits: 2, decimal_separator: ",", name: "Singapore Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, SlovakiaKoruna: { code: m$3.SlovakiaKoruna, countries: [r$4.Slovakia], decimal_digits: 2, decimal_separator: ",", name: "Slovakia Koruna", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Sk", symbol_native: "Sk", symbol_placement: "before", thousands_separator: "." }, SloveniaTolar: { code: m$3.SloveniaTolar, countries: [r$4.Slovenia], decimal_digits: 2, decimal_separator: ",", name: "Slovenia Tolar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "SIT", symbol_native: "SIT", symbol_placement: "before", thousands_separator: "." }, SolomonIslandsDollar: { code: m$3.SolomonIslandsDollar, countries: [r$4.SolomonIslands], decimal_digits: 2, decimal_separator: ",", name: "Solomon Islands Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, SomaliaShilling: { code: m$3.SomaliaShilling, countries: [r$4.Somalia], decimal_digits: 0, decimal_separator: ",", name: "Somalia Shilling", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "S", symbol_native: "S", symbol_placement: "before", thousands_separator: "." }, SouthAfricaRand: { code: m$3.SouthAfricaRand, countries: [r$4.SouthAfrica], decimal_digits: 2, decimal_separator: ",", name: "South Africa Rand", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "R", symbol_native: "R", symbol_placement: "before", thousands_separator: "." }, SouthKoreaWon: { code: m$3.SouthKoreaWon, countries: [r$4.SouthKorea], decimal_digits: 0, decimal_separator: ",", name: "South Korea Won", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A9", symbol_native: "\u20A9", symbol_placement: "before", thousands_separator: "." }, SriLankaRupee: { code: m$3.SriLankaRupee, countries: [r$4.SriLanka], decimal_digits: 2, decimal_separator: ",", name: "Sri Lanka Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, SudanPound: { code: m$3.SudanPound, countries: [r$4.Sudan], decimal_digits: 2, decimal_separator: ",", name: "Sudan Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, SurinameDollar: { code: m$3.SurinameDollar, countries: [r$4.Suriname], decimal_digits: 2, decimal_separator: ",", name: "Suriname Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, SwazilandLilangeni: { code: m$3.SwazilandLilangeni, countries: [r$4.Swaziland], decimal_digits: 2, decimal_separator: ",", name: "Swaziland Lilangeni", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "E", symbol_native: "E", symbol_placement: "before", thousands_separator: "." }, SwedenKrona: { code: m$3.SwedenKrona, countries: [r$4.Sweden], decimal_digits: 2, decimal_separator: ",", name: "Sweden Krona", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, SwitzerlandFranc: { code: m$3.SwitzerlandFranc, countries: [r$4.Switzerland], decimal_digits: 2, decimal_separator: ",", name: "Switzerland Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "CHF", symbol_native: "CHF", symbol_placement: "before", thousands_separator: "." }, SyriaPound: { code: m$3.SyriaPound, countries: [r$4.Syria], decimal_digits: 2, decimal_separator: ",", name: "Syria Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, TaiwanNewDollar: { code: m$3.TaiwanNewDollar, countries: [r$4.Taiwan], decimal_digits: 2, decimal_separator: ",", name: "Taiwan New Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "NT$", symbol_native: "NT$", symbol_placement: "before", thousands_separator: "." }, TajikistanSomoni: { code: m$3.TajikistanSomoni, countries: [r$4.Tajikistan], decimal_digits: 2, decimal_separator: ",", name: "Tajikistan Somoni", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "TJS", symbol_native: "TJS", symbol_placement: "before", thousands_separator: "." }, TanzaniaShilling: { code: m$3.TanzaniaShilling, countries: [r$4.Tanzania], decimal_digits: 2, decimal_separator: ",", name: "Tanzania Shilling", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "TSh", symbol_native: "TSh", symbol_placement: "before", thousands_separator: "." }, ThailandBaht: { code: m$3.ThailandBaht, countries: [r$4.Thailand], decimal_digits: 2, decimal_separator: ",", name: "Thailand Baht", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0E3F", symbol_native: "\u0E3F", symbol_placement: "before", thousands_separator: "." }, TunisiaDinar: { code: m$3.TunisiaDinar, countries: [r$4.Tunisia], decimal_digits: 3, decimal_separator: ",", name: "Tunisia Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u062F.\u062A", symbol_native: "\u062F.\u062A", symbol_placement: "before", thousands_separator: "." }, TurkeyLira: { code: m$3.TurkeyLira, countries: [r$4.Turkey], decimal_digits: 2, decimal_separator: ",", name: "Turkey Lira", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20BA", symbol_native: "\u20BA", symbol_placement: "before", thousands_separator: "." }, TurkmenistanManat: { code: m$3.TurkmenistanManat, countries: [r$4.Turkmenistan], decimal_digits: 2, decimal_separator: ",", name: "Turkmenistan Manat", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "m", symbol_native: "m", symbol_placement: "before", thousands_separator: "." }, UgandaShilling: { code: m$3.UgandaShilling, countries: [r$4.Uganda], decimal_digits: 0, decimal_separator: ",", name: "Uganda Shilling", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "USh", symbol_native: "USh", symbol_placement: "before", thousands_separator: "." }, UkraineHryvnia: { code: m$3.UkraineHryvnia, countries: [r$4.Ukraine], decimal_digits: 2, decimal_separator: ",", name: "Ukraine Hryvnia", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B4", symbol_native: "\u20B4", symbol_placement: "before", thousands_separator: "." }, UnitedArabEmiratesDirham: { code: m$3.UnitedArabEmiratesDirham, countries: [r$4.UnitedArabEmirates], decimal_digits: 2, decimal_separator: ",", name: "United Arab Emirates Dirham", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u062F.\u0625", symbol_native: "\u062F.\u0625", symbol_placement: "before", thousands_separator: "." }, UnitedKingdomPound: { code: m$3.UnitedKingdomPound, countries: [r$4.UnitedKingdom], decimal_digits: 2, decimal_separator: ",", name: "United Kingdom Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, UnitedStatesDollar: { code: m$3.UnitedStatesDollar, countries: [r$4.UnitedStates], decimal_digits: 2, decimal_separator: ",", name: "United States Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, UruguayPeso: { code: m$3.UruguayPeso, countries: [r$4.Uruguay], decimal_digits: 2, decimal_separator: ",", name: "Uruguay Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$U", symbol_native: "$U", symbol_placement: "before", thousands_separator: "." }, UzbekistanSom: { code: m$3.UzbekistanSom, countries: [r$4.Uzbekistan], decimal_digits: 2, decimal_separator: ",", name: "Uzbekistan Som", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "UZS", symbol_native: "UZS", symbol_placement: "before", thousands_separator: "." }, VanuatuVatu: { code: m$3.VanuatuVatu, countries: [r$4.Vanuatu], decimal_digits: 0, decimal_separator: ",", name: "Vanuatu Vatu", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "VT", symbol_native: "VT", symbol_placement: "before", thousands_separator: "." }, VenezuelaBolivar: { code: m$3.VenezuelaBolivar, countries: [r$4.Venezuela], decimal_digits: 2, decimal_separator: ",", name: "Venezuela Bolivar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Bs. F", symbol_native: "Bs. F", symbol_placement: "before", thousands_separator: "." }, VietnamDong: { code: m$3.VietnamDong, countries: [r$4.Vietnam], decimal_digits: 0, decimal_separator: ",", name: "Vietnam Dong", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AB", symbol_native: "\u20AB", symbol_placement: "before", thousands_separator: "." }, YemenRial: { code: m$3.YemenRial, countries: [r$4.Yemen], decimal_digits: 2, decimal_separator: ",", name: "Yemen Rial", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, ZambiaKwacha: { code: m$3.ZambiaKwacha, countries: [r$4.Zambia], decimal_digits: 2, decimal_separator: ",", name: "Zambia Kwacha", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "ZK", symbol_native: "ZK", symbol_placement: "before", thousands_separator: "." }, ZimbabweDollar: { code: m$3.ZimbabweDollar, countries: [r$4.Zimbabwe], decimal_digits: 2, decimal_separator: ",", name: "Zimbabwe Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AB", symbol_native: "\u20AB", symbol_placement: "before", thousands_separator: "." } });
var Me$1;
(function(a) {
  a.Bitcoin = "BTC", a.Ethereum = "ETH", a.Litecoin = "LTC", a.Ripple = "XRP", a.Dash = "DASH", a.Zcash = "ZEC", a.Dogecoin = "DOGE", a.Monero = "XMR", a.BitcoinCash = "BCH", a.EOS = "EOS", a.Binance = "BNB", a.Stellar = "XLM", a.Cardano = "ADA", a.IOTA = "IOTA", a.Tezos = "XTZ", a.NEO = "NEO", a.TRON = "TRX", a.EOSClassic = "EOSC", a.Ontology = "ONT", a.VeChain = "VEN", a.QTUM = "QTUM", a.Lisk = "LSK", a.Waves = "WAVES", a.OmiseGO = "OMG", a.Zilliqa = "ZIL", a.BitcoinGold = "BTG", a.Decred = "DCR", a.Stratis = "STRAT", a.Populous = "PPT", a.Augur = "REP", a.Golem = "GNT", a.Siacoin = "SC", a.BasicAttentionToken = "BAT", a.ZCoin = "XZC", a.StratisHedged = "SNT", a.VeChainHedged = "VEN", a.PowerLedger = "POWR", a.WavesHedged = "WAVE", a.ZilliqaHedged = "ZRX", a.BitcoinDiamond = "BCD", a.DigiByte = "DGB", a.DigiByteHedged = "DGB", a.Bytecoin = "BCN", a.BytecoinHedged = "BCN";
})(Me$1 || (Me$1 = {}));
var t$1;
(function(a) {
  a.Afrikaans = "af", a.Albanian = "sq", a.Amharic = "am", a.Arabic = "ar", a.Armenian = "hy", a.Azerbaijani = "az", a.Bashkir = "ba", a.Basque = "eu", a.Belarusian = "be", a.Bengali = "bn", a.Berber = "ber", a.Bhutani = "dz", a.Bihari = "bh", a.Bislama = "bi", a.Bosnian = "bs", a.Breten = "br", a.Bulgarian = "bg", a.Burmese = "my", a.Cantonese = "yue", a.Catalan = "ca", a.Chinese = "zh", a.Chuvash = "cv", a.Corsican = "co", a.Croatian = "hr", a.Czech = "cs", a.Danish = "da", a.Dari = "prs", a.Divehi = "dv", a.Dutch = "nl", a.English = "en", a.Esperanto = "eo", a.Estonian = "et", a.Faroese = "fo", a.Farsi = "fa", a.Filipino = "fil", a.Finnish = "fi", a.French = "fr", a.Frisian = "fy", a.Galician = "gl", a.Georgian = "ka", a.German = "de", a.Greek = "el", a.Greenlandic = "kl", a.Gujarati = "gu", a.Haitian = "ht", a.Hausa = "ha", a.Hebrew = "he", a.Hindi = "hi", a.Hungarian = "hu", a.Icelandic = "is", a.Igbo = "ig", a.Indonesian = "id", a.Irish = "ga", a.Italian = "it", a.Japanese = "ja", a.Javanese = "jv", a.Kannada = "kn", a.Karelian = "krl", a.Kazakh = "kk", a.Khmer = "km", a.Komi = "kv", a.Konkani = "kok", a.Korean = "ko", a.Kurdish = "ku", a.Kyrgyz = "ky", a.Lao = "lo", a.Latin = "la", a.Latvian = "lv", a.Lithuanian = "lt", a.Luxembourgish = "lb", a.Ossetian = "os", a.Macedonian = "mk", a.Malagasy = "mg", a.Malay = "ms", a.Malayalam = "ml", a.Maltese = "mt", a.Maori = "mi", a.Marathi = "mr", a.Mari = "mhr", a.Mongolian = "mn", a.Montenegrin = "me", a.Nepali = "ne", a.NorthernSotho = "nso", a.Norwegian = "no", a.NorwegianBokmal = "nb", a.NorwegianNynorsk = "nn", a.Oriya = "or", a.Pashto = "ps", a.Persian = "fa", a.Polish = "pl", a.Portuguese = "pt", a.Punjabi = "pa", a.Quechua = "qu", a.Romanian = "ro", a.Russian = "ru", a.Sakha = "sah", a.Sami = "se", a.Samoan = "sm", a.Sanskrit = "sa", a.Scots = "gd", a.Serbian = "sr", a.SerbianCyrillic = "sr-Cyrl", a.Sesotho = "st", a.Shona = "sn", a.Sindhi = "sd", a.Sinhala = "si", a.Slovak = "sk", a.Slovenian = "sl", a.Somali = "so", a.Spanish = "es", a.Sudanese = "su", a.Sutu = "sx", a.Swahili = "sw", a.Swedish = "sv", a.Syriac = "syr", a.Tagalog = "tl", a.Tajik = "tg", a.Tamazight = "tmh", a.Tamil = "ta", a.Tatar = "tt", a.Telugu = "te", a.Thai = "th", a.Tibetan = "bo", a.Tsonga = "ts", a.Tswana = "tn", a.Turkish = "tr", a.Turkmen = "tk", a.Ukrainian = "uk", a.Urdu = "ur", a.Uzbek = "uz", a.Vietnamese = "vi", a.Welsh = "cy", a.Xhosa = "xh", a.Yiddish = "yi", a.Yoruba = "yo", a.Zulu = "zu";
})(t$1 || (t$1 = {}));
var e$2;
(function(a) {
  a.Afrikaans = "af", a.AfrikaansSouthAfrica = "af-ZA", a.Albanian = "sq", a.AlbanianAlbania = "sq-AL", a.Amharic = "am", a.AmharicEthiopia = "am-ET", a.Arabic = "ar", a.ArabicAlgeria = "ar-DZ", a.ArabicBahrain = "ar-BH", a.ArabicEgypt = "ar-EG", a.ArabicIraq = "ar-IQ", a.ArabicJordan = "ar-JO", a.ArabicKuwait = "ar-KW", a.ArabicLebanon = "ar-LB", a.ArabicLibya = "ar-LY", a.ArabicMorocco = "ar-MA", a.ArabicOman = "ar-OM", a.ArabicQatar = "ar-QA", a.ArabicSaudiArabia = "ar-SA", a.ArabicSyria = "ar-SY", a.ArabicTunisia = "ar-TN", a.ArabicUnitedArabEmirates = "ar-AE", a.ArabicYemen = "ar-YE", a.Armenian = "hy", a.ArmenianArmenia = "hy-AM", a.Azerbaijani = "az", a.AzerbaijaniAzerbaijan = "az-AZ", a.AzerbaijaniCyrillicAzerbaijan = "az-Cyrl-AZ", a.Bashkir = "ba", a.Basque = "eu", a.BasqueSpain = "eu-ES", a.Belarusian = "be", a.BelarusianBelarus = "be-BY", a.Bengali = "bn", a.BengaliBangladesh = "bn-BD", a.BengaliIndia = "bn-IN", a.Berber = "ber", a.Bhutani = "dz", a.BhutaniBhutan = "dz-BT", a.Bosnian = "bs", a.BosnianBosniaAndHerzegovina = "bs-BA", a.Breton = "br", a.Bulgarian = "bg", a.BulgarianBosniaAndHerzegovina = "bg-BG", a.BulgarianBulgaria = "bg-BG", a.Burmese = "my", a.BurmeseMyanmar = "my-MM", a.Cantonese = "yue", a.CantoneseHongKong = "yue-HK", a.Catalan = "ca", a.CatalanSpain = "ca-ES", a.Chechen = "ce", a.Cherokee = "chr", a.Chinese = "zh", a.ChineseSimplified = "zh-Hans", a.ChineseSimplifiedChina = "zh-Hans-CN", a.ChineseSimplifiedHongKong = "zh-Hans-HK", a.ChineseSimplifiedMacau = "zh-Hans-MO", a.ChineseSimplifiedSingapore = "zh-Hans-SG", a.ChineseTraditional = "zh-Hant", a.ChineseTraditionalHongKong = "zh-Hant-HK", a.ChineseTraditionalMacau = "zh-Hant-MO", a.ChineseTraditionalSingapore = "zh-Hant-SG", a.ChineseTraditionalTaiwan = "zh-Hant-TW", a.Chuvash = "cv", a.CorsicanFrance = "co-FR", a.Croatian = "hr", a.CroatianBosniaAndHerzegovina = "hr-BA", a.CroatianCroatia = "hr-HR", a.Czech = "cs", a.CzechCzechRepublic = "cs-CZ", a.Danish = "da", a.DanishDenmark = "da-DK", a.Dari = "prs", a.DariAfghanistan = "prs-AF", a.Divehi = "dv", a.DivehiMaldives = "dv-MV", a.Dutch = "nl", a.DutchBelgium = "nl-BE", a.DutchNetherlands = "nl-NL", a.English = "en", a.EnglishAustralia = "en-AU", a.EnglishBelgium = "en-BE", a.EnglishBelize = "en-BZ", a.EnglishCanada = "en-CA", a.EnglishCaribbean = "en-029", a.EnglishIreland = "en-IE", a.EnglishJamaica = "en-JM", a.EnglishNewZealand = "en-NZ", a.EnglishPhilippines = "en-PH", a.EnglishSingapore = "en-SG", a.EnglishSouthAfrica = "en-ZA", a.EnglishTrinidadAndTobago = "en-TT", a.EnglishUnitedKingdom = "en-GB", a.EnglishUnitedStates = "en-US", a.EnglishZimbabwe = "en-ZW", a.Esperanto = "eo", a.Estonian = "et", a.EstonianEstonia = "et-EE", a.Faroese = "fo", a.FaroeseFaroeIslands = "fo-FO", a.Farsi = "fa", a.FarsiIran = "fa-IR", a.Filipino = "fil", a.FilipinoPhilippines = "fil-PH", a.Finnish = "fi", a.FinnishFinland = "fi-FI", a.French = "fr", a.FrenchBelgium = "fr-BE", a.FrenchCanada = "fr-CA", a.FrenchFrance = "fr-FR", a.FrenchLuxembourg = "fr-LU", a.FrenchMonaco = "fr-MC", a.FrenchReunion = "fr-RE", a.FrenchSwitzerland = "fr-CH", a.Frisian = "fy", a.FrisianNetherlands = "fy-NL", a.Galician = "gl", a.GalicianSpain = "gl-ES", a.Georgian = "ka", a.GeorgianGeorgia = "ka-GE", a.German = "de", a.GermanAustria = "de-AT", a.GermanBelgium = "de-BE", a.GermanGermany = "de-DE", a.GermanLiechtenstein = "de-LI", a.GermanLuxembourg = "de-LU", a.GermanSwitzerland = "de-CH", a.Greenlandic = "kl", a.GreenlandicGreenland = "kl-GL", a.Greek = "el", a.GreekGreece = "el-GR", a.Gujarati = "gu", a.GujaratiIndia = "gu-IN", a.Haitian = "ht", a.Hausa = "ha", a.HausaGhana = "ha-GH", a.HausaNiger = "ha-NE", a.HausaNigeria = "ha-NG", a.Hebrew = "he", a.HebrewIsrael = "he-IL", a.Hindi = "hi", a.HindiIndia = "hi-IN", a.Hungarian = "hu", a.HungarianHungary = "hu-HU", a.Icelandic = "is", a.IcelandicIceland = "is-IS", a.Igbo = "ig", a.IgboNigeria = "ig-NG", a.Indonesian = "id", a.IndonesianIndonesia = "id-ID", a.Irish = "ga", a.IrishIreland = "ga-IE", a.Italian = "it", a.ItalianItaly = "it-IT", a.ItalianSwitzerland = "it-CH", a.Japanese = "ja", a.JapaneseJapan = "ja-JP", a.Javanese = "jv", a.Kannada = "kn", a.KannadaIndia = "kn-IN", a.Karelian = "krl", a.Kazakh = "kk", a.KazakhKazakhstan = "kk-KZ", a.Khmer = "km", a.KhmerCambodia = "km-KH", a.KinyarwandaRwanda = "rw-RW", a.Komi = "kv", a.Konkani = "kok", a.KonkaniIndia = "kok-IN", a.Korean = "ko", a.KoreanSouthKorea = "ko-KR", a.Kurdish = "ku", a.KurdishIraq = "ku-IQ", a.KurdishTurkey = "ku-TR", a.Kyrgyz = "ky", a.KyrgyzKyrgyzstan = "ky-KG", a.Lao = "lo", a.LaoLaos = "lo-LA", a.Latin = "la", a.Latvian = "lv", a.LatvianLatvia = "lv-LV", a.Lithuanian = "lt", a.LithuanianLithuania = "lt-LT", a.Luxembourgish = "lb", a.LuxembourgishBelgium = "lb-LU", a.LuxembourgishLuxembourg = "lb-LU", a.Macedonian = "mk", a.MacedonianNorthMacedonia = "mk-MK", a.Malagasy = "mg", a.Malay = "ms", a.MalayBrunei = "ms-BN", a.MalayIndia = "ms-IN", a.MalayMalaysia = "ms-MY", a.MalaySingapore = "ms-SG", a.Malayalam = "ml", a.MalayalamIndia = "ml-IN", a.Maltese = "mt", a.MalteseMalta = "mt-MT", a.Maori = "mi", a.MaoriNewZealand = "mi-NZ", a.Marathi = "mr", a.MarathiIndia = "mr-IN", a.Mari = "chm", a.Mongolian = "mn", a.MongolianMongolia = "mn-MN", a.Montenegrin = "me", a.MontenegrinMontenegro = "me-ME", a.Nepali = "ne", a.NepaliNepal = "ne-NP", a.NorthernSotho = "ns", a.NorthernSothoSouthAfrica = "ns-ZA", a.Norwegian = "nb", a.NorwegianBokmalNorway = "nb-NO", a.NorwegianNynorskNorway = "nn-NO", a.Oriya = "or", a.OriyaIndia = "or-IN", a.Ossetian = "os", a.Pashto = "ps", a.PashtoAfghanistan = "ps-AF", a.Persian = "fa", a.PersianIran = "fa-IR", a.Polish = "pl", a.PolishPoland = "pl-PL", a.Portuguese = "pt", a.PortugueseBrazil = "pt-BR", a.PortuguesePortugal = "pt-PT", a.Punjabi = "pa", a.PunjabiIndia = "pa-IN", a.PunjabiPakistan = "pa-PK", a.Quechua = "qu", a.QuechuaBolivia = "qu-BO", a.QuechuaEcuador = "qu-EC", a.QuechuaPeru = "qu-PE", a.Romanian = "ro", a.RomanianRomania = "ro-RO", a.Russian = "ru", a.RussianKazakhstan = "ru-KZ", a.RussianKyrgyzstan = "ru-KG", a.RussianRussia = "ru-RU", a.RussianUkraine = "ru-UA", a.Sakha = "sah", a.Sanskrit = "sa", a.SanskritIndia = "sa-IN", a.Sami = "se", a.SamiNorway = "se-NO", a.SamiSweden = "se-SE", a.SamiFinland = "se-FI", a.Samoan = "sm", a.SamoanSamoa = "sm-WS", a.Scots = "gd", a.Serbian = "sr", a.SerbianBosniaAndHerzegovina = "sr-BA", a.SerbianSerbiaAndMontenegro = "sr-SP", a.SerbianCyrillic = "sr-SP-Cyrl", a.SerbianCyrillicBosniaAndHerzegovina = "sr-Cyrl-BA", a.SerbianCyrillicSerbiaAndMontenegro = "sr-Cyrl-SP", a.Sesotho = "st", a.SesothoSouthAfrica = "st-ZA", a.Shona = "sn", a.ShonaZimbabwe = "sn-ZW", a.Sindhi = "sd", a.SindhiPakistan = "sd-PK", a.Sinhala = "si", a.SinhalaSriLanka = "si-LK", a.Slovak = "sk", a.SlovakSlovakia = "sk-SK", a.Slovenian = "sl", a.SlovenianSlovenia = "sl-SI", a.Somali = "so", a.SomaliSomalia = "so-SO", a.Spanish = "es", a.SpanishArgentina = "es-AR", a.SpanishBolivia = "es-BO", a.SpanishChile = "es-CL", a.SpanishColombia = "es-CO", a.SpanishCostaRica = "es-CR", a.SpanishCuba = "es-CU", a.SpanishDominicanRepublic = "es-DO", a.SpanishEcuador = "es-EC", a.SpanishEquatorialGuinea = "es-GQ", a.SpanishElSalvador = "es-SV", a.SpanishGuatemala = "es-GT", a.SpanishHonduras = "es-HN", a.SpanishMexico = "es-MX", a.SpanishNicaragua = "es-NI", a.SpanishPanama = "es-PA", a.SpanishParaguay = "es-PY", a.SpanishPeru = "es-PE", a.SpanishPuertoRico = "es-PR", a.SpanishSpain = "es-ES", a.SpanishUnitedStates = "es-US", a.SpanishUruguay = "es-UY", a.SpanishVenezuela = "es-VE", a.Sudanese = "su", a.Sutu = "st", a.SutuSouthAfrica = "st-ZA", a.Swahili = "sw", a.SwahiliKenya = "sw-KE", a.Swedish = "sv", a.SwedishFinland = "sv-FI", a.SwedishSweden = "sv-SE", a.Syriac = "syr", a.SyriacSyria = "syr-SY", a.Tajik = "tg", a.TajikTajikistan = "tg-TJ", a.Tagalog = "tl", a.TagalogPhilippines = "tl-PH", a.Tamazight = "tmh", a.Tamil = "ta", a.TamilIndia = "ta-IN", a.Tatar = "tt", a.Telugu = "te", a.TeluguIndia = "te-IN", a.Thai = "th", a.ThaiThailand = "th-TH", a.Tibetan = "bo", a.TibetanBhutan = "bo-BT", a.TibetanChina = "bo-CN", a.TibetanIndia = "bo-IN", a.Tsonga = "ts", a.Tswana = "tn", a.TswanaSouthAfrica = "tn-ZA", a.Turkish = "tr", a.TurkishTurkey = "tr-TR", a.Turkmen = "tk", a.Ukrainian = "uk", a.UkrainianUkraine = "uk-UA", a.Urdu = "ur", a.UrduAfghanistan = "ur-AF", a.UrduIndia = "ur-IN", a.UrduPakistan = "ur-PK", a.Uzbek = "uz", a.UzbekCyrillic = "uz-Cyrl-UZ", a.UzbekLatin = "uz-Latn-UZ", a.UzbekUzbekistan = "uz-UZ", a.Vietnamese = "vi", a.VietnameseVietnam = "vi-VN", a.Welsh = "cy", a.WelshUnitedKingdom = "cy-GB", a.Xhosa = "xh", a.XhosaSouthAfrica = "xh-ZA", a.Yiddish = "yi", a.Yoruba = "yo", a.YorubaNigeria = "yo-NG", a.ZhuyinMandarinChina = "yue-Hant-CN", a.Zulu = "zu", a.ZuluSouthAfrica = "zu-ZA";
})(e$2 || (e$2 = {}));
var u$2;
(function(a) {
  a.AfricaAbidjan = "Africa/Abidjan", a.AfricaAccra = "Africa/Accra", a.AfricaAddisAbaba = "Africa/Addis_Ababa", a.AfricaAlgiers = "Africa/Algiers", a.AfricaAsmara = "Africa/Asmara", a.AfricaBamako = "Africa/Bamako", a.AfricaBangui = "Africa/Bangui", a.AfricaBanjul = "Africa/Banjul", a.AfricaBissau = "Africa/Bissau", a.AfricaBlantyre = "Africa/Blantyre", a.AfricaBrazzaville = "Africa/Brazzaville", a.AfricaBujumbura = "Africa/Bujumbura", a.AfricaCairo = "Africa/Cairo", a.AfricaCasablanca = "Africa/Casablanca", a.AfricaCeuta = "Africa/Ceuta", a.AfricaConakry = "Africa/Conakry", a.AfricaDakar = "Africa/Dakar", a.AfricaDarEsSalaam = "Africa/Dar_es_Salaam", a.AfricaDjibouti = "Africa/Djibouti", a.AfricaDouala = "Africa/Douala", a.AfricaElAaiun = "Africa/El_Aaiun", a.AfricaFreetown = "Africa/Freetown", a.AfricaGaborone = "Africa/Gaborone", a.AfricaHarare = "Africa/Harare", a.AfricaJohannesburg = "Africa/Johannesburg", a.AfricaJuba = "Africa/Juba", a.AfricaKampala = "Africa/Kampala", a.AfricaKhartoum = "Africa/Khartoum", a.AfricaKigali = "Africa/Kigali", a.AfricaKinshasa = "Africa/Kinshasa", a.AfricaLagos = "Africa/Lagos", a.AfricaLibreville = "Africa/Libreville", a.AfricaLome = "Africa/Lome", a.AfricaLuanda = "Africa/Luanda", a.AfricaLubumbashi = "Africa/Lubumbashi", a.AfricaLusaka = "Africa/Lusaka", a.AfricaMalabo = "Africa/Malabo", a.AfricaMaputo = "Africa/Maputo", a.AfricaMaseru = "Africa/Maseru", a.AfricaMbabane = "Africa/Mbabane", a.AfricaMogadishu = "Africa/Mogadishu", a.AfricaMonrovia = "Africa/Monrovia", a.AfricaNairobi = "Africa/Nairobi", a.AfricaNdjamena = "Africa/Ndjamena", a.AfricaNiamey = "Africa/Niamey", a.AfricaNouakchott = "Africa/Nouakchott", a.AfricaOuagadougou = "Africa/Ouagadougou", a.AfricaPortoNovo = "Africa/Porto-Novo", a.AfricaSaoTome = "Africa/Sao_Tome", a.AfricaTripoli = "Africa/Tripoli", a.AfricaTunis = "Africa/Tunis", a.AfricaWindhoek = "Africa/Windhoek", a.AmericaAdak = "America/Adak", a.AmericaAnchorage = "America/Anchorage", a.AmericaAnguilla = "America/Anguilla", a.AmericaAntigua = "America/Antigua", a.AmericaAraguaina = "America/Araguaina", a.AmericaArgentinaBuenosAires = "America/Argentina/Buenos_Aires", a.AmericaArgentinaCatamarca = "America/Argentina/Catamarca", a.AmericaArgentinaCordoba = "America/Argentina/Cordoba", a.AmericaArgentinaJujuy = "America/Argentina/Jujuy", a.AmericaArgentinaLaRioja = "America/Argentina/La_Rioja", a.AmericaArgentinaMendoza = "America/Argentina/Mendoza", a.AmericaArgentinaRioGallegos = "America/Argentina/Rio_Gallegos", a.AmericaArgentinaSalta = "America/Argentina/Salta", a.AmericaArgentinaSanJuan = "America/Argentina/San_Juan", a.AmericaArgentinaSanLuis = "America/Argentina/San_Luis", a.AmericaArgentinaTucuman = "America/Argentina/Tucuman", a.AmericaArgentinaUshuaia = "America/Argentina/Ushuaia", a.AmericaAruba = "America/Aruba", a.AmericaAsuncion = "America/Asuncion", a.AmericaAtikokan = "America/Atikokan", a.AmericaAtka = "America/Atka", a.AmericaBahia = "America/Bahia", a.AmericaBahiaBanderas = "America/Bahia_Banderas", a.AmericaBarbados = "America/Barbados", a.AmericaBelem = "America/Belem", a.AmericaBelize = "America/Belize", a.AmericaBlancSablon = "America/Blanc-Sablon", a.AmericaBoaVista = "America/Boa_Vista", a.AmericaBogota = "America/Bogota", a.AmericaBoise = "America/Boise", a.AmericaCambridgeBay = "America/Cambridge_Bay", a.AmericaCampoGrande = "America/Campo_Grande", a.AmericaCancun = "America/Cancun", a.AmericaCaracas = "America/Caracas", a.AmericaCayenne = "America/Cayenne", a.AmericaCayman = "America/Cayman", a.AmericaChicago = "America/Chicago", a.AmericaChihuahua = "America/Chihuahua", a.AmericaCoralHarbour = "America/Coral_Harbour", a.AmericaCordoba = "America/Cordoba", a.AmericaCostaRica = "America/Costa_Rica", a.AmericaCreston = "America/Creston", a.AmericaCuiaba = "America/Cuiaba", a.AmericaCuracao = "America/Curacao", a.AmericaDanmarkshavn = "America/Danmarkshavn", a.AmericaDawson = "America/Dawson", a.AmericaDawsonCreek = "America/Dawson_Creek", a.AmericaDenver = "America/Denver", a.AmericaDetroit = "America/Detroit", a.AmericaDominica = "America/Dominica", a.AmericaEdmonton = "America/Edmonton", a.AmericaEirunepe = "America/Eirunepe", a.AmericaElSalvador = "America/El_Salvador", a.AmericaFortaleza = "America/Fortaleza", a.AmericaGlaceBay = "America/Glace_Bay", a.AmericaGodthab = "America/Godthab", a.AmericaGooseBay = "America/Goose_Bay", a.AmericaGrandTurk = "America/Grand_Turk", a.AmericaGrenada = "America/Grenada", a.AmericaGuadeloupe = "America/Guadeloupe", a.AmericaGuatemala = "America/Guatemala", a.AmericaGuayaquil = "America/Guayaquil", a.AmericaGuyana = "America/Guyana", a.AmericaHalifax = "America/Halifax", a.AmericaHavana = "America/Havana", a.AmericaHermosillo = "America/Hermosillo", a.AmericaIndianaIndianapolis = "America/Indiana/Indianapolis", a.AmericaIndianaKnox = "America/Indiana/Knox", a.AmericaIndianaMarengo = "America/Indiana/Marengo", a.AmericaIndianaPetersburg = "America/Indiana/Petersburg", a.AmericaIndianaTellCity = "America/Indiana/Tell_City", a.AmericaIndianaVevay = "America/Indiana/Vevay", a.AmericaIndianaVincennes = "America/Indiana/Vincennes", a.AmericaIndianaWinamac = "America/Indiana/Winamac", a.AmericaInuvik = "America/Inuvik", a.AmericaIqaluit = "America/Iqaluit", a.AmericaJamaica = "America/Jamaica", a.AmericaJuneau = "America/Juneau", a.AmericaKentuckyLouisville = "America/Kentucky/Louisville", a.AmericaKentuckyMonticello = "America/Kentucky/Monticello", a.AmericaKralendijk = "America/Kralendijk", a.AmericaLaPaz = "America/La_Paz", a.AmericaLima = "America/Lima", a.AmericaLosAngeles = "America/Los_Angeles", a.AmericaLouisville = "America/Louisville", a.AmericaLowerPrinces = "America/Lower_Princes", a.AmericaMaceio = "America/Maceio", a.AmericaManagua = "America/Managua", a.AmericaManaus = "America/Manaus", a.AmericaMarigot = "America/Marigot", a.AmericaMartinique = "America/Martinique", a.AmericaMatamoros = "America/Matamoros", a.AmericaMazatlan = "America/Mazatlan", a.AmericaMenominee = "America/Menominee", a.AmericaMerida = "America/Merida", a.AmericaMetlakatla = "America/Metlakatla", a.AmericaMexicoCity = "America/Mexico_City", a.AmericaMiquelon = "America/Miquelon", a.AmericaMoncton = "America/Moncton", a.AmericaMonterrey = "America/Monterrey", a.AmericaMontevideo = "America/Montevideo", a.AmericaMontserrat = "America/Montserrat", a.AmericaMontreal = "America/Montreal", a.AmericaNassau = "America/Nassau", a.AmericaNewYork = "America/New_York", a.AmericaNipigon = "America/Nipigon", a.AmericaNome = "America/Nome", a.AmericaNoronha = "America/Noronha", a.AmericaNorthDakotaBeulah = "America/North_Dakota/Beulah", a.AmericaNorthDakotaCenter = "America/North_Dakota/Center", a.AmericaNorthDakotaNewSalem = "America/North_Dakota/New_Salem", a.AmericaOjinaga = "America/Ojinaga", a.AmericaPanama = "America/Panama", a.AmericaPangnirtung = "America/Pangnirtung", a.AmericaParamaribo = "America/Paramaribo", a.AmericaPhoenix = "America/Phoenix", a.AmericaPortAuPrince = "America/Port-au-Prince", a.AmericaPortOfSpain = "America/Port_of_Spain", a.AmericaPortoVelho = "America/Porto_Velho", a.AmericaPuertoRico = "America/Puerto_Rico", a.AmericaRainyRiver = "America/Rainy_River", a.AmericaRankinInlet = "America/Rankin_Inlet", a.AmericaRecife = "America/Recife", a.AmericaRegina = "America/Regina", a.AmericaResolute = "America/Resolute", a.AmericaRioBranco = "America/Rio_Branco", a.AmericaSantaIsabel = "America/Santa_Isabel", a.AmericaSantarem = "America/Santarem", a.AmericaSantiago = "America/Santiago", a.AmericaSantoDomingo = "America/Santo_Domingo", a.AmericaSaoPaulo = "America/Sao_Paulo", a.AmericaScoresbysund = "America/Scoresbysund", a.AmericaShiprock = "America/Shiprock", a.AmericaSitka = "America/Sitka", a.AmericaStBarthelemy = "America/St_Barthelemy", a.AmericaStJohns = "America/St_Johns", a.AmericaStKitts = "America/St_Kitts", a.AmericaStLucia = "America/St_Lucia", a.AmericaStThomas = "America/St_Thomas", a.AmericaStVincent = "America/St_Vincent", a.AmericaSwiftCurrent = "America/Swift_Current", a.AmericaTegucigalpa = "America/Tegucigalpa", a.AmericaThule = "America/Thule", a.AmericaThunderBay = "America/Thunder_Bay", a.AmericaTijuana = "America/Tijuana", a.AmericaToronto = "America/Toronto", a.AmericaTortola = "America/Tortola", a.AmericaVancouver = "America/Vancouver", a.AmericaWhitehorse = "America/Whitehorse", a.AmericaWinnipeg = "America/Winnipeg", a.AmericaYakutat = "America/Yakutat", a.AmericaYellowknife = "America/Yellowknife", a.AntarcticaCasey = "Antarctica/Casey", a.AntarcticaDavis = "Antarctica/Davis", a.AntarcticaDumontDUrville = "Antarctica/DumontDUrville", a.AntarcticaMacquarie = "Antarctica/Macquarie", a.AntarcticaMawson = "Antarctica/Mawson", a.AntarcticaMcMurdo = "Antarctica/McMurdo", a.AntarcticaPalmer = "Antarctica/Palmer", a.AntarcticaRothera = "Antarctica/Rothera", a.AntarcticaSyowa = "Antarctica/Syowa", a.AntarcticaTroll = "Antarctica/Troll", a.AntarcticaVostok = "Antarctica/Vostok", a.ArcticLongyearbyen = "Arctic/Longyearbyen", a.AsiaAden = "Asia/Aden", a.AsiaAlmaty = "Asia/Almaty", a.AsiaAmman = "Asia/Amman", a.AsiaAnadyr = "Asia/Anadyr", a.AsiaAqtau = "Asia/Aqtau", a.AsiaAqtobe = "Asia/Aqtobe", a.AsiaAshgabat = "Asia/Ashgabat", a.AsiaBaghdad = "Asia/Baghdad", a.AsiaBahrain = "Asia/Bahrain", a.AsiaBaku = "Asia/Baku", a.AsiaBangkok = "Asia/Bangkok", a.AsiaBarnaul = "Asia/Barnaul", a.AsiaBeirut = "Asia/Beirut", a.AsiaBishkek = "Asia/Bishkek", a.AsiaBrunei = "Asia/Brunei", a.AsiaChita = "Asia/Chita", a.AsiaChoibalsan = "Asia/Choibalsan", a.AsiaColombo = "Asia/Colombo", a.AsiaDamascus = "Asia/Damascus", a.AsiaDhaka = "Asia/Dhaka", a.AsiaDili = "Asia/Dili", a.AsiaDubai = "Asia/Dubai", a.AsiaDushanbe = "Asia/Dushanbe", a.AsiaFamagusta = "Asia/Famagusta", a.AsiaGaza = "Asia/Gaza", a.AsiaHebron = "Asia/Hebron", a.AsiaHoChiMinh = "Asia/Ho_Chi_Minh", a.AsiaHongKong = "Asia/Hong_Kong", a.AsiaHovd = "Asia/Hovd", a.AsiaIrkutsk = "Asia/Irkutsk", a.AsiaJakarta = "Asia/Jakarta", a.AsiaJayapura = "Asia/Jayapura", a.AsiaJerusalem = "Asia/Jerusalem", a.AsiaKabul = "Asia/Kabul", a.AsiaKamchatka = "Asia/Kamchatka", a.AsiaKarachi = "Asia/Karachi", a.AsiaKathmandu = "Asia/Kathmandu", a.AsiaKhandyga = "Asia/Khandyga", a.AsiaKolkata = "Asia/Kolkata", a.AsiaKrasnoyarsk = "Asia/Krasnoyarsk", a.AsiaKualaLumpur = "Asia/Kuala_Lumpur", a.AsiaKuching = "Asia/Kuching", a.AsiaKuwait = "Asia/Kuwait", a.AsiaMacau = "Asia/Macau", a.AsiaMagadan = "Asia/Magadan", a.AsiaMakassar = "Asia/Makassar", a.AsiaManila = "Asia/Manila", a.AsiaMuscat = "Asia/Muscat", a.AsiaNicosia = "Asia/Nicosia", a.AsiaNovokuznetsk = "Asia/Novokuznetsk", a.AsiaNovosibirsk = "Asia/Novosibirsk", a.AsiaOmsk = "Asia/Omsk", a.AsiaOral = "Asia/Oral", a.AsiaPhnomPenh = "Asia/Phnom_Penh", a.AsiaPontianak = "Asia/Pontianak", a.AsiaPyongyang = "Asia/Pyongyang", a.AsiaQatar = "Asia/Qatar", a.AsiaQyzylorda = "Asia/Qyzylorda", a.AsiaRangoon = "Asia/Rangoon", a.AsiaRiyadh = "Asia/Riyadh", a.AsiaSakhalin = "Asia/Sakhalin", a.AsiaSamarkand = "Asia/Samarkand", a.AsiaSeoul = "Asia/Seoul", a.AsiaShanghai = "Asia/Shanghai", a.AsiaSingapore = "Asia/Singapore", a.AsiaSrednekolymsk = "Asia/Srednekolymsk", a.AsiaTaipei = "Asia/Taipei", a.AsiaTashkent = "Asia/Tashkent", a.AsiaTbilisi = "Asia/Tbilisi", a.AsiaTehran = "Asia/Tehran", a.AsiaThimphu = "Asia/Thimphu", a.AsiaTokyo = "Asia/Tokyo", a.AsiaTomsk = "Asia/Tomsk", a.AsiaUlaanbaatar = "Asia/Ulaanbaatar", a.AsiaUrumqi = "Asia/Urumqi", a.AsiaUstNera = "Asia/Ust-Nera", a.AsiaVientiane = "Asia/Vientiane", a.AsiaVladivostok = "Asia/Vladivostok", a.AsiaYakutsk = "Asia/Yakutsk", a.AsiaYekaterinburg = "Asia/Yekaterinburg", a.AsiaYerevan = "Asia/Yerevan", a.AtlanticAzores = "Atlantic/Azores", a.AtlanticBermuda = "Atlantic/Bermuda", a.AtlanticCanary = "Atlantic/Canary", a.AtlanticCapeVerde = "Atlantic/Cape_Verde", a.AtlanticFaroe = "Atlantic/Faroe", a.AtlanticMadeira = "Atlantic/Madeira", a.AtlanticReykjavik = "Atlantic/Reykjavik", a.AtlanticSouthGeorgia = "Atlantic/South_Georgia", a.AtlanticStHelena = "Atlantic/St_Helena", a.AtlanticStanley = "Atlantic/Stanley", a.AustraliaAdelaide = "Australia/Adelaide", a.AustraliaBrisbane = "Australia/Brisbane", a.AustraliaBrokenHill = "Australia/Broken_Hill", a.AustraliaCanberra = "Australia/Canberra", a.AustraliaCurrie = "Australia/Currie", a.AustraliaDarwin = "Australia/Darwin", a.AustraliaEucla = "Australia/Eucla", a.AustraliaHobart = "Australia/Hobart", a.AustraliaLindeman = "Australia/Lindeman", a.AustraliaLordHowe = "Australia/Lord_Howe", a.AustraliaMelbourne = "Australia/Melbourne", a.AustraliaPerth = "Australia/Perth", a.AustraliaSydney = "Australia/Sydney", a.EuropeAmsterdam = "Europe/Amsterdam", a.EuropeAndorra = "Europe/Andorra", a.EuropeAthens = "Europe/Athens", a.EuropeBelgrade = "Europe/Belgrade", a.EuropeBerlin = "Europe/Berlin", a.EuropeBratislava = "Europe/Bratislava", a.EuropeBrussels = "Europe/Brussels", a.EuropeBucharest = "Europe/Bucharest", a.EuropeBudapest = "Europe/Budapest", a.EuropeBusingen = "Europe/Busingen", a.EuropeChisinau = "Europe/Chisinau", a.EuropeCopenhagen = "Europe/Copenhagen", a.EuropeDublin = "Europe/Dublin", a.EuropeGibraltar = "Europe/Gibraltar", a.EuropeGuernsey = "Europe/Guernsey", a.EuropeHelsinki = "Europe/Helsinki", a.EuropeIsleOfMan = "Europe/Isle_of_Man", a.EuropeIstanbul = "Europe/Istanbul", a.EuropeJersey = "Europe/Jersey", a.EuropeKaliningrad = "Europe/Kaliningrad", a.EuropeKiev = "Europe/Kiev", a.EuropeKirov = "Europe/Kirov", a.EuropeLisbon = "Europe/Lisbon", a.EuropeLjubljana = "Europe/Ljubljana", a.EuropeLondon = "Europe/London", a.EuropeLuxembourg = "Europe/Luxembourg", a.EuropeMadrid = "Europe/Madrid", a.EuropeMalta = "Europe/Malta", a.EuropeMariehamn = "Europe/Mariehamn", a.EuropeMinsk = "Europe/Minsk", a.EuropeMonaco = "Europe/Monaco", a.EuropeMoscow = "Europe/Moscow", a.EuropeOslo = "Europe/Oslo", a.EuropeParis = "Europe/Paris", a.EuropePodgorica = "Europe/Podgorica", a.EuropePrague = "Europe/Prague", a.EuropeRiga = "Europe/Riga", a.EuropeRome = "Europe/Rome", a.EuropeSamara = "Europe/Samara", a.EuropeSanMarino = "Europe/San_Marino", a.EuropeSarajevo = "Europe/Sarajevo", a.EuropeSimferopol = "Europe/Simferopol", a.EuropeSkopje = "Europe/Skopje", a.EuropeSofia = "Europe/Sofia", a.EuropeStockholm = "Europe/Stockholm", a.EuropeTallinn = "Europe/Tallinn", a.EuropeTirane = "Europe/Tirane", a.EuropeUzhgorod = "Europe/Uzhgorod", a.EuropeVaduz = "Europe/Vaduz", a.EuropeVatican = "Europe/Vatican", a.EuropeVienna = "Europe/Vienna", a.EuropeVilnius = "Europe/Vilnius", a.EuropeVolgograd = "Europe/Volgograd", a.EuropeWarsaw = "Europe/Warsaw", a.EuropeZagreb = "Europe/Zagreb", a.EuropeZaporozhye = "Europe/Zaporozhye", a.EuropeZurich = "Europe/Zurich", a.GMT = "GMT", a.IndianAntananarivo = "Indian/Antananarivo", a.IndianChagos = "Indian/Chagos", a.IndianChristmas = "Indian/Christmas", a.IndianCocos = "Indian/Cocos", a.IndianComoro = "Indian/Comoro", a.IndianKerguelen = "Indian/Kerguelen", a.IndianMahe = "Indian/Mahe", a.IndianMaldives = "Indian/Maldives", a.IndianMauritius = "Indian/Mauritius", a.IndianMayotte = "Indian/Mayotte", a.IndianReunion = "Indian/Reunion", a.PacificApia = "Pacific/Apia", a.PacificAuckland = "Pacific/Auckland", a.PacificBougainville = "Pacific/Bougainville", a.PacificChatham = "Pacific/Chatham", a.PacificChuuk = "Pacific/Chuuk", a.PacificEaster = "Pacific/Easter", a.PacificEfate = "Pacific/Efate", a.PacificEnderbury = "Pacific/Enderbury", a.PacificFakaofo = "Pacific/Fakaofo", a.PacificFiji = "Pacific/Fiji", a.PacificFunafuti = "Pacific/Funafuti", a.PacificGalapagos = "Pacific/Galapagos", a.PacificGambier = "Pacific/Gambier", a.PacificGuadalcanal = "Pacific/Guadalcanal", a.PacificGuam = "Pacific/Guam", a.PacificHonolulu = "Pacific/Honolulu", a.PacificJohnston = "Pacific/Johnston", a.PacificKiritimati = "Pacific/Kiritimati", a.PacificKosrae = "Pacific/Kosrae", a.PacificKwajalein = "Pacific/Kwajalein", a.PacificMajuro = "Pacific/Majuro", a.PacificMarquesas = "Pacific/Marquesas", a.PacificMidway = "Pacific/Midway", a.PacificNauru = "Pacific/Nauru", a.PacificNiue = "Pacific/Niue", a.PacificNorfolk = "Pacific/Norfolk", a.PacificNoumea = "Pacific/Noumea", a.PacificPagoPago = "Pacific/Pago_Pago", a.PacificPalau = "Pacific/Palau", a.PacificPitcairn = "Pacific/Pitcairn", a.PacificPohnpei = "Pacific/Pohnpei", a.PacificPonape = "Pacific/Ponape", a.PacificPortMoresby = "Pacific/Port_Moresby", a.PacificRarotonga = "Pacific/Rarotonga", a.PacificSaipan = "Pacific/Saipan", a.PacificSamoa = "Pacific/Samoa", a.PacificTahiti = "Pacific/Tahiti", a.PacificTarawa = "Pacific/Tarawa", a.PacificTongatapu = "Pacific/Tongatapu", a.PacificTruk = "Pacific/Truk", a.PacificWake = "Pacific/Wake", a.PacificWallis = "Pacific/Wallis", a.PacificYap = "Pacific/Yap";
})(u$2 || (u$2 = {}));
var n$4;
(function(a) {
  a.UTC_MINUS_12 = "UTC-12", a.UTC_MINUS_11_30 = "UTC-11:30", a.UTC_MINUS_11 = "UTC-11", a.UTC_MINUS_10_30 = "UTC-10:30", a.UTC_MINUS_10 = "UTC-10", a.UTC_MINUS_9_30 = "UTC-9:30", a.UTC_MINUS_9 = "UTC-09", a.UTC_MINUS_8_45 = "UTC-8:45", a.UTC_MINUS_8 = "UTC-08", a.UTC_MINUS_7 = "UTC-07", a.UTC_MINUS_6_30 = "UTC-6:30", a.UTC_MINUS_6 = "UTC-06", a.UTC_MINUS_5_45 = "UTC-5:45", a.UTC_MINUS_5_30 = "UTC-5:30", a.UTC_MINUS_5 = "UTC-05", a.UTC_MINUS_4_30 = "UTC-4:30", a.UTC_MINUS_4 = "UTC-04", a.UTC_MINUS_3_30 = "UTC-3:30", a.UTC_MINUS_3 = "UTC-03", a.UTC_MINUS_2_30 = "UTC-2:30", a.UTC_MINUS_2 = "UTC-02", a.UTC_MINUS_1 = "UTC-01", a.UTC_0 = "UTC+00", a.UTC_PLUS_1 = "UTC+01", a.UTC_PLUS_2 = "UTC+02", a.UTC_PLUS_3 = "UTC+03", a.UTC_PLUS_3_30 = "UTC+3:30", a.UTC_PLUS_4 = "UTC+04", a.UTC_PLUS_4_30 = "UTC+4:30", a.UTC_PLUS_5 = "UTC+05", a.UTC_PLUS_5_30 = "UTC+5:30", a.UTC_PLUS_5_45 = "UTC+5:45", a.UTC_PLUS_6 = "UTC+06", a.UTC_PLUS_6_30 = "UTC+6:30", a.UTC_PLUS_7 = "UTC+07", a.UTC_PLUS_8 = "UTC+08", a.UTC_PLUS_8_45 = "UTC+8:45", a.UTC_PLUS_9 = "UTC+09", a.UTC_PLUS_9_30 = "UTC+9:30", a.UTC_PLUS_10 = "UTC+10", a.UTC_PLUS_10_30 = "UTC+10:30", a.UTC_PLUS_11 = "UTC+11", a.UTC_PLUS_11_30 = "UTC+11:30", a.UTC_PLUS_12 = "UTC+12", a.UTC_PLUS_12_45 = "UTC+12:45", a.UTC_PLUS_13 = "UTC+13", a.UTC_PLUS_13_45 = "UTC+13:45", a.UTC_PLUS_14 = "UTC+14";
})(n$4 || (n$4 = {}));
var s$3;
(function(a) {
  a.AcreTime = "ACT", a.AfghanistanTime = "AFT", a.AIXCentralEuropeanTime = "DFT", a.AlaskaDaylightTime = "AKDT", a.AlaskaStandardTime = "AKST", a.AlmaAtaTime = "ALMT", a.AmazonSummerTime = "AMST", a.AmazonTime = "AMT", a.AnadyrTime = "ANAT", a.AqtobeTime = "AQTT", a.ArabiaStandardTime = "AST", a.ArgentinaTime = "ART", a.ArmeniaTime = "AMT", a.ASEANCommonTime = "ASEAN", a.AtlanticDaylightTime = "ADT", a.AtlanticStandardTime = "AST", a.AustralianCentralDaylightSavingTime = "ACDT", a.AustralianCentralStandardTime = "ACST", a.AustralianCentralWesternStandardTime = "ACWST", a.AustralianEasternDaylightSavingTime = "AEDT", a.AustralianEasternStandardTime = "AEST", a.AustralianEasternTime = "AET", a.AustralianWesternStandardTime = "AWST", a.AzerbaijanTime = "AZT", a.AzoresStandardTime = "AZOT", a.AzoresSummerTime = "AZOST", a.BakerIslandTime = "BIT", a.BangladeshStandardTime = "BST", a.BhutanTime = "BTT", a.BoliviaTime = "BOT", a.BougainvilleStandardTime = "BST", a.BrasiliaSummerTime = "BRST", a.BrasiliaTime = "BRT", a.BritishIndianOceanTime = "BIOT", a.BritishSummerTime = "BST", a.BruneiTime = "BNT", a.CapeVerdeTime = "CVT", a.CentralAfricaTime = "CAT", a.CentralDaylightTime = "CDT", a.CentralEuropeanSummerTime = "CEST", a.CentralEuropeanTime = "CET", a.CentralIndonesiaTime = "WITA", a.CentralStandardTime = "CST", a.CentralTime = "CT", a.CentralWesternStandardTime = "CWST", a.ChamorroStandardTime = "CHST", a.ChathamDaylightTime = "CHADT", a.ChathamStandardTime = "CHAST", a.ChileStandardTime = "CLT", a.ChileSummerTime = "CLST", a.ChinaStandardTime = "CST", a.ChoibalsanStandardTime = "CHOT", a.ChoibalsanSummerTime = "CHOST", a.ChristmasIslandTime = "CXT", a.ChuukTime = "CHUT", a.ClipptertonIslandStandardTime = "CIST", a.CocosIslandsTime = "CCT", a.ColombiaSummerTime = "COST", a.ColombiaTime = "COT", a.CookIslandTime = "CKT", a.CoordinatedUniversalTime = "UTC", a.CubaDaylightTime = "CDT", a.CubaStandardTime = "CST", a.DavisTime = "DAVT", a.DumontDUrvilleTime = "DDUT", a.EastAfricaTime = "EAT", a.EasterIslandStandardTime = "EAST", a.EasterIslandSummerTime = "EASST", a.EasternCaribbeanTime = "ECT", a.EasternDaylightTime = "EDT", a.EasternEuropeanSummerTime = "EEST", a.EasternEuropeanTime = "EET", a.EasternGreenlandSummerTime = "EGST", a.EasternGreenlandTime = "EGT", a.EasternIndonesianTime = "WIT", a.EasternStandardTime = "EST", a.EasternTime = "ET", a.EcuadorTime = "ECT", a.FalklandIslandsSummerTime = "FKST", a.FalklandIslandsTime = "FKT", a.FernandoDeNoronhaTime = "FNT", a.FijiTime = "FJT", a.FrenchGuianaTime = "GFT", a.FrenchSouthernAndAntarcticTime = "TFT", a.FurtherEasternEuropeanTime = "FET", a.GalapagosTime = "GALT", a.GambierIslandTime = "GIT", a.GambierIslandsTime = "GAMT", a.GeorgiaStandardTime = "GET", a.GilbertIslandTime = "GILT", a.GreenwichMeanTime = "GMT", a.GulfStandardTime = "GST", a.GuyanaTime = "GYT", a.HawaiiAleutianDaylightTime = "HDT", a.HawaiiAleutianStandardTime = "HST", a.HeardAndMcDonaldIslandsTime = "HMT", a.HeureAvanceeDEuropeCentraleTime = "HAEC", a.HongKongTime = "HKT", a.HovdSummerTime = "HOVST", a.HovdTime = "HOVT", a.IndianOceanTime = "IOT", a.IndianStandardTime = "IST", a.IndochinaTime = "ICT", a.InternationalDayLineWestTime = "IDLW", a.IranDaylightTime = "IRDT", a.IranStandardTime = "IRST", a.IrishStandardTime = "IST", a.IrkutskSummerTime = "IRKST", a.IrkutskTime = "IRKT", a.IsraelDaylightTime = "IDT", a.IsraelStandardTime = "IST", a.JapanStandardTime = "JST", a.KaliningradTime = "KALT", a.KamchatkaTime = "KAMT", a.KoreaStandardTime = "KST", a.KosraeTime = "KOST", a.KrasnoyarskSummerTime = "KRAST", a.KrasnoyarskTime = "KRAT", a.KyrgyzstanTime = "KGT", a.LineIslandsTime = "LINT", a.KazakhstanStandardTime = "KAST", a.LordHoweStandardTime = "LHST", a.LordHoweSummerTime = "LHST", a.MacquarieIslandStationTime = "MIST", a.MagadanTime = "MAGT", a.MalaysiaStandardTime = "MST", a.MalaysiaTime = "MYT", a.MaldivesTime = "MVT", a.MarquesasIslandsTime = "MART", a.MarshallIslandsTime = "MHT", a.MauritiusTime = "MUT", a.MawsonStationTime = "MAWT", a.MiddleEuropeanSummerTime = "MEDT", a.MiddleEuropeanTime = "MET", a.MoscowTime = "MSK", a.MountainDaylightTime = "MDT", a.MountainStandardTime = "MST", a.MyanmarStandardTime = "MMT", a.NepalTime = "NCT", a.NauruTime = "NRT", a.NewCaledoniaTime = "NCT", a.NewZealandDaylightTime = "NZDT", a.NewZealandStandardTime = "NZST", a.NewfoundlandDaylightTime = "NDT", a.NewfoundlandStandardTime = "NST", a.NewfoundlandTime = "NT", a.NiueTime = "NUT", a.NorfolkIslandTime = "NFT", a.NovosibirskTime = "NOVT", a.OmskTime = "OMST", a.OralTime = "ORAT", a.PacificDaylightTime = "PDT", a.PacificStandardTime = "PST", a.PakistanStandardTime = "PKT", a.PalauTime = "PWT", a.PapuaNewGuineaTime = "PGT", a.ParaguaySummerTime = "PYST", a.ParaguayTime = "PYT", a.PeruTime = "PET", a.PhilippineStandardTime = "PHST", a.PhilippineTime = "PHT", a.PhoenixIslandTime = "PHOT", a.PitcairnTime = "PST", a.PohnpeiStandardTime = "PONT", a.ReunionTime = "RET", a.RotheraResearchStationTime = "ROTT", a.SaintPierreAndMiquelonDaylightTime = "PMDT", a.SaintPierreAndMiquelonStandardTime = "PMST", a.SakhalinIslandTime = "SAKT", a.SamaraTime = "SAMT", a.SamoaDaylightTime = "SDT", a.SamoaStandardTime = "SST", a.SeychellesTime = "SCT", a.ShowaStationTime = "SYOT", a.SingaporeStandardTime = "SST", a.SingaporeTime = "SGT", a.SolomonIslandsTime = "SBT", a.SouthAfricanStandardTime = "SAST", a.SouthGeorgiaAndTheSouthSandwichIslandsTime = "GST", a.SrednekolymskTime = "SRET", a.SriLankaStandardTime = "SLST", a.SurinameTime = "SRT", a.TahitiTime = "TAHT", a.TajikistanTime = "TJT", a.ThailandStandardTime = "THA", a.TimorLesteTime = "TLT", a.TokelauTime = "TKT", a.TongaTime = "TOT", a.TurkeyTime = "TRT", a.TurkmenistanTime = "TMT", a.TuvaluTime = "TVT", a.UlaanbaatarStandardTime = "ULAT", a.UlaanbaatarSummerTime = "ULAST", a.UruguayStandardTime = "UYT", a.UruguaySummerTime = "UYST", a.UzbekistanTime = "UZT", a.VanuatuTime = "VUT", a.VenezuelaStandardTime = "VET", a.VladivostokTime = "VLAT", a.VolgogradTime = "VOLT", a.VostokStationTime = "VOST", a.WakeIslandTime = "WAKT", a.WestAfricaSummerTime = "WAST", a.WestAfricaTime = "WAT", a.WestGreenlandSummerTime = "WGST", a.WestGreenlandTime = "WGT", a.WestKazakhstanTime = "WKT", a.WesternEuropeanSummerTime = "WEDT", a.WesternEuropeanTime = "WET", a.WesternIndonesianTime = "WIT", a.WesternStandardTime = "WST", a.YakutskTime = "YAKT", a.YekaterinburgTime = "YEKT";
})(s$3 || (s$3 = {}));
({ dst: { is: false, uses: true }, id: s$3.AcreTime, name: "Acre Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: s$3.AfghanistanTime, name: "Afghanistan Time", offset: n$4.UTC_PLUS_4_30 });
({ dst: { is: false, uses: true }, id: s$3.AIXCentralEuropeanTime, name: "AIX Central European Time", offset: n$4.UTC_PLUS_1 });
({ dst: { is: true, uses: true }, id: s$3.AlaskaDaylightTime, name: "Alaska Daylight Time", offset: n$4.UTC_MINUS_8 });
({ dst: { is: false, uses: true }, id: s$3.AlaskaStandardTime, name: "Alaska Standard Time", offset: n$4.UTC_MINUS_9 });
({ dst: { is: false, uses: true }, id: s$3.AlmaAtaTime, name: "Alma-Ata Time", offset: n$4.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: s$3.AmazonSummerTime, name: "Amazon Summer Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.AmazonTime, name: "Amazon Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: s$3.AnadyrTime, name: "Anadyr Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.AqtobeTime, name: "Aqtobe Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.ArabiaStandardTime, name: "Arabia Standard Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.ArgentinaTime, name: "Argentina Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.ArmeniaTime, name: "Armenia Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: true, uses: true }, id: s$3.AtlanticDaylightTime, name: "Atlantic Daylight Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.AtlanticStandardTime, name: "Atlantic Standard Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: s$3.AustralianCentralDaylightSavingTime, name: "Australian Central Daylight Saving Time", offset: n$4.UTC_PLUS_10_30 });
({ dst: { is: false, uses: true }, id: s$3.AustralianCentralStandardTime, name: "Australian Central Standard Time", offset: n$4.UTC_PLUS_9_30 });
({ dst: { is: false, uses: true }, id: s$3.AustralianCentralWesternStandardTime, name: "Australian Central Western Standard Time", offset: n$4.UTC_PLUS_8_45 });
({ dst: { is: true, uses: true }, id: s$3.AustralianEasternDaylightSavingTime, name: "Australian Eastern Daylight Saving Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.AustralianEasternStandardTime, name: "Australian Eastern Standard Time", offset: n$4.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: s$3.AustralianEasternTime, name: "Australian Eastern Time", offset: n$4.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: s$3.AustralianWesternStandardTime, name: "Australian Western Standard Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.AzerbaijanTime, name: "Azerbaijan Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: s$3.AzoresStandardTime, name: "Azores Standard Time", offset: n$4.UTC_MINUS_1 });
({ dst: { is: true, uses: true }, id: s$3.AzoresSummerTime, name: "Azores Summer Time", offset: n$4.UTC_0 });
({ dst: { is: false, uses: true }, id: s$3.BakerIslandTime, name: "Baker Island Time", offset: n$4.UTC_MINUS_12 });
({ dst: { is: false, uses: true }, id: s$3.BangladeshStandardTime, name: "Bangladesh Standard Time", offset: n$4.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: s$3.BhutanTime, name: "Bhutan Time", offset: n$4.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: s$3.BoliviaTime, name: "Bolivia Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: s$3.BougainvilleStandardTime, name: "Bougainville Standard Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: true, uses: true }, id: s$3.BrasiliaSummerTime, name: "Brasilia Summer Time", offset: n$4.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: s$3.BrasiliaTime, name: "Brasilia Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.BritishIndianOceanTime, name: "British Indian Ocean Time", offset: n$4.UTC_PLUS_6 });
({ dst: { is: true, uses: true }, id: s$3.BritishSummerTime, name: "British Summer Time", offset: n$4.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: s$3.BruneiTime, name: "Brunei Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.CapeVerdeTime, name: "Cape Verde Time", offset: n$4.UTC_MINUS_1 });
({ dst: { is: false, uses: true }, id: s$3.CentralAfricaTime, name: "Central Africa Time", offset: n$4.UTC_PLUS_2 });
({ dst: { is: true, uses: true }, id: s$3.CentralDaylightTime, name: "Central Daylight Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: true, uses: true }, id: s$3.CentralEuropeanSummerTime, name: "Central European Summer Time", offset: n$4.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: s$3.CentralEuropeanTime, name: "Central European Time", offset: n$4.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: s$3.CentralIndonesiaTime, name: "Central Indonesia Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.CentralStandardTime, name: "Central Standard Time", offset: n$4.UTC_MINUS_6 });
({ dst: { is: false, uses: true }, id: s$3.CentralTime, name: "Central Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: s$3.CentralWesternStandardTime, name: "Central Western Standard Time", offset: n$4.UTC_PLUS_8_45 });
({ dst: { is: false, uses: true }, id: s$3.ChamorroStandardTime, name: "Chamorro Standard Time", offset: n$4.UTC_PLUS_10 });
({ dst: { is: true, uses: true }, id: s$3.ChathamDaylightTime, name: "Chatham Daylight Time", offset: n$4.UTC_PLUS_13_45 });
({ dst: { is: false, uses: true }, id: s$3.ChathamStandardTime, name: "Chatham Standard Time", offset: n$4.UTC_PLUS_12_45 });
({ dst: { is: false, uses: true }, id: s$3.ChileStandardTime, name: "Chile Standard Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: s$3.ChileSummerTime, name: "Chile Summer Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.ChinaStandardTime, name: "China Standard Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.ChoibalsanStandardTime, name: "Choibalsan Standard Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: true, uses: true }, id: s$3.ChoibalsanSummerTime, name: "Choibalsan Summer Time", offset: n$4.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: s$3.ChristmasIslandTime, name: "Christmas Island Time", offset: n$4.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: s$3.ChuukTime, name: "Chuuk Time", offset: n$4.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: s$3.ClipptertonIslandStandardTime, name: "Clippterton Island Standard Time", offset: n$4.UTC_MINUS_8 });
({ dst: { is: false, uses: true }, id: s$3.CocosIslandsTime, name: "Cocos Standard Time", offset: n$4.UTC_PLUS_6_30 });
({ dst: { is: true, uses: true }, id: s$3.ColombiaSummerTime, name: "Colombia Summer Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: s$3.ColombiaTime, name: "Colombia Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: s$3.CookIslandTime, name: "Cook Island Time", offset: n$4.UTC_MINUS_10 });
({ dst: { is: false, uses: true }, id: s$3.CoordinatedUniversalTime, name: "Coordinated Universal Time", offset: n$4.UTC_0 });
({ dst: { is: true, uses: true }, id: s$3.CubaDaylightTime, name: "Cuba Daylight Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: s$3.CubaStandardTime, name: "Cuba Standard Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: s$3.DavisTime, name: "Davis Time", offset: n$4.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: s$3.DumontDUrvilleTime, name: "Dumont D'Urville Time", offset: n$4.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: s$3.EastAfricaTime, name: "East Africa Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.EasterIslandStandardTime, name: "Easter Island Standard Time", offset: n$4.UTC_MINUS_6 });
({ dst: { is: true, uses: true }, id: s$3.EasterIslandSummerTime, name: "Easter Island Summer Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: s$3.EasternCaribbeanTime, name: "Eastern Caribbean Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: s$3.EasternDaylightTime, name: "Eastern Daylight Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: s$3.EasternEuropeanSummerTime, name: "Eastern European Summer Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.EasternEuropeanTime, name: "Eastern European Time", offset: n$4.UTC_PLUS_2 });
({ dst: { is: true, uses: true }, id: s$3.EasternGreenlandSummerTime, name: "Eastern Greenland Summer Time", offset: n$4.UTC_0 });
({ dst: { is: false, uses: true }, id: s$3.EasternGreenlandTime, name: "Eastern Greenland Time", offset: n$4.UTC_MINUS_1 });
({ dst: { is: false, uses: true }, id: s$3.EasternIndonesianTime, name: "Eastern Indonesian Time", offset: n$4.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: s$3.EasternStandardTime, name: "Eastern Standard Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: s$3.EasternTime, name: "Eastern Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: s$3.EcuadorTime, name: "Ecuador Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: true, uses: true }, id: s$3.FalklandIslandsSummerTime, name: "Falkland Islands Summer Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.FalklandIslandsTime, name: "Falkland Islands Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: s$3.FernandoDeNoronhaTime, name: "Fernando de Noronha Time", offset: n$4.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: s$3.FijiTime, name: "Fiji Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.FrenchGuianaTime, name: "French Guiana Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.FrenchSouthernAndAntarcticTime, name: "French Southern and Antarctic Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.FurtherEasternEuropeanTime, name: "Further Eastern European Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.GalapagosTime, name: "Galapagos Time", offset: n$4.UTC_MINUS_6 });
({ dst: { is: false, uses: true }, id: s$3.GambierIslandTime, name: "Gambier Island Time", offset: n$4.UTC_MINUS_9 });
({ dst: { is: false, uses: true }, id: s$3.GambierIslandsTime, name: "Gambier Islands Time", offset: n$4.UTC_MINUS_9 });
({ dst: { is: false, uses: true }, id: s$3.GeorgiaStandardTime, name: "Georgia Standard Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: s$3.GilbertIslandTime, name: "Gilbert Island Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.GreenwichMeanTime, name: "Greenwich Mean Time", offset: n$4.UTC_0 });
({ dst: { is: false, uses: true }, id: s$3.GulfStandardTime, name: "Gulf Standard Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: s$3.GuyanaTime, name: "Guyana Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: s$3.HawaiiAleutianDaylightTime, name: "Hawaii-Aleutian Daylight Time", offset: n$4.UTC_MINUS_9 });
({ dst: { is: false, uses: true }, id: s$3.HawaiiAleutianStandardTime, name: "Hawaii-Aleutian Standard Time", offset: n$4.UTC_MINUS_10 });
({ dst: { is: false, uses: true }, id: s$3.HeardAndMcDonaldIslandsTime, name: "Heard and McDonald Islands Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.HongKongTime, name: "Hong Kong Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: true, uses: true }, id: s$3.HovdSummerTime, name: "Hovd Summer Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.HovdTime, name: "Hovd Time", offset: n$4.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: s$3.IndianOceanTime, name: "Indian Ocean Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.IndianStandardTime, name: "Indian Standard Time", offset: n$4.UTC_PLUS_5_30 });
({ dst: { is: false, uses: true }, id: s$3.IndochinaTime, name: "Indochina Time", offset: n$4.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: s$3.InternationalDayLineWestTime, name: "International Day Line West Time", offset: n$4.UTC_MINUS_12 });
({ dst: { is: true, uses: true }, id: s$3.IranDaylightTime, name: "Iran Daylight Time", offset: n$4.UTC_PLUS_4_30 });
({ dst: { is: false, uses: true }, id: s$3.IranStandardTime, name: "Iran Standard Time", offset: n$4.UTC_PLUS_3_30 });
({ dst: { is: false, uses: true }, id: s$3.IrishStandardTime, name: "Irish Standard Time", offset: n$4.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: s$3.IrkutskTime, name: "Irkutsk Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: true, uses: true }, id: s$3.IsraelDaylightTime, name: "Israel Daylight Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.IsraelStandardTime, name: "Israel Standard Time", offset: n$4.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: s$3.JapanStandardTime, name: "Japan Standard Time", offset: n$4.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: s$3.KaliningradTime, name: "Kaliningrad Time", offset: n$4.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: s$3.KamchatkaTime, name: "Kamchatka Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.KoreaStandardTime, name: "Korea Standard Time", offset: n$4.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: s$3.KosraeTime, name: "Kosrae Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.KrasnoyarskTime, name: "Krasnoyarsk Time", offset: n$4.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: s$3.KyrgyzstanTime, name: "Kyrgyzstan Time", offset: n$4.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: s$3.LineIslandsTime, name: "Line Islands Time", offset: n$4.UTC_PLUS_14 });
({ dst: { is: false, uses: true }, id: s$3.LordHoweStandardTime, name: "Lord Howe Standard Time", offset: n$4.UTC_PLUS_10_30 });
({ dst: { is: false, uses: true }, id: s$3.LordHoweSummerTime, name: "Lord Howe Summer Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.MacquarieIslandStationTime, name: "Macquarie Island Station Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.MagadanTime, name: "Magadan Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.MalaysiaStandardTime, name: "Malaysia Standard Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.MalaysiaTime, name: "Malaysia Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.MaldivesTime, name: "Maldives Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.MarquesasIslandsTime, name: "Marquesas Islands Time", offset: n$4.UTC_PLUS_9_30 });
({ dst: { is: false, uses: true }, id: s$3.MarshallIslandsTime, name: "Marshall Islands Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.MauritiusTime, name: "Mauritius Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: s$3.MawsonStationTime, name: "Mawson Station Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.MiddleEuropeanSummerTime, name: "Middle European Summer Time", offset: n$4.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: s$3.MiddleEuropeanTime, name: "Middle European Time", offset: n$4.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: s$3.MoscowTime, name: "Moscow Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.MountainDaylightTime, name: "Mountain Daylight Time", offset: n$4.UTC_MINUS_6 });
({ dst: { is: false, uses: true }, id: s$3.MountainStandardTime, name: "Mountain Standard Time", offset: n$4.UTC_MINUS_7 });
({ dst: { is: false, uses: true }, id: s$3.MyanmarStandardTime, name: "Myanmar Standard Time", offset: n$4.UTC_PLUS_6_30 });
({ dst: { is: false, uses: true }, id: s$3.NepalTime, name: "Nepal Time", offset: n$4.UTC_PLUS_5_45 });
({ dst: { is: false, uses: true }, id: s$3.NauruTime, name: "Nauru Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.NewCaledoniaTime, name: "New Caledonia Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.NewZealandDaylightTime, name: "New Zealand Daylight Time", offset: n$4.UTC_PLUS_13 });
({ dst: { is: false, uses: true }, id: s$3.NewZealandStandardTime, name: "New Zealand Standard Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.NewfoundlandDaylightTime, name: "Newfoundland Daylight Time", offset: n$4.UTC_MINUS_2_30 });
({ dst: { is: false, uses: true }, id: s$3.NewfoundlandTime, name: "Newfoundland Time", offset: n$4.UTC_MINUS_3_30 });
({ dst: { is: false, uses: true }, id: s$3.NiueTime, name: "Niue Time", offset: n$4.UTC_MINUS_11 });
({ dst: { is: false, uses: true }, id: s$3.NorfolkIslandTime, name: "Norfolk Island Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.NovosibirskTime, name: "Novosibirsk Time", offset: n$4.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: s$3.OmskTime, name: "Omsk Time", offset: n$4.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: s$3.OralTime, name: "Oral Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.PacificDaylightTime, name: "Pacific Daylight Time", offset: n$4.UTC_MINUS_7 });
({ dst: { is: false, uses: true }, id: s$3.PacificStandardTime, name: "Pacific Standard Time", offset: n$4.UTC_MINUS_8 });
({ dst: { is: false, uses: true }, id: s$3.PakistanStandardTime, name: "Pakistan Standard Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.PalauTime, name: "Palau Time", offset: n$4.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: s$3.PapuaNewGuineaTime, name: "Papua New Guinea Time", offset: n$4.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: s$3.ParaguaySummerTime, name: "Paraguay Summer Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.ParaguayTime, name: "Paraguay Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: s$3.PeruTime, name: "Peru Time", offset: n$4.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: s$3.PhilippineStandardTime, name: "Philippine Standard Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.PhilippineTime, name: "Philippine Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.PhoenixIslandTime, name: "Phoenix Island Time", offset: n$4.UTC_PLUS_13 });
({ dst: { is: false, uses: true }, id: s$3.PitcairnTime, name: "Pitcairn Time", offset: n$4.UTC_MINUS_8 });
({ dst: { is: false, uses: true }, id: s$3.PohnpeiStandardTime, name: "Pohnpei Standard Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.ReunionTime, name: "Reunion Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: s$3.RotheraResearchStationTime, name: "Rothera Research Station Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.SaintPierreAndMiquelonDaylightTime, name: "Saint Pierre and Miquelon Daylight Time", offset: n$4.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: s$3.SaintPierreAndMiquelonStandardTime, name: "Saint Pierre and Miquelon Standard Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.SakhalinIslandTime, name: "Sakhalin Island Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.SamaraTime, name: "Samara Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: s$3.SamoaDaylightTime, name: "Samoa Daylight Time", offset: n$4.UTC_MINUS_10 });
({ dst: { is: false, uses: true }, id: s$3.SamoaStandardTime, name: "Samoa Standard Time", offset: n$4.UTC_MINUS_11 });
({ dst: { is: false, uses: true }, id: s$3.SeychellesTime, name: "Seychelles Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: s$3.ShowaStationTime, name: "Showa Station Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.SingaporeStandardTime, name: "Singapore Standard Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.SingaporeTime, name: "Singapore Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.SolomonIslandsTime, name: "Solomon Islands Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.SouthAfricanStandardTime, name: "South African Standard Time", offset: n$4.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: s$3.SouthGeorgiaAndTheSouthSandwichIslandsTime, name: "South Georgia and the South Sandwich Islands Time", offset: n$4.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: s$3.SrednekolymskTime, name: "Srednekolymsk Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.SriLankaStandardTime, name: "Sri Lanka Standard Time", offset: n$4.UTC_PLUS_5_30 });
({ dst: { is: false, uses: true }, id: s$3.SurinameTime, name: "Suriname Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.TahitiTime, name: "Tahiti Time", offset: n$4.UTC_MINUS_10 });
({ dst: { is: false, uses: true }, id: s$3.TajikistanTime, name: "Tajikistan Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.ThailandStandardTime, name: "Thailand Standard Time", offset: n$4.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: s$3.TimorLesteTime, name: "Timor-Leste Time", offset: n$4.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: s$3.TokelauTime, name: "Tokelau Time", offset: n$4.UTC_PLUS_13 });
({ dst: { is: false, uses: true }, id: s$3.TongaTime, name: "Tonga Time", offset: n$4.UTC_PLUS_13 });
({ dst: { is: false, uses: true }, id: s$3.TurkeyTime, name: "Turkey Time", offset: n$4.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: s$3.TurkmenistanTime, name: "Turkmenistan Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.TuvaluTime, name: "Tuvalu Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.UlaanbaatarStandardTime, name: "Ulaanbaatar Standard Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.UlaanbaatarSummerTime, name: "Ulaanbaatar Summer Time", offset: n$4.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: s$3.UruguayStandardTime, name: "Uruguay Standard Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.UruguaySummerTime, name: "Uruguay Summer Time", offset: n$4.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: s$3.UzbekistanTime, name: "Uzbekistan Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.VanuatuTime, name: "Vanuatu Time", offset: n$4.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: s$3.VenezuelaStandardTime, name: "Venezuela Standard Time", offset: n$4.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: s$3.VladivostokTime, name: "Vladivostok Time", offset: n$4.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: s$3.VolgogradTime, name: "Volgograd Time", offset: n$4.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: s$3.VostokStationTime, name: "Vostok Station Time", offset: n$4.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: s$3.WakeIslandTime, name: "Wake Island Time", offset: n$4.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: s$3.WestAfricaSummerTime, name: "West Africa Summer Time", offset: n$4.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: s$3.WestAfricaTime, name: "West Africa Time", offset: n$4.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: s$3.WestGreenlandSummerTime, name: "West Greenland Summer Time", offset: n$4.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: s$3.WestGreenlandTime, name: "West Greenland Time", offset: n$4.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: s$3.WestKazakhstanTime, name: "West Kazakhstan Time", offset: n$4.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: s$3.WesternEuropeanSummerTime, name: "Western European Summer Time", offset: n$4.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: s$3.WesternEuropeanTime, name: "Western European Time", offset: n$4.UTC_0 });
({ dst: { is: false, uses: true }, id: s$3.WesternIndonesianTime, name: "Western Indonesian Time", offset: n$4.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: s$3.WesternStandardTime, name: "Western Standard Time", offset: n$4.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: s$3.YakutskTime, name: "Yakutsk Time", offset: n$4.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: s$3.YekaterinburgTime, name: "Yekaterinburg Time", offset: n$4.UTC_PLUS_5 });
var T$2;
(function(a) {
  a.Africa = "Africa", a.Americas = "Americas", a.Asia = "Asia", a.Europe = "Europe", a.Oceania = "Oceania", a.Polar = "Polar";
})(T$2 || (T$2 = {}));
var p$4;
(function(a) {
  a.CentralAmerica = "Central America", a.EasternAsia = "Eastern Asia", a.EasternEurope = "Eastern Europe", a.EasternAfrica = "Eastern Africa", a.MiddleAfrica = "Middle Africa", a.MiddleEast = "Middle East", a.NorthernAfrica = "Northern Africa", a.NorthernAmerica = "Northern America", a.NorthernEurope = "Northern Europe", a.Polynesia = "Polynesia", a.SouthAmerica = "South America", a.SouthernAfrica = "Southern Africa", a.SouthernAsia = "Southern Asia", a.SouthernEurope = "Southern Europe", a.WesternAfrica = "Western Africa", a.WesternAsia = "Western Asia", a.WesternEurope = "Western Europe", a.WesternAustralia = "Western Australia";
})(p$4 || (p$4 = {}));
({ Afghanistan: { i18n: { calling_codes: [93], currencies: [m$3.AfghanistanAfghani], languages: [e$2.Pashto, e$2.Dari, e$2.Turkmen, e$2.Uzbek], tz: { offsets: [n$4.UTC_PLUS_4_30], regions: [u$2.AsiaKabul], timezones: [s$3.AfghanistanTime] } }, id: r$4.Afghanistan, info: { flag: { emoji: "\u{1F1E6}\u{1F1EB}", emoji_unicode: "U+1F1E6 U+1F1EB", svg: "https://www.countryflags.io/af/flat/64.svg" }, tld: [".af"] }, iso: { alpha2: r$4.Afghanistan, alpha3: "AFG", numeric: "004" }, name: { alt_spellings: ["AF", "Af\u0121\u0101nist\u0101n"], demonym: "Afghan", native: { endonym: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646" }, official: "Islamic Republic of Afghanistan", short: "Afghanistan", translations: { [e$2.Afrikaans]: "Afghanistan", [e$2.Albanian]: "Shqip\xEBri", [e$2.Amharic]: "\u12A0\u134D\u130B\u1295", [e$2.Arabic]: "\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$2.Armenian]: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576", [e$2.Azerbaijani]: "Az\u0259rbaycan", [e$2.Bashkir]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Basque]: "Afganist\xE1n", [e$2.Belarusian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Bengali]: "\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8", [e$2.Berber]: "\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$2.Bhutani]: "\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D", [e$2.Bosnian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Breton]: "Afganistan", [e$2.Bulgarian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Burmese]: "\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A", [e$2.Catalan]: "Afganistan", [e$2.Chinese]: "\u963F\u5BCC\u6C57", [e$2.Croatian]: "Afganistan", [e$2.Czech]: "Afganistan", [e$2.Danish]: "Afghanistan", [e$2.Dutch]: "Afghanistan", [e$2.English]: "Afghanistan", [e$2.Esperanto]: "Afganistan", [e$2.Estonian]: "Afganistan", [e$2.Finnish]: "Afghanistan", [e$2.French]: "Afghanistan", [e$2.Frisian]: "Afghanistan", [e$2.Galician]: "Afganist\xE1n", [e$2.Georgian]: "\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8", [e$2.German]: "Afghanistan", [e$2.Greenlandic]: "Afghanistan", [e$2.Greek]: "\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD", [e$2.Gujarati]: "\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8", [e$2.Haitian]: "Afghanistan", [e$2.Hausa]: "Afghanistan", [e$2.Hebrew]: "\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF", [e$2.Hindi]: "\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928", [e$2.Hungarian]: "Afganistan", [e$2.Icelandic]: "Afghanistan", [e$2.Igbo]: "Afghanistan", [e$2.Indonesian]: "Afghanistan", [e$2.Irish]: "Afghanistan", [e$2.Italian]: "Afghanistan", [e$2.Japanese]: "\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3", [e$2.Javanese]: "Afghanistan", [e$2.Kannada]: "\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8", [e$2.Kazakh]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Khmer]: "\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780", [e$2.Korean]: "\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4", [e$2.Kurdish]: "Afghanistan", [e$2.Kyrgyz]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Lao]: "\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99", [e$2.Latin]: "Afghanistan", [e$2.Latvian]: "Afghanistan", [e$2.Lithuanian]: "Afganistanas", [e$2.Luxembourgish]: "Afghanistan", [e$2.Macedonian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Malagasy]: "Afghanistan", [e$2.Malay]: "Afghanistan", [e$2.Malayalam]: "\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28", [e$2.Maltese]: "Afghanistan", [e$2.Maori]: "Afghanistan", [e$2.Marathi]: "\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928", [e$2.Mongolian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Nepali]: "\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928", [e$2.Norwegian]: "Afghanistan", [e$2.Pashto]: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$2.Persian]: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$2.Polish]: "Afganistan", [e$2.Portuguese]: "Afghanistan", [e$2.Punjabi]: "Afghanistan", [e$2.Romanian]: "Afghanistan", [e$2.Polish]: "Afganistan", [e$2.Russian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Samoan]: "Afghanistan", [e$2.Sanskrit]: "\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928", [e$2.Scots]: "Afghanistan", [e$2.Serbian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Sesotho]: "Afghanistan", [e$2.Shona]: "Afghanistan", [e$2.Sindhi]: "Afghanistan", [e$2.Sinhala]: "\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0", [e$2.Slovak]: "Afganistan", [e$2.Slovenian]: "Afganistan", [e$2.Somali]: "Afghanistan", [e$2.Spanish]: "Afganist\xE1n", [e$2.Sudanese]: "Afghanistan", [e$2.Swahili]: "Afghanistan", [e$2.Swedish]: "Afghanistan", [e$2.Tagalog]: "Afghanistan", [e$2.Tajik]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Tatar]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Tamil]: "\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD", [e$2.Telugu]: "\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D", [e$2.Thai]: "\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19", [e$2.Tibetan]: "\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D", [e$2.Turkish]: "Afganistan", [e$2.Ukrainian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Urdu]: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$2.Uzbek]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$2.Vietnamese]: "Afghanistan", [e$2.Welsh]: "Afghanistan", [e$2.Xhosa]: "Afghanistan", [e$2.Yiddish]: "Afghanistan", [e$2.Yoruba]: "Afghanistan", [e$2.Zulu]: "Afghanistan" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Kabul", total: 341e5 } }, geography: { area: 652230, region: T$2.Asia, sub_region: p$4.SouthernAsia }, government: { capital: "Kabul", type: "Islamic Emirate" } } }, Albania: { i18n: { calling_codes: [355], currencies: [m$3.AlbaniaLek], languages: [e$2.Albanian, e$2.Greek, e$2.Turkish], tz: { offsets: [n$4.UTC_PLUS_1], regions: [u$2.EuropeBrussels], timezones: [s$3.CentralEuropeanTime] } }, id: r$4.Albania, info: { flag: { emoji: "\u{1F1E6}\u{1F1F1}", emoji_unicode: "U+1F1E6 U+1F1F1", svg: "https://www.countryflags.io/al/flat/64.svg" }, tld: [".al"] }, iso: { alpha2: r$4.Albania, alpha3: "ALB", numeric: "008" }, name: { alt_spellings: ["AL", "Shqip\xEBri", "Shqip\xEBria", "Shqipnia"], demonym: "Albanian", native: { endonym: "Shqip\xEBri" }, official: "Republic of Albania", short: "Albania", translations: { [e$2.Afrikaans]: "Albania", [e$2.Albanian]: "Albania", [e$2.Amharic]: "\u12A0\u120D\u1263\u1295\u12EB", [e$2.Arabic]: "\u0623\u0644\u0628\u0627\u0646\u064A\u0627", [e$2.Armenian]: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576", [e$2.Azerbaijani]: "Az\u0259rbaycan", [e$2.Bashkir]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Basque]: "Albania", [e$2.Belarusian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Bengali]: "\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE", [e$2.Berber]: "\u0623\u0644\u0628\u0627\u0646\u064A\u0627", [e$2.Bhutani]: "\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B", [e$2.Bosnian]: "Albanija", [e$2.Breton]: "Albania", [e$2.Bulgarian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Burmese]: "\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A", [e$2.Catalan]: "Alb\xE0nia", [e$2.Chinese]: "\u963F\u5C14\u5DF4\u5C3C\u4E9A", [e$2.Croatian]: "Albanija", [e$2.Czech]: "Alb\xE1nie", [e$2.Danish]: "Albanien", [e$2.Dutch]: "Albani\xEB", [e$2.English]: "Albania", [e$2.Esperanto]: "Albanio", [e$2.Estonian]: "Albaania", [e$2.Finnish]: "Albania", [e$2.French]: "Albanie", [e$2.Frisian]: "Albani\xEB", [e$2.Galician]: "Alb\xE2nia", [e$2.Georgian]: "\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0", [e$2.German]: "Albanien", [e$2.Greenlandic]: "Albania", [e$2.Greek]: "\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1", [e$2.Gujarati]: "\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE", [e$2.Haitian]: "Albanais", [e$2.Hausa]: "Albania", [e$2.Hebrew]: "\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4", [e$2.Hindi]: "\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E", [e$2.Hungarian]: "Alb\xE1nia", [e$2.Icelandic]: "Alb\xFAnir", [e$2.Igbo]: "Albania", [e$2.Indonesian]: "Albania", [e$2.Irish]: "Alb\xE1in", [e$2.Italian]: "Albania", [e$2.Japanese]: "\u30A2\u30EB\u30D0\u30CB\u30A2", [e$2.Javanese]: "Albania", [e$2.Kannada]: "\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE", [e$2.Kazakh]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Khmer]: "\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8", [e$2.Korean]: "\uC54C\uBC14\uB2C8\uC544", [e$2.Kurdish]: "\u0622\u0644\u0628\u0627\u0646\u06CC\u0627", [e$2.Kyrgyz]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Lao]: "\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5", [e$2.Latin]: "Albania", [e$2.Latvian]: "Alb\u0101nija", [e$2.Lithuanian]: "Albanija", [e$2.Luxembourgish]: "Albani\xEB", [e$2.Macedonian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430", [e$2.Malagasy]: "Albania", [e$2.Malay]: "Albania", [e$2.Malayalam]: "\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E", [e$2.Maltese]: "Albania", [e$2.Maori]: "Albania", [e$2.Marathi]: "\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E", [e$2.Mongolian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Nepali]: "\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E", [e$2.Norwegian]: "Albania", [e$2.Pashto]: "\u0627\u0627\u0644\u0628\u0627\u0646\u06CC", [e$2.Persian]: "\u0622\u0644\u0628\u0627\u0646\u06CC", [e$2.Polish]: "Albania", [e$2.Portuguese]: "Alb\xE2nia", [e$2.Punjabi]: "\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06", [e$2.Romanian]: "Alb\u0103n", [e$2.Russian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Samoan]: "Albania", [e$2.Sanskrit]: "Albani", [e$2.Scots]: "Alb\xE0inia", [e$2.Serbian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430", [e$2.Sesotho]: "Albania", [e$2.Shona]: "Albania", [e$2.Sindhi]: "Albania", [e$2.Sinhala]: "\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA", [e$2.Slovak]: "Alb\xE1nsko", [e$2.Slovenian]: "Albanija", [e$2.Somali]: "Albania", [e$2.Spanish]: "Albania", [e$2.Sudanese]: "Albania", [e$2.Swahili]: "Albania", [e$2.Swedish]: "Albanien", [e$2.Tagalog]: "Albania", [e$2.Tajik]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Tamil]: "\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE", [e$2.Tatar]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Telugu]: "\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E", [e$2.Thai]: "\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35", [e$2.Tibetan]: "\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72", [e$2.Turkish]: "Albaniye", [e$2.Ukrainian]: "\u0410\u043B\u0431\u0430\u043D\u0456\u044F", [e$2.Urdu]: "\u0622\u0644\u0628\u0627\u0646\u06CC", [e$2.Uzbek]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$2.Vietnamese]: "Albanie", [e$2.Welsh]: "Albania", [e$2.Xhosa]: "Albania", [e$2.Yiddish]: "\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9", [e$2.Yoruba]: "Albania", [e$2.Zulu]: "Albania" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Tirana", total: 2853e3 } }, geography: { area: 28748, region: T$2.Europe, sub_region: p$4.SouthernEurope }, government: { capital: "Tirana", type: "Republic" } } }, Algeria: { i18n: { calling_codes: [213], currencies: [m$3.AlgeriaDinar], languages: [e$2.Arabic, e$2.French, e$2.Berber, e$2.Tamazight], tz: { offsets: [n$4.UTC_PLUS_1, n$4.UTC_PLUS_2], regions: [u$2.AfricaAlgiers], timezones: [s$3.CentralEuropeanTime] } }, id: r$4.Algeria, info: { flag: { emoji: "\u{1F1E9}\u{1F1FF}", emoji_unicode: "U+1F1E9 U+1F1FF", svg: "https://www.countryflags.io/dz/flat/64.svg" }, tld: [".dz", ".\u062C\u0632\u0627\u0626\u0631"] }, iso: { alpha2: r$4.Algeria, alpha3: "DZA", numeric: "012" }, name: { alt_spellings: ["DZ", "Dzayer", "Alg\xE9rie"], demonym: "Algerian", native: { endonym: "\u0627\u0644\u062C\u0632\u0627\u0626\u0631" }, official: "People's Democratic Republic of Algeria", short: "Algeria", translations: { [e$2.Afrikaans]: "Algerije", [e$2.Albanian]: "Algeria", [e$2.Amharic]: "\u12A0\u120D\u1300\u122D\u1235", [e$2.Arabic]: "\u0627\u0644\u062C\u0632\u0627\u0626\u0631", [e$2.Armenian]: "\u0531\u056C\u0563\u0578\u0580\u056B\u0561", [e$2.Azerbaijani]: "Az\u0259rbaycan", [e$2.Bashkir]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Basque]: "Algeria", [e$2.Belarusian]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Bengali]: "\u0986\u09B2\u099C\u09C7\u09B0", [e$2.Berber]: "\u062C\u0632\u0627\u0626\u0631", [e$2.Bhutani]: "\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41", [e$2.Bosnian]: "Al\u017Eir", [e$2.Breton]: "Algeria", [e$2.Bulgarian]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Burmese]: "\u1021\u102C\u101B\u1015\u103A", [e$2.Catalan]: "Alg\xE8ria", [e$2.Chinese]: "\u963F\u5C14\u53CA\u5229\u4E9A", [e$2.Croatian]: "Al\u017Eir", [e$2.Czech]: "Al\u017E\xEDrsko", [e$2.Danish]: "Algeriet", [e$2.Dutch]: "Algerije", [e$2.English]: "Algeria", [e$2.Esperanto]: "Al\u011Derio", [e$2.Estonian]: "Al\u017Eira", [e$2.Finnish]: "Algeria", [e$2.French]: "Alg\xE9rie", [e$2.Frisian]: "Algeri\xEB", [e$2.Galician]: "Alxeria", [e$2.Georgian]: "\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8", [e$2.German]: "Algerien", [e$2.Greenlandic]: "Algeria", [e$2.Greek]: "\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1", [e$2.Gujarati]: "\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE", [e$2.Haitian]: "Alg\xE9rie", [e$2.Hausa]: "Algeria", [e$2.Hebrew]: "\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4", [e$2.Hindi]: "\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E", [e$2.Hungarian]: "Alg\xE1r", [e$2.Icelandic]: "Alg\xFAra", [e$2.Igbo]: "Algeria", [e$2.Indonesian]: "Aljir", [e$2.Irish]: "Alg\xE9rie", [e$2.Italian]: "Algeria", [e$2.Japanese]: "\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2", [e$2.Javanese]: "Aljir", [e$2.Kannada]: "\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD", [e$2.Kazakh]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Khmer]: "\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8", [e$2.Korean]: "\uC54C\uC81C\uB9AC", [e$2.Kurdish]: "\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631", [e$2.Kyrgyz]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Lao]: "\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99", [e$2.Latin]: "Algeria", [e$2.Latvian]: "Al\u017E\u012Brija", [e$2.Lithuanian]: "Al\u017Eyras", [e$2.Luxembourgish]: "Algeria", [e$2.Macedonian]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Malagasy]: "Alg\xE9rie", [e$2.Malay]: "Aljir", [e$2.Malayalam]: "\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B", [e$2.Maltese]: "Alg\xE9rie", [e$2.Maori]: "Algeria", [e$2.Marathi]: "\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E", [e$2.Mongolian]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Nepali]: "\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E", [e$2.Norwegian]: "Algeria", [e$2.Pashto]: "\u0627\u0644\u062C\u0632\u0627\u0626\u0631", [e$2.Persian]: "\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628", [e$2.Polish]: "Algieria", [e$2.Portuguese]: "Alg\xE9ria", [e$2.Punjabi]: "\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06", [e$2.Romanian]: "Algeria", [e$2.Russian]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Samoan]: "Algeria", [e$2.Sanskrit]: "\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E", [e$2.Scots]: "Algeria", [e$2.Serbian]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Sesotho]: "Algeria", [e$2.Shona]: "Algeria", [e$2.Sindhi]: "Algeria", [e$2.Sinhala]: "\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA", [e$2.Slovak]: "Al\u017E\xEDrsko", [e$2.Slovenian]: "Al\u017Eir", [e$2.Somali]: "Algeria", [e$2.Spanish]: "Algeria", [e$2.Sudanese]: "Aljir", [e$2.Swahili]: "Aljir", [e$2.Swedish]: "Algeriet", [e$2.Tagalog]: "Algeria", [e$2.Tajik]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Tamil]: "\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE", [e$2.Tatar]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Telugu]: "\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E", [e$2.Thai]: "\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19", [e$2.Tibetan]: "\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72", [e$2.Turkish]: "Cezayir", [e$2.Ukrainian]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Urdu]: "\u0622\u0644\u062C\u06CC\u0631", [e$2.Uzbek]: "\u0410\u043B\u0436\u0438\u0440", [e$2.Vietnamese]: "\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5", [e$2.Welsh]: "Algeria", [e$2.Xhosa]: "Algeria", [e$2.Yiddish]: "\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4", [e$2.Yoruba]: "Algeria", [e$2.Zulu]: "Algeria" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Oran", total: 371e5 } }, geography: { area: 2381740, region: T$2.Africa, sub_region: p$4.NorthernAfrica }, government: { capital: "Algiers", type: "Republic" } } }, AmericanSamoa: { i18n: { calling_codes: [1684], currencies: [m$3.AmericanSamoaTala], languages: [e$2.English, e$2.Samoan], tz: { offsets: [n$4.UTC_MINUS_11], regions: [u$2.PacificSamoa], timezones: [s$3.SamoaStandardTime] } }, id: r$4.AmericanSamoa, info: { flag: { emoji: "\u{1F1E6}\u{1F1F8}", emoji_unicode: "U+1F1E6 U+1F1F8", svg: "https://www.countryflags.io/as/flat/64.svg" }, tld: [".as"] }, iso: { alpha2: r$4.AmericanSamoa, alpha3: "ASM", numeric: "016" }, name: { alt_spellings: ["AS", "Amerika S\u0101moa", "Amelika S\u0101moa", "S\u0101moa Amelika"], demonym: "American Samoan", native: { endonym: "American Samoa" }, official: "American Samoa", short: "American Samoa", translations: { [e$2.Afrikaans]: "Amerikaans Samoa", [e$2.Albanian]: "Samoa Amerikane", [e$2.Amharic]: "\u1233\u121E\u12A0\u122D", [e$2.Arabic]: "\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629", [e$2.Armenian]: "\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561", [e$2.Azerbaijani]: "Samoa Amerikana", [e$2.Bashkir]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430", [e$2.Basque]: "Samoa Amerikana", [e$2.Belarusian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430", [e$2.Bengali]: "\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE", [e$2.Berber]: "\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629", [e$2.Bhutani]: "\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D", [e$2.Bosnian]: "Ameri\u010Dka Samoa", [e$2.Breton]: "Samoa Amerikan", [e$2.Bulgarian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430", [e$2.Burmese]: "\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C", [e$2.Catalan]: "Samoa Americana", [e$2.Chinese]: "\u7F8E\u5C5E\u8428\u6469\u4E9A", [e$2.Croatian]: "Ameri\u010Dka Samoa", [e$2.Czech]: "Americk\xE1 Samoa", [e$2.Danish]: "Amerikansk Samoa", [e$2.Dutch]: "Amerikaans Samoa", [e$2.English]: "American Samoa", [e$2.Esperanto]: "Samoa Amerika", [e$2.Estonian]: "Ameerika Samoa", [e$2.Finnish]: "Amerikka Samoa", [e$2.French]: "American Samoa", [e$2.Frisian]: "Amerikaans Samoa", [e$2.Galician]: "Samoa Americana", [e$2.Georgian]: "\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0", [e$2.German]: "Amerikanisch-Samoa", [e$2.Greenlandic]: "Amerikaans Samoa", [e$2.Greek]: "\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1", [e$2.Gujarati]: "\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE", [e$2.Haitian]: "Amerikaans Samoa", [e$2.Hausa]: "Amerikaans Samoa", [e$2.Hebrew]: "\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4", [e$2.Hindi]: "\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906", [e$2.Hungarian]: "Amerikai Szamoa", [e$2.Icelandic]: "Amerikai Szamoa", [e$2.Igbo]: "Ikina Amerika", [e$2.Indonesian]: "Samoa Amerika", [e$2.Irish]: "Samoa Amerikana", [e$2.Italian]: "Samoa Americane", [e$2.Japanese]: "\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2", [e$2.Javanese]: "Samoa Amerika", [e$2.Kannada]: "\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86", [e$2.Kazakh]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430", [e$2.Khmer]: "\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB", [e$2.Korean]: "\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544", [e$2.Kurdish]: "Amerikaans Samoa", [e$2.Kyrgyz]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430", [e$2.Lao]: "\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94", [e$2.Latin]: "Samoa Amerikana", [e$2.Latvian]: "Amerikas Samoa", [e$2.Lithuanian]: "Amerikos Samoa", [e$2.Luxembourgish]: "Amerikaans Samoa", [e$2.Macedonian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430", [e$2.Malagasy]: "Samoa Amerika", [e$2.Malay]: "Amerika Samo", [e$2.Malayalam]: "\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06", [e$2.Maltese]: "Samoa Amerika", [e$2.Maori]: "Samoa Amerika", [e$2.Marathi]: "\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906", [e$2.Mongolian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430", [e$2.Nepali]: "\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906", [e$2.Norwegian]: "Amerikansk Samoa", [e$2.Pashto]: "\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627", [e$2.Persian]: "\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627", [e$2.Polish]: "Samoa Ameryka\u0144skie", [e$2.Portuguese]: "Samoa Americana", [e$2.Punjabi]: "\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06", [e$2.Romanian]: "Samoa americane", [e$2.Russian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430", [e$2.Samoan]: "Samoa Amerika", [e$2.Sanskrit]: "\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906", [e$2.Scots]: "Amerikaans Samoa", [e$2.Serbian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430", [e$2.Sesotho]: "Amerikaans Samoa", [e$2.Shona]: "Amerikaans Samoa", [e$2.Sindhi]: "Amerikaans Samoa", [e$2.Sinhala]: "\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0", [e$2.Slovak]: "Amerikaans Samoa", [e$2.Slovenian]: "Amerikaans Samoa", [e$2.Somali]: "Amerikaans Samoa", [e$2.Spanish]: "Samoa Americana", [e$2.Sudanese]: "Amerikaans Samoa", [e$2.Swahili]: "Amerikaans Samoa", [e$2.Swedish]: "Amerikansk Samoa", [e$2.Tagalog]: "Amerikaans Samoa", [e$2.Tajik]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430", [e$2.Tamil]: "\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE", [e$2.Tatar]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430", [e$2.Telugu]: "\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E", [e$2.Thai]: "\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32", [e$2.Tibetan]: "\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40", [e$2.Turkish]: "Amerikan Samoas\u0131", [e$2.Ukrainian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430", [e$2.Urdu]: "\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627", [e$2.Uzbek]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430", [e$2.Vietnamese]: "Amerikaans Samoa", [e$2.Welsh]: "Amerikaans Samoa", [e$2.Xhosa]: "Amerikaans Samoa", [e$2.Yiddish]: "Amerikaans Samoa", [e$2.Yoruba]: "Amerikaans Samoa", [e$2.Zulu]: "Amerikaans Samoa" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Pago Pago", total: 558e3 } }, geography: { area: 199, region: T$2.Oceania, sub_region: p$4.Polynesia }, government: { capital: "Pago Pago", type: "Nonmetropolitan Territory of the US" } } }, Andorra: { i18n: { calling_codes: [376], currencies: [m$3.Euro], languages: [e$2.Catalan, e$2.Spanish], tz: { offsets: [n$4.UTC_PLUS_1, n$4.UTC_PLUS_2], regions: [u$2.EuropeAndorra], timezones: [s$3.CentralEuropeanTime] } }, id: r$4.Andorra, info: { flag: { emoji: "\u{1F1E6}\u{1F1F4}", emoji_unicode: "U+1F1E6 U+1F1F4", svg: "https://www.countryflags.io/ad/flat/64.svg" }, tld: [".ad"] }, iso: { alpha2: r$4.Andorra, alpha3: "AND", numeric: "020" }, name: { alt_spellings: ["AD", "Principality of Andorra", "Principat d'Andorra"], demonym: "Andorran", native: { endonym: "Andorra" }, official: "Principality of Andorra", short: "Andorra", translations: { [e$2.Afrikaans]: "Andorra", [e$2.Albanian]: "Andorra", [e$2.Amharic]: "\u12A0\u1295\u12F6\u122B", [e$2.Arabic]: "\u0623\u0646\u062F\u0648\u0631\u0627", [e$2.Armenian]: "\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584", [e$2.Azerbaijani]: "Andorra", [e$2.Bashkir]: "\u0410\u043D\u0434\u043E\u0440\u0430", [e$2.Basque]: "Andorra", [e$2.Belarusian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Bengali]: "\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE", [e$2.Berber]: "\u0623\u0646\u062F\u0648\u0631\u0627", [e$2.Bhutani]: "\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B", [e$2.Bosnian]: "Andora", [e$2.Breton]: "Andorra", [e$2.Bulgarian]: "\u0410\u043D\u0434\u043E\u0440\u0430", [e$2.Burmese]: "\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038", [e$2.Catalan]: "Andorra", [e$2.Chinese]: "\u5B89\u9053\u5C14", [e$2.Croatian]: "Andora", [e$2.Czech]: "Andorra", [e$2.Danish]: "Andorra", [e$2.Dutch]: "Andorra", [e$2.English]: "Andorra", [e$2.Esperanto]: "Andora", [e$2.Estonian]: "Andorra", [e$2.Finnish]: "Andorra", [e$2.French]: "Andorra", [e$2.Frisian]: "Andorra", [e$2.Galician]: "Andorra", [e$2.Georgian]: "\u12A0\u1295\u12F6\u122B", [e$2.German]: "Andorra", [e$2.Greek]: "\u0391\u03BD\u03B4\u03CC\u03C1\u03B1", [e$2.Hebrew]: "\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4", [e$2.Hindi]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$2.Hungarian]: "Andorra", [e$2.Icelandic]: "Andorra", [e$2.Igbo]: "Andorra", [e$2.Indonesian]: "Andorra", [e$2.Irish]: "Andorra", [e$2.Italian]: "Andorra", [e$2.Japanese]: "\u30A2\u30F3\u30C9\u30E9", [e$2.Javanese]: "Andorra", [e$2.Kannada]: "\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD", [e$2.Kazakh]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Khmer]: "\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6", [e$2.Korean]: "\uC548\uB3C4\uB77C", [e$2.Kurdish]: "Andorra", [e$2.Kyrgyz]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Lao]: "\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2", [e$2.Latin]: "Andorra", [e$2.Latvian]: "Andora", [e$2.Lithuanian]: "Andora", [e$2.Luxembourgish]: "Andorra", [e$2.Macedonian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Malagasy]: "Andorra", [e$2.Malay]: "Andorra", [e$2.Malayalam]: "\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D", [e$2.Maltese]: "Andorra", [e$2.Maori]: "Andorra", [e$2.Marathi]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$2.Mongolian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Nepali]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$2.Norwegian]: "Andorra", [e$2.Pashto]: "\u0622\u0646\u062F\u0648\u0631\u0627", [e$2.Persian]: "\u0622\u0646\u062F\u0648\u0631\u0627", [e$2.Polish]: "Andora", [e$2.Portuguese]: "Andorra", [e$2.Punjabi]: "\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E", [e$2.Romanian]: "Andorra", [e$2.Russian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Samoan]: "Andorra", [e$2.Sanskrit]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$2.Scots]: "Andorra", [e$2.Serbian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Sesotho]: "Andorra", [e$2.Shona]: "Andorra", [e$2.Sindhi]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$2.Sinhala]: "\u0D86\u0DB1\u0DCA\u0DAF\u0DDA", [e$2.Slovak]: "Andorra", [e$2.Slovenian]: "Andora", [e$2.Somali]: "Andorra", [e$2.Spanish]: "Andorra", [e$2.Sudanese]: "Andorra", [e$2.Swahili]: "Andorra", [e$2.Swedish]: "Andorra", [e$2.Tagalog]: "Andorra", [e$2.Tajik]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Tamil]: "\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE", [e$2.Tatar]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Telugu]: "\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E", [e$2.Thai]: "\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32", [e$2.Tibetan]: "\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B", [e$2.Turkish]: "Andora", [e$2.Ukrainian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Urdu]: "\u0622\u0646\u062F\u0648\u0631\u0627", [e$2.Uzbek]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$2.Vietnamese]: "Andorra", [e$2.Welsh]: "Andorra", [e$2.Xhosa]: "Andorra", [e$2.Yiddish]: "\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4", [e$2.Yoruba]: "Andorra", [e$2.Zulu]: "Andorra" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Andorra la Vella", total: 78e3 } }, geography: { area: 468, region: T$2.Europe, sub_region: p$4.SouthernEurope }, government: { capital: "Andorra la Vella", type: "Constitutional Monarchy" } } }, Angola: { i18n: { calling_codes: [244], currencies: [m$3.AngolaKwanza], languages: [e$2.Portuguese, e$2.Spanish, e$2.French, e$2.Italian, e$2.German, e$2.English], tz: { offsets: [n$4.UTC_0, n$4.UTC_PLUS_1, n$4.UTC_PLUS_2], regions: [u$2.AfricaLuanda], timezones: [s$3.WestAfricaTime] } }, id: r$4.Angola, info: { flag: { emoji: "\u{1F1E6}\u{1F1EC}", emoji_unicode: "U+1F1E6 U+1F1EC", svg: "https://www.countryflags.io/ao/flat/64.svg" }, tld: [".ao"] }, iso: { alpha2: r$4.Angola, alpha3: "AGO", numeric: "024" }, name: { alt_spellings: ["AO", "Rep\xFAblica de Angola", "\u0281\u025Bpublika de an"], demonym: "Angolan", native: { endonym: "Angola" }, official: "Republic of Angola", short: "Angola", translations: { [e$2.Afrikaans]: "Angola", [e$2.Albanian]: "Ang\xF2la", [e$2.Amharic]: "\u12A0\u1295\u130E\u120A\u12EB", [e$2.Arabic]: "\u0623\u0646\u063A\u0648\u0644\u0627", [e$2.Armenian]: "\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561", [e$2.Azerbaijani]: "Ang\u0259l", [e$2.Bashkir]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Basque]: "Angola", [e$2.Belarusian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Bengali]: "\u0985\u0999\u09CD\u0997\u09B2\u09BE", [e$2.Berber]: "Angola", [e$2.Bhutani]: "\u0F60\u0F56\u0FB2\u0F74\u0F42", [e$2.Bosnian]: "Angola", [e$2.Breton]: "Angola", [e$2.Bulgarian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Burmese]: "\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A", [e$2.Catalan]: "Angola", [e$2.Chinese]: "\u5B89\u54E5\u62C9", [e$2.Croatian]: "Angola", [e$2.Czech]: "Angola", [e$2.Danish]: "Angola", [e$2.Dutch]: "Angola", [e$2.English]: "Angola", [e$2.Esperanto]: "Angolo", [e$2.Estonian]: "Angola", [e$2.Finnish]: "Angola", [e$2.French]: "Angola", [e$2.Frisian]: "Angola", [e$2.Galician]: "Angola", [e$2.Georgian]: "\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0", [e$2.German]: "Angola", [e$2.Greenlandic]: "Angola", [e$2.Greek]: "\u0391\u03B3\u03BA\u03CC\u03BB\u03B1", [e$2.Gujarati]: "\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE", [e$2.Haitian]: "Angola", [e$2.Hausa]: "Angola", [e$2.Hebrew]: "\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4", [e$2.Hindi]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$2.Hungarian]: "Angola", [e$2.Icelandic]: "Angola", [e$2.Igbo]: "Angola", [e$2.Indonesian]: "Angola", [e$2.Irish]: "Angola", [e$2.Italian]: "Angola", [e$2.Japanese]: "\u30A2\u30F3\u30B4\u30E9", [e$2.Javanese]: "Anggol", [e$2.Kannada]: "\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE", [e$2.Kazakh]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Khmer]: "\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F", [e$2.Korean]: "\uC559\uACE8\uB77C", [e$2.Kurdish]: "Angola", [e$2.Kyrgyz]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Lao]: "\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2", [e$2.Latin]: "Angola", [e$2.Latvian]: "Angola", [e$2.Lithuanian]: "Angola", [e$2.Luxembourgish]: "Angola", [e$2.Macedonian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Malagasy]: "Angola", [e$2.Malay]: "Angola", [e$2.Malayalam]: "\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E", [e$2.Maltese]: "Angola", [e$2.Maori]: "Angola", [e$2.Marathi]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$2.Mongolian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Nepali]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$2.Norwegian]: "Angola", [e$2.Pashto]: "\u0627\u0646\u06AB\u0648\u0644\u0627", [e$2.Persian]: "\u0622\u0646\u06AF\u0648\u0644\u0627", [e$2.Polish]: "Angola", [e$2.Portuguese]: "Angola", [e$2.Punjabi]: "\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E", [e$2.Romanian]: "Angole", [e$2.Russian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Samoan]: "Angola", [e$2.Sanskrit]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$2.Scots]: "Angola", [e$2.Serbian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Sesotho]: "Angola", [e$2.Shona]: "Angola", [e$2.Sindhi]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$2.Sinhala]: "\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0", [e$2.Slovak]: "Angola", [e$2.Slovenian]: "Angola", [e$2.Somali]: "Angola", [e$2.Spanish]: "Angola", [e$2.Sudanese]: "Angola", [e$2.Swahili]: "Angola", [e$2.Swedish]: "Angola", [e$2.Tagalog]: "Angola", [e$2.Tajik]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Tamil]: "\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE", [e$2.Tatar]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Telugu]: "\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E", [e$2.Thai]: "\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19", [e$2.Tibetan]: "\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B", [e$2.Turkish]: "Angola", [e$2.Ukrainian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$2.Urdu]: "\u0627\u0646\u06AF\u0648\u0644\u0627", [e$2.Uzbek]: "Angola", [e$2.Vietnamese]: "Angola", [e$2.Xhosa]: "Angola", [e$2.Welsh]: "Angola", [e$2.Yiddish]: "\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4", [e$2.Yoruba]: "Angola", [e$2.Zulu]: "Angola" } } }, Anguilla: { i18n: { calling_codes: [1264], currencies: [m$3.DominicaDollar, m$3.EastCaribbeanDollar, m$3.Euro, m$3.UnitedStatesDollar, m$3.BritishPound], languages: [e$2.English, e$2.Spanish], tz: { offsets: [n$4.UTC_MINUS_4], regions: [u$2.AmericaAnguilla], timezones: [s$3.AtlanticStandardTime] } }, id: r$4.Anguilla, info: { flag: { emoji: "\u{1F1E6}\u{1F1EC}", emoji_unicode: "U+1F1E6 U+1F1EC", svg: "https://www.countryflags.io/ai/flat/64.svg" }, tld: [".ai"] }, iso: { alpha2: r$4.Anguilla, alpha3: "AIA", numeric: "660" }, name: { alt_spellings: ["AI"], demonym: "Anguillian", native: { endonym: "Anguilla" }, official: "Anguilla", short: "Anguilla", translations: { [e$2.Afrikaans]: "Anguilla", [e$2.Albanian]: "Anguilla", [e$2.Amharic]: "\u12A0\u1295\u1309\u120B", [e$2.Arabic]: "\u0623\u0646\u063A\u0648\u064A\u0644\u0627", [e$2.Armenian]: "\u0531\u0576\u0563\u056B\u056C\u0561", [e$2.Azerbaijani]: "Az\u0259rbaycan", [e$2.Bashkir]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Basque]: "Angila", [e$2.Belarusian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Bengali]: "\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE", [e$2.Berber]: "\u0623\u0646\u063A\u0648\u064A\u0644\u0627", [e$2.Bhutani]: "\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B", [e$2.Bosnian]: "Angila", [e$2.Breton]: "Angila", [e$2.Bulgarian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Burmese]: "\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A", [e$2.Catalan]: "Angilla", [e$2.Chinese]: "\u5B89\u572D\u62C9", [e$2.Croatian]: "Angila", [e$2.Czech]: "Anguilla", [e$2.Danish]: "Anguilla", [e$2.Dutch]: "Anguilla", [e$2.English]: "Anguilla", [e$2.Esperanto]: "Angila", [e$2.Estonian]: "Anguilla", [e$2.Finnish]: "Anguilla", [e$2.French]: "Anguilla", [e$2.Frisian]: "Angila", [e$2.Galician]: "Anguilla", [e$2.Georgian]: "\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0", [e$2.German]: "Anguilla", [e$2.Greenlandic]: "Anguilla", [e$2.Greek]: "\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC", [e$2.Gujarati]: "\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE", [e$2.Haitian]: "Anguilla", [e$2.Hausa]: "Anguilla", [e$2.Hebrew]: "\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4", [e$2.Hindi]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$2.Hungarian]: "Anguilla", [e$2.Icelandic]: "Anguilla", [e$2.Igbo]: "Anguilla", [e$2.Indonesian]: "Anguilla", [e$2.Irish]: "Anguilla", [e$2.Italian]: "Anguilla", [e$2.Japanese]: "\u30A2\u30F3\u30AE\u30E9", [e$2.Javanese]: "Anguilla", [e$2.Kannada]: "\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE", [e$2.Kazakh]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Khmer]: "\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798", [e$2.Korean]: "\uC575\uADC8\uB77C", [e$2.Kurdish]: "Anguilla", [e$2.Kyrgyz]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Lao]: "\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3", [e$2.Latin]: "Anguilla", [e$2.Latvian]: "Anguilla", [e$2.Lithuanian]: "Anguilla", [e$2.Luxembourgish]: "Angilla", [e$2.Macedonian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Malagasy]: "Angila", [e$2.Malay]: "Anguilla", [e$2.Malayalam]: "\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E", [e$2.Maltese]: "Anguilla", [e$2.Maori]: "Anguilla", [e$2.Marathi]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$2.Mongolian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Nepali]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$2.Norwegian]: "Anguilla", [e$2.Pashto]: "\u0622\u0646\u06AF\u0648\u0644\u0627", [e$2.Persian]: "\u0622\u0646\u06AF\u0648\u0644\u0627", [e$2.Polish]: "Anguilla", [e$2.Portuguese]: "Anguilla", [e$2.Punjabi]: "\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E", [e$2.Romanian]: "Anguilla", [e$2.Russian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Samoan]: "Anguilla", [e$2.Sanskrit]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$2.Scots]: "Anguilla", [e$2.Serbian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Sesotho]: "Anguilla", [e$2.Shona]: "Anguilla", [e$2.Sindhi]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$2.Sinhala]: "\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0", [e$2.Slovak]: "Anguilla", [e$2.Slovenian]: "Anguilla", [e$2.Somali]: "Anguilla", [e$2.Spanish]: "Anguilla", [e$2.Sudanese]: "Anguilla", [e$2.Swahili]: "Anguilla", [e$2.Swedish]: "Anguilla", [e$2.Tagalog]: "Anguilla", [e$2.Tajik]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Tamil]: "\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE", [e$2.Tatar]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Telugu]: "\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E", [e$2.Thai]: "\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32", [e$2.Tibetan]: "\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B", [e$2.Turkish]: "Anguilla", [e$2.Ukrainian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Urdu]: "\u0622\u0646\u06AF\u0648\u0644\u0627", [e$2.Uzbek]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$2.Vietnamese]: "Anguilla", [e$2.Welsh]: "Anguilla", [e$2.Xhosa]: "Anguilla", [e$2.Yiddish]: "Anguilla", [e$2.Yoruba]: "Anguilla", [e$2.Zulu]: "Anguilla" } } }, Antarctica: { i18n: { calling_codes: [672], currencies: [m$3.UnitedStatesDollar, m$3.Euro], languages: [e$2.English, e$2.Spanish, e$2.French, e$2.Portuguese, e$2.Italian, e$2.Dutch, e$2.German, e$2.Swedish, e$2.Norwegian, e$2.Danish, e$2.Finnish], tz: { offsets: [n$4.UTC_PLUS_1, n$4.UTC_PLUS_2], regions: [u$2.AntarcticaCasey, u$2.AntarcticaDavis, u$2.AntarcticaMcMurdo, u$2.AntarcticaPalmer, u$2.AntarcticaRothera], timezones: [s$3.AtlanticStandardTime, s$3.CentralTime, s$3.EasternTime, s$3.AtlanticStandardTime, s$3.AzoresStandardTime, s$3.NewfoundlandStandardTime] } }, id: r$4.Antarctica, info: { flag: { emoji: "\u{1F1E6}\u{1F1F6}", emoji_unicode: "U+1F1E6 U+1F1F6", svg: "https://www.countryflags.io/aq/flat/64.svg" }, tld: [".aq"] }, iso: { alpha2: r$4.Antarctica, alpha3: "ATA", numeric: "010" }, name: { alt_spellings: ["AQ"], demonym: "Antarctican", native: { endonym: "Antarctica" }, official: "Antarctica", short: "Antarctica", translations: { [e$2.Afrikaans]: "Antarctica", [e$2.Albanian]: "Antarktika", [e$2.Amharic]: "\u12A0\u1295\u1272\u120D\u12AB\u1293", [e$2.Arabic]: "\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627", [e$2.Armenian]: "\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578", [e$2.Azerbaijani]: "Az\u0259rbaycan", [e$2.Bashkir]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Basque]: "Antarktika", [e$2.Belarusian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Bengali]: "\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0", [e$2.Berber]: "\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627", [e$2.Bhutani]: "\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B", [e$2.Bosnian]: "Antarktika", [e$2.Breton]: "Antarktika", [e$2.Bulgarian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Burmese]: "\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038", [e$2.Catalan]: "Ant\xE0rtida", [e$2.Chinese]: "\u5357\u6781\u6D32", [e$2.Croatian]: "Antarktika", [e$2.Czech]: "Antarktida", [e$2.Danish]: "Antarktis", [e$2.Dutch]: "Antarctica", [e$2.English]: "Antarctica", [e$2.Esperanto]: "Antarktika", [e$2.Estonian]: "Antarktika", [e$2.Finnish]: "Antarktis", [e$2.French]: "Antarctica", [e$2.Frisian]: "Antarktis", [e$2.Galician]: "Ant\xE1rtida", [e$2.Georgian]: "\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0", [e$2.German]: "Antarktis", [e$2.Greenlandic]: "Antarktis", [e$2.Greek]: "\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE", [e$2.Gujarati]: "\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0", [e$2.Haitian]: "Antarctica", [e$2.Hausa]: "Antarktika", [e$2.Hebrew]: "\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4", [e$2.Hindi]: "\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930", [e$2.Hungarian]: "Antarktika", [e$2.Icelandic]: "Antarktis", [e$2.Igbo]: "Antarktika", [e$2.Indonesian]: "Antarktika", [e$2.Irish]: "Antarktika", [e$2.Italian]: "Antartide", [e$2.Japanese]: "\u5357\u6975", [e$2.Javanese]: "Antarktika", [e$2.Kannada]: "\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF", [e$2.Kazakh]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Khmer]: "\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799", [e$2.Korean]: "\uC564\uD2F0\uCE74\uD1A0\uB2C9", [e$2.Kurdish]: "Antarktika", [e$2.Kyrgyz]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Lao]: "\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0", [e$2.Latin]: "Antarctica", [e$2.Latvian]: "Antarktika", [e$2.Lithuanian]: "Antarktis", [e$2.Luxembourgish]: "Antarktis", [e$2.Macedonian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Malagasy]: "Antarctica", [e$2.Malay]: "Antarktika", [e$2.Malayalam]: "\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F", [e$2.Maltese]: "Antarktika", [e$2.Maori]: "Antarktika", [e$2.Marathi]: "\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E", [e$2.Mongolian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Nepali]: "\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E", [e$2.Norwegian]: "Antarktis", [e$2.Pashto]: "\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627", [e$2.Persian]: "\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627", [e$2.Polish]: "Antarktyka", [e$2.Portuguese]: "Ant\xE1rtida", [e$2.Punjabi]: "\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E", [e$2.Romanian]: "Antarctica", [e$2.Russian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Samoan]: "Antarktika", [e$2.Sanskrit]: "\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E", [e$2.Scots]: "Antarktika", [e$2.Serbian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Sesotho]: "Antarktika", [e$2.Shona]: "Antarktika", [e$2.Sindhi]: "Antarktika", [e$2.Sinhala]: "\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0", [e$2.Slovak]: "Antarktika", [e$2.Slovenian]: "Antarktika", [e$2.Somali]: "Antarktika", [e$2.Spanish]: "Ant\xE1rtida", [e$2.Sudanese]: "Antarktika", [e$2.Swahili]: "Antarktika", [e$2.Swedish]: "Antarktis", [e$2.Tagalog]: "Antarktika", [e$2.Tajik]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Tamil]: "\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD", [e$2.Tatar]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Telugu]: "\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E", [e$2.Thai]: "\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32", [e$2.Tibetan]: "\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72", [e$2.Turkish]: "Antarktika", [e$2.Ukrainian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Urdu]: "\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627", [e$2.Uzbek]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$2.Vietnamese]: "\u0110\u1EA5t Antarktik", [e$2.Welsh]: "Antarktika", [e$2.Xhosa]: "Antarktika", [e$2.Yiddish]: "Antarktika", [e$2.Yoruba]: "Antarktika", [e$2.Zulu]: "Antarktika" } } }, Armenia: { i18n: { calling_codes: [374], currencies: [m$3.ArmeniaDram], languages: [e$2.Armenian], tz: { offsets: [n$4.UTC_PLUS_4], regions: [u$2.AsiaJakarta], timezones: [s$3.ArmeniaTime] } }, id: r$4.Armenia, info: { flag: { emoji: "\u{1F1E6}\u{1F1F2}", emoji_unicode: "U+1F1E6 U+1F1F2", svg: "https://www.countryflags.io/am/flat/64.svg" }, tld: [".am"] }, iso: { alpha2: r$4.Armenia, alpha3: "ARM", numeric: "051" }, name: { alt_spellings: ["AM", "Hayastan", "Republic of Armenia", "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"], demonym: "Armenian", native: { endonym: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576" }, official: "Republic of Armenia", short: "Armenia", translations: { [e$2.Afrikaans]: "Armeni\xEB", [e$2.Albanian]: "Armenia", [e$2.Amharic]: "\u12A0\u121B\u122D\u129B", [e$2.Arabic]: "\u0623\u0631\u0645\u064A\u0646\u064A\u0627", [e$2.Armenian]: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576", [e$2.Azerbaijani]: "Az\u0259rbaycan", [e$2.Bashkir]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Basque]: "Arm\xE9nia", [e$2.Belarusian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Bengali]: "\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF", [e$2.Berber]: "\u0623\u0631\u0645\u064A\u0646\u064A\u0627", [e$2.Bhutani]: "\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42", [e$2.Bosnian]: "Armenija", [e$2.Breton]: "Armeni\xEB", [e$2.Bulgarian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Burmese]: "\u1021\u102C\u1019\u1010\u102D\u1010\u1039", [e$2.Catalan]: "Arm\xE8nia", [e$2.Chinese]: "\u4E9A\u7F8E\u5C3C\u4E9A", [e$2.Croatian]: "Armenija", [e$2.Czech]: "Arm\xE9nie", [e$2.Danish]: "Armenien", [e$2.Dutch]: "Armeni\xEB", [e$2.English]: "Armenia", [e$2.Esperanto]: "Armenia", [e$2.Estonian]: "Armeenia", [e$2.Finnish]: "Armenia", [e$2.French]: "Armenia", [e$2.Frisian]: "Armeenia", [e$2.Galician]: "Arm\xE9nia", [e$2.Georgian]: "\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8", [e$2.German]: "Armenien", [e$2.Greenlandic]: "Armenia", [e$2.Greek]: "\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1", [e$2.Gujarati]: "\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF", [e$2.Haitian]: "Armenia", [e$2.Hausa]: "Armenia", [e$2.Hebrew]: "\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4", [e$2.Hindi]: "\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E", [e$2.Hungarian]: "\xD6rm\xE9nyorsz\xE1g", [e$2.Icelandic]: "Armenia", [e$2.Igbo]: "Armenia", [e$2.Indonesian]: "Armenia", [e$2.Irish]: "Armenia", [e$2.Italian]: "Armenia", [e$2.Japanese]: "\u30A2\u30EB\u30E1\u30CB\u30A2", [e$2.Javanese]: "Armenia", [e$2.Kannada]: "\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF", [e$2.Kazakh]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Khmer]: "\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8", [e$2.Korean]: "\uC544\uB974\uBA54\uB2C8\uC544", [e$2.Kurdish]: "Armenia", [e$2.Kyrgyz]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Lao]: "\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2", [e$2.Latin]: "Armenia", [e$2.Latvian]: "Armeenia", [e$2.Lithuanian]: "Arm\u0117nija", [e$2.Luxembourgish]: "Armenien", [e$2.Macedonian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430", [e$2.Malagasy]: "Armenia", [e$2.Malay]: "Armenia", [e$2.Malayalam]: "\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F", [e$2.Maltese]: "Armenia", [e$2.Maori]: "Armenia", [e$2.Marathi]: "\u0905\u0930\u094D\u092E\u0947\u0928\u093F", [e$2.Mongolian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Nepali]: "\u0905\u0930\u094D\u092E\u0947\u0928\u093F", [e$2.Norwegian]: "Armenia", [e$2.Pashto]: "\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627", [e$2.Persian]: "\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646", [e$2.Polish]: "Armenia", [e$2.Portuguese]: "Armenia", [e$2.Punjabi]: "\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40", [e$2.Romanian]: "Armenia", [e$2.Russian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Samoan]: "Armenia", [e$2.Sanskrit]: "Armenia", [e$2.Scots]: "Armenia", [e$2.Serbian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430", [e$2.Sesotho]: "Armenia", [e$2.Shona]: "Armenia", [e$2.Sindhi]: "Armenia", [e$2.Sinhala]: "\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2", [e$2.Slovak]: "Armenia", [e$2.Slovenian]: "Armenija", [e$2.Somali]: "Armenia", [e$2.Spanish]: "Armenia", [e$2.Sudanese]: "Armenia", [e$2.Swahili]: "Armenia", [e$2.Swedish]: "Armenien", [e$2.Tagalog]: "Armenia", [e$2.Tajik]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Tamil]: "\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD", [e$2.Tatar]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Telugu]: "\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F", [e$2.Thai]: "\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19", [e$2.Tibetan]: "\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D", [e$2.Turkish]: "Ermenistan", [e$2.Ukrainian]: "\u0410\u0440\u043C\u0435\u043D\u0456\u044F", [e$2.Urdu]: "\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646", [e$2.Uzbek]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$2.Vietnamese]: "Armenia", [e$2.Welsh]: "Armenia", [e$2.Xhosa]: "Armenia", [e$2.Yiddish]: "\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4", [e$2.Yoruba]: "Armenia", [e$2.Zulu]: "Armenia" } } }, SomeCountry: { i18n: { calling_codes: [], currencies: [], languages: [], tz: { offsets: [], regions: [], timezones: [] } }, id: r$4.AmericanSamoa, info: { flag: { emoji: "", emoji_unicode: "", svg: "" }, tld: [] }, iso: { alpha2: r$4.AmericanSamoa, alpha3: "", numeric: "" }, name: { alt_spellings: [], demonym: "", native: { endonym: "" }, official: "", short: "", translations: { [e$2.Afrikaans]: "", [e$2.Albanian]: "", [e$2.Amharic]: "", [e$2.Arabic]: "", [e$2.Armenian]: "", [e$2.Azerbaijani]: "", [e$2.Bashkir]: "", [e$2.Basque]: "", [e$2.Belarusian]: "", [e$2.Bengali]: "", [e$2.Berber]: "", [e$2.Bhutani]: "", [e$2.Bosnian]: "", [e$2.Breton]: "", [e$2.Bulgarian]: "", [e$2.Burmese]: "", [e$2.Catalan]: "", [e$2.Chinese]: "", [e$2.Croatian]: "", [e$2.Czech]: "", [e$2.Danish]: "", [e$2.Dutch]: "", [e$2.English]: "", [e$2.Esperanto]: "", [e$2.Estonian]: "", [e$2.Finnish]: "", [e$2.French]: "", [e$2.Frisian]: "", [e$2.Galician]: "", [e$2.Georgian]: "", [e$2.German]: "", [e$2.Greenlandic]: "", [e$2.Greek]: "", [e$2.Gujarati]: "", [e$2.Haitian]: "", [e$2.Hausa]: "", [e$2.Hebrew]: "", [e$2.Hindi]: "", [e$2.Hungarian]: "", [e$2.Icelandic]: "", [e$2.Igbo]: "", [e$2.Indonesian]: "", [e$2.Irish]: "", [e$2.Italian]: "", [e$2.Japanese]: "", [e$2.Javanese]: "", [e$2.Kannada]: "", [e$2.Kazakh]: "", [e$2.Khmer]: "", [e$2.Korean]: "", [e$2.Kurdish]: "", [e$2.Kyrgyz]: "", [e$2.Lao]: "", [e$2.Latin]: "", [e$2.Latvian]: "", [e$2.Lithuanian]: "", [e$2.Luxembourgish]: "", [e$2.Macedonian]: "", [e$2.Malagasy]: "", [e$2.Malay]: "", [e$2.Malayalam]: "", [e$2.Maltese]: "", [e$2.Maori]: "", [e$2.Marathi]: "", [e$2.Mongolian]: "", [e$2.Nepali]: "", [e$2.Norwegian]: "", [e$2.Pashto]: "", [e$2.Persian]: "", [e$2.Polish]: "", [e$2.Portuguese]: "", [e$2.Punjabi]: "", [e$2.Romanian]: "", [e$2.Russian]: "", [e$2.Samoan]: "", [e$2.Sanskrit]: "", [e$2.Scots]: "", [e$2.Serbian]: "", [e$2.Sesotho]: "", [e$2.Shona]: "", [e$2.Sindhi]: "", [e$2.Sinhala]: "", [e$2.Slovak]: "", [e$2.Slovenian]: "", [e$2.Somali]: "", [e$2.Spanish]: "", [e$2.Sudanese]: "", [e$2.Swahili]: "", [e$2.Swedish]: "", [e$2.Tagalog]: "", [e$2.Tajik]: "", [e$2.Tamil]: "", [e$2.Tatar]: "", [e$2.Telugu]: "", [e$2.Thai]: "", [e$2.Tibetan]: "", [e$2.Turkish]: "", [e$2.Ukrainian]: "", [e$2.Urdu]: "", [e$2.Uzbek]: "", [e$2.Vietnamese]: "", [e$2.Welsh]: "", [e$2.Xhosa]: "", [e$2.Yiddish]: "", [e$2.Yoruba]: "", [e$2.Zulu]: "" } } } });
({ id: e$2.Afrikaans, language: { code: t$1.Afrikaans, name: "Afrikaans", native: "Afrikaans" }, name: "Afrikaans", native_name: "Afrikaans", rtl: false });
({ country: { code: r$4.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$2.AfrikaansSouthAfrica, language: { code: t$1.Afrikaans, name: "Afrikaans", native: "Afrikaans" }, name: "Afrikaans (South Africa)", native_name: "Afrikaans (Suid-Afrika)", rtl: false });
({ id: e$2.Albanian, language: { code: t$1.Albanian, name: "Albanian", native: "Shqip" }, name: "Albanian", native_name: "Shqip", rtl: false });
({ country: { code: r$4.Albania, name: "Albania", native: "Shqip\xEBria" }, id: e$2.AlbanianAlbania, language: { code: t$1.Albanian, name: "Albanian", native: "Shqip" }, name: "Albanian (Albania)", native_name: "Shqip (Shqip\xEBria)", rtl: false });
({ id: e$2.Amharic, language: { code: t$1.Amharic, name: "Amharic", native: "\u12A0\u121B\u122D\u129B" }, name: "Amharic", native_name: "\u12A0\u121B\u122D\u129B", rtl: false });
({ country: { code: r$4.Ethiopia, name: "Ethiopia", native: "\u12A2\u1275\u12EE\u1335\u12EB" }, id: e$2.AmharicEthiopia, language: { code: t$1.Amharic, name: "Amharic", native: "\u12A0\u121B\u122D\u129B" }, name: "Amharic (Ethiopia)", native_name: "\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)", rtl: false });
({ id: e$2.Arabic, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629", rtl: true });
({ country: { code: r$4.Algeria, name: "Algeria", native: "\u0627\u0644\u062C\u0632\u0627\u0626\u0631" }, id: e$2.ArabicAlgeria, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Algeria)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)", rtl: true });
({ country: { code: r$4.Bahrain, name: "Bahrain", native: "\u0627\u0644\u0628\u062D\u0631\u064A\u0646" }, id: e$2.ArabicBahrain, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Bahrain)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)", rtl: true });
({ country: { code: r$4.Egypt, name: "Egypt", native: "\u0645\u0635\u0631" }, id: e$2.ArabicEgypt, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Egypt)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)", rtl: true });
({ country: { code: r$4.Iraq, name: "Iraq", native: "\u0627\u0644\u0639\u0631\u0627\u0642" }, id: e$2.ArabicIraq, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Iraq)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)", rtl: true });
({ country: { code: r$4.Jordan, name: "Jordan", native: "\u0627\u0644\u0623\u0631\u062F\u0646" }, id: e$2.ArabicJordan, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Jordan)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)", rtl: true });
({ country: { code: r$4.Kuwait, name: "Kuwait", native: "\u0627\u0644\u0643\u0648\u064A\u062A" }, id: e$2.ArabicKuwait, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Kuwait)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)", rtl: true });
({ country: { code: r$4.Lebanon, name: "Lebanon", native: "\u0644\u0628\u0646\u0627\u0646" }, id: e$2.ArabicLebanon, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Lebanon)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)", rtl: true });
({ country: { code: r$4.Libya, name: "Libya", native: "\u0644\u064A\u0628\u064A\u0627" }, id: e$2.ArabicLibya, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Libya)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)", rtl: true });
({ country: { code: r$4.Morocco, name: "Morocco", native: "\u0627\u0644\u0645\u063A\u0631\u0628" }, id: e$2.ArabicMorocco, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Morocco)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)", rtl: true });
({ country: { code: r$4.Oman, name: "Oman", native: "\u0639\u0645\u0627\u0646" }, id: e$2.ArabicOman, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Oman)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)", rtl: true });
({ country: { code: r$4.Qatar, name: "Qatar", native: "\u0642\u0637\u0631" }, id: e$2.ArabicQatar, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Qatar)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)", rtl: true });
({ country: { code: r$4.SaudiArabia, name: "Saudi Arabia", native: "\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629" }, id: e$2.ArabicSaudiArabia, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Saudi Arabia)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)", rtl: true });
({ country: { code: r$4.Tunisia, name: "Tunisia", native: "\u062A\u0648\u0646\u0633" }, id: e$2.ArabicTunisia, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Tunisia)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)", rtl: true });
({ country: { code: r$4.UnitedArabEmirates, name: "United Arab Emirates", native: "\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629" }, id: e$2.ArabicUnitedArabEmirates, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (United Arab Emirates)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)", rtl: true });
({ country: { code: r$4.Yemen, name: "Yemen", native: "\u0627\u0644\u064A\u0645\u0646" }, id: e$2.ArabicYemen, language: { code: t$1.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Yemen)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)", rtl: true });
({ id: e$2.Armenian, language: { code: t$1.Armenian, name: "Armenian", native: "\u0540\u0561\u0575\u0565\u0580\u0565\u0576" }, name: "Armenian", native_name: "\u0540\u0561\u0575\u0565\u0580\u0565\u0576", rtl: false });
({ country: { code: r$4.Armenia, name: "Armenia", native: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576" }, id: e$2.ArmenianArmenia, language: { code: t$1.Armenian, name: "Armenian", native: "\u0570\u0561\u0575\u0565\u0580\u0565\u0576" }, name: "Armenian (Armenia)", native_name: "\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)", rtl: false });
({ id: e$2.Azerbaijani, language: { code: t$1.Azerbaijani, name: "Azeribaijani", native: "Az\u0259rbaycan" }, name: "Azeri", native_name: "Az\u0259rbaycan", rtl: false });
({ country: { code: r$4.Azerbaijan, name: "Azerbaijan", native: "Az\u0259rbaycan" }, id: e$2.AzerbaijaniAzerbaijan, language: { code: t$1.Azerbaijani, name: "Azerbaijani", native: "Az\u0259rbaycan" }, name: "Azeri (Azerbaijan)", native_name: "Az\u0259rbaycan (Az\u0259rbaycan)", rtl: false });
({ id: e$2.Basque, language: { code: t$1.Basque, name: "Basque", native: "Euskara" }, name: "Basque", native_name: "Euskara", rtl: false });
({ country: { code: r$4.Spain, name: "Spain", native: "Espa\xF1a" }, id: e$2.BasqueSpain, language: { code: t$1.Basque, name: "Basque", native: "Euskara" }, name: "Basque (Spain)", native_name: "Euskara (Espa\xF1a)", rtl: false });
({ id: e$2.Belarusian, language: { code: t$1.Belarusian, name: "Belarusian", native: "\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F" }, name: "Belarusian", native_name: "\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F", rtl: false });
({ country: { code: r$4.Belarus, name: "Belarus", native: "\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C" }, id: e$2.BelarusianBelarus, language: { code: t$1.Belarusian, name: "Belarusian", native: "\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F" }, name: "Belarusian (Belarus)", native_name: "\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)", rtl: false });
({ id: e$2.Bengali, language: { code: t$1.Bengali, name: "Bengali", native: "\u09AC\u09BE\u0982\u09B2\u09BE" }, name: "Bengali", native_name: "\u09AC\u09BE\u0982\u09B2\u09BE", rtl: false });
({ country: { code: r$4.Bangladesh, name: "Bangladesh", native: "\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6" }, id: e$2.BengaliBangladesh, language: { code: t$1.Bengali, name: "Bengali", native: "\u09AC\u09BE\u0982\u09B2\u09BE" }, name: "Bengali (Bangladesh)", native_name: "\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)", rtl: false });
({ id: e$2.Bhutani, language: { code: t$1.Bhutani, name: "Bhutani", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Bhutani", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42", rtl: false });
({ country: { code: r$4.Bhutan, name: "Bhutan", native: "\u0F60\u0F56\u0FB2\u0F74\u0F42" }, id: e$2.BhutaniBhutan, language: { code: t$1.Bhutani, name: "Bhutani", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Bhutani (Bhutan)", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)", rtl: false });
({ id: e$2.Bulgarian, language: { code: t$1.Bulgarian, name: "Bulgarian", native: "\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438" }, name: "Bulgarian", native_name: "\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438", rtl: false });
({ country: { code: r$4.Bulgaria, name: "Bulgaria", native: "\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F" }, id: e$2.BulgarianBulgaria, language: { code: t$1.Bulgarian, name: "Bulgarian", native: "\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438" }, name: "Bulgarian (Bulgaria)", native_name: "\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)", rtl: false });
({ id: e$2.Burmese, language: { code: t$1.Burmese, name: "Burmese", native: "\u1017\u1019\u102C\u1005\u102C" }, name: "Burmese", native_name: "\u1017\u1019\u102C\u1005\u102C", rtl: false });
({ country: { code: r$4.Myanmar, name: "Myanmar", native: "\u1019\u103C\u1014\u103A\u1019\u102C" }, id: e$2.BurmeseMyanmar, language: { code: t$1.Burmese, name: "Burmese", native: "\u1017\u1019\u102C\u1005\u102C" }, name: "Burmese (Myanmar)", native_name: "\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)", rtl: false });
({ id: e$2.Cantonese, language: { code: t$1.Cantonese, name: "Cantonese", native: "\u5EE3\u6771\u8A71" }, name: "Cantonese", native_name: "\u5EE3\u6771\u8A71", rtl: false });
({ country: { code: r$4.HongKong, name: "Hong Kong", native: "\u9999\u6E2F" }, id: e$2.CantoneseHongKong, language: { code: t$1.Cantonese, name: "Cantonese", native: "\u5EE3\u6771\u8A71" }, name: "Cantonese (Hong Kong)", native_name: "\u5EE3\u6771\u8A71 (\u9999\u6E2F)", rtl: false });
({ id: e$2.Catalan, language: { code: t$1.Catalan, name: "Catalan", native: "Catal\xE0" }, name: "Catalan", native_name: "Catal\xE0", rtl: false });
({ country: { code: r$4.Spain, name: "Spain", native: "Espa\xF1a" }, id: e$2.CatalanSpain, language: { code: t$1.Catalan, name: "Catalan", native: "Catal\xE0" }, name: "Catalan (Spain)", native_name: "Catal\xE0 (Espanya)", rtl: false });
({ id: e$2.ChineseSimplified, language: { code: t$1.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified)", native_name: "\u4E2D\u6587", rtl: false });
({ country: { code: r$4.China, name: "China", native: "\u4E2D\u56FD" }, id: e$2.ChineseSimplifiedChina, language: { code: t$1.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified/China)", native_name: "\u4E2D\u6587 (\u4E2D\u56FD)", rtl: false });
({ country: { code: r$4.HongKong, name: "Hong Kong", native: "\u9999\u6E2F" }, id: e$2.ChineseSimplifiedHongKong, language: { code: t$1.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified/Hong Kong)", native_name: "\u4E2D\u6587 (\u9999\u6E2F)", rtl: false });
({ country: { code: r$4.Macau, name: "Macau", native: "\u6FB3\u9580" }, id: e$2.ChineseSimplifiedMacau, language: { code: t$1.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified/Macau)", native_name: "\u4E2D\u6587 (\u6FB3\u9580)", rtl: false });
({ country: { code: r$4.Singapore, name: "Singapore", native: "\u65B0\u52A0\u5761" }, id: e$2.ChineseSimplifiedSingapore, language: { code: t$1.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified/Singapore)", native_name: "\u4E2D\u6587 (\u65B0\u52A0\u5761)", rtl: false });
({ id: e$2.ChineseTraditional, language: { code: t$1.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Traditional)", native_name: "\u4E2D\u6587", rtl: false });
({ country: { code: r$4.HongKong, name: "Hong Kong", native: "\u9999\u6E2F" }, id: e$2.ChineseTraditionalHongKong, language: { code: t$1.Chinese, name: "Chinese (Traditional/Hong Kong)", native: "\u4E2D\u6587" }, name: "Chinese (Hong Kong)", native_name: "\u4E2D\u6587 (\u9999\u6E2F)", rtl: false });
({ country: { code: r$4.Macau, name: "Macau", native: "\u6FB3\u9580" }, id: e$2.ChineseTraditionalMacau, language: { code: t$1.Chinese, name: "Chinese (Traditional/Macau)", native: "\u4E2D\u6587" }, name: "Chinese (Macau)", native_name: "\u4E2D\u6587 (\u6FB3\u9580)", rtl: false });
({ country: { code: r$4.Singapore, name: "Singapore", native: "\u65B0\u52A0\u5761" }, id: e$2.ChineseTraditionalSingapore, language: { code: t$1.Chinese, name: "Chinese (Traditional/Singapore)", native: "\u4E2D\u6587" }, name: "Chinese (Singapore)", native_name: "\u4E2D\u6587 (\u65B0\u52A0\u5761)", rtl: false });
({ id: e$2.Croatian, language: { code: t$1.Croatian, name: "Croatian", native: "Hrvatski" }, name: "Croatian", native_name: "Hrvatski", rtl: false });
({ country: { code: r$4.BosniaAndHerzegovina, name: "Bosnia and Herzegovina", native: "Bosna i Hercegovina" }, id: e$2.CroatianBosniaAndHerzegovina, language: { code: t$1.Croatian, name: "Croatian", native: "Hrvatski" }, name: "Croatian (Bosnia and Herzegovina)", native_name: "Hrvatski (Bosna i Hercegovina)", rtl: false });
({ country: { code: r$4.Croatia, name: "Croatia", native: "Hrvatska" }, id: e$2.CroatianCroatia, language: { code: t$1.Croatian, name: "Croatian", native: "Hrvatski" }, name: "Croatian (Croatia)", native_name: "Hrvatski (Hrvatska)", rtl: false });
({ id: e$2.Czech, language: { code: t$1.Czech, name: "Czech", native: "\u010Ce\u0161tina" }, name: "Czech", native_name: "\u010Ce\u0161tina", rtl: false });
({ country: { code: r$4.CzechRepublic, name: "Czech Republic", native: "\u010Cesk\xE1 republika" }, id: e$2.CzechCzechRepublic, language: { code: t$1.Czech, name: "Czech", native: "\u010Ce\u0161tina" }, name: "Czech (Czech Republic)", native_name: "\u010Ce\u0161tina (\u010Cesk\xE1 republika)", rtl: false });
({ id: e$2.Danish, language: { code: t$1.Danish, name: "Danish", native: "Dansk" }, name: "Danish", native_name: "Dansk", rtl: false });
({ country: { code: r$4.Denmark, name: "Denmark", native: "Danmark" }, id: e$2.DanishDenmark, language: { code: t$1.Danish, name: "Danish", native: "Dansk" }, name: "Danish (Denmark)", native_name: "Dansk (Danmark)", rtl: false });
({ id: e$2.Divehi, language: { code: t$1.Divehi, name: "Divehi", native: "\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0" }, name: "Divehi", native_name: "\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0", rtl: true });
({ country: { code: r$4.Maldives, name: "Maldives", native: "\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC" }, id: e$2.DivehiMaldives, language: { code: t$1.Divehi, name: "Divehi", native: "\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0" }, name: "Divehi (Maldives)", native_name: "\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)", rtl: true });
({ id: e$2.Dutch, language: { code: t$1.Dutch, name: "Dutch", native: "Nederlands" }, name: "Dutch", native_name: "Nederlands", rtl: false });
({ country: { code: r$4.Belgium, name: "Belgium", native: "Belgi\xEB" }, id: e$2.DutchBelgium, language: { code: t$1.Dutch, name: "Dutch", native: "Nederlands" }, name: "Dutch (Belgium)", native_name: "Nederlands (Belgi\xEB)", rtl: false });
({ country: { code: r$4.Netherlands, name: "Netherlands", native: "Nederland" }, id: e$2.DutchNetherlands, language: { code: t$1.Dutch, name: "Dutch", native: "Nederlands" }, name: "Dutch (Netherlands)", native_name: "Nederlands (Nederland)", rtl: false });
({ id: e$2.English, language: { code: t$1.English, name: "English", native: "English" }, name: "English", native_name: "English", rtl: false });
({ country: { code: r$4.Australia, name: "Australia", native: "Australia" }, id: e$2.EnglishAustralia, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Australia)", native_name: "English (Australia)", rtl: false });
({ country: { code: r$4.Belgium, name: "Belgium", native: "Belgi\xEB" }, id: e$2.EnglishBelgium, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Belgium)", native_name: "English (Belgi\xEB)", rtl: false });
({ country: { code: r$4.Canada, name: "Canada", native: "Canada" }, id: e$2.EnglishCanada, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Canada)", native_name: "English (Canada)", rtl: false });
({ country: { code: r$4.Ireland, name: "Ireland", native: "\xC9ire" }, id: e$2.EnglishIreland, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Ireland)", native_name: "English (\xC9ire)", rtl: false });
({ country: { code: r$4.Jamaica, name: "Jamaica", native: "Jamaica" }, id: e$2.EnglishJamaica, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Jamaica)", native_name: "English (Jamaica)", rtl: false });
({ country: { code: r$4.NewZealand, name: "New Zealand", native: "New Zealand" }, id: e$2.EnglishNewZealand, language: { code: t$1.English, name: "English", native: "English" }, name: "English (New Zealand)", native_name: "English (New Zealand)", rtl: false });
({ country: { code: r$4.Philippines, name: "Philippines", native: "Philippines" }, id: e$2.EnglishPhilippines, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Philippines)", native_name: "English (Philippines)", rtl: false });
({ country: { code: r$4.Singapore, name: "Singapore", native: "Singapore" }, id: e$2.EnglishSingapore, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Singapore)", native_name: "English (Singapore)", rtl: false });
({ country: { code: r$4.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$2.EnglishSouthAfrica, language: { code: t$1.English, name: "English", native: "English" }, name: "English (South Africa)", native_name: "English (South Africa)", rtl: false });
({ country: { code: r$4.TrinidadAndTobago, name: "Trinidad and Tobago", native: "Trinidad and Tobago" }, id: e$2.EnglishTrinidadAndTobago, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Trinidad and Tobago)", native_name: "English (Trinidad and Tobago)", rtl: false });
({ country: { code: r$4.UnitedKingdom, name: "United Kingdom", native: "United Kingdom" }, id: e$2.EnglishUnitedKingdom, language: { code: t$1.English, name: "English", native: "English" }, name: "English (United Kingdom)", native_name: "English (United Kingdom)", rtl: false });
({ country: { code: r$4.UnitedStates, name: "United States", native: "United States" }, id: e$2.EnglishUnitedStates, language: { code: t$1.English, name: "English", native: "English" }, name: "English (United States)", native_name: "English (United States)", rtl: false });
({ country: { code: r$4.Zimbabwe, name: "Zimbabwe", native: "Zimbabwe" }, id: e$2.EnglishZimbabwe, language: { code: t$1.English, name: "English", native: "English" }, name: "English (Zimbabwe)", native_name: "English (Zimbabwe)", rtl: false });
({ id: e$2.Esperanto, language: { code: t$1.Esperanto, name: "Esperanto", native: "Esperanto" }, name: "Esperanto", native_name: "Esperanto", rtl: false });
({ id: e$2.Estonian, language: { code: t$1.Estonian, name: "Estonian", native: "Eesti" }, name: "Estonian", native_name: "Eesti", rtl: false });
({ country: { code: r$4.Estonia, name: "Estonia", native: "Eesti" }, id: e$2.EstonianEstonia, language: { code: t$1.Estonian, name: "Estonian", native: "Eesti" }, name: "Estonian (Estonia)", native_name: "Eesti (Eesti)", rtl: false });
({ id: e$2.Faroese, language: { code: t$1.Faroese, name: "Faroese", native: "F\xF8royskt" }, name: "Faroese", native_name: "F\xF8royskt", rtl: false });
({ country: { code: r$4.FaroeIslands, name: "Faroe Islands", native: "F\xF8royar" }, id: e$2.FaroeseFaroeIslands, language: { code: t$1.Faroese, name: "Faroese", native: "F\xF8royskt" }, name: "Faroese (Faroe Islands)", native_name: "F\xF8royskt (F\xF8royar)", rtl: false });
({ id: e$2.Farsi, language: { code: t$1.Farsi, name: "Farsi", native: "\u0641\u0627\u0631\u0633\u06CC" }, name: "Farsi", native_name: "\u0641\u0627\u0631\u0633\u06CC", rtl: true });
({ country: { code: r$4.Iran, name: "Iran", native: "\u0627\u06CC\u0631\u0627\u0646" }, id: e$2.FarsiIran, language: { code: t$1.Farsi, name: "Farsi", native: "\u0641\u0627\u0631\u0633\u06CC" }, name: "Farsi (Iran)", native_name: "\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)", rtl: true });
({ id: e$2.Filipino, language: { code: t$1.Filipino, name: "Filipino", native: "Filipino" }, name: "Filipino", native_name: "Filipino", rtl: false });
({ country: { code: r$4.Philippines, name: "Philippines", native: "Pilipinas" }, id: e$2.FilipinoPhilippines, language: { code: t$1.Filipino, name: "Filipino", native: "Filipino" }, name: "Filipino (Philippines)", native_name: "Filipino (Pilipinas)", rtl: false });
({ id: e$2.Finnish, language: { code: t$1.Finnish, name: "Finnish", native: "Suomi" }, name: "Finnish", native_name: "Suomi", rtl: false });
({ country: { code: r$4.Finland, name: "Finland", native: "Suomi" }, id: e$2.FinnishFinland, language: { code: t$1.Finnish, name: "Finnish", native: "Suomi" }, name: "Finnish (Finland)", native_name: "Suomi (Suomi)", rtl: false });
({ id: e$2.French, language: { code: t$1.French, name: "French", native: "Fran\xE7ais" }, name: "French", native_name: "Fran\xE7ais", rtl: false });
({ country: { code: r$4.Belgium, name: "Belgium", native: "Belgique" }, id: e$2.FrenchBelgium, language: { code: t$1.French, name: "French", native: "Fran\xE7ais" }, name: "French (Belgium)", native_name: "Fran\xE7ais (Belgique)", rtl: false });
({ country: { code: r$4.Canada, name: "Canada", native: "Canada" }, id: e$2.FrenchCanada, language: { code: t$1.French, name: "French", native: "Fran\xE7ais" }, name: "French (Canada)", native_name: "Fran\xE7ais (Canada)", rtl: false });
({ country: { code: r$4.France, name: "France", native: "France" }, id: e$2.FrenchFrance, language: { code: t$1.French, name: "French", native: "Fran\xE7ais" }, name: "French (France)", native_name: "Fran\xE7ais (France)", rtl: false });
({ country: { code: r$4.Luxembourg, name: "Luxembourg", native: "Luxembourg" }, id: e$2.FrenchLuxembourg, language: { code: t$1.French, name: "French", native: "Fran\xE7ais" }, name: "French (Luxembourg)", native_name: "Fran\xE7ais (Luxembourg)", rtl: false });
({ country: { code: r$4.Monaco, name: "Monaco", native: "Monaco" }, id: e$2.FrenchMonaco, language: { code: t$1.French, name: "French", native: "Fran\xE7ais" }, name: "French (Monaco)", native_name: "Fran\xE7ais (Monaco)", rtl: false });
({ country: { code: r$4.Reunion, name: "Reunion", native: "La R\xE9union" }, id: e$2.FrenchReunion, language: { code: t$1.French, name: "French", native: "Fran\xE7ais" }, name: "French (Reunion)", native_name: "Fran\xE7ais (La R\xE9union)", rtl: false });
({ country: { code: r$4.Switzerland, name: "Switzerland", native: "Suisse" }, id: e$2.FrenchSwitzerland, language: { code: t$1.French, name: "French", native: "Fran\xE7ais" }, name: "French (Switzerland)", native_name: "Fran\xE7ais (Suisse)", rtl: false });
({ id: e$2.Frisian, language: { code: t$1.Frisian, name: "Frisian", native: "Frysk" }, name: "Frisian", native_name: "Frysk", rtl: false });
({ country: { code: r$4.Netherlands, name: "Netherlands", native: "Nederland" }, id: e$2.FrisianNetherlands, language: { code: t$1.Frisian, name: "Frisian", native: "Frysk" }, name: "Frisian (Netherlands)", native_name: "Frysk (Nederland)", rtl: false });
({ id: e$2.Galician, language: { code: t$1.Galician, name: "Galician", native: "Galego" }, name: "Galician", native_name: "Galego", rtl: false });
({ country: { code: r$4.Spain, name: "Spain", native: "Espa\xF1a" }, id: e$2.GalicianSpain, language: { code: t$1.Galician, name: "Galician", native: "Galego" }, name: "Galician (Spain)", native_name: "Galego (Espa\xF1a)", rtl: false });
({ id: e$2.Georgian, language: { code: t$1.Georgian, name: "Georgian", native: "\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8" }, name: "Georgian", native_name: "\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8", rtl: false });
({ country: { code: r$4.Georgia, name: "Georgia", native: "\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD" }, id: e$2.GeorgianGeorgia, language: { code: t$1.Georgian, name: "Georgian", native: "\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8" }, name: "Georgian (Georgia)", native_name: "\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)", rtl: false });
({ id: e$2.German, language: { code: t$1.German, name: "German", native: "Deutsch" }, name: "German", native_name: "Deutsch", rtl: false });
({ country: { code: r$4.Austria, name: "Austria", native: "\xD6sterreich" }, id: e$2.GermanAustria, language: { code: t$1.German, name: "German", native: "Deutsch" }, name: "German (Austria)", native_name: "Deutsch (\xD6sterreich)", rtl: false });
({ country: { code: r$4.Belgium, name: "Belgium", native: "Belgi\xEB" }, id: e$2.GermanBelgium, language: { code: t$1.German, name: "German", native: "Deutsch" }, name: "German (Belgium)", native_name: "Deutsch (Belgi\xEB)", rtl: false });
({ country: { code: r$4.Switzerland, name: "Switzerland", native: "Suisse" }, id: e$2.GermanSwitzerland, language: { code: t$1.German, name: "German", native: "Deutsch" }, name: "German (Switzerland)", native_name: "Deutsch (Suisse)", rtl: false });
({ country: { code: r$4.Liechtenstein, name: "Liechtenstein", native: "Liechtenstein" }, id: e$2.GermanLiechtenstein, language: { code: t$1.German, name: "German", native: "Deutsch" }, name: "German (Liechtenstein)", native_name: "Deutsch (Liechtenstein)", rtl: false });
({ country: { code: r$4.Luxembourg, name: "Luxembourg", native: "Luxembourg" }, id: e$2.GermanLuxembourg, language: { code: t$1.German, name: "German", native: "Deutsch" }, name: "German (Luxembourg)", native_name: "Deutsch (Luxembourg)", rtl: false });
({ id: e$2.Greek, language: { code: t$1.Greek, name: "Greek", native: "\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC" }, name: "Greek", native_name: "\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC", rtl: false });
({ country: { code: r$4.Greece, name: "Greece", native: "\u0395\u03BB\u03BB\u03AC\u03B4\u03B1" }, id: e$2.GreekGreece, language: { code: t$1.Greek, name: "Greek", native: "\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC" }, name: "Greek (Greece)", native_name: "\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)", rtl: false });
({ id: e$2.Greenlandic, language: { code: t$1.Greenlandic, name: "Greenlandic", native: "Kalaallisut" }, name: "Greenlandic", native_name: "Kalaallisut", rtl: false });
({ country: { code: r$4.Greenland, name: "Greenland", native: "Kalaallit Nunaat" }, id: e$2.GreenlandicGreenland, language: { code: t$1.Greenlandic, name: "Greenlandic", native: "Kalaallisut" }, name: "Greenlandic (Greenland)", native_name: "Kalaallisut (Kalaallit Nunaat)", rtl: false });
({ id: e$2.Gujarati, language: { code: t$1.Gujarati, name: "Gujarati", native: "\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0" }, name: "Gujarati", native_name: "\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$2.GujaratiIndia, language: { code: t$1.Gujarati, name: "Gujarati", native: "\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0" }, name: "Gujarati (India)", native_name: "\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$2.Hausa, language: { code: t$1.Hausa, name: "Hausa", native: "\u0647\u064E\u0648\u064F\u0633\u064E" }, name: "Hausa", native_name: "\u0647\u064E\u0648\u064F\u0633\u064E", rtl: false });
({ country: { code: r$4.Ghana, name: "Ghana", native: "Ghana" }, id: e$2.HausaGhana, language: { code: t$1.Hausa, name: "Hausa", native: "\u0647\u064E\u0648\u064F\u0633\u064E" }, name: "Hausa (Ghana)", native_name: "\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)", rtl: false });
({ country: { code: r$4.Niger, name: "Niger", native: "Niger" }, id: e$2.HausaNiger, language: { code: t$1.Hausa, name: "Hausa", native: "\u0647\u064E\u0648\u064F\u0633\u064E" }, name: "Hausa (Niger)", native_name: "\u0647\u064E\u0648\u064F\u0633\u064E (Niger)", rtl: false });
({ country: { code: r$4.Nigeria, name: "Nigeria", native: "Nigeria" }, id: e$2.HausaNigeria, language: { code: t$1.Hausa, name: "Hausa", native: "\u0647\u064E\u0648\u064F\u0633\u064E" }, name: "Hausa (Nigeria)", native_name: "\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)", rtl: false });
({ id: e$2.Hebrew, language: { code: t$1.Hebrew, name: "Hebrew", native: "\u05E2\u05D1\u05E8\u05D9\u05EA" }, name: "Hebrew", native_name: "\u05E2\u05D1\u05E8\u05D9\u05EA", rtl: true });
({ country: { code: r$4.Israel, name: "Hebrew", native: "" }, id: e$2.HebrewIsrael, language: { code: t$1.Hebrew, name: "Hebrew", native: "" }, name: "Hebrew (Israel)", native_name: "", rtl: true });
({ id: e$2.Hindi, language: { code: t$1.Hindi, name: "Hindi", native: "\u0939\u093F\u0928\u094D\u0926\u0940" }, name: "Hindi", native_name: "\u0939\u093F\u0928\u094D\u0926\u0940", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$2.HindiIndia, language: { code: t$1.Hindi, name: "Hindi", native: "\u092D\u093E\u0930\u0924\u0940\u092F" }, name: "Hindi (India)", native_name: "\u092D\u093E\u0930\u0924\u0940\u092F", rtl: false });
({ id: e$2.Hungarian, language: { code: t$1.Hungarian, name: "Hungarian", native: "Magyar" }, name: "Hungarian", native_name: "Magyar", rtl: false });
({ country: { code: r$4.Hungary, name: "Hungary", native: "Magyarorsz\xE1g" }, id: e$2.HungarianHungary, language: { code: t$1.Hungarian, name: "Hungarian", native: "Magyar" }, name: "Hungarian (Hungary)", native_name: "Magyar (Magyarorsz\xE1g)", rtl: false });
({ id: e$2.Icelandic, language: { code: t$1.Icelandic, name: "Icelandic", native: "\xCDslenska" }, name: "Icelandic", native_name: "\xCDslenska", rtl: false });
({ country: { code: r$4.Iceland, name: "Iceland", native: "\xCDsland" }, id: e$2.IcelandicIceland, language: { code: t$1.Icelandic, name: "Icelandic", native: "\xCDslenska" }, name: "Icelandic (Iceland)", native_name: "\xCDslenska (\xCDsland)", rtl: false });
({ id: e$2.Igbo, language: { code: t$1.Igbo, name: "Igbo", native: "Igbo" }, name: "Igbo", native_name: "Igbo", rtl: false });
({ id: e$2.Indonesian, language: { code: t$1.Indonesian, name: "Indonesian", native: "Bahasa Indonesia" }, name: "Indonesian", native_name: "Bahasa Indonesia", rtl: false });
({ country: { code: r$4.Indonesia, name: "Indonesia", native: "Indonesia" }, id: e$2.IndonesianIndonesia, language: { code: t$1.Indonesian, name: "Indonesian", native: "Bahasa Indonesia" }, name: "Indonesian (Indonesia)", native_name: "Bahasa Indonesia (Indonesia)", rtl: false });
({ id: e$2.Irish, language: { code: t$1.Irish, name: "Irish", native: "Gaeilge" }, name: "Irish", native_name: "Gaeilge", rtl: false });
({ country: { code: r$4.Ireland, name: "Ireland", native: "\xC9ire" }, id: e$2.IrishIreland, language: { code: t$1.Irish, name: "Irish", native: "Gaeilge" }, name: "Irish (Ireland)", native_name: "Gaeilge (\xC9ire)", rtl: false });
({ id: e$2.Italian, language: { code: t$1.Italian, name: "Italian", native: "Italiano" }, name: "Italian", native_name: "Italiano", rtl: false });
({ country: { code: r$4.Italy, name: "Italy", native: "Italia" }, id: e$2.ItalianItaly, language: { code: t$1.Italian, name: "Italian", native: "Italiano" }, name: "Italian (Italy)", native_name: "Italiano (Italia)", rtl: false });
({ country: { code: r$4.Switzerland, name: "Switzerland", native: "Schweiz" }, id: e$2.ItalianSwitzerland, language: { code: t$1.Italian, name: "Italian", native: "Italiano" }, name: "Italian (Switzerland)", native_name: "Italiano (Svizzera)", rtl: false });
({ id: e$2.Japanese, language: { code: t$1.Japanese, name: "Japanese", native: "\u65E5\u672C\u8A9E" }, name: "Japanese", native_name: "\u65E5\u672C\u8A9E", rtl: false });
({ country: { code: r$4.Japan, name: "Japan", native: "\u65E5\u672C" }, id: e$2.JapaneseJapan, language: { code: t$1.Japanese, name: "Japanese", native: "\u65E5\u672C\u8A9E" }, name: "Japanese (Japan)", native_name: "\u65E5\u672C\u8A9E (\u65E5\u672C)", rtl: false });
({ id: e$2.Kannada, language: { code: t$1.Kannada, name: "Kannada", native: "\u0C95\u0CA8\u0CCD\u0CA8\u0CA1" }, name: "Kannada", native_name: "\u0C95\u0CA8\u0CCD\u0CA8\u0CA1", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u0CAD\u0CBE\u0CB0\u0CA4" }, id: e$2.KannadaIndia, language: { code: t$1.Kannada, name: "Kannada", native: "\u0C95\u0CA8\u0CCD\u0CA8\u0CA1" }, name: "Kannada (India)", native_name: "\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)", rtl: false });
({ id: e$2.Kazakh, language: { code: t$1.Kazakh, name: "Kazakh", native: "\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456" }, name: "Kazakh", native_name: "\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456", rtl: false });
({ country: { code: r$4.Kazakhstan, name: "Kazakhstan", native: "\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D" }, id: e$2.KazakhKazakhstan, language: { code: t$1.Kazakh, name: "Kazakh", native: "\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456" }, name: "Kazakh (Kazakhstan)", native_name: "\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)", rtl: false });
({ id: e$2.Khmer, language: { code: t$1.Khmer, name: "Khmer", native: "\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A" }, name: "Khmer", native_name: "\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A", rtl: false });
({ country: { code: r$4.Cambodia, name: "Cambodia", native: "\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6" }, id: e$2.KhmerCambodia, language: { code: t$1.Khmer, name: "Khmer", native: "\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A" }, name: "Khmer (Cambodia)", native_name: "\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)", rtl: false });
({ id: e$2.Konkani, language: { code: t$1.Konkani, name: "Konkani", native: "\u0915\u094B\u0902\u0915\u0923\u0940" }, name: "Konkani", native_name: "\u0915\u094B\u0902\u0915\u0923\u0940", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$2.KonkaniIndia, language: { code: t$1.Konkani, name: "Konkani", native: "\u0915\u094B\u0902\u0915\u0923\u0940" }, name: "Konkani (India)", native_name: "\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$2.Korean, language: { code: t$1.Korean, name: "Korean", native: "\uD55C\uAD6D\uC5B4" }, name: "Korean", native_name: "\uD55C\uAD6D\uC5B4", rtl: false });
({ country: { code: r$4.SouthKorea, name: "South Korea", native: "\uB300\uD55C\uBBFC\uAD6D" }, id: e$2.KoreanSouthKorea, language: { code: t$1.Korean, name: "Korean", native: "\uD55C\uAD6D\uC5B4" }, name: "Korean (South Korea)", native_name: "\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)", rtl: false });
({ id: e$2.Kurdish, language: { code: t$1.Kurdish, name: "Kurdish", native: "Kurd\xEE" }, name: "Kurdish", native_name: "Kurd\xEE", rtl: false });
({ country: { code: r$4.Iraq, name: "Iraq", native: "\u0627\u0644\u0639\u0631\u0627\u0642" }, id: e$2.KurdishIraq, language: { code: t$1.Kurdish, name: "Kurdish", native: "Kurd\xEE" }, name: "Kurdish (Iraq)", native_name: "Kurd\xEE (\u0627\u0644\u0639\u0631\u0627\u0642)", rtl: false });
({ country: { code: r$4.Turkey, name: "Turkey", native: "T\xFCrkiye" }, id: e$2.KurdishTurkey, language: { code: t$1.Kurdish, name: "Kurdish", native: "Kurd\xEE" }, name: "Kurdish (Turkey)", native_name: "Kurd\xEE (T\xFCrkiye)", rtl: false });
({ id: e$2.Kyrgyz, language: { code: t$1.Kyrgyz, name: "Kyrgyz", native: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430" }, name: "Kyrgyz", native_name: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430", rtl: false });
({ country: { code: r$4.Kyrgyzstan, name: "Kyrgyzstan", native: "\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D" }, id: e$2.KyrgyzKyrgyzstan, language: { code: t$1.Kyrgyz, name: "Kyrgyz", native: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430" }, name: "Kyrgyz (Kyrgyzstan)", native_name: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)", rtl: false });
({ id: e$2.Lao, language: { code: t$1.Lao, name: "Lao", native: "\u0EA5\u0EB2\u0EA7" }, name: "Lao", native_name: "\u0EA5\u0EB2\u0EA7", rtl: false });
({ country: { code: r$4.Laos, name: "Laos", native: "\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95" }, id: e$2.LaoLaos, language: { code: t$1.Lao, name: "Lao", native: "\u0EA5\u0EB2\u0EA7" }, name: "Lao (Laos)", native_name: "\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)", rtl: false });
({ id: e$2.Latvian, language: { code: t$1.Latvian, name: "Latvian", native: "Latvie\u0161u" }, name: "Latvian", native_name: "Latvie\u0161u", rtl: false });
({ country: { code: r$4.Latvia, name: "Latvia", native: "Latvija" }, id: e$2.LatvianLatvia, language: { code: t$1.Latvian, name: "Latvian", native: "Latvie\u0161u" }, name: "Latvian (Latvia)", native_name: "Latvie\u0161u (Latvija)", rtl: false });
({ id: e$2.Lithuanian, language: { code: t$1.Lithuanian, name: "Lithuanian", native: "Lietuvi\u0173" }, name: "Lithuanian", native_name: "Lietuvi\u0173", rtl: false });
({ country: { code: r$4.Lithuania, name: "Lithuania", native: "Lietuva" }, id: e$2.LithuanianLithuania, language: { code: t$1.Lithuanian, name: "Lithuanian", native: "Lietuvi\u0173" }, name: "Lithuanian (Lithuania)", native_name: "Lietuvi\u0173 (Lietuva)", rtl: false });
({ id: e$2.Luxembourgish, language: { code: t$1.Luxembourgish, name: "Luxembourgish", native: "L\xEBtzebuergesch" }, name: "Luxembourgish", native_name: "L\xEBtzebuergesch", rtl: false });
({ country: { code: r$4.Belgium, name: "Belgium", native: "Belgi\xEB" }, id: e$2.LuxembourgishBelgium, language: { code: t$1.Luxembourgish, name: "Luxembourgish", native: "L\xEBtzebuergesch" }, name: "Luxembourgish (Belgium)", native_name: "L\xEBtzebuergesch (Belgi\xEB)", rtl: false });
({ country: { code: r$4.Luxembourg, name: "Luxembourg", native: "Luxembourg" }, id: e$2.LuxembourgishLuxembourg, language: { code: t$1.Luxembourgish, name: "Luxembourgish", native: "L\xEBtzebuergesch" }, name: "Luxembourgish (Luxembourg)", native_name: "L\xEBtzebuergesch (Luxembourg)", rtl: false });
({ id: e$2.Macedonian, language: { code: t$1.Macedonian, name: "Macedonian", native: "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438" }, name: "Macedonian", native_name: "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438", rtl: false });
({ country: { code: r$4.NorthMacedonia, name: "Macedonia", native: "\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430" }, id: e$2.MacedonianNorthMacedonia, language: { code: t$1.Macedonian, name: "Macedonian", native: "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438" }, name: "Macedonian (North Macedonia)", native_name: "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)", rtl: false });
({ id: e$2.Malay, language: { code: t$1.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay", native_name: "Bahasa Melayu", rtl: false });
({ country: { code: r$4.Brunei, name: "Brunei", native: "Negara Brunei Darussalam" }, id: e$2.MalayBrunei, language: { code: t$1.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay (Brunei)", native_name: "Bahasa Melayu (Negara Brunei Darussalam)", rtl: false });
({ country: { code: r$4.Malaysia, name: "Malaysia", native: "Malaysia" }, id: e$2.MalayMalaysia, language: { code: t$1.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay (Malaysia)", native_name: "Bahasa Melayu (Malaysia)", rtl: false });
({ country: { code: r$4.Singapore, name: "Singapore", native: "Singapore" }, id: e$2.MalaySingapore, language: { code: t$1.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay (Singapore)", native_name: "Bahasa Melayu (Singapore)", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$2.MalayIndia, language: { code: t$1.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay (India)", native_name: "Bahasa Melayu (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$2.Maltese, language: { code: t$1.Maltese, name: "Maltese", native: "Malti" }, name: "Maltese", native_name: "Malti", rtl: false });
({ country: { code: r$4.Malta, name: "Malta", native: "Malta" }, id: e$2.MalteseMalta, language: { code: t$1.Maltese, name: "Maltese", native: "Malti" }, name: "Maltese (Malta)", native_name: "Malti (Malta)", rtl: false });
({ id: e$2.Maori, language: { code: t$1.Maori, name: "Maori", native: "M\u0101ori" }, name: "Maori", native_name: "M\u0101ori", rtl: false });
({ country: { code: r$4.NewZealand, name: "New Zealand", native: "New Zealand" }, id: e$2.MaoriNewZealand, language: { code: t$1.Maori, name: "Maori", native: "M\u0101ori" }, name: "Maori (New Zealand)", native_name: "M\u0101ori (New Zealand)", rtl: false });
({ id: e$2.Marathi, language: { code: t$1.Marathi, name: "Marathi", native: "\u092E\u0930\u093E\u0920\u0940" }, name: "Marathi", native_name: "\u092E\u0930\u093E\u0920\u0940", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$2.MarathiIndia, language: { code: t$1.Marathi, name: "Marathi", native: "\u092E\u0930\u093E\u0920\u0940" }, name: "Marathi (India)", native_name: "\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$2.Mongolian, language: { code: t$1.Mongolian, name: "Mongolian", native: "\u041C\u043E\u043D\u0433\u043E\u043B" }, name: "Mongolian", native_name: "\u041C\u043E\u043D\u0433\u043E\u043B", rtl: false });
({ country: { code: r$4.Mongolia, name: "Mongolia", native: "\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441" }, id: e$2.MongolianMongolia, language: { code: t$1.Mongolian, name: "Mongolian", native: "\u041C\u043E\u043D\u0433\u043E\u043B" }, name: "Mongolian (Mongolia)", native_name: "\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)", rtl: false });
({ id: e$2.Montenegrin, language: { code: t$1.Montenegrin, name: "Montenegrin", native: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A" }, name: "Montenegrin", native_name: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A", rtl: false });
({ country: { code: r$4.Montenegro, name: "Montenegro", native: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A" }, id: e$2.MontenegrinMontenegro, language: { code: t$1.Montenegrin, name: "Montenegrin", native: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A" }, name: "Montenegrin (Montenegro)", native_name: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)", rtl: false });
({ id: e$2.Nepali, language: { code: t$1.Nepali, name: "Nepali", native: "\u0928\u0947\u092A\u093E\u0932\u0940" }, name: "Nepali", native_name: "\u0928\u0947\u092A\u093E\u0932\u0940", rtl: false });
({ country: { code: r$4.Nepal, name: "Nepal", native: "\u0928\u0947\u092A\u093E\u0932" }, id: e$2.NepaliNepal, language: { code: t$1.Nepali, name: "Nepali", native: "\u0928\u0947\u092A\u093E\u0932\u0940" }, name: "Nepali (Nepal)", native_name: "\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)", rtl: false });
({ id: e$2.NorthernSotho, language: { code: t$1.NorthernSotho, name: "Northern Sotho", native: "Sesotho sa Leboa" }, name: "Northern Sotho", native_name: "Sesotho sa Leboa", rtl: false });
({ country: { code: r$4.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$2.NorthernSothoSouthAfrica, language: { code: t$1.NorthernSotho, name: "Northern Sotho", native: "Sesotho sa Leboa" }, name: "Northern Sotho (South Africa)", native_name: "Sesotho sa Leboa (South Africa)", rtl: false });
({ id: e$2.Norwegian, language: { code: t$1.Norwegian, name: "Norwegian", native: "Norsk" }, name: "Norwegian", native_name: "Norsk", rtl: false });
({ country: { code: r$4.Norway, name: "Norway", native: "Norge" }, id: e$2.NorwegianBokmalNorway, language: { code: t$1.NorwegianBokmal, name: "Norwegian", native: "Norsk" }, name: "Norwegian (Bokmal)", native_name: "Norsk (Bokm\xE5l)", rtl: false });
({ country: { code: r$4.Norway, name: "Norway", native: "Norge" }, id: e$2.NorwegianNynorskNorway, language: { code: t$1.NorwegianNynorsk, name: "Norwegian", native: "Norsk" }, name: "Norwegian (Nynorsk)", native_name: "Norsk (Nynorsk)", rtl: false });
({ id: e$2.Oriya, language: { code: t$1.Oriya, name: "Oriya", native: "\u0B13\u0B21\u0B3C\u0B3F\u0B06" }, name: "Oriya", native_name: "\u0B13\u0B21\u0B3C\u0B3F\u0B06", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE" }, id: e$2.OriyaIndia, language: { code: t$1.Oriya, name: "Oriya", native: "\u0B13\u0B21\u0B3C\u0B3F\u0B06" }, name: "Oriya (India)", native_name: "\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)", rtl: false });
({ id: e$2.Pashto, language: { code: t$1.Pashto, name: "Pashto", native: "\u067E\u069A\u062A\u0648" }, name: "Pashto", native_name: "\u067E\u069A\u062A\u0648", rtl: true });
({ country: { code: r$4.Afghanistan, name: "Afghanistan", native: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646" }, id: e$2.PashtoAfghanistan, language: { code: t$1.Pashto, name: "Pashto", native: "\u067E\u069A\u062A\u0648" }, name: "Pashto (Afghanistan)", native_name: "\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)", rtl: true });
({ id: e$2.Persian, language: { code: t$1.Persian, name: "Persian", native: "\u0641\u0627\u0631\u0633\u06CC" }, name: "Persian", native_name: "\u0641\u0627\u0631\u0633\u06CC", rtl: true });
({ country: { code: r$4.Iran, name: "Iran", native: "\u0627\u06CC\u0631\u0627\u0646" }, id: e$2.PersianIran, language: { code: t$1.Persian, name: "Persian", native: "\u0641\u0627\u0631\u0633\u06CC" }, name: "Persian (Iran)", native_name: "\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)", rtl: true });
({ id: e$2.Polish, language: { code: t$1.Polish, name: "Polish", native: "Polski" }, name: "Polish", native_name: "Polski", rtl: false });
({ country: { code: r$4.Poland, name: "Poland", native: "Polska" }, id: e$2.PolishPoland, language: { code: t$1.Polish, name: "Polish", native: "Polski" }, name: "Polish (Poland)", native_name: "Polski (Polska)", rtl: false });
({ id: e$2.Portuguese, language: { code: t$1.Portuguese, name: "Portuguese", native: "Portugu\xEAs" }, name: "Portuguese", native_name: "Portugu\xEAs", rtl: false });
({ country: { code: r$4.Brazil, name: "Brazil", native: "Brasil" }, id: e$2.PortugueseBrazil, language: { code: t$1.Portuguese, name: "Portuguese", native: "Portugu\xEAs" }, name: "Portuguese (Brazil)", native_name: "Portugu\xEAs (Brasil)", rtl: false });
({ country: { code: r$4.Portugal, name: "Portugal", native: "Portugal" }, id: e$2.PortuguesePortugal, language: { code: t$1.Portuguese, name: "Portuguese", native: "Portugu\xEAs" }, name: "Portuguese (Portugal)", native_name: "Portugu\xEAs (Portugal)", rtl: false });
({ id: e$2.Punjabi, language: { code: t$1.Punjabi, name: "Punjabi", native: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40" }, name: "Punjabi", native_name: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40", rtl: true });
({ country: { code: r$4.Pakistan, name: "Pakistan", native: "\u067E\u0627\u06A9\u0633\u062A\u0627\u0646" }, id: e$2.PunjabiPakistan, language: { code: t$1.Punjabi, name: "Punjabi", native: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40" }, name: "Punjabi (Pakistan)", native_name: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)", rtl: true });
({ country: { code: r$4.India, name: "India", native: "\u0A2D\u0A3E\u0A30\u0A24" }, id: e$2.PunjabiIndia, language: { code: t$1.Punjabi, name: "Punjabi", native: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40" }, name: "Punjabi (India)", native_name: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)", rtl: true });
({ id: e$2.Quechua, language: { code: t$1.Quechua, name: "Quechua", native: "Runa Simi" }, name: "Quechua", native_name: "Runa Simi", rtl: false });
({ country: { code: r$4.Bolivia, name: "Bolivia", native: "Bolivia" }, id: e$2.QuechuaBolivia, language: { code: t$1.Quechua, name: "Quechua", native: "Runa Simi" }, name: "Quechua (Bolivia)", native_name: "Runa Simi (Bolivia)", rtl: false });
({ country: { code: r$4.Ecuador, name: "Ecuador", native: "Ecuador" }, id: e$2.QuechuaEcuador, language: { code: t$1.Quechua, name: "Quechua", native: "Runa Simi" }, name: "Quechua (Ecuador)", native_name: "Runa Simi (Ecuador)", rtl: false });
({ country: { code: r$4.Peru, name: "Peru", native: "Per\xFA" }, id: e$2.QuechuaPeru, language: { code: t$1.Quechua, name: "Quechua", native: "Runa Simi" }, name: "Quechua (Peru)", native_name: "Runa Simi (Per\xFA)", rtl: false });
({ id: e$2.Romanian, language: { code: t$1.Romanian, name: "Romanian", native: "Rom\xE2n\u0103" }, name: "Romanian", native_name: "Rom\xE2n\u0103", rtl: false });
({ country: { code: r$4.Romania, name: "Romania", native: "Rom\xE2nia" }, id: e$2.RomanianRomania, language: { code: t$1.Romanian, name: "Romanian", native: "Rom\xE2n\u0103" }, name: "Romanian (Romania)", native_name: "Rom\xE2n\u0103 (Rom\xE2nia)", rtl: false });
({ id: e$2.Russian, language: { code: t$1.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439", rtl: false });
({ country: { code: r$4.RussianFederation, name: "Russian Federation", native: "\u0420\u043E\u0441\u0441\u0438\u044F" }, id: e$2.RussianRussia, language: { code: t$1.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian (Russia)", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)", rtl: false });
({ country: { code: r$4.Ukraine, name: "Ukraine", native: "\u0423\u043A\u0440\u0430\u0457\u043D\u0430" }, id: e$2.RussianUkraine, language: { code: t$1.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian (Ukraine)", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)", rtl: false });
({ country: { code: r$4.Kazakhstan, name: "Kazakhstan", native: "\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D" }, id: e$2.RussianKazakhstan, language: { code: t$1.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian (Kazakhstan)", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)", rtl: false });
({ country: { code: r$4.Kyrgyzstan, name: "Kyrgyzstan", native: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430" }, id: e$2.RussianKyrgyzstan, language: { code: t$1.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian (Kyrgyzstan)", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)", rtl: false });
({ id: e$2.Sanskrit, language: { code: t$1.Sanskrit, name: "Sanskrit", native: "\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D" }, name: "Sanskrit", native_name: "\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$2.SanskritIndia, language: { code: t$1.Sanskrit, name: "Sanskrit", native: "\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D" }, name: "Sanskrit (India)", native_name: "\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$2.Sami, language: { code: t$1.Sami, name: "Sami", native: "S\xE1megiella" }, name: "Sami", native_name: "S\xE1megiella", rtl: false });
({ country: { code: r$4.Finland, name: "Finland", native: "Suomi" }, id: e$2.SamiFinland, language: { code: t$1.Sami, name: "Sami", native: "S\xE1megiella" }, name: "Sami (Finland)", native_name: "S\xE1megiella (Suomi)", rtl: false });
({ country: { code: r$4.Norway, name: "Norway", native: "Norge" }, id: e$2.SamiNorway, language: { code: t$1.Sami, name: "Sami", native: "S\xE1megiella" }, name: "Sami (Norway)", native_name: "S\xE1megiella (Norge)", rtl: false });
({ country: { code: r$4.Sweden, name: "Sweden", native: "Sverige" }, id: e$2.SamiSweden, language: { code: t$1.Sami, name: "Sami", native: "S\xE1megiella" }, name: "Sami (Sweden)", native_name: "S\xE1megiella (Sverige)", rtl: false });
({ id: e$2.Samoan, language: { code: t$1.Samoan, name: "Samoan", native: "Gagana fa\u2019a S\u0101moa" }, name: "Samoan", native_name: "Gagana fa\u2019a S\u0101moa", rtl: false });
({ country: { code: r$4.Samoa, name: "Samoa", native: "Samoa" }, id: e$2.SamoanSamoa, language: { code: t$1.Samoan, name: "Samoan", native: "Gagana fa\u2019a S\u0101moa" }, name: "Samoan (Samoa)", native_name: "Gagana fa\u2019a S\u0101moa (Samoa)", rtl: false });
({ id: e$2.Serbian, language: { code: t$1.Serbian, name: "Serbian (Latin)", native: "Srpski (Latinica)" }, name: "Serbian (Latin)", native_name: "Srpski (Latinica)", rtl: false });
({ country: { code: r$4.BosniaAndHerzegovina, name: "Bosnia and Herzegovina", native: "Bosna i Hercegovina" }, id: e$2.SerbianBosniaAndHerzegovina, language: { code: t$1.Serbian, name: "Serbian (Latin)", native: "Srpski (Latinica)" }, name: "Serbian (Latin) (Bosnia and Herzegovina)", native_name: "Srpski (Latinica) (Bosna i Hercegovina)", rtl: false });
({ country: { code: r$4.SerbiaAndMontenegro, name: "Serbia and Montenegro", native: "Srbija i Crna Gora" }, id: e$2.SerbianSerbiaAndMontenegro, language: { code: t$1.Serbian, name: "Serbian (Latin)", native: "Srpski (Latinica)" }, name: "Serbian (Latin) (Serbia and Montenegro)", native_name: "Srpski (Latinica) (Srbija i Crna Gora)", rtl: false });
({ id: e$2.SerbianCyrillic, language: { code: t$1.SerbianCyrillic, name: "Serbian", native: "\u0421\u0440\u043F\u0441\u043A\u0438" }, name: "Serbian (Cyrillic)", native_name: "\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)", rtl: false });
({ country: { code: r$4.BosniaAndHerzegovina, name: "Bosnia and Herzegovina", native: "\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430" }, id: e$2.SerbianCyrillicBosniaAndHerzegovina, language: { code: t$1.SerbianCyrillic, name: "Serbian", native: "\u0421\u0440\u043F\u0441\u043A\u0438" }, name: "Serbian (Cyrillic, Bosnia and Herzegovina)", native_name: "\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)", rtl: false });
({ country: { code: r$4.SerbiaAndMontenegro, name: "Serbia and Montenegro", native: "\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430" }, id: e$2.SerbianCyrillicSerbiaAndMontenegro, language: { code: t$1.SerbianCyrillic, name: "Serbian", native: "\u0421\u0440\u043F\u0441\u043A\u0438" }, name: "Serbian (Cyrillic, Serbia and Montenegro)", native_name: "\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)", rtl: false });
({ id: e$2.Slovak, language: { code: t$1.Slovak, name: "Slovak", native: "Sloven\u010Dina" }, name: "Slovak", native_name: "Sloven\u010Dina", rtl: false });
({ country: { code: r$4.Slovakia, name: "Slovakia", native: "Slovensko" }, id: e$2.SlovakSlovakia, language: { code: t$1.Slovak, name: "Slovak", native: "Sloven\u010Dina" }, name: "Slovak (Slovakia)", native_name: "Sloven\u010Dina (Slovensko)", rtl: false });
({ id: e$2.Slovenian, language: { code: t$1.Slovenian, name: "Slovenian", native: "Sloven\u0161\u010Dina" }, name: "Slovenian", native_name: "Sloven\u0161\u010Dina", rtl: false });
({ country: { code: r$4.Slovenia, name: "Slovenia", native: "Slovenija" }, id: e$2.SlovenianSlovenia, language: { code: t$1.Slovenian, name: "Slovenian", native: "Sloven\u0161\u010Dina" }, name: "Slovenian (Slovenia)", native_name: "Sloven\u0161\u010Dina (Slovenija)", rtl: false });
({ id: e$2.Somali, language: { code: t$1.Somali, name: "Somali", native: "Soomaaliga" }, name: "Somali", native_name: "Soomaaliga", rtl: true });
({ country: { code: r$4.Somalia, name: "Somalia", native: "Soomaaliya" }, id: e$2.SomaliSomalia, language: { code: t$1.Somali, name: "Somali", native: "Soomaaliga" }, name: "Somali (Somalia)", native_name: "Soomaaliga (Soomaaliya)", rtl: true });
({ id: e$2.Spanish, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish", native_name: "Espa\xF1ol", rtl: false });
({ country: { code: r$4.Argentina, name: "Argentina", native: "Argentina" }, id: e$2.SpanishArgentina, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Argentina)", native_name: "Espa\xF1ol (Argentina)", rtl: false });
({ country: { code: r$4.Bolivia, name: "Bolivia", native: "Bolivia" }, id: e$2.SpanishBolivia, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Bolivia)", native_name: "Espa\xF1ol (Bolivia)", rtl: false });
({ country: { code: r$4.Chile, name: "Chile", native: "Chile" }, id: e$2.SpanishChile, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Chile)", native_name: "Espa\xF1ol (Chile)", rtl: false });
({ country: { code: r$4.Colombia, name: "Colombia", native: "Colombia" }, id: e$2.SpanishColombia, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Colombia)", native_name: "Espa\xF1ol (Colombia)", rtl: false });
({ country: { code: r$4.CostaRica, name: "Costa Rica", native: "Costa Rica" }, id: e$2.SpanishCostaRica, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Costa Rica)", native_name: "Espa\xF1ol (Costa Rica)", rtl: false });
({ country: { code: r$4.Cuba, name: "Cuba", native: "Cuba" }, id: e$2.SpanishCuba, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Cuba)", native_name: "Espa\xF1ol (Cuba)", rtl: false });
({ country: { code: r$4.DominicanRepublic, name: "Dominican Republic", native: "Rep\xFAblica Dominicana" }, id: e$2.SpanishDominicanRepublic, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Dominican Republic)", native_name: "Espa\xF1ol (Rep\xFAblica Dominicana)", rtl: false });
({ country: { code: r$4.Ecuador, name: "Ecuador", native: "Ecuador" }, id: e$2.SpanishEcuador, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Ecuador)", native_name: "Espa\xF1ol (Ecuador)", rtl: false });
({ country: { code: r$4.ElSalvador, name: "El Salvador", native: "El Salvador" }, id: e$2.SpanishElSalvador, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (El Salvador)", native_name: "Espa\xF1ol (El Salvador)", rtl: false });
({ country: { code: r$4.EquatorialGuinea, name: "Equatorial Guinea", native: "Guinea Ecuatorial" }, id: e$2.SpanishEquatorialGuinea, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Equatorial Guinea)", native_name: "Espa\xF1ol (Guinea Ecuatorial)", rtl: false });
({ country: { code: r$4.Guatemala, name: "Guatemala", native: "Guatemala" }, id: e$2.SpanishGuatemala, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Guatemala)", native_name: "Espa\xF1ol (Guatemala)", rtl: false });
({ country: { code: r$4.Honduras, name: "Honduras", native: "Honduras" }, id: e$2.SpanishHonduras, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Honduras)", native_name: "Espa\xF1ol (Honduras)", rtl: false });
({ country: { code: r$4.Mexico, name: "Mexico", native: "M\xE9xico" }, id: e$2.SpanishMexico, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Mexico)", native_name: "Espa\xF1ol (M\xE9xico)", rtl: false });
({ country: { code: r$4.Nicaragua, name: "Nicaragua", native: "Nicaragua" }, id: e$2.SpanishNicaragua, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Nicaragua)", native_name: "Espa\xF1ol (Nicaragua)", rtl: false });
({ country: { code: r$4.Panama, name: "Panama", native: "Panam\xE1" }, id: e$2.SpanishPanama, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Panama)", native_name: "Espa\xF1ol (Panam\xE1)", rtl: false });
({ country: { code: r$4.Paraguay, name: "Paraguay", native: "Paraguay" }, id: e$2.SpanishParaguay, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Paraguay)", native_name: "Espa\xF1ol (Paraguay)", rtl: false });
({ country: { code: r$4.Peru, name: "Peru", native: "Per\xFA" }, id: e$2.SpanishPeru, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Peru)", native_name: "Espa\xF1ol (Per\xFA)", rtl: false });
({ country: { code: r$4.PuertoRico, name: "Puerto Rico", native: "Puerto Rico" }, id: e$2.SpanishPuertoRico, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Puerto Rico)", native_name: "Espa\xF1ol (Puerto Rico)", rtl: false });
({ country: { code: r$4.Uruguay, name: "Uruguay", native: "Uruguay" }, id: e$2.SpanishUruguay, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Uruguay)", native_name: "Espa\xF1ol (Uruguay)", rtl: false });
({ country: { code: r$4.Venezuela, name: "Venezuela", native: "Venezuela" }, id: e$2.SpanishVenezuela, language: { code: t$1.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Venezuela)", native_name: "Espa\xF1ol (Venezuela)", rtl: false });
({ country: { code: r$4.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$2.SutuSouthAfrica, language: { code: t$1.Sutu, name: "Sutu", native: "Sesotho" }, name: "Sutu (South Africa)", native_name: "Sesotho (Afrika Borwa)", rtl: false });
({ id: e$2.Swahili, language: { code: t$1.Swahili, name: "Swahili", native: "Kiswahili" }, name: "Swahili", native_name: "Kiswahili", rtl: false });
({ country: { code: r$4.Kenya, name: "Kenya", native: "Kenya" }, id: e$2.SwahiliKenya, language: { code: t$1.Swahili, name: "Swahili", native: "Kiswahili" }, name: "Swahili (Kenya)", native_name: "Kiswahili (Kenya)", rtl: false });
({ id: e$2.Swedish, language: { code: t$1.Swedish, name: "Swedish", native: "Svenska" }, name: "Swedish", native_name: "Svenska", rtl: false });
({ country: { code: r$4.Finland, name: "Finland", native: "Suomi" }, id: e$2.SwedishFinland, language: { code: t$1.Swedish, name: "Swedish", native: "Svenska" }, name: "Swedish (Finland)", native_name: "Svenska (Finland)", rtl: false });
({ country: { code: r$4.Sweden, name: "Sweden", native: "Sverige" }, id: e$2.SwedishSweden, language: { code: t$1.Swedish, name: "Swedish", native: "Svenska" }, name: "Swedish (Sweden)", native_name: "Svenska (Sverige)", rtl: false });
({ id: e$2.Syriac, language: { code: t$1.Syriac, name: "Syriac", native: "\u0723\u0718\u072A\u071D\u071D\u0710" }, name: "Syriac", native_name: "\u0723\u0718\u072A\u071D\u071D\u0710", rtl: true });
({ country: { code: r$4.Syria, name: "Syria", native: "\u0633\u0648\u0631\u064A\u0627" }, id: e$2.SyriacSyria, language: { code: t$1.Syriac, name: "Syriac", native: "\u0723\u0718\u072A\u071D\u071D\u0710" }, name: "Syriac (Syria)", native_name: "\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)", rtl: true });
({ id: e$2.Tajik, language: { code: t$1.Tajik, name: "Tajik", native: "\u0422\u043E\u04B7\u0438\u043A\u04E3" }, name: "Tajik", native_name: "\u0422\u043E\u04B7\u0438\u043A\u04E3", rtl: false });
({ country: { code: r$4.Tajikistan, name: "Tajikistan", native: "\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D" }, id: e$2.TajikTajikistan, language: { code: t$1.Tajik, name: "Tajik", native: "\u0422\u043E\u04B7\u0438\u043A\u04E3" }, name: "Tajik (Tajikistan)", native_name: "\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)", rtl: false });
({ id: e$2.Tagalog, language: { code: t$1.Tagalog, name: "Tagalog", native: "Tagalog" }, name: "Tagalog", native_name: "Tagalog", rtl: false });
({ country: { code: r$4.Philippines, name: "Philippines", native: "Pilipinas" }, id: e$2.TagalogPhilippines, language: { code: t$1.Tagalog, name: "Tagalog", native: "Tagalog" }, name: "Tagalog (Philippines)", native_name: "Tagalog (Pilipinas)", rtl: false });
({ id: e$2.Tamil, language: { code: t$1.Tamil, name: "Tamil", native: "\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD" }, name: "Tamil", native_name: "\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE" }, id: e$2.TamilIndia, language: { code: t$1.Tamil, name: "Tamil", native: "\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD" }, name: "Tamil (India)", native_name: "\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)", rtl: false });
({ id: e$2.Telugu, language: { code: t$1.Telugu, name: "Telugu", native: "\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41" }, name: "Telugu", native_name: "\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02" }, id: e$2.TeluguIndia, language: { code: t$1.Telugu, name: "Telugu", native: "\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41" }, name: "Telugu (India)", native_name: "\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)", rtl: false });
({ id: e$2.Thai, language: { code: t$1.Thai, name: "Thai", native: "\u0E44\u0E17\u0E22" }, name: "Thai", native_name: "\u0E44\u0E17\u0E22", rtl: false });
({ country: { code: r$4.Thailand, name: "Thailand", native: "\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22" }, id: e$2.ThaiThailand, language: { code: t$1.Thai, name: "Thai", native: "\u0E44\u0E17\u0E22" }, name: "Thai (Thailand)", native_name: "\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)", rtl: false });
({ id: e$2.Tibetan, language: { code: t$1.Tibetan, name: "Tibetan", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Tibetan", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42", rtl: false });
({ country: { code: r$4.China, name: "China", native: "\u4E2D\u56FD" }, id: e$2.TibetanChina, language: { code: t$1.Tibetan, name: "Tibetan", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Tibetan (China)", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)", rtl: false });
({ country: { code: r$4.Bhutan, name: "Bhutan", native: "\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D" }, id: e$2.TibetanBhutan, language: { code: t$1.Tibetan, name: "Tibetan", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Tibetan (Bhutan)", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)", rtl: false });
({ country: { code: r$4.India, name: "India", native: "\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE" }, id: e$2.TibetanIndia, language: { code: t$1.Tibetan, name: "Tibetan", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Tibetan (India)", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)", rtl: false });
({ id: e$2.Tsonga, language: { code: t$1.Tsonga, name: "Tsonga", native: "Xitsonga" }, name: "Tsonga", native_name: "Xitsonga", rtl: false });
({ id: e$2.Tswana, language: { code: t$1.Tswana, name: "Tswana", native: "Setswana" }, name: "Tswana", native_name: "Setswana", rtl: false });
({ country: { code: r$4.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$2.TswanaSouthAfrica, language: { code: t$1.Tswana, name: "Tswana", native: "Setswana" }, name: "Tswana (South Africa)", native_name: "Setswana (South Africa)", rtl: false });
({ id: e$2.Turkish, language: { code: t$1.Turkish, name: "Turkish", native: "T\xFCrk\xE7e" }, name: "Turkish", native_name: "T\xFCrk\xE7e", rtl: false });
({ country: { code: r$4.Turkey, name: "Turkey", native: "T\xFCrkiye" }, id: e$2.TurkishTurkey, language: { code: t$1.Turkish, name: "Turkish", native: "T\xFCrk\xE7e" }, name: "Turkish (Turkey)", native_name: "T\xFCrk\xE7e (T\xFCrkiye)", rtl: false });
({ id: e$2.Ukrainian, language: { code: t$1.Ukrainian, name: "Ukrainian", native: "\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430" }, name: "Ukrainian", native_name: "\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430", rtl: false });
({ country: { code: r$4.Ukraine, name: "Ukraine", native: "\u0423\u043A\u0440\u0430\u0457\u043D\u0430" }, id: e$2.UkrainianUkraine, language: { code: t$1.Ukrainian, name: "Ukrainian", native: "\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430" }, name: "Ukrainian (Ukraine)", native_name: "\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)", rtl: false });
({ id: e$2.Urdu, language: { code: t$1.Urdu, name: "Urdu", native: "\u0627\u0631\u062F\u0648" }, name: "Urdu", native_name: "\u0627\u0631\u062F\u0648", rtl: true });
({ country: { code: r$4.Afghanistan, name: "Afghanistan", native: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646" }, id: e$2.UrduAfghanistan, language: { code: t$1.Urdu, name: "Urdu", native: "\u0627\u0631\u062F\u0648" }, name: "Urdu (Afghanistan)", native_name: "\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)", rtl: true });
({ country: { code: r$4.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$2.UrduIndia, language: { code: t$1.Urdu, name: "Urdu", native: "\u0627\u0631\u062F\u0648" }, name: "Urdu (India)", native_name: "\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)", rtl: true });
({ country: { code: r$4.Pakistan, name: "Pakistan", native: "\u067E\u0627\u06A9\u0633\u062A\u0627\u0646" }, id: e$2.UrduPakistan, language: { code: t$1.Urdu, name: "Urdu", native: "\u0627\u0631\u062F\u0648" }, name: "Urdu (Pakistan)", native_name: "\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)", rtl: true });
({ id: e$2.Uzbek, language: { code: t$1.Uzbek, name: "Uzbek", native: "O\u02BBzbekcha" }, name: "Uzbek", native_name: "O\u02BBzbekcha", rtl: false });
({ country: { code: r$4.Uzbekistan, name: "Uzbekistan", native: "O\u02BBzbekiston" }, id: e$2.UzbekUzbekistan, language: { code: t$1.Uzbek, name: "Uzbek", native: "O\u02BBzbekcha" }, name: "Uzbek (Latin, Uzbekistan)", native_name: "O\u02BBzbekcha (O\u02BBzbekiston)", rtl: false });
({ country: { code: r$4.Uzbekistan, name: "Uzbekistan", native: "\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D" }, id: e$2.UzbekCyrillic, language: { code: t$1.Uzbek, name: "Uzbek", native: "\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D" }, name: "Uzbek (Cyrillic)", native_name: "\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)", rtl: false });
({ id: e$2.Vietnamese, language: { code: t$1.Vietnamese, name: "Vietnamese", native: "Ti\u1EBFng Vi\u1EC7t" }, name: "Vietnamese", native_name: "Ti\u1EBFng Vi\u1EC7t", rtl: false });
({ country: { code: r$4.Vietnam, name: "Vietnam", native: "Vi\u1EC7t Nam" }, id: e$2.VietnameseVietnam, language: { code: t$1.Vietnamese, name: "Vietnamese", native: "Ti\u1EBFng Vi\u1EC7t" }, name: "Vietnamese (Vietnam)", native_name: "Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)", rtl: false });
({ id: e$2.Welsh, language: { code: t$1.Welsh, name: "Welsh", native: "Cymraeg" }, name: "Welsh", native_name: "Cymraeg", rtl: false });
({ country: { code: r$4.UnitedKingdom, name: "United Kingdom", native: "United Kingdom" }, id: e$2.WelshUnitedKingdom, language: { code: t$1.Welsh, name: "Welsh", native: "Cymraeg" }, name: "Welsh (United Kingdom)", native_name: "Cymraeg (United Kingdom)", rtl: false });
({ id: e$2.Xhosa, language: { code: t$1.Xhosa, name: "Xhosa", native: "isiXhosa" }, name: "Xhosa", native_name: "isiXhosa", rtl: false });
({ country: { code: r$4.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$2.XhosaSouthAfrica, language: { code: t$1.Xhosa, name: "Xhosa", native: "isiXhosa" }, name: "Xhosa (South Africa)", native_name: "isiXhosa (South Africa)", rtl: false });
({ id: e$2.Yiddish, language: { code: t$1.Yiddish, name: "Yiddish", native: "\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9" }, name: "Yiddish", native_name: "\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9", rtl: false });
({ id: e$2.Yoruba, language: { code: t$1.Yoruba, name: "Yoruba", native: "Yor\xF9b\xE1" }, name: "Yoruba", native_name: "Yor\xF9b\xE1", rtl: false });
({ country: { code: r$4.Nigeria, name: "Nigeria", native: "Nigeria" }, id: e$2.YorubaNigeria, language: { code: t$1.Yoruba, name: "Yoruba", native: "Yor\xF9b\xE1" }, name: "Yoruba (Nigeria)", native_name: "Yor\xF9b\xE1 (Nigeria)", rtl: false });
({ id: e$2.Zulu, language: { code: t$1.Zulu, name: "Zulu", native: "isiZulu" }, name: "Zulu", native_name: "isiZulu", rtl: false });
({ country: { code: r$4.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$2.ZuluSouthAfrica, language: { code: t$1.Zulu, name: "Zulu", native: "isiZulu" }, name: "Zulu (South Africa)", native_name: "isiZulu (South Africa)", rtl: false });
({ id: u$2.AfricaAbidjan, name: "Africa/Abidjan", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaAccra, name: "Africa/Accra", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaAddisAbaba, name: "Africa/Addis_Ababa", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaAlgiers, name: "Africa/Algiers", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.AfricaAsmara, name: "Africa/Asmara", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaBamako, name: "Africa/Bamako", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaBangui, name: "Africa/Bangui", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaBanjul, name: "Africa/Banjul", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaBissau, name: "Africa/Bissau", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaBlantyre, name: "Africa/Blantyre", offset: n$4.UTC_PLUS_2, timezone: s$3.CentralAfricaTime });
({ id: u$2.AfricaBrazzaville, name: "Africa/Brazzaville", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaBujumbura, name: "Africa/Bujumbura", offset: n$4.UTC_PLUS_2, timezone: s$3.CentralAfricaTime });
({ id: u$2.AfricaCairo, name: "Africa/Cairo", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.AfricaCasablanca, name: "Africa/Casablanca", offset: n$4.UTC_PLUS_1, timezone: s$3.WesternEuropeanTime });
({ id: u$2.AfricaCeuta, name: "Africa/Ceuta", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.AfricaConakry, name: "Africa/Conakry", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaDakar, name: "Africa/Dakar", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaDarEsSalaam, name: "Africa/Dar_es_Salaam", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaDjibouti, name: "Africa/Djibouti", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaDouala, name: "Africa/Douala", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaElAaiun, name: "Africa/El_Aaiun", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaFreetown, name: "Africa/Freetown", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaGaborone, name: "Africa/Gaborone", offset: n$4.UTC_PLUS_2, timezone: s$3.CentralAfricaTime });
({ id: u$2.AfricaHarare, name: "Africa/Harare", offset: n$4.UTC_PLUS_2, timezone: s$3.CentralAfricaTime });
({ id: u$2.AfricaJohannesburg, name: "Africa/Johannesburg", offset: n$4.UTC_PLUS_2, timezone: s$3.SouthAfricanStandardTime });
({ id: u$2.AfricaJuba, name: "Africa/Juba", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaKampala, name: "Africa/Kampala", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaKhartoum, name: "Africa/Khartoum", offset: n$4.UTC_PLUS_2, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaKigali, name: "Africa/Kigali", offset: n$4.UTC_PLUS_2, timezone: s$3.CentralAfricaTime });
({ id: u$2.AfricaKinshasa, name: "Africa/Kinshasa", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaLagos, name: "Africa/Lagos", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaLibreville, name: "Africa/Libreville", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaLome, name: "Africa/Lome", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaLuanda, name: "Africa/Luanda", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaLubumbashi, name: "Africa/Lubumbashi", offset: n$4.UTC_PLUS_2, timezone: s$3.CentralAfricaTime });
({ id: u$2.AfricaLusaka, name: "Africa/Lusaka", offset: n$4.UTC_PLUS_2, timezone: s$3.CentralAfricaTime });
({ id: u$2.AfricaMalabo, name: "Africa/Malabo", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaMaputo, name: "Africa/Maputo", offset: n$4.UTC_PLUS_2, timezone: s$3.CentralAfricaTime });
({ id: u$2.AfricaMaseru, name: "Africa/Maseru", offset: n$4.UTC_PLUS_2, timezone: s$3.SouthAfricanStandardTime });
({ id: u$2.AfricaMbabane, name: "Africa/Mbabane", offset: n$4.UTC_PLUS_2, timezone: s$3.SouthAfricanStandardTime });
({ id: u$2.AfricaMogadishu, name: "Africa/Mogadishu", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaMonrovia, name: "Africa/Monrovia", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaNairobi, name: "Africa/Nairobi", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.AfricaNdjamena, name: "Africa/Ndjamena", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaNiamey, name: "Africa/Niamey", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaNouakchott, name: "Africa/Nouakchott", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.AfricaOuagadougou, name: "Africa/Ouagadougou", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaPortoNovo, name: "Africa/Porto-Novo", offset: n$4.UTC_PLUS_1, timezone: s$3.WestAfricaTime });
({ id: u$2.AfricaSaoTome, name: "Africa/SaoTome", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaTripoli, name: "Africa/Tripoli", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaTunis, name: "Africa/Tunis", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AfricaWindhoek, name: "Africa/Windhoek", offset: n$4.UTC_PLUS_2, timezone: s$3.WestAfricaTime });
({ id: u$2.AmericaAdak, name: "America/Adak", offset: n$4.UTC_PLUS_10, timezone: s$3.HawaiiAleutianStandardTime });
({ id: u$2.AmericaAnchorage, name: "America/Anchorage", offset: n$4.UTC_PLUS_9, timezone: s$3.AlaskaStandardTime });
({ id: u$2.AmericaAnguilla, name: "America/Anguilla", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaAntigua, name: "America/Antigua", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaAraguaina, name: "America/Araguaina", offset: n$4.UTC_MINUS_3, timezone: s$3.BrasiliaTime });
({ id: u$2.AmericaArgentinaBuenosAires, name: "America/Argentina/Buenos_Aires", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaCatamarca, name: "America/Argentina/Catamarca", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaCordoba, name: "America/Argentina/Cordoba", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaJujuy, name: "America/Argentina/Jujuy", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaLaRioja, name: "America/Argentina/La_Rioja", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaMendoza, name: "America/Argentina/Mendoza", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaRioGallegos, name: "America/Argentina/Rio_Gallegos", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaSalta, name: "America/Argentina/Salta", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaSanJuan, name: "America/Argentina/San_Juan", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaSanLuis, name: "America/Argentina/San_Luis", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaTucuman, name: "America/Argentina/Tucuman", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaArgentinaUshuaia, name: "America/Argentina/Ushuaia", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaAruba, name: "America/Aruba", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaAsuncion, name: "America/Asuncion", offset: n$4.UTC_MINUS_4, timezone: s$3.ParaguayTime });
({ id: u$2.AmericaAtikokan, name: "America/Atikokan", offset: n$4.UTC_0, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaAtka, name: "America/Atka", offset: n$4.UTC_MINUS_10, timezone: s$3.HawaiiAleutianStandardTime });
({ id: u$2.AmericaBahia, name: "America/Bahia", offset: n$4.UTC_MINUS_3, timezone: s$3.BrasiliaTime });
({ id: u$2.AmericaBahiaBanderas, name: "America/Bahia_Banderas", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaBarbados, name: "America/Barbados", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaBelem, name: "America/Belem", offset: n$4.UTC_MINUS_3, timezone: s$3.BrasiliaTime });
({ id: u$2.AmericaBelize, name: "America/Belize", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaBlancSablon, name: "America/Blanc-Sablon", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaBoaVista, name: "America/Boa_Vista", offset: n$4.UTC_MINUS_4, timezone: s$3.AmazonTime });
({ id: u$2.AmericaBogota, name: "America/Bogota", offset: n$4.UTC_MINUS_5, timezone: s$3.ColombiaTime });
({ id: u$2.AmericaBoise, name: "America/Boise", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaCambridgeBay, name: "America/Cambridge_Bay", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaCampoGrande, name: "America/Campo_Grande", offset: n$4.UTC_MINUS_4, timezone: s$3.AmazonTime });
({ id: u$2.AmericaCancun, name: "America/Cancun", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaCaracas, name: "America/Caracas", offset: n$4.UTC_MINUS_4, timezone: s$3.VenezuelaStandardTime });
({ id: u$2.AmericaCayenne, name: "America/Cayenne", offset: n$4.UTC_MINUS_3, timezone: s$3.FrenchGuianaTime });
({ id: u$2.AmericaCayman, name: "America/Cayman", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaChicago, name: "America/Chicago", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaChihuahua, name: "America/Chihuahua", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaCoralHarbour, name: "America/Coral_Harbour", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaCordoba, name: "America/Cordoba", offset: n$4.UTC_MINUS_3, timezone: s$3.ArgentinaTime });
({ id: u$2.AmericaCostaRica, name: "America/Costa_Rica", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaCreston, name: "America/Creston", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaCuiaba, name: "America/Cuiaba", offset: n$4.UTC_MINUS_4, timezone: s$3.AmazonTime });
({ id: u$2.AmericaCuracao, name: "America/Curacao", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaDanmarkshavn, name: "America/Danmarkshavn", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.AmericaDawson, name: "America/Dawson", offset: n$4.UTC_MINUS_8, timezone: s$3.PacificStandardTime });
({ id: u$2.AmericaDawsonCreek, name: "America/Dawson_Creek", offset: n$4.UTC_MINUS_8, timezone: s$3.PacificStandardTime });
({ id: u$2.AmericaDenver, name: "America/Denver", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaDetroit, name: "America/Detroit", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaDominica, name: "America/Dominica", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaEdmonton, name: "America/Edmonton", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaEirunepe, name: "America/Eirunepe", offset: n$4.UTC_MINUS_5, timezone: s$3.AcreTime });
({ id: u$2.AmericaElSalvador, name: "America/El_Salvador", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaFortaleza, name: "America/Fortaleza", offset: n$4.UTC_MINUS_3, timezone: s$3.BrasiliaTime });
({ id: u$2.AmericaGlaceBay, name: "America/Glace_Bay", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaGodthab, name: "America/Godthab", offset: n$4.UTC_MINUS_3, timezone: s$3.WestGreenlandTime });
({ id: u$2.AmericaGooseBay, name: "America/Goose_Bay", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaGrandTurk, name: "America/Grand_Turk", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaGrenada, name: "America/Grenada", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaGuadeloupe, name: "America/Guadeloupe", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaGuatemala, name: "America/Guatemala", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaGuayaquil, name: "America/Guayaquil", offset: n$4.UTC_MINUS_5, timezone: s$3.EcuadorTime });
({ id: u$2.AmericaGuyana, name: "America/Guyana", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaHalifax, name: "America/Halifax", offset: n$4.UTC_0, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaHavana, name: "America/Havana", offset: n$4.UTC_MINUS_5, timezone: s$3.CubaStandardTime });
({ id: u$2.AmericaHermosillo, name: "America/Hermosillo", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaIndianaIndianapolis, name: "America/Indiana/Indianapolis", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaIndianaKnox, name: "America/Indiana/Knox", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaIndianaMarengo, name: "America/Indiana/Marengo", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaIndianaPetersburg, name: "America/Indiana/Petersburg", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaIndianaTellCity, name: "America/Indiana/Tell_City", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaIndianaVevay, name: "America/Indiana/Vevay", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaIndianaVincennes, name: "America/Indiana/Vincennes", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaIndianaWinamac, name: "America/Indiana/Winamac", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaInuvik, name: "America/Inuvik", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaIqaluit, name: "America/Iqaluit", offset: n$4.UTC_0, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaJamaica, name: "America/Jamaica", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaJuneau, name: "America/Juneau", offset: n$4.UTC_MINUS_9, timezone: s$3.AlaskaStandardTime });
({ id: u$2.AmericaKentuckyLouisville, name: "America/Kentucky/Louisville", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaKentuckyMonticello, name: "America/Kentucky/Monticello", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaKralendijk, name: "America/Kralendijk", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaLaPaz, name: "America/La_Paz", offset: n$4.UTC_MINUS_4, timezone: s$3.BoliviaTime });
({ id: u$2.AmericaLima, name: "America/Lima", offset: n$4.UTC_MINUS_5, timezone: s$3.PeruTime });
({ id: u$2.AmericaLosAngeles, name: "America/Los_Angeles", offset: n$4.UTC_MINUS_8, timezone: s$3.PacificStandardTime });
({ id: u$2.AmericaLouisville, name: "America/Louisville", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaLowerPrinces, name: "America/Lower_Princes", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaMaceio, name: "America/Maceio", offset: n$4.UTC_MINUS_3, timezone: s$3.BrasiliaTime });
({ id: u$2.AmericaManagua, name: "America/Managua", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaManaus, name: "America/Manaus", offset: n$4.UTC_MINUS_4, timezone: s$3.AmazonTime });
({ id: u$2.AmericaMarigot, name: "America/Marigot", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaMartinique, name: "America/Martinique", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaMatamoros, name: "America/Matamoros", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaMazatlan, name: "America/Mazatlan", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaMenominee, name: "America/Menominee", offset: n$4.UTC_MINUS_5, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaMerida, name: "America/Merida", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaMetlakatla, name: "America/Metlakatla", offset: n$4.UTC_MINUS_9, timezone: s$3.AlaskaStandardTime });
({ id: u$2.AmericaMexicoCity, name: "America/Mexico_City", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaMiquelon, name: "America/Miquelon", offset: n$4.UTC_MINUS_3, timezone: s$3.SaintPierreAndMiquelonStandardTime });
({ id: u$2.AmericaMoncton, name: "America/Moncton", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaMonterrey, name: "America/Monterrey", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaMontevideo, name: "America/Montevideo", offset: n$4.UTC_MINUS_3, timezone: s$3.UruguayStandardTime });
({ id: u$2.AmericaMontreal, name: "America/Montreal", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaMontserrat, name: "America/Montserrat", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaNassau, name: "America/Nassau", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaNewYork, name: "America/New_York", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaNipigon, name: "America/Nipigon", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaNome, name: "America/Nome", offset: n$4.UTC_MINUS_9, timezone: s$3.AlaskaStandardTime });
({ id: u$2.AmericaNoronha, name: "America/Noronha", offset: n$4.UTC_MINUS_2, timezone: s$3.FernandoDeNoronhaTime });
({ id: u$2.AmericaNorthDakotaBeulah, name: "America/North_Dakota/Beulah", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaNorthDakotaCenter, name: "America/North_Dakota/Center", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaNorthDakotaNewSalem, name: "America/North_Dakota/New_Salem", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaOjinaga, name: "America/Ojinaga", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaPanama, name: "America/Panama", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaPangnirtung, name: "America/Pangnirtung", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaParamaribo, name: "America/Paramaribo", offset: n$4.UTC_MINUS_3, timezone: s$3.SurinameTime });
({ id: u$2.AmericaPhoenix, name: "America/Phoenix", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaPortAuPrince, name: "America/Port-au-Prince", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaPortOfSpain, name: "America/Port_of_Spain", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaPortoVelho, name: "America/Porto_Velho", offset: n$4.UTC_MINUS_4, timezone: s$3.AmazonTime });
({ id: u$2.AmericaPuertoRico, name: "America/Puerto_Rico", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaRainyRiver, name: "America/Rainy_River", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaRankinInlet, name: "America/Rankin_Inlet", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaRecife, name: "America/Recife", offset: n$4.UTC_MINUS_3, timezone: s$3.BrasiliaTime });
({ id: u$2.AmericaRegina, name: "America/Regina", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaResolute, name: "America/Resolute", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaRioBranco, name: "America/Rio_Branco", offset: n$4.UTC_MINUS_5, timezone: s$3.AcreTime });
({ id: u$2.AmericaSantaIsabel, name: "America/Santa_Isabel", offset: n$4.UTC_MINUS_8, timezone: s$3.PacificStandardTime });
({ id: u$2.AmericaSantarem, name: "America/Santarem", offset: n$4.UTC_MINUS_3, timezone: s$3.BrasiliaTime });
({ id: u$2.AmericaSantiago, name: "America/Santiago", offset: n$4.UTC_MINUS_4, timezone: s$3.ChileStandardTime });
({ id: u$2.AmericaSantoDomingo, name: "America/Santo_Domingo", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaSaoPaulo, name: "America/Sao_Paulo", offset: n$4.UTC_MINUS_3, timezone: s$3.BrasiliaTime });
({ id: u$2.AmericaScoresbysund, name: "America/Scoresbysund", offset: n$4.UTC_MINUS_1, timezone: s$3.EasternGreenlandTime });
({ id: u$2.AmericaShiprock, name: "America/Shiprock", offset: n$4.UTC_MINUS_7, timezone: s$3.MountainStandardTime });
({ id: u$2.AmericaSitka, name: "America/Sitka", offset: n$4.UTC_MINUS_9, timezone: s$3.AlaskaStandardTime });
({ id: u$2.AmericaStBarthelemy, name: "America/St_Barthelemy", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaStJohns, name: "America/St_Johns", offset: n$4.UTC_MINUS_3, timezone: s$3.NewfoundlandStandardTime });
({ id: u$2.AmericaStKitts, name: "America/St_Kitts", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaStLucia, name: "America/St_Lucia", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaStThomas, name: "America/St_Thomas", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaStVincent, name: "America/St_Vincent", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaSwiftCurrent, name: "America/Swift_Current", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaTegucigalpa, name: "America/Tegucigalpa", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaThule, name: "America/Thule", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaThunderBay, name: "America/Thunder_Bay", offset: n$4.UTC_MINUS_4, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaTijuana, name: "America/Tijuana", offset: n$4.UTC_MINUS_8, timezone: s$3.PacificStandardTime });
({ id: u$2.AmericaToronto, name: "America/Toronto", offset: n$4.UTC_MINUS_5, timezone: s$3.EasternStandardTime });
({ id: u$2.AmericaTortola, name: "America/Tortola", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AmericaVancouver, name: "America/Vancouver", offset: n$4.UTC_MINUS_8, timezone: s$3.PacificStandardTime });
({ id: u$2.AmericaWhitehorse, name: "America/Whitehorse", offset: n$4.UTC_MINUS_8, timezone: s$3.PacificStandardTime });
({ id: u$2.AmericaWinnipeg, name: "America/Winnipeg", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AmericaYakutat, name: "America/Yakutat", offset: n$4.UTC_MINUS_9, timezone: s$3.AlaskaStandardTime });
({ id: u$2.AmericaYellowknife, name: "America/Yellowknife", offset: n$4.UTC_MINUS_6, timezone: s$3.MountainStandardTime });
({ id: u$2.AntarcticaCasey, name: "Antarctica/Casey", offset: n$4.UTC_MINUS_8, timezone: s$3.WesternStandardTime });
({ id: u$2.AntarcticaDavis, name: "Antarctica/Davis", offset: n$4.UTC_MINUS_7, timezone: s$3.NewfoundlandStandardTime });
({ id: u$2.AntarcticaDumontDUrville, name: "Antarctica/DumontDUrville", offset: n$4.UTC_MINUS_10, timezone: s$3.CentralStandardTime });
({ id: u$2.AntarcticaMacquarie, name: "Antarctica/Macquarie", offset: n$4.UTC_MINUS_11, timezone: s$3.CentralStandardTime });
({ id: u$2.AntarcticaMawson, name: "Antarctica/Mawson", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.AntarcticaMcMurdo, name: "Antarctica/McMurdo", offset: n$4.UTC_MINUS_12, timezone: s$3.NewZealandStandardTime });
({ id: u$2.AntarcticaPalmer, name: "Antarctica/Palmer", offset: n$4.UTC_MINUS_4, timezone: s$3.ChathamStandardTime });
({ id: u$2.AntarcticaRothera, name: "Antarctica/Rothera", offset: n$4.UTC_MINUS_3, timezone: s$3.RotheraResearchStationTime });
({ id: u$2.AntarcticaSyowa, name: "Antarctica/Syowa", offset: n$4.UTC_MINUS_3, timezone: s$3.ShowaStationTime });
({ id: u$2.AntarcticaTroll, name: "Antarctica/Troll", offset: n$4.UTC_MINUS_2, timezone: s$3.CentralStandardTime });
({ id: u$2.AntarcticaVostok, name: "Antarctica/Vostok", offset: n$4.UTC_MINUS_6, timezone: s$3.CentralStandardTime });
({ id: u$2.ArcticLongyearbyen, name: "Arctic/Longyearbyen", offset: n$4.UTC_MINUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.AsiaAden, name: "Asia/Aden", offset: n$4.UTC_PLUS_3, timezone: s$3.ArabiaStandardTime });
({ id: u$2.AsiaAlmaty, name: "Asia/Almaty", offset: n$4.UTC_PLUS_6, timezone: s$3.AlmaAtaTime });
({ id: u$2.AsiaAmman, name: "Asia/Amman", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.AsiaAnadyr, name: "Asia/Anadyr", offset: n$4.UTC_PLUS_12, timezone: s$3.NewCaledoniaTime });
({ id: u$2.AsiaAqtau, name: "Asia/Aqtau", offset: n$4.UTC_PLUS_5, timezone: s$3.AqtobeTime });
({ id: u$2.AsiaAqtobe, name: "Asia/Aqtobe", offset: n$4.UTC_PLUS_5, timezone: s$3.AqtobeTime });
({ id: u$2.AsiaAshgabat, name: "Asia/Ashgabat", offset: n$4.UTC_PLUS_5, timezone: s$3.TurkmenistanTime });
({ id: u$2.AsiaBaghdad, name: "Asia/Baghdad", offset: n$4.UTC_PLUS_3, timezone: s$3.ArabiaStandardTime });
({ id: u$2.AsiaBahrain, name: "Asia/Bahrain", offset: n$4.UTC_PLUS_3, timezone: s$3.ArabiaStandardTime });
({ id: u$2.AsiaBaku, name: "Asia/Baku", offset: n$4.UTC_PLUS_4, timezone: s$3.AzerbaijanTime });
({ id: u$2.AsiaBangkok, name: "Asia/Bangkok", offset: n$4.UTC_PLUS_7, timezone: s$3.IndochinaTime });
({ id: u$2.AsiaBarnaul, name: "Asia/Barnaul", offset: n$4.UTC_PLUS_7, timezone: s$3.KrasnoyarskTime });
({ id: u$2.AsiaBeirut, name: "Asia/Beirut", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.AsiaBishkek, name: "Asia/Bishkek", offset: n$4.UTC_PLUS_6, timezone: s$3.KyrgyzstanTime });
({ id: u$2.AsiaBrunei, name: "Asia/Brunei", offset: n$4.UTC_PLUS_8, timezone: s$3.BruneiTime });
({ id: u$2.AsiaChita, name: "Asia/Chita", offset: n$4.UTC_PLUS_9, timezone: s$3.YakutskTime });
({ id: u$2.AsiaChoibalsan, name: "Asia/Choibalsan", offset: n$4.UTC_PLUS_8, timezone: s$3.ChoibalsanStandardTime });
({ id: u$2.AsiaColombo, name: "Asia/Colombo", offset: n$4.UTC_PLUS_5, timezone: s$3.IndianStandardTime });
({ id: u$2.AsiaDamascus, name: "Asia/Damascus", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.AsiaDhaka, name: "Asia/Dhaka", offset: n$4.UTC_PLUS_6, timezone: s$3.BangladeshStandardTime });
({ id: u$2.AsiaDili, name: "Asia/Dili", offset: n$4.UTC_PLUS_9, timezone: s$3.JapanStandardTime });
({ id: u$2.AsiaDubai, name: "Asia/Dubai", offset: n$4.UTC_PLUS_4, timezone: s$3.GulfStandardTime });
({ id: u$2.AsiaDushanbe, name: "Asia/Dushanbe", offset: n$4.UTC_PLUS_5, timezone: s$3.TajikistanTime });
({ id: u$2.AsiaFamagusta, name: "Asia/Famagusta", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.AsiaGaza, name: "Asia/Gaza", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.AsiaHebron, name: "Asia/Hebron", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.AsiaHoChiMinh, name: "Asia/Ho_Chi_Minh", offset: n$4.UTC_PLUS_7, timezone: s$3.IndochinaTime });
({ id: u$2.AsiaHongKong, name: "Asia/Hong_Kong", offset: n$4.UTC_PLUS_8, timezone: s$3.HongKongTime });
({ id: u$2.AsiaHovd, name: "Asia/Hovd", offset: n$4.UTC_PLUS_7, timezone: s$3.HovdTime });
({ id: u$2.AsiaIrkutsk, name: "Asia/Irkutsk", offset: n$4.UTC_PLUS_8, timezone: s$3.IrkutskTime });
({ id: u$2.AsiaJakarta, name: "Asia/Jakarta", offset: n$4.UTC_PLUS_7, timezone: s$3.WesternIndonesianTime });
({ id: u$2.AsiaJayapura, name: "Asia/Jayapura", offset: n$4.UTC_PLUS_9, timezone: s$3.JapanStandardTime });
({ id: u$2.AsiaJerusalem, name: "Asia/Jerusalem", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.AsiaKabul, name: "Asia/Kabul", offset: n$4.UTC_PLUS_4, timezone: s$3.AfghanistanTime });
({ id: u$2.AsiaKamchatka, name: "Asia/Kamchatka", offset: n$4.UTC_PLUS_12, timezone: s$3.KamchatkaTime });
({ id: u$2.AsiaKarachi, name: "Asia/Karachi", offset: n$4.UTC_PLUS_5, timezone: s$3.PakistanStandardTime });
({ id: u$2.AsiaKathmandu, name: "Asia/Kathmandu", offset: n$4.UTC_PLUS_5, timezone: s$3.NepalTime });
({ id: u$2.AsiaKhandyga, name: "Asia/Khandyga", offset: n$4.UTC_PLUS_9, timezone: s$3.YakutskTime });
({ id: u$2.AsiaKolkata, name: "Asia/Kolkata", offset: n$4.UTC_PLUS_5, timezone: s$3.IndianStandardTime });
({ id: u$2.AsiaKrasnoyarsk, name: "Asia/Krasnoyarsk", offset: n$4.UTC_PLUS_7, timezone: s$3.KrasnoyarskTime });
({ id: u$2.AsiaKualaLumpur, name: "Asia/Kuala_Lumpur", offset: n$4.UTC_PLUS_8, timezone: s$3.MalaysiaStandardTime });
({ id: u$2.AsiaKuching, name: "Asia/Kuching", offset: n$4.UTC_PLUS_8, timezone: s$3.MalaysiaStandardTime });
({ id: u$2.AsiaKuwait, name: "Asia/Kuwait", offset: n$4.UTC_PLUS_3, timezone: s$3.ArabiaStandardTime });
({ id: u$2.AsiaMacau, name: "Asia/Macau", offset: n$4.UTC_PLUS_8, timezone: s$3.ChinaStandardTime });
({ id: u$2.AsiaMagadan, name: "Asia/Magadan", offset: n$4.UTC_PLUS_11, timezone: s$3.MagadanTime });
({ id: u$2.AsiaMakassar, name: "Asia/Makassar", offset: n$4.UTC_PLUS_8, timezone: s$3.MalaysiaTime });
({ id: u$2.AsiaManila, name: "Asia/Manila", offset: n$4.UTC_PLUS_8, timezone: s$3.PhilippineTime });
({ id: u$2.AsiaMuscat, name: "Asia/Muscat", offset: n$4.UTC_PLUS_4, timezone: s$3.GulfStandardTime });
({ id: u$2.AsiaNovokuznetsk, name: "Asia/Novokuznetsk", offset: n$4.UTC_PLUS_6, timezone: s$3.NovosibirskTime });
({ id: u$2.AsiaNovosibirsk, name: "Asia/Novosibirsk", offset: n$4.UTC_PLUS_6, timezone: s$3.NovosibirskTime });
({ id: u$2.AsiaOmsk, name: "Asia/Omsk", offset: n$4.UTC_PLUS_6, timezone: s$3.OmskTime });
({ id: u$2.AsiaOral, name: "Asia/Oral", offset: n$4.UTC_PLUS_5, timezone: s$3.OralTime });
({ id: u$2.AsiaPhnomPenh, name: "Asia/Phnom_Penh", offset: n$4.UTC_PLUS_7, timezone: s$3.IndochinaTime });
({ id: u$2.AsiaPontianak, name: "Asia/Pontianak", offset: n$4.UTC_PLUS_7, timezone: s$3.WesternIndonesianTime });
({ id: u$2.AsiaPyongyang, name: "Asia/Pyongyang", offset: n$4.UTC_PLUS_9, timezone: s$3.KoreaStandardTime });
({ id: u$2.AsiaQatar, name: "Asia/Qatar", offset: n$4.UTC_PLUS_3, timezone: s$3.ArabiaStandardTime });
({ id: u$2.AsiaQyzylorda, name: "Asia/Qyzylorda", offset: n$4.UTC_PLUS_5, timezone: s$3.WestKazakhstanTime });
({ id: u$2.AsiaRangoon, name: "Asia/Rangoon", offset: n$4.UTC_PLUS_6, timezone: s$3.MyanmarStandardTime });
({ id: u$2.AsiaRiyadh, name: "Asia/Riyadh", offset: n$4.UTC_PLUS_3, timezone: s$3.ArabiaStandardTime });
({ id: u$2.AsiaSakhalin, name: "Asia/Sakhalin", offset: n$4.UTC_PLUS_11, timezone: s$3.SakhalinIslandTime });
({ id: u$2.AsiaSamarkand, name: "Asia/Samarkand", offset: n$4.UTC_PLUS_5, timezone: s$3.UzbekistanTime });
({ id: u$2.AsiaSeoul, name: "Asia/Seoul", offset: n$4.UTC_PLUS_9, timezone: s$3.KoreaStandardTime });
({ id: u$2.AsiaShanghai, name: "Asia/Shanghai", offset: n$4.UTC_PLUS_8, timezone: s$3.ChinaStandardTime });
({ id: u$2.AsiaSingapore, name: "Asia/Singapore", offset: n$4.UTC_PLUS_8, timezone: s$3.SingaporeStandardTime });
({ id: u$2.AsiaSrednekolymsk, name: "Asia/Srednekolymsk", offset: n$4.UTC_PLUS_11, timezone: s$3.SrednekolymskTime });
({ id: u$2.AsiaTaipei, name: "Asia/Taipei", offset: n$4.UTC_PLUS_8, timezone: s$3.ChinaStandardTime });
({ id: u$2.AsiaTashkent, name: "Asia/Tashkent", offset: n$4.UTC_PLUS_5, timezone: s$3.UzbekistanTime });
({ id: u$2.AsiaTbilisi, name: "Asia/Tbilisi", offset: n$4.UTC_PLUS_4, timezone: s$3.GeorgiaStandardTime });
({ id: u$2.AsiaTehran, name: "Asia/Tehran", offset: n$4.UTC_PLUS_3, timezone: s$3.IranStandardTime });
({ id: u$2.AsiaThimphu, name: "Asia/Thimphu", offset: n$4.UTC_PLUS_6, timezone: s$3.BhutanTime });
({ id: u$2.AsiaTokyo, name: "Asia/Tokyo", offset: n$4.UTC_PLUS_9, timezone: s$3.JapanStandardTime });
({ id: u$2.AsiaTomsk, name: "Asia/Tomsk", offset: n$4.UTC_PLUS_6, timezone: s$3.KrasnoyarskTime });
({ id: u$2.AsiaUlaanbaatar, name: "Asia/Ulaanbaatar", offset: n$4.UTC_PLUS_8, timezone: s$3.UlaanbaatarStandardTime });
({ id: u$2.AsiaUrumqi, name: "Asia/Urumqi", offset: n$4.UTC_PLUS_8, timezone: s$3.ChinaStandardTime });
({ id: u$2.AsiaUstNera, name: "Asia/Ust-Nera", offset: n$4.UTC_PLUS_10, timezone: s$3.VladivostokTime });
({ id: u$2.AsiaVientiane, name: "Asia/Vientiane", offset: n$4.UTC_PLUS_7, timezone: s$3.IndochinaTime });
({ id: u$2.AsiaVladivostok, name: "Asia/Vladivostok", offset: n$4.UTC_PLUS_10, timezone: s$3.VladivostokTime });
({ id: u$2.AsiaYakutsk, name: "Asia/Yakutsk", offset: n$4.UTC_PLUS_9, timezone: s$3.YakutskTime });
({ id: u$2.AsiaYekaterinburg, name: "Asia/Yekaterinburg", offset: n$4.UTC_PLUS_5, timezone: s$3.YekaterinburgTime });
({ id: u$2.AsiaYerevan, name: "Asia/Yerevan", offset: n$4.UTC_PLUS_4, timezone: s$3.ArmeniaTime });
({ id: u$2.AtlanticAzores, name: "Atlantic/Azores", offset: n$4.UTC_MINUS_1, timezone: s$3.AzoresStandardTime });
({ id: u$2.AtlanticBermuda, name: "Atlantic/Bermuda", offset: n$4.UTC_MINUS_4, timezone: s$3.AtlanticStandardTime });
({ id: u$2.AtlanticCanary, name: "Atlantic/Canary", offset: n$4.UTC_MINUS_1, timezone: s$3.WesternEuropeanTime });
({ id: u$2.AtlanticCapeVerde, name: "Atlantic/Cape_Verde", offset: n$4.UTC_0, timezone: s$3.CapeVerdeTime });
({ id: u$2.AtlanticFaroe, name: "Atlantic/Faroe", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.AtlanticMadeira, name: "Atlantic/Madeira", offset: n$4.UTC_0, timezone: s$3.WesternEuropeanTime });
({ id: u$2.AtlanticReykjavik, name: "Atlantic/Reykjavik", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.AtlanticSouthGeorgia, name: "Atlantic/South_Georgia", offset: n$4.UTC_0, timezone: s$3.CoordinatedUniversalTime });
({ id: u$2.AtlanticStHelena, name: "Atlantic/St_Helena", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.AtlanticStanley, name: "Atlantic/Stanley", offset: n$4.UTC_0, timezone: s$3.FalklandIslandsTime });
({ id: u$2.AustraliaAdelaide, name: "Australia/Adelaide", offset: n$4.UTC_PLUS_9_30, timezone: s$3.AustralianCentralStandardTime });
({ id: u$2.AustraliaBrisbane, name: "Australia/Brisbane", offset: n$4.UTC_PLUS_10, timezone: s$3.AustralianEasternStandardTime });
({ id: u$2.AustraliaBrokenHill, name: "Australia/Broken_Hill", offset: n$4.UTC_PLUS_9_30, timezone: s$3.AustralianCentralStandardTime });
({ id: u$2.AustraliaCanberra, name: "Australia/Canberra", offset: n$4.UTC_PLUS_10, timezone: s$3.AustralianEasternStandardTime });
({ id: u$2.AustraliaCurrie, name: "Australia/Currie", offset: n$4.UTC_PLUS_10, timezone: s$3.AustralianEasternStandardTime });
({ id: u$2.AustraliaDarwin, name: "Australia/Darwin", offset: n$4.UTC_PLUS_9_30, timezone: s$3.AustralianCentralStandardTime });
({ id: u$2.AustraliaEucla, name: "Australia/Eucla", offset: n$4.UTC_PLUS_8_45, timezone: s$3.AustralianCentralWesternStandardTime });
({ id: u$2.AustraliaHobart, name: "Australia/Hobart", offset: n$4.UTC_PLUS_10, timezone: s$3.AustralianEasternStandardTime });
({ id: u$2.AustraliaLindeman, name: "Australia/Lindeman", offset: n$4.UTC_PLUS_10, timezone: s$3.AustralianEasternStandardTime });
({ id: u$2.AustraliaLordHowe, name: "Australia/Lord_Howe", offset: n$4.UTC_PLUS_10_30, timezone: s$3.LordHoweStandardTime });
({ id: u$2.AustraliaMelbourne, name: "Australia/Melbourne", offset: n$4.UTC_PLUS_10, timezone: s$3.AustralianEasternStandardTime });
({ id: u$2.AustraliaPerth, name: "Australia/Perth", offset: n$4.UTC_PLUS_8, timezone: s$3.AustralianWesternStandardTime });
({ id: u$2.AustraliaSydney, name: "Australia/Sydney", offset: n$4.UTC_PLUS_10, timezone: s$3.AustralianEasternStandardTime });
({ id: u$2.EuropeAmsterdam, name: "Europe/Amsterdam", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeAndorra, name: "Europe/Andorra", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeAthens, name: "Europe/Athens", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeBelgrade, name: "Europe/Belgrade", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeBerlin, name: "Europe/Berlin", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeBratislava, name: "Europe/Bratislava", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeBrussels, name: "Europe/Brussels", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeBucharest, name: "Europe/Bucharest", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeBudapest, name: "Europe/Budapest", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeBusingen, name: "Europe/Busingen", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeChisinau, name: "Europe/Chisinau", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeCopenhagen, name: "Europe/Copenhagen", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeDublin, name: "Europe/Dublin", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.EuropeGibraltar, name: "Europe/Gibraltar", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeGuernsey, name: "Europe/Guernsey", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeHelsinki, name: "Europe/Helsinki", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeIsleOfMan, name: "Europe/Isle_of_Man", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.EuropeIstanbul, name: "Europe/Istanbul", offset: n$4.UTC_PLUS_3, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeJersey, name: "Europe/Jersey", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeKaliningrad, name: "Europe/Kaliningrad", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeKiev, name: "Europe/Kiev", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeLisbon, name: "Europe/Lisbon", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.EuropeLjubljana, name: "Europe/Ljubljana", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeLondon, name: "Europe/London", offset: n$4.UTC_0, timezone: s$3.GreenwichMeanTime });
({ id: u$2.EuropeLuxembourg, name: "Europe/Luxembourg", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeMadrid, name: "Europe/Madrid", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeMalta, name: "Europe/Malta", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeMariehamn, name: "Europe/Mariehamn", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeMinsk, name: "Europe/Minsk", offset: n$4.UTC_PLUS_3, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeMonaco, name: "Europe/Monaco", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeMoscow, name: "Europe/Moscow", offset: n$4.UTC_PLUS_3, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeOslo, name: "Europe/Oslo", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeParis, name: "Europe/Paris", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropePodgorica, name: "Europe/Podgorica", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropePrague, name: "Europe/Prague", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeRiga, name: "Europe/Riga", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeRome, name: "Europe/Rome", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeSamara, name: "Europe/Samara", offset: n$4.UTC_PLUS_4, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeSanMarino, name: "Europe/San_Marino", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeSarajevo, name: "Europe/Sarajevo", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeSimferopol, name: "Europe/Simferopol", offset: n$4.UTC_PLUS_3, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeSkopje, name: "Europe/Skopje", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeSofia, name: "Europe/Sofia", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeStockholm, name: "Europe/Stockholm", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeTallinn, name: "Europe/Tallinn", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeTirane, name: "Europe/Tirane", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeUzhgorod, name: "Europe/Uzhgorod", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeVaduz, name: "Europe/Vaduz", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeVatican, name: "Europe/Vatican", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeVienna, name: "Europe/Vienna", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeVilnius, name: "Europe/Vilnius", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeVolgograd, name: "Europe/Volgograd", offset: n$4.UTC_PLUS_4, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeWarsaw, name: "Europe/Warsaw", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeZagreb, name: "Europe/Zagreb", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.EuropeZaporozhye, name: "Europe/Zaporozhye", offset: n$4.UTC_PLUS_2, timezone: s$3.EasternEuropeanTime });
({ id: u$2.EuropeZurich, name: "Europe/Zurich", offset: n$4.UTC_PLUS_1, timezone: s$3.CentralEuropeanTime });
({ id: u$2.IndianAntananarivo, name: "Indian/Antananarivo", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.IndianChagos, name: "Indian/Chagos", offset: n$4.UTC_PLUS_6, timezone: s$3.IndianOceanTime });
({ id: u$2.IndianChristmas, name: "Indian/Christmas", offset: n$4.UTC_PLUS_7, timezone: s$3.ChristmasIslandTime });
({ id: u$2.IndianCocos, name: "Indian/Cocos", offset: n$4.UTC_PLUS_6, timezone: s$3.CocosIslandsTime });
({ id: u$2.IndianComoro, name: "Indian/Comoro", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.IndianKerguelen, name: "Indian/Kerguelen", offset: n$4.UTC_PLUS_5, timezone: s$3.FrenchSouthernAndAntarcticTime });
({ id: u$2.IndianMahe, name: "Indian/Mahe", offset: n$4.UTC_PLUS_4, timezone: s$3.SeychellesTime });
({ id: u$2.IndianMaldives, name: "Indian/Maldives", offset: n$4.UTC_PLUS_5, timezone: s$3.MaldivesTime });
({ id: u$2.IndianMauritius, name: "Indian/Mauritius", offset: n$4.UTC_PLUS_4, timezone: s$3.MauritiusTime });
({ id: u$2.IndianMayotte, name: "Indian/Mayotte", offset: n$4.UTC_PLUS_3, timezone: s$3.EastAfricaTime });
({ id: u$2.IndianReunion, name: "Indian/Reunion", offset: n$4.UTC_PLUS_4, timezone: s$3.ReunionTime });
({ id: u$2.PacificApia, name: "Pacific/Apia", offset: n$4.UTC_PLUS_13, timezone: s$3.SamoaStandardTime });
({ id: u$2.PacificAuckland, name: "Pacific/Auckland", offset: n$4.UTC_PLUS_13, timezone: s$3.NewZealandStandardTime });
({ id: u$2.PacificChatham, name: "Pacific/Chatham", offset: n$4.UTC_PLUS_13, timezone: s$3.ChathamStandardTime });
({ id: u$2.PacificEaster, name: "Pacific/Easter", offset: n$4.UTC_PLUS_6, timezone: s$3.EasterIslandStandardTime });
({ id: u$2.PacificEfate, name: "Pacific/Efate", offset: n$4.UTC_PLUS_11, timezone: s$3.VanuatuTime });
({ id: u$2.PacificEnderbury, name: "Pacific/Enderbury", offset: n$4.UTC_PLUS_13, timezone: s$3.TongaTime });
({ id: u$2.PacificFakaofo, name: "Pacific/Fakaofo", offset: n$4.UTC_PLUS_13, timezone: s$3.TongaTime });
({ id: u$2.PacificFiji, name: "Pacific/Fiji", offset: n$4.UTC_PLUS_12, timezone: s$3.FijiTime });
({ id: u$2.PacificFunafuti, name: "Pacific/Funafuti", offset: n$4.UTC_PLUS_12, timezone: s$3.TuvaluTime });
({ id: u$2.PacificGalapagos, name: "Pacific/Galapagos", offset: n$4.UTC_PLUS_6, timezone: s$3.GalapagosTime });
({ id: u$2.PacificGambier, name: "Pacific/Gambier", offset: n$4.UTC_PLUS_9, timezone: s$3.GambierIslandTime });
({ id: u$2.PacificGuadalcanal, name: "Pacific/Guadalcanal", offset: n$4.UTC_PLUS_11, timezone: s$3.SolomonIslandsTime });
({ id: u$2.PacificGuam, name: "Pacific/Guam", offset: n$4.UTC_PLUS_10, timezone: s$3.ChamorroStandardTime });
({ id: u$2.PacificHonolulu, name: "Pacific/Honolulu", offset: n$4.UTC_PLUS_10, timezone: s$3.HawaiiAleutianStandardTime });
({ id: u$2.PacificJohnston, name: "Pacific/Johnston", offset: n$4.UTC_PLUS_10, timezone: s$3.HawaiiAleutianStandardTime });
({ id: u$2.PacificKiritimati, name: "Pacific/Kiritimati", offset: n$4.UTC_PLUS_14, timezone: s$3.LineIslandsTime });
({ id: u$2.PacificKosrae, name: "Pacific/Kosrae", offset: n$4.UTC_PLUS_11, timezone: s$3.KosraeTime });
({ id: u$2.PacificKwajalein, name: "Pacific/Kwajalein", offset: n$4.UTC_PLUS_12, timezone: s$3.MarshallIslandsTime });
({ id: u$2.PacificMajuro, name: "Pacific/Majuro", offset: n$4.UTC_PLUS_12, timezone: s$3.MarshallIslandsTime });
({ id: u$2.PacificMarquesas, name: "Pacific/Marquesas", offset: n$4.UTC_PLUS_9, timezone: s$3.MarquesasIslandsTime });
({ id: u$2.PacificMidway, name: "Pacific/Midway", offset: n$4.UTC_PLUS_11, timezone: s$3.SamoaStandardTime });
({ id: u$2.PacificNauru, name: "Pacific/Nauru", offset: n$4.UTC_PLUS_12, timezone: s$3.NauruTime });
({ id: u$2.PacificNiue, name: "Pacific/Niue", offset: n$4.UTC_PLUS_11, timezone: s$3.NiueTime });
({ id: u$2.PacificNorfolk, name: "Pacific/Norfolk", offset: n$4.UTC_PLUS_11, timezone: s$3.NorfolkIslandTime });
({ id: u$2.PacificNoumea, name: "Pacific/Noumea", offset: n$4.UTC_PLUS_11, timezone: s$3.NewCaledoniaTime });
({ id: u$2.PacificPagoPago, name: "Pacific/Pago_Pago", offset: n$4.UTC_PLUS_11, timezone: s$3.SamoaStandardTime });
({ id: u$2.PacificPalau, name: "Pacific/Palau", offset: n$4.UTC_PLUS_9, timezone: s$3.PalauTime });
({ id: u$2.PacificPitcairn, name: "Pacific/Pitcairn", offset: n$4.UTC_PLUS_8, timezone: s$3.PitcairnTime });
({ id: u$2.PacificPonape, name: "Pacific/Ponape", offset: n$4.UTC_PLUS_11, timezone: s$3.PohnpeiStandardTime });
({ id: u$2.PacificPortMoresby, name: "Pacific/Port_Moresby", offset: n$4.UTC_PLUS_10, timezone: s$3.PapuaNewGuineaTime });
({ id: u$2.PacificRarotonga, name: "Pacific/Rarotonga", offset: n$4.UTC_PLUS_10, timezone: s$3.CookIslandTime });
({ id: u$2.PacificSaipan, name: "Pacific/Saipan", offset: n$4.UTC_PLUS_10, timezone: s$3.ChamorroStandardTime });
({ id: u$2.PacificTahiti, name: "Pacific/Tahiti", offset: n$4.UTC_PLUS_10, timezone: s$3.TahitiTime });
({ id: u$2.PacificTarawa, name: "Pacific/Tarawa", offset: n$4.UTC_PLUS_12, timezone: s$3.GilbertIslandTime });
({ id: u$2.PacificTongatapu, name: "Pacific/Tongatapu", offset: n$4.UTC_PLUS_13, timezone: s$3.TongaTime });
({ id: u$2.PacificChuuk, name: "Pacific/Chuuk", offset: n$4.UTC_PLUS_10, timezone: s$3.ChuukTime });
({ id: u$2.PacificPohnpei, name: "Pacific/Pohnpei", offset: n$4.UTC_PLUS_11, timezone: s$3.PohnpeiStandardTime });
({ id: u$2.PacificYap, name: "Pacific/Yap", offset: n$4.UTC_PLUS_10, timezone: s$3.ChuukTime });
var ye$1 = (a = 21) => {
  let l2 = "", c2 = crypto.getRandomValues(new Uint8Array(a));
  for (; a--; ) {
    let A2 = c2[a] & 63;
    A2 < 36 ? l2 += A2.toString(36) : A2 < 62 ? l2 += (A2 - 26).toString(36).toUpperCase() : A2 < 63 ? l2 += "_" : l2 += "-";
  }
  return l2;
};
var Ai$1 = [{ property: "name", enumerable: false }, { property: "message", enumerable: false }, { property: "stack", enumerable: false }, { property: "code", enumerable: true }], y$1 = Symbol(".toJSON was called"), di$1 = (a) => {
  a[y$1] = true;
  let l2 = a.toJSON();
  return delete a[y$1], l2;
}, Fe$1 = ({ from: a, seen: l2, to_: c2, forceEnumerable: A2, maxDepth: o2, depth: I2 }) => {
  let d2 = c2 || (Array.isArray(a) ? [] : {});
  if (l2.push(a), I2 >= o2)
    return d2;
  if (typeof a.toJSON == "function" && a[y$1] !== true)
    return di$1(a);
  for (let [g2, E2] of Object.entries(a)) {
    if (typeof Buffer == "function" && Buffer.isBuffer(E2)) {
      d2[g2] = "[object Buffer]";
      continue;
    }
    if (typeof E2 != "function") {
      if (!E2 || typeof E2 != "object") {
        d2[g2] = E2;
        continue;
      }
      if (!l2.includes(a[g2])) {
        I2++, d2[g2] = Fe$1({ from: a[g2], seen: [...l2], forceEnumerable: A2, maxDepth: o2, depth: I2 });
        continue;
      }
      d2[g2] = "[Circular]";
    }
  }
  for (let { property: g2, enumerable: E2 } of Ai$1)
    typeof a[g2] == "string" && Object.defineProperty(d2, g2, { value: a[g2], enumerable: A2 ? true : E2, configurable: true, writable: true });
  return d2;
};
function Le$1(a, l2 = {}) {
  let { maxDepth: c2 = Number.POSITIVE_INFINITY } = l2;
  return typeof a == "object" && a !== null ? Fe$1({ from: a, seen: [], forceEnumerable: true, maxDepth: c2, depth: 0 }) : typeof a == "function" ? `[Function: ${a.name || "anonymous"}]` : a;
}
var b$2;
(function(a) {
  a[a.Warning = 999] = "Warning", a[a.Exception = 1e3] = "Exception", a[a.UnmanagedException = 1001] = "UnmanagedException", a[a.CaughtException = 1002] = "CaughtException", a[a.UncaughtException = 1003] = "UncaughtException", a[a.UnhandledPromiseRejectionException = 1004] = "UnhandledPromiseRejectionException", a[a.AuthenticationException = 2e3] = "AuthenticationException", a[a.AuthenticationExpiredAccessTokenException = 2001] = "AuthenticationExpiredAccessTokenException", a[a.AuthenticationInvalidAccessTokenException = 2002] = "AuthenticationInvalidAccessTokenException", a[a.AuthenticationMissingAccessTokenException = 2003] = "AuthenticationMissingAccessTokenException", a[a.AuthenticationExpiredRefreshTokenException = 2004] = "AuthenticationExpiredRefreshTokenException", a[a.AuthenticationInvalidRefreshTokenException = 2005] = "AuthenticationInvalidRefreshTokenException", a[a.AuthenticationMissingRefreshTokenException = 2006] = "AuthenticationMissingRefreshTokenException", a[a.AuthenticationMissingDeviceKeyException = 2007] = "AuthenticationMissingDeviceKeyException", a[a.AuthenticationUnAuthorizedAccessException = 2008] = "AuthenticationUnAuthorizedAccessException", a[a.AuthenticationCodeMismatchException = 2009] = "AuthenticationCodeMismatchException", a[a.AuthenticationExpiredCodeException = 2010] = "AuthenticationExpiredCodeException", a[a.AuthenticationLoginException = 2011] = "AuthenticationLoginException", a[a.AuthenticationLoginInvalidCredentialsException = 2012] = "AuthenticationLoginInvalidCredentialsException", a[a.AuthenticationLoginTooManyFailedAttemptsException = 2013] = "AuthenticationLoginTooManyFailedAttemptsException", a[a.AuthenticationLimitExceededException = 2014] = "AuthenticationLimitExceededException", a[a.AuthenticationUnauthorizedAccessException = 2015] = "AuthenticationUnauthorizedAccessException", a[a.AuthenticationTooManyRequestsException = 2016] = "AuthenticationTooManyRequestsException", a[a.AuthenticationUserNotFoundException = 2017] = "AuthenticationUserNotFoundException", a[a.AuthenticationSignupException = 2018] = "AuthenticationSignupException", a[a.AuthenticationUsernameAvailabilityCheckException = 2019] = "AuthenticationUsernameAvailabilityCheckException", a[a.AuthenticationUsernameExistsException = 2020] = "AuthenticationUsernameExistsException", a[a.AuthenticationAliasExistException = 2021] = "AuthenticationAliasExistException", a[a.AuthenticationCodeDeliveryFailureException = 2022] = "AuthenticationCodeDeliveryFailureException", a[a.AuthenticationMFAMethodNotFoundException = 2023] = "AuthenticationMFAMethodNotFoundException", a[a.AuthenticationNotAuthorizedException = 2024] = "AuthenticationNotAuthorizedException", a[a.AuthenticationPasswordResetRequiredException = 2025] = "AuthenticationPasswordResetRequiredException", a[a.AuthenticationUserNotConfirmedException = 2026] = "AuthenticationUserNotConfirmedException", a[a.DatabaseException = 3e3] = "DatabaseException", a[a.SequelizeNotInitializedException = 3001] = "SequelizeNotInitializedException", a[a.ProcessException = 4e3] = "ProcessException", a[a.ProcessWarningException = 4001] = "ProcessWarningException", a[a.KillProcessException = 4002] = "KillProcessException", a[a.FatalException = 4003] = "FatalException", a[a.ProcessSigTermException = 4004] = "ProcessSigTermException", a[a.ProcessSigIntException = 4005] = "ProcessSigIntException", a[a.MissingEnvironmentVariable = 4006] = "MissingEnvironmentVariable", a[a.NetworkException = 5e3] = "NetworkException", a[a.HttpException = 5001] = "HttpException", a[a.HttpRequestException = 5002] = "HttpRequestException", a[a.HttpRequestResourceNotFoundException = 5003] = "HttpRequestResourceNotFoundException", a[a.HttpResponseException = 5004] = "HttpResponseException", a[a.ServiceProviderException = 6e3] = "ServiceProviderException", a[a.AWSException = 6001] = "AWSException", a[a.AWSMissingAccessKeyException = 6002] = "AWSMissingAccessKeyException", a[a.AWSMissingSecretKeyException = 6003] = "AWSMissingSecretKeyException", a[a.CognitoException = 6004] = "CognitoException", a[a.CognitoInternalErrorException = 6005] = "CognitoInternalErrorException", a[a.CognitoInvalidEmailRoleAccessPolicyException = 6006] = "CognitoInvalidEmailRoleAccessPolicyException", a[a.CognitoInvalidLambdaResponseException = 6007] = "CognitoInvalidLambdaResponseException", a[a.CognitoUserLambdaValidationException = 6008] = "CognitoUserLambdaValidationException", a[a.CognitoInvalidParameterException = 6009] = "CognitoInvalidParameterException", a[a.CognitoInvalidSmsRoleAccessPolicyException = 6010] = "CognitoInvalidSmsRoleAccessPolicyException", a[a.CognitoInvalidSmsRoleTrustRelationshipException = 6011] = "CognitoInvalidSmsRoleTrustRelationshipException", a[a.CognitoInvalidUserPoolConfigurationException = 6012] = "CognitoInvalidUserPoolConfigurationException", a[a.CognitoResourceNotFoundException = 6013] = "CognitoResourceNotFoundException", a[a.CognitoMissingUserPoolClientIdException = 6014] = "CognitoMissingUserPoolClientIdException", a[a.CognitoMissingUserPoolIdException = 6015] = "CognitoMissingUserPoolIdException", a[a.CognitoUnexpectedLambdaException = 6016] = "CognitoUnexpectedLambdaException", a[a.StripeException = 6017] = "StripeException", a[a.StripeMissingSecretKeyException = 6018] = "StripeMissingSecretKeyException", a[a.StripeSubscriptionCreationFailedException = 6019] = "StripeSubscriptionCreationFailedException", a[a.StripePaymentMethodRequiredException = 6020] = "StripePaymentMethodRequiredException", a[a.UserException = 7e3] = "UserException", a[a.NullUserException = 7001] = "NullUserException", a[a.UserStateConflictException = 7002] = "UserStateConflictException", a[a.NullAccountException = 7003] = "NullAccountException", a[a.ValidationException = 8e3] = "ValidationException", a[a.InvalidTypeException = 8001] = "InvalidTypeException", a[a.MissingArgumentException = 8002] = "MissingArgumentException", a[a.MissingPropertyException = 8003] = "MissingPropertyException", a[a.InvalidArgumentException = 8004] = "InvalidArgumentException", a[a.InvalidPropertyException = 8005] = "InvalidPropertyException", a[a.MissingRequestBodyPropertyException = 8006] = "MissingRequestBodyPropertyException", a[a.MissingRequestUrlParameterException = 8007] = "MissingRequestUrlParameterException", a[a.MissingCookieException = 8008] = "MissingCookieException";
})(b$2 || (b$2 = {}));
var D$1 = class extends Error {
  constructor(l2, c2) {
    super(l2);
    h$4(this, "cause");
    h$4(this, "code", b$2.Exception);
    h$4(this, "context");
    h$4(this, "created");
    h$4(this, "data");
    h$4(this, "description");
    h$4(this, "model");
    h$4(this, "form");
    h$4(this, "friendlyMessage", "An unknown error has occurred. :(");
    h$4(this, "id");
    h$4(this, "logLevel", v$3.Exception);
    h$4(this, "origin");
    h$4(this, "pii");
    h$4(this, "request");
    h$4(this, "response");
    h$4(this, "scope");
    h$4(this, "remediation");
    h$4(this, "tags");
    h$4(this, "task");
    h$4(this, "user");
    h$4(this, "__proto__");
    var o2, I2, d2, g2;
    let A2 = new.target.prototype;
    if (this.__proto__ = A2, Error.captureStackTrace && Error.captureStackTrace((o2 = c2 == null ? void 0 : c2.cause) != null ? o2 : this, D$1), this.id = ye$1(), this.name = this.constructor.name, this.created = new Date().toString(), this.description = (I2 = c2 == null ? void 0 : c2.description) != null ? I2 : this.description, this.remediation = (d2 = c2 == null ? void 0 : c2.remediation) != null ? d2 : this.remediation, this.scope = (g2 = c2 == null ? void 0 : c2.scope) != null ? g2 : this.scope, c2) {
      let { cause: E2, context: Je2, data: Ze2, model: Ye2, form: $e2, origin: Qe2, pii: Xe2, request: Ce2, response: ai2, tags: ei2, task: ii2, user: ni2 } = c2;
      this.cause = E2, this.context = Je2, this.data = Ze2, this.model = Ye2, this.form = $e2, this.origin = Qe2, this.pii = Xe2, this.request = Ce2, this.response = ai2, this.task = ii2, this.tags = ei2, this.user = ni2;
    }
  }
  toJSON() {
    return Le$1(this);
  }
};
var k$2 = class extends D$1 {
  constructor() {
    super(...arguments);
    h$4(this, "code", b$2.InvalidPropertyException);
    h$4(this, "description", "An object property is invalid.");
    h$4(this, "logLevel", v$3.Exception);
    h$4(this, "remediation", { response: { code: 400 }, retry: false });
  }
};
var Re$1 = L$1(Ge$1(), 1), N$1 = L$1(We$1(), 1);
function Si$1(a, l2) {
  return Object.entries(l2).filter((A2) => {
    if (!A2)
      return false;
    let o2 = A2[0];
    if (!Object.values(i$2).includes(o2))
      throw new k$2(`Configuration property "${A2[0]}" is not supported.`, {});
    return true;
  }).map(([A2, o2]) => {
    let I2 = (d2, g2) => ({ condition: d2, message: Ti$1(d2, g2), value: a });
    switch (A2) {
      case i$2.IsRequired:
        if (typeof o2 != "boolean")
          throw new TypeError('Configuration property "IsRequired" must be a boolean.');
        if (o2 === true && (!a || a === ""))
          return I2(A2);
        break;
      case i$2.HasLetterCount:
        {
          if ((Number.isNaN(o2) || !Number.isInteger(o2)) && typeof o2 != "boolean")
            throw new TypeError('Configuration property "HasLetterCount" must be a number or boolean');
          let d2 = new N$1.default();
          if (o2 === 0 || o2 === false ? d2.has().not().letters() : d2.has().letters(o2), !a || typeof a != "string" || !d2.validate(a))
            return I2(A2, { requirement: o2 });
        }
        break;
      case i$2.HasLowercaseCount:
        {
          if ((Number.isNaN(o2) || !Number.isInteger(o2)) && typeof o2 != "boolean")
            throw new TypeError('Configuration property "HasLowercaseCount" must be a number or boolean');
          let d2 = new N$1.default();
          if (o2 === 0 ? d2.has().not().lowercase() : d2.has().lowercase(o2), !a || typeof a != "string" || !d2.validate(a))
            return I2(A2, { requirement: o2 });
        }
        break;
      case i$2.HasNumberCount:
        {
          if ((Number.isNaN(o2) || !Number.isInteger(o2)) && typeof o2 != "boolean")
            throw new TypeError('Configuration property "HasNumberCount" must be a number or boolean');
          let d2 = new N$1.default();
          if (o2 === 0 ? d2.has().not().digits() : d2.has().digits(o2), !a || typeof a != "string" || !d2.validate(a))
            return I2(A2, { requirement: o2 });
        }
        break;
      case i$2.HasSymbolCount:
        {
          if ((Number.isNaN(o2) || !Number.isInteger(o2)) && typeof o2 != "boolean")
            throw new TypeError('Configuration property "HasSymbolCount" must be a number or boolean');
          let d2 = new N$1.default();
          if (o2 === 0 ? d2.has().not().symbols() : d2.has().symbols(o2), !a || typeof a != "string" || !d2.validate(a))
            return I2(A2, { requirement: o2 });
        }
        break;
      case i$2.HasUppercaseCount:
        {
          if ((Number.isNaN(o2) || !Number.isInteger(o2)) && typeof o2 != "boolean")
            throw new TypeError('Configuration property "HasUppercaseCount" must be a number or boolean');
          let d2 = new N$1.default();
          if (o2 === 0 ? d2.has().not().uppercase() : d2.has().uppercase(o2), !a || typeof a != "string" || !d2.validate(a))
            return I2(A2, { requirement: o2 });
        }
        break;
      case i$2.IsEmailAddress:
        if (typeof o2 != "boolean")
          throw new TypeError('Configuration property "IsEmailAddress" must be a boolean.');
        if (typeof a != "string" || !Re$1.default.validate(a))
          return I2(A2);
        break;
      case i$2.IsEqual:
        if (a !== o2)
          return I2(A2);
        break;
      case i$2.IsNotNull:
        if (typeof o2 != "boolean")
          throw new TypeError('Configuration property "IsNotNull" must be a boolean.');
        if (a === null)
          return I2(A2);
        break;
      case i$2.IsLengthEqual:
        if (Number.isNaN(o2) || !Number.isInteger(o2))
          throw new TypeError('Configuration property "IsLengthEqual" must be a number.');
        if (typeof a != "string" || a.length !== o2)
          return I2(A2, { requirement: o2 });
        break;
      case i$2.IsLengthGreaterThanOrEqual:
        if (!o2 || Number.isNaN(o2) || !Number.isInteger(o2))
          throw new TypeError('Configuration property "IsLengthGreaterThanOrEqual" must be a number.');
        if (typeof a != "string" || a.length < o2)
          return I2(A2, { requirement: o2 });
        break;
      case i$2.IsLengthLessThanOrEqual:
        if (!o2 || Number.isNaN(o2) || !Number.isInteger(o2))
          throw new TypeError('Configuration property "IsLengthLessThanOrEqual" must be a number.');
        if (typeof a != "string" || a.length > o2)
          return I2(A2, { requirement: o2 });
        break;
    }
  }).filter((A2) => !!A2) || [];
}
function Ti$1(a, l2) {
  switch (a) {
    case i$2.Contains:
      return { long: "Missing a required pattern.", short: "Missing string pattern" };
    case i$2.HasCharacterCount:
      return { long: "Does not meet character length requirement.", short: "Not enough characters" };
    case i$2.HasNumberCount:
      return { long: "Does not meet number count requirement.", short: "Not enough numbers" };
    case i$2.HasLetterCount:
      return { long: "Does not contain required number of characters.", short: "Not enough letters" };
    case i$2.HasLowercaseCount:
      return { long: "Does not contain enough lowercase letters.", short: "Not enough lowercase letters" };
    case i$2.HasSpacesCount:
      return { long: "Does not contain enough spaces.", short: "Not enough spaces" };
    case i$2.HasSymbolCount:
      return { long: "Does not meet symbol count requirement.", short: "Not enough symbols" };
    case i$2.HasUppercaseCount:
      return { long: "Does not contain enough uppercase letters.", short: "Not enough uppercase letters" };
    case i$2.IsAfter:
      return { long: `Value is not after ${l2 == null ? void 0 : l2.requirement}`, short: `Is not after ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsAfterOrEqual:
      return { long: `Value is not after or equal to ${l2 == null ? void 0 : l2.requirement}`, short: `Is not equal or after ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsAirport:
      return { long: "Value is not a valid airport identifier code.", short: "Invalid airport code" };
    case i$2.IsAlpha:
      return { long: "Value does not consist of only letters.", short: "Only letters allowed" };
    case i$2.IsAlphanumeric:
      return { long: "Provided value is not alphanumeric.", short: "Only letters and numbers allowed" };
    case i$2.IsAlgorithmHash:
      return { long: "Value does not match algorithm hash.", short: "Invalid algorithm hash" };
    case i$2.IsAscii:
      return { long: "Value is not valid ASCII string.", short: "Not valid ASCII" };
    case i$2.IsBase64:
      return { long: "Value is not valid Base64 string.", short: "Not valid Base64" };
    case i$2.IsBefore:
      return { long: `Value is not before ${l2 == null ? void 0 : l2.requirement}.`, short: `Not before ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsBeforeOrAfter:
      return { long: `Value is not before or after ${l2 == null ? void 0 : l2.requirement}.`, short: `Not before or after to ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsBeforeOrEqual:
      return { long: `Value is not before or equal to${l2 == null ? void 0 : l2.requirement}.`, short: `Not before or equal to ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsBetween:
      return { long: `Value is not between ${l2 == null ? void 0 : l2.requirement}.`, short: `Value is not between ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsBIC:
      return { long: "Not a valid BIC number.", short: "Invalid BIC ID" };
    case i$2.IsBitcoinAddress:
      return { long: "Not a valid Bitcoin address.", short: "Invalid Bitcoin address" };
    case i$2.IsBoolean:
      return { long: "Not a valid boolean value.", short: "Must be boolean value" };
    case i$2.IsColor:
      return { long: "Not a valid color value.", short: "Invalid color" };
    case i$2.IsComplexEnough:
      return { long: "Does not meet complexity requirements.", short: "Not complex enough" };
    case i$2.IsCountry:
      return { long: "Not a valid country code.", short: "Invalid country code" };
    case i$2.IsCreditCard:
      return { long: "Not a valid credit card number.", short: "Invalid credit card number" };
    case i$2.IsCurrency:
      return { long: "Not a valid currency code.", short: "Invalid currency code" };
    case i$2.IsDataURI:
      return { long: "Not a valid data URI.", short: "Invalid data URI" };
    case i$2.IsDate:
      return { long: "Not a valid date.", short: "Invalid date" };
    case i$2.IsDateRange:
      return { long: "Not a valid date range.", short: "Invalid date range" };
    case i$2.IsDateTime:
      return { long: "Not a valid DateTime value.", short: "Invalid DateTime value" };
    case i$2.IsDayOfMonth:
      return { long: "Not a day of the month.", short: "Not valid day of month" };
    case i$2.IsDecimal:
      return { long: "Not a valid decimal value.", short: "Invalid decimal value" };
    case i$2.IsDivisibleBy:
      return { long: `Not divisible by ${l2 == null ? void 0 : l2.requirement}.`, short: `Not divisible by ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsDomainName:
      return { long: "Not a valid domain name.", short: "Invalid domain name" };
    case i$2.IsEmailAddress:
      return { long: "Not a valid email address.", short: "Invalid email address" };
    case i$2.IsEthereumAddress:
      return { long: "Not a valid Ethereum address.", short: "Invalid Ethereum address" };
    case i$2.IsEAN:
      return { long: "Not a valid EAN number.", short: "Invalid EAN number" };
    case i$2.IsEIN:
      return { long: "Not a valid EIN number.", short: "Invalid EIN number" };
    case i$2.IsEqual:
      return { long: `Value is not equal to ${l2 == null ? void 0 : l2.requirement}.`, short: `Not equal to ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsEvenNumber:
      return { long: "Value is not an even number.", short: "Not an even number" };
    case i$2.IsFloat:
      return { long: "Value is not a floating point integer.", short: "Invalid float value" };
    case i$2.IsIBAN:
      return { long: "Not a valid IBAN number.", short: "Invalid IBAN number" };
    case i$2.IsGreaterThan:
      return { long: `Value is not greater than ${l2 == null ? void 0 : l2.requirement}.`, short: `Not greater than ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsGreaterThanOrEqual:
      return { long: `Value is not greater than or equal to ${l2 == null ? void 0 : l2.requirement}`, short: `Not greater or equal to ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsHSLColor:
      return { long: "Value is not valid HSL color string.", short: "Invalid HSL value" };
    case i$2.IsHexColor:
      return { long: "Not a valid hexadecimal color code string.", short: "Invalid hex color code" };
    case i$2.IsHexadecimal:
      return { long: "Not a valid hexadecimal string.", short: "Not hexadecimal value" };
    case i$2.IsIdentityCardCode:
      return { long: "Not a valid identity card code.", short: "Invalid ID card" };
    case i$2.IsIMEI:
      return { long: "Not a valid IMEI number.", short: "Invalid IMEI number" };
    case i$2.IsInIPAddressRange:
      return { long: `Value is not within ${l2 == null ? void 0 : l2.requirement} IP range`, short: "Not in IP range" };
    case i$2.IsInList:
      return { long: "Value is not included in given list.", short: "Not in list" };
    case i$2.IsInTheLast:
      return { long: "Value is not the last item in given list.", short: "Not last in list" };
    case i$2.IsInteger:
      return { long: "Value is not a valid integer value.", short: "Not an integer" };
    case i$2.IsIPAddress:
      return { long: "Value is not a valid IP address.", short: "Invalid IP address" };
    case i$2.IsIPAddressRange:
      return { long: "Not a valid IP address range.", short: "Invalid IP address range" };
    case i$2.IsISBN:
      return { long: "Value is not valid ISBN number.", short: "Invalid ISBN number" };
    case i$2.IsISIN:
      return { long: "Value is not a valid ISIN number.", short: "Invalid ISIN number" };
    case i$2.IsISMN:
      return { long: "Value is not a valid ISMN number.", short: "Invalid ISMN number" };
    case i$2.IsISRC:
      return { long: "Value is not a valid ISRC number.", short: "Invalid ISRC number" };
    case i$2.IsISSN:
      return { long: "Value is not a valid ISSN number.", short: "Invalid ISSN number" };
    case i$2.IsISO4217:
      return { long: "Value is not ISO-4217 compliant currency code.", short: "Invalid currency code" };
    case i$2.IsISO8601:
      return { long: "Value is not ISO-8601 compliant date string.", short: "Invalid date" };
    case i$2.IsISO31661Alpha2:
      return { long: "Not a valid ISO-3166-1 Alpha 2 country code.", short: "Invalid country code" };
    case i$2.IsISO31661Alpha3:
      return { long: "Not a valid ISO-3166-1 Alpha 3 country code.", short: "Invalid country code" };
    case i$2.IsJSON:
      return { long: "Not valid JSON data.", short: "Invalid JSON" };
    case i$2.IsLanguage:
      return { long: "Value is not a valid language code.", short: "Invalid language code" };
    case i$2.IsLatitude:
      return { long: "Not a valid latitudinal coordinate.", short: "Invalid latitude coordinate" };
    case i$2.IsLongitude:
      return { long: "Not a valid longitudinal coordinate.", short: "Invalid longitude coordinate" };
    case i$2.IsLengthEqual:
      return { long: `Length of value is not equal to ${l2 == null ? void 0 : l2.requirement}.`, short: `Length not equal to ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsLengthGreaterThan:
      return { long: `Length of value is not greater than ${l2 == null ? void 0 : l2.requirement}.`, short: "Not long enough" };
    case i$2.IsLengthGreaterThanOrEqual:
      return { long: `Length of value is not greater than or equal to ${l2 == null ? void 0 : l2.requirement}.`, short: "Not long enough" };
    case i$2.IsLengthLessThan:
      return { long: `Length of value is not less than ${l2 == null ? void 0 : l2.requirement}.`, short: "Too long" };
    case i$2.IsLengthLessThanOrEqual:
      return { long: `Length of value is not less than or equal to ${l2 == null ? void 0 : l2.requirement}.`, short: "Too long" };
    case i$2.IsLessThan:
      return { long: `Value is not less than ${l2 == null ? void 0 : l2.requirement}.`, short: `Not less than ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsLessThanOrEqual:
      return { long: `Value is not less than or equal to ${l2 == null ? void 0 : l2.requirement}.`, short: `Not less or equal to ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsLicensePlateNumber:
      return { long: "Not a valid license plate number.", short: "Invalid license plate number" };
    case i$2.IsLowercase:
      return { long: "Value is not all lowercase.", short: "Not all lowercase" };
    case i$2.IsOctal:
      return { long: "Value is not a valid octal string.", short: "Invalid octal value" };
    case i$2.IsMACAddress:
      return { long: "Value is not a valid MAC address.", short: "Invalid MAC address" };
    case i$2.IsMD5:
      return { long: "Value is not valid MD5 hash string.", short: "Invalid MD5 string" };
    case i$2.IsMagnetURI:
      return { long: "Not a valid Magnet URI string.", short: "Invalid Magnet URI" };
    case i$2.IsMarkdown:
      return { long: "Value is not a valid markdown string.", short: "Invalid Markdown" };
    case i$2.IsMimeType:
      return { long: "Value is not a valid HTTP MIME type.", short: "Invalid MIME type" };
    case i$2.IsMonth:
      return { long: "Value is not a valid month.", short: "Invalid month" };
    case i$2.IsNegativeNumber:
      return { long: "Value is not a negative number.", short: "Number not negative" };
    case i$2.IsNotDate:
      return { long: "Value is not a valid date string.", short: "Invalid date" };
    case i$2.IsNotEqual:
      return { long: `Value is equal to ${l2 == null ? void 0 : l2.requirement}.`, short: `Can't be equal to ${l2 == null ? void 0 : l2.requirement}` };
    case i$2.IsNotInIPAddressRange:
      return { long: "Value is not within IP range.", short: "Not in IP address range" };
    case i$2.IsNotInList:
      return { long: "Value is not allowed.", short: "Not allowed" };
    case i$2.IsNotNull:
      return { long: "Value is required and must not be null.", short: "Cannot be null" };
    case i$2.IsNotRegexMatch:
      return { long: "Value does not match required pattern.", short: "Invalid pattern" };
    case i$2.IsNotToday:
      return { long: "Value must not be same date as current day.", short: "Cannot be today" };
    case i$2.IsNumber:
      return { long: "Value is not a number.", short: "Not a number" };
    case i$2.IsNumeric:
      return { long: "String value must be numeric only.", short: "Not numeric" };
    case i$2.IsOddNumber:
      return { long: "Value must be an odd number.", short: "Not an odd number" };
    case i$2.IsPassportNumber:
      return { long: "Not a valid password number.", short: "Invalid password number" };
    case i$2.IsPhoneNumber:
      return { long: "Not a valid phone number.", short: "Invalid phone number" };
    case i$2.IsPort:
      return { long: "Not a valid port number.", short: "Invalid port number" };
    case i$2.IsPositiveNumber:
      return { long: "Not a positive number.", short: "Not a positive number" };
    case i$2.IsPostalCode:
      return { long: "Not a valid postal code.", short: "Invalid postal code" };
    case i$2.IsProvince:
      return { long: "Not a valid province code.", short: "Invalid province code" };
    case i$2.IsRGBColor:
      return { long: "Not a valid RGB color string.", short: "Invalid RGB color" };
    case i$2.IsRegexMatch:
      return { long: "Value does not match required pattern.", short: "Missing string pattern" };
    case i$2.IsRequired:
      return { long: "Field is required.", short: "Required field" };
    case i$2.IsSemanticVersion:
      return { long: "Value is not a valid semantic version.", short: "Invalid version" };
    case i$2.IsSlug:
      return { long: "Not a valid URL slug string.", short: "Invalid URL slug" };
    case i$2.IsSSN:
      return { long: "Not a valid social security number.", short: "Invalid SSN" };
    case i$2.IsState:
      return { long: "Not a valid state code.", short: "Invalid state code" };
    case i$2.IsStreetAddress:
      return { long: "Not a valid street address.", short: "Invalid street address" };
    case i$2.IsString:
      return { long: "Value is not a valid string.", short: "Must be a string" };
    case i$2.IsStrongPassword:
      return { long: "A stronger password is required.", short: "Password must be stronger" };
    case i$2.IsTags:
      return { long: "Input value is not valid tags.", short: "Invalid tags" };
    case i$2.IsTaxIDNumber:
      return { long: "Value is not a valid tax ID number.", short: "Invalid tax ID number" };
    case i$2.IsThisMonth:
      return { long: "Date is not in the current month.", short: "Not current month" };
    case i$2.IsThisQuarter:
      return { long: "Date is not in the current quarter.", short: "Not current quarter" };
    case i$2.IsThisWeek:
      return { long: "Date is not this week.", short: "Not this week" };
    case i$2.IsThisWeekend:
      return { long: "Date is not date for upcoming weekend.", short: "Not this weekend" };
    case i$2.IsThisYear:
      return { long: "Date is not in the current year.", short: "Not in current year" };
    case i$2.IsTime:
      return { long: "Value is not a valid time string.", short: "Invalid time" };
    case i$2.IsTimeOfDay:
      return { long: "Value is not in required time of day.", short: "Invalid time of day" };
    case i$2.IsTimeRange:
      return { long: "Value is not a valid time range.", short: "Invalid time range" };
    case i$2.IsToday:
      return { long: "Date is not today.", short: "Not today's date" };
    case i$2.IsURL:
      return { long: "Value is not a valid URL string.", short: "Invalid URL" };
    case i$2.IsUUID:
      return { long: "Value is not a valid UUID string.", short: "Invalid UUID" };
    case i$2.IsUppercase:
      return { long: "String is not completely uppercased.", short: "Not uppercase" };
    case i$2.IsUsernameAvailable:
      return { long: "Username is not available.", short: "Username not available" };
    case i$2.IsValidStreetAddress:
      return { long: "Provided address is not valid.", short: "Invalid street address" };
    case i$2.IsVATIDNumber:
      return { long: "Value is not a valid VAT ID number.", short: "Invalid VAT ID" };
    case i$2.IsWeekday:
      return { long: "Date is not a weekday.", short: "Not a weekday" };
    case i$2.IsWeekend:
      return { long: "Date is not on a weekend.", short: "Not a weekend" };
    case i$2.IsYear:
      return { long: "Not a valid year string.", short: "Invalid year" };
  }
}
function getInputStyles(props) {
  return css$2(["", " ", ";background:transparent;border:none;width:100%;outline:none;padding:0 ", ";white-space:nowrap;&::placeholder{color:rgb(", ");}&::-webkit-input-placeholder{color:rgb(", ");}&::-moz-placeholder{color:rgb(", ");}&::-ms-clear{display:none;width:0;height:0;}&::-ms-reveal{display:none;width:0;height:0;}&::-webkit-search-decoration,&::-webkit-search-cancel-button,&::-webkit-search-results-button,&::-webkit-search-results-decoration{display:none;}&::-webkit-outer-spin-button,&::-webkit-inner-spin-button{-webkit-appearance:none;margin:0;}&[type='number']{-moz-appearance:textfield;}"], getSizeStyles(props.inputSize), getTextStyles(props), Amount.Less, TextColors.InputPlaceholder, TextColors.InputPlaceholder, TextColors.InputPlaceholder);
}
css$2([""]);
const Input$2 = memo((_m) => {
  var _n = _m, {
    autoComplete,
    background = {},
    border = {},
    className = "",
    cursor = Cursor.Text,
    defaultValue,
    events = {},
    lineHeight = Sizes.Default,
    max: max2,
    maxLength,
    min,
    name: name2,
    prefix: prefix2 = "",
    placeholder = "",
    size = {},
    states = {},
    suffix: suffix2 = "",
    textAlign = TextAlign.Left,
    textSize = TextSize.Default,
    textColor = TextColors.InputControl,
    textWeight = TextWeight.Default,
    type
  } = _n, props = __objRest(_n, [
    "autoComplete",
    "background",
    "border",
    "className",
    "cursor",
    "defaultValue",
    "events",
    "lineHeight",
    "max",
    "maxLength",
    "min",
    "name",
    "prefix",
    "placeholder",
    "size",
    "states",
    "suffix",
    "textAlign",
    "textSize",
    "textColor",
    "textWeight",
    "type"
  ]);
  var _a2;
  const [value2, setValue] = useState(defaultValue);
  const [focused, setFocused] = useState(false);
  useRef(null);
  const [eventHandlers, setEventHandlers] = useState({});
  useEffect(() => {
    if (events && Object.keys(events).length > 0) {
      setEventHandlers(getEventHandlers(events));
    }
  }, []);
  useEffect(() => {
    if (defaultValue !== value2) {
      setValue(defaultValue);
    }
  }, [defaultValue]);
  useEffect(() => {
    var _a3;
    if ((_a3 = events.input) == null ? void 0 : _a3.onValueChange)
      events.input.onValueChange({
        value: value2
      });
  }, [value2]);
  return /* @__PURE__ */ jsx$2(InputElement, __spreadProps(__spreadValues({
    autoComplete,
    defaultValue,
    className: `${className} input`,
    cursor,
    inputSize: size,
    lineHeight,
    max: max2,
    maxLength,
    min,
    name: name2,
    onBlur: () => setFocused(false),
    onFocus: () => setFocused(true),
    placeholder,
    textAlign,
    textColor,
    textSize,
    textWeight,
    states: __spreadValues({
      state: {
        error: (_a2 = states.state) == null ? void 0 : _a2.error,
        focused
      }
    }, states),
    type
  }, eventHandlers), {
    onChange: (e2) => {
      var _a3, _b;
      setValue(prefix2 + ((_a3 = e2.target) == null ? void 0 : _a3.value) + suffix2);
      if ((_b = events.input) == null ? void 0 : _b.onChange) {
        events.input.onChange(e2);
      }
    }
  }));
});
const InputElement = styled.input.withConfig({
  displayName: "InputElement",
  componentId: "sc-19hbv63-0"
})(["", ""], (props) => getInputStyles(props));
const ProgressSpinner = memo(({
  size = {}
}) => {
  return /* @__PURE__ */ jsx$2(Container$8, {
    animations: [{
      from: {
        transform: {
          rotate: {
            angle: 0
          }
        }
      },
      timing: {
        duration: 1.5,
        iterations: "infinite"
      },
      to: {
        transform: {
          rotate: {
            angle: 360
          }
        }
      }
    }],
    size: __spreadValues({
      height: Sizes.Default,
      width: Sizes.Default
    }, size),
    children: /* @__PURE__ */ jsx$2(Icon, {
      name: DualLightIcons.Loader
    })
  });
});
var cn = Object.defineProperty;
var un = (a, u2, A2) => u2 in a ? cn(a, u2, { enumerable: true, configurable: true, writable: true, value: A2 }) : a[u2] = A2;
var s$2 = (a, u2, A2) => (un(a, typeof u2 != "symbol" ? u2 + "" : u2, A2), A2);
var ja;
(function(a) {
  a.Comment = "comment", a.Create = "create", a.Delete = "delete", a.Edit = "edit", a.Invoice = "invoice", a.Message = "message", a.PageView = "pageView", a.Paid = "paid", a.Payment = "payment", a.Purchase = "purchase", a.Referral = "referral", a.Renewal = "renewal", a.Signup = "signup", a.Subscription = "subscription", a.Upgrade = "upgrade";
})(ja || (ja = {}));
var Ra;
(function(a) {
  a.Business = "business", a.Engineering = "engineering", a.Exception = "exception", a.LogMessage = "log-message", a.Marketing = "marketing", a.PageLeave = "page-leave", a.PageView = "page-view", a.Product = "product", a.QualityManagement = "quality-management", a.UserAccess = "user-access", a.UserLogin = "user-login", a.UserLogout = "user-logout", a.UserSignup = "user-signup", a.UserPreferencesChanged = "user-preferences-changed", a.WebsiteVisit = "website-visit";
})(Ra || (Ra = {}));
var za;
(function(a) {
  a.CloseTab = "close-tab", a.ExternalLink = "external-link", a.NavigateAway = "navigate-away", a.Unknown = "unknown";
})(za || (za = {}));
var Wa;
(function(a) {
  a.Ecs = "Ecs";
})(Wa || (Wa = {}));
var Va;
(function(a) {
  a.Finished = "Finished", a.Queued = "Queued", a.Running = "Running", a.Started = "Started";
})(Va || (Va = {}));
var Ja;
(function(a) {
  a.Mobile = "mobile", a.TV = "tv", a.Watch = "watch", a.Web = "web";
})(Ja || (Ja = {}));
var Ya;
(function(a) {
  a.Development = "Development", a.NonProduction = "NonProduction", a.Production = "Production";
})(Ya || (Ya = {}));
var Za;
(function(a) {
  a.Completed = "completed", a.Started = "started", a.Uncompleted = "uncompleted";
})(Za || (Za = {}));
var Qa;
(function(a) {
  a.Build = "Build", a.Deployment = "Deployment", a.Test = "Test";
})(Qa || (Qa = {}));
var $a;
(function(a) {
  a.Canceled = "Canceled", a.Completed = "Completed", a.Failed = "Failed", a.Running = "Running", a.Queued = "Queued", a.Waiting = "Waiting";
})($a || ($a = {}));
var Xa;
(function(a) {
  a.Canceled = "Canceled", a.Completed = "Completed", a.Failed = "Failed", a.Running = "Running", a.Queued = "Queued", a.Waiting = "Waiting";
})(Xa || (Xa = {}));
var Ca;
(function(a) {
  a.ForgotPassword = "forgot_password", a.Index = "index", a.Login = "login", a.PageNotFound = "404", a.Signup = "signup", a.VerifyCode = "verify_code";
})(Ca || (Ca = {}));
var ae;
(function(a) {
  a.Info = "info", a.Warning = "warning", a.Error = "error", a.Success = "success";
})(ae || (ae = {}));
var ee;
(function(a) {
  a.Details = "details", a.Dialog = "dialog";
})(ee || (ee = {}));
var ie;
(function(a) {
  a.Info = "info", a.Warning = "warning", a.Error = "error", a.Success = "success";
})(ie || (ie = {}));
var ne;
(function(a) {
  a.AccountBalance = "AccountBalance", a.UserAssets = "UserAssets", a.UserCreditCardDebt = "UserCreditCardDebt", a.UserCreditLimit = "UserCreditLimit", a.UserCreditUtilization = "UserCreditUtilization", a.UserDebt = "UserDebt", a.UserInvestments = "UserInvestments", a.UserRetirement = "UserRetirement", a.UserSavings = "UserSavings";
})(ne || (ne = {}));
var te;
(function(a) {
  a.DateTime = "date_time", a.True = "true", a.False = "false", a.UniqueId = "unique_id";
})(te || (te = {}));
var re;
(function(a) {
  a.DomainModel = "domain_entity", a.GenericModel = "generic_entity";
})(re || (re = {}));
var se;
(function(a) {
  a.AirportCode = "airport-code", a.BankIDCode = "bank-id-code", a.BitcoinAddress = "bitcoin-address", a.Boolean = "boolean", a.City = "city", a.Color = "color", a.CountryCode = "country-code", a.CreditCard = "credit-card", a.CurrencyAmount = "currency-amount", a.CurrencyCode = "currency-code", a.DataURI = "data-uri", a.Date = "date", a.DateRange = "date-range", a.DateTime = "date-time", a.DayOfMonth = "day-of-month", a.DomainName = "domain-name", a.EmailAddress = "email-address", a.EthereumAddress = "ethereum-address", a.EAN = "european-article-number", a.EIN = "employer-identification-number", a.Float = "float", a.GeographicCoordinate = "geographic-coordinate", a.GeographicCoordinates = "geographic-coordinates", a.GitRepositoryURL = "git-repository-url", a.HSLColor = "hsl-color", a.HexColor = "hex-color", a.Hexadecimal = "hexadecimal", a.IBAN = "international-bank-account-number", a.IMEI = "international-mobile-equipment-identifier", a.IPAddress = "ip-address", a.IPAddressRange = "ip-address-range", a.ISBN = "international-standard-book-number", a.ISIN = "international-stock-number", a.ISMN = "international-standard-music-number", a.ISSN = "international-standard-serial-number", a.ISO8601 = "iso-8601", a.ISO31661Alpha2 = "iso-31661-alpha-2", a.ISO31661Alpha3 = "iso-31661-alpha-3", a.ISO4217 = "iso-4217", a.Image = "image", a.Integer = "integer", a.JSON = "json", a.LanguageCode = "language-code", a.LicensePlateNumber = "license-plate-number", a.LongText = "long-text", a.MD5 = "md5", a.Markdown = "markdown", a.Menu = "menu", a.Number = "number", a.MACAddress = "mac-address", a.MagnetURI = "magnet-uri", a.MimeType = "mime-type", a.Month = "month", a.Password = "password", a.PassportNumber = "passport-number", a.Percent = "percent", a.PhoneNumber = "phone-number", a.Port = "port", a.PostalCode = "postal-code", a.Province = "province", a.RFC3339 = "rfc-3339", a.RGBColor = "rgb-color", a.SemanticVersion = "semantic-version", a.SSN = "social-security-number", a.State = "state", a.StreetAddress = "street-address", a.String = "string", a.Tags = "tags", a.TaxIDNumber = "tax-id-number", a.Time = "time", a.TimeOfDay = "time-of-day", a.TimeRange = "time-range", a.TimezoneRegion = "timezone-region", a.URL = "url", a.URLPath = "url-path", a.UUID = "uuid", a.VATIDNumber = "value-added-tax-id-number", a.VerificationCode = "verification-code", a.Video = "video", a.Weekday = "weekday", a.Year = "year";
})(se || (se = {}));
var oe;
(function(a) {
  a.Critical = "Critical", a.Error = "Error", a.Fatal = "Fatal", a.Warning = "Warning";
})(oe || (oe = {}));
var le;
(function(a) {
  a.Contains = "contains", a.HasCharacterCount = "has-character-count", a.HasNumberCount = "has-number-count", a.HasLetterCount = "has-letter-count", a.HasLowercaseCount = "has-lowercase-count", a.HasSpacesCount = "has-spaces-count", a.HasSymbolCount = "has-symbol-count", a.HasUppercaseCount = "has-uppercase-count", a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsAirport = "is-airport", a.IsAlpha = "is-alpha", a.IsAlphanumeric = "is-alphanumeric", a.IsAlgorithmHash = "is-algorithm-hash", a.IsAscii = "is-ascii", a.IsBase64 = "is-base-64", a.IsBefore = "is-before", a.IsBeforeOrAfter = "is-before-or-after", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsBIC = "is-bic", a.IsBitcoinAddress = "is-bitcoin-address", a.IsBoolean = "is-boolean", a.IsColor = "is-color", a.IsComplexEnough = "is-complex-enough", a.IsCountry = "is-country", a.IsCreditCard = "is-credit-card", a.IsCurrency = "is-currency", a.IsDataURI = "is-data-uri", a.IsDate = "is-date", a.IsDateRange = "is-date-range", a.IsDateTime = "is-date-time", a.IsDayOfMonth = "is-day-of-month", a.IsDecimal = "is-decimal", a.IsDivisibleBy = "is-divisible-by", a.IsDomainName = "is-domain-name", a.IsEmailAddress = "is-email-address", a.IsEthereumAddress = "is-ethereum-address", a.IsEAN = "is-ean", a.IsEIN = "is-ein", a.IsEqual = "is-equal", a.IsEvenNumber = "is-even-number", a.IsFloat = "is-float", a.IsIBAN = "is-iban", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsHSLColor = "is-hsl-color", a.IsHexColor = "is-hex-color", a.IsHexadecimal = "is-hexadecimal", a.IsIdentityCardCode = "is-identity-card-code", a.IsIMEI = "is-imei", a.IsInIPAddressRange = "is-in-ip-address-range", a.IsInList = "is-in-list", a.IsInTheLast = "is-in-the-last", a.IsInteger = "is-integer", a.IsIPAddress = "is-ip-address", a.IsIPAddressRange = "is-ip-address-range", a.IsISBN = "is-isbn", a.IsISIN = "is-isin", a.IsISMN = "is-ismn", a.IsISRC = "is-isrc", a.IsISSN = "is-issn", a.IsISO4217 = "is-iso-4217", a.IsISO8601 = "is-iso-8601", a.IsISO31661Alpha2 = "is-iso-31661-alpha-2", a.IsISO31661Alpha3 = "is-iso-31661-alpha-3", a.IsJSON = "is-json", a.IsLanguage = "is-language", a.IsLatitude = "is-latitude", a.IsLongitude = "is-longitude", a.IsLengthEqual = "is-length-equal", a.IsLengthGreaterThan = "is-length-greater-than", a.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal", a.IsLengthLessThan = "is-length-less-than", a.IsLengthLessThanOrEqual = "is-length-less-than-or-equal", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsLicensePlateNumber = "is-license-plate-number", a.IsLowercase = "is-lowercase", a.IsOctal = "is-octal", a.IsMACAddress = "is-mac-address", a.IsMD5 = "is-md5", a.IsMagnetURI = "is-magnet-uri", a.IsMarkdown = "is-markdown", a.IsMimeType = "is-mime-type", a.IsMonth = "is-month", a.IsNegativeNumber = "is-negative-number", a.IsNotDate = "is-not-date", a.IsNotEqual = "is-not-equal", a.IsNotInIPAddressRange = "is-not-in-ip-address-range", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsNotRegexMatch = "is-not-regex-match", a.IsNotToday = "is-not-today", a.IsNumber = "is-number", a.IsNumeric = "is-numeric", a.IsOddNumber = "is-odd-number", a.IsPassportNumber = "is-passport-number", a.IsPhoneNumber = "is-phone-number", a.IsPort = "is-port", a.IsPositiveNumber = "is-positive-number", a.IsPostalCode = "is-postal-code", a.IsProvince = "is-province", a.IsRGBColor = "is-rgb-color", a.IsRegexMatch = "is-regex-match", a.IsRequired = "is-required", a.IsSemanticVersion = "is-semantic-version", a.IsSlug = "is-slug", a.IsSSN = "is-ssn", a.IsState = "is-state", a.IsStreetAddress = "is-street-address", a.IsString = "is-string", a.IsStrongPassword = "is-strong-password", a.IsTags = "is-tags", a.IsTaxIDNumber = "is-tax-id-number", a.IsThisMonth = "is-this-month", a.IsThisQuarter = "is-this-quarter", a.IsThisWeek = "is-this-week", a.IsThisWeekend = "is-this-weekend", a.IsThisYear = "is-this-year", a.IsTime = "is-time", a.IsTimeOfDay = "is-time-of-day", a.IsTimeRange = "is-time-range", a.IsToday = "is-today", a.IsURL = "is-url", a.IsUUID = "is-uuid", a.IsUppercase = "is-uppercase", a.IsUsernameAvailable = "is-username-available", a.IsValidStreetAddress = "is-valid-street-address", a.IsVATIDNumber = "is-vat-id-number", a.IsWeekday = "is-weekday", a.IsWeekend = "is-weekend", a.IsYear = "is-year";
})(le || (le = {}));
var me;
(function(a) {
  a.IsAuthenticated = "is-authenticated", a.IsNotAuthenticated = "is-not-authenticated", a.IsUsernameAvailable = "is-username-available", a.PasswordMismatch = "password-mismatch";
})(me || (me = {}));
var ce;
(function(a) {
  a.IsHSLColor = "is-hsl-color", a.IsHexColor = "is-hex-color", a.IsNotNull = "is-not-null", a.IsRGBColor = "is-rgb-color", a.IsString = "is-string";
})(ce || (ce = {}));
var ue;
(function(a) {
  a.IsBetween = "is-between", a.IsCurrency = "is-currency", a.IsDecimal = "is-decimal", a.IsDivisibleBy = "is-divisible-by", a.IsEvenNumber = "is-even-number", a.IsFloat = "is-float", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsInteger = "is-integer", a.IsISO8601 = "is-iso-8601", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsNegativeNumber = "is-negative-number", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumber = "is-number", a.IsOddNumber = "is-odd-number", a.IsPositiveNumber = "is-positive-number";
})(ue || (ue = {}));
var de;
(function(a) {
  a.IsBitcoinAddress = "is-bitcoin-address", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(de || (de = {}));
var pe;
(function(a) {
  a.IsEthereumAddress = "is-ethereum-address", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(pe || (pe = {}));
var Ae;
(function(a) {
  a.IsEqual = "is-equal", a.IsJSON = "is-json", a.IsLanguage = "is-language", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(Ae || (Ae = {}));
var ge;
(function(a) {
  a.IsAlpha = "is-alpha", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(ge || (ge = {}));
var fe;
(function(a) {
  a.IsAlpha = "is-alpha", a.IsCountry = "is-country", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(fe || (fe = {}));
var he;
(function(a) {
  a.IsEqual = "is-equal", a.IsFloat = "is-float", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumeric = "is-numeric";
})(he || (he = {}));
var _e;
(function(a) {
  a.IsEqual = "is-equal", a.IsFloat = "is-float", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumeric = "is-numeric";
})(_e || (_e = {}));
var Se;
(function(a) {
  a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsPostalCode = "is-postal-code", a.IsNotNull = "is-not-null";
})(Se || (Se = {}));
var Te;
(function(a) {
  a.IsAlpha = "is-alpha", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsProvince = "is-province", a.IsString = "is-string";
})(Te || (Te = {}));
var ve;
(function(a) {
  a.IsAlpha = "is-alpha", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsState = "is-state", a.IsString = "is-string";
})(ve || (ve = {}));
var be;
(function(a) {
  a.IsAlphanumeric = "is-alphanumeric", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsString = "is-string", a.IsStreetAddress = "is-street-address";
})(be || (be = {}));
var Ee;
(function(a) {
  a.IsAirport = "is-airport", a.IsAlpha = "is-alpha", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Ee || (Ee = {}));
var Ie;
(function(a) {
  a.IsAlgorithmHash = "is-algorithm-hash", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Ie || (Ie = {}));
var xe;
(function(a) {
  a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsSemanticVersion = "is-semantic-version", a.IsString = "is-string";
})(xe || (xe = {}));
var Ue;
(function(a) {
  a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string", a.IsUUID = "is-uuid";
})(Ue || (Ue = {}));
var ye;
(function(a) {
  a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsMD5 = "is-md5", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(ye || (ye = {}));
var Pe;
(function(a) {
  a.IsBoolean = "is-boolean", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(Pe || (Pe = {}));
var ke;
(function(a) {
  a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsBefore = "is-before", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsDate = "is-date", a.IsEqual = "is-equal", a.IsNotDate = "is-not-date", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNotToday = "is-not-today", a.IsThisWeek = "is-this-week", a.IsThisMonth = "is-this-month", a.IsThisQuarter = "is-this-quarter", a.IsThisYear = "is-this-year", a.IsToday = "is-today", a.IsWeekend = "is-weekend";
})(ke || (ke = {}));
var Me;
(function(a) {
  a.IsAfter = "is-after", a.IsBefore = "is-before", a.IsBeforeOrAfter = "is-before-or-after", a.IsBetween = "is-between", a.IsDate = "is-date", a.IsDateRange = "is-date-range", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(Me || (Me = {}));
var Ne;
(function(a) {
  a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsBefore = "is-before", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsDate = "is-date", a.IsEqual = "is-equal", a.IsNotDate = "is-not-date", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNotToday = "is-not-today", a.IsThisWeek = "is-this-week", a.IsThisMonth = "is-this-month", a.IsThisQuarter = "is-this-quarter", a.IsThisYear = "is-this-year", a.IsToday = "is-today", a.IsWeekend = "is-weekend";
})(Ne || (Ne = {}));
var Le;
(function(a) {
  a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsBefore = "is-before", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsDayOfMonth = "is-day-of-month", a.IsEvenNumber = "is-even-number", a.IsEqual = "is-equal", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsInteger = "is-integer", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumber = "is-number", a.IsOddNumber = "is-odd-number", a.IsToday = "is-today", a.IsWeekday = "is-weekday", a.IsWeekend = "is-weekend";
})(Le || (Le = {}));
var Be;
(function(a) {
  a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsBefore = "is-before", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsEvenNumber = "is-even-number", a.IsEqual = "is-equal", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsInteger = "is-integer", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsMonth = "is-month", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumber = "is-number", a.IsOddNumber = "is-odd-number", a.IsThisMonth = "is-this-month";
})(Be || (Be = {}));
var we;
(function(a) {
  a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsBefore = "is-before", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsTime = "is-time";
})(we || (we = {}));
var De;
(function(a) {
  a.IsAfter = "is-after", a.IsBefore = "is-before", a.IsBeforeOrAfter = "is-before-or-after", a.IsBetween = "is-between", a.IsTime = "is-time", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsTimeRange = "is-time-range";
})(De || (De = {}));
var Ge;
(function(a) {
  a.IsAfter = "is-after", a.IsBefore = "is-before", a.IsBeforeOrAfter = "is-before-or-after", a.IsBetween = "is-between", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsTimeOfDay = "is-time-of-day", a.IsTimeRange = "is-time-range";
})(Ge || (Ge = {}));
var Ke;
(function(a) {
  a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsBefore = "is-before", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsEvenNumber = "is-even-number", a.IsEqual = "is-equal", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumber = "is-number", a.IsOddNumber = "is-odd-number", a.IsWeekday = "is-weekday", a.IsWeekend = "is-weekend";
})(Ke || (Ke = {}));
var qe;
(function(a) {
  a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsBefore = "is-before", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsEvenNumber = "is-even-number", a.IsEqual = "is-equal", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsInteger = "is-integer", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumber = "is-number", a.IsOddNumber = "is-odd-number", a.IsThisYear = "is-this-year", a.IsYear = "is-year";
})(qe || (qe = {}));
var Fe;
(function(a) {
  a.IsEqual = "is-equal", a.IsHexadecimal = "is-hexadecimal", a.IsLengthEqual = "is-length-equal", a.IsLengthGreaterThan = "is-length-greater-than", a.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal", a.IsLengthLessThan = "is-length-less-than", a.IsLengthLessThanOrEqual = "is-length-less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Fe || (Fe = {}));
var He;
(function(a) {
  a.IsEqual = "is-equal", a.IsJSON = "is-json", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(He || (He = {}));
var Oe;
(function(a) {
  a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsMarkdown = "is-markdown", a.IsString = "is-string";
})(Oe || (Oe = {}));
var je;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(je || (je = {}));
var Re;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(Re || (Re = {}));
var ze;
(function(a) {
  a.Contains = "contains", a.IsDataURI = "is-data-uri", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(ze || (ze = {}));
var We;
(function(a) {
  a.Contains = "contains", a.IsDomainName = "is-domain-name", a.IsEqual = "is-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(We || (We = {}));
var Ve;
(function(a) {
  a.Contains = "contains", a.IsEmailAddress = "is-email-address", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Ve || (Ve = {}));
var Je;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsIPAddress = "is-ip-address", a.IsInIPAddressRange = "is-in-ip-address-range", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotInIPAddressRange = "is-not-in-ip-address-range", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Je || (Je = {}));
var Ye;
(function(a) {
  a.IsEqual = "is-equal", a.IsIPAddressRange = "is-ip-address-range", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotInIPAddressRange = "is-not-in-ip-address-range", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Ye || (Ye = {}));
var Ze;
(function(a) {
  a.IsEqual = "is-equal", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsInteger = "is-integer", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null";
})(Ze || (Ze = {}));
var Qe;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsMACAddress = "is-mac-address", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Qe || (Qe = {}));
var $e;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsMagnetURI = "is-magnet-uri", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})($e || ($e = {}));
var Xe;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsMimeType = "is-mime-type", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Xe || (Xe = {}));
var Ce;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string", a.IsSlug = "is-slug";
})(Ce || (Ce = {}));
var ai;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string", a.IsURL = "is-url";
})(ai || (ai = {}));
var ei;
(function(a) {
  a.IsAfter = "is-after", a.IsAfterOrEqual = "is-after-or-equal", a.IsBefore = "is-before", a.IsBeforeOrEqual = "is-before-or-equal", a.IsBetween = "is-between", a.IsDecimal = "is-decimal", a.IsDivisibleBy = "is-divisible-by", a.IsEAN = "is-ean", a.IsEIN = "is-ein", a.IsEqual = "is-equal", a.IsEvenNumber = "is-even-number", a.IsFloat = "is-float", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsInt = "is-integer", a.IsISBN = "is-isbn", a.IsISMN = "is-ismn", a.IsISSN = "is-issn", a.IsLatitude = "is-latitude", a.IsLongitude = "is-longitude", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsMACAddress = "is-mac-address", a.IsNumber = "is-number", a.IsNegativeNumber = "is-negative-number", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsOddNumber = "is-odd-number", a.IsPassportNumber = "is-passport-number", a.IsPhoneNumber = "is-phone-number", a.IsPort = "is-port", a.IsPositiveNumber = "is-positive-number", a.IsPostalCode = "is-postal-code", a.IsSemanticVersion = "is-semantic-version", a.IsSSN = "is-ssn", a.IsTaxIDNumber = "is-tax-id-number", a.IsUUID = "is-uuid", a.IsVATIDNumber = "is-vat-id-number";
})(ei || (ei = {}));
var ii;
(function(a) {
  a.IsEqual = "is-equal", a.IsFloat = "is-float", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumber = "is-number", a.IsNumeric = "is-numeric";
})(ii || (ii = {}));
var ni;
(function(a) {
  a.IsEqual = "is-equal", a.IsInteger = "is-integer", a.IsGreaterThan = "greater-than", a.IsGreaterThanOrEqual = "greater-than-or-equal", a.IsLessThan = "less-than", a.IsLessThanOrEqual = "less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsNumber = "is-number", a.IsNumeric = "is-numeric";
})(ni || (ni = {}));
var ti;
(function(a) {
  a.IsCreditCard = "is-credit-card", a.IsEqual = "is-equal", a.IsLengthEqual = "is-length-equal", a.IsLengthGreaterThan = "is-length-greater-than", a.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal", a.IsLengthLessThan = "is-length-less-than", a.IsLengthLessThanOrEqual = "is-length-less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotNull = "is-not-null", a.IsRegexMatch = "is-regex-match", a.IsNotRegexMatch = "is-not-regex-match";
})(ti || (ti = {}));
var ri;
(function(a) {
  a.isEmailAddress = "is-email-address", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsLengthEqual = "is-length-equal", a.IsLengthGreaterThan = "is-length-greater-than", a.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal", a.IsLengthLessThan = "is-length-less-than", a.IsLengthLessThanOrEqual = "is-length-less-than-or-equal", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsRegexMatch = "is-regex-match", a.IsNotRegexMatch = "is-not-regex-match";
})(ri || (ri = {}));
var zi;
(function(a) {
  a.IsLicensePlateNumber = "is-license-plate-number", a.IsNotNull = "is-not-null", a.IsNotRegexMatch = "is-not-regex-match", a.IsString = "is-string", a.IsRegexMatch = "is-regex-match";
})(zi || (zi = {}));
var si;
(function(a) {
  a.IsNotNull = "is-not-null", a.IsPassportNumber = "is-passport-number", a.IsString = "is-string", a.IsRegexMatch = "is-regex-match";
})(si || (si = {}));
var oi;
(function(a) {
  a.IsComplexEnough = "is-complex-enough", a.IsInList = "is-in-list", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsNotRegexMatch = "is-not-regex-match", a.IsLengthGreaterThan = "is-length-greater-than", a.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal", a.IsLengthLessThan = "is-length-less-than", a.IsLengthLessThanOrEqual = "is-length-less-than-or-equal", a.IsStrongPassword = "is-strong-password", a.IsString = "is-string", a.IsRegexMatch = "is-regex-match";
})(oi || (oi = {}));
var li;
(function(a) {
  a.IsNotNull = "is-not-null", a.IsNotRegexMatch = "is-not-regex-match", a.IsNumber = "is-number", a.IsPhoneNumber = "is-phone-number", a.IsRegexMatch = "is-regex-match";
})(li || (li = {}));
var mi;
(function(a) {
  a.IsNotNull = "is-not-null", a.IsSSN = "is-ssn", a.IsString = "is-string", a.IsRegexMatch = "is-regex-match";
})(mi || (mi = {}));
var ci;
(function(a) {
  a.Contains = "contains", a.IsBIC = "is-bic", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(ci || (ci = {}));
var ui;
(function(a) {
  a.Contains = "contains", a.IsEAN = "is-ean", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(ui || (ui = {}));
var di;
(function(a) {
  a.Contains = "contains", a.IsEIN = "is-ein", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(di || (di = {}));
var pi;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsIBAN = "is-iban", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(pi || (pi = {}));
var Ai;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsISBN = "is-isbn", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(Ai || (Ai = {}));
var gi;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsISIN = "is-isin", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(gi || (gi = {}));
var fi;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsISMN = "is-ismn", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(fi || (fi = {}));
var hi;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsISSN = "is-issn", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string";
})(hi || (hi = {}));
var _i;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string", a.IsTaxIDNumber = "is-tax-id-number";
})(_i || (_i = {}));
var Si;
(function(a) {
  a.Contains = "contains", a.IsEqual = "is-equal", a.IsInList = "is-in-list", a.IsNotEqual = "is-not-equal", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsString = "is-string", a.IsVATIDNumber = "is-vat-id-number";
})(Si || (Si = {}));
var Ti;
(function(a) {
  a.Contains = "contains", a.HasNumberCount = "has-number-count", a.HasLowercaseCount = "has-lowercase-count", a.HasLetterCount = "has-letter-count", a.HasSpacesCount = "has-spaces-count", a.HasSymbolCount = "has-symbol-count", a.HasUppercaseCount = "has-uppercase-count", a.IsAlpha = "is-alpha", a.IsAlphanumeric = "is-alphanumeric", a.IsAscii = "is-ascii", a.IsBase64 = "is-base-64", a.IsColor = "is-color", a.IsComplexEnough = "is-complex-enough", a.IsCreditCard = "is-credit-card", a.IsDataURI = "is-data-uri", a.IsDomainName = "is-domain-name", a.IsEmailAddress = "is-email-address", a.IsEthereumAddress = "is-ethereum-address", a.IsEAN = "is-ean", a.IsEIN = "is-ein", a.IsEqual = "is-equal", a.IsIBAN = "is-iban", a.IsHSLColor = "is-hsl-color", a.IsHexColor = "is-hex-color", a.IsHexadecimal = "is-hexadecimal", a.IsIdentityCardCode = "is-identity-card-code", a.IsIMEI = "is-imei", a.IsInList = "is-in-list", a.IsIPAddress = "is-ip-address", a.IsInIPAddressRange = "is-in-ip-address-range", a.IsISBN = "is-isbn", a.IsISIN = "is-isin", a.IsISMN = "is-ismn", a.IsISRC = "is-isrc", a.IsISSN = "is-issn", a.IsLanguage = "is-language", a.IsLatitude = "is-latitude", a.IsLongitude = "is-longitude", a.IsLengthEqual = "is-length-equal", a.IsLengthGreaterThan = "is-length-greater-than", a.IsLengthGreaterThanOrEqual = "is-length-great-than-or-equal", a.IsLengthLessThan = "is-length-less-than", a.IsLengthLessThanOrEqual = "is-length-less-than-or-equal", a.IsLicensePlateNumber = "is-license-plate-number", a.IsLowercase = "is-lowercase", a.IsOctal = "is-octal", a.IsMACAddress = "is-mac-address", a.IsMD5 = "is-md5", a.IsMagnetURI = "is-magnet-uri", a.IsMarkdown = "is-markdown", a.IsMimeType = "is-mime-type", a.IsMonth = "is-month", a.IsNotInIPAddressRange = "is-not-in-ip-address-range", a.IsNotInList = "is-not-in-list", a.IsNotNull = "is-not-null", a.IsNotRegexMatch = "is-not-regex-match", a.IsNumber = "is-number", a.IsNumeric = "is-numeric", a.IsPassportNumber = "is-passport-number", a.IsPhoneNumber = "is-phone-number", a.IsPort = "is-port", a.IsPostalCode = "is-postal-code", a.IsProvince = "is-province", a.IsRegexMatch = "is-regex-match", a.IsSemanticVersion = "is-semantic-version", a.IsSlug = "is-slug", a.IsSSN = "is-ssn", a.IsState = "is-state", a.IsStreetAddress = "is-street-address", a.IsString = "is-string", a.IsTaxIDNumber = "is-tax-id-number", a.IsURL = "is-url", a.IsUUID = "is-uuid", a.IsUppercase = "is-uppercase", a.IsVATIDNumber = "is-vat-id-number", a.IsWeekday = "is-weekday", a.IsWeekend = "is-weekend", a.IsYear = "is-year";
})(Ti || (Ti = {}));
var vi;
(function(a) {
  a.Contains = "contains", a.IsAlpha = "is-alpha", a.IsAlphanumeric = "is-alphanumeric", a.IsInList = "is-in-list", a.IsMarkdown = "is-markdown", a.IsNotInList = "is-not-in-list", a.IsNumeric = "is-numeric", a.IsLowercase = "is-lowercase", a.IsString = "is-string", a.IsUppercase = "is-uppercase";
})(vi || (vi = {}));
var bi;
(function(a) {
  a.InvalidCharacters = "invalid-characters", a.InvalidPattern = "invalid-pattern", a.NotComplexEnough = "not-complex-enough", a.NotUnique = "not-unique", a.NotValidEmail = "not-valid-email", a.TooLong = "too-long", a.TooShort = "too-short", a.Required = "required";
})(bi || (bi = {}));
var Ei;
(function(a) {
  a[a.Allowed = 0] = "Allowed", a[a.Blocked = 1] = "Blocked";
})(Ei || (Ei = {}));
var Ii;
(function(a) {
  a.Canceled = "Canceled", a.Completed = "Completed", a.Created = "Created", a.Faulted = "Faulted", a.Queued = "Queued", a.Running = "Running", a.Waiting = "Waiting";
})(Ii || (Ii = {}));
var xi;
(function(a) {
  a.Archived = "ARCHIVED", a.Compromised = "COMPROMISED", a.Confirmed = "CONFIRMED", a.ForcePasswordChange = "FORCE_CHANGE_PASSWORD", a.ResetRequired = "RESET_REQUIRED", a.Unconfirmed = "UNCONFIRMED", a.Unknown = "UNKNOWN";
})(xi || (xi = {}));
var Wi;
(function(a) {
  a.Code = "code", a.Link = "link";
})(Wi || (Wi = {}));
var Ui;
(function(a) {
  a.Owner = "Owner", a.Admin = "Admin", a.User = "User", a.Visitor = "Visitor";
})(Ui || (Ui = {}));
var yi;
(function(a) {
  a.RequiresPaymentMethod = "requires_payment_method", a.RequiresConfirmation = "requires_confirmation", a.RequiresAction = "requires_action", a.Processing = "processing", a.RequiresCapture = "requires_capture", a.Canceled = "canceled", a.Succeeded = "succeeded";
})(yi || (yi = {}));
var Pi;
(function(a) {
  a.Incomplete = "incomplete", a.IncompleteExpired = "incomplete_expired", a.Trialing = "trialing", a.Active = "active", a.PastDue = "past_due", a.Canceled = "canceled", a.Unpaid = "unpaid";
})(Pi || (Pi = {}));
var ki;
(function(a) {
  a.Monthly = "monthly", a.Quarterly = "quarterly", a.Yearly = "yearly", a.Lifetime = "lifetime";
})(ki || (ki = {}));
var Mi;
(function(a) {
  a.Delivered = "delivered", a.Read = "read", a.Sending = "sending", a.Sent = "sent";
})(Mi || (Mi = {}));
var Ni;
(function(a) {
  a.Audio = "audio", a.File = "file", a.Image = "image", a.Text = "text", a.Video = "video";
})(Ni || (Ni = {}));
var Li;
(function(a) {
  a.Audio = "audio", a.File = "file", a.Image = "image", a.Video = "video";
})(Li || (Li = {}));
var Bi;
(function(a) {
  a.Angry = "angry", a.Laugh = "laugh", a.Like = "like", a.Love = "love", a.Sad = "sad", a.Wow = "wow", a.Wink = "wink", a.Yay = "yay";
})(Bi || (Bi = {}));
var wi;
(function(a) {
  a.Email = "email", a.PhoneNumber = "phone_number";
})(wi || (wi = {}));
var c$3;
(function(a) {
  a.Analytics = "analytics", a.Critical = "critical", a.Debug = "debug", a.Exception = "exception", a.Http = "http", a.Info = "info", a.Warning = "warning";
})(c$3 || (c$3 = {}));
var Di;
(function(a) {
  a.Delete = "delete", a.Get = "get", a.Head = "head", a.Patch = "patch", a.Post = "post", a.Put = "put";
})(Di || (Di = {}));
var Gi;
(function(a) {
  a[a.CONTINUE = 100] = "CONTINUE", a[a.SWITCHING_PROTOCOLS = 101] = "SWITCHING_PROTOCOLS", a[a.PROCESSING = 102] = "PROCESSING", a[a.OK = 200] = "OK", a[a.CREATED = 201] = "CREATED", a[a.ACCEPTED = 202] = "ACCEPTED", a[a.NON_AUTHORITATIVE_INFORMATION = 203] = "NON_AUTHORITATIVE_INFORMATION", a[a.NO_CONTENT = 204] = "NO_CONTENT", a[a.RESET_CONTENT = 205] = "RESET_CONTENT", a[a.PARTIAL_CONTENT = 206] = "PARTIAL_CONTENT", a[a.MULTI_STATUS = 207] = "MULTI_STATUS", a[a.ALREADY_REPORTED = 208] = "ALREADY_REPORTED", a[a.IM_USED = 226] = "IM_USED", a[a.MULTIPLE_CHOICES = 300] = "MULTIPLE_CHOICES", a[a.MOVED_PERMANENTLY = 301] = "MOVED_PERMANENTLY", a[a.FOUND = 302] = "FOUND", a[a.SEE_OTHER = 303] = "SEE_OTHER", a[a.NOT_MODIFIED = 304] = "NOT_MODIFIED", a[a.USE_PROXY = 305] = "USE_PROXY", a[a.SWITCH_PROXY = 306] = "SWITCH_PROXY", a[a.TEMPORARY_REDIRECT = 307] = "TEMPORARY_REDIRECT", a[a.PERMANENT_REDIRECT = 308] = "PERMANENT_REDIRECT", a[a.BAD_REQUEST = 400] = "BAD_REQUEST", a[a.UNAUTHORIZED = 401] = "UNAUTHORIZED", a[a.PAYMENT_REQUIRED = 402] = "PAYMENT_REQUIRED", a[a.FORBIDDEN = 403] = "FORBIDDEN", a[a.NOT_FOUND = 404] = "NOT_FOUND", a[a.METHOD_NOT_ALLOWED = 405] = "METHOD_NOT_ALLOWED", a[a.NOT_ACCEPTABLE = 406] = "NOT_ACCEPTABLE", a[a.PROXY_AUTHENTICATION_REQUIRED = 407] = "PROXY_AUTHENTICATION_REQUIRED", a[a.REQUEST_TIMEOUT = 408] = "REQUEST_TIMEOUT", a[a.CONFLICT = 409] = "CONFLICT", a[a.GONE = 410] = "GONE", a[a.LENGTH_REQUIRED = 411] = "LENGTH_REQUIRED", a[a.PRECONDITION_FAILED = 412] = "PRECONDITION_FAILED", a[a.PAYLOAD_TOO_LARGE = 413] = "PAYLOAD_TOO_LARGE", a[a.URI_TOO_LONG = 414] = "URI_TOO_LONG", a[a.UNSUPPORTED_MEDIA_TYPE = 415] = "UNSUPPORTED_MEDIA_TYPE", a[a.RANGE_NOT_SATISFIABLE = 416] = "RANGE_NOT_SATISFIABLE", a[a.EXPECTATION_FAILED = 417] = "EXPECTATION_FAILED", a[a.I_AM_A_TEAPOT = 418] = "I_AM_A_TEAPOT", a[a.MISDIRECTED_REQUEST = 421] = "MISDIRECTED_REQUEST", a[a.UNPROCESSABLE_ENTITY = 422] = "UNPROCESSABLE_ENTITY", a[a.LOCKED = 423] = "LOCKED", a[a.FAILED_DEPENDENCY = 424] = "FAILED_DEPENDENCY", a[a.TOO_EARLY = 425] = "TOO_EARLY", a[a.UPGRADE_REQUIRED = 426] = "UPGRADE_REQUIRED", a[a.PRECONDITION_REQUIRED = 428] = "PRECONDITION_REQUIRED", a[a.TOO_MANY_REQUESTS = 429] = "TOO_MANY_REQUESTS", a[a.REQUEST_HEADER_FIELDS_TOO_LARGE = 431] = "REQUEST_HEADER_FIELDS_TOO_LARGE", a[a.UNAVAILABLE_FOR_LEGAL_REASONS = 451] = "UNAVAILABLE_FOR_LEGAL_REASONS", a[a.INTERNAL_SERVER_ERROR = 500] = "INTERNAL_SERVER_ERROR", a[a.NOT_IMPLEMENTED = 501] = "NOT_IMPLEMENTED", a[a.BAD_GATEWAY = 502] = "BAD_GATEWAY", a[a.SERVICE_UNAVAILABLE = 503] = "SERVICE_UNAVAILABLE", a[a.GATEWAY_TIMEOUT = 504] = "GATEWAY_TIMEOUT", a[a.HTTP_VERSION_NOT_SUPPORTED = 505] = "HTTP_VERSION_NOT_SUPPORTED", a[a.VARIANT_ALSO_NEGOTIATES = 506] = "VARIANT_ALSO_NEGOTIATES", a[a.INSUFFICIENT_STORAGE = 507] = "INSUFFICIENT_STORAGE", a[a.LOOP_DETECTED = 508] = "LOOP_DETECTED", a[a.BANDWIDTH_LIMIT_EXCEEDED = 509] = "BANDWIDTH_LIMIT_EXCEEDED", a[a.NOT_EXTENDED = 510] = "NOT_EXTENDED", a[a.NETWORK_AUTHENTICATION_REQUIRED = 511] = "NETWORK_AUTHENTICATION_REQUIRED";
})(Gi || (Gi = {}));
var r$3;
(function(a) {
  a.Afghanistan = "AF", a.Albania = "AL", a.Algeria = "DZ", a.AmericanSamoa = "AS", a.Andorra = "AD", a.Angola = "AO", a.Anguilla = "AI", a.Antarctica = "AQ", a.AntiguaAndBarbuda = "AG", a.Argentina = "AR", a.Armenia = "AM", a.Aruba = "AW", a.Australia = "AU", a.Austria = "AT", a.Azerbaijan = "AZ", a.Bahamas = "BS", a.Bahrain = "BH", a.Bangladesh = "BD", a.Barbados = "BB", a.Belarus = "BY", a.Belgium = "BE", a.Belize = "BZ", a.Benin = "BJ", a.Bermuda = "BM", a.Bhutan = "BT", a.Bolivia = "BO", a.BosniaAndHerzegovina = "BA", a.Botswana = "BW", a.BouvetIsland = "BV", a.Brazil = "BR", a.BritishIndianOceanTerritory = "IO", a.Brunei = "BN", a.Bulgaria = "BG", a.BurkinaFaso = "BF", a.Burundi = "BI", a.Cambodia = "KH", a.Cameroon = "CM", a.Canada = "CA", a.CapeVerde = "CV", a.CaymanIslands = "KY", a.CentralAfricanRepublic = "CF", a.Chad = "TD", a.Chile = "CL", a.China = "CN", a.ChristmasIsland = "CX", a.CocosKeelingIslands = "CC", a.Colombia = "CO", a.Comoros = "KM", a.Congo = "CG", a.CongoTheDemocraticRepublicOfThe = "CD", a.CookIslands = "CK", a.CostaRica = "CR", a.CoteDIvoire = "CI", a.Croatia = "HR", a.Cuba = "CU", a.Cyprus = "CY", a.CzechRepublic = "CZ", a.Denmark = "DK", a.Djibouti = "DJ", a.Dominica = "DM", a.DominicanRepublic = "DO", a.Ecuador = "EC", a.Egypt = "EG", a.ElSalvador = "SV", a.EquatorialGuinea = "GQ", a.Eritrea = "ER", a.Estonia = "EE", a.Ethiopia = "ET", a.FalklandIslands = "FK", a.FaroeIslands = "FO", a.Fiji = "FJ", a.Finland = "FI", a.France = "FR", a.FrenchGuiana = "GF", a.FrenchPolynesia = "PF", a.FrenchSouthernTerritories = "TF", a.Gabon = "GA", a.Gambia = "GM", a.Georgia = "GE", a.Germany = "DE", a.Ghana = "GH", a.Gibraltar = "GI", a.Greece = "GR", a.Greenland = "GL", a.Grenada = "GD", a.Guadeloupe = "GP", a.Guam = "GU", a.Guatemala = "GT", a.Guernsey = "GG", a.Guinea = "GN", a.GuineaBissau = "GW", a.Guyana = "GY", a.Haiti = "HT", a.HeardIslandMcdonaldIslands = "HM", a.HolySeeVaticanCityState = "VA", a.Honduras = "HN", a.HongKong = "HK", a.Hungary = "HU", a.Iceland = "IS", a.India = "IN", a.Indonesia = "ID", a.Iran = "IR", a.Iraq = "IQ", a.Ireland = "IE", a.IsleOfMan = "IM", a.Israel = "IL", a.Italy = "IT", a.Jamaica = "JM", a.Japan = "JP", a.Jersey = "JE", a.Jordan = "JO", a.Kazakhstan = "KZ", a.Kenya = "KE", a.Kiribati = "KI", a.Kuwait = "KW", a.Kyrgyzstan = "KG", a.Laos = "LA", a.Latvia = "LV", a.Lebanon = "LB", a.Lesotho = "LS", a.Liberia = "LR", a.Libya = "LY", a.Liechtenstein = "LI", a.Lithuania = "LT", a.Luxembourg = "LU", a.Macau = "MO", a.Madagascar = "MG", a.Malawi = "MW", a.Malaysia = "MY", a.Maldives = "MV", a.Mali = "ML", a.Malta = "MT", a.MarshallIslands = "MH", a.Martinique = "MQ", a.Mauritania = "MR", a.Mauritius = "MU", a.Mayotte = "YT", a.Mexico = "MX", a.MicronesiaFederatedStatesOf = "FM", a.Moldova = "MD", a.Monaco = "MC", a.Mongolia = "MN", a.Montenegro = "ME", a.Montserrat = "MS", a.Morocco = "MA", a.Mozambique = "MZ", a.Myanmar = "MM", a.Namibia = "NA", a.Nauru = "NR", a.Nepal = "NP", a.Netherlands = "NL", a.NetherlandsAntilles = "AN", a.NewCaledonia = "NC", a.NewZealand = "NZ", a.NorthKorea = "KP", a.Nicaragua = "NI", a.Niger = "NE", a.Nigeria = "NG", a.Niue = "NU", a.NorfolkIsland = "NF", a.NorthMacedonia = "MK", a.NorthernMarianaIslands = "MP", a.Norway = "NO", a.Oman = "OM", a.Pakistan = "PK", a.Palau = "PW", a.PalestinianTerritoryOccupied = "PS", a.Panama = "PA", a.PapuaNewGuinea = "PG", a.Paraguay = "PY", a.Peru = "PE", a.Philippines = "PH", a.Pitcairn = "PN", a.Poland = "PL", a.Portugal = "PT", a.PuertoRico = "PR", a.Qatar = "QA", a.Reunion = "RE", a.Romania = "RO", a.RussianFederation = "RU", a.Rwanda = "RW", a.SaintBarthelemy = "BL", a.SaintHelena = "SH", a.SaintKittsAndNevis = "KN", a.SaintLucia = "LC", a.SaintMartin = "MF", a.SaintPierreAndMiquelon = "PM", a.SaintVincentAndTheGrenadines = "VC", a.Samoa = "WS", a.SanMarino = "SM", a.SaoTomeAndPrincipe = "ST", a.SaudiArabia = "SA", a.Senegal = "SN", a.Serbia = "RS", a.SerbiaAndMontenegro = "CS", a.Seychelles = "SC", a.SierraLeone = "SL", a.Singapore = "SG", a.Slovakia = "SK", a.Slovenia = "SI", a.SolomonIslands = "SB", a.Somalia = "SO", a.SouthAfrica = "ZA", a.SouthGeorgiaAndTheSouthSandwichIslands = "GS", a.SouthKorea = "KR", a.Spain = "ES", a.SriLanka = "LK", a.Sudan = "SD", a.Suriname = "SR", a.SvalbardAndJanMayen = "SJ", a.Swaziland = "SZ", a.Sweden = "SE", a.Switzerland = "CH", a.Syria = "SY", a.Taiwan = "TW", a.Tajikistan = "TJ", a.Tanzania = "TZ", a.Thailand = "TH", a.TimorLeste = "TL", a.Togo = "TG", a.Tokelau = "TK", a.Tonga = "TO", a.TrinidadAndTobago = "TT", a.Tunisia = "TN", a.Turkey = "TR", a.Turkmenistan = "TM", a.TurksAndCaicosIslands = "TC", a.Tuvalu = "TV", a.Uganda = "UG", a.Ukraine = "UA", a.UnitedArabEmirates = "AE", a.UnitedKingdom = "GB", a.UnitedStates = "US", a.UnitedStatesMinorOutlyingIslands = "UM", a.Uruguay = "UY", a.Uzbekistan = "UZ", a.Vanuatu = "VU", a.Venezuela = "VE", a.Vietnam = "VN", a.VirginIslandsBritish = "VG", a.VirginIslandsUS = "VI", a.WallisAndFutuna = "WF", a.WesternSahara = "EH", a.Yemen = "YE", a.Zambia = "ZM", a.Zimbabwe = "ZW";
})(r$3 || (r$3 = {}));
var l$2;
(function(a) {
  a.AfghanistanAfghani = "AFN", a.AlbaniaLek = "ALL", a.ArmeniaDram = "AMD", a.AlgeriaDinar = "DZD", a.AmericanSamoaTala = "WST", a.AngolaKwanza = "AOA", a.ArgentinaPeso = "ARS", a.AustraliaDollar = "AUD", a.ArubaFlorin = "AWG", a.AzerbaijanNewManat = "AZN", a.BosniaAndHerzegovinaConvertibleMark = "BAM", a.BahrainDinar = "BHD", a.BarbadosDollar = "BBD", a.BangladeshTaka = "BDT", a.BelgiumFranc = "BGN", a.BermudaDollar = "BMD", a.BruneiDollar = "BND", a.BoliviaBoliviano = "BOB", a.BrazilReal = "BRL", a.BahamasDollar = "BSD", a.BhutanNgultrum = "BTN", a.BotswanaPula = "BWP", a.BelarusRuble = "BYN", a.BelizeDollar = "BZD", a.BulgariaLev = "BGN", a.BurundiFranc = "BIF", a.BritishPound = "GBP", a.CanadaDollar = "CAD", a.CambodiaRiel = "KHR", a.ComorosFranc = "KMF", a.CaymanIslandsDollar = "KYD", a.ChilePeso = "CLP", a.ChinaYuan = "CNY", a.ColombiaPeso = "COP", a.CostaRicaColon = "CRC", a.CroatiaKuna = "HRK", a.CubaConvertiblePeso = "CUC", a.CubaPeso = "CUP", a.CapeVerdeEscudo = "CVE", a.CyprusPound = "CYP", a.CzechRepublicKoruna = "CZK", a.DjiboutiFranc = "DJF", a.DenmarkKrone = "DKK", a.DominicaDollar = "XCD", a.DominicanRepublicPeso = "DOP", a.EastCaribbeanDollar = "XCD", a.EgyptPound = "EGP", a.ElSalvadorColon = "SVC", a.EquatorialGuineaEkwele = "GQE", a.EritreaNakfa = "ERN", a.EstoniaKroon = "EEK", a.EthiopiaBirr = "ETB", a.Euro = "EUR", a.FijiDollar = "FJD", a.FalklandIslandsPound = "FKP", a.GambiaDalasi = "GMD", a.GabonFranc = "GMD", a.GeorgiaLari = "GEL", a.GhanaCedi = "GHS", a.GibraltarPound = "GIP", a.GuatemalaQuetzal = "GTQ", a.GuernseyPound = "GGP", a.GuineaBissauPeso = "GWP", a.GuyanaDollar = "GYD", a.HongKongDollar = "HKD", a.HondurasLempira = "HNL", a.HaitiGourde = "HTG", a.HungaryForint = "HUF", a.IndonesiaRupiah = "IDR", a.IsleOfManPound = "IMP", a.IsraelNewShekel = "ILS", a.IndiaRupee = "INR", a.IraqDinar = "IQD", a.IranRial = "IRR", a.IcelandKrona = "ISK", a.JamaicaDollar = "JMD", a.JapanYen = "JPY", a.JerseyPound = "JEP", a.JordanDinar = "JOD", a.KazakhstanTenge = "KZT", a.KenyaShilling = "KES", a.KyrgyzstanSom = "KGS", a.NorthKoreaWon = "KPW", a.SouthKoreaWon = "KRW", a.KuwaitDinar = "KWD", a.LaosKip = "LAK", a.LebanonPound = "LBP", a.LiberiaDollar = "LRD", a.LesothoLoti = "LSL", a.LibyanDinar = "LYD", a.LithuaniaLitas = "LTL", a.LatviaLats = "LVL", a.LibyaDinar = "LYD", a.MacauPataca = "MOP", a.MaldivesRufiyaa = "MVR", a.MalawiKwacha = "MWK", a.MaltaLira = "MTL", a.MauritiusRupee = "MUR", a.MongoliaTughrik = "MNT", a.MoroccoDirham = "MAD", a.MoldovaLeu = "MDL", a.MozambiqueMetical = "MZN", a.MadagascarAriary = "MGA", a.MacedoniaDenar = "MKD", a.MexicoPeso = "MXN", a.MalaysiaRinggit = "MYR", a.MyanmarKyat = "MMK", a.MicronesiaFederatedStatesDollar = "USD", a.NicaraguaCordoba = "NIO", a.NamibiaDollar = "NAD", a.NetherlandsAntillesGuilder = "ANG", a.NewCaledoniaFranc = "XPF", a.NigeriaNaira = "NGN", a.NicaraguaCordobaOro = "NIO", a.NigerCFAFranc = "XOF", a.NorwayKrone = "NOK", a.NepalRupee = "NPR", a.NewZealandDollar = "NZD", a.OmanRial = "OMR", a.PanamaBalboa = "PAB", a.PeruNuevoSol = "PEN", a.PapuaNewGuineaKina = "PGK", a.PhilippinesPeso = "PHP", a.PakistanRupee = "PKR", a.PeruNuevo = "PEN", a.PolandZloty = "PLN", a.ParaguayGuarani = "PYG", a.QatarRial = "QAR", a.RomaniaNewLeu = "RON", a.SerbiaDinar = "RSD", a.SriLankaRupee = "LKR", a.RussiaRuble = "RUB", a.RwandaFranc = "RWF", a.SaudiArabiaRiyal = "SAR", a.SlovakiaKoruna = "SKK", a.SloveniaTolar = "SIT", a.SolomonIslandsDollar = "SBD", a.SeychellesRupee = "SCR", a.SudanPound = "SDG", a.SwedenKrona = "SEK", a.SingaporeDollar = "SGD", a.SaintHelenaPound = "SHP", a.SierraLeoneLeone = "SLL", a.SomaliaShilling = "SOS", a.SurinameDollar = "SRD", a.SintMaartenPound = "SXD", a.SyriaPound = "SYP", a.SwazilandLilangeni = "SZL", a.SwitzerlandFranc = "CHF", a.ThailandBaht = "THB", a.TajikistanSomoni = "TJS", a.TurkmenistanManat = "TMT", a.TunisiaDinar = "TND", a.TongaPaanga = "TOP", a.TurkeyLira = "TRY", a.TrinidadAndTobagoDollar = "TTD", a.TaiwanNewDollar = "TWD", a.TanzaniaShilling = "TZS", a.UnitedArabEmiratesDirham = "AED", a.UkraineHryvnia = "UAH", a.UgandaShilling = "UGX", a.UnitedKingdomPound = "GBP", a.UnitedStatesDollar = "USD", a.UruguayPeso = "UYU", a.UzbekistanSom = "UZS", a.VenezuelaBolivar = "VEF", a.VietnamDong = "VND", a.VanuatuVatu = "VUV", a.SamoaTala = "WST", a.YemenRial = "YER", a.SouthAfricaRand = "ZAR", a.ZambiaKwacha = "ZMW", a.ZimbabweDollar = "ZWL";
})(l$2 || (l$2 = {}));
({ AfghanistanAfghani: { code: l$2.AfghanistanAfghani, countries: [r$3.Afghanistan], decimal_digits: 2, decimal_separator: ".", name: "Afghan Afghani", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u060B", symbol_native: "\u060B", symbol_placement: "before", thousands_separator: "," }, AlbaniaLek: { code: l$2.AlbaniaLek, countries: [r$3.Albania], decimal_digits: 2, decimal_separator: ",", name: "Albanian Lek", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Lek", symbol_native: "Lek", symbol_placement: "before", thousands_separator: "." }, AlgeriaDinar: { code: l$2.AlgeriaDinar, countries: [r$3.Algeria], decimal_digits: 2, decimal_separator: ".", name: "Algerian Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u062F.\u062C", symbol_native: "\u062F.\u062C", symbol_placement: "before", thousands_separator: "," }, ArgentinaPeso: { code: l$2.ArgentinaPeso, countries: [r$3.Argentina], decimal_digits: 2, decimal_separator: ".", name: "Argentine Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, ArmeniaDram: { code: l$2.ArmeniaDram, countries: [r$3.Armenia], decimal_digits: 2, decimal_separator: ",", name: "Armenian Dram", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0564\u0580.", symbol_native: "\u0564\u0580.", symbol_placement: "before", thousands_separator: "." }, ArubaFlorin: { code: l$2.ArubaFlorin, countries: [r$3.Aruba], decimal_digits: 2, decimal_separator: ".", name: "Aruban Florin", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0192", symbol_native: "\u0192", symbol_placement: "before", thousands_separator: "," }, AustraliaDollar: { code: l$2.AustraliaDollar, countries: [r$3.Australia], decimal_digits: 2, decimal_separator: ".", name: "Australian Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, AzerbaijanManat: { code: l$2.AzerbaijanNewManat, countries: [r$3.Azerbaijan], decimal_digits: 2, decimal_separator: ".", name: "Azerbaijani Manat", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u043C\u0430\u043D", symbol_native: "\u043C\u0430\u043D", symbol_placement: "before", thousands_separator: "," }, BahrainDinar: { code: l$2.BahrainDinar, countries: [r$3.Bahrain], decimal_digits: 3, decimal_separator: ".", name: "Bahraini Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: ".\u062F.\u0628", symbol_native: ".\u062F.\u0628", symbol_placement: "before", thousands_separator: "," }, BangladeshTaka: { code: l$2.BangladeshTaka, countries: [r$3.Bangladesh], decimal_digits: 2, decimal_separator: ".", name: "Bangladeshi Taka", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u09F3", symbol_native: "\u09F3", symbol_placement: "before", thousands_separator: "," }, BarbadosDollar: { code: l$2.BarbadosDollar, countries: [r$3.Barbados], decimal_digits: 2, decimal_separator: ".", name: "Barbadian Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, BelarusRuble: { code: l$2.BelarusRuble, countries: [r$3.Belarus], decimal_digits: 2, decimal_separator: ".", name: "Belarusian Ruble", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Br", symbol_native: "Br", symbol_placement: "before", thousands_separator: "." }, BelizeDollar: { code: l$2.BelizeDollar, countries: [r$3.Belize], decimal_digits: 2, decimal_separator: ".", name: "Belize Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "BZ$", symbol_native: "BZ$", symbol_placement: "before", thousands_separator: "," }, BermudaDollar: { code: l$2.BermudaDollar, countries: [r$3.Bermuda], decimal_digits: 2, decimal_separator: ".", name: "Bermudian Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, BoliviaBoliviano: { code: l$2.BoliviaBoliviano, countries: [r$3.Bolivia], decimal_digits: 2, decimal_separator: ".", name: "Bolivian Boliviano", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$b", symbol_native: "$b", symbol_placement: "before", thousands_separator: "," }, BosniaAndHerzegovinaConvertibleMarka: { code: l$2.BosniaAndHerzegovinaConvertibleMark, countries: [r$3.BosniaAndHerzegovina], decimal_digits: 2, decimal_separator: ",", name: "Bosnia and Herzegovina Convertible Marka", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "KM", symbol_native: "KM", symbol_placement: "before", thousands_separator: "." }, BotswanaPula: { code: l$2.BotswanaPula, countries: [r$3.Botswana], decimal_digits: 2, decimal_separator: ".", name: "Botswana Pula", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "P", symbol_native: "P", symbol_placement: "before", thousands_separator: "," }, BrazilReal: { code: l$2.BrazilReal, countries: [r$3.Brazil], decimal_digits: 2, decimal_separator: ",", name: "Brazilian Real", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "R$", symbol_native: "R$", symbol_placement: "before", thousands_separator: "." }, BruneiDollar: { code: l$2.BruneiDollar, countries: [r$3.Brunei], decimal_digits: 2, decimal_separator: ".", name: "Brunei Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, BulgariaLev: { code: l$2.BulgariaLev, countries: [r$3.Bulgaria], decimal_digits: 2, decimal_separator: ".", name: "Bulgarian Lev", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u043B\u0432", symbol_native: "\u043B\u0432", symbol_placement: "before", thousands_separator: "." }, BurundiFranc: { code: l$2.BurundiFranc, countries: [r$3.Burundi], decimal_digits: 0, decimal_separator: ".", name: "Burundian Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "FBu", symbol_native: "FBu", symbol_placement: "before", thousands_separator: "," }, CambodiaRiel: { code: l$2.CambodiaRiel, countries: [r$3.Cambodia], decimal_digits: 2, decimal_separator: ",", name: "Cambodian Riel", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u17DB", symbol_native: "\u17DB", symbol_placement: "before", thousands_separator: "." }, CanadaDollar: { code: l$2.CanadaDollar, countries: [r$3.Canada], decimal_digits: 2, decimal_separator: ".", name: "Canadian Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, CapeVerdeEscudo: { code: l$2.CapeVerdeEscudo, countries: [r$3.CapeVerde], decimal_digits: 2, decimal_separator: ".", name: "Cape Verde Escudo", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Esc", symbol_native: "Esc", symbol_placement: "before", thousands_separator: "," }, CaymanIslandsDollar: { code: l$2.CaymanIslandsDollar, countries: [r$3.CaymanIslands], decimal_digits: 2, decimal_separator: ".", name: "Cayman Islands Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, ChilePeso: { code: l$2.ChilePeso, countries: [r$3.Chile], decimal_digits: 0, decimal_separator: ".", name: "Chilean Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, ChinaYuanRenminbi: { code: l$2.ChinaYuan, countries: [r$3.China], decimal_digits: 2, decimal_separator: ".", name: "Chinese Yuan", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA5", symbol_native: "\xA5", symbol_placement: "before", thousands_separator: "," }, ColombiaPeso: { code: l$2.ColombiaPeso, countries: [r$3.Colombia], decimal_digits: 2, decimal_separator: ".", name: "Colombian Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, ComorosFranc: { code: l$2.ComorosFranc, countries: [r$3.Comoros], decimal_digits: 0, decimal_separator: ".", name: "Comoros Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "CF", symbol_native: "CF", symbol_placement: "before", thousands_separator: "," }, CostaRicaColon: { code: l$2.CostaRicaColon, countries: [r$3.CostaRica], decimal_digits: 2, decimal_separator: ".", name: "Costa Rican Colon", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A1", symbol_native: "\u20A1", symbol_placement: "before", thousands_separator: "," }, CroatiaKuna: { code: l$2.CroatiaKuna, countries: [r$3.Croatia], decimal_digits: 2, decimal_separator: ",", name: "Croatian Kuna", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kn", symbol_native: "kn", symbol_placement: "before", thousands_separator: "." }, CubaConvertiblePeso: { code: l$2.CubaConvertiblePeso, countries: [r$3.Cuba], decimal_digits: 2, decimal_separator: ",", name: "Cuba Convertible Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, CubaPeso: { code: l$2.CubaPeso, countries: [r$3.Cuba], decimal_digits: 2, decimal_separator: ",", name: "Cuba Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, CyprusPound: { code: l$2.CyprusPound, countries: [r$3.Cyprus], decimal_digits: 2, decimal_separator: ",", name: "Cyprus Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, CzechRepublicKoruna: { code: l$2.CzechRepublicKoruna, countries: [r$3.CzechRepublic], decimal_digits: 2, decimal_separator: ",", name: "Czech Republic Koruna", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "K\u010D", symbol_native: "K\u010D", symbol_placement: "before", thousands_separator: "." }, DenmarkKrone: { code: l$2.DenmarkKrone, countries: [r$3.Denmark], decimal_digits: 2, decimal_separator: ",", name: "Denmark Krone", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, DjiboutiFranc: { code: l$2.DjiboutiFranc, countries: [r$3.Djibouti], decimal_digits: 0, decimal_separator: ".", name: "Djibouti Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Fdj", symbol_native: "Fdj", symbol_placement: "before", thousands_separator: "," }, DominicanRepublicPeso: { code: l$2.DominicanRepublicPeso, countries: [r$3.DominicanRepublic], decimal_digits: 2, decimal_separator: ",", name: "Dominican Republic Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "RD$", symbol_native: "RD$", symbol_placement: "before", thousands_separator: "." }, EastCaribbeanDollar: { code: l$2.EastCaribbeanDollar, countries: [r$3.AntiguaAndBarbuda, r$3.Dominica, r$3.Grenada, r$3.SaintKittsAndNevis, r$3.SaintLucia, r$3.SaintVincentAndTheGrenadines], decimal_digits: 2, decimal_separator: ".", name: "East Caribbean Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "," }, EgyptPound: { code: l$2.EgyptPound, countries: [r$3.Egypt], decimal_digits: 2, decimal_separator: ".", name: "Egypt Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "," }, ElSalvadorColon: { code: l$2.ElSalvadorColon, countries: [r$3.ElSalvador], decimal_digits: 2, decimal_separator: ",", name: "El Salvador Colon", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A1", symbol_native: "\u20A1", symbol_placement: "before", thousands_separator: "." }, EquatorialGuineaEkwele: { code: l$2.EquatorialGuineaEkwele, countries: [r$3.EquatorialGuinea], decimal_digits: 0, decimal_separator: ".", name: "Equatorial Guinea Ekwele", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "GQE", symbol_native: "GQE", symbol_placement: "before", thousands_separator: "," }, EritreaNakfa: { code: l$2.EritreaNakfa, countries: [r$3.Eritrea], decimal_digits: 2, decimal_separator: ",", name: "Eritrea Nakfa", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Nfk", symbol_native: "Nfk", symbol_placement: "before", thousands_separator: "." }, EstoniaKroon: { code: l$2.EstoniaKroon, countries: [r$3.Estonia], decimal_digits: 2, decimal_separator: ",", name: "Estonia Kroon", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, EthiopiaBirr: { code: l$2.EthiopiaBirr, countries: [r$3.Ethiopia], decimal_digits: 2, decimal_separator: ",", name: "Ethiopia Birr", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Br", symbol_native: "Br", symbol_placement: "before", thousands_separator: "." }, Euro: { code: l$2.Euro, countries: [r$3.Andorra, r$3.Austria, r$3.Belgium, r$3.Cyprus, r$3.Estonia, r$3.Finland, r$3.France, r$3.Germany, r$3.Greece, r$3.Ireland, r$3.Italy, r$3.Latvia, r$3.Lithuania, r$3.Luxembourg, r$3.Malta, r$3.Monaco, r$3.Netherlands, r$3.Portugal, r$3.Spain, r$3.Sweden, r$3.UnitedKingdom], decimal_digits: 2, decimal_separator: ",", name: "Euro", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AC", symbol_native: "\u20AC", symbol_placement: "before", thousands_separator: "." }, FalklandIslandsPound: { code: l$2.FalklandIslandsPound, countries: [r$3.FalklandIslands], decimal_digits: 2, decimal_separator: ",", name: "Equatorial Guinea Ekwele", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, FijiDollar: { code: l$2.FijiDollar, countries: [r$3.Fiji], decimal_digits: 2, decimal_separator: ",", name: "Fiji Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, GambiaDalasi: { code: l$2.GambiaDalasi, countries: [r$3.Gambia], decimal_digits: 2, decimal_separator: ",", name: "Gambia Dalasi", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "D", symbol_native: "D", symbol_placement: "before", thousands_separator: "." }, GeorgiaLari: { code: l$2.GeorgiaLari, countries: [r$3.Georgia], decimal_digits: 2, decimal_separator: ",", name: "Georgia Lari", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20BE", symbol_native: "\u20BE", symbol_placement: "before", thousands_separator: "." }, GhanaCedi: { code: l$2.GhanaCedi, countries: [r$3.Ghana], decimal_digits: 2, decimal_separator: ",", name: "Ghana Cedi", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B5", symbol_native: "\u20B5", symbol_placement: "before", thousands_separator: "." }, GibraltarPound: { code: l$2.GibraltarPound, countries: [r$3.Gibraltar], decimal_digits: 2, decimal_separator: ",", name: "Gibraltar Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, GuatemalaQuetzal: { code: l$2.GuatemalaQuetzal, countries: [r$3.Guatemala], decimal_digits: 2, decimal_separator: ",", name: "Guatemala Quetzal", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Q", symbol_native: "Q", symbol_placement: "before", thousands_separator: "." }, GuernseyPound: { code: l$2.GuernseyPound, countries: [r$3.Guernsey], decimal_digits: 2, decimal_separator: ",", name: "Guernsey Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, GuineaBissauPeso: { code: l$2.GuineaBissauPeso, countries: [r$3.GuineaBissau], decimal_digits: 2, decimal_separator: ",", name: "Guinea-Bissau Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B5", symbol_native: "\u20B5", symbol_placement: "before", thousands_separator: "." }, GuyanaDollar: { code: l$2.GuyanaDollar, countries: [r$3.Guyana], decimal_digits: 2, decimal_separator: ",", name: "Guyana Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, HaitiGourde: { code: l$2.HaitiGourde, countries: [r$3.Haiti], decimal_digits: 2, decimal_separator: ",", name: "Haiti Gourde", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "G", symbol_native: "G", symbol_placement: "before", thousands_separator: "." }, HondurasLempira: { code: l$2.HondurasLempira, countries: [r$3.Honduras], decimal_digits: 2, decimal_separator: ",", name: "Honduras Lempira", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "L", symbol_native: "L", symbol_placement: "before", thousands_separator: "." }, HongKongDollar: { code: l$2.HongKongDollar, countries: [r$3.HongKong], decimal_digits: 2, decimal_separator: ",", name: "Hong Kong Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, HungaryForint: { code: l$2.HungaryForint, countries: [r$3.Hungary], decimal_digits: 2, decimal_separator: ",", name: "Hungary Forint", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Ft", symbol_native: "Ft", symbol_placement: "before", thousands_separator: "." }, IcelandKrona: { code: l$2.IcelandKrona, countries: [r$3.Iceland], decimal_digits: 0, decimal_separator: ",", name: "Iceland Krona", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, IndianRupee: { code: l$2.IndiaRupee, countries: [r$3.India, r$3.Bhutan], decimal_digits: 2, decimal_separator: ",", name: "Indian Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B9", symbol_native: "\u20B9", symbol_placement: "before", thousands_separator: "." }, IndonesiaRupiah: { code: l$2.IndonesiaRupiah, countries: [r$3.Indonesia], decimal_digits: 0, decimal_separator: ",", name: "Indonesia Rupiah", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Rp", symbol_native: "Rp", symbol_placement: "before", thousands_separator: "." }, IranRial: { code: l$2.IranRial, countries: [r$3.Iran], decimal_digits: 0, decimal_separator: ",", name: "Iran Rial", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, IsleOfManPound: { code: l$2.IsleOfManPound, countries: [r$3.IsleOfMan], decimal_digits: 2, decimal_separator: ",", name: "Isle of Man Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, IsraeliShekel: { code: l$2.IsraelNewShekel, countries: [r$3.Israel], decimal_digits: 2, decimal_separator: ",", name: "Israeli Shekel", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AA", symbol_native: "\u20AA", symbol_placement: "before", thousands_separator: "." }, JamaicaDollar: { code: l$2.JamaicaDollar, countries: [r$3.Jamaica], decimal_digits: 2, decimal_separator: ",", name: "Jamaica Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "J$", symbol_native: "J$", symbol_placement: "before", thousands_separator: "." }, JapanYen: { code: l$2.JapanYen, countries: [r$3.Japan], decimal_digits: 0, decimal_separator: ",", name: "Japan Yen", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA5", symbol_native: "\uFFE5", symbol_placement: "before", thousands_separator: "." }, JerseyPound: { code: l$2.JerseyPound, countries: [r$3.Jersey], decimal_digits: 2, decimal_separator: ",", name: "Jersey Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, JordanDinar: { code: l$2.JordanDinar, countries: [r$3.Jordan], decimal_digits: 3, decimal_separator: ",", name: "Jordan Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "JD", symbol_native: "JD", symbol_placement: "before", thousands_separator: "." }, KazakhstanTenge: { code: l$2.KazakhstanTenge, countries: [r$3.Kazakhstan], decimal_digits: 2, decimal_separator: ",", name: "Kazakhstan Tenge", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B8", symbol_native: "\u20B8", symbol_placement: "before", thousands_separator: "." }, KenyaShilling: { code: l$2.KenyaShilling, countries: [r$3.Kenya], decimal_digits: 2, decimal_separator: ",", name: "Kenya Shilling", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "KSh", symbol_native: "KSh", symbol_placement: "before", thousands_separator: "." }, KuwaitDinar: { code: l$2.KuwaitDinar, countries: [r$3.Kuwait], decimal_digits: 3, decimal_separator: ",", name: "Kuwait Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "KD", symbol_native: "KD", symbol_placement: "before", thousands_separator: "." }, KyrgyzstanSom: { code: l$2.KyrgyzstanSom, countries: [r$3.Kyrgyzstan], decimal_digits: 2, decimal_separator: ",", name: "Kyrgyzstan Som", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "KGS", symbol_native: "KGS", symbol_placement: "before", thousands_separator: "." }, LaosKip: { code: l$2.LaosKip, countries: [r$3.Laos], decimal_digits: 0, decimal_separator: ",", name: "Laos Kip", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AD", symbol_native: "\u20AD", symbol_placement: "before", thousands_separator: "." }, LatviaLats: { code: l$2.LatviaLats, countries: [r$3.Latvia], decimal_digits: 2, decimal_separator: ",", name: "Latvia Lat", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Ls", symbol_native: "Ls", symbol_placement: "before", thousands_separator: "." }, LebanonPound: { code: l$2.LebanonPound, countries: [r$3.Lebanon], decimal_digits: 0, decimal_separator: ",", name: "Lebanon Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, LesothoLoti: { code: l$2.LesothoLoti, countries: [r$3.Lesotho], decimal_digits: 2, decimal_separator: ",", name: "Lesotho Loti", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "M", symbol_native: "M", symbol_placement: "before", thousands_separator: "." }, LiberiaDollar: { code: l$2.LiberiaDollar, countries: [r$3.Liberia], decimal_digits: 2, decimal_separator: ",", name: "Liberia Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, LibyanDinar: { code: l$2.LibyanDinar, countries: [r$3.Libya], decimal_digits: 3, decimal_separator: ",", name: "Libyan Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "LD", symbol_native: "LD", symbol_placement: "before", thousands_separator: "." }, LithuaniaLitas: { code: l$2.LithuaniaLitas, countries: [r$3.Lithuania], decimal_digits: 2, decimal_separator: ",", name: "Lithuania Litas", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Lt", symbol_native: "Lt", symbol_placement: "before", thousands_separator: "." }, MacauPataca: { code: l$2.MacauPataca, countries: [r$3.Macau], decimal_digits: 2, decimal_separator: ",", name: "Macau Pataca", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "MOP$", symbol_native: "MOP$", symbol_placement: "before", thousands_separator: "." }, MacedoniaDenar: { code: l$2.MacedoniaDenar, countries: [r$3.NorthMacedonia], decimal_digits: 2, decimal_separator: ",", name: "Macedonia Denar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0434\u0435\u043D", symbol_native: "\u0434\u0435\u043D", symbol_placement: "before", thousands_separator: "." }, MadagascarAriary: { code: l$2.MadagascarAriary, countries: [r$3.Madagascar], decimal_digits: 0, decimal_separator: ",", name: "Madagascar Ariary", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Ar", symbol_native: "Ar", symbol_placement: "before", thousands_separator: "." }, MalawiKwacha: { code: l$2.MalawiKwacha, countries: [r$3.Malawi], decimal_digits: 2, decimal_separator: ",", name: "Malawi Kwacha", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "MK", symbol_native: "MK", symbol_placement: "before", thousands_separator: "." }, MalaysiaRinggit: { code: l$2.MalaysiaRinggit, countries: [r$3.Malaysia], decimal_digits: 2, decimal_separator: ",", name: "Malaysia Ringgit", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "RM", symbol_native: "RM", symbol_placement: "before", thousands_separator: "." }, MaldivesRufiyaa: { code: l$2.MaldivesRufiyaa, countries: [r$3.Maldives], decimal_digits: 2, decimal_separator: ",", name: "Maldives Rufiyaa", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Rf", symbol_native: "Rf", symbol_placement: "before", thousands_separator: "." }, MaltaLira: { code: l$2.MaltaLira, countries: [r$3.Malta], decimal_digits: 2, decimal_separator: ",", name: "Malta Lira", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Lm", symbol_native: "Lm", symbol_placement: "before", thousands_separator: "." }, MauritiusRupee: { code: l$2.MauritiusRupee, countries: [r$3.Mauritius], decimal_digits: 2, decimal_separator: ",", name: "Mauritius Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, MexicoPeso: { code: l$2.MexicoPeso, countries: [r$3.Mexico], decimal_digits: 2, decimal_separator: ",", name: "Mexico Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, MoldovaLeu: { code: l$2.MoldovaLeu, countries: [r$3.Moldova], decimal_digits: 2, decimal_separator: ",", name: "Moldova Leu", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "L", symbol_native: "L", symbol_placement: "before", thousands_separator: "." }, MongoliaTughrik: { code: l$2.MongoliaTughrik, countries: [r$3.Mongolia], decimal_digits: 2, decimal_separator: ",", name: "Mongolia Tughrik", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AE", symbol_native: "\u20AE", symbol_placement: "before", thousands_separator: "." }, MoroccoDirham: { code: l$2.MoroccoDirham, countries: [r$3.Morocco], decimal_digits: 2, decimal_separator: ",", name: "Morocco Dirham", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "DH", symbol_native: "DH", symbol_placement: "before", thousands_separator: "." }, MozambiqueMetical: { code: l$2.MozambiqueMetical, countries: [r$3.Mozambique], decimal_digits: 2, decimal_separator: ",", name: "Mozambique Metical", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "MT", symbol_native: "MT", symbol_placement: "before", thousands_separator: "." }, MyanmarKyat: { code: l$2.MyanmarKyat, countries: [r$3.Myanmar], decimal_digits: 0, decimal_separator: ",", name: "Myanmar Kyat", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "K", symbol_native: "K", symbol_placement: "before", thousands_separator: "." }, NamibiaDollar: { code: l$2.NamibiaDollar, countries: [r$3.Namibia], decimal_digits: 2, decimal_separator: ",", name: "Namibia Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, NepalRupee: { code: l$2.NepalRupee, countries: [r$3.Nepal], decimal_digits: 2, decimal_separator: ",", name: "Nepal Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, NetherlandsAntillesGuilder: { code: l$2.NetherlandsAntillesGuilder, countries: [r$3.NetherlandsAntilles], decimal_digits: 2, decimal_separator: ",", name: "Netherlands Antilles Guilder", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0192", symbol_native: "\u0192", symbol_placement: "before", thousands_separator: "." }, NewCaledoniaFranc: { code: l$2.NewCaledoniaFranc, countries: [r$3.NewCaledonia], decimal_digits: 0, decimal_separator: ",", name: "New Caledonia Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A3", symbol_native: "\u20A3", symbol_placement: "before", thousands_separator: "." }, NewZealandDollar: { code: l$2.NewZealandDollar, countries: [r$3.NewZealand], decimal_digits: 2, decimal_separator: ",", name: "New Zealand Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, NicaraguaCordoba: { code: l$2.NicaraguaCordoba, countries: [r$3.Nicaragua], decimal_digits: 2, decimal_separator: ",", name: "Nicaragua Cordoba", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "C$", symbol_native: "C$", symbol_placement: "before", thousands_separator: "." }, NigerCFAFranc: { code: l$2.NigerCFAFranc, countries: [r$3.Niger], decimal_digits: 0, decimal_separator: ",", name: "Niger CFA Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "CFA", symbol_native: "CFA", symbol_placement: "before", thousands_separator: "." }, NigeriaNaira: { code: l$2.NigeriaNaira, countries: [r$3.Nigeria], decimal_digits: 2, decimal_separator: ",", name: "Nigeria Naira", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A6", symbol_native: "\u20A6", symbol_placement: "before", thousands_separator: "." }, NorthKoreaWon: { code: l$2.NorthKoreaWon, countries: [r$3.NorthKorea], decimal_digits: 0, decimal_separator: ",", name: "North Korea Won", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A9", symbol_native: "\u20A9", symbol_placement: "before", thousands_separator: "." }, NorwayKrone: { code: l$2.NorwayKrone, countries: [r$3.Norway], decimal_digits: 2, decimal_separator: ",", name: "Norway Krone", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, OmanRial: { code: l$2.OmanRial, countries: [r$3.Oman], decimal_digits: 3, decimal_separator: ",", name: "Oman Rial", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, PakistanRupee: { code: l$2.PakistanRupee, countries: [r$3.Pakistan], decimal_digits: 2, decimal_separator: ",", name: "Pakistan Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, PanamaBalboa: { code: l$2.PanamaBalboa, countries: [r$3.Panama], decimal_digits: 2, decimal_separator: ",", name: "Panama Balboa", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "B/.", symbol_native: "B/.", symbol_placement: "before", thousands_separator: "." }, ParaguayGuarani: { code: l$2.ParaguayGuarani, countries: [r$3.Paraguay], decimal_digits: 0, decimal_separator: ",", name: "Paraguay Guarani", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Gs", symbol_native: "Gs", symbol_placement: "before", thousands_separator: "." }, PeruvianNuevo: { code: l$2.PeruNuevo, countries: [r$3.Peru], decimal_digits: 2, decimal_separator: ",", name: "Peruvian Nuevo", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "S/.", symbol_native: "S/.", symbol_placement: "before", thousands_separator: "." }, PhilippinesPeso: { code: l$2.PhilippinesPeso, countries: [r$3.Philippines], decimal_digits: 2, decimal_separator: ",", name: "Philippines Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B1", symbol_native: "\u20B1", symbol_placement: "before", thousands_separator: "." }, PolandZloty: { code: l$2.PolandZloty, countries: [r$3.Poland], decimal_digits: 2, decimal_separator: ",", name: "Poland Zloty", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "z\u0142", symbol_native: "z\u0142", symbol_placement: "before", thousands_separator: "." }, QatarRial: { code: l$2.QatarRial, countries: [r$3.Qatar], decimal_digits: 2, decimal_separator: ",", name: "Qatar Rial", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, RomaniaNewLeu: { code: l$2.RomaniaNewLeu, countries: [r$3.Romania], decimal_digits: 2, decimal_separator: ",", name: "Romania New Leu", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "lei", symbol_native: "lei", symbol_placement: "before", thousands_separator: "." }, RussiaRuble: { code: l$2.RussiaRuble, countries: [r$3.RussianFederation], decimal_digits: 2, decimal_separator: ",", name: "Russia Ruble", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20BD", symbol_native: "\u20BD", symbol_placement: "before", thousands_separator: "." }, RwandaFranc: { code: l$2.RwandaFranc, countries: [r$3.Rwanda], decimal_digits: 0, decimal_separator: ",", name: "Rwanda Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "RF", symbol_native: "RF", symbol_placement: "before", thousands_separator: "." }, SaudiArabiaRiyal: { code: l$2.SaudiArabiaRiyal, countries: [r$3.SaudiArabia], decimal_digits: 2, decimal_separator: ",", name: "Saudi Arabia Riyal", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, SerbiaDinar: { code: l$2.SerbiaDinar, countries: [r$3.Serbia], decimal_digits: 0, decimal_separator: ",", name: "Serbia Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0414\u0438\u043D.", symbol_native: "\u0414\u0438\u043D.", symbol_placement: "before", thousands_separator: "." }, SeychellesRupee: { code: l$2.SeychellesRupee, countries: [r$3.Seychelles], decimal_digits: 2, decimal_separator: ",", name: "Seychelles Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, SingaporeDollar: { code: l$2.SingaporeDollar, countries: [r$3.Singapore], decimal_digits: 2, decimal_separator: ",", name: "Singapore Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, SlovakiaKoruna: { code: l$2.SlovakiaKoruna, countries: [r$3.Slovakia], decimal_digits: 2, decimal_separator: ",", name: "Slovakia Koruna", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Sk", symbol_native: "Sk", symbol_placement: "before", thousands_separator: "." }, SloveniaTolar: { code: l$2.SloveniaTolar, countries: [r$3.Slovenia], decimal_digits: 2, decimal_separator: ",", name: "Slovenia Tolar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "SIT", symbol_native: "SIT", symbol_placement: "before", thousands_separator: "." }, SolomonIslandsDollar: { code: l$2.SolomonIslandsDollar, countries: [r$3.SolomonIslands], decimal_digits: 2, decimal_separator: ",", name: "Solomon Islands Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, SomaliaShilling: { code: l$2.SomaliaShilling, countries: [r$3.Somalia], decimal_digits: 0, decimal_separator: ",", name: "Somalia Shilling", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "S", symbol_native: "S", symbol_placement: "before", thousands_separator: "." }, SouthAfricaRand: { code: l$2.SouthAfricaRand, countries: [r$3.SouthAfrica], decimal_digits: 2, decimal_separator: ",", name: "South Africa Rand", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "R", symbol_native: "R", symbol_placement: "before", thousands_separator: "." }, SouthKoreaWon: { code: l$2.SouthKoreaWon, countries: [r$3.SouthKorea], decimal_digits: 0, decimal_separator: ",", name: "South Korea Won", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A9", symbol_native: "\u20A9", symbol_placement: "before", thousands_separator: "." }, SriLankaRupee: { code: l$2.SriLankaRupee, countries: [r$3.SriLanka], decimal_digits: 2, decimal_separator: ",", name: "Sri Lanka Rupee", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20A8", symbol_native: "\u20A8", symbol_placement: "before", thousands_separator: "." }, SudanPound: { code: l$2.SudanPound, countries: [r$3.Sudan], decimal_digits: 2, decimal_separator: ",", name: "Sudan Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, SurinameDollar: { code: l$2.SurinameDollar, countries: [r$3.Suriname], decimal_digits: 2, decimal_separator: ",", name: "Suriname Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, SwazilandLilangeni: { code: l$2.SwazilandLilangeni, countries: [r$3.Swaziland], decimal_digits: 2, decimal_separator: ",", name: "Swaziland Lilangeni", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "E", symbol_native: "E", symbol_placement: "before", thousands_separator: "." }, SwedenKrona: { code: l$2.SwedenKrona, countries: [r$3.Sweden], decimal_digits: 2, decimal_separator: ",", name: "Sweden Krona", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "kr", symbol_native: "kr", symbol_placement: "before", thousands_separator: "." }, SwitzerlandFranc: { code: l$2.SwitzerlandFranc, countries: [r$3.Switzerland], decimal_digits: 2, decimal_separator: ",", name: "Switzerland Franc", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "CHF", symbol_native: "CHF", symbol_placement: "before", thousands_separator: "." }, SyriaPound: { code: l$2.SyriaPound, countries: [r$3.Syria], decimal_digits: 2, decimal_separator: ",", name: "Syria Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, TaiwanNewDollar: { code: l$2.TaiwanNewDollar, countries: [r$3.Taiwan], decimal_digits: 2, decimal_separator: ",", name: "Taiwan New Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "NT$", symbol_native: "NT$", symbol_placement: "before", thousands_separator: "." }, TajikistanSomoni: { code: l$2.TajikistanSomoni, countries: [r$3.Tajikistan], decimal_digits: 2, decimal_separator: ",", name: "Tajikistan Somoni", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "TJS", symbol_native: "TJS", symbol_placement: "before", thousands_separator: "." }, TanzaniaShilling: { code: l$2.TanzaniaShilling, countries: [r$3.Tanzania], decimal_digits: 2, decimal_separator: ",", name: "Tanzania Shilling", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "TSh", symbol_native: "TSh", symbol_placement: "before", thousands_separator: "." }, ThailandBaht: { code: l$2.ThailandBaht, countries: [r$3.Thailand], decimal_digits: 2, decimal_separator: ",", name: "Thailand Baht", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u0E3F", symbol_native: "\u0E3F", symbol_placement: "before", thousands_separator: "." }, TunisiaDinar: { code: l$2.TunisiaDinar, countries: [r$3.Tunisia], decimal_digits: 3, decimal_separator: ",", name: "Tunisia Dinar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u062F.\u062A", symbol_native: "\u062F.\u062A", symbol_placement: "before", thousands_separator: "." }, TurkeyLira: { code: l$2.TurkeyLira, countries: [r$3.Turkey], decimal_digits: 2, decimal_separator: ",", name: "Turkey Lira", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20BA", symbol_native: "\u20BA", symbol_placement: "before", thousands_separator: "." }, TurkmenistanManat: { code: l$2.TurkmenistanManat, countries: [r$3.Turkmenistan], decimal_digits: 2, decimal_separator: ",", name: "Turkmenistan Manat", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "m", symbol_native: "m", symbol_placement: "before", thousands_separator: "." }, UgandaShilling: { code: l$2.UgandaShilling, countries: [r$3.Uganda], decimal_digits: 0, decimal_separator: ",", name: "Uganda Shilling", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "USh", symbol_native: "USh", symbol_placement: "before", thousands_separator: "." }, UkraineHryvnia: { code: l$2.UkraineHryvnia, countries: [r$3.Ukraine], decimal_digits: 2, decimal_separator: ",", name: "Ukraine Hryvnia", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20B4", symbol_native: "\u20B4", symbol_placement: "before", thousands_separator: "." }, UnitedArabEmiratesDirham: { code: l$2.UnitedArabEmiratesDirham, countries: [r$3.UnitedArabEmirates], decimal_digits: 2, decimal_separator: ",", name: "United Arab Emirates Dirham", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u062F.\u0625", symbol_native: "\u062F.\u0625", symbol_placement: "before", thousands_separator: "." }, UnitedKingdomPound: { code: l$2.UnitedKingdomPound, countries: [r$3.UnitedKingdom], decimal_digits: 2, decimal_separator: ",", name: "United Kingdom Pound", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\xA3", symbol_native: "\xA3", symbol_placement: "before", thousands_separator: "." }, UnitedStatesDollar: { code: l$2.UnitedStatesDollar, countries: [r$3.UnitedStates], decimal_digits: 2, decimal_separator: ",", name: "United States Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$", symbol_native: "$", symbol_placement: "before", thousands_separator: "." }, UruguayPeso: { code: l$2.UruguayPeso, countries: [r$3.Uruguay], decimal_digits: 2, decimal_separator: ",", name: "Uruguay Peso", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "$U", symbol_native: "$U", symbol_placement: "before", thousands_separator: "." }, UzbekistanSom: { code: l$2.UzbekistanSom, countries: [r$3.Uzbekistan], decimal_digits: 2, decimal_separator: ",", name: "Uzbekistan Som", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "UZS", symbol_native: "UZS", symbol_placement: "before", thousands_separator: "." }, VanuatuVatu: { code: l$2.VanuatuVatu, countries: [r$3.Vanuatu], decimal_digits: 0, decimal_separator: ",", name: "Vanuatu Vatu", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "VT", symbol_native: "VT", symbol_placement: "before", thousands_separator: "." }, VenezuelaBolivar: { code: l$2.VenezuelaBolivar, countries: [r$3.Venezuela], decimal_digits: 2, decimal_separator: ",", name: "Venezuela Bolivar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "Bs. F", symbol_native: "Bs. F", symbol_placement: "before", thousands_separator: "." }, VietnamDong: { code: l$2.VietnamDong, countries: [r$3.Vietnam], decimal_digits: 0, decimal_separator: ",", name: "Vietnam Dong", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AB", symbol_native: "\u20AB", symbol_placement: "before", thousands_separator: "." }, YemenRial: { code: l$2.YemenRial, countries: [r$3.Yemen], decimal_digits: 2, decimal_separator: ",", name: "Yemen Rial", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\uFDFC", symbol_native: "\uFDFC", symbol_placement: "before", thousands_separator: "." }, ZambiaKwacha: { code: l$2.ZambiaKwacha, countries: [r$3.Zambia], decimal_digits: 2, decimal_separator: ",", name: "Zambia Kwacha", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "ZK", symbol_native: "ZK", symbol_placement: "before", thousands_separator: "." }, ZimbabweDollar: { code: l$2.ZimbabweDollar, countries: [r$3.Zimbabwe], decimal_digits: 2, decimal_separator: ",", name: "Zimbabwe Dollar", negative_sign: "-", positive_sign: "", rounding: 0, symbol: "\u20AB", symbol_native: "\u20AB", symbol_placement: "before", thousands_separator: "." } });
var Ki;
(function(a) {
  a.Bitcoin = "BTC", a.Ethereum = "ETH", a.Litecoin = "LTC", a.Ripple = "XRP", a.Dash = "DASH", a.Zcash = "ZEC", a.Dogecoin = "DOGE", a.Monero = "XMR", a.BitcoinCash = "BCH", a.EOS = "EOS", a.Binance = "BNB", a.Stellar = "XLM", a.Cardano = "ADA", a.IOTA = "IOTA", a.Tezos = "XTZ", a.NEO = "NEO", a.TRON = "TRX", a.EOSClassic = "EOSC", a.Ontology = "ONT", a.VeChain = "VEN", a.QTUM = "QTUM", a.Lisk = "LSK", a.Waves = "WAVES", a.OmiseGO = "OMG", a.Zilliqa = "ZIL", a.BitcoinGold = "BTG", a.Decred = "DCR", a.Stratis = "STRAT", a.Populous = "PPT", a.Augur = "REP", a.Golem = "GNT", a.Siacoin = "SC", a.BasicAttentionToken = "BAT", a.ZCoin = "XZC", a.StratisHedged = "SNT", a.VeChainHedged = "VEN", a.PowerLedger = "POWR", a.WavesHedged = "WAVE", a.ZilliqaHedged = "ZRX", a.BitcoinDiamond = "BCD", a.DigiByte = "DGB", a.DigiByteHedged = "DGB", a.Bytecoin = "BCN", a.BytecoinHedged = "BCN";
})(Ki || (Ki = {}));
var o;
(function(a) {
  a.Afrikaans = "af", a.Albanian = "sq", a.Amharic = "am", a.Arabic = "ar", a.Armenian = "hy", a.Azerbaijani = "az", a.Bashkir = "ba", a.Basque = "eu", a.Belarusian = "be", a.Bengali = "bn", a.Berber = "ber", a.Bhutani = "dz", a.Bihari = "bh", a.Bislama = "bi", a.Bosnian = "bs", a.Breten = "br", a.Bulgarian = "bg", a.Burmese = "my", a.Cantonese = "yue", a.Catalan = "ca", a.Chinese = "zh", a.Chuvash = "cv", a.Corsican = "co", a.Croatian = "hr", a.Czech = "cs", a.Danish = "da", a.Dari = "prs", a.Divehi = "dv", a.Dutch = "nl", a.English = "en", a.Esperanto = "eo", a.Estonian = "et", a.Faroese = "fo", a.Farsi = "fa", a.Filipino = "fil", a.Finnish = "fi", a.French = "fr", a.Frisian = "fy", a.Galician = "gl", a.Georgian = "ka", a.German = "de", a.Greek = "el", a.Greenlandic = "kl", a.Gujarati = "gu", a.Haitian = "ht", a.Hausa = "ha", a.Hebrew = "he", a.Hindi = "hi", a.Hungarian = "hu", a.Icelandic = "is", a.Igbo = "ig", a.Indonesian = "id", a.Irish = "ga", a.Italian = "it", a.Japanese = "ja", a.Javanese = "jv", a.Kannada = "kn", a.Karelian = "krl", a.Kazakh = "kk", a.Khmer = "km", a.Komi = "kv", a.Konkani = "kok", a.Korean = "ko", a.Kurdish = "ku", a.Kyrgyz = "ky", a.Lao = "lo", a.Latin = "la", a.Latvian = "lv", a.Lithuanian = "lt", a.Luxembourgish = "lb", a.Ossetian = "os", a.Macedonian = "mk", a.Malagasy = "mg", a.Malay = "ms", a.Malayalam = "ml", a.Maltese = "mt", a.Maori = "mi", a.Marathi = "mr", a.Mari = "mhr", a.Mongolian = "mn", a.Montenegrin = "me", a.Nepali = "ne", a.NorthernSotho = "nso", a.Norwegian = "no", a.NorwegianBokmal = "nb", a.NorwegianNynorsk = "nn", a.Oriya = "or", a.Pashto = "ps", a.Persian = "fa", a.Polish = "pl", a.Portuguese = "pt", a.Punjabi = "pa", a.Quechua = "qu", a.Romanian = "ro", a.Russian = "ru", a.Sakha = "sah", a.Sami = "se", a.Samoan = "sm", a.Sanskrit = "sa", a.Scots = "gd", a.Serbian = "sr", a.SerbianCyrillic = "sr-Cyrl", a.Sesotho = "st", a.Shona = "sn", a.Sindhi = "sd", a.Sinhala = "si", a.Slovak = "sk", a.Slovenian = "sl", a.Somali = "so", a.Spanish = "es", a.Sudanese = "su", a.Sutu = "sx", a.Swahili = "sw", a.Swedish = "sv", a.Syriac = "syr", a.Tagalog = "tl", a.Tajik = "tg", a.Tamazight = "tmh", a.Tamil = "ta", a.Tatar = "tt", a.Telugu = "te", a.Thai = "th", a.Tibetan = "bo", a.Tsonga = "ts", a.Tswana = "tn", a.Turkish = "tr", a.Turkmen = "tk", a.Ukrainian = "uk", a.Urdu = "ur", a.Uzbek = "uz", a.Vietnamese = "vi", a.Welsh = "cy", a.Xhosa = "xh", a.Yiddish = "yi", a.Yoruba = "yo", a.Zulu = "zu";
})(o || (o = {}));
var e$1;
(function(a) {
  a.Afrikaans = "af", a.AfrikaansSouthAfrica = "af-ZA", a.Albanian = "sq", a.AlbanianAlbania = "sq-AL", a.Amharic = "am", a.AmharicEthiopia = "am-ET", a.Arabic = "ar", a.ArabicAlgeria = "ar-DZ", a.ArabicBahrain = "ar-BH", a.ArabicEgypt = "ar-EG", a.ArabicIraq = "ar-IQ", a.ArabicJordan = "ar-JO", a.ArabicKuwait = "ar-KW", a.ArabicLebanon = "ar-LB", a.ArabicLibya = "ar-LY", a.ArabicMorocco = "ar-MA", a.ArabicOman = "ar-OM", a.ArabicQatar = "ar-QA", a.ArabicSaudiArabia = "ar-SA", a.ArabicSyria = "ar-SY", a.ArabicTunisia = "ar-TN", a.ArabicUnitedArabEmirates = "ar-AE", a.ArabicYemen = "ar-YE", a.Armenian = "hy", a.ArmenianArmenia = "hy-AM", a.Azerbaijani = "az", a.AzerbaijaniAzerbaijan = "az-AZ", a.AzerbaijaniCyrillicAzerbaijan = "az-Cyrl-AZ", a.Bashkir = "ba", a.Basque = "eu", a.BasqueSpain = "eu-ES", a.Belarusian = "be", a.BelarusianBelarus = "be-BY", a.Bengali = "bn", a.BengaliBangladesh = "bn-BD", a.BengaliIndia = "bn-IN", a.Berber = "ber", a.Bhutani = "dz", a.BhutaniBhutan = "dz-BT", a.Bosnian = "bs", a.BosnianBosniaAndHerzegovina = "bs-BA", a.Breton = "br", a.Bulgarian = "bg", a.BulgarianBosniaAndHerzegovina = "bg-BG", a.BulgarianBulgaria = "bg-BG", a.Burmese = "my", a.BurmeseMyanmar = "my-MM", a.Cantonese = "yue", a.CantoneseHongKong = "yue-HK", a.Catalan = "ca", a.CatalanSpain = "ca-ES", a.Chechen = "ce", a.Cherokee = "chr", a.Chinese = "zh", a.ChineseSimplified = "zh-Hans", a.ChineseSimplifiedChina = "zh-Hans-CN", a.ChineseSimplifiedHongKong = "zh-Hans-HK", a.ChineseSimplifiedMacau = "zh-Hans-MO", a.ChineseSimplifiedSingapore = "zh-Hans-SG", a.ChineseTraditional = "zh-Hant", a.ChineseTraditionalHongKong = "zh-Hant-HK", a.ChineseTraditionalMacau = "zh-Hant-MO", a.ChineseTraditionalSingapore = "zh-Hant-SG", a.ChineseTraditionalTaiwan = "zh-Hant-TW", a.Chuvash = "cv", a.CorsicanFrance = "co-FR", a.Croatian = "hr", a.CroatianBosniaAndHerzegovina = "hr-BA", a.CroatianCroatia = "hr-HR", a.Czech = "cs", a.CzechCzechRepublic = "cs-CZ", a.Danish = "da", a.DanishDenmark = "da-DK", a.Dari = "prs", a.DariAfghanistan = "prs-AF", a.Divehi = "dv", a.DivehiMaldives = "dv-MV", a.Dutch = "nl", a.DutchBelgium = "nl-BE", a.DutchNetherlands = "nl-NL", a.English = "en", a.EnglishAustralia = "en-AU", a.EnglishBelgium = "en-BE", a.EnglishBelize = "en-BZ", a.EnglishCanada = "en-CA", a.EnglishCaribbean = "en-029", a.EnglishIreland = "en-IE", a.EnglishJamaica = "en-JM", a.EnglishNewZealand = "en-NZ", a.EnglishPhilippines = "en-PH", a.EnglishSingapore = "en-SG", a.EnglishSouthAfrica = "en-ZA", a.EnglishTrinidadAndTobago = "en-TT", a.EnglishUnitedKingdom = "en-GB", a.EnglishUnitedStates = "en-US", a.EnglishZimbabwe = "en-ZW", a.Esperanto = "eo", a.Estonian = "et", a.EstonianEstonia = "et-EE", a.Faroese = "fo", a.FaroeseFaroeIslands = "fo-FO", a.Farsi = "fa", a.FarsiIran = "fa-IR", a.Filipino = "fil", a.FilipinoPhilippines = "fil-PH", a.Finnish = "fi", a.FinnishFinland = "fi-FI", a.French = "fr", a.FrenchBelgium = "fr-BE", a.FrenchCanada = "fr-CA", a.FrenchFrance = "fr-FR", a.FrenchLuxembourg = "fr-LU", a.FrenchMonaco = "fr-MC", a.FrenchReunion = "fr-RE", a.FrenchSwitzerland = "fr-CH", a.Frisian = "fy", a.FrisianNetherlands = "fy-NL", a.Galician = "gl", a.GalicianSpain = "gl-ES", a.Georgian = "ka", a.GeorgianGeorgia = "ka-GE", a.German = "de", a.GermanAustria = "de-AT", a.GermanBelgium = "de-BE", a.GermanGermany = "de-DE", a.GermanLiechtenstein = "de-LI", a.GermanLuxembourg = "de-LU", a.GermanSwitzerland = "de-CH", a.Greenlandic = "kl", a.GreenlandicGreenland = "kl-GL", a.Greek = "el", a.GreekGreece = "el-GR", a.Gujarati = "gu", a.GujaratiIndia = "gu-IN", a.Haitian = "ht", a.Hausa = "ha", a.HausaGhana = "ha-GH", a.HausaNiger = "ha-NE", a.HausaNigeria = "ha-NG", a.Hebrew = "he", a.HebrewIsrael = "he-IL", a.Hindi = "hi", a.HindiIndia = "hi-IN", a.Hungarian = "hu", a.HungarianHungary = "hu-HU", a.Icelandic = "is", a.IcelandicIceland = "is-IS", a.Igbo = "ig", a.IgboNigeria = "ig-NG", a.Indonesian = "id", a.IndonesianIndonesia = "id-ID", a.Irish = "ga", a.IrishIreland = "ga-IE", a.Italian = "it", a.ItalianItaly = "it-IT", a.ItalianSwitzerland = "it-CH", a.Japanese = "ja", a.JapaneseJapan = "ja-JP", a.Javanese = "jv", a.Kannada = "kn", a.KannadaIndia = "kn-IN", a.Karelian = "krl", a.Kazakh = "kk", a.KazakhKazakhstan = "kk-KZ", a.Khmer = "km", a.KhmerCambodia = "km-KH", a.KinyarwandaRwanda = "rw-RW", a.Komi = "kv", a.Konkani = "kok", a.KonkaniIndia = "kok-IN", a.Korean = "ko", a.KoreanSouthKorea = "ko-KR", a.Kurdish = "ku", a.KurdishIraq = "ku-IQ", a.KurdishTurkey = "ku-TR", a.Kyrgyz = "ky", a.KyrgyzKyrgyzstan = "ky-KG", a.Lao = "lo", a.LaoLaos = "lo-LA", a.Latin = "la", a.Latvian = "lv", a.LatvianLatvia = "lv-LV", a.Lithuanian = "lt", a.LithuanianLithuania = "lt-LT", a.Luxembourgish = "lb", a.LuxembourgishBelgium = "lb-LU", a.LuxembourgishLuxembourg = "lb-LU", a.Macedonian = "mk", a.MacedonianNorthMacedonia = "mk-MK", a.Malagasy = "mg", a.Malay = "ms", a.MalayBrunei = "ms-BN", a.MalayIndia = "ms-IN", a.MalayMalaysia = "ms-MY", a.MalaySingapore = "ms-SG", a.Malayalam = "ml", a.MalayalamIndia = "ml-IN", a.Maltese = "mt", a.MalteseMalta = "mt-MT", a.Maori = "mi", a.MaoriNewZealand = "mi-NZ", a.Marathi = "mr", a.MarathiIndia = "mr-IN", a.Mari = "chm", a.Mongolian = "mn", a.MongolianMongolia = "mn-MN", a.Montenegrin = "me", a.MontenegrinMontenegro = "me-ME", a.Nepali = "ne", a.NepaliNepal = "ne-NP", a.NorthernSotho = "ns", a.NorthernSothoSouthAfrica = "ns-ZA", a.Norwegian = "nb", a.NorwegianBokmalNorway = "nb-NO", a.NorwegianNynorskNorway = "nn-NO", a.Oriya = "or", a.OriyaIndia = "or-IN", a.Ossetian = "os", a.Pashto = "ps", a.PashtoAfghanistan = "ps-AF", a.Persian = "fa", a.PersianIran = "fa-IR", a.Polish = "pl", a.PolishPoland = "pl-PL", a.Portuguese = "pt", a.PortugueseBrazil = "pt-BR", a.PortuguesePortugal = "pt-PT", a.Punjabi = "pa", a.PunjabiIndia = "pa-IN", a.PunjabiPakistan = "pa-PK", a.Quechua = "qu", a.QuechuaBolivia = "qu-BO", a.QuechuaEcuador = "qu-EC", a.QuechuaPeru = "qu-PE", a.Romanian = "ro", a.RomanianRomania = "ro-RO", a.Russian = "ru", a.RussianKazakhstan = "ru-KZ", a.RussianKyrgyzstan = "ru-KG", a.RussianRussia = "ru-RU", a.RussianUkraine = "ru-UA", a.Sakha = "sah", a.Sanskrit = "sa", a.SanskritIndia = "sa-IN", a.Sami = "se", a.SamiNorway = "se-NO", a.SamiSweden = "se-SE", a.SamiFinland = "se-FI", a.Samoan = "sm", a.SamoanSamoa = "sm-WS", a.Scots = "gd", a.Serbian = "sr", a.SerbianBosniaAndHerzegovina = "sr-BA", a.SerbianSerbiaAndMontenegro = "sr-SP", a.SerbianCyrillic = "sr-SP-Cyrl", a.SerbianCyrillicBosniaAndHerzegovina = "sr-Cyrl-BA", a.SerbianCyrillicSerbiaAndMontenegro = "sr-Cyrl-SP", a.Sesotho = "st", a.SesothoSouthAfrica = "st-ZA", a.Shona = "sn", a.ShonaZimbabwe = "sn-ZW", a.Sindhi = "sd", a.SindhiPakistan = "sd-PK", a.Sinhala = "si", a.SinhalaSriLanka = "si-LK", a.Slovak = "sk", a.SlovakSlovakia = "sk-SK", a.Slovenian = "sl", a.SlovenianSlovenia = "sl-SI", a.Somali = "so", a.SomaliSomalia = "so-SO", a.Spanish = "es", a.SpanishArgentina = "es-AR", a.SpanishBolivia = "es-BO", a.SpanishChile = "es-CL", a.SpanishColombia = "es-CO", a.SpanishCostaRica = "es-CR", a.SpanishCuba = "es-CU", a.SpanishDominicanRepublic = "es-DO", a.SpanishEcuador = "es-EC", a.SpanishEquatorialGuinea = "es-GQ", a.SpanishElSalvador = "es-SV", a.SpanishGuatemala = "es-GT", a.SpanishHonduras = "es-HN", a.SpanishMexico = "es-MX", a.SpanishNicaragua = "es-NI", a.SpanishPanama = "es-PA", a.SpanishParaguay = "es-PY", a.SpanishPeru = "es-PE", a.SpanishPuertoRico = "es-PR", a.SpanishSpain = "es-ES", a.SpanishUnitedStates = "es-US", a.SpanishUruguay = "es-UY", a.SpanishVenezuela = "es-VE", a.Sudanese = "su", a.Sutu = "st", a.SutuSouthAfrica = "st-ZA", a.Swahili = "sw", a.SwahiliKenya = "sw-KE", a.Swedish = "sv", a.SwedishFinland = "sv-FI", a.SwedishSweden = "sv-SE", a.Syriac = "syr", a.SyriacSyria = "syr-SY", a.Tajik = "tg", a.TajikTajikistan = "tg-TJ", a.Tagalog = "tl", a.TagalogPhilippines = "tl-PH", a.Tamazight = "tmh", a.Tamil = "ta", a.TamilIndia = "ta-IN", a.Tatar = "tt", a.Telugu = "te", a.TeluguIndia = "te-IN", a.Thai = "th", a.ThaiThailand = "th-TH", a.Tibetan = "bo", a.TibetanBhutan = "bo-BT", a.TibetanChina = "bo-CN", a.TibetanIndia = "bo-IN", a.Tsonga = "ts", a.Tswana = "tn", a.TswanaSouthAfrica = "tn-ZA", a.Turkish = "tr", a.TurkishTurkey = "tr-TR", a.Turkmen = "tk", a.Ukrainian = "uk", a.UkrainianUkraine = "uk-UA", a.Urdu = "ur", a.UrduAfghanistan = "ur-AF", a.UrduIndia = "ur-IN", a.UrduPakistan = "ur-PK", a.Uzbek = "uz", a.UzbekCyrillic = "uz-Cyrl-UZ", a.UzbekLatin = "uz-Latn-UZ", a.UzbekUzbekistan = "uz-UZ", a.Vietnamese = "vi", a.VietnameseVietnam = "vi-VN", a.Welsh = "cy", a.WelshUnitedKingdom = "cy-GB", a.Xhosa = "xh", a.XhosaSouthAfrica = "xh-ZA", a.Yiddish = "yi", a.Yoruba = "yo", a.YorubaNigeria = "yo-NG", a.ZhuyinMandarinChina = "yue-Hant-CN", a.Zulu = "zu", a.ZuluSouthAfrica = "zu-ZA";
})(e$1 || (e$1 = {}));
var t;
(function(a) {
  a.AfricaAbidjan = "Africa/Abidjan", a.AfricaAccra = "Africa/Accra", a.AfricaAddisAbaba = "Africa/Addis_Ababa", a.AfricaAlgiers = "Africa/Algiers", a.AfricaAsmara = "Africa/Asmara", a.AfricaBamako = "Africa/Bamako", a.AfricaBangui = "Africa/Bangui", a.AfricaBanjul = "Africa/Banjul", a.AfricaBissau = "Africa/Bissau", a.AfricaBlantyre = "Africa/Blantyre", a.AfricaBrazzaville = "Africa/Brazzaville", a.AfricaBujumbura = "Africa/Bujumbura", a.AfricaCairo = "Africa/Cairo", a.AfricaCasablanca = "Africa/Casablanca", a.AfricaCeuta = "Africa/Ceuta", a.AfricaConakry = "Africa/Conakry", a.AfricaDakar = "Africa/Dakar", a.AfricaDarEsSalaam = "Africa/Dar_es_Salaam", a.AfricaDjibouti = "Africa/Djibouti", a.AfricaDouala = "Africa/Douala", a.AfricaElAaiun = "Africa/El_Aaiun", a.AfricaFreetown = "Africa/Freetown", a.AfricaGaborone = "Africa/Gaborone", a.AfricaHarare = "Africa/Harare", a.AfricaJohannesburg = "Africa/Johannesburg", a.AfricaJuba = "Africa/Juba", a.AfricaKampala = "Africa/Kampala", a.AfricaKhartoum = "Africa/Khartoum", a.AfricaKigali = "Africa/Kigali", a.AfricaKinshasa = "Africa/Kinshasa", a.AfricaLagos = "Africa/Lagos", a.AfricaLibreville = "Africa/Libreville", a.AfricaLome = "Africa/Lome", a.AfricaLuanda = "Africa/Luanda", a.AfricaLubumbashi = "Africa/Lubumbashi", a.AfricaLusaka = "Africa/Lusaka", a.AfricaMalabo = "Africa/Malabo", a.AfricaMaputo = "Africa/Maputo", a.AfricaMaseru = "Africa/Maseru", a.AfricaMbabane = "Africa/Mbabane", a.AfricaMogadishu = "Africa/Mogadishu", a.AfricaMonrovia = "Africa/Monrovia", a.AfricaNairobi = "Africa/Nairobi", a.AfricaNdjamena = "Africa/Ndjamena", a.AfricaNiamey = "Africa/Niamey", a.AfricaNouakchott = "Africa/Nouakchott", a.AfricaOuagadougou = "Africa/Ouagadougou", a.AfricaPortoNovo = "Africa/Porto-Novo", a.AfricaSaoTome = "Africa/Sao_Tome", a.AfricaTripoli = "Africa/Tripoli", a.AfricaTunis = "Africa/Tunis", a.AfricaWindhoek = "Africa/Windhoek", a.AmericaAdak = "America/Adak", a.AmericaAnchorage = "America/Anchorage", a.AmericaAnguilla = "America/Anguilla", a.AmericaAntigua = "America/Antigua", a.AmericaAraguaina = "America/Araguaina", a.AmericaArgentinaBuenosAires = "America/Argentina/Buenos_Aires", a.AmericaArgentinaCatamarca = "America/Argentina/Catamarca", a.AmericaArgentinaCordoba = "America/Argentina/Cordoba", a.AmericaArgentinaJujuy = "America/Argentina/Jujuy", a.AmericaArgentinaLaRioja = "America/Argentina/La_Rioja", a.AmericaArgentinaMendoza = "America/Argentina/Mendoza", a.AmericaArgentinaRioGallegos = "America/Argentina/Rio_Gallegos", a.AmericaArgentinaSalta = "America/Argentina/Salta", a.AmericaArgentinaSanJuan = "America/Argentina/San_Juan", a.AmericaArgentinaSanLuis = "America/Argentina/San_Luis", a.AmericaArgentinaTucuman = "America/Argentina/Tucuman", a.AmericaArgentinaUshuaia = "America/Argentina/Ushuaia", a.AmericaAruba = "America/Aruba", a.AmericaAsuncion = "America/Asuncion", a.AmericaAtikokan = "America/Atikokan", a.AmericaAtka = "America/Atka", a.AmericaBahia = "America/Bahia", a.AmericaBahiaBanderas = "America/Bahia_Banderas", a.AmericaBarbados = "America/Barbados", a.AmericaBelem = "America/Belem", a.AmericaBelize = "America/Belize", a.AmericaBlancSablon = "America/Blanc-Sablon", a.AmericaBoaVista = "America/Boa_Vista", a.AmericaBogota = "America/Bogota", a.AmericaBoise = "America/Boise", a.AmericaCambridgeBay = "America/Cambridge_Bay", a.AmericaCampoGrande = "America/Campo_Grande", a.AmericaCancun = "America/Cancun", a.AmericaCaracas = "America/Caracas", a.AmericaCayenne = "America/Cayenne", a.AmericaCayman = "America/Cayman", a.AmericaChicago = "America/Chicago", a.AmericaChihuahua = "America/Chihuahua", a.AmericaCoralHarbour = "America/Coral_Harbour", a.AmericaCordoba = "America/Cordoba", a.AmericaCostaRica = "America/Costa_Rica", a.AmericaCreston = "America/Creston", a.AmericaCuiaba = "America/Cuiaba", a.AmericaCuracao = "America/Curacao", a.AmericaDanmarkshavn = "America/Danmarkshavn", a.AmericaDawson = "America/Dawson", a.AmericaDawsonCreek = "America/Dawson_Creek", a.AmericaDenver = "America/Denver", a.AmericaDetroit = "America/Detroit", a.AmericaDominica = "America/Dominica", a.AmericaEdmonton = "America/Edmonton", a.AmericaEirunepe = "America/Eirunepe", a.AmericaElSalvador = "America/El_Salvador", a.AmericaFortaleza = "America/Fortaleza", a.AmericaGlaceBay = "America/Glace_Bay", a.AmericaGodthab = "America/Godthab", a.AmericaGooseBay = "America/Goose_Bay", a.AmericaGrandTurk = "America/Grand_Turk", a.AmericaGrenada = "America/Grenada", a.AmericaGuadeloupe = "America/Guadeloupe", a.AmericaGuatemala = "America/Guatemala", a.AmericaGuayaquil = "America/Guayaquil", a.AmericaGuyana = "America/Guyana", a.AmericaHalifax = "America/Halifax", a.AmericaHavana = "America/Havana", a.AmericaHermosillo = "America/Hermosillo", a.AmericaIndianaIndianapolis = "America/Indiana/Indianapolis", a.AmericaIndianaKnox = "America/Indiana/Knox", a.AmericaIndianaMarengo = "America/Indiana/Marengo", a.AmericaIndianaPetersburg = "America/Indiana/Petersburg", a.AmericaIndianaTellCity = "America/Indiana/Tell_City", a.AmericaIndianaVevay = "America/Indiana/Vevay", a.AmericaIndianaVincennes = "America/Indiana/Vincennes", a.AmericaIndianaWinamac = "America/Indiana/Winamac", a.AmericaInuvik = "America/Inuvik", a.AmericaIqaluit = "America/Iqaluit", a.AmericaJamaica = "America/Jamaica", a.AmericaJuneau = "America/Juneau", a.AmericaKentuckyLouisville = "America/Kentucky/Louisville", a.AmericaKentuckyMonticello = "America/Kentucky/Monticello", a.AmericaKralendijk = "America/Kralendijk", a.AmericaLaPaz = "America/La_Paz", a.AmericaLima = "America/Lima", a.AmericaLosAngeles = "America/Los_Angeles", a.AmericaLouisville = "America/Louisville", a.AmericaLowerPrinces = "America/Lower_Princes", a.AmericaMaceio = "America/Maceio", a.AmericaManagua = "America/Managua", a.AmericaManaus = "America/Manaus", a.AmericaMarigot = "America/Marigot", a.AmericaMartinique = "America/Martinique", a.AmericaMatamoros = "America/Matamoros", a.AmericaMazatlan = "America/Mazatlan", a.AmericaMenominee = "America/Menominee", a.AmericaMerida = "America/Merida", a.AmericaMetlakatla = "America/Metlakatla", a.AmericaMexicoCity = "America/Mexico_City", a.AmericaMiquelon = "America/Miquelon", a.AmericaMoncton = "America/Moncton", a.AmericaMonterrey = "America/Monterrey", a.AmericaMontevideo = "America/Montevideo", a.AmericaMontserrat = "America/Montserrat", a.AmericaMontreal = "America/Montreal", a.AmericaNassau = "America/Nassau", a.AmericaNewYork = "America/New_York", a.AmericaNipigon = "America/Nipigon", a.AmericaNome = "America/Nome", a.AmericaNoronha = "America/Noronha", a.AmericaNorthDakotaBeulah = "America/North_Dakota/Beulah", a.AmericaNorthDakotaCenter = "America/North_Dakota/Center", a.AmericaNorthDakotaNewSalem = "America/North_Dakota/New_Salem", a.AmericaOjinaga = "America/Ojinaga", a.AmericaPanama = "America/Panama", a.AmericaPangnirtung = "America/Pangnirtung", a.AmericaParamaribo = "America/Paramaribo", a.AmericaPhoenix = "America/Phoenix", a.AmericaPortAuPrince = "America/Port-au-Prince", a.AmericaPortOfSpain = "America/Port_of_Spain", a.AmericaPortoVelho = "America/Porto_Velho", a.AmericaPuertoRico = "America/Puerto_Rico", a.AmericaRainyRiver = "America/Rainy_River", a.AmericaRankinInlet = "America/Rankin_Inlet", a.AmericaRecife = "America/Recife", a.AmericaRegina = "America/Regina", a.AmericaResolute = "America/Resolute", a.AmericaRioBranco = "America/Rio_Branco", a.AmericaSantaIsabel = "America/Santa_Isabel", a.AmericaSantarem = "America/Santarem", a.AmericaSantiago = "America/Santiago", a.AmericaSantoDomingo = "America/Santo_Domingo", a.AmericaSaoPaulo = "America/Sao_Paulo", a.AmericaScoresbysund = "America/Scoresbysund", a.AmericaShiprock = "America/Shiprock", a.AmericaSitka = "America/Sitka", a.AmericaStBarthelemy = "America/St_Barthelemy", a.AmericaStJohns = "America/St_Johns", a.AmericaStKitts = "America/St_Kitts", a.AmericaStLucia = "America/St_Lucia", a.AmericaStThomas = "America/St_Thomas", a.AmericaStVincent = "America/St_Vincent", a.AmericaSwiftCurrent = "America/Swift_Current", a.AmericaTegucigalpa = "America/Tegucigalpa", a.AmericaThule = "America/Thule", a.AmericaThunderBay = "America/Thunder_Bay", a.AmericaTijuana = "America/Tijuana", a.AmericaToronto = "America/Toronto", a.AmericaTortola = "America/Tortola", a.AmericaVancouver = "America/Vancouver", a.AmericaWhitehorse = "America/Whitehorse", a.AmericaWinnipeg = "America/Winnipeg", a.AmericaYakutat = "America/Yakutat", a.AmericaYellowknife = "America/Yellowknife", a.AntarcticaCasey = "Antarctica/Casey", a.AntarcticaDavis = "Antarctica/Davis", a.AntarcticaDumontDUrville = "Antarctica/DumontDUrville", a.AntarcticaMacquarie = "Antarctica/Macquarie", a.AntarcticaMawson = "Antarctica/Mawson", a.AntarcticaMcMurdo = "Antarctica/McMurdo", a.AntarcticaPalmer = "Antarctica/Palmer", a.AntarcticaRothera = "Antarctica/Rothera", a.AntarcticaSyowa = "Antarctica/Syowa", a.AntarcticaTroll = "Antarctica/Troll", a.AntarcticaVostok = "Antarctica/Vostok", a.ArcticLongyearbyen = "Arctic/Longyearbyen", a.AsiaAden = "Asia/Aden", a.AsiaAlmaty = "Asia/Almaty", a.AsiaAmman = "Asia/Amman", a.AsiaAnadyr = "Asia/Anadyr", a.AsiaAqtau = "Asia/Aqtau", a.AsiaAqtobe = "Asia/Aqtobe", a.AsiaAshgabat = "Asia/Ashgabat", a.AsiaBaghdad = "Asia/Baghdad", a.AsiaBahrain = "Asia/Bahrain", a.AsiaBaku = "Asia/Baku", a.AsiaBangkok = "Asia/Bangkok", a.AsiaBarnaul = "Asia/Barnaul", a.AsiaBeirut = "Asia/Beirut", a.AsiaBishkek = "Asia/Bishkek", a.AsiaBrunei = "Asia/Brunei", a.AsiaChita = "Asia/Chita", a.AsiaChoibalsan = "Asia/Choibalsan", a.AsiaColombo = "Asia/Colombo", a.AsiaDamascus = "Asia/Damascus", a.AsiaDhaka = "Asia/Dhaka", a.AsiaDili = "Asia/Dili", a.AsiaDubai = "Asia/Dubai", a.AsiaDushanbe = "Asia/Dushanbe", a.AsiaFamagusta = "Asia/Famagusta", a.AsiaGaza = "Asia/Gaza", a.AsiaHebron = "Asia/Hebron", a.AsiaHoChiMinh = "Asia/Ho_Chi_Minh", a.AsiaHongKong = "Asia/Hong_Kong", a.AsiaHovd = "Asia/Hovd", a.AsiaIrkutsk = "Asia/Irkutsk", a.AsiaJakarta = "Asia/Jakarta", a.AsiaJayapura = "Asia/Jayapura", a.AsiaJerusalem = "Asia/Jerusalem", a.AsiaKabul = "Asia/Kabul", a.AsiaKamchatka = "Asia/Kamchatka", a.AsiaKarachi = "Asia/Karachi", a.AsiaKathmandu = "Asia/Kathmandu", a.AsiaKhandyga = "Asia/Khandyga", a.AsiaKolkata = "Asia/Kolkata", a.AsiaKrasnoyarsk = "Asia/Krasnoyarsk", a.AsiaKualaLumpur = "Asia/Kuala_Lumpur", a.AsiaKuching = "Asia/Kuching", a.AsiaKuwait = "Asia/Kuwait", a.AsiaMacau = "Asia/Macau", a.AsiaMagadan = "Asia/Magadan", a.AsiaMakassar = "Asia/Makassar", a.AsiaManila = "Asia/Manila", a.AsiaMuscat = "Asia/Muscat", a.AsiaNicosia = "Asia/Nicosia", a.AsiaNovokuznetsk = "Asia/Novokuznetsk", a.AsiaNovosibirsk = "Asia/Novosibirsk", a.AsiaOmsk = "Asia/Omsk", a.AsiaOral = "Asia/Oral", a.AsiaPhnomPenh = "Asia/Phnom_Penh", a.AsiaPontianak = "Asia/Pontianak", a.AsiaPyongyang = "Asia/Pyongyang", a.AsiaQatar = "Asia/Qatar", a.AsiaQyzylorda = "Asia/Qyzylorda", a.AsiaRangoon = "Asia/Rangoon", a.AsiaRiyadh = "Asia/Riyadh", a.AsiaSakhalin = "Asia/Sakhalin", a.AsiaSamarkand = "Asia/Samarkand", a.AsiaSeoul = "Asia/Seoul", a.AsiaShanghai = "Asia/Shanghai", a.AsiaSingapore = "Asia/Singapore", a.AsiaSrednekolymsk = "Asia/Srednekolymsk", a.AsiaTaipei = "Asia/Taipei", a.AsiaTashkent = "Asia/Tashkent", a.AsiaTbilisi = "Asia/Tbilisi", a.AsiaTehran = "Asia/Tehran", a.AsiaThimphu = "Asia/Thimphu", a.AsiaTokyo = "Asia/Tokyo", a.AsiaTomsk = "Asia/Tomsk", a.AsiaUlaanbaatar = "Asia/Ulaanbaatar", a.AsiaUrumqi = "Asia/Urumqi", a.AsiaUstNera = "Asia/Ust-Nera", a.AsiaVientiane = "Asia/Vientiane", a.AsiaVladivostok = "Asia/Vladivostok", a.AsiaYakutsk = "Asia/Yakutsk", a.AsiaYekaterinburg = "Asia/Yekaterinburg", a.AsiaYerevan = "Asia/Yerevan", a.AtlanticAzores = "Atlantic/Azores", a.AtlanticBermuda = "Atlantic/Bermuda", a.AtlanticCanary = "Atlantic/Canary", a.AtlanticCapeVerde = "Atlantic/Cape_Verde", a.AtlanticFaroe = "Atlantic/Faroe", a.AtlanticMadeira = "Atlantic/Madeira", a.AtlanticReykjavik = "Atlantic/Reykjavik", a.AtlanticSouthGeorgia = "Atlantic/South_Georgia", a.AtlanticStHelena = "Atlantic/St_Helena", a.AtlanticStanley = "Atlantic/Stanley", a.AustraliaAdelaide = "Australia/Adelaide", a.AustraliaBrisbane = "Australia/Brisbane", a.AustraliaBrokenHill = "Australia/Broken_Hill", a.AustraliaCanberra = "Australia/Canberra", a.AustraliaCurrie = "Australia/Currie", a.AustraliaDarwin = "Australia/Darwin", a.AustraliaEucla = "Australia/Eucla", a.AustraliaHobart = "Australia/Hobart", a.AustraliaLindeman = "Australia/Lindeman", a.AustraliaLordHowe = "Australia/Lord_Howe", a.AustraliaMelbourne = "Australia/Melbourne", a.AustraliaPerth = "Australia/Perth", a.AustraliaSydney = "Australia/Sydney", a.EuropeAmsterdam = "Europe/Amsterdam", a.EuropeAndorra = "Europe/Andorra", a.EuropeAthens = "Europe/Athens", a.EuropeBelgrade = "Europe/Belgrade", a.EuropeBerlin = "Europe/Berlin", a.EuropeBratislava = "Europe/Bratislava", a.EuropeBrussels = "Europe/Brussels", a.EuropeBucharest = "Europe/Bucharest", a.EuropeBudapest = "Europe/Budapest", a.EuropeBusingen = "Europe/Busingen", a.EuropeChisinau = "Europe/Chisinau", a.EuropeCopenhagen = "Europe/Copenhagen", a.EuropeDublin = "Europe/Dublin", a.EuropeGibraltar = "Europe/Gibraltar", a.EuropeGuernsey = "Europe/Guernsey", a.EuropeHelsinki = "Europe/Helsinki", a.EuropeIsleOfMan = "Europe/Isle_of_Man", a.EuropeIstanbul = "Europe/Istanbul", a.EuropeJersey = "Europe/Jersey", a.EuropeKaliningrad = "Europe/Kaliningrad", a.EuropeKiev = "Europe/Kiev", a.EuropeKirov = "Europe/Kirov", a.EuropeLisbon = "Europe/Lisbon", a.EuropeLjubljana = "Europe/Ljubljana", a.EuropeLondon = "Europe/London", a.EuropeLuxembourg = "Europe/Luxembourg", a.EuropeMadrid = "Europe/Madrid", a.EuropeMalta = "Europe/Malta", a.EuropeMariehamn = "Europe/Mariehamn", a.EuropeMinsk = "Europe/Minsk", a.EuropeMonaco = "Europe/Monaco", a.EuropeMoscow = "Europe/Moscow", a.EuropeOslo = "Europe/Oslo", a.EuropeParis = "Europe/Paris", a.EuropePodgorica = "Europe/Podgorica", a.EuropePrague = "Europe/Prague", a.EuropeRiga = "Europe/Riga", a.EuropeRome = "Europe/Rome", a.EuropeSamara = "Europe/Samara", a.EuropeSanMarino = "Europe/San_Marino", a.EuropeSarajevo = "Europe/Sarajevo", a.EuropeSimferopol = "Europe/Simferopol", a.EuropeSkopje = "Europe/Skopje", a.EuropeSofia = "Europe/Sofia", a.EuropeStockholm = "Europe/Stockholm", a.EuropeTallinn = "Europe/Tallinn", a.EuropeTirane = "Europe/Tirane", a.EuropeUzhgorod = "Europe/Uzhgorod", a.EuropeVaduz = "Europe/Vaduz", a.EuropeVatican = "Europe/Vatican", a.EuropeVienna = "Europe/Vienna", a.EuropeVilnius = "Europe/Vilnius", a.EuropeVolgograd = "Europe/Volgograd", a.EuropeWarsaw = "Europe/Warsaw", a.EuropeZagreb = "Europe/Zagreb", a.EuropeZaporozhye = "Europe/Zaporozhye", a.EuropeZurich = "Europe/Zurich", a.GMT = "GMT", a.IndianAntananarivo = "Indian/Antananarivo", a.IndianChagos = "Indian/Chagos", a.IndianChristmas = "Indian/Christmas", a.IndianCocos = "Indian/Cocos", a.IndianComoro = "Indian/Comoro", a.IndianKerguelen = "Indian/Kerguelen", a.IndianMahe = "Indian/Mahe", a.IndianMaldives = "Indian/Maldives", a.IndianMauritius = "Indian/Mauritius", a.IndianMayotte = "Indian/Mayotte", a.IndianReunion = "Indian/Reunion", a.PacificApia = "Pacific/Apia", a.PacificAuckland = "Pacific/Auckland", a.PacificBougainville = "Pacific/Bougainville", a.PacificChatham = "Pacific/Chatham", a.PacificChuuk = "Pacific/Chuuk", a.PacificEaster = "Pacific/Easter", a.PacificEfate = "Pacific/Efate", a.PacificEnderbury = "Pacific/Enderbury", a.PacificFakaofo = "Pacific/Fakaofo", a.PacificFiji = "Pacific/Fiji", a.PacificFunafuti = "Pacific/Funafuti", a.PacificGalapagos = "Pacific/Galapagos", a.PacificGambier = "Pacific/Gambier", a.PacificGuadalcanal = "Pacific/Guadalcanal", a.PacificGuam = "Pacific/Guam", a.PacificHonolulu = "Pacific/Honolulu", a.PacificJohnston = "Pacific/Johnston", a.PacificKiritimati = "Pacific/Kiritimati", a.PacificKosrae = "Pacific/Kosrae", a.PacificKwajalein = "Pacific/Kwajalein", a.PacificMajuro = "Pacific/Majuro", a.PacificMarquesas = "Pacific/Marquesas", a.PacificMidway = "Pacific/Midway", a.PacificNauru = "Pacific/Nauru", a.PacificNiue = "Pacific/Niue", a.PacificNorfolk = "Pacific/Norfolk", a.PacificNoumea = "Pacific/Noumea", a.PacificPagoPago = "Pacific/Pago_Pago", a.PacificPalau = "Pacific/Palau", a.PacificPitcairn = "Pacific/Pitcairn", a.PacificPohnpei = "Pacific/Pohnpei", a.PacificPonape = "Pacific/Ponape", a.PacificPortMoresby = "Pacific/Port_Moresby", a.PacificRarotonga = "Pacific/Rarotonga", a.PacificSaipan = "Pacific/Saipan", a.PacificSamoa = "Pacific/Samoa", a.PacificTahiti = "Pacific/Tahiti", a.PacificTarawa = "Pacific/Tarawa", a.PacificTongatapu = "Pacific/Tongatapu", a.PacificTruk = "Pacific/Truk", a.PacificWake = "Pacific/Wake", a.PacificWallis = "Pacific/Wallis", a.PacificYap = "Pacific/Yap";
})(t || (t = {}));
var i$1;
(function(a) {
  a.UTC_MINUS_12 = "UTC-12", a.UTC_MINUS_11_30 = "UTC-11:30", a.UTC_MINUS_11 = "UTC-11", a.UTC_MINUS_10_30 = "UTC-10:30", a.UTC_MINUS_10 = "UTC-10", a.UTC_MINUS_9_30 = "UTC-9:30", a.UTC_MINUS_9 = "UTC-09", a.UTC_MINUS_8_45 = "UTC-8:45", a.UTC_MINUS_8 = "UTC-08", a.UTC_MINUS_7 = "UTC-07", a.UTC_MINUS_6_30 = "UTC-6:30", a.UTC_MINUS_6 = "UTC-06", a.UTC_MINUS_5_45 = "UTC-5:45", a.UTC_MINUS_5_30 = "UTC-5:30", a.UTC_MINUS_5 = "UTC-05", a.UTC_MINUS_4_30 = "UTC-4:30", a.UTC_MINUS_4 = "UTC-04", a.UTC_MINUS_3_30 = "UTC-3:30", a.UTC_MINUS_3 = "UTC-03", a.UTC_MINUS_2_30 = "UTC-2:30", a.UTC_MINUS_2 = "UTC-02", a.UTC_MINUS_1 = "UTC-01", a.UTC_0 = "UTC+00", a.UTC_PLUS_1 = "UTC+01", a.UTC_PLUS_2 = "UTC+02", a.UTC_PLUS_3 = "UTC+03", a.UTC_PLUS_3_30 = "UTC+3:30", a.UTC_PLUS_4 = "UTC+04", a.UTC_PLUS_4_30 = "UTC+4:30", a.UTC_PLUS_5 = "UTC+05", a.UTC_PLUS_5_30 = "UTC+5:30", a.UTC_PLUS_5_45 = "UTC+5:45", a.UTC_PLUS_6 = "UTC+06", a.UTC_PLUS_6_30 = "UTC+6:30", a.UTC_PLUS_7 = "UTC+07", a.UTC_PLUS_8 = "UTC+08", a.UTC_PLUS_8_45 = "UTC+8:45", a.UTC_PLUS_9 = "UTC+09", a.UTC_PLUS_9_30 = "UTC+9:30", a.UTC_PLUS_10 = "UTC+10", a.UTC_PLUS_10_30 = "UTC+10:30", a.UTC_PLUS_11 = "UTC+11", a.UTC_PLUS_11_30 = "UTC+11:30", a.UTC_PLUS_12 = "UTC+12", a.UTC_PLUS_12_45 = "UTC+12:45", a.UTC_PLUS_13 = "UTC+13", a.UTC_PLUS_13_45 = "UTC+13:45", a.UTC_PLUS_14 = "UTC+14";
})(i$1 || (i$1 = {}));
var n$3;
(function(a) {
  a.AcreTime = "ACT", a.AfghanistanTime = "AFT", a.AIXCentralEuropeanTime = "DFT", a.AlaskaDaylightTime = "AKDT", a.AlaskaStandardTime = "AKST", a.AlmaAtaTime = "ALMT", a.AmazonSummerTime = "AMST", a.AmazonTime = "AMT", a.AnadyrTime = "ANAT", a.AqtobeTime = "AQTT", a.ArabiaStandardTime = "AST", a.ArgentinaTime = "ART", a.ArmeniaTime = "AMT", a.ASEANCommonTime = "ASEAN", a.AtlanticDaylightTime = "ADT", a.AtlanticStandardTime = "AST", a.AustralianCentralDaylightSavingTime = "ACDT", a.AustralianCentralStandardTime = "ACST", a.AustralianCentralWesternStandardTime = "ACWST", a.AustralianEasternDaylightSavingTime = "AEDT", a.AustralianEasternStandardTime = "AEST", a.AustralianEasternTime = "AET", a.AustralianWesternStandardTime = "AWST", a.AzerbaijanTime = "AZT", a.AzoresStandardTime = "AZOT", a.AzoresSummerTime = "AZOST", a.BakerIslandTime = "BIT", a.BangladeshStandardTime = "BST", a.BhutanTime = "BTT", a.BoliviaTime = "BOT", a.BougainvilleStandardTime = "BST", a.BrasiliaSummerTime = "BRST", a.BrasiliaTime = "BRT", a.BritishIndianOceanTime = "BIOT", a.BritishSummerTime = "BST", a.BruneiTime = "BNT", a.CapeVerdeTime = "CVT", a.CentralAfricaTime = "CAT", a.CentralDaylightTime = "CDT", a.CentralEuropeanSummerTime = "CEST", a.CentralEuropeanTime = "CET", a.CentralIndonesiaTime = "WITA", a.CentralStandardTime = "CST", a.CentralTime = "CT", a.CentralWesternStandardTime = "CWST", a.ChamorroStandardTime = "CHST", a.ChathamDaylightTime = "CHADT", a.ChathamStandardTime = "CHAST", a.ChileStandardTime = "CLT", a.ChileSummerTime = "CLST", a.ChinaStandardTime = "CST", a.ChoibalsanStandardTime = "CHOT", a.ChoibalsanSummerTime = "CHOST", a.ChristmasIslandTime = "CXT", a.ChuukTime = "CHUT", a.ClipptertonIslandStandardTime = "CIST", a.CocosIslandsTime = "CCT", a.ColombiaSummerTime = "COST", a.ColombiaTime = "COT", a.CookIslandTime = "CKT", a.CoordinatedUniversalTime = "UTC", a.CubaDaylightTime = "CDT", a.CubaStandardTime = "CST", a.DavisTime = "DAVT", a.DumontDUrvilleTime = "DDUT", a.EastAfricaTime = "EAT", a.EasterIslandStandardTime = "EAST", a.EasterIslandSummerTime = "EASST", a.EasternCaribbeanTime = "ECT", a.EasternDaylightTime = "EDT", a.EasternEuropeanSummerTime = "EEST", a.EasternEuropeanTime = "EET", a.EasternGreenlandSummerTime = "EGST", a.EasternGreenlandTime = "EGT", a.EasternIndonesianTime = "WIT", a.EasternStandardTime = "EST", a.EasternTime = "ET", a.EcuadorTime = "ECT", a.FalklandIslandsSummerTime = "FKST", a.FalklandIslandsTime = "FKT", a.FernandoDeNoronhaTime = "FNT", a.FijiTime = "FJT", a.FrenchGuianaTime = "GFT", a.FrenchSouthernAndAntarcticTime = "TFT", a.FurtherEasternEuropeanTime = "FET", a.GalapagosTime = "GALT", a.GambierIslandTime = "GIT", a.GambierIslandsTime = "GAMT", a.GeorgiaStandardTime = "GET", a.GilbertIslandTime = "GILT", a.GreenwichMeanTime = "GMT", a.GulfStandardTime = "GST", a.GuyanaTime = "GYT", a.HawaiiAleutianDaylightTime = "HDT", a.HawaiiAleutianStandardTime = "HST", a.HeardAndMcDonaldIslandsTime = "HMT", a.HeureAvanceeDEuropeCentraleTime = "HAEC", a.HongKongTime = "HKT", a.HovdSummerTime = "HOVST", a.HovdTime = "HOVT", a.IndianOceanTime = "IOT", a.IndianStandardTime = "IST", a.IndochinaTime = "ICT", a.InternationalDayLineWestTime = "IDLW", a.IranDaylightTime = "IRDT", a.IranStandardTime = "IRST", a.IrishStandardTime = "IST", a.IrkutskSummerTime = "IRKST", a.IrkutskTime = "IRKT", a.IsraelDaylightTime = "IDT", a.IsraelStandardTime = "IST", a.JapanStandardTime = "JST", a.KaliningradTime = "KALT", a.KamchatkaTime = "KAMT", a.KoreaStandardTime = "KST", a.KosraeTime = "KOST", a.KrasnoyarskSummerTime = "KRAST", a.KrasnoyarskTime = "KRAT", a.KyrgyzstanTime = "KGT", a.LineIslandsTime = "LINT", a.KazakhstanStandardTime = "KAST", a.LordHoweStandardTime = "LHST", a.LordHoweSummerTime = "LHST", a.MacquarieIslandStationTime = "MIST", a.MagadanTime = "MAGT", a.MalaysiaStandardTime = "MST", a.MalaysiaTime = "MYT", a.MaldivesTime = "MVT", a.MarquesasIslandsTime = "MART", a.MarshallIslandsTime = "MHT", a.MauritiusTime = "MUT", a.MawsonStationTime = "MAWT", a.MiddleEuropeanSummerTime = "MEDT", a.MiddleEuropeanTime = "MET", a.MoscowTime = "MSK", a.MountainDaylightTime = "MDT", a.MountainStandardTime = "MST", a.MyanmarStandardTime = "MMT", a.NepalTime = "NCT", a.NauruTime = "NRT", a.NewCaledoniaTime = "NCT", a.NewZealandDaylightTime = "NZDT", a.NewZealandStandardTime = "NZST", a.NewfoundlandDaylightTime = "NDT", a.NewfoundlandStandardTime = "NST", a.NewfoundlandTime = "NT", a.NiueTime = "NUT", a.NorfolkIslandTime = "NFT", a.NovosibirskTime = "NOVT", a.OmskTime = "OMST", a.OralTime = "ORAT", a.PacificDaylightTime = "PDT", a.PacificStandardTime = "PST", a.PakistanStandardTime = "PKT", a.PalauTime = "PWT", a.PapuaNewGuineaTime = "PGT", a.ParaguaySummerTime = "PYST", a.ParaguayTime = "PYT", a.PeruTime = "PET", a.PhilippineStandardTime = "PHST", a.PhilippineTime = "PHT", a.PhoenixIslandTime = "PHOT", a.PitcairnTime = "PST", a.PohnpeiStandardTime = "PONT", a.ReunionTime = "RET", a.RotheraResearchStationTime = "ROTT", a.SaintPierreAndMiquelonDaylightTime = "PMDT", a.SaintPierreAndMiquelonStandardTime = "PMST", a.SakhalinIslandTime = "SAKT", a.SamaraTime = "SAMT", a.SamoaDaylightTime = "SDT", a.SamoaStandardTime = "SST", a.SeychellesTime = "SCT", a.ShowaStationTime = "SYOT", a.SingaporeStandardTime = "SST", a.SingaporeTime = "SGT", a.SolomonIslandsTime = "SBT", a.SouthAfricanStandardTime = "SAST", a.SouthGeorgiaAndTheSouthSandwichIslandsTime = "GST", a.SrednekolymskTime = "SRET", a.SriLankaStandardTime = "SLST", a.SurinameTime = "SRT", a.TahitiTime = "TAHT", a.TajikistanTime = "TJT", a.ThailandStandardTime = "THA", a.TimorLesteTime = "TLT", a.TokelauTime = "TKT", a.TongaTime = "TOT", a.TurkeyTime = "TRT", a.TurkmenistanTime = "TMT", a.TuvaluTime = "TVT", a.UlaanbaatarStandardTime = "ULAT", a.UlaanbaatarSummerTime = "ULAST", a.UruguayStandardTime = "UYT", a.UruguaySummerTime = "UYST", a.UzbekistanTime = "UZT", a.VanuatuTime = "VUT", a.VenezuelaStandardTime = "VET", a.VladivostokTime = "VLAT", a.VolgogradTime = "VOLT", a.VostokStationTime = "VOST", a.WakeIslandTime = "WAKT", a.WestAfricaSummerTime = "WAST", a.WestAfricaTime = "WAT", a.WestGreenlandSummerTime = "WGST", a.WestGreenlandTime = "WGT", a.WestKazakhstanTime = "WKT", a.WesternEuropeanSummerTime = "WEDT", a.WesternEuropeanTime = "WET", a.WesternIndonesianTime = "WIT", a.WesternStandardTime = "WST", a.YakutskTime = "YAKT", a.YekaterinburgTime = "YEKT";
})(n$3 || (n$3 = {}));
({ dst: { is: false, uses: true }, id: n$3.AcreTime, name: "Acre Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: n$3.AfghanistanTime, name: "Afghanistan Time", offset: i$1.UTC_PLUS_4_30 });
({ dst: { is: false, uses: true }, id: n$3.AIXCentralEuropeanTime, name: "AIX Central European Time", offset: i$1.UTC_PLUS_1 });
({ dst: { is: true, uses: true }, id: n$3.AlaskaDaylightTime, name: "Alaska Daylight Time", offset: i$1.UTC_MINUS_8 });
({ dst: { is: false, uses: true }, id: n$3.AlaskaStandardTime, name: "Alaska Standard Time", offset: i$1.UTC_MINUS_9 });
({ dst: { is: false, uses: true }, id: n$3.AlmaAtaTime, name: "Alma-Ata Time", offset: i$1.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: n$3.AmazonSummerTime, name: "Amazon Summer Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.AmazonTime, name: "Amazon Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: n$3.AnadyrTime, name: "Anadyr Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.AqtobeTime, name: "Aqtobe Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.ArabiaStandardTime, name: "Arabia Standard Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.ArgentinaTime, name: "Argentina Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.ArmeniaTime, name: "Armenia Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: true, uses: true }, id: n$3.AtlanticDaylightTime, name: "Atlantic Daylight Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.AtlanticStandardTime, name: "Atlantic Standard Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: n$3.AustralianCentralDaylightSavingTime, name: "Australian Central Daylight Saving Time", offset: i$1.UTC_PLUS_10_30 });
({ dst: { is: false, uses: true }, id: n$3.AustralianCentralStandardTime, name: "Australian Central Standard Time", offset: i$1.UTC_PLUS_9_30 });
({ dst: { is: false, uses: true }, id: n$3.AustralianCentralWesternStandardTime, name: "Australian Central Western Standard Time", offset: i$1.UTC_PLUS_8_45 });
({ dst: { is: true, uses: true }, id: n$3.AustralianEasternDaylightSavingTime, name: "Australian Eastern Daylight Saving Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.AustralianEasternStandardTime, name: "Australian Eastern Standard Time", offset: i$1.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: n$3.AustralianEasternTime, name: "Australian Eastern Time", offset: i$1.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: n$3.AustralianWesternStandardTime, name: "Australian Western Standard Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.AzerbaijanTime, name: "Azerbaijan Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: n$3.AzoresStandardTime, name: "Azores Standard Time", offset: i$1.UTC_MINUS_1 });
({ dst: { is: true, uses: true }, id: n$3.AzoresSummerTime, name: "Azores Summer Time", offset: i$1.UTC_0 });
({ dst: { is: false, uses: true }, id: n$3.BakerIslandTime, name: "Baker Island Time", offset: i$1.UTC_MINUS_12 });
({ dst: { is: false, uses: true }, id: n$3.BangladeshStandardTime, name: "Bangladesh Standard Time", offset: i$1.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: n$3.BhutanTime, name: "Bhutan Time", offset: i$1.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: n$3.BoliviaTime, name: "Bolivia Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: n$3.BougainvilleStandardTime, name: "Bougainville Standard Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: true, uses: true }, id: n$3.BrasiliaSummerTime, name: "Brasilia Summer Time", offset: i$1.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: n$3.BrasiliaTime, name: "Brasilia Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.BritishIndianOceanTime, name: "British Indian Ocean Time", offset: i$1.UTC_PLUS_6 });
({ dst: { is: true, uses: true }, id: n$3.BritishSummerTime, name: "British Summer Time", offset: i$1.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: n$3.BruneiTime, name: "Brunei Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.CapeVerdeTime, name: "Cape Verde Time", offset: i$1.UTC_MINUS_1 });
({ dst: { is: false, uses: true }, id: n$3.CentralAfricaTime, name: "Central Africa Time", offset: i$1.UTC_PLUS_2 });
({ dst: { is: true, uses: true }, id: n$3.CentralDaylightTime, name: "Central Daylight Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: true, uses: true }, id: n$3.CentralEuropeanSummerTime, name: "Central European Summer Time", offset: i$1.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: n$3.CentralEuropeanTime, name: "Central European Time", offset: i$1.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: n$3.CentralIndonesiaTime, name: "Central Indonesia Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.CentralStandardTime, name: "Central Standard Time", offset: i$1.UTC_MINUS_6 });
({ dst: { is: false, uses: true }, id: n$3.CentralTime, name: "Central Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: n$3.CentralWesternStandardTime, name: "Central Western Standard Time", offset: i$1.UTC_PLUS_8_45 });
({ dst: { is: false, uses: true }, id: n$3.ChamorroStandardTime, name: "Chamorro Standard Time", offset: i$1.UTC_PLUS_10 });
({ dst: { is: true, uses: true }, id: n$3.ChathamDaylightTime, name: "Chatham Daylight Time", offset: i$1.UTC_PLUS_13_45 });
({ dst: { is: false, uses: true }, id: n$3.ChathamStandardTime, name: "Chatham Standard Time", offset: i$1.UTC_PLUS_12_45 });
({ dst: { is: false, uses: true }, id: n$3.ChileStandardTime, name: "Chile Standard Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: n$3.ChileSummerTime, name: "Chile Summer Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.ChinaStandardTime, name: "China Standard Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.ChoibalsanStandardTime, name: "Choibalsan Standard Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: true, uses: true }, id: n$3.ChoibalsanSummerTime, name: "Choibalsan Summer Time", offset: i$1.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: n$3.ChristmasIslandTime, name: "Christmas Island Time", offset: i$1.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: n$3.ChuukTime, name: "Chuuk Time", offset: i$1.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: n$3.ClipptertonIslandStandardTime, name: "Clippterton Island Standard Time", offset: i$1.UTC_MINUS_8 });
({ dst: { is: false, uses: true }, id: n$3.CocosIslandsTime, name: "Cocos Standard Time", offset: i$1.UTC_PLUS_6_30 });
({ dst: { is: true, uses: true }, id: n$3.ColombiaSummerTime, name: "Colombia Summer Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: n$3.ColombiaTime, name: "Colombia Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: n$3.CookIslandTime, name: "Cook Island Time", offset: i$1.UTC_MINUS_10 });
({ dst: { is: false, uses: true }, id: n$3.CoordinatedUniversalTime, name: "Coordinated Universal Time", offset: i$1.UTC_0 });
({ dst: { is: true, uses: true }, id: n$3.CubaDaylightTime, name: "Cuba Daylight Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: n$3.CubaStandardTime, name: "Cuba Standard Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: n$3.DavisTime, name: "Davis Time", offset: i$1.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: n$3.DumontDUrvilleTime, name: "Dumont D'Urville Time", offset: i$1.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: n$3.EastAfricaTime, name: "East Africa Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.EasterIslandStandardTime, name: "Easter Island Standard Time", offset: i$1.UTC_MINUS_6 });
({ dst: { is: true, uses: true }, id: n$3.EasterIslandSummerTime, name: "Easter Island Summer Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: n$3.EasternCaribbeanTime, name: "Eastern Caribbean Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: n$3.EasternDaylightTime, name: "Eastern Daylight Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: n$3.EasternEuropeanSummerTime, name: "Eastern European Summer Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.EasternEuropeanTime, name: "Eastern European Time", offset: i$1.UTC_PLUS_2 });
({ dst: { is: true, uses: true }, id: n$3.EasternGreenlandSummerTime, name: "Eastern Greenland Summer Time", offset: i$1.UTC_0 });
({ dst: { is: false, uses: true }, id: n$3.EasternGreenlandTime, name: "Eastern Greenland Time", offset: i$1.UTC_MINUS_1 });
({ dst: { is: false, uses: true }, id: n$3.EasternIndonesianTime, name: "Eastern Indonesian Time", offset: i$1.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: n$3.EasternStandardTime, name: "Eastern Standard Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: n$3.EasternTime, name: "Eastern Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: n$3.EcuadorTime, name: "Ecuador Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: true, uses: true }, id: n$3.FalklandIslandsSummerTime, name: "Falkland Islands Summer Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.FalklandIslandsTime, name: "Falkland Islands Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: n$3.FernandoDeNoronhaTime, name: "Fernando de Noronha Time", offset: i$1.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: n$3.FijiTime, name: "Fiji Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.FrenchGuianaTime, name: "French Guiana Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.FrenchSouthernAndAntarcticTime, name: "French Southern and Antarctic Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.FurtherEasternEuropeanTime, name: "Further Eastern European Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.GalapagosTime, name: "Galapagos Time", offset: i$1.UTC_MINUS_6 });
({ dst: { is: false, uses: true }, id: n$3.GambierIslandTime, name: "Gambier Island Time", offset: i$1.UTC_MINUS_9 });
({ dst: { is: false, uses: true }, id: n$3.GambierIslandsTime, name: "Gambier Islands Time", offset: i$1.UTC_MINUS_9 });
({ dst: { is: false, uses: true }, id: n$3.GeorgiaStandardTime, name: "Georgia Standard Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: n$3.GilbertIslandTime, name: "Gilbert Island Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.GreenwichMeanTime, name: "Greenwich Mean Time", offset: i$1.UTC_0 });
({ dst: { is: false, uses: true }, id: n$3.GulfStandardTime, name: "Gulf Standard Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: n$3.GuyanaTime, name: "Guyana Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: true, uses: true }, id: n$3.HawaiiAleutianDaylightTime, name: "Hawaii-Aleutian Daylight Time", offset: i$1.UTC_MINUS_9 });
({ dst: { is: false, uses: true }, id: n$3.HawaiiAleutianStandardTime, name: "Hawaii-Aleutian Standard Time", offset: i$1.UTC_MINUS_10 });
({ dst: { is: false, uses: true }, id: n$3.HeardAndMcDonaldIslandsTime, name: "Heard and McDonald Islands Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.HongKongTime, name: "Hong Kong Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: true, uses: true }, id: n$3.HovdSummerTime, name: "Hovd Summer Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.HovdTime, name: "Hovd Time", offset: i$1.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: n$3.IndianOceanTime, name: "Indian Ocean Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.IndianStandardTime, name: "Indian Standard Time", offset: i$1.UTC_PLUS_5_30 });
({ dst: { is: false, uses: true }, id: n$3.IndochinaTime, name: "Indochina Time", offset: i$1.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: n$3.InternationalDayLineWestTime, name: "International Day Line West Time", offset: i$1.UTC_MINUS_12 });
({ dst: { is: true, uses: true }, id: n$3.IranDaylightTime, name: "Iran Daylight Time", offset: i$1.UTC_PLUS_4_30 });
({ dst: { is: false, uses: true }, id: n$3.IranStandardTime, name: "Iran Standard Time", offset: i$1.UTC_PLUS_3_30 });
({ dst: { is: false, uses: true }, id: n$3.IrishStandardTime, name: "Irish Standard Time", offset: i$1.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: n$3.IrkutskTime, name: "Irkutsk Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: true, uses: true }, id: n$3.IsraelDaylightTime, name: "Israel Daylight Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.IsraelStandardTime, name: "Israel Standard Time", offset: i$1.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: n$3.JapanStandardTime, name: "Japan Standard Time", offset: i$1.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: n$3.KaliningradTime, name: "Kaliningrad Time", offset: i$1.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: n$3.KamchatkaTime, name: "Kamchatka Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.KoreaStandardTime, name: "Korea Standard Time", offset: i$1.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: n$3.KosraeTime, name: "Kosrae Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.KrasnoyarskTime, name: "Krasnoyarsk Time", offset: i$1.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: n$3.KyrgyzstanTime, name: "Kyrgyzstan Time", offset: i$1.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: n$3.LineIslandsTime, name: "Line Islands Time", offset: i$1.UTC_PLUS_14 });
({ dst: { is: false, uses: true }, id: n$3.LordHoweStandardTime, name: "Lord Howe Standard Time", offset: i$1.UTC_PLUS_10_30 });
({ dst: { is: false, uses: true }, id: n$3.LordHoweSummerTime, name: "Lord Howe Summer Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.MacquarieIslandStationTime, name: "Macquarie Island Station Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.MagadanTime, name: "Magadan Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.MalaysiaStandardTime, name: "Malaysia Standard Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.MalaysiaTime, name: "Malaysia Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.MaldivesTime, name: "Maldives Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.MarquesasIslandsTime, name: "Marquesas Islands Time", offset: i$1.UTC_PLUS_9_30 });
({ dst: { is: false, uses: true }, id: n$3.MarshallIslandsTime, name: "Marshall Islands Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.MauritiusTime, name: "Mauritius Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: n$3.MawsonStationTime, name: "Mawson Station Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.MiddleEuropeanSummerTime, name: "Middle European Summer Time", offset: i$1.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: n$3.MiddleEuropeanTime, name: "Middle European Time", offset: i$1.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: n$3.MoscowTime, name: "Moscow Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.MountainDaylightTime, name: "Mountain Daylight Time", offset: i$1.UTC_MINUS_6 });
({ dst: { is: false, uses: true }, id: n$3.MountainStandardTime, name: "Mountain Standard Time", offset: i$1.UTC_MINUS_7 });
({ dst: { is: false, uses: true }, id: n$3.MyanmarStandardTime, name: "Myanmar Standard Time", offset: i$1.UTC_PLUS_6_30 });
({ dst: { is: false, uses: true }, id: n$3.NepalTime, name: "Nepal Time", offset: i$1.UTC_PLUS_5_45 });
({ dst: { is: false, uses: true }, id: n$3.NauruTime, name: "Nauru Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.NewCaledoniaTime, name: "New Caledonia Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.NewZealandDaylightTime, name: "New Zealand Daylight Time", offset: i$1.UTC_PLUS_13 });
({ dst: { is: false, uses: true }, id: n$3.NewZealandStandardTime, name: "New Zealand Standard Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.NewfoundlandDaylightTime, name: "Newfoundland Daylight Time", offset: i$1.UTC_MINUS_2_30 });
({ dst: { is: false, uses: true }, id: n$3.NewfoundlandTime, name: "Newfoundland Time", offset: i$1.UTC_MINUS_3_30 });
({ dst: { is: false, uses: true }, id: n$3.NiueTime, name: "Niue Time", offset: i$1.UTC_MINUS_11 });
({ dst: { is: false, uses: true }, id: n$3.NorfolkIslandTime, name: "Norfolk Island Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.NovosibirskTime, name: "Novosibirsk Time", offset: i$1.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: n$3.OmskTime, name: "Omsk Time", offset: i$1.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: n$3.OralTime, name: "Oral Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.PacificDaylightTime, name: "Pacific Daylight Time", offset: i$1.UTC_MINUS_7 });
({ dst: { is: false, uses: true }, id: n$3.PacificStandardTime, name: "Pacific Standard Time", offset: i$1.UTC_MINUS_8 });
({ dst: { is: false, uses: true }, id: n$3.PakistanStandardTime, name: "Pakistan Standard Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.PalauTime, name: "Palau Time", offset: i$1.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: n$3.PapuaNewGuineaTime, name: "Papua New Guinea Time", offset: i$1.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: n$3.ParaguaySummerTime, name: "Paraguay Summer Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.ParaguayTime, name: "Paraguay Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: n$3.PeruTime, name: "Peru Time", offset: i$1.UTC_MINUS_5 });
({ dst: { is: false, uses: true }, id: n$3.PhilippineStandardTime, name: "Philippine Standard Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.PhilippineTime, name: "Philippine Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.PhoenixIslandTime, name: "Phoenix Island Time", offset: i$1.UTC_PLUS_13 });
({ dst: { is: false, uses: true }, id: n$3.PitcairnTime, name: "Pitcairn Time", offset: i$1.UTC_MINUS_8 });
({ dst: { is: false, uses: true }, id: n$3.PohnpeiStandardTime, name: "Pohnpei Standard Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.ReunionTime, name: "Reunion Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: n$3.RotheraResearchStationTime, name: "Rothera Research Station Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.SaintPierreAndMiquelonDaylightTime, name: "Saint Pierre and Miquelon Daylight Time", offset: i$1.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: n$3.SaintPierreAndMiquelonStandardTime, name: "Saint Pierre and Miquelon Standard Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.SakhalinIslandTime, name: "Sakhalin Island Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.SamaraTime, name: "Samara Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: n$3.SamoaDaylightTime, name: "Samoa Daylight Time", offset: i$1.UTC_MINUS_10 });
({ dst: { is: false, uses: true }, id: n$3.SamoaStandardTime, name: "Samoa Standard Time", offset: i$1.UTC_MINUS_11 });
({ dst: { is: false, uses: true }, id: n$3.SeychellesTime, name: "Seychelles Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: n$3.ShowaStationTime, name: "Showa Station Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.SingaporeStandardTime, name: "Singapore Standard Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.SingaporeTime, name: "Singapore Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.SolomonIslandsTime, name: "Solomon Islands Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.SouthAfricanStandardTime, name: "South African Standard Time", offset: i$1.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: n$3.SouthGeorgiaAndTheSouthSandwichIslandsTime, name: "South Georgia and the South Sandwich Islands Time", offset: i$1.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: n$3.SrednekolymskTime, name: "Srednekolymsk Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.SriLankaStandardTime, name: "Sri Lanka Standard Time", offset: i$1.UTC_PLUS_5_30 });
({ dst: { is: false, uses: true }, id: n$3.SurinameTime, name: "Suriname Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.TahitiTime, name: "Tahiti Time", offset: i$1.UTC_MINUS_10 });
({ dst: { is: false, uses: true }, id: n$3.TajikistanTime, name: "Tajikistan Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.ThailandStandardTime, name: "Thailand Standard Time", offset: i$1.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: n$3.TimorLesteTime, name: "Timor-Leste Time", offset: i$1.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: n$3.TokelauTime, name: "Tokelau Time", offset: i$1.UTC_PLUS_13 });
({ dst: { is: false, uses: true }, id: n$3.TongaTime, name: "Tonga Time", offset: i$1.UTC_PLUS_13 });
({ dst: { is: false, uses: true }, id: n$3.TurkeyTime, name: "Turkey Time", offset: i$1.UTC_PLUS_3 });
({ dst: { is: false, uses: true }, id: n$3.TurkmenistanTime, name: "Turkmenistan Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.TuvaluTime, name: "Tuvalu Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.UlaanbaatarStandardTime, name: "Ulaanbaatar Standard Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.UlaanbaatarSummerTime, name: "Ulaanbaatar Summer Time", offset: i$1.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: n$3.UruguayStandardTime, name: "Uruguay Standard Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.UruguaySummerTime, name: "Uruguay Summer Time", offset: i$1.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: n$3.UzbekistanTime, name: "Uzbekistan Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.VanuatuTime, name: "Vanuatu Time", offset: i$1.UTC_PLUS_11 });
({ dst: { is: false, uses: true }, id: n$3.VenezuelaStandardTime, name: "Venezuela Standard Time", offset: i$1.UTC_MINUS_4 });
({ dst: { is: false, uses: true }, id: n$3.VladivostokTime, name: "Vladivostok Time", offset: i$1.UTC_PLUS_10 });
({ dst: { is: false, uses: true }, id: n$3.VolgogradTime, name: "Volgograd Time", offset: i$1.UTC_PLUS_4 });
({ dst: { is: false, uses: true }, id: n$3.VostokStationTime, name: "Vostok Station Time", offset: i$1.UTC_PLUS_6 });
({ dst: { is: false, uses: true }, id: n$3.WakeIslandTime, name: "Wake Island Time", offset: i$1.UTC_PLUS_12 });
({ dst: { is: false, uses: true }, id: n$3.WestAfricaSummerTime, name: "West Africa Summer Time", offset: i$1.UTC_PLUS_2 });
({ dst: { is: false, uses: true }, id: n$3.WestAfricaTime, name: "West Africa Time", offset: i$1.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: n$3.WestGreenlandSummerTime, name: "West Greenland Summer Time", offset: i$1.UTC_MINUS_2 });
({ dst: { is: false, uses: true }, id: n$3.WestGreenlandTime, name: "West Greenland Time", offset: i$1.UTC_MINUS_3 });
({ dst: { is: false, uses: true }, id: n$3.WestKazakhstanTime, name: "West Kazakhstan Time", offset: i$1.UTC_PLUS_5 });
({ dst: { is: false, uses: true }, id: n$3.WesternEuropeanSummerTime, name: "Western European Summer Time", offset: i$1.UTC_PLUS_1 });
({ dst: { is: false, uses: true }, id: n$3.WesternEuropeanTime, name: "Western European Time", offset: i$1.UTC_0 });
({ dst: { is: false, uses: true }, id: n$3.WesternIndonesianTime, name: "Western Indonesian Time", offset: i$1.UTC_PLUS_7 });
({ dst: { is: false, uses: true }, id: n$3.WesternStandardTime, name: "Western Standard Time", offset: i$1.UTC_PLUS_8 });
({ dst: { is: false, uses: true }, id: n$3.YakutskTime, name: "Yakutsk Time", offset: i$1.UTC_PLUS_9 });
({ dst: { is: false, uses: true }, id: n$3.YekaterinburgTime, name: "Yekaterinburg Time", offset: i$1.UTC_PLUS_5 });
var I$1;
(function(a) {
  a.Africa = "Africa", a.Americas = "Americas", a.Asia = "Asia", a.Europe = "Europe", a.Oceania = "Oceania", a.Polar = "Polar";
})(I$1 || (I$1 = {}));
var x$2;
(function(a) {
  a.CentralAmerica = "Central America", a.EasternAsia = "Eastern Asia", a.EasternEurope = "Eastern Europe", a.EasternAfrica = "Eastern Africa", a.MiddleAfrica = "Middle Africa", a.MiddleEast = "Middle East", a.NorthernAfrica = "Northern Africa", a.NorthernAmerica = "Northern America", a.NorthernEurope = "Northern Europe", a.Polynesia = "Polynesia", a.SouthAmerica = "South America", a.SouthernAfrica = "Southern Africa", a.SouthernAsia = "Southern Asia", a.SouthernEurope = "Southern Europe", a.WesternAfrica = "Western Africa", a.WesternAsia = "Western Asia", a.WesternEurope = "Western Europe", a.WesternAustralia = "Western Australia";
})(x$2 || (x$2 = {}));
({ Afghanistan: { i18n: { calling_codes: [93], currencies: [l$2.AfghanistanAfghani], languages: [e$1.Pashto, e$1.Dari, e$1.Turkmen, e$1.Uzbek], tz: { offsets: [i$1.UTC_PLUS_4_30], regions: [t.AsiaKabul], timezones: [n$3.AfghanistanTime] } }, id: r$3.Afghanistan, info: { flag: { emoji: "\u{1F1E6}\u{1F1EB}", emoji_unicode: "U+1F1E6 U+1F1EB", svg: "https://www.countryflags.io/af/flat/64.svg" }, tld: [".af"] }, iso: { alpha2: r$3.Afghanistan, alpha3: "AFG", numeric: "004" }, name: { alt_spellings: ["AF", "Af\u0121\u0101nist\u0101n"], demonym: "Afghan", native: { endonym: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646" }, official: "Islamic Republic of Afghanistan", short: "Afghanistan", translations: { [e$1.Afrikaans]: "Afghanistan", [e$1.Albanian]: "Shqip\xEBri", [e$1.Amharic]: "\u12A0\u134D\u130B\u1295", [e$1.Arabic]: "\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$1.Armenian]: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576", [e$1.Azerbaijani]: "Az\u0259rbaycan", [e$1.Bashkir]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Basque]: "Afganist\xE1n", [e$1.Belarusian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Bengali]: "\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8", [e$1.Berber]: "\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$1.Bhutani]: "\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D", [e$1.Bosnian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Breton]: "Afganistan", [e$1.Bulgarian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Burmese]: "\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A", [e$1.Catalan]: "Afganistan", [e$1.Chinese]: "\u963F\u5BCC\u6C57", [e$1.Croatian]: "Afganistan", [e$1.Czech]: "Afganistan", [e$1.Danish]: "Afghanistan", [e$1.Dutch]: "Afghanistan", [e$1.English]: "Afghanistan", [e$1.Esperanto]: "Afganistan", [e$1.Estonian]: "Afganistan", [e$1.Finnish]: "Afghanistan", [e$1.French]: "Afghanistan", [e$1.Frisian]: "Afghanistan", [e$1.Galician]: "Afganist\xE1n", [e$1.Georgian]: "\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8", [e$1.German]: "Afghanistan", [e$1.Greenlandic]: "Afghanistan", [e$1.Greek]: "\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD", [e$1.Gujarati]: "\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8", [e$1.Haitian]: "Afghanistan", [e$1.Hausa]: "Afghanistan", [e$1.Hebrew]: "\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF", [e$1.Hindi]: "\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928", [e$1.Hungarian]: "Afganistan", [e$1.Icelandic]: "Afghanistan", [e$1.Igbo]: "Afghanistan", [e$1.Indonesian]: "Afghanistan", [e$1.Irish]: "Afghanistan", [e$1.Italian]: "Afghanistan", [e$1.Japanese]: "\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3", [e$1.Javanese]: "Afghanistan", [e$1.Kannada]: "\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8", [e$1.Kazakh]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Khmer]: "\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780", [e$1.Korean]: "\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4", [e$1.Kurdish]: "Afghanistan", [e$1.Kyrgyz]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Lao]: "\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99", [e$1.Latin]: "Afghanistan", [e$1.Latvian]: "Afghanistan", [e$1.Lithuanian]: "Afganistanas", [e$1.Luxembourgish]: "Afghanistan", [e$1.Macedonian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Malagasy]: "Afghanistan", [e$1.Malay]: "Afghanistan", [e$1.Malayalam]: "\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28", [e$1.Maltese]: "Afghanistan", [e$1.Maori]: "Afghanistan", [e$1.Marathi]: "\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928", [e$1.Mongolian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Nepali]: "\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928", [e$1.Norwegian]: "Afghanistan", [e$1.Pashto]: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$1.Persian]: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$1.Polish]: "Afganistan", [e$1.Portuguese]: "Afghanistan", [e$1.Punjabi]: "Afghanistan", [e$1.Romanian]: "Afghanistan", [e$1.Polish]: "Afganistan", [e$1.Russian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Samoan]: "Afghanistan", [e$1.Sanskrit]: "\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928", [e$1.Scots]: "Afghanistan", [e$1.Serbian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Sesotho]: "Afghanistan", [e$1.Shona]: "Afghanistan", [e$1.Sindhi]: "Afghanistan", [e$1.Sinhala]: "\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0", [e$1.Slovak]: "Afganistan", [e$1.Slovenian]: "Afganistan", [e$1.Somali]: "Afghanistan", [e$1.Spanish]: "Afganist\xE1n", [e$1.Sudanese]: "Afghanistan", [e$1.Swahili]: "Afghanistan", [e$1.Swedish]: "Afghanistan", [e$1.Tagalog]: "Afghanistan", [e$1.Tajik]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Tatar]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Tamil]: "\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD", [e$1.Telugu]: "\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D", [e$1.Thai]: "\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19", [e$1.Tibetan]: "\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D", [e$1.Turkish]: "Afganistan", [e$1.Ukrainian]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Urdu]: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646", [e$1.Uzbek]: "\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D", [e$1.Vietnamese]: "Afghanistan", [e$1.Welsh]: "Afghanistan", [e$1.Xhosa]: "Afghanistan", [e$1.Yiddish]: "Afghanistan", [e$1.Yoruba]: "Afghanistan", [e$1.Zulu]: "Afghanistan" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Kabul", total: 341e5 } }, geography: { area: 652230, region: I$1.Asia, sub_region: x$2.SouthernAsia }, government: { capital: "Kabul", type: "Islamic Emirate" } } }, Albania: { i18n: { calling_codes: [355], currencies: [l$2.AlbaniaLek], languages: [e$1.Albanian, e$1.Greek, e$1.Turkish], tz: { offsets: [i$1.UTC_PLUS_1], regions: [t.EuropeBrussels], timezones: [n$3.CentralEuropeanTime] } }, id: r$3.Albania, info: { flag: { emoji: "\u{1F1E6}\u{1F1F1}", emoji_unicode: "U+1F1E6 U+1F1F1", svg: "https://www.countryflags.io/al/flat/64.svg" }, tld: [".al"] }, iso: { alpha2: r$3.Albania, alpha3: "ALB", numeric: "008" }, name: { alt_spellings: ["AL", "Shqip\xEBri", "Shqip\xEBria", "Shqipnia"], demonym: "Albanian", native: { endonym: "Shqip\xEBri" }, official: "Republic of Albania", short: "Albania", translations: { [e$1.Afrikaans]: "Albania", [e$1.Albanian]: "Albania", [e$1.Amharic]: "\u12A0\u120D\u1263\u1295\u12EB", [e$1.Arabic]: "\u0623\u0644\u0628\u0627\u0646\u064A\u0627", [e$1.Armenian]: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576", [e$1.Azerbaijani]: "Az\u0259rbaycan", [e$1.Bashkir]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Basque]: "Albania", [e$1.Belarusian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Bengali]: "\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE", [e$1.Berber]: "\u0623\u0644\u0628\u0627\u0646\u064A\u0627", [e$1.Bhutani]: "\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B", [e$1.Bosnian]: "Albanija", [e$1.Breton]: "Albania", [e$1.Bulgarian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Burmese]: "\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A", [e$1.Catalan]: "Alb\xE0nia", [e$1.Chinese]: "\u963F\u5C14\u5DF4\u5C3C\u4E9A", [e$1.Croatian]: "Albanija", [e$1.Czech]: "Alb\xE1nie", [e$1.Danish]: "Albanien", [e$1.Dutch]: "Albani\xEB", [e$1.English]: "Albania", [e$1.Esperanto]: "Albanio", [e$1.Estonian]: "Albaania", [e$1.Finnish]: "Albania", [e$1.French]: "Albanie", [e$1.Frisian]: "Albani\xEB", [e$1.Galician]: "Alb\xE2nia", [e$1.Georgian]: "\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0", [e$1.German]: "Albanien", [e$1.Greenlandic]: "Albania", [e$1.Greek]: "\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1", [e$1.Gujarati]: "\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE", [e$1.Haitian]: "Albanais", [e$1.Hausa]: "Albania", [e$1.Hebrew]: "\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4", [e$1.Hindi]: "\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E", [e$1.Hungarian]: "Alb\xE1nia", [e$1.Icelandic]: "Alb\xFAnir", [e$1.Igbo]: "Albania", [e$1.Indonesian]: "Albania", [e$1.Irish]: "Alb\xE1in", [e$1.Italian]: "Albania", [e$1.Japanese]: "\u30A2\u30EB\u30D0\u30CB\u30A2", [e$1.Javanese]: "Albania", [e$1.Kannada]: "\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE", [e$1.Kazakh]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Khmer]: "\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8", [e$1.Korean]: "\uC54C\uBC14\uB2C8\uC544", [e$1.Kurdish]: "\u0622\u0644\u0628\u0627\u0646\u06CC\u0627", [e$1.Kyrgyz]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Lao]: "\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5", [e$1.Latin]: "Albania", [e$1.Latvian]: "Alb\u0101nija", [e$1.Lithuanian]: "Albanija", [e$1.Luxembourgish]: "Albani\xEB", [e$1.Macedonian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430", [e$1.Malagasy]: "Albania", [e$1.Malay]: "Albania", [e$1.Malayalam]: "\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E", [e$1.Maltese]: "Albania", [e$1.Maori]: "Albania", [e$1.Marathi]: "\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E", [e$1.Mongolian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Nepali]: "\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E", [e$1.Norwegian]: "Albania", [e$1.Pashto]: "\u0627\u0627\u0644\u0628\u0627\u0646\u06CC", [e$1.Persian]: "\u0622\u0644\u0628\u0627\u0646\u06CC", [e$1.Polish]: "Albania", [e$1.Portuguese]: "Alb\xE2nia", [e$1.Punjabi]: "\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06", [e$1.Romanian]: "Alb\u0103n", [e$1.Russian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Samoan]: "Albania", [e$1.Sanskrit]: "Albani", [e$1.Scots]: "Alb\xE0inia", [e$1.Serbian]: "\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430", [e$1.Sesotho]: "Albania", [e$1.Shona]: "Albania", [e$1.Sindhi]: "Albania", [e$1.Sinhala]: "\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA", [e$1.Slovak]: "Alb\xE1nsko", [e$1.Slovenian]: "Albanija", [e$1.Somali]: "Albania", [e$1.Spanish]: "Albania", [e$1.Sudanese]: "Albania", [e$1.Swahili]: "Albania", [e$1.Swedish]: "Albanien", [e$1.Tagalog]: "Albania", [e$1.Tajik]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Tamil]: "\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE", [e$1.Tatar]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Telugu]: "\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E", [e$1.Thai]: "\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35", [e$1.Tibetan]: "\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72", [e$1.Turkish]: "Albaniye", [e$1.Ukrainian]: "\u0410\u043B\u0431\u0430\u043D\u0456\u044F", [e$1.Urdu]: "\u0622\u0644\u0628\u0627\u0646\u06CC", [e$1.Uzbek]: "\u0410\u043B\u0431\u0430\u043D\u0438\u044F", [e$1.Vietnamese]: "Albanie", [e$1.Welsh]: "Albania", [e$1.Xhosa]: "Albania", [e$1.Yiddish]: "\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9", [e$1.Yoruba]: "Albania", [e$1.Zulu]: "Albania" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Tirana", total: 2853e3 } }, geography: { area: 28748, region: I$1.Europe, sub_region: x$2.SouthernEurope }, government: { capital: "Tirana", type: "Republic" } } }, Algeria: { i18n: { calling_codes: [213], currencies: [l$2.AlgeriaDinar], languages: [e$1.Arabic, e$1.French, e$1.Berber, e$1.Tamazight], tz: { offsets: [i$1.UTC_PLUS_1, i$1.UTC_PLUS_2], regions: [t.AfricaAlgiers], timezones: [n$3.CentralEuropeanTime] } }, id: r$3.Algeria, info: { flag: { emoji: "\u{1F1E9}\u{1F1FF}", emoji_unicode: "U+1F1E9 U+1F1FF", svg: "https://www.countryflags.io/dz/flat/64.svg" }, tld: [".dz", ".\u062C\u0632\u0627\u0626\u0631"] }, iso: { alpha2: r$3.Algeria, alpha3: "DZA", numeric: "012" }, name: { alt_spellings: ["DZ", "Dzayer", "Alg\xE9rie"], demonym: "Algerian", native: { endonym: "\u0627\u0644\u062C\u0632\u0627\u0626\u0631" }, official: "People's Democratic Republic of Algeria", short: "Algeria", translations: { [e$1.Afrikaans]: "Algerije", [e$1.Albanian]: "Algeria", [e$1.Amharic]: "\u12A0\u120D\u1300\u122D\u1235", [e$1.Arabic]: "\u0627\u0644\u062C\u0632\u0627\u0626\u0631", [e$1.Armenian]: "\u0531\u056C\u0563\u0578\u0580\u056B\u0561", [e$1.Azerbaijani]: "Az\u0259rbaycan", [e$1.Bashkir]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Basque]: "Algeria", [e$1.Belarusian]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Bengali]: "\u0986\u09B2\u099C\u09C7\u09B0", [e$1.Berber]: "\u062C\u0632\u0627\u0626\u0631", [e$1.Bhutani]: "\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41", [e$1.Bosnian]: "Al\u017Eir", [e$1.Breton]: "Algeria", [e$1.Bulgarian]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Burmese]: "\u1021\u102C\u101B\u1015\u103A", [e$1.Catalan]: "Alg\xE8ria", [e$1.Chinese]: "\u963F\u5C14\u53CA\u5229\u4E9A", [e$1.Croatian]: "Al\u017Eir", [e$1.Czech]: "Al\u017E\xEDrsko", [e$1.Danish]: "Algeriet", [e$1.Dutch]: "Algerije", [e$1.English]: "Algeria", [e$1.Esperanto]: "Al\u011Derio", [e$1.Estonian]: "Al\u017Eira", [e$1.Finnish]: "Algeria", [e$1.French]: "Alg\xE9rie", [e$1.Frisian]: "Algeri\xEB", [e$1.Galician]: "Alxeria", [e$1.Georgian]: "\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8", [e$1.German]: "Algerien", [e$1.Greenlandic]: "Algeria", [e$1.Greek]: "\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1", [e$1.Gujarati]: "\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE", [e$1.Haitian]: "Alg\xE9rie", [e$1.Hausa]: "Algeria", [e$1.Hebrew]: "\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4", [e$1.Hindi]: "\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E", [e$1.Hungarian]: "Alg\xE1r", [e$1.Icelandic]: "Alg\xFAra", [e$1.Igbo]: "Algeria", [e$1.Indonesian]: "Aljir", [e$1.Irish]: "Alg\xE9rie", [e$1.Italian]: "Algeria", [e$1.Japanese]: "\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2", [e$1.Javanese]: "Aljir", [e$1.Kannada]: "\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD", [e$1.Kazakh]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Khmer]: "\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8", [e$1.Korean]: "\uC54C\uC81C\uB9AC", [e$1.Kurdish]: "\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631", [e$1.Kyrgyz]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Lao]: "\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99", [e$1.Latin]: "Algeria", [e$1.Latvian]: "Al\u017E\u012Brija", [e$1.Lithuanian]: "Al\u017Eyras", [e$1.Luxembourgish]: "Algeria", [e$1.Macedonian]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Malagasy]: "Alg\xE9rie", [e$1.Malay]: "Aljir", [e$1.Malayalam]: "\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B", [e$1.Maltese]: "Alg\xE9rie", [e$1.Maori]: "Algeria", [e$1.Marathi]: "\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E", [e$1.Mongolian]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Nepali]: "\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E", [e$1.Norwegian]: "Algeria", [e$1.Pashto]: "\u0627\u0644\u062C\u0632\u0627\u0626\u0631", [e$1.Persian]: "\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628", [e$1.Polish]: "Algieria", [e$1.Portuguese]: "Alg\xE9ria", [e$1.Punjabi]: "\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06", [e$1.Romanian]: "Algeria", [e$1.Russian]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Samoan]: "Algeria", [e$1.Sanskrit]: "\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E", [e$1.Scots]: "Algeria", [e$1.Serbian]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Sesotho]: "Algeria", [e$1.Shona]: "Algeria", [e$1.Sindhi]: "Algeria", [e$1.Sinhala]: "\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA", [e$1.Slovak]: "Al\u017E\xEDrsko", [e$1.Slovenian]: "Al\u017Eir", [e$1.Somali]: "Algeria", [e$1.Spanish]: "Algeria", [e$1.Sudanese]: "Aljir", [e$1.Swahili]: "Aljir", [e$1.Swedish]: "Algeriet", [e$1.Tagalog]: "Algeria", [e$1.Tajik]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Tamil]: "\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE", [e$1.Tatar]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Telugu]: "\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E", [e$1.Thai]: "\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19", [e$1.Tibetan]: "\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72", [e$1.Turkish]: "Cezayir", [e$1.Ukrainian]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Urdu]: "\u0622\u0644\u062C\u06CC\u0631", [e$1.Uzbek]: "\u0410\u043B\u0436\u0438\u0440", [e$1.Vietnamese]: "\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5", [e$1.Welsh]: "Algeria", [e$1.Xhosa]: "Algeria", [e$1.Yiddish]: "\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4", [e$1.Yoruba]: "Algeria", [e$1.Zulu]: "Algeria" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Oran", total: 371e5 } }, geography: { area: 2381740, region: I$1.Africa, sub_region: x$2.NorthernAfrica }, government: { capital: "Algiers", type: "Republic" } } }, AmericanSamoa: { i18n: { calling_codes: [1684], currencies: [l$2.AmericanSamoaTala], languages: [e$1.English, e$1.Samoan], tz: { offsets: [i$1.UTC_MINUS_11], regions: [t.PacificSamoa], timezones: [n$3.SamoaStandardTime] } }, id: r$3.AmericanSamoa, info: { flag: { emoji: "\u{1F1E6}\u{1F1F8}", emoji_unicode: "U+1F1E6 U+1F1F8", svg: "https://www.countryflags.io/as/flat/64.svg" }, tld: [".as"] }, iso: { alpha2: r$3.AmericanSamoa, alpha3: "ASM", numeric: "016" }, name: { alt_spellings: ["AS", "Amerika S\u0101moa", "Amelika S\u0101moa", "S\u0101moa Amelika"], demonym: "American Samoan", native: { endonym: "American Samoa" }, official: "American Samoa", short: "American Samoa", translations: { [e$1.Afrikaans]: "Amerikaans Samoa", [e$1.Albanian]: "Samoa Amerikane", [e$1.Amharic]: "\u1233\u121E\u12A0\u122D", [e$1.Arabic]: "\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629", [e$1.Armenian]: "\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561", [e$1.Azerbaijani]: "Samoa Amerikana", [e$1.Bashkir]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430", [e$1.Basque]: "Samoa Amerikana", [e$1.Belarusian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430", [e$1.Bengali]: "\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE", [e$1.Berber]: "\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629", [e$1.Bhutani]: "\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D", [e$1.Bosnian]: "Ameri\u010Dka Samoa", [e$1.Breton]: "Samoa Amerikan", [e$1.Bulgarian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430", [e$1.Burmese]: "\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C", [e$1.Catalan]: "Samoa Americana", [e$1.Chinese]: "\u7F8E\u5C5E\u8428\u6469\u4E9A", [e$1.Croatian]: "Ameri\u010Dka Samoa", [e$1.Czech]: "Americk\xE1 Samoa", [e$1.Danish]: "Amerikansk Samoa", [e$1.Dutch]: "Amerikaans Samoa", [e$1.English]: "American Samoa", [e$1.Esperanto]: "Samoa Amerika", [e$1.Estonian]: "Ameerika Samoa", [e$1.Finnish]: "Amerikka Samoa", [e$1.French]: "American Samoa", [e$1.Frisian]: "Amerikaans Samoa", [e$1.Galician]: "Samoa Americana", [e$1.Georgian]: "\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0", [e$1.German]: "Amerikanisch-Samoa", [e$1.Greenlandic]: "Amerikaans Samoa", [e$1.Greek]: "\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1", [e$1.Gujarati]: "\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE", [e$1.Haitian]: "Amerikaans Samoa", [e$1.Hausa]: "Amerikaans Samoa", [e$1.Hebrew]: "\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4", [e$1.Hindi]: "\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906", [e$1.Hungarian]: "Amerikai Szamoa", [e$1.Icelandic]: "Amerikai Szamoa", [e$1.Igbo]: "Ikina Amerika", [e$1.Indonesian]: "Samoa Amerika", [e$1.Irish]: "Samoa Amerikana", [e$1.Italian]: "Samoa Americane", [e$1.Japanese]: "\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2", [e$1.Javanese]: "Samoa Amerika", [e$1.Kannada]: "\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86", [e$1.Kazakh]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430", [e$1.Khmer]: "\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB", [e$1.Korean]: "\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544", [e$1.Kurdish]: "Amerikaans Samoa", [e$1.Kyrgyz]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430", [e$1.Lao]: "\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94", [e$1.Latin]: "Samoa Amerikana", [e$1.Latvian]: "Amerikas Samoa", [e$1.Lithuanian]: "Amerikos Samoa", [e$1.Luxembourgish]: "Amerikaans Samoa", [e$1.Macedonian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430", [e$1.Malagasy]: "Samoa Amerika", [e$1.Malay]: "Amerika Samo", [e$1.Malayalam]: "\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06", [e$1.Maltese]: "Samoa Amerika", [e$1.Maori]: "Samoa Amerika", [e$1.Marathi]: "\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906", [e$1.Mongolian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430", [e$1.Nepali]: "\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906", [e$1.Norwegian]: "Amerikansk Samoa", [e$1.Pashto]: "\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627", [e$1.Persian]: "\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627", [e$1.Polish]: "Samoa Ameryka\u0144skie", [e$1.Portuguese]: "Samoa Americana", [e$1.Punjabi]: "\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06", [e$1.Romanian]: "Samoa americane", [e$1.Russian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430", [e$1.Samoan]: "Samoa Amerika", [e$1.Sanskrit]: "\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906", [e$1.Scots]: "Amerikaans Samoa", [e$1.Serbian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430", [e$1.Sesotho]: "Amerikaans Samoa", [e$1.Shona]: "Amerikaans Samoa", [e$1.Sindhi]: "Amerikaans Samoa", [e$1.Sinhala]: "\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0", [e$1.Slovak]: "Amerikaans Samoa", [e$1.Slovenian]: "Amerikaans Samoa", [e$1.Somali]: "Amerikaans Samoa", [e$1.Spanish]: "Samoa Americana", [e$1.Sudanese]: "Amerikaans Samoa", [e$1.Swahili]: "Amerikaans Samoa", [e$1.Swedish]: "Amerikansk Samoa", [e$1.Tagalog]: "Amerikaans Samoa", [e$1.Tajik]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430", [e$1.Tamil]: "\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE", [e$1.Tatar]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430", [e$1.Telugu]: "\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E", [e$1.Thai]: "\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32", [e$1.Tibetan]: "\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40", [e$1.Turkish]: "Amerikan Samoas\u0131", [e$1.Ukrainian]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430", [e$1.Urdu]: "\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627", [e$1.Uzbek]: "\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430", [e$1.Vietnamese]: "Amerikaans Samoa", [e$1.Welsh]: "Amerikaans Samoa", [e$1.Xhosa]: "Amerikaans Samoa", [e$1.Yiddish]: "Amerikaans Samoa", [e$1.Yoruba]: "Amerikaans Samoa", [e$1.Zulu]: "Amerikaans Samoa" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Pago Pago", total: 558e3 } }, geography: { area: 199, region: I$1.Oceania, sub_region: x$2.Polynesia }, government: { capital: "Pago Pago", type: "Nonmetropolitan Territory of the US" } } }, Andorra: { i18n: { calling_codes: [376], currencies: [l$2.Euro], languages: [e$1.Catalan, e$1.Spanish], tz: { offsets: [i$1.UTC_PLUS_1, i$1.UTC_PLUS_2], regions: [t.EuropeAndorra], timezones: [n$3.CentralEuropeanTime] } }, id: r$3.Andorra, info: { flag: { emoji: "\u{1F1E6}\u{1F1F4}", emoji_unicode: "U+1F1E6 U+1F1F4", svg: "https://www.countryflags.io/ad/flat/64.svg" }, tld: [".ad"] }, iso: { alpha2: r$3.Andorra, alpha3: "AND", numeric: "020" }, name: { alt_spellings: ["AD", "Principality of Andorra", "Principat d'Andorra"], demonym: "Andorran", native: { endonym: "Andorra" }, official: "Principality of Andorra", short: "Andorra", translations: { [e$1.Afrikaans]: "Andorra", [e$1.Albanian]: "Andorra", [e$1.Amharic]: "\u12A0\u1295\u12F6\u122B", [e$1.Arabic]: "\u0623\u0646\u062F\u0648\u0631\u0627", [e$1.Armenian]: "\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584", [e$1.Azerbaijani]: "Andorra", [e$1.Bashkir]: "\u0410\u043D\u0434\u043E\u0440\u0430", [e$1.Basque]: "Andorra", [e$1.Belarusian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Bengali]: "\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE", [e$1.Berber]: "\u0623\u0646\u062F\u0648\u0631\u0627", [e$1.Bhutani]: "\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B", [e$1.Bosnian]: "Andora", [e$1.Breton]: "Andorra", [e$1.Bulgarian]: "\u0410\u043D\u0434\u043E\u0440\u0430", [e$1.Burmese]: "\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038", [e$1.Catalan]: "Andorra", [e$1.Chinese]: "\u5B89\u9053\u5C14", [e$1.Croatian]: "Andora", [e$1.Czech]: "Andorra", [e$1.Danish]: "Andorra", [e$1.Dutch]: "Andorra", [e$1.English]: "Andorra", [e$1.Esperanto]: "Andora", [e$1.Estonian]: "Andorra", [e$1.Finnish]: "Andorra", [e$1.French]: "Andorra", [e$1.Frisian]: "Andorra", [e$1.Galician]: "Andorra", [e$1.Georgian]: "\u12A0\u1295\u12F6\u122B", [e$1.German]: "Andorra", [e$1.Greek]: "\u0391\u03BD\u03B4\u03CC\u03C1\u03B1", [e$1.Hebrew]: "\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4", [e$1.Hindi]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$1.Hungarian]: "Andorra", [e$1.Icelandic]: "Andorra", [e$1.Igbo]: "Andorra", [e$1.Indonesian]: "Andorra", [e$1.Irish]: "Andorra", [e$1.Italian]: "Andorra", [e$1.Japanese]: "\u30A2\u30F3\u30C9\u30E9", [e$1.Javanese]: "Andorra", [e$1.Kannada]: "\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD", [e$1.Kazakh]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Khmer]: "\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6", [e$1.Korean]: "\uC548\uB3C4\uB77C", [e$1.Kurdish]: "Andorra", [e$1.Kyrgyz]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Lao]: "\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2", [e$1.Latin]: "Andorra", [e$1.Latvian]: "Andora", [e$1.Lithuanian]: "Andora", [e$1.Luxembourgish]: "Andorra", [e$1.Macedonian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Malagasy]: "Andorra", [e$1.Malay]: "Andorra", [e$1.Malayalam]: "\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D", [e$1.Maltese]: "Andorra", [e$1.Maori]: "Andorra", [e$1.Marathi]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$1.Mongolian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Nepali]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$1.Norwegian]: "Andorra", [e$1.Pashto]: "\u0622\u0646\u062F\u0648\u0631\u0627", [e$1.Persian]: "\u0622\u0646\u062F\u0648\u0631\u0627", [e$1.Polish]: "Andora", [e$1.Portuguese]: "Andorra", [e$1.Punjabi]: "\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E", [e$1.Romanian]: "Andorra", [e$1.Russian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Samoan]: "Andorra", [e$1.Sanskrit]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$1.Scots]: "Andorra", [e$1.Serbian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Sesotho]: "Andorra", [e$1.Shona]: "Andorra", [e$1.Sindhi]: "\u0905\u0902\u0921\u094B\u0930\u093E", [e$1.Sinhala]: "\u0D86\u0DB1\u0DCA\u0DAF\u0DDA", [e$1.Slovak]: "Andorra", [e$1.Slovenian]: "Andora", [e$1.Somali]: "Andorra", [e$1.Spanish]: "Andorra", [e$1.Sudanese]: "Andorra", [e$1.Swahili]: "Andorra", [e$1.Swedish]: "Andorra", [e$1.Tagalog]: "Andorra", [e$1.Tajik]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Tamil]: "\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE", [e$1.Tatar]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Telugu]: "\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E", [e$1.Thai]: "\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32", [e$1.Tibetan]: "\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B", [e$1.Turkish]: "Andora", [e$1.Ukrainian]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Urdu]: "\u0622\u0646\u062F\u0648\u0631\u0627", [e$1.Uzbek]: "\u0410\u043D\u0434\u043E\u0440\u0440\u0430", [e$1.Vietnamese]: "Andorra", [e$1.Welsh]: "Andorra", [e$1.Xhosa]: "Andorra", [e$1.Yiddish]: "\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4", [e$1.Yoruba]: "Andorra", [e$1.Zulu]: "Andorra" } }, statistics: { demographics: { age: { distribution: [{ age: "0 to 14 years", percentage: 15.3 }, { age: "15 to 64 years", percentage: 66.7 }, { age: "65 years and over", percentage: 14.6 }], median_age: 35.5 }, population: { largest_city: "Andorra la Vella", total: 78e3 } }, geography: { area: 468, region: I$1.Europe, sub_region: x$2.SouthernEurope }, government: { capital: "Andorra la Vella", type: "Constitutional Monarchy" } } }, Angola: { i18n: { calling_codes: [244], currencies: [l$2.AngolaKwanza], languages: [e$1.Portuguese, e$1.Spanish, e$1.French, e$1.Italian, e$1.German, e$1.English], tz: { offsets: [i$1.UTC_0, i$1.UTC_PLUS_1, i$1.UTC_PLUS_2], regions: [t.AfricaLuanda], timezones: [n$3.WestAfricaTime] } }, id: r$3.Angola, info: { flag: { emoji: "\u{1F1E6}\u{1F1EC}", emoji_unicode: "U+1F1E6 U+1F1EC", svg: "https://www.countryflags.io/ao/flat/64.svg" }, tld: [".ao"] }, iso: { alpha2: r$3.Angola, alpha3: "AGO", numeric: "024" }, name: { alt_spellings: ["AO", "Rep\xFAblica de Angola", "\u0281\u025Bpublika de an"], demonym: "Angolan", native: { endonym: "Angola" }, official: "Republic of Angola", short: "Angola", translations: { [e$1.Afrikaans]: "Angola", [e$1.Albanian]: "Ang\xF2la", [e$1.Amharic]: "\u12A0\u1295\u130E\u120A\u12EB", [e$1.Arabic]: "\u0623\u0646\u063A\u0648\u0644\u0627", [e$1.Armenian]: "\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561", [e$1.Azerbaijani]: "Ang\u0259l", [e$1.Bashkir]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Basque]: "Angola", [e$1.Belarusian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Bengali]: "\u0985\u0999\u09CD\u0997\u09B2\u09BE", [e$1.Berber]: "Angola", [e$1.Bhutani]: "\u0F60\u0F56\u0FB2\u0F74\u0F42", [e$1.Bosnian]: "Angola", [e$1.Breton]: "Angola", [e$1.Bulgarian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Burmese]: "\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A", [e$1.Catalan]: "Angola", [e$1.Chinese]: "\u5B89\u54E5\u62C9", [e$1.Croatian]: "Angola", [e$1.Czech]: "Angola", [e$1.Danish]: "Angola", [e$1.Dutch]: "Angola", [e$1.English]: "Angola", [e$1.Esperanto]: "Angolo", [e$1.Estonian]: "Angola", [e$1.Finnish]: "Angola", [e$1.French]: "Angola", [e$1.Frisian]: "Angola", [e$1.Galician]: "Angola", [e$1.Georgian]: "\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0", [e$1.German]: "Angola", [e$1.Greenlandic]: "Angola", [e$1.Greek]: "\u0391\u03B3\u03BA\u03CC\u03BB\u03B1", [e$1.Gujarati]: "\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE", [e$1.Haitian]: "Angola", [e$1.Hausa]: "Angola", [e$1.Hebrew]: "\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4", [e$1.Hindi]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$1.Hungarian]: "Angola", [e$1.Icelandic]: "Angola", [e$1.Igbo]: "Angola", [e$1.Indonesian]: "Angola", [e$1.Irish]: "Angola", [e$1.Italian]: "Angola", [e$1.Japanese]: "\u30A2\u30F3\u30B4\u30E9", [e$1.Javanese]: "Anggol", [e$1.Kannada]: "\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE", [e$1.Kazakh]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Khmer]: "\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F", [e$1.Korean]: "\uC559\uACE8\uB77C", [e$1.Kurdish]: "Angola", [e$1.Kyrgyz]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Lao]: "\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2", [e$1.Latin]: "Angola", [e$1.Latvian]: "Angola", [e$1.Lithuanian]: "Angola", [e$1.Luxembourgish]: "Angola", [e$1.Macedonian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Malagasy]: "Angola", [e$1.Malay]: "Angola", [e$1.Malayalam]: "\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E", [e$1.Maltese]: "Angola", [e$1.Maori]: "Angola", [e$1.Marathi]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$1.Mongolian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Nepali]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$1.Norwegian]: "Angola", [e$1.Pashto]: "\u0627\u0646\u06AB\u0648\u0644\u0627", [e$1.Persian]: "\u0622\u0646\u06AF\u0648\u0644\u0627", [e$1.Polish]: "Angola", [e$1.Portuguese]: "Angola", [e$1.Punjabi]: "\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E", [e$1.Romanian]: "Angole", [e$1.Russian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Samoan]: "Angola", [e$1.Sanskrit]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$1.Scots]: "Angola", [e$1.Serbian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Sesotho]: "Angola", [e$1.Shona]: "Angola", [e$1.Sindhi]: "\u0905\u0919\u094D\u0917\u094B\u0932\u093E", [e$1.Sinhala]: "\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0", [e$1.Slovak]: "Angola", [e$1.Slovenian]: "Angola", [e$1.Somali]: "Angola", [e$1.Spanish]: "Angola", [e$1.Sudanese]: "Angola", [e$1.Swahili]: "Angola", [e$1.Swedish]: "Angola", [e$1.Tagalog]: "Angola", [e$1.Tajik]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Tamil]: "\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE", [e$1.Tatar]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Telugu]: "\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E", [e$1.Thai]: "\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19", [e$1.Tibetan]: "\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B", [e$1.Turkish]: "Angola", [e$1.Ukrainian]: "\u0410\u043D\u0433\u043E\u043B\u0430", [e$1.Urdu]: "\u0627\u0646\u06AF\u0648\u0644\u0627", [e$1.Uzbek]: "Angola", [e$1.Vietnamese]: "Angola", [e$1.Xhosa]: "Angola", [e$1.Welsh]: "Angola", [e$1.Yiddish]: "\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4", [e$1.Yoruba]: "Angola", [e$1.Zulu]: "Angola" } } }, Anguilla: { i18n: { calling_codes: [1264], currencies: [l$2.DominicaDollar, l$2.EastCaribbeanDollar, l$2.Euro, l$2.UnitedStatesDollar, l$2.BritishPound], languages: [e$1.English, e$1.Spanish], tz: { offsets: [i$1.UTC_MINUS_4], regions: [t.AmericaAnguilla], timezones: [n$3.AtlanticStandardTime] } }, id: r$3.Anguilla, info: { flag: { emoji: "\u{1F1E6}\u{1F1EC}", emoji_unicode: "U+1F1E6 U+1F1EC", svg: "https://www.countryflags.io/ai/flat/64.svg" }, tld: [".ai"] }, iso: { alpha2: r$3.Anguilla, alpha3: "AIA", numeric: "660" }, name: { alt_spellings: ["AI"], demonym: "Anguillian", native: { endonym: "Anguilla" }, official: "Anguilla", short: "Anguilla", translations: { [e$1.Afrikaans]: "Anguilla", [e$1.Albanian]: "Anguilla", [e$1.Amharic]: "\u12A0\u1295\u1309\u120B", [e$1.Arabic]: "\u0623\u0646\u063A\u0648\u064A\u0644\u0627", [e$1.Armenian]: "\u0531\u0576\u0563\u056B\u056C\u0561", [e$1.Azerbaijani]: "Az\u0259rbaycan", [e$1.Bashkir]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Basque]: "Angila", [e$1.Belarusian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Bengali]: "\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE", [e$1.Berber]: "\u0623\u0646\u063A\u0648\u064A\u0644\u0627", [e$1.Bhutani]: "\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B", [e$1.Bosnian]: "Angila", [e$1.Breton]: "Angila", [e$1.Bulgarian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Burmese]: "\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A", [e$1.Catalan]: "Angilla", [e$1.Chinese]: "\u5B89\u572D\u62C9", [e$1.Croatian]: "Angila", [e$1.Czech]: "Anguilla", [e$1.Danish]: "Anguilla", [e$1.Dutch]: "Anguilla", [e$1.English]: "Anguilla", [e$1.Esperanto]: "Angila", [e$1.Estonian]: "Anguilla", [e$1.Finnish]: "Anguilla", [e$1.French]: "Anguilla", [e$1.Frisian]: "Angila", [e$1.Galician]: "Anguilla", [e$1.Georgian]: "\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0", [e$1.German]: "Anguilla", [e$1.Greenlandic]: "Anguilla", [e$1.Greek]: "\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC", [e$1.Gujarati]: "\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE", [e$1.Haitian]: "Anguilla", [e$1.Hausa]: "Anguilla", [e$1.Hebrew]: "\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4", [e$1.Hindi]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$1.Hungarian]: "Anguilla", [e$1.Icelandic]: "Anguilla", [e$1.Igbo]: "Anguilla", [e$1.Indonesian]: "Anguilla", [e$1.Irish]: "Anguilla", [e$1.Italian]: "Anguilla", [e$1.Japanese]: "\u30A2\u30F3\u30AE\u30E9", [e$1.Javanese]: "Anguilla", [e$1.Kannada]: "\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE", [e$1.Kazakh]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Khmer]: "\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798", [e$1.Korean]: "\uC575\uADC8\uB77C", [e$1.Kurdish]: "Anguilla", [e$1.Kyrgyz]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Lao]: "\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3", [e$1.Latin]: "Anguilla", [e$1.Latvian]: "Anguilla", [e$1.Lithuanian]: "Anguilla", [e$1.Luxembourgish]: "Angilla", [e$1.Macedonian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Malagasy]: "Angila", [e$1.Malay]: "Anguilla", [e$1.Malayalam]: "\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E", [e$1.Maltese]: "Anguilla", [e$1.Maori]: "Anguilla", [e$1.Marathi]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$1.Mongolian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Nepali]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$1.Norwegian]: "Anguilla", [e$1.Pashto]: "\u0622\u0646\u06AF\u0648\u0644\u0627", [e$1.Persian]: "\u0622\u0646\u06AF\u0648\u0644\u0627", [e$1.Polish]: "Anguilla", [e$1.Portuguese]: "Anguilla", [e$1.Punjabi]: "\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E", [e$1.Romanian]: "Anguilla", [e$1.Russian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Samoan]: "Anguilla", [e$1.Sanskrit]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$1.Scots]: "Anguilla", [e$1.Serbian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Sesotho]: "Anguilla", [e$1.Shona]: "Anguilla", [e$1.Sindhi]: "\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E", [e$1.Sinhala]: "\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0", [e$1.Slovak]: "Anguilla", [e$1.Slovenian]: "Anguilla", [e$1.Somali]: "Anguilla", [e$1.Spanish]: "Anguilla", [e$1.Sudanese]: "Anguilla", [e$1.Swahili]: "Anguilla", [e$1.Swedish]: "Anguilla", [e$1.Tagalog]: "Anguilla", [e$1.Tajik]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Tamil]: "\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE", [e$1.Tatar]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Telugu]: "\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E", [e$1.Thai]: "\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32", [e$1.Tibetan]: "\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B", [e$1.Turkish]: "Anguilla", [e$1.Ukrainian]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Urdu]: "\u0622\u0646\u06AF\u0648\u0644\u0627", [e$1.Uzbek]: "\u0410\u043D\u0433\u0438\u043B\u0438", [e$1.Vietnamese]: "Anguilla", [e$1.Welsh]: "Anguilla", [e$1.Xhosa]: "Anguilla", [e$1.Yiddish]: "Anguilla", [e$1.Yoruba]: "Anguilla", [e$1.Zulu]: "Anguilla" } } }, Antarctica: { i18n: { calling_codes: [672], currencies: [l$2.UnitedStatesDollar, l$2.Euro], languages: [e$1.English, e$1.Spanish, e$1.French, e$1.Portuguese, e$1.Italian, e$1.Dutch, e$1.German, e$1.Swedish, e$1.Norwegian, e$1.Danish, e$1.Finnish], tz: { offsets: [i$1.UTC_PLUS_1, i$1.UTC_PLUS_2], regions: [t.AntarcticaCasey, t.AntarcticaDavis, t.AntarcticaMcMurdo, t.AntarcticaPalmer, t.AntarcticaRothera], timezones: [n$3.AtlanticStandardTime, n$3.CentralTime, n$3.EasternTime, n$3.AtlanticStandardTime, n$3.AzoresStandardTime, n$3.NewfoundlandStandardTime] } }, id: r$3.Antarctica, info: { flag: { emoji: "\u{1F1E6}\u{1F1F6}", emoji_unicode: "U+1F1E6 U+1F1F6", svg: "https://www.countryflags.io/aq/flat/64.svg" }, tld: [".aq"] }, iso: { alpha2: r$3.Antarctica, alpha3: "ATA", numeric: "010" }, name: { alt_spellings: ["AQ"], demonym: "Antarctican", native: { endonym: "Antarctica" }, official: "Antarctica", short: "Antarctica", translations: { [e$1.Afrikaans]: "Antarctica", [e$1.Albanian]: "Antarktika", [e$1.Amharic]: "\u12A0\u1295\u1272\u120D\u12AB\u1293", [e$1.Arabic]: "\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627", [e$1.Armenian]: "\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578", [e$1.Azerbaijani]: "Az\u0259rbaycan", [e$1.Bashkir]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Basque]: "Antarktika", [e$1.Belarusian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Bengali]: "\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0", [e$1.Berber]: "\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627", [e$1.Bhutani]: "\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B", [e$1.Bosnian]: "Antarktika", [e$1.Breton]: "Antarktika", [e$1.Bulgarian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Burmese]: "\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038", [e$1.Catalan]: "Ant\xE0rtida", [e$1.Chinese]: "\u5357\u6781\u6D32", [e$1.Croatian]: "Antarktika", [e$1.Czech]: "Antarktida", [e$1.Danish]: "Antarktis", [e$1.Dutch]: "Antarctica", [e$1.English]: "Antarctica", [e$1.Esperanto]: "Antarktika", [e$1.Estonian]: "Antarktika", [e$1.Finnish]: "Antarktis", [e$1.French]: "Antarctica", [e$1.Frisian]: "Antarktis", [e$1.Galician]: "Ant\xE1rtida", [e$1.Georgian]: "\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0", [e$1.German]: "Antarktis", [e$1.Greenlandic]: "Antarktis", [e$1.Greek]: "\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE", [e$1.Gujarati]: "\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0", [e$1.Haitian]: "Antarctica", [e$1.Hausa]: "Antarktika", [e$1.Hebrew]: "\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4", [e$1.Hindi]: "\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930", [e$1.Hungarian]: "Antarktika", [e$1.Icelandic]: "Antarktis", [e$1.Igbo]: "Antarktika", [e$1.Indonesian]: "Antarktika", [e$1.Irish]: "Antarktika", [e$1.Italian]: "Antartide", [e$1.Japanese]: "\u5357\u6975", [e$1.Javanese]: "Antarktika", [e$1.Kannada]: "\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF", [e$1.Kazakh]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Khmer]: "\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799", [e$1.Korean]: "\uC564\uD2F0\uCE74\uD1A0\uB2C9", [e$1.Kurdish]: "Antarktika", [e$1.Kyrgyz]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Lao]: "\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0", [e$1.Latin]: "Antarctica", [e$1.Latvian]: "Antarktika", [e$1.Lithuanian]: "Antarktis", [e$1.Luxembourgish]: "Antarktis", [e$1.Macedonian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Malagasy]: "Antarctica", [e$1.Malay]: "Antarktika", [e$1.Malayalam]: "\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F", [e$1.Maltese]: "Antarktika", [e$1.Maori]: "Antarktika", [e$1.Marathi]: "\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E", [e$1.Mongolian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Nepali]: "\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E", [e$1.Norwegian]: "Antarktis", [e$1.Pashto]: "\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627", [e$1.Persian]: "\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627", [e$1.Polish]: "Antarktyka", [e$1.Portuguese]: "Ant\xE1rtida", [e$1.Punjabi]: "\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E", [e$1.Romanian]: "Antarctica", [e$1.Russian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Samoan]: "Antarktika", [e$1.Sanskrit]: "\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E", [e$1.Scots]: "Antarktika", [e$1.Serbian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Sesotho]: "Antarktika", [e$1.Shona]: "Antarktika", [e$1.Sindhi]: "Antarktika", [e$1.Sinhala]: "\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0", [e$1.Slovak]: "Antarktika", [e$1.Slovenian]: "Antarktika", [e$1.Somali]: "Antarktika", [e$1.Spanish]: "Ant\xE1rtida", [e$1.Sudanese]: "Antarktika", [e$1.Swahili]: "Antarktika", [e$1.Swedish]: "Antarktis", [e$1.Tagalog]: "Antarktika", [e$1.Tajik]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Tamil]: "\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD", [e$1.Tatar]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Telugu]: "\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E", [e$1.Thai]: "\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32", [e$1.Tibetan]: "\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72", [e$1.Turkish]: "Antarktika", [e$1.Ukrainian]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Urdu]: "\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627", [e$1.Uzbek]: "\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430", [e$1.Vietnamese]: "\u0110\u1EA5t Antarktik", [e$1.Welsh]: "Antarktika", [e$1.Xhosa]: "Antarktika", [e$1.Yiddish]: "Antarktika", [e$1.Yoruba]: "Antarktika", [e$1.Zulu]: "Antarktika" } } }, Armenia: { i18n: { calling_codes: [374], currencies: [l$2.ArmeniaDram], languages: [e$1.Armenian], tz: { offsets: [i$1.UTC_PLUS_4], regions: [t.AsiaJakarta], timezones: [n$3.ArmeniaTime] } }, id: r$3.Armenia, info: { flag: { emoji: "\u{1F1E6}\u{1F1F2}", emoji_unicode: "U+1F1E6 U+1F1F2", svg: "https://www.countryflags.io/am/flat/64.svg" }, tld: [".am"] }, iso: { alpha2: r$3.Armenia, alpha3: "ARM", numeric: "051" }, name: { alt_spellings: ["AM", "Hayastan", "Republic of Armenia", "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"], demonym: "Armenian", native: { endonym: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576" }, official: "Republic of Armenia", short: "Armenia", translations: { [e$1.Afrikaans]: "Armeni\xEB", [e$1.Albanian]: "Armenia", [e$1.Amharic]: "\u12A0\u121B\u122D\u129B", [e$1.Arabic]: "\u0623\u0631\u0645\u064A\u0646\u064A\u0627", [e$1.Armenian]: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576", [e$1.Azerbaijani]: "Az\u0259rbaycan", [e$1.Bashkir]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Basque]: "Arm\xE9nia", [e$1.Belarusian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Bengali]: "\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF", [e$1.Berber]: "\u0623\u0631\u0645\u064A\u0646\u064A\u0627", [e$1.Bhutani]: "\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42", [e$1.Bosnian]: "Armenija", [e$1.Breton]: "Armeni\xEB", [e$1.Bulgarian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Burmese]: "\u1021\u102C\u1019\u1010\u102D\u1010\u1039", [e$1.Catalan]: "Arm\xE8nia", [e$1.Chinese]: "\u4E9A\u7F8E\u5C3C\u4E9A", [e$1.Croatian]: "Armenija", [e$1.Czech]: "Arm\xE9nie", [e$1.Danish]: "Armenien", [e$1.Dutch]: "Armeni\xEB", [e$1.English]: "Armenia", [e$1.Esperanto]: "Armenia", [e$1.Estonian]: "Armeenia", [e$1.Finnish]: "Armenia", [e$1.French]: "Armenia", [e$1.Frisian]: "Armeenia", [e$1.Galician]: "Arm\xE9nia", [e$1.Georgian]: "\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8", [e$1.German]: "Armenien", [e$1.Greenlandic]: "Armenia", [e$1.Greek]: "\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1", [e$1.Gujarati]: "\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF", [e$1.Haitian]: "Armenia", [e$1.Hausa]: "Armenia", [e$1.Hebrew]: "\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4", [e$1.Hindi]: "\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E", [e$1.Hungarian]: "\xD6rm\xE9nyorsz\xE1g", [e$1.Icelandic]: "Armenia", [e$1.Igbo]: "Armenia", [e$1.Indonesian]: "Armenia", [e$1.Irish]: "Armenia", [e$1.Italian]: "Armenia", [e$1.Japanese]: "\u30A2\u30EB\u30E1\u30CB\u30A2", [e$1.Javanese]: "Armenia", [e$1.Kannada]: "\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF", [e$1.Kazakh]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Khmer]: "\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8", [e$1.Korean]: "\uC544\uB974\uBA54\uB2C8\uC544", [e$1.Kurdish]: "Armenia", [e$1.Kyrgyz]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Lao]: "\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2", [e$1.Latin]: "Armenia", [e$1.Latvian]: "Armeenia", [e$1.Lithuanian]: "Arm\u0117nija", [e$1.Luxembourgish]: "Armenien", [e$1.Macedonian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430", [e$1.Malagasy]: "Armenia", [e$1.Malay]: "Armenia", [e$1.Malayalam]: "\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F", [e$1.Maltese]: "Armenia", [e$1.Maori]: "Armenia", [e$1.Marathi]: "\u0905\u0930\u094D\u092E\u0947\u0928\u093F", [e$1.Mongolian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Nepali]: "\u0905\u0930\u094D\u092E\u0947\u0928\u093F", [e$1.Norwegian]: "Armenia", [e$1.Pashto]: "\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627", [e$1.Persian]: "\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646", [e$1.Polish]: "Armenia", [e$1.Portuguese]: "Armenia", [e$1.Punjabi]: "\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40", [e$1.Romanian]: "Armenia", [e$1.Russian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Samoan]: "Armenia", [e$1.Sanskrit]: "Armenia", [e$1.Scots]: "Armenia", [e$1.Serbian]: "\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430", [e$1.Sesotho]: "Armenia", [e$1.Shona]: "Armenia", [e$1.Sindhi]: "Armenia", [e$1.Sinhala]: "\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2", [e$1.Slovak]: "Armenia", [e$1.Slovenian]: "Armenija", [e$1.Somali]: "Armenia", [e$1.Spanish]: "Armenia", [e$1.Sudanese]: "Armenia", [e$1.Swahili]: "Armenia", [e$1.Swedish]: "Armenien", [e$1.Tagalog]: "Armenia", [e$1.Tajik]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Tamil]: "\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD", [e$1.Tatar]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Telugu]: "\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F", [e$1.Thai]: "\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19", [e$1.Tibetan]: "\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D", [e$1.Turkish]: "Ermenistan", [e$1.Ukrainian]: "\u0410\u0440\u043C\u0435\u043D\u0456\u044F", [e$1.Urdu]: "\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646", [e$1.Uzbek]: "\u0410\u0440\u043C\u0435\u043D\u0438\u044F", [e$1.Vietnamese]: "Armenia", [e$1.Welsh]: "Armenia", [e$1.Xhosa]: "Armenia", [e$1.Yiddish]: "\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4", [e$1.Yoruba]: "Armenia", [e$1.Zulu]: "Armenia" } } }, SomeCountry: { i18n: { calling_codes: [], currencies: [], languages: [], tz: { offsets: [], regions: [], timezones: [] } }, id: r$3.AmericanSamoa, info: { flag: { emoji: "", emoji_unicode: "", svg: "" }, tld: [] }, iso: { alpha2: r$3.AmericanSamoa, alpha3: "", numeric: "" }, name: { alt_spellings: [], demonym: "", native: { endonym: "" }, official: "", short: "", translations: { [e$1.Afrikaans]: "", [e$1.Albanian]: "", [e$1.Amharic]: "", [e$1.Arabic]: "", [e$1.Armenian]: "", [e$1.Azerbaijani]: "", [e$1.Bashkir]: "", [e$1.Basque]: "", [e$1.Belarusian]: "", [e$1.Bengali]: "", [e$1.Berber]: "", [e$1.Bhutani]: "", [e$1.Bosnian]: "", [e$1.Breton]: "", [e$1.Bulgarian]: "", [e$1.Burmese]: "", [e$1.Catalan]: "", [e$1.Chinese]: "", [e$1.Croatian]: "", [e$1.Czech]: "", [e$1.Danish]: "", [e$1.Dutch]: "", [e$1.English]: "", [e$1.Esperanto]: "", [e$1.Estonian]: "", [e$1.Finnish]: "", [e$1.French]: "", [e$1.Frisian]: "", [e$1.Galician]: "", [e$1.Georgian]: "", [e$1.German]: "", [e$1.Greenlandic]: "", [e$1.Greek]: "", [e$1.Gujarati]: "", [e$1.Haitian]: "", [e$1.Hausa]: "", [e$1.Hebrew]: "", [e$1.Hindi]: "", [e$1.Hungarian]: "", [e$1.Icelandic]: "", [e$1.Igbo]: "", [e$1.Indonesian]: "", [e$1.Irish]: "", [e$1.Italian]: "", [e$1.Japanese]: "", [e$1.Javanese]: "", [e$1.Kannada]: "", [e$1.Kazakh]: "", [e$1.Khmer]: "", [e$1.Korean]: "", [e$1.Kurdish]: "", [e$1.Kyrgyz]: "", [e$1.Lao]: "", [e$1.Latin]: "", [e$1.Latvian]: "", [e$1.Lithuanian]: "", [e$1.Luxembourgish]: "", [e$1.Macedonian]: "", [e$1.Malagasy]: "", [e$1.Malay]: "", [e$1.Malayalam]: "", [e$1.Maltese]: "", [e$1.Maori]: "", [e$1.Marathi]: "", [e$1.Mongolian]: "", [e$1.Nepali]: "", [e$1.Norwegian]: "", [e$1.Pashto]: "", [e$1.Persian]: "", [e$1.Polish]: "", [e$1.Portuguese]: "", [e$1.Punjabi]: "", [e$1.Romanian]: "", [e$1.Russian]: "", [e$1.Samoan]: "", [e$1.Sanskrit]: "", [e$1.Scots]: "", [e$1.Serbian]: "", [e$1.Sesotho]: "", [e$1.Shona]: "", [e$1.Sindhi]: "", [e$1.Sinhala]: "", [e$1.Slovak]: "", [e$1.Slovenian]: "", [e$1.Somali]: "", [e$1.Spanish]: "", [e$1.Sudanese]: "", [e$1.Swahili]: "", [e$1.Swedish]: "", [e$1.Tagalog]: "", [e$1.Tajik]: "", [e$1.Tamil]: "", [e$1.Tatar]: "", [e$1.Telugu]: "", [e$1.Thai]: "", [e$1.Tibetan]: "", [e$1.Turkish]: "", [e$1.Ukrainian]: "", [e$1.Urdu]: "", [e$1.Uzbek]: "", [e$1.Vietnamese]: "", [e$1.Welsh]: "", [e$1.Xhosa]: "", [e$1.Yiddish]: "", [e$1.Yoruba]: "", [e$1.Zulu]: "" } } } });
({ id: e$1.Afrikaans, language: { code: o.Afrikaans, name: "Afrikaans", native: "Afrikaans" }, name: "Afrikaans", native_name: "Afrikaans", rtl: false });
({ country: { code: r$3.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$1.AfrikaansSouthAfrica, language: { code: o.Afrikaans, name: "Afrikaans", native: "Afrikaans" }, name: "Afrikaans (South Africa)", native_name: "Afrikaans (Suid-Afrika)", rtl: false });
({ id: e$1.Albanian, language: { code: o.Albanian, name: "Albanian", native: "Shqip" }, name: "Albanian", native_name: "Shqip", rtl: false });
({ country: { code: r$3.Albania, name: "Albania", native: "Shqip\xEBria" }, id: e$1.AlbanianAlbania, language: { code: o.Albanian, name: "Albanian", native: "Shqip" }, name: "Albanian (Albania)", native_name: "Shqip (Shqip\xEBria)", rtl: false });
({ id: e$1.Amharic, language: { code: o.Amharic, name: "Amharic", native: "\u12A0\u121B\u122D\u129B" }, name: "Amharic", native_name: "\u12A0\u121B\u122D\u129B", rtl: false });
({ country: { code: r$3.Ethiopia, name: "Ethiopia", native: "\u12A2\u1275\u12EE\u1335\u12EB" }, id: e$1.AmharicEthiopia, language: { code: o.Amharic, name: "Amharic", native: "\u12A0\u121B\u122D\u129B" }, name: "Amharic (Ethiopia)", native_name: "\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)", rtl: false });
({ id: e$1.Arabic, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629", rtl: true });
({ country: { code: r$3.Algeria, name: "Algeria", native: "\u0627\u0644\u062C\u0632\u0627\u0626\u0631" }, id: e$1.ArabicAlgeria, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Algeria)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)", rtl: true });
({ country: { code: r$3.Bahrain, name: "Bahrain", native: "\u0627\u0644\u0628\u062D\u0631\u064A\u0646" }, id: e$1.ArabicBahrain, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Bahrain)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)", rtl: true });
({ country: { code: r$3.Egypt, name: "Egypt", native: "\u0645\u0635\u0631" }, id: e$1.ArabicEgypt, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Egypt)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)", rtl: true });
({ country: { code: r$3.Iraq, name: "Iraq", native: "\u0627\u0644\u0639\u0631\u0627\u0642" }, id: e$1.ArabicIraq, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Iraq)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)", rtl: true });
({ country: { code: r$3.Jordan, name: "Jordan", native: "\u0627\u0644\u0623\u0631\u062F\u0646" }, id: e$1.ArabicJordan, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Jordan)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)", rtl: true });
({ country: { code: r$3.Kuwait, name: "Kuwait", native: "\u0627\u0644\u0643\u0648\u064A\u062A" }, id: e$1.ArabicKuwait, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Kuwait)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)", rtl: true });
({ country: { code: r$3.Lebanon, name: "Lebanon", native: "\u0644\u0628\u0646\u0627\u0646" }, id: e$1.ArabicLebanon, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Lebanon)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)", rtl: true });
({ country: { code: r$3.Libya, name: "Libya", native: "\u0644\u064A\u0628\u064A\u0627" }, id: e$1.ArabicLibya, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Libya)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)", rtl: true });
({ country: { code: r$3.Morocco, name: "Morocco", native: "\u0627\u0644\u0645\u063A\u0631\u0628" }, id: e$1.ArabicMorocco, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Morocco)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)", rtl: true });
({ country: { code: r$3.Oman, name: "Oman", native: "\u0639\u0645\u0627\u0646" }, id: e$1.ArabicOman, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Oman)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)", rtl: true });
({ country: { code: r$3.Qatar, name: "Qatar", native: "\u0642\u0637\u0631" }, id: e$1.ArabicQatar, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Qatar)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)", rtl: true });
({ country: { code: r$3.SaudiArabia, name: "Saudi Arabia", native: "\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629" }, id: e$1.ArabicSaudiArabia, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Saudi Arabia)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)", rtl: true });
({ country: { code: r$3.Tunisia, name: "Tunisia", native: "\u062A\u0648\u0646\u0633" }, id: e$1.ArabicTunisia, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Tunisia)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)", rtl: true });
({ country: { code: r$3.UnitedArabEmirates, name: "United Arab Emirates", native: "\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629" }, id: e$1.ArabicUnitedArabEmirates, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (United Arab Emirates)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)", rtl: true });
({ country: { code: r$3.Yemen, name: "Yemen", native: "\u0627\u0644\u064A\u0645\u0646" }, id: e$1.ArabicYemen, language: { code: o.Arabic, name: "Arabic", native: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629" }, name: "Arabic (Yemen)", native_name: "\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)", rtl: true });
({ id: e$1.Armenian, language: { code: o.Armenian, name: "Armenian", native: "\u0540\u0561\u0575\u0565\u0580\u0565\u0576" }, name: "Armenian", native_name: "\u0540\u0561\u0575\u0565\u0580\u0565\u0576", rtl: false });
({ country: { code: r$3.Armenia, name: "Armenia", native: "\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576" }, id: e$1.ArmenianArmenia, language: { code: o.Armenian, name: "Armenian", native: "\u0570\u0561\u0575\u0565\u0580\u0565\u0576" }, name: "Armenian (Armenia)", native_name: "\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)", rtl: false });
({ id: e$1.Azerbaijani, language: { code: o.Azerbaijani, name: "Azeribaijani", native: "Az\u0259rbaycan" }, name: "Azeri", native_name: "Az\u0259rbaycan", rtl: false });
({ country: { code: r$3.Azerbaijan, name: "Azerbaijan", native: "Az\u0259rbaycan" }, id: e$1.AzerbaijaniAzerbaijan, language: { code: o.Azerbaijani, name: "Azerbaijani", native: "Az\u0259rbaycan" }, name: "Azeri (Azerbaijan)", native_name: "Az\u0259rbaycan (Az\u0259rbaycan)", rtl: false });
({ id: e$1.Basque, language: { code: o.Basque, name: "Basque", native: "Euskara" }, name: "Basque", native_name: "Euskara", rtl: false });
({ country: { code: r$3.Spain, name: "Spain", native: "Espa\xF1a" }, id: e$1.BasqueSpain, language: { code: o.Basque, name: "Basque", native: "Euskara" }, name: "Basque (Spain)", native_name: "Euskara (Espa\xF1a)", rtl: false });
({ id: e$1.Belarusian, language: { code: o.Belarusian, name: "Belarusian", native: "\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F" }, name: "Belarusian", native_name: "\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F", rtl: false });
({ country: { code: r$3.Belarus, name: "Belarus", native: "\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C" }, id: e$1.BelarusianBelarus, language: { code: o.Belarusian, name: "Belarusian", native: "\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F" }, name: "Belarusian (Belarus)", native_name: "\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)", rtl: false });
({ id: e$1.Bengali, language: { code: o.Bengali, name: "Bengali", native: "\u09AC\u09BE\u0982\u09B2\u09BE" }, name: "Bengali", native_name: "\u09AC\u09BE\u0982\u09B2\u09BE", rtl: false });
({ country: { code: r$3.Bangladesh, name: "Bangladesh", native: "\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6" }, id: e$1.BengaliBangladesh, language: { code: o.Bengali, name: "Bengali", native: "\u09AC\u09BE\u0982\u09B2\u09BE" }, name: "Bengali (Bangladesh)", native_name: "\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)", rtl: false });
({ id: e$1.Bhutani, language: { code: o.Bhutani, name: "Bhutani", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Bhutani", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42", rtl: false });
({ country: { code: r$3.Bhutan, name: "Bhutan", native: "\u0F60\u0F56\u0FB2\u0F74\u0F42" }, id: e$1.BhutaniBhutan, language: { code: o.Bhutani, name: "Bhutani", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Bhutani (Bhutan)", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)", rtl: false });
({ id: e$1.Bulgarian, language: { code: o.Bulgarian, name: "Bulgarian", native: "\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438" }, name: "Bulgarian", native_name: "\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438", rtl: false });
({ country: { code: r$3.Bulgaria, name: "Bulgaria", native: "\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F" }, id: e$1.BulgarianBulgaria, language: { code: o.Bulgarian, name: "Bulgarian", native: "\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438" }, name: "Bulgarian (Bulgaria)", native_name: "\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)", rtl: false });
({ id: e$1.Burmese, language: { code: o.Burmese, name: "Burmese", native: "\u1017\u1019\u102C\u1005\u102C" }, name: "Burmese", native_name: "\u1017\u1019\u102C\u1005\u102C", rtl: false });
({ country: { code: r$3.Myanmar, name: "Myanmar", native: "\u1019\u103C\u1014\u103A\u1019\u102C" }, id: e$1.BurmeseMyanmar, language: { code: o.Burmese, name: "Burmese", native: "\u1017\u1019\u102C\u1005\u102C" }, name: "Burmese (Myanmar)", native_name: "\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)", rtl: false });
({ id: e$1.Cantonese, language: { code: o.Cantonese, name: "Cantonese", native: "\u5EE3\u6771\u8A71" }, name: "Cantonese", native_name: "\u5EE3\u6771\u8A71", rtl: false });
({ country: { code: r$3.HongKong, name: "Hong Kong", native: "\u9999\u6E2F" }, id: e$1.CantoneseHongKong, language: { code: o.Cantonese, name: "Cantonese", native: "\u5EE3\u6771\u8A71" }, name: "Cantonese (Hong Kong)", native_name: "\u5EE3\u6771\u8A71 (\u9999\u6E2F)", rtl: false });
({ id: e$1.Catalan, language: { code: o.Catalan, name: "Catalan", native: "Catal\xE0" }, name: "Catalan", native_name: "Catal\xE0", rtl: false });
({ country: { code: r$3.Spain, name: "Spain", native: "Espa\xF1a" }, id: e$1.CatalanSpain, language: { code: o.Catalan, name: "Catalan", native: "Catal\xE0" }, name: "Catalan (Spain)", native_name: "Catal\xE0 (Espanya)", rtl: false });
({ id: e$1.ChineseSimplified, language: { code: o.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified)", native_name: "\u4E2D\u6587", rtl: false });
({ country: { code: r$3.China, name: "China", native: "\u4E2D\u56FD" }, id: e$1.ChineseSimplifiedChina, language: { code: o.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified/China)", native_name: "\u4E2D\u6587 (\u4E2D\u56FD)", rtl: false });
({ country: { code: r$3.HongKong, name: "Hong Kong", native: "\u9999\u6E2F" }, id: e$1.ChineseSimplifiedHongKong, language: { code: o.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified/Hong Kong)", native_name: "\u4E2D\u6587 (\u9999\u6E2F)", rtl: false });
({ country: { code: r$3.Macau, name: "Macau", native: "\u6FB3\u9580" }, id: e$1.ChineseSimplifiedMacau, language: { code: o.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified/Macau)", native_name: "\u4E2D\u6587 (\u6FB3\u9580)", rtl: false });
({ country: { code: r$3.Singapore, name: "Singapore", native: "\u65B0\u52A0\u5761" }, id: e$1.ChineseSimplifiedSingapore, language: { code: o.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Simplified/Singapore)", native_name: "\u4E2D\u6587 (\u65B0\u52A0\u5761)", rtl: false });
({ id: e$1.ChineseTraditional, language: { code: o.Chinese, name: "Chinese", native: "\u4E2D\u6587" }, name: "Chinese (Traditional)", native_name: "\u4E2D\u6587", rtl: false });
({ country: { code: r$3.HongKong, name: "Hong Kong", native: "\u9999\u6E2F" }, id: e$1.ChineseTraditionalHongKong, language: { code: o.Chinese, name: "Chinese (Traditional/Hong Kong)", native: "\u4E2D\u6587" }, name: "Chinese (Hong Kong)", native_name: "\u4E2D\u6587 (\u9999\u6E2F)", rtl: false });
({ country: { code: r$3.Macau, name: "Macau", native: "\u6FB3\u9580" }, id: e$1.ChineseTraditionalMacau, language: { code: o.Chinese, name: "Chinese (Traditional/Macau)", native: "\u4E2D\u6587" }, name: "Chinese (Macau)", native_name: "\u4E2D\u6587 (\u6FB3\u9580)", rtl: false });
({ country: { code: r$3.Singapore, name: "Singapore", native: "\u65B0\u52A0\u5761" }, id: e$1.ChineseTraditionalSingapore, language: { code: o.Chinese, name: "Chinese (Traditional/Singapore)", native: "\u4E2D\u6587" }, name: "Chinese (Singapore)", native_name: "\u4E2D\u6587 (\u65B0\u52A0\u5761)", rtl: false });
({ id: e$1.Croatian, language: { code: o.Croatian, name: "Croatian", native: "Hrvatski" }, name: "Croatian", native_name: "Hrvatski", rtl: false });
({ country: { code: r$3.BosniaAndHerzegovina, name: "Bosnia and Herzegovina", native: "Bosna i Hercegovina" }, id: e$1.CroatianBosniaAndHerzegovina, language: { code: o.Croatian, name: "Croatian", native: "Hrvatski" }, name: "Croatian (Bosnia and Herzegovina)", native_name: "Hrvatski (Bosna i Hercegovina)", rtl: false });
({ country: { code: r$3.Croatia, name: "Croatia", native: "Hrvatska" }, id: e$1.CroatianCroatia, language: { code: o.Croatian, name: "Croatian", native: "Hrvatski" }, name: "Croatian (Croatia)", native_name: "Hrvatski (Hrvatska)", rtl: false });
({ id: e$1.Czech, language: { code: o.Czech, name: "Czech", native: "\u010Ce\u0161tina" }, name: "Czech", native_name: "\u010Ce\u0161tina", rtl: false });
({ country: { code: r$3.CzechRepublic, name: "Czech Republic", native: "\u010Cesk\xE1 republika" }, id: e$1.CzechCzechRepublic, language: { code: o.Czech, name: "Czech", native: "\u010Ce\u0161tina" }, name: "Czech (Czech Republic)", native_name: "\u010Ce\u0161tina (\u010Cesk\xE1 republika)", rtl: false });
({ id: e$1.Danish, language: { code: o.Danish, name: "Danish", native: "Dansk" }, name: "Danish", native_name: "Dansk", rtl: false });
({ country: { code: r$3.Denmark, name: "Denmark", native: "Danmark" }, id: e$1.DanishDenmark, language: { code: o.Danish, name: "Danish", native: "Dansk" }, name: "Danish (Denmark)", native_name: "Dansk (Danmark)", rtl: false });
({ id: e$1.Divehi, language: { code: o.Divehi, name: "Divehi", native: "\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0" }, name: "Divehi", native_name: "\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0", rtl: true });
({ country: { code: r$3.Maldives, name: "Maldives", native: "\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC" }, id: e$1.DivehiMaldives, language: { code: o.Divehi, name: "Divehi", native: "\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0" }, name: "Divehi (Maldives)", native_name: "\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)", rtl: true });
({ id: e$1.Dutch, language: { code: o.Dutch, name: "Dutch", native: "Nederlands" }, name: "Dutch", native_name: "Nederlands", rtl: false });
({ country: { code: r$3.Belgium, name: "Belgium", native: "Belgi\xEB" }, id: e$1.DutchBelgium, language: { code: o.Dutch, name: "Dutch", native: "Nederlands" }, name: "Dutch (Belgium)", native_name: "Nederlands (Belgi\xEB)", rtl: false });
({ country: { code: r$3.Netherlands, name: "Netherlands", native: "Nederland" }, id: e$1.DutchNetherlands, language: { code: o.Dutch, name: "Dutch", native: "Nederlands" }, name: "Dutch (Netherlands)", native_name: "Nederlands (Nederland)", rtl: false });
({ id: e$1.English, language: { code: o.English, name: "English", native: "English" }, name: "English", native_name: "English", rtl: false });
({ country: { code: r$3.Australia, name: "Australia", native: "Australia" }, id: e$1.EnglishAustralia, language: { code: o.English, name: "English", native: "English" }, name: "English (Australia)", native_name: "English (Australia)", rtl: false });
({ country: { code: r$3.Belgium, name: "Belgium", native: "Belgi\xEB" }, id: e$1.EnglishBelgium, language: { code: o.English, name: "English", native: "English" }, name: "English (Belgium)", native_name: "English (Belgi\xEB)", rtl: false });
({ country: { code: r$3.Canada, name: "Canada", native: "Canada" }, id: e$1.EnglishCanada, language: { code: o.English, name: "English", native: "English" }, name: "English (Canada)", native_name: "English (Canada)", rtl: false });
({ country: { code: r$3.Ireland, name: "Ireland", native: "\xC9ire" }, id: e$1.EnglishIreland, language: { code: o.English, name: "English", native: "English" }, name: "English (Ireland)", native_name: "English (\xC9ire)", rtl: false });
({ country: { code: r$3.Jamaica, name: "Jamaica", native: "Jamaica" }, id: e$1.EnglishJamaica, language: { code: o.English, name: "English", native: "English" }, name: "English (Jamaica)", native_name: "English (Jamaica)", rtl: false });
({ country: { code: r$3.NewZealand, name: "New Zealand", native: "New Zealand" }, id: e$1.EnglishNewZealand, language: { code: o.English, name: "English", native: "English" }, name: "English (New Zealand)", native_name: "English (New Zealand)", rtl: false });
({ country: { code: r$3.Philippines, name: "Philippines", native: "Philippines" }, id: e$1.EnglishPhilippines, language: { code: o.English, name: "English", native: "English" }, name: "English (Philippines)", native_name: "English (Philippines)", rtl: false });
({ country: { code: r$3.Singapore, name: "Singapore", native: "Singapore" }, id: e$1.EnglishSingapore, language: { code: o.English, name: "English", native: "English" }, name: "English (Singapore)", native_name: "English (Singapore)", rtl: false });
({ country: { code: r$3.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$1.EnglishSouthAfrica, language: { code: o.English, name: "English", native: "English" }, name: "English (South Africa)", native_name: "English (South Africa)", rtl: false });
({ country: { code: r$3.TrinidadAndTobago, name: "Trinidad and Tobago", native: "Trinidad and Tobago" }, id: e$1.EnglishTrinidadAndTobago, language: { code: o.English, name: "English", native: "English" }, name: "English (Trinidad and Tobago)", native_name: "English (Trinidad and Tobago)", rtl: false });
({ country: { code: r$3.UnitedKingdom, name: "United Kingdom", native: "United Kingdom" }, id: e$1.EnglishUnitedKingdom, language: { code: o.English, name: "English", native: "English" }, name: "English (United Kingdom)", native_name: "English (United Kingdom)", rtl: false });
({ country: { code: r$3.UnitedStates, name: "United States", native: "United States" }, id: e$1.EnglishUnitedStates, language: { code: o.English, name: "English", native: "English" }, name: "English (United States)", native_name: "English (United States)", rtl: false });
({ country: { code: r$3.Zimbabwe, name: "Zimbabwe", native: "Zimbabwe" }, id: e$1.EnglishZimbabwe, language: { code: o.English, name: "English", native: "English" }, name: "English (Zimbabwe)", native_name: "English (Zimbabwe)", rtl: false });
({ id: e$1.Esperanto, language: { code: o.Esperanto, name: "Esperanto", native: "Esperanto" }, name: "Esperanto", native_name: "Esperanto", rtl: false });
({ id: e$1.Estonian, language: { code: o.Estonian, name: "Estonian", native: "Eesti" }, name: "Estonian", native_name: "Eesti", rtl: false });
({ country: { code: r$3.Estonia, name: "Estonia", native: "Eesti" }, id: e$1.EstonianEstonia, language: { code: o.Estonian, name: "Estonian", native: "Eesti" }, name: "Estonian (Estonia)", native_name: "Eesti (Eesti)", rtl: false });
({ id: e$1.Faroese, language: { code: o.Faroese, name: "Faroese", native: "F\xF8royskt" }, name: "Faroese", native_name: "F\xF8royskt", rtl: false });
({ country: { code: r$3.FaroeIslands, name: "Faroe Islands", native: "F\xF8royar" }, id: e$1.FaroeseFaroeIslands, language: { code: o.Faroese, name: "Faroese", native: "F\xF8royskt" }, name: "Faroese (Faroe Islands)", native_name: "F\xF8royskt (F\xF8royar)", rtl: false });
({ id: e$1.Farsi, language: { code: o.Farsi, name: "Farsi", native: "\u0641\u0627\u0631\u0633\u06CC" }, name: "Farsi", native_name: "\u0641\u0627\u0631\u0633\u06CC", rtl: true });
({ country: { code: r$3.Iran, name: "Iran", native: "\u0627\u06CC\u0631\u0627\u0646" }, id: e$1.FarsiIran, language: { code: o.Farsi, name: "Farsi", native: "\u0641\u0627\u0631\u0633\u06CC" }, name: "Farsi (Iran)", native_name: "\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)", rtl: true });
({ id: e$1.Filipino, language: { code: o.Filipino, name: "Filipino", native: "Filipino" }, name: "Filipino", native_name: "Filipino", rtl: false });
({ country: { code: r$3.Philippines, name: "Philippines", native: "Pilipinas" }, id: e$1.FilipinoPhilippines, language: { code: o.Filipino, name: "Filipino", native: "Filipino" }, name: "Filipino (Philippines)", native_name: "Filipino (Pilipinas)", rtl: false });
({ id: e$1.Finnish, language: { code: o.Finnish, name: "Finnish", native: "Suomi" }, name: "Finnish", native_name: "Suomi", rtl: false });
({ country: { code: r$3.Finland, name: "Finland", native: "Suomi" }, id: e$1.FinnishFinland, language: { code: o.Finnish, name: "Finnish", native: "Suomi" }, name: "Finnish (Finland)", native_name: "Suomi (Suomi)", rtl: false });
({ id: e$1.French, language: { code: o.French, name: "French", native: "Fran\xE7ais" }, name: "French", native_name: "Fran\xE7ais", rtl: false });
({ country: { code: r$3.Belgium, name: "Belgium", native: "Belgique" }, id: e$1.FrenchBelgium, language: { code: o.French, name: "French", native: "Fran\xE7ais" }, name: "French (Belgium)", native_name: "Fran\xE7ais (Belgique)", rtl: false });
({ country: { code: r$3.Canada, name: "Canada", native: "Canada" }, id: e$1.FrenchCanada, language: { code: o.French, name: "French", native: "Fran\xE7ais" }, name: "French (Canada)", native_name: "Fran\xE7ais (Canada)", rtl: false });
({ country: { code: r$3.France, name: "France", native: "France" }, id: e$1.FrenchFrance, language: { code: o.French, name: "French", native: "Fran\xE7ais" }, name: "French (France)", native_name: "Fran\xE7ais (France)", rtl: false });
({ country: { code: r$3.Luxembourg, name: "Luxembourg", native: "Luxembourg" }, id: e$1.FrenchLuxembourg, language: { code: o.French, name: "French", native: "Fran\xE7ais" }, name: "French (Luxembourg)", native_name: "Fran\xE7ais (Luxembourg)", rtl: false });
({ country: { code: r$3.Monaco, name: "Monaco", native: "Monaco" }, id: e$1.FrenchMonaco, language: { code: o.French, name: "French", native: "Fran\xE7ais" }, name: "French (Monaco)", native_name: "Fran\xE7ais (Monaco)", rtl: false });
({ country: { code: r$3.Reunion, name: "Reunion", native: "La R\xE9union" }, id: e$1.FrenchReunion, language: { code: o.French, name: "French", native: "Fran\xE7ais" }, name: "French (Reunion)", native_name: "Fran\xE7ais (La R\xE9union)", rtl: false });
({ country: { code: r$3.Switzerland, name: "Switzerland", native: "Suisse" }, id: e$1.FrenchSwitzerland, language: { code: o.French, name: "French", native: "Fran\xE7ais" }, name: "French (Switzerland)", native_name: "Fran\xE7ais (Suisse)", rtl: false });
({ id: e$1.Frisian, language: { code: o.Frisian, name: "Frisian", native: "Frysk" }, name: "Frisian", native_name: "Frysk", rtl: false });
({ country: { code: r$3.Netherlands, name: "Netherlands", native: "Nederland" }, id: e$1.FrisianNetherlands, language: { code: o.Frisian, name: "Frisian", native: "Frysk" }, name: "Frisian (Netherlands)", native_name: "Frysk (Nederland)", rtl: false });
({ id: e$1.Galician, language: { code: o.Galician, name: "Galician", native: "Galego" }, name: "Galician", native_name: "Galego", rtl: false });
({ country: { code: r$3.Spain, name: "Spain", native: "Espa\xF1a" }, id: e$1.GalicianSpain, language: { code: o.Galician, name: "Galician", native: "Galego" }, name: "Galician (Spain)", native_name: "Galego (Espa\xF1a)", rtl: false });
({ id: e$1.Georgian, language: { code: o.Georgian, name: "Georgian", native: "\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8" }, name: "Georgian", native_name: "\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8", rtl: false });
({ country: { code: r$3.Georgia, name: "Georgia", native: "\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD" }, id: e$1.GeorgianGeorgia, language: { code: o.Georgian, name: "Georgian", native: "\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8" }, name: "Georgian (Georgia)", native_name: "\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)", rtl: false });
({ id: e$1.German, language: { code: o.German, name: "German", native: "Deutsch" }, name: "German", native_name: "Deutsch", rtl: false });
({ country: { code: r$3.Austria, name: "Austria", native: "\xD6sterreich" }, id: e$1.GermanAustria, language: { code: o.German, name: "German", native: "Deutsch" }, name: "German (Austria)", native_name: "Deutsch (\xD6sterreich)", rtl: false });
({ country: { code: r$3.Belgium, name: "Belgium", native: "Belgi\xEB" }, id: e$1.GermanBelgium, language: { code: o.German, name: "German", native: "Deutsch" }, name: "German (Belgium)", native_name: "Deutsch (Belgi\xEB)", rtl: false });
({ country: { code: r$3.Switzerland, name: "Switzerland", native: "Suisse" }, id: e$1.GermanSwitzerland, language: { code: o.German, name: "German", native: "Deutsch" }, name: "German (Switzerland)", native_name: "Deutsch (Suisse)", rtl: false });
({ country: { code: r$3.Liechtenstein, name: "Liechtenstein", native: "Liechtenstein" }, id: e$1.GermanLiechtenstein, language: { code: o.German, name: "German", native: "Deutsch" }, name: "German (Liechtenstein)", native_name: "Deutsch (Liechtenstein)", rtl: false });
({ country: { code: r$3.Luxembourg, name: "Luxembourg", native: "Luxembourg" }, id: e$1.GermanLuxembourg, language: { code: o.German, name: "German", native: "Deutsch" }, name: "German (Luxembourg)", native_name: "Deutsch (Luxembourg)", rtl: false });
({ id: e$1.Greek, language: { code: o.Greek, name: "Greek", native: "\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC" }, name: "Greek", native_name: "\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC", rtl: false });
({ country: { code: r$3.Greece, name: "Greece", native: "\u0395\u03BB\u03BB\u03AC\u03B4\u03B1" }, id: e$1.GreekGreece, language: { code: o.Greek, name: "Greek", native: "\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC" }, name: "Greek (Greece)", native_name: "\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)", rtl: false });
({ id: e$1.Greenlandic, language: { code: o.Greenlandic, name: "Greenlandic", native: "Kalaallisut" }, name: "Greenlandic", native_name: "Kalaallisut", rtl: false });
({ country: { code: r$3.Greenland, name: "Greenland", native: "Kalaallit Nunaat" }, id: e$1.GreenlandicGreenland, language: { code: o.Greenlandic, name: "Greenlandic", native: "Kalaallisut" }, name: "Greenlandic (Greenland)", native_name: "Kalaallisut (Kalaallit Nunaat)", rtl: false });
({ id: e$1.Gujarati, language: { code: o.Gujarati, name: "Gujarati", native: "\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0" }, name: "Gujarati", native_name: "\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$1.GujaratiIndia, language: { code: o.Gujarati, name: "Gujarati", native: "\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0" }, name: "Gujarati (India)", native_name: "\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$1.Hausa, language: { code: o.Hausa, name: "Hausa", native: "\u0647\u064E\u0648\u064F\u0633\u064E" }, name: "Hausa", native_name: "\u0647\u064E\u0648\u064F\u0633\u064E", rtl: false });
({ country: { code: r$3.Ghana, name: "Ghana", native: "Ghana" }, id: e$1.HausaGhana, language: { code: o.Hausa, name: "Hausa", native: "\u0647\u064E\u0648\u064F\u0633\u064E" }, name: "Hausa (Ghana)", native_name: "\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)", rtl: false });
({ country: { code: r$3.Niger, name: "Niger", native: "Niger" }, id: e$1.HausaNiger, language: { code: o.Hausa, name: "Hausa", native: "\u0647\u064E\u0648\u064F\u0633\u064E" }, name: "Hausa (Niger)", native_name: "\u0647\u064E\u0648\u064F\u0633\u064E (Niger)", rtl: false });
({ country: { code: r$3.Nigeria, name: "Nigeria", native: "Nigeria" }, id: e$1.HausaNigeria, language: { code: o.Hausa, name: "Hausa", native: "\u0647\u064E\u0648\u064F\u0633\u064E" }, name: "Hausa (Nigeria)", native_name: "\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)", rtl: false });
({ id: e$1.Hebrew, language: { code: o.Hebrew, name: "Hebrew", native: "\u05E2\u05D1\u05E8\u05D9\u05EA" }, name: "Hebrew", native_name: "\u05E2\u05D1\u05E8\u05D9\u05EA", rtl: true });
({ country: { code: r$3.Israel, name: "Hebrew", native: "" }, id: e$1.HebrewIsrael, language: { code: o.Hebrew, name: "Hebrew", native: "" }, name: "Hebrew (Israel)", native_name: "", rtl: true });
({ id: e$1.Hindi, language: { code: o.Hindi, name: "Hindi", native: "\u0939\u093F\u0928\u094D\u0926\u0940" }, name: "Hindi", native_name: "\u0939\u093F\u0928\u094D\u0926\u0940", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$1.HindiIndia, language: { code: o.Hindi, name: "Hindi", native: "\u092D\u093E\u0930\u0924\u0940\u092F" }, name: "Hindi (India)", native_name: "\u092D\u093E\u0930\u0924\u0940\u092F", rtl: false });
({ id: e$1.Hungarian, language: { code: o.Hungarian, name: "Hungarian", native: "Magyar" }, name: "Hungarian", native_name: "Magyar", rtl: false });
({ country: { code: r$3.Hungary, name: "Hungary", native: "Magyarorsz\xE1g" }, id: e$1.HungarianHungary, language: { code: o.Hungarian, name: "Hungarian", native: "Magyar" }, name: "Hungarian (Hungary)", native_name: "Magyar (Magyarorsz\xE1g)", rtl: false });
({ id: e$1.Icelandic, language: { code: o.Icelandic, name: "Icelandic", native: "\xCDslenska" }, name: "Icelandic", native_name: "\xCDslenska", rtl: false });
({ country: { code: r$3.Iceland, name: "Iceland", native: "\xCDsland" }, id: e$1.IcelandicIceland, language: { code: o.Icelandic, name: "Icelandic", native: "\xCDslenska" }, name: "Icelandic (Iceland)", native_name: "\xCDslenska (\xCDsland)", rtl: false });
({ id: e$1.Igbo, language: { code: o.Igbo, name: "Igbo", native: "Igbo" }, name: "Igbo", native_name: "Igbo", rtl: false });
({ id: e$1.Indonesian, language: { code: o.Indonesian, name: "Indonesian", native: "Bahasa Indonesia" }, name: "Indonesian", native_name: "Bahasa Indonesia", rtl: false });
({ country: { code: r$3.Indonesia, name: "Indonesia", native: "Indonesia" }, id: e$1.IndonesianIndonesia, language: { code: o.Indonesian, name: "Indonesian", native: "Bahasa Indonesia" }, name: "Indonesian (Indonesia)", native_name: "Bahasa Indonesia (Indonesia)", rtl: false });
({ id: e$1.Irish, language: { code: o.Irish, name: "Irish", native: "Gaeilge" }, name: "Irish", native_name: "Gaeilge", rtl: false });
({ country: { code: r$3.Ireland, name: "Ireland", native: "\xC9ire" }, id: e$1.IrishIreland, language: { code: o.Irish, name: "Irish", native: "Gaeilge" }, name: "Irish (Ireland)", native_name: "Gaeilge (\xC9ire)", rtl: false });
({ id: e$1.Italian, language: { code: o.Italian, name: "Italian", native: "Italiano" }, name: "Italian", native_name: "Italiano", rtl: false });
({ country: { code: r$3.Italy, name: "Italy", native: "Italia" }, id: e$1.ItalianItaly, language: { code: o.Italian, name: "Italian", native: "Italiano" }, name: "Italian (Italy)", native_name: "Italiano (Italia)", rtl: false });
({ country: { code: r$3.Switzerland, name: "Switzerland", native: "Schweiz" }, id: e$1.ItalianSwitzerland, language: { code: o.Italian, name: "Italian", native: "Italiano" }, name: "Italian (Switzerland)", native_name: "Italiano (Svizzera)", rtl: false });
({ id: e$1.Japanese, language: { code: o.Japanese, name: "Japanese", native: "\u65E5\u672C\u8A9E" }, name: "Japanese", native_name: "\u65E5\u672C\u8A9E", rtl: false });
({ country: { code: r$3.Japan, name: "Japan", native: "\u65E5\u672C" }, id: e$1.JapaneseJapan, language: { code: o.Japanese, name: "Japanese", native: "\u65E5\u672C\u8A9E" }, name: "Japanese (Japan)", native_name: "\u65E5\u672C\u8A9E (\u65E5\u672C)", rtl: false });
({ id: e$1.Kannada, language: { code: o.Kannada, name: "Kannada", native: "\u0C95\u0CA8\u0CCD\u0CA8\u0CA1" }, name: "Kannada", native_name: "\u0C95\u0CA8\u0CCD\u0CA8\u0CA1", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u0CAD\u0CBE\u0CB0\u0CA4" }, id: e$1.KannadaIndia, language: { code: o.Kannada, name: "Kannada", native: "\u0C95\u0CA8\u0CCD\u0CA8\u0CA1" }, name: "Kannada (India)", native_name: "\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)", rtl: false });
({ id: e$1.Kazakh, language: { code: o.Kazakh, name: "Kazakh", native: "\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456" }, name: "Kazakh", native_name: "\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456", rtl: false });
({ country: { code: r$3.Kazakhstan, name: "Kazakhstan", native: "\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D" }, id: e$1.KazakhKazakhstan, language: { code: o.Kazakh, name: "Kazakh", native: "\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456" }, name: "Kazakh (Kazakhstan)", native_name: "\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)", rtl: false });
({ id: e$1.Khmer, language: { code: o.Khmer, name: "Khmer", native: "\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A" }, name: "Khmer", native_name: "\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A", rtl: false });
({ country: { code: r$3.Cambodia, name: "Cambodia", native: "\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6" }, id: e$1.KhmerCambodia, language: { code: o.Khmer, name: "Khmer", native: "\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A" }, name: "Khmer (Cambodia)", native_name: "\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)", rtl: false });
({ id: e$1.Konkani, language: { code: o.Konkani, name: "Konkani", native: "\u0915\u094B\u0902\u0915\u0923\u0940" }, name: "Konkani", native_name: "\u0915\u094B\u0902\u0915\u0923\u0940", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$1.KonkaniIndia, language: { code: o.Konkani, name: "Konkani", native: "\u0915\u094B\u0902\u0915\u0923\u0940" }, name: "Konkani (India)", native_name: "\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$1.Korean, language: { code: o.Korean, name: "Korean", native: "\uD55C\uAD6D\uC5B4" }, name: "Korean", native_name: "\uD55C\uAD6D\uC5B4", rtl: false });
({ country: { code: r$3.SouthKorea, name: "South Korea", native: "\uB300\uD55C\uBBFC\uAD6D" }, id: e$1.KoreanSouthKorea, language: { code: o.Korean, name: "Korean", native: "\uD55C\uAD6D\uC5B4" }, name: "Korean (South Korea)", native_name: "\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)", rtl: false });
({ id: e$1.Kurdish, language: { code: o.Kurdish, name: "Kurdish", native: "Kurd\xEE" }, name: "Kurdish", native_name: "Kurd\xEE", rtl: false });
({ country: { code: r$3.Iraq, name: "Iraq", native: "\u0627\u0644\u0639\u0631\u0627\u0642" }, id: e$1.KurdishIraq, language: { code: o.Kurdish, name: "Kurdish", native: "Kurd\xEE" }, name: "Kurdish (Iraq)", native_name: "Kurd\xEE (\u0627\u0644\u0639\u0631\u0627\u0642)", rtl: false });
({ country: { code: r$3.Turkey, name: "Turkey", native: "T\xFCrkiye" }, id: e$1.KurdishTurkey, language: { code: o.Kurdish, name: "Kurdish", native: "Kurd\xEE" }, name: "Kurdish (Turkey)", native_name: "Kurd\xEE (T\xFCrkiye)", rtl: false });
({ id: e$1.Kyrgyz, language: { code: o.Kyrgyz, name: "Kyrgyz", native: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430" }, name: "Kyrgyz", native_name: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430", rtl: false });
({ country: { code: r$3.Kyrgyzstan, name: "Kyrgyzstan", native: "\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D" }, id: e$1.KyrgyzKyrgyzstan, language: { code: o.Kyrgyz, name: "Kyrgyz", native: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430" }, name: "Kyrgyz (Kyrgyzstan)", native_name: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)", rtl: false });
({ id: e$1.Lao, language: { code: o.Lao, name: "Lao", native: "\u0EA5\u0EB2\u0EA7" }, name: "Lao", native_name: "\u0EA5\u0EB2\u0EA7", rtl: false });
({ country: { code: r$3.Laos, name: "Laos", native: "\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95" }, id: e$1.LaoLaos, language: { code: o.Lao, name: "Lao", native: "\u0EA5\u0EB2\u0EA7" }, name: "Lao (Laos)", native_name: "\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)", rtl: false });
({ id: e$1.Latvian, language: { code: o.Latvian, name: "Latvian", native: "Latvie\u0161u" }, name: "Latvian", native_name: "Latvie\u0161u", rtl: false });
({ country: { code: r$3.Latvia, name: "Latvia", native: "Latvija" }, id: e$1.LatvianLatvia, language: { code: o.Latvian, name: "Latvian", native: "Latvie\u0161u" }, name: "Latvian (Latvia)", native_name: "Latvie\u0161u (Latvija)", rtl: false });
({ id: e$1.Lithuanian, language: { code: o.Lithuanian, name: "Lithuanian", native: "Lietuvi\u0173" }, name: "Lithuanian", native_name: "Lietuvi\u0173", rtl: false });
({ country: { code: r$3.Lithuania, name: "Lithuania", native: "Lietuva" }, id: e$1.LithuanianLithuania, language: { code: o.Lithuanian, name: "Lithuanian", native: "Lietuvi\u0173" }, name: "Lithuanian (Lithuania)", native_name: "Lietuvi\u0173 (Lietuva)", rtl: false });
({ id: e$1.Luxembourgish, language: { code: o.Luxembourgish, name: "Luxembourgish", native: "L\xEBtzebuergesch" }, name: "Luxembourgish", native_name: "L\xEBtzebuergesch", rtl: false });
({ country: { code: r$3.Belgium, name: "Belgium", native: "Belgi\xEB" }, id: e$1.LuxembourgishBelgium, language: { code: o.Luxembourgish, name: "Luxembourgish", native: "L\xEBtzebuergesch" }, name: "Luxembourgish (Belgium)", native_name: "L\xEBtzebuergesch (Belgi\xEB)", rtl: false });
({ country: { code: r$3.Luxembourg, name: "Luxembourg", native: "Luxembourg" }, id: e$1.LuxembourgishLuxembourg, language: { code: o.Luxembourgish, name: "Luxembourgish", native: "L\xEBtzebuergesch" }, name: "Luxembourgish (Luxembourg)", native_name: "L\xEBtzebuergesch (Luxembourg)", rtl: false });
({ id: e$1.Macedonian, language: { code: o.Macedonian, name: "Macedonian", native: "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438" }, name: "Macedonian", native_name: "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438", rtl: false });
({ country: { code: r$3.NorthMacedonia, name: "Macedonia", native: "\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430" }, id: e$1.MacedonianNorthMacedonia, language: { code: o.Macedonian, name: "Macedonian", native: "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438" }, name: "Macedonian (North Macedonia)", native_name: "\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)", rtl: false });
({ id: e$1.Malay, language: { code: o.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay", native_name: "Bahasa Melayu", rtl: false });
({ country: { code: r$3.Brunei, name: "Brunei", native: "Negara Brunei Darussalam" }, id: e$1.MalayBrunei, language: { code: o.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay (Brunei)", native_name: "Bahasa Melayu (Negara Brunei Darussalam)", rtl: false });
({ country: { code: r$3.Malaysia, name: "Malaysia", native: "Malaysia" }, id: e$1.MalayMalaysia, language: { code: o.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay (Malaysia)", native_name: "Bahasa Melayu (Malaysia)", rtl: false });
({ country: { code: r$3.Singapore, name: "Singapore", native: "Singapore" }, id: e$1.MalaySingapore, language: { code: o.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay (Singapore)", native_name: "Bahasa Melayu (Singapore)", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$1.MalayIndia, language: { code: o.Malay, name: "Malay", native: "Bahasa Melayu" }, name: "Malay (India)", native_name: "Bahasa Melayu (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$1.Maltese, language: { code: o.Maltese, name: "Maltese", native: "Malti" }, name: "Maltese", native_name: "Malti", rtl: false });
({ country: { code: r$3.Malta, name: "Malta", native: "Malta" }, id: e$1.MalteseMalta, language: { code: o.Maltese, name: "Maltese", native: "Malti" }, name: "Maltese (Malta)", native_name: "Malti (Malta)", rtl: false });
({ id: e$1.Maori, language: { code: o.Maori, name: "Maori", native: "M\u0101ori" }, name: "Maori", native_name: "M\u0101ori", rtl: false });
({ country: { code: r$3.NewZealand, name: "New Zealand", native: "New Zealand" }, id: e$1.MaoriNewZealand, language: { code: o.Maori, name: "Maori", native: "M\u0101ori" }, name: "Maori (New Zealand)", native_name: "M\u0101ori (New Zealand)", rtl: false });
({ id: e$1.Marathi, language: { code: o.Marathi, name: "Marathi", native: "\u092E\u0930\u093E\u0920\u0940" }, name: "Marathi", native_name: "\u092E\u0930\u093E\u0920\u0940", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$1.MarathiIndia, language: { code: o.Marathi, name: "Marathi", native: "\u092E\u0930\u093E\u0920\u0940" }, name: "Marathi (India)", native_name: "\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$1.Mongolian, language: { code: o.Mongolian, name: "Mongolian", native: "\u041C\u043E\u043D\u0433\u043E\u043B" }, name: "Mongolian", native_name: "\u041C\u043E\u043D\u0433\u043E\u043B", rtl: false });
({ country: { code: r$3.Mongolia, name: "Mongolia", native: "\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441" }, id: e$1.MongolianMongolia, language: { code: o.Mongolian, name: "Mongolian", native: "\u041C\u043E\u043D\u0433\u043E\u043B" }, name: "Mongolian (Mongolia)", native_name: "\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)", rtl: false });
({ id: e$1.Montenegrin, language: { code: o.Montenegrin, name: "Montenegrin", native: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A" }, name: "Montenegrin", native_name: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A", rtl: false });
({ country: { code: r$3.Montenegro, name: "Montenegro", native: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A" }, id: e$1.MontenegrinMontenegro, language: { code: o.Montenegrin, name: "Montenegrin", native: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A" }, name: "Montenegrin (Montenegro)", native_name: "\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)", rtl: false });
({ id: e$1.Nepali, language: { code: o.Nepali, name: "Nepali", native: "\u0928\u0947\u092A\u093E\u0932\u0940" }, name: "Nepali", native_name: "\u0928\u0947\u092A\u093E\u0932\u0940", rtl: false });
({ country: { code: r$3.Nepal, name: "Nepal", native: "\u0928\u0947\u092A\u093E\u0932" }, id: e$1.NepaliNepal, language: { code: o.Nepali, name: "Nepali", native: "\u0928\u0947\u092A\u093E\u0932\u0940" }, name: "Nepali (Nepal)", native_name: "\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)", rtl: false });
({ id: e$1.NorthernSotho, language: { code: o.NorthernSotho, name: "Northern Sotho", native: "Sesotho sa Leboa" }, name: "Northern Sotho", native_name: "Sesotho sa Leboa", rtl: false });
({ country: { code: r$3.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$1.NorthernSothoSouthAfrica, language: { code: o.NorthernSotho, name: "Northern Sotho", native: "Sesotho sa Leboa" }, name: "Northern Sotho (South Africa)", native_name: "Sesotho sa Leboa (South Africa)", rtl: false });
({ id: e$1.Norwegian, language: { code: o.Norwegian, name: "Norwegian", native: "Norsk" }, name: "Norwegian", native_name: "Norsk", rtl: false });
({ country: { code: r$3.Norway, name: "Norway", native: "Norge" }, id: e$1.NorwegianBokmalNorway, language: { code: o.NorwegianBokmal, name: "Norwegian", native: "Norsk" }, name: "Norwegian (Bokmal)", native_name: "Norsk (Bokm\xE5l)", rtl: false });
({ country: { code: r$3.Norway, name: "Norway", native: "Norge" }, id: e$1.NorwegianNynorskNorway, language: { code: o.NorwegianNynorsk, name: "Norwegian", native: "Norsk" }, name: "Norwegian (Nynorsk)", native_name: "Norsk (Nynorsk)", rtl: false });
({ id: e$1.Oriya, language: { code: o.Oriya, name: "Oriya", native: "\u0B13\u0B21\u0B3C\u0B3F\u0B06" }, name: "Oriya", native_name: "\u0B13\u0B21\u0B3C\u0B3F\u0B06", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE" }, id: e$1.OriyaIndia, language: { code: o.Oriya, name: "Oriya", native: "\u0B13\u0B21\u0B3C\u0B3F\u0B06" }, name: "Oriya (India)", native_name: "\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)", rtl: false });
({ id: e$1.Pashto, language: { code: o.Pashto, name: "Pashto", native: "\u067E\u069A\u062A\u0648" }, name: "Pashto", native_name: "\u067E\u069A\u062A\u0648", rtl: true });
({ country: { code: r$3.Afghanistan, name: "Afghanistan", native: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646" }, id: e$1.PashtoAfghanistan, language: { code: o.Pashto, name: "Pashto", native: "\u067E\u069A\u062A\u0648" }, name: "Pashto (Afghanistan)", native_name: "\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)", rtl: true });
({ id: e$1.Persian, language: { code: o.Persian, name: "Persian", native: "\u0641\u0627\u0631\u0633\u06CC" }, name: "Persian", native_name: "\u0641\u0627\u0631\u0633\u06CC", rtl: true });
({ country: { code: r$3.Iran, name: "Iran", native: "\u0627\u06CC\u0631\u0627\u0646" }, id: e$1.PersianIran, language: { code: o.Persian, name: "Persian", native: "\u0641\u0627\u0631\u0633\u06CC" }, name: "Persian (Iran)", native_name: "\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)", rtl: true });
({ id: e$1.Polish, language: { code: o.Polish, name: "Polish", native: "Polski" }, name: "Polish", native_name: "Polski", rtl: false });
({ country: { code: r$3.Poland, name: "Poland", native: "Polska" }, id: e$1.PolishPoland, language: { code: o.Polish, name: "Polish", native: "Polski" }, name: "Polish (Poland)", native_name: "Polski (Polska)", rtl: false });
({ id: e$1.Portuguese, language: { code: o.Portuguese, name: "Portuguese", native: "Portugu\xEAs" }, name: "Portuguese", native_name: "Portugu\xEAs", rtl: false });
({ country: { code: r$3.Brazil, name: "Brazil", native: "Brasil" }, id: e$1.PortugueseBrazil, language: { code: o.Portuguese, name: "Portuguese", native: "Portugu\xEAs" }, name: "Portuguese (Brazil)", native_name: "Portugu\xEAs (Brasil)", rtl: false });
({ country: { code: r$3.Portugal, name: "Portugal", native: "Portugal" }, id: e$1.PortuguesePortugal, language: { code: o.Portuguese, name: "Portuguese", native: "Portugu\xEAs" }, name: "Portuguese (Portugal)", native_name: "Portugu\xEAs (Portugal)", rtl: false });
({ id: e$1.Punjabi, language: { code: o.Punjabi, name: "Punjabi", native: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40" }, name: "Punjabi", native_name: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40", rtl: true });
({ country: { code: r$3.Pakistan, name: "Pakistan", native: "\u067E\u0627\u06A9\u0633\u062A\u0627\u0646" }, id: e$1.PunjabiPakistan, language: { code: o.Punjabi, name: "Punjabi", native: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40" }, name: "Punjabi (Pakistan)", native_name: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)", rtl: true });
({ country: { code: r$3.India, name: "India", native: "\u0A2D\u0A3E\u0A30\u0A24" }, id: e$1.PunjabiIndia, language: { code: o.Punjabi, name: "Punjabi", native: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40" }, name: "Punjabi (India)", native_name: "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)", rtl: true });
({ id: e$1.Quechua, language: { code: o.Quechua, name: "Quechua", native: "Runa Simi" }, name: "Quechua", native_name: "Runa Simi", rtl: false });
({ country: { code: r$3.Bolivia, name: "Bolivia", native: "Bolivia" }, id: e$1.QuechuaBolivia, language: { code: o.Quechua, name: "Quechua", native: "Runa Simi" }, name: "Quechua (Bolivia)", native_name: "Runa Simi (Bolivia)", rtl: false });
({ country: { code: r$3.Ecuador, name: "Ecuador", native: "Ecuador" }, id: e$1.QuechuaEcuador, language: { code: o.Quechua, name: "Quechua", native: "Runa Simi" }, name: "Quechua (Ecuador)", native_name: "Runa Simi (Ecuador)", rtl: false });
({ country: { code: r$3.Peru, name: "Peru", native: "Per\xFA" }, id: e$1.QuechuaPeru, language: { code: o.Quechua, name: "Quechua", native: "Runa Simi" }, name: "Quechua (Peru)", native_name: "Runa Simi (Per\xFA)", rtl: false });
({ id: e$1.Romanian, language: { code: o.Romanian, name: "Romanian", native: "Rom\xE2n\u0103" }, name: "Romanian", native_name: "Rom\xE2n\u0103", rtl: false });
({ country: { code: r$3.Romania, name: "Romania", native: "Rom\xE2nia" }, id: e$1.RomanianRomania, language: { code: o.Romanian, name: "Romanian", native: "Rom\xE2n\u0103" }, name: "Romanian (Romania)", native_name: "Rom\xE2n\u0103 (Rom\xE2nia)", rtl: false });
({ id: e$1.Russian, language: { code: o.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439", rtl: false });
({ country: { code: r$3.RussianFederation, name: "Russian Federation", native: "\u0420\u043E\u0441\u0441\u0438\u044F" }, id: e$1.RussianRussia, language: { code: o.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian (Russia)", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)", rtl: false });
({ country: { code: r$3.Ukraine, name: "Ukraine", native: "\u0423\u043A\u0440\u0430\u0457\u043D\u0430" }, id: e$1.RussianUkraine, language: { code: o.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian (Ukraine)", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)", rtl: false });
({ country: { code: r$3.Kazakhstan, name: "Kazakhstan", native: "\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D" }, id: e$1.RussianKazakhstan, language: { code: o.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian (Kazakhstan)", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)", rtl: false });
({ country: { code: r$3.Kyrgyzstan, name: "Kyrgyzstan", native: "\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430" }, id: e$1.RussianKyrgyzstan, language: { code: o.Russian, name: "Russian", native: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439" }, name: "Russian (Kyrgyzstan)", native_name: "\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)", rtl: false });
({ id: e$1.Sanskrit, language: { code: o.Sanskrit, name: "Sanskrit", native: "\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D" }, name: "Sanskrit", native_name: "\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$1.SanskritIndia, language: { code: o.Sanskrit, name: "Sanskrit", native: "\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D" }, name: "Sanskrit (India)", native_name: "\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)", rtl: false });
({ id: e$1.Sami, language: { code: o.Sami, name: "Sami", native: "S\xE1megiella" }, name: "Sami", native_name: "S\xE1megiella", rtl: false });
({ country: { code: r$3.Finland, name: "Finland", native: "Suomi" }, id: e$1.SamiFinland, language: { code: o.Sami, name: "Sami", native: "S\xE1megiella" }, name: "Sami (Finland)", native_name: "S\xE1megiella (Suomi)", rtl: false });
({ country: { code: r$3.Norway, name: "Norway", native: "Norge" }, id: e$1.SamiNorway, language: { code: o.Sami, name: "Sami", native: "S\xE1megiella" }, name: "Sami (Norway)", native_name: "S\xE1megiella (Norge)", rtl: false });
({ country: { code: r$3.Sweden, name: "Sweden", native: "Sverige" }, id: e$1.SamiSweden, language: { code: o.Sami, name: "Sami", native: "S\xE1megiella" }, name: "Sami (Sweden)", native_name: "S\xE1megiella (Sverige)", rtl: false });
({ id: e$1.Samoan, language: { code: o.Samoan, name: "Samoan", native: "Gagana fa\u2019a S\u0101moa" }, name: "Samoan", native_name: "Gagana fa\u2019a S\u0101moa", rtl: false });
({ country: { code: r$3.Samoa, name: "Samoa", native: "Samoa" }, id: e$1.SamoanSamoa, language: { code: o.Samoan, name: "Samoan", native: "Gagana fa\u2019a S\u0101moa" }, name: "Samoan (Samoa)", native_name: "Gagana fa\u2019a S\u0101moa (Samoa)", rtl: false });
({ id: e$1.Serbian, language: { code: o.Serbian, name: "Serbian (Latin)", native: "Srpski (Latinica)" }, name: "Serbian (Latin)", native_name: "Srpski (Latinica)", rtl: false });
({ country: { code: r$3.BosniaAndHerzegovina, name: "Bosnia and Herzegovina", native: "Bosna i Hercegovina" }, id: e$1.SerbianBosniaAndHerzegovina, language: { code: o.Serbian, name: "Serbian (Latin)", native: "Srpski (Latinica)" }, name: "Serbian (Latin) (Bosnia and Herzegovina)", native_name: "Srpski (Latinica) (Bosna i Hercegovina)", rtl: false });
({ country: { code: r$3.SerbiaAndMontenegro, name: "Serbia and Montenegro", native: "Srbija i Crna Gora" }, id: e$1.SerbianSerbiaAndMontenegro, language: { code: o.Serbian, name: "Serbian (Latin)", native: "Srpski (Latinica)" }, name: "Serbian (Latin) (Serbia and Montenegro)", native_name: "Srpski (Latinica) (Srbija i Crna Gora)", rtl: false });
({ id: e$1.SerbianCyrillic, language: { code: o.SerbianCyrillic, name: "Serbian", native: "\u0421\u0440\u043F\u0441\u043A\u0438" }, name: "Serbian (Cyrillic)", native_name: "\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)", rtl: false });
({ country: { code: r$3.BosniaAndHerzegovina, name: "Bosnia and Herzegovina", native: "\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430" }, id: e$1.SerbianCyrillicBosniaAndHerzegovina, language: { code: o.SerbianCyrillic, name: "Serbian", native: "\u0421\u0440\u043F\u0441\u043A\u0438" }, name: "Serbian (Cyrillic, Bosnia and Herzegovina)", native_name: "\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)", rtl: false });
({ country: { code: r$3.SerbiaAndMontenegro, name: "Serbia and Montenegro", native: "\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430" }, id: e$1.SerbianCyrillicSerbiaAndMontenegro, language: { code: o.SerbianCyrillic, name: "Serbian", native: "\u0421\u0440\u043F\u0441\u043A\u0438" }, name: "Serbian (Cyrillic, Serbia and Montenegro)", native_name: "\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)", rtl: false });
({ id: e$1.Slovak, language: { code: o.Slovak, name: "Slovak", native: "Sloven\u010Dina" }, name: "Slovak", native_name: "Sloven\u010Dina", rtl: false });
({ country: { code: r$3.Slovakia, name: "Slovakia", native: "Slovensko" }, id: e$1.SlovakSlovakia, language: { code: o.Slovak, name: "Slovak", native: "Sloven\u010Dina" }, name: "Slovak (Slovakia)", native_name: "Sloven\u010Dina (Slovensko)", rtl: false });
({ id: e$1.Slovenian, language: { code: o.Slovenian, name: "Slovenian", native: "Sloven\u0161\u010Dina" }, name: "Slovenian", native_name: "Sloven\u0161\u010Dina", rtl: false });
({ country: { code: r$3.Slovenia, name: "Slovenia", native: "Slovenija" }, id: e$1.SlovenianSlovenia, language: { code: o.Slovenian, name: "Slovenian", native: "Sloven\u0161\u010Dina" }, name: "Slovenian (Slovenia)", native_name: "Sloven\u0161\u010Dina (Slovenija)", rtl: false });
({ id: e$1.Somali, language: { code: o.Somali, name: "Somali", native: "Soomaaliga" }, name: "Somali", native_name: "Soomaaliga", rtl: true });
({ country: { code: r$3.Somalia, name: "Somalia", native: "Soomaaliya" }, id: e$1.SomaliSomalia, language: { code: o.Somali, name: "Somali", native: "Soomaaliga" }, name: "Somali (Somalia)", native_name: "Soomaaliga (Soomaaliya)", rtl: true });
({ id: e$1.Spanish, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish", native_name: "Espa\xF1ol", rtl: false });
({ country: { code: r$3.Argentina, name: "Argentina", native: "Argentina" }, id: e$1.SpanishArgentina, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Argentina)", native_name: "Espa\xF1ol (Argentina)", rtl: false });
({ country: { code: r$3.Bolivia, name: "Bolivia", native: "Bolivia" }, id: e$1.SpanishBolivia, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Bolivia)", native_name: "Espa\xF1ol (Bolivia)", rtl: false });
({ country: { code: r$3.Chile, name: "Chile", native: "Chile" }, id: e$1.SpanishChile, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Chile)", native_name: "Espa\xF1ol (Chile)", rtl: false });
({ country: { code: r$3.Colombia, name: "Colombia", native: "Colombia" }, id: e$1.SpanishColombia, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Colombia)", native_name: "Espa\xF1ol (Colombia)", rtl: false });
({ country: { code: r$3.CostaRica, name: "Costa Rica", native: "Costa Rica" }, id: e$1.SpanishCostaRica, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Costa Rica)", native_name: "Espa\xF1ol (Costa Rica)", rtl: false });
({ country: { code: r$3.Cuba, name: "Cuba", native: "Cuba" }, id: e$1.SpanishCuba, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Cuba)", native_name: "Espa\xF1ol (Cuba)", rtl: false });
({ country: { code: r$3.DominicanRepublic, name: "Dominican Republic", native: "Rep\xFAblica Dominicana" }, id: e$1.SpanishDominicanRepublic, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Dominican Republic)", native_name: "Espa\xF1ol (Rep\xFAblica Dominicana)", rtl: false });
({ country: { code: r$3.Ecuador, name: "Ecuador", native: "Ecuador" }, id: e$1.SpanishEcuador, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Ecuador)", native_name: "Espa\xF1ol (Ecuador)", rtl: false });
({ country: { code: r$3.ElSalvador, name: "El Salvador", native: "El Salvador" }, id: e$1.SpanishElSalvador, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (El Salvador)", native_name: "Espa\xF1ol (El Salvador)", rtl: false });
({ country: { code: r$3.EquatorialGuinea, name: "Equatorial Guinea", native: "Guinea Ecuatorial" }, id: e$1.SpanishEquatorialGuinea, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Equatorial Guinea)", native_name: "Espa\xF1ol (Guinea Ecuatorial)", rtl: false });
({ country: { code: r$3.Guatemala, name: "Guatemala", native: "Guatemala" }, id: e$1.SpanishGuatemala, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Guatemala)", native_name: "Espa\xF1ol (Guatemala)", rtl: false });
({ country: { code: r$3.Honduras, name: "Honduras", native: "Honduras" }, id: e$1.SpanishHonduras, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Honduras)", native_name: "Espa\xF1ol (Honduras)", rtl: false });
({ country: { code: r$3.Mexico, name: "Mexico", native: "M\xE9xico" }, id: e$1.SpanishMexico, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Mexico)", native_name: "Espa\xF1ol (M\xE9xico)", rtl: false });
({ country: { code: r$3.Nicaragua, name: "Nicaragua", native: "Nicaragua" }, id: e$1.SpanishNicaragua, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Nicaragua)", native_name: "Espa\xF1ol (Nicaragua)", rtl: false });
({ country: { code: r$3.Panama, name: "Panama", native: "Panam\xE1" }, id: e$1.SpanishPanama, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Panama)", native_name: "Espa\xF1ol (Panam\xE1)", rtl: false });
({ country: { code: r$3.Paraguay, name: "Paraguay", native: "Paraguay" }, id: e$1.SpanishParaguay, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Paraguay)", native_name: "Espa\xF1ol (Paraguay)", rtl: false });
({ country: { code: r$3.Peru, name: "Peru", native: "Per\xFA" }, id: e$1.SpanishPeru, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Peru)", native_name: "Espa\xF1ol (Per\xFA)", rtl: false });
({ country: { code: r$3.PuertoRico, name: "Puerto Rico", native: "Puerto Rico" }, id: e$1.SpanishPuertoRico, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Puerto Rico)", native_name: "Espa\xF1ol (Puerto Rico)", rtl: false });
({ country: { code: r$3.Uruguay, name: "Uruguay", native: "Uruguay" }, id: e$1.SpanishUruguay, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Uruguay)", native_name: "Espa\xF1ol (Uruguay)", rtl: false });
({ country: { code: r$3.Venezuela, name: "Venezuela", native: "Venezuela" }, id: e$1.SpanishVenezuela, language: { code: o.Spanish, name: "Spanish", native: "Espa\xF1ol" }, name: "Spanish (Venezuela)", native_name: "Espa\xF1ol (Venezuela)", rtl: false });
({ country: { code: r$3.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$1.SutuSouthAfrica, language: { code: o.Sutu, name: "Sutu", native: "Sesotho" }, name: "Sutu (South Africa)", native_name: "Sesotho (Afrika Borwa)", rtl: false });
({ id: e$1.Swahili, language: { code: o.Swahili, name: "Swahili", native: "Kiswahili" }, name: "Swahili", native_name: "Kiswahili", rtl: false });
({ country: { code: r$3.Kenya, name: "Kenya", native: "Kenya" }, id: e$1.SwahiliKenya, language: { code: o.Swahili, name: "Swahili", native: "Kiswahili" }, name: "Swahili (Kenya)", native_name: "Kiswahili (Kenya)", rtl: false });
({ id: e$1.Swedish, language: { code: o.Swedish, name: "Swedish", native: "Svenska" }, name: "Swedish", native_name: "Svenska", rtl: false });
({ country: { code: r$3.Finland, name: "Finland", native: "Suomi" }, id: e$1.SwedishFinland, language: { code: o.Swedish, name: "Swedish", native: "Svenska" }, name: "Swedish (Finland)", native_name: "Svenska (Finland)", rtl: false });
({ country: { code: r$3.Sweden, name: "Sweden", native: "Sverige" }, id: e$1.SwedishSweden, language: { code: o.Swedish, name: "Swedish", native: "Svenska" }, name: "Swedish (Sweden)", native_name: "Svenska (Sverige)", rtl: false });
({ id: e$1.Syriac, language: { code: o.Syriac, name: "Syriac", native: "\u0723\u0718\u072A\u071D\u071D\u0710" }, name: "Syriac", native_name: "\u0723\u0718\u072A\u071D\u071D\u0710", rtl: true });
({ country: { code: r$3.Syria, name: "Syria", native: "\u0633\u0648\u0631\u064A\u0627" }, id: e$1.SyriacSyria, language: { code: o.Syriac, name: "Syriac", native: "\u0723\u0718\u072A\u071D\u071D\u0710" }, name: "Syriac (Syria)", native_name: "\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)", rtl: true });
({ id: e$1.Tajik, language: { code: o.Tajik, name: "Tajik", native: "\u0422\u043E\u04B7\u0438\u043A\u04E3" }, name: "Tajik", native_name: "\u0422\u043E\u04B7\u0438\u043A\u04E3", rtl: false });
({ country: { code: r$3.Tajikistan, name: "Tajikistan", native: "\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D" }, id: e$1.TajikTajikistan, language: { code: o.Tajik, name: "Tajik", native: "\u0422\u043E\u04B7\u0438\u043A\u04E3" }, name: "Tajik (Tajikistan)", native_name: "\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)", rtl: false });
({ id: e$1.Tagalog, language: { code: o.Tagalog, name: "Tagalog", native: "Tagalog" }, name: "Tagalog", native_name: "Tagalog", rtl: false });
({ country: { code: r$3.Philippines, name: "Philippines", native: "Pilipinas" }, id: e$1.TagalogPhilippines, language: { code: o.Tagalog, name: "Tagalog", native: "Tagalog" }, name: "Tagalog (Philippines)", native_name: "Tagalog (Pilipinas)", rtl: false });
({ id: e$1.Tamil, language: { code: o.Tamil, name: "Tamil", native: "\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD" }, name: "Tamil", native_name: "\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE" }, id: e$1.TamilIndia, language: { code: o.Tamil, name: "Tamil", native: "\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD" }, name: "Tamil (India)", native_name: "\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)", rtl: false });
({ id: e$1.Telugu, language: { code: o.Telugu, name: "Telugu", native: "\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41" }, name: "Telugu", native_name: "\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02" }, id: e$1.TeluguIndia, language: { code: o.Telugu, name: "Telugu", native: "\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41" }, name: "Telugu (India)", native_name: "\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)", rtl: false });
({ id: e$1.Thai, language: { code: o.Thai, name: "Thai", native: "\u0E44\u0E17\u0E22" }, name: "Thai", native_name: "\u0E44\u0E17\u0E22", rtl: false });
({ country: { code: r$3.Thailand, name: "Thailand", native: "\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22" }, id: e$1.ThaiThailand, language: { code: o.Thai, name: "Thai", native: "\u0E44\u0E17\u0E22" }, name: "Thai (Thailand)", native_name: "\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)", rtl: false });
({ id: e$1.Tibetan, language: { code: o.Tibetan, name: "Tibetan", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Tibetan", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42", rtl: false });
({ country: { code: r$3.China, name: "China", native: "\u4E2D\u56FD" }, id: e$1.TibetanChina, language: { code: o.Tibetan, name: "Tibetan", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Tibetan (China)", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)", rtl: false });
({ country: { code: r$3.Bhutan, name: "Bhutan", native: "\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D" }, id: e$1.TibetanBhutan, language: { code: o.Tibetan, name: "Tibetan", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Tibetan (Bhutan)", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)", rtl: false });
({ country: { code: r$3.India, name: "India", native: "\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE" }, id: e$1.TibetanIndia, language: { code: o.Tibetan, name: "Tibetan", native: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42" }, name: "Tibetan (India)", native_name: "\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)", rtl: false });
({ id: e$1.Tsonga, language: { code: o.Tsonga, name: "Tsonga", native: "Xitsonga" }, name: "Tsonga", native_name: "Xitsonga", rtl: false });
({ id: e$1.Tswana, language: { code: o.Tswana, name: "Tswana", native: "Setswana" }, name: "Tswana", native_name: "Setswana", rtl: false });
({ country: { code: r$3.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$1.TswanaSouthAfrica, language: { code: o.Tswana, name: "Tswana", native: "Setswana" }, name: "Tswana (South Africa)", native_name: "Setswana (South Africa)", rtl: false });
({ id: e$1.Turkish, language: { code: o.Turkish, name: "Turkish", native: "T\xFCrk\xE7e" }, name: "Turkish", native_name: "T\xFCrk\xE7e", rtl: false });
({ country: { code: r$3.Turkey, name: "Turkey", native: "T\xFCrkiye" }, id: e$1.TurkishTurkey, language: { code: o.Turkish, name: "Turkish", native: "T\xFCrk\xE7e" }, name: "Turkish (Turkey)", native_name: "T\xFCrk\xE7e (T\xFCrkiye)", rtl: false });
({ id: e$1.Ukrainian, language: { code: o.Ukrainian, name: "Ukrainian", native: "\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430" }, name: "Ukrainian", native_name: "\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430", rtl: false });
({ country: { code: r$3.Ukraine, name: "Ukraine", native: "\u0423\u043A\u0440\u0430\u0457\u043D\u0430" }, id: e$1.UkrainianUkraine, language: { code: o.Ukrainian, name: "Ukrainian", native: "\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430" }, name: "Ukrainian (Ukraine)", native_name: "\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)", rtl: false });
({ id: e$1.Urdu, language: { code: o.Urdu, name: "Urdu", native: "\u0627\u0631\u062F\u0648" }, name: "Urdu", native_name: "\u0627\u0631\u062F\u0648", rtl: true });
({ country: { code: r$3.Afghanistan, name: "Afghanistan", native: "\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646" }, id: e$1.UrduAfghanistan, language: { code: o.Urdu, name: "Urdu", native: "\u0627\u0631\u062F\u0648" }, name: "Urdu (Afghanistan)", native_name: "\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)", rtl: true });
({ country: { code: r$3.India, name: "India", native: "\u092D\u093E\u0930\u0924" }, id: e$1.UrduIndia, language: { code: o.Urdu, name: "Urdu", native: "\u0627\u0631\u062F\u0648" }, name: "Urdu (India)", native_name: "\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)", rtl: true });
({ country: { code: r$3.Pakistan, name: "Pakistan", native: "\u067E\u0627\u06A9\u0633\u062A\u0627\u0646" }, id: e$1.UrduPakistan, language: { code: o.Urdu, name: "Urdu", native: "\u0627\u0631\u062F\u0648" }, name: "Urdu (Pakistan)", native_name: "\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)", rtl: true });
({ id: e$1.Uzbek, language: { code: o.Uzbek, name: "Uzbek", native: "O\u02BBzbekcha" }, name: "Uzbek", native_name: "O\u02BBzbekcha", rtl: false });
({ country: { code: r$3.Uzbekistan, name: "Uzbekistan", native: "O\u02BBzbekiston" }, id: e$1.UzbekUzbekistan, language: { code: o.Uzbek, name: "Uzbek", native: "O\u02BBzbekcha" }, name: "Uzbek (Latin, Uzbekistan)", native_name: "O\u02BBzbekcha (O\u02BBzbekiston)", rtl: false });
({ country: { code: r$3.Uzbekistan, name: "Uzbekistan", native: "\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D" }, id: e$1.UzbekCyrillic, language: { code: o.Uzbek, name: "Uzbek", native: "\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D" }, name: "Uzbek (Cyrillic)", native_name: "\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)", rtl: false });
({ id: e$1.Vietnamese, language: { code: o.Vietnamese, name: "Vietnamese", native: "Ti\u1EBFng Vi\u1EC7t" }, name: "Vietnamese", native_name: "Ti\u1EBFng Vi\u1EC7t", rtl: false });
({ country: { code: r$3.Vietnam, name: "Vietnam", native: "Vi\u1EC7t Nam" }, id: e$1.VietnameseVietnam, language: { code: o.Vietnamese, name: "Vietnamese", native: "Ti\u1EBFng Vi\u1EC7t" }, name: "Vietnamese (Vietnam)", native_name: "Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)", rtl: false });
({ id: e$1.Welsh, language: { code: o.Welsh, name: "Welsh", native: "Cymraeg" }, name: "Welsh", native_name: "Cymraeg", rtl: false });
({ country: { code: r$3.UnitedKingdom, name: "United Kingdom", native: "United Kingdom" }, id: e$1.WelshUnitedKingdom, language: { code: o.Welsh, name: "Welsh", native: "Cymraeg" }, name: "Welsh (United Kingdom)", native_name: "Cymraeg (United Kingdom)", rtl: false });
({ id: e$1.Xhosa, language: { code: o.Xhosa, name: "Xhosa", native: "isiXhosa" }, name: "Xhosa", native_name: "isiXhosa", rtl: false });
({ country: { code: r$3.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$1.XhosaSouthAfrica, language: { code: o.Xhosa, name: "Xhosa", native: "isiXhosa" }, name: "Xhosa (South Africa)", native_name: "isiXhosa (South Africa)", rtl: false });
({ id: e$1.Yiddish, language: { code: o.Yiddish, name: "Yiddish", native: "\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9" }, name: "Yiddish", native_name: "\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9", rtl: false });
({ id: e$1.Yoruba, language: { code: o.Yoruba, name: "Yoruba", native: "Yor\xF9b\xE1" }, name: "Yoruba", native_name: "Yor\xF9b\xE1", rtl: false });
({ country: { code: r$3.Nigeria, name: "Nigeria", native: "Nigeria" }, id: e$1.YorubaNigeria, language: { code: o.Yoruba, name: "Yoruba", native: "Yor\xF9b\xE1" }, name: "Yoruba (Nigeria)", native_name: "Yor\xF9b\xE1 (Nigeria)", rtl: false });
({ id: e$1.Zulu, language: { code: o.Zulu, name: "Zulu", native: "isiZulu" }, name: "Zulu", native_name: "isiZulu", rtl: false });
({ country: { code: r$3.SouthAfrica, name: "South Africa", native: "South Africa" }, id: e$1.ZuluSouthAfrica, language: { code: o.Zulu, name: "Zulu", native: "isiZulu" }, name: "Zulu (South Africa)", native_name: "isiZulu (South Africa)", rtl: false });
({ id: t.AfricaAbidjan, name: "Africa/Abidjan", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaAccra, name: "Africa/Accra", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaAddisAbaba, name: "Africa/Addis_Ababa", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.AfricaAlgiers, name: "Africa/Algiers", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.AfricaAsmara, name: "Africa/Asmara", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.AfricaBamako, name: "Africa/Bamako", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaBangui, name: "Africa/Bangui", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaBanjul, name: "Africa/Banjul", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaBissau, name: "Africa/Bissau", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaBlantyre, name: "Africa/Blantyre", offset: i$1.UTC_PLUS_2, timezone: n$3.CentralAfricaTime });
({ id: t.AfricaBrazzaville, name: "Africa/Brazzaville", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaBujumbura, name: "Africa/Bujumbura", offset: i$1.UTC_PLUS_2, timezone: n$3.CentralAfricaTime });
({ id: t.AfricaCairo, name: "Africa/Cairo", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.AfricaCasablanca, name: "Africa/Casablanca", offset: i$1.UTC_PLUS_1, timezone: n$3.WesternEuropeanTime });
({ id: t.AfricaCeuta, name: "Africa/Ceuta", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.AfricaConakry, name: "Africa/Conakry", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaDakar, name: "Africa/Dakar", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaDarEsSalaam, name: "Africa/Dar_es_Salaam", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.AfricaDjibouti, name: "Africa/Djibouti", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.AfricaDouala, name: "Africa/Douala", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaElAaiun, name: "Africa/El_Aaiun", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaFreetown, name: "Africa/Freetown", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaGaborone, name: "Africa/Gaborone", offset: i$1.UTC_PLUS_2, timezone: n$3.CentralAfricaTime });
({ id: t.AfricaHarare, name: "Africa/Harare", offset: i$1.UTC_PLUS_2, timezone: n$3.CentralAfricaTime });
({ id: t.AfricaJohannesburg, name: "Africa/Johannesburg", offset: i$1.UTC_PLUS_2, timezone: n$3.SouthAfricanStandardTime });
({ id: t.AfricaJuba, name: "Africa/Juba", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.AfricaKampala, name: "Africa/Kampala", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.AfricaKhartoum, name: "Africa/Khartoum", offset: i$1.UTC_PLUS_2, timezone: n$3.EastAfricaTime });
({ id: t.AfricaKigali, name: "Africa/Kigali", offset: i$1.UTC_PLUS_2, timezone: n$3.CentralAfricaTime });
({ id: t.AfricaKinshasa, name: "Africa/Kinshasa", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaLagos, name: "Africa/Lagos", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaLibreville, name: "Africa/Libreville", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaLome, name: "Africa/Lome", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaLuanda, name: "Africa/Luanda", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaLubumbashi, name: "Africa/Lubumbashi", offset: i$1.UTC_PLUS_2, timezone: n$3.CentralAfricaTime });
({ id: t.AfricaLusaka, name: "Africa/Lusaka", offset: i$1.UTC_PLUS_2, timezone: n$3.CentralAfricaTime });
({ id: t.AfricaMalabo, name: "Africa/Malabo", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaMaputo, name: "Africa/Maputo", offset: i$1.UTC_PLUS_2, timezone: n$3.CentralAfricaTime });
({ id: t.AfricaMaseru, name: "Africa/Maseru", offset: i$1.UTC_PLUS_2, timezone: n$3.SouthAfricanStandardTime });
({ id: t.AfricaMbabane, name: "Africa/Mbabane", offset: i$1.UTC_PLUS_2, timezone: n$3.SouthAfricanStandardTime });
({ id: t.AfricaMogadishu, name: "Africa/Mogadishu", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.AfricaMonrovia, name: "Africa/Monrovia", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaNairobi, name: "Africa/Nairobi", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.AfricaNdjamena, name: "Africa/Ndjamena", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaNiamey, name: "Africa/Niamey", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaNouakchott, name: "Africa/Nouakchott", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.AfricaOuagadougou, name: "Africa/Ouagadougou", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaPortoNovo, name: "Africa/Porto-Novo", offset: i$1.UTC_PLUS_1, timezone: n$3.WestAfricaTime });
({ id: t.AfricaSaoTome, name: "Africa/SaoTome", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaTripoli, name: "Africa/Tripoli", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaTunis, name: "Africa/Tunis", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AfricaWindhoek, name: "Africa/Windhoek", offset: i$1.UTC_PLUS_2, timezone: n$3.WestAfricaTime });
({ id: t.AmericaAdak, name: "America/Adak", offset: i$1.UTC_PLUS_10, timezone: n$3.HawaiiAleutianStandardTime });
({ id: t.AmericaAnchorage, name: "America/Anchorage", offset: i$1.UTC_PLUS_9, timezone: n$3.AlaskaStandardTime });
({ id: t.AmericaAnguilla, name: "America/Anguilla", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaAntigua, name: "America/Antigua", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaAraguaina, name: "America/Araguaina", offset: i$1.UTC_MINUS_3, timezone: n$3.BrasiliaTime });
({ id: t.AmericaArgentinaBuenosAires, name: "America/Argentina/Buenos_Aires", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaCatamarca, name: "America/Argentina/Catamarca", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaCordoba, name: "America/Argentina/Cordoba", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaJujuy, name: "America/Argentina/Jujuy", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaLaRioja, name: "America/Argentina/La_Rioja", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaMendoza, name: "America/Argentina/Mendoza", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaRioGallegos, name: "America/Argentina/Rio_Gallegos", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaSalta, name: "America/Argentina/Salta", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaSanJuan, name: "America/Argentina/San_Juan", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaSanLuis, name: "America/Argentina/San_Luis", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaTucuman, name: "America/Argentina/Tucuman", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaArgentinaUshuaia, name: "America/Argentina/Ushuaia", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaAruba, name: "America/Aruba", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaAsuncion, name: "America/Asuncion", offset: i$1.UTC_MINUS_4, timezone: n$3.ParaguayTime });
({ id: t.AmericaAtikokan, name: "America/Atikokan", offset: i$1.UTC_0, timezone: n$3.EasternStandardTime });
({ id: t.AmericaAtka, name: "America/Atka", offset: i$1.UTC_MINUS_10, timezone: n$3.HawaiiAleutianStandardTime });
({ id: t.AmericaBahia, name: "America/Bahia", offset: i$1.UTC_MINUS_3, timezone: n$3.BrasiliaTime });
({ id: t.AmericaBahiaBanderas, name: "America/Bahia_Banderas", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaBarbados, name: "America/Barbados", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaBelem, name: "America/Belem", offset: i$1.UTC_MINUS_3, timezone: n$3.BrasiliaTime });
({ id: t.AmericaBelize, name: "America/Belize", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaBlancSablon, name: "America/Blanc-Sablon", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaBoaVista, name: "America/Boa_Vista", offset: i$1.UTC_MINUS_4, timezone: n$3.AmazonTime });
({ id: t.AmericaBogota, name: "America/Bogota", offset: i$1.UTC_MINUS_5, timezone: n$3.ColombiaTime });
({ id: t.AmericaBoise, name: "America/Boise", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaCambridgeBay, name: "America/Cambridge_Bay", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaCampoGrande, name: "America/Campo_Grande", offset: i$1.UTC_MINUS_4, timezone: n$3.AmazonTime });
({ id: t.AmericaCancun, name: "America/Cancun", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaCaracas, name: "America/Caracas", offset: i$1.UTC_MINUS_4, timezone: n$3.VenezuelaStandardTime });
({ id: t.AmericaCayenne, name: "America/Cayenne", offset: i$1.UTC_MINUS_3, timezone: n$3.FrenchGuianaTime });
({ id: t.AmericaCayman, name: "America/Cayman", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaChicago, name: "America/Chicago", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaChihuahua, name: "America/Chihuahua", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaCoralHarbour, name: "America/Coral_Harbour", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaCordoba, name: "America/Cordoba", offset: i$1.UTC_MINUS_3, timezone: n$3.ArgentinaTime });
({ id: t.AmericaCostaRica, name: "America/Costa_Rica", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaCreston, name: "America/Creston", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaCuiaba, name: "America/Cuiaba", offset: i$1.UTC_MINUS_4, timezone: n$3.AmazonTime });
({ id: t.AmericaCuracao, name: "America/Curacao", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaDanmarkshavn, name: "America/Danmarkshavn", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.AmericaDawson, name: "America/Dawson", offset: i$1.UTC_MINUS_8, timezone: n$3.PacificStandardTime });
({ id: t.AmericaDawsonCreek, name: "America/Dawson_Creek", offset: i$1.UTC_MINUS_8, timezone: n$3.PacificStandardTime });
({ id: t.AmericaDenver, name: "America/Denver", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaDetroit, name: "America/Detroit", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaDominica, name: "America/Dominica", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaEdmonton, name: "America/Edmonton", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaEirunepe, name: "America/Eirunepe", offset: i$1.UTC_MINUS_5, timezone: n$3.AcreTime });
({ id: t.AmericaElSalvador, name: "America/El_Salvador", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaFortaleza, name: "America/Fortaleza", offset: i$1.UTC_MINUS_3, timezone: n$3.BrasiliaTime });
({ id: t.AmericaGlaceBay, name: "America/Glace_Bay", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaGodthab, name: "America/Godthab", offset: i$1.UTC_MINUS_3, timezone: n$3.WestGreenlandTime });
({ id: t.AmericaGooseBay, name: "America/Goose_Bay", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaGrandTurk, name: "America/Grand_Turk", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaGrenada, name: "America/Grenada", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaGuadeloupe, name: "America/Guadeloupe", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaGuatemala, name: "America/Guatemala", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaGuayaquil, name: "America/Guayaquil", offset: i$1.UTC_MINUS_5, timezone: n$3.EcuadorTime });
({ id: t.AmericaGuyana, name: "America/Guyana", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaHalifax, name: "America/Halifax", offset: i$1.UTC_0, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaHavana, name: "America/Havana", offset: i$1.UTC_MINUS_5, timezone: n$3.CubaStandardTime });
({ id: t.AmericaHermosillo, name: "America/Hermosillo", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaIndianaIndianapolis, name: "America/Indiana/Indianapolis", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaIndianaKnox, name: "America/Indiana/Knox", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaIndianaMarengo, name: "America/Indiana/Marengo", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaIndianaPetersburg, name: "America/Indiana/Petersburg", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaIndianaTellCity, name: "America/Indiana/Tell_City", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaIndianaVevay, name: "America/Indiana/Vevay", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaIndianaVincennes, name: "America/Indiana/Vincennes", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaIndianaWinamac, name: "America/Indiana/Winamac", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaInuvik, name: "America/Inuvik", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaIqaluit, name: "America/Iqaluit", offset: i$1.UTC_0, timezone: n$3.EasternStandardTime });
({ id: t.AmericaJamaica, name: "America/Jamaica", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaJuneau, name: "America/Juneau", offset: i$1.UTC_MINUS_9, timezone: n$3.AlaskaStandardTime });
({ id: t.AmericaKentuckyLouisville, name: "America/Kentucky/Louisville", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaKentuckyMonticello, name: "America/Kentucky/Monticello", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaKralendijk, name: "America/Kralendijk", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaLaPaz, name: "America/La_Paz", offset: i$1.UTC_MINUS_4, timezone: n$3.BoliviaTime });
({ id: t.AmericaLima, name: "America/Lima", offset: i$1.UTC_MINUS_5, timezone: n$3.PeruTime });
({ id: t.AmericaLosAngeles, name: "America/Los_Angeles", offset: i$1.UTC_MINUS_8, timezone: n$3.PacificStandardTime });
({ id: t.AmericaLouisville, name: "America/Louisville", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaLowerPrinces, name: "America/Lower_Princes", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaMaceio, name: "America/Maceio", offset: i$1.UTC_MINUS_3, timezone: n$3.BrasiliaTime });
({ id: t.AmericaManagua, name: "America/Managua", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaManaus, name: "America/Manaus", offset: i$1.UTC_MINUS_4, timezone: n$3.AmazonTime });
({ id: t.AmericaMarigot, name: "America/Marigot", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaMartinique, name: "America/Martinique", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaMatamoros, name: "America/Matamoros", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaMazatlan, name: "America/Mazatlan", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaMenominee, name: "America/Menominee", offset: i$1.UTC_MINUS_5, timezone: n$3.CentralStandardTime });
({ id: t.AmericaMerida, name: "America/Merida", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaMetlakatla, name: "America/Metlakatla", offset: i$1.UTC_MINUS_9, timezone: n$3.AlaskaStandardTime });
({ id: t.AmericaMexicoCity, name: "America/Mexico_City", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaMiquelon, name: "America/Miquelon", offset: i$1.UTC_MINUS_3, timezone: n$3.SaintPierreAndMiquelonStandardTime });
({ id: t.AmericaMoncton, name: "America/Moncton", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaMonterrey, name: "America/Monterrey", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaMontevideo, name: "America/Montevideo", offset: i$1.UTC_MINUS_3, timezone: n$3.UruguayStandardTime });
({ id: t.AmericaMontreal, name: "America/Montreal", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaMontserrat, name: "America/Montserrat", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaNassau, name: "America/Nassau", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaNewYork, name: "America/New_York", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaNipigon, name: "America/Nipigon", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaNome, name: "America/Nome", offset: i$1.UTC_MINUS_9, timezone: n$3.AlaskaStandardTime });
({ id: t.AmericaNoronha, name: "America/Noronha", offset: i$1.UTC_MINUS_2, timezone: n$3.FernandoDeNoronhaTime });
({ id: t.AmericaNorthDakotaBeulah, name: "America/North_Dakota/Beulah", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaNorthDakotaCenter, name: "America/North_Dakota/Center", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaNorthDakotaNewSalem, name: "America/North_Dakota/New_Salem", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaOjinaga, name: "America/Ojinaga", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaPanama, name: "America/Panama", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaPangnirtung, name: "America/Pangnirtung", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaParamaribo, name: "America/Paramaribo", offset: i$1.UTC_MINUS_3, timezone: n$3.SurinameTime });
({ id: t.AmericaPhoenix, name: "America/Phoenix", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaPortAuPrince, name: "America/Port-au-Prince", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaPortOfSpain, name: "America/Port_of_Spain", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaPortoVelho, name: "America/Porto_Velho", offset: i$1.UTC_MINUS_4, timezone: n$3.AmazonTime });
({ id: t.AmericaPuertoRico, name: "America/Puerto_Rico", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaRainyRiver, name: "America/Rainy_River", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaRankinInlet, name: "America/Rankin_Inlet", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaRecife, name: "America/Recife", offset: i$1.UTC_MINUS_3, timezone: n$3.BrasiliaTime });
({ id: t.AmericaRegina, name: "America/Regina", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaResolute, name: "America/Resolute", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaRioBranco, name: "America/Rio_Branco", offset: i$1.UTC_MINUS_5, timezone: n$3.AcreTime });
({ id: t.AmericaSantaIsabel, name: "America/Santa_Isabel", offset: i$1.UTC_MINUS_8, timezone: n$3.PacificStandardTime });
({ id: t.AmericaSantarem, name: "America/Santarem", offset: i$1.UTC_MINUS_3, timezone: n$3.BrasiliaTime });
({ id: t.AmericaSantiago, name: "America/Santiago", offset: i$1.UTC_MINUS_4, timezone: n$3.ChileStandardTime });
({ id: t.AmericaSantoDomingo, name: "America/Santo_Domingo", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaSaoPaulo, name: "America/Sao_Paulo", offset: i$1.UTC_MINUS_3, timezone: n$3.BrasiliaTime });
({ id: t.AmericaScoresbysund, name: "America/Scoresbysund", offset: i$1.UTC_MINUS_1, timezone: n$3.EasternGreenlandTime });
({ id: t.AmericaShiprock, name: "America/Shiprock", offset: i$1.UTC_MINUS_7, timezone: n$3.MountainStandardTime });
({ id: t.AmericaSitka, name: "America/Sitka", offset: i$1.UTC_MINUS_9, timezone: n$3.AlaskaStandardTime });
({ id: t.AmericaStBarthelemy, name: "America/St_Barthelemy", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaStJohns, name: "America/St_Johns", offset: i$1.UTC_MINUS_3, timezone: n$3.NewfoundlandStandardTime });
({ id: t.AmericaStKitts, name: "America/St_Kitts", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaStLucia, name: "America/St_Lucia", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaStThomas, name: "America/St_Thomas", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaStVincent, name: "America/St_Vincent", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaSwiftCurrent, name: "America/Swift_Current", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaTegucigalpa, name: "America/Tegucigalpa", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaThule, name: "America/Thule", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaThunderBay, name: "America/Thunder_Bay", offset: i$1.UTC_MINUS_4, timezone: n$3.EasternStandardTime });
({ id: t.AmericaTijuana, name: "America/Tijuana", offset: i$1.UTC_MINUS_8, timezone: n$3.PacificStandardTime });
({ id: t.AmericaToronto, name: "America/Toronto", offset: i$1.UTC_MINUS_5, timezone: n$3.EasternStandardTime });
({ id: t.AmericaTortola, name: "America/Tortola", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AmericaVancouver, name: "America/Vancouver", offset: i$1.UTC_MINUS_8, timezone: n$3.PacificStandardTime });
({ id: t.AmericaWhitehorse, name: "America/Whitehorse", offset: i$1.UTC_MINUS_8, timezone: n$3.PacificStandardTime });
({ id: t.AmericaWinnipeg, name: "America/Winnipeg", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AmericaYakutat, name: "America/Yakutat", offset: i$1.UTC_MINUS_9, timezone: n$3.AlaskaStandardTime });
({ id: t.AmericaYellowknife, name: "America/Yellowknife", offset: i$1.UTC_MINUS_6, timezone: n$3.MountainStandardTime });
({ id: t.AntarcticaCasey, name: "Antarctica/Casey", offset: i$1.UTC_MINUS_8, timezone: n$3.WesternStandardTime });
({ id: t.AntarcticaDavis, name: "Antarctica/Davis", offset: i$1.UTC_MINUS_7, timezone: n$3.NewfoundlandStandardTime });
({ id: t.AntarcticaDumontDUrville, name: "Antarctica/DumontDUrville", offset: i$1.UTC_MINUS_10, timezone: n$3.CentralStandardTime });
({ id: t.AntarcticaMacquarie, name: "Antarctica/Macquarie", offset: i$1.UTC_MINUS_11, timezone: n$3.CentralStandardTime });
({ id: t.AntarcticaMawson, name: "Antarctica/Mawson", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.AntarcticaMcMurdo, name: "Antarctica/McMurdo", offset: i$1.UTC_MINUS_12, timezone: n$3.NewZealandStandardTime });
({ id: t.AntarcticaPalmer, name: "Antarctica/Palmer", offset: i$1.UTC_MINUS_4, timezone: n$3.ChathamStandardTime });
({ id: t.AntarcticaRothera, name: "Antarctica/Rothera", offset: i$1.UTC_MINUS_3, timezone: n$3.RotheraResearchStationTime });
({ id: t.AntarcticaSyowa, name: "Antarctica/Syowa", offset: i$1.UTC_MINUS_3, timezone: n$3.ShowaStationTime });
({ id: t.AntarcticaTroll, name: "Antarctica/Troll", offset: i$1.UTC_MINUS_2, timezone: n$3.CentralStandardTime });
({ id: t.AntarcticaVostok, name: "Antarctica/Vostok", offset: i$1.UTC_MINUS_6, timezone: n$3.CentralStandardTime });
({ id: t.ArcticLongyearbyen, name: "Arctic/Longyearbyen", offset: i$1.UTC_MINUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.AsiaAden, name: "Asia/Aden", offset: i$1.UTC_PLUS_3, timezone: n$3.ArabiaStandardTime });
({ id: t.AsiaAlmaty, name: "Asia/Almaty", offset: i$1.UTC_PLUS_6, timezone: n$3.AlmaAtaTime });
({ id: t.AsiaAmman, name: "Asia/Amman", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.AsiaAnadyr, name: "Asia/Anadyr", offset: i$1.UTC_PLUS_12, timezone: n$3.NewCaledoniaTime });
({ id: t.AsiaAqtau, name: "Asia/Aqtau", offset: i$1.UTC_PLUS_5, timezone: n$3.AqtobeTime });
({ id: t.AsiaAqtobe, name: "Asia/Aqtobe", offset: i$1.UTC_PLUS_5, timezone: n$3.AqtobeTime });
({ id: t.AsiaAshgabat, name: "Asia/Ashgabat", offset: i$1.UTC_PLUS_5, timezone: n$3.TurkmenistanTime });
({ id: t.AsiaBaghdad, name: "Asia/Baghdad", offset: i$1.UTC_PLUS_3, timezone: n$3.ArabiaStandardTime });
({ id: t.AsiaBahrain, name: "Asia/Bahrain", offset: i$1.UTC_PLUS_3, timezone: n$3.ArabiaStandardTime });
({ id: t.AsiaBaku, name: "Asia/Baku", offset: i$1.UTC_PLUS_4, timezone: n$3.AzerbaijanTime });
({ id: t.AsiaBangkok, name: "Asia/Bangkok", offset: i$1.UTC_PLUS_7, timezone: n$3.IndochinaTime });
({ id: t.AsiaBarnaul, name: "Asia/Barnaul", offset: i$1.UTC_PLUS_7, timezone: n$3.KrasnoyarskTime });
({ id: t.AsiaBeirut, name: "Asia/Beirut", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.AsiaBishkek, name: "Asia/Bishkek", offset: i$1.UTC_PLUS_6, timezone: n$3.KyrgyzstanTime });
({ id: t.AsiaBrunei, name: "Asia/Brunei", offset: i$1.UTC_PLUS_8, timezone: n$3.BruneiTime });
({ id: t.AsiaChita, name: "Asia/Chita", offset: i$1.UTC_PLUS_9, timezone: n$3.YakutskTime });
({ id: t.AsiaChoibalsan, name: "Asia/Choibalsan", offset: i$1.UTC_PLUS_8, timezone: n$3.ChoibalsanStandardTime });
({ id: t.AsiaColombo, name: "Asia/Colombo", offset: i$1.UTC_PLUS_5, timezone: n$3.IndianStandardTime });
({ id: t.AsiaDamascus, name: "Asia/Damascus", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.AsiaDhaka, name: "Asia/Dhaka", offset: i$1.UTC_PLUS_6, timezone: n$3.BangladeshStandardTime });
({ id: t.AsiaDili, name: "Asia/Dili", offset: i$1.UTC_PLUS_9, timezone: n$3.JapanStandardTime });
({ id: t.AsiaDubai, name: "Asia/Dubai", offset: i$1.UTC_PLUS_4, timezone: n$3.GulfStandardTime });
({ id: t.AsiaDushanbe, name: "Asia/Dushanbe", offset: i$1.UTC_PLUS_5, timezone: n$3.TajikistanTime });
({ id: t.AsiaFamagusta, name: "Asia/Famagusta", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.AsiaGaza, name: "Asia/Gaza", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.AsiaHebron, name: "Asia/Hebron", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.AsiaHoChiMinh, name: "Asia/Ho_Chi_Minh", offset: i$1.UTC_PLUS_7, timezone: n$3.IndochinaTime });
({ id: t.AsiaHongKong, name: "Asia/Hong_Kong", offset: i$1.UTC_PLUS_8, timezone: n$3.HongKongTime });
({ id: t.AsiaHovd, name: "Asia/Hovd", offset: i$1.UTC_PLUS_7, timezone: n$3.HovdTime });
({ id: t.AsiaIrkutsk, name: "Asia/Irkutsk", offset: i$1.UTC_PLUS_8, timezone: n$3.IrkutskTime });
({ id: t.AsiaJakarta, name: "Asia/Jakarta", offset: i$1.UTC_PLUS_7, timezone: n$3.WesternIndonesianTime });
({ id: t.AsiaJayapura, name: "Asia/Jayapura", offset: i$1.UTC_PLUS_9, timezone: n$3.JapanStandardTime });
({ id: t.AsiaJerusalem, name: "Asia/Jerusalem", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.AsiaKabul, name: "Asia/Kabul", offset: i$1.UTC_PLUS_4, timezone: n$3.AfghanistanTime });
({ id: t.AsiaKamchatka, name: "Asia/Kamchatka", offset: i$1.UTC_PLUS_12, timezone: n$3.KamchatkaTime });
({ id: t.AsiaKarachi, name: "Asia/Karachi", offset: i$1.UTC_PLUS_5, timezone: n$3.PakistanStandardTime });
({ id: t.AsiaKathmandu, name: "Asia/Kathmandu", offset: i$1.UTC_PLUS_5, timezone: n$3.NepalTime });
({ id: t.AsiaKhandyga, name: "Asia/Khandyga", offset: i$1.UTC_PLUS_9, timezone: n$3.YakutskTime });
({ id: t.AsiaKolkata, name: "Asia/Kolkata", offset: i$1.UTC_PLUS_5, timezone: n$3.IndianStandardTime });
({ id: t.AsiaKrasnoyarsk, name: "Asia/Krasnoyarsk", offset: i$1.UTC_PLUS_7, timezone: n$3.KrasnoyarskTime });
({ id: t.AsiaKualaLumpur, name: "Asia/Kuala_Lumpur", offset: i$1.UTC_PLUS_8, timezone: n$3.MalaysiaStandardTime });
({ id: t.AsiaKuching, name: "Asia/Kuching", offset: i$1.UTC_PLUS_8, timezone: n$3.MalaysiaStandardTime });
({ id: t.AsiaKuwait, name: "Asia/Kuwait", offset: i$1.UTC_PLUS_3, timezone: n$3.ArabiaStandardTime });
({ id: t.AsiaMacau, name: "Asia/Macau", offset: i$1.UTC_PLUS_8, timezone: n$3.ChinaStandardTime });
({ id: t.AsiaMagadan, name: "Asia/Magadan", offset: i$1.UTC_PLUS_11, timezone: n$3.MagadanTime });
({ id: t.AsiaMakassar, name: "Asia/Makassar", offset: i$1.UTC_PLUS_8, timezone: n$3.MalaysiaTime });
({ id: t.AsiaManila, name: "Asia/Manila", offset: i$1.UTC_PLUS_8, timezone: n$3.PhilippineTime });
({ id: t.AsiaMuscat, name: "Asia/Muscat", offset: i$1.UTC_PLUS_4, timezone: n$3.GulfStandardTime });
({ id: t.AsiaNovokuznetsk, name: "Asia/Novokuznetsk", offset: i$1.UTC_PLUS_6, timezone: n$3.NovosibirskTime });
({ id: t.AsiaNovosibirsk, name: "Asia/Novosibirsk", offset: i$1.UTC_PLUS_6, timezone: n$3.NovosibirskTime });
({ id: t.AsiaOmsk, name: "Asia/Omsk", offset: i$1.UTC_PLUS_6, timezone: n$3.OmskTime });
({ id: t.AsiaOral, name: "Asia/Oral", offset: i$1.UTC_PLUS_5, timezone: n$3.OralTime });
({ id: t.AsiaPhnomPenh, name: "Asia/Phnom_Penh", offset: i$1.UTC_PLUS_7, timezone: n$3.IndochinaTime });
({ id: t.AsiaPontianak, name: "Asia/Pontianak", offset: i$1.UTC_PLUS_7, timezone: n$3.WesternIndonesianTime });
({ id: t.AsiaPyongyang, name: "Asia/Pyongyang", offset: i$1.UTC_PLUS_9, timezone: n$3.KoreaStandardTime });
({ id: t.AsiaQatar, name: "Asia/Qatar", offset: i$1.UTC_PLUS_3, timezone: n$3.ArabiaStandardTime });
({ id: t.AsiaQyzylorda, name: "Asia/Qyzylorda", offset: i$1.UTC_PLUS_5, timezone: n$3.WestKazakhstanTime });
({ id: t.AsiaRangoon, name: "Asia/Rangoon", offset: i$1.UTC_PLUS_6, timezone: n$3.MyanmarStandardTime });
({ id: t.AsiaRiyadh, name: "Asia/Riyadh", offset: i$1.UTC_PLUS_3, timezone: n$3.ArabiaStandardTime });
({ id: t.AsiaSakhalin, name: "Asia/Sakhalin", offset: i$1.UTC_PLUS_11, timezone: n$3.SakhalinIslandTime });
({ id: t.AsiaSamarkand, name: "Asia/Samarkand", offset: i$1.UTC_PLUS_5, timezone: n$3.UzbekistanTime });
({ id: t.AsiaSeoul, name: "Asia/Seoul", offset: i$1.UTC_PLUS_9, timezone: n$3.KoreaStandardTime });
({ id: t.AsiaShanghai, name: "Asia/Shanghai", offset: i$1.UTC_PLUS_8, timezone: n$3.ChinaStandardTime });
({ id: t.AsiaSingapore, name: "Asia/Singapore", offset: i$1.UTC_PLUS_8, timezone: n$3.SingaporeStandardTime });
({ id: t.AsiaSrednekolymsk, name: "Asia/Srednekolymsk", offset: i$1.UTC_PLUS_11, timezone: n$3.SrednekolymskTime });
({ id: t.AsiaTaipei, name: "Asia/Taipei", offset: i$1.UTC_PLUS_8, timezone: n$3.ChinaStandardTime });
({ id: t.AsiaTashkent, name: "Asia/Tashkent", offset: i$1.UTC_PLUS_5, timezone: n$3.UzbekistanTime });
({ id: t.AsiaTbilisi, name: "Asia/Tbilisi", offset: i$1.UTC_PLUS_4, timezone: n$3.GeorgiaStandardTime });
({ id: t.AsiaTehran, name: "Asia/Tehran", offset: i$1.UTC_PLUS_3, timezone: n$3.IranStandardTime });
({ id: t.AsiaThimphu, name: "Asia/Thimphu", offset: i$1.UTC_PLUS_6, timezone: n$3.BhutanTime });
({ id: t.AsiaTokyo, name: "Asia/Tokyo", offset: i$1.UTC_PLUS_9, timezone: n$3.JapanStandardTime });
({ id: t.AsiaTomsk, name: "Asia/Tomsk", offset: i$1.UTC_PLUS_6, timezone: n$3.KrasnoyarskTime });
({ id: t.AsiaUlaanbaatar, name: "Asia/Ulaanbaatar", offset: i$1.UTC_PLUS_8, timezone: n$3.UlaanbaatarStandardTime });
({ id: t.AsiaUrumqi, name: "Asia/Urumqi", offset: i$1.UTC_PLUS_8, timezone: n$3.ChinaStandardTime });
({ id: t.AsiaUstNera, name: "Asia/Ust-Nera", offset: i$1.UTC_PLUS_10, timezone: n$3.VladivostokTime });
({ id: t.AsiaVientiane, name: "Asia/Vientiane", offset: i$1.UTC_PLUS_7, timezone: n$3.IndochinaTime });
({ id: t.AsiaVladivostok, name: "Asia/Vladivostok", offset: i$1.UTC_PLUS_10, timezone: n$3.VladivostokTime });
({ id: t.AsiaYakutsk, name: "Asia/Yakutsk", offset: i$1.UTC_PLUS_9, timezone: n$3.YakutskTime });
({ id: t.AsiaYekaterinburg, name: "Asia/Yekaterinburg", offset: i$1.UTC_PLUS_5, timezone: n$3.YekaterinburgTime });
({ id: t.AsiaYerevan, name: "Asia/Yerevan", offset: i$1.UTC_PLUS_4, timezone: n$3.ArmeniaTime });
({ id: t.AtlanticAzores, name: "Atlantic/Azores", offset: i$1.UTC_MINUS_1, timezone: n$3.AzoresStandardTime });
({ id: t.AtlanticBermuda, name: "Atlantic/Bermuda", offset: i$1.UTC_MINUS_4, timezone: n$3.AtlanticStandardTime });
({ id: t.AtlanticCanary, name: "Atlantic/Canary", offset: i$1.UTC_MINUS_1, timezone: n$3.WesternEuropeanTime });
({ id: t.AtlanticCapeVerde, name: "Atlantic/Cape_Verde", offset: i$1.UTC_0, timezone: n$3.CapeVerdeTime });
({ id: t.AtlanticFaroe, name: "Atlantic/Faroe", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.AtlanticMadeira, name: "Atlantic/Madeira", offset: i$1.UTC_0, timezone: n$3.WesternEuropeanTime });
({ id: t.AtlanticReykjavik, name: "Atlantic/Reykjavik", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.AtlanticSouthGeorgia, name: "Atlantic/South_Georgia", offset: i$1.UTC_0, timezone: n$3.CoordinatedUniversalTime });
({ id: t.AtlanticStHelena, name: "Atlantic/St_Helena", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.AtlanticStanley, name: "Atlantic/Stanley", offset: i$1.UTC_0, timezone: n$3.FalklandIslandsTime });
({ id: t.AustraliaAdelaide, name: "Australia/Adelaide", offset: i$1.UTC_PLUS_9_30, timezone: n$3.AustralianCentralStandardTime });
({ id: t.AustraliaBrisbane, name: "Australia/Brisbane", offset: i$1.UTC_PLUS_10, timezone: n$3.AustralianEasternStandardTime });
({ id: t.AustraliaBrokenHill, name: "Australia/Broken_Hill", offset: i$1.UTC_PLUS_9_30, timezone: n$3.AustralianCentralStandardTime });
({ id: t.AustraliaCanberra, name: "Australia/Canberra", offset: i$1.UTC_PLUS_10, timezone: n$3.AustralianEasternStandardTime });
({ id: t.AustraliaCurrie, name: "Australia/Currie", offset: i$1.UTC_PLUS_10, timezone: n$3.AustralianEasternStandardTime });
({ id: t.AustraliaDarwin, name: "Australia/Darwin", offset: i$1.UTC_PLUS_9_30, timezone: n$3.AustralianCentralStandardTime });
({ id: t.AustraliaEucla, name: "Australia/Eucla", offset: i$1.UTC_PLUS_8_45, timezone: n$3.AustralianCentralWesternStandardTime });
({ id: t.AustraliaHobart, name: "Australia/Hobart", offset: i$1.UTC_PLUS_10, timezone: n$3.AustralianEasternStandardTime });
({ id: t.AustraliaLindeman, name: "Australia/Lindeman", offset: i$1.UTC_PLUS_10, timezone: n$3.AustralianEasternStandardTime });
({ id: t.AustraliaLordHowe, name: "Australia/Lord_Howe", offset: i$1.UTC_PLUS_10_30, timezone: n$3.LordHoweStandardTime });
({ id: t.AustraliaMelbourne, name: "Australia/Melbourne", offset: i$1.UTC_PLUS_10, timezone: n$3.AustralianEasternStandardTime });
({ id: t.AustraliaPerth, name: "Australia/Perth", offset: i$1.UTC_PLUS_8, timezone: n$3.AustralianWesternStandardTime });
({ id: t.AustraliaSydney, name: "Australia/Sydney", offset: i$1.UTC_PLUS_10, timezone: n$3.AustralianEasternStandardTime });
({ id: t.EuropeAmsterdam, name: "Europe/Amsterdam", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeAndorra, name: "Europe/Andorra", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeAthens, name: "Europe/Athens", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeBelgrade, name: "Europe/Belgrade", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeBerlin, name: "Europe/Berlin", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeBratislava, name: "Europe/Bratislava", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeBrussels, name: "Europe/Brussels", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeBucharest, name: "Europe/Bucharest", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeBudapest, name: "Europe/Budapest", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeBusingen, name: "Europe/Busingen", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeChisinau, name: "Europe/Chisinau", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeCopenhagen, name: "Europe/Copenhagen", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeDublin, name: "Europe/Dublin", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.EuropeGibraltar, name: "Europe/Gibraltar", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeGuernsey, name: "Europe/Guernsey", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeHelsinki, name: "Europe/Helsinki", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeIsleOfMan, name: "Europe/Isle_of_Man", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.EuropeIstanbul, name: "Europe/Istanbul", offset: i$1.UTC_PLUS_3, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeJersey, name: "Europe/Jersey", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeKaliningrad, name: "Europe/Kaliningrad", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeKiev, name: "Europe/Kiev", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeLisbon, name: "Europe/Lisbon", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.EuropeLjubljana, name: "Europe/Ljubljana", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeLondon, name: "Europe/London", offset: i$1.UTC_0, timezone: n$3.GreenwichMeanTime });
({ id: t.EuropeLuxembourg, name: "Europe/Luxembourg", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeMadrid, name: "Europe/Madrid", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeMalta, name: "Europe/Malta", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeMariehamn, name: "Europe/Mariehamn", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeMinsk, name: "Europe/Minsk", offset: i$1.UTC_PLUS_3, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeMonaco, name: "Europe/Monaco", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeMoscow, name: "Europe/Moscow", offset: i$1.UTC_PLUS_3, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeOslo, name: "Europe/Oslo", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeParis, name: "Europe/Paris", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropePodgorica, name: "Europe/Podgorica", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropePrague, name: "Europe/Prague", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeRiga, name: "Europe/Riga", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeRome, name: "Europe/Rome", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeSamara, name: "Europe/Samara", offset: i$1.UTC_PLUS_4, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeSanMarino, name: "Europe/San_Marino", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeSarajevo, name: "Europe/Sarajevo", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeSimferopol, name: "Europe/Simferopol", offset: i$1.UTC_PLUS_3, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeSkopje, name: "Europe/Skopje", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeSofia, name: "Europe/Sofia", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeStockholm, name: "Europe/Stockholm", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeTallinn, name: "Europe/Tallinn", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeTirane, name: "Europe/Tirane", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeUzhgorod, name: "Europe/Uzhgorod", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeVaduz, name: "Europe/Vaduz", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeVatican, name: "Europe/Vatican", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeVienna, name: "Europe/Vienna", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeVilnius, name: "Europe/Vilnius", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeVolgograd, name: "Europe/Volgograd", offset: i$1.UTC_PLUS_4, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeWarsaw, name: "Europe/Warsaw", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeZagreb, name: "Europe/Zagreb", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.EuropeZaporozhye, name: "Europe/Zaporozhye", offset: i$1.UTC_PLUS_2, timezone: n$3.EasternEuropeanTime });
({ id: t.EuropeZurich, name: "Europe/Zurich", offset: i$1.UTC_PLUS_1, timezone: n$3.CentralEuropeanTime });
({ id: t.IndianAntananarivo, name: "Indian/Antananarivo", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.IndianChagos, name: "Indian/Chagos", offset: i$1.UTC_PLUS_6, timezone: n$3.IndianOceanTime });
({ id: t.IndianChristmas, name: "Indian/Christmas", offset: i$1.UTC_PLUS_7, timezone: n$3.ChristmasIslandTime });
({ id: t.IndianCocos, name: "Indian/Cocos", offset: i$1.UTC_PLUS_6, timezone: n$3.CocosIslandsTime });
({ id: t.IndianComoro, name: "Indian/Comoro", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.IndianKerguelen, name: "Indian/Kerguelen", offset: i$1.UTC_PLUS_5, timezone: n$3.FrenchSouthernAndAntarcticTime });
({ id: t.IndianMahe, name: "Indian/Mahe", offset: i$1.UTC_PLUS_4, timezone: n$3.SeychellesTime });
({ id: t.IndianMaldives, name: "Indian/Maldives", offset: i$1.UTC_PLUS_5, timezone: n$3.MaldivesTime });
({ id: t.IndianMauritius, name: "Indian/Mauritius", offset: i$1.UTC_PLUS_4, timezone: n$3.MauritiusTime });
({ id: t.IndianMayotte, name: "Indian/Mayotte", offset: i$1.UTC_PLUS_3, timezone: n$3.EastAfricaTime });
({ id: t.IndianReunion, name: "Indian/Reunion", offset: i$1.UTC_PLUS_4, timezone: n$3.ReunionTime });
({ id: t.PacificApia, name: "Pacific/Apia", offset: i$1.UTC_PLUS_13, timezone: n$3.SamoaStandardTime });
({ id: t.PacificAuckland, name: "Pacific/Auckland", offset: i$1.UTC_PLUS_13, timezone: n$3.NewZealandStandardTime });
({ id: t.PacificChatham, name: "Pacific/Chatham", offset: i$1.UTC_PLUS_13, timezone: n$3.ChathamStandardTime });
({ id: t.PacificEaster, name: "Pacific/Easter", offset: i$1.UTC_PLUS_6, timezone: n$3.EasterIslandStandardTime });
({ id: t.PacificEfate, name: "Pacific/Efate", offset: i$1.UTC_PLUS_11, timezone: n$3.VanuatuTime });
({ id: t.PacificEnderbury, name: "Pacific/Enderbury", offset: i$1.UTC_PLUS_13, timezone: n$3.TongaTime });
({ id: t.PacificFakaofo, name: "Pacific/Fakaofo", offset: i$1.UTC_PLUS_13, timezone: n$3.TongaTime });
({ id: t.PacificFiji, name: "Pacific/Fiji", offset: i$1.UTC_PLUS_12, timezone: n$3.FijiTime });
({ id: t.PacificFunafuti, name: "Pacific/Funafuti", offset: i$1.UTC_PLUS_12, timezone: n$3.TuvaluTime });
({ id: t.PacificGalapagos, name: "Pacific/Galapagos", offset: i$1.UTC_PLUS_6, timezone: n$3.GalapagosTime });
({ id: t.PacificGambier, name: "Pacific/Gambier", offset: i$1.UTC_PLUS_9, timezone: n$3.GambierIslandTime });
({ id: t.PacificGuadalcanal, name: "Pacific/Guadalcanal", offset: i$1.UTC_PLUS_11, timezone: n$3.SolomonIslandsTime });
({ id: t.PacificGuam, name: "Pacific/Guam", offset: i$1.UTC_PLUS_10, timezone: n$3.ChamorroStandardTime });
({ id: t.PacificHonolulu, name: "Pacific/Honolulu", offset: i$1.UTC_PLUS_10, timezone: n$3.HawaiiAleutianStandardTime });
({ id: t.PacificJohnston, name: "Pacific/Johnston", offset: i$1.UTC_PLUS_10, timezone: n$3.HawaiiAleutianStandardTime });
({ id: t.PacificKiritimati, name: "Pacific/Kiritimati", offset: i$1.UTC_PLUS_14, timezone: n$3.LineIslandsTime });
({ id: t.PacificKosrae, name: "Pacific/Kosrae", offset: i$1.UTC_PLUS_11, timezone: n$3.KosraeTime });
({ id: t.PacificKwajalein, name: "Pacific/Kwajalein", offset: i$1.UTC_PLUS_12, timezone: n$3.MarshallIslandsTime });
({ id: t.PacificMajuro, name: "Pacific/Majuro", offset: i$1.UTC_PLUS_12, timezone: n$3.MarshallIslandsTime });
({ id: t.PacificMarquesas, name: "Pacific/Marquesas", offset: i$1.UTC_PLUS_9, timezone: n$3.MarquesasIslandsTime });
({ id: t.PacificMidway, name: "Pacific/Midway", offset: i$1.UTC_PLUS_11, timezone: n$3.SamoaStandardTime });
({ id: t.PacificNauru, name: "Pacific/Nauru", offset: i$1.UTC_PLUS_12, timezone: n$3.NauruTime });
({ id: t.PacificNiue, name: "Pacific/Niue", offset: i$1.UTC_PLUS_11, timezone: n$3.NiueTime });
({ id: t.PacificNorfolk, name: "Pacific/Norfolk", offset: i$1.UTC_PLUS_11, timezone: n$3.NorfolkIslandTime });
({ id: t.PacificNoumea, name: "Pacific/Noumea", offset: i$1.UTC_PLUS_11, timezone: n$3.NewCaledoniaTime });
({ id: t.PacificPagoPago, name: "Pacific/Pago_Pago", offset: i$1.UTC_PLUS_11, timezone: n$3.SamoaStandardTime });
({ id: t.PacificPalau, name: "Pacific/Palau", offset: i$1.UTC_PLUS_9, timezone: n$3.PalauTime });
({ id: t.PacificPitcairn, name: "Pacific/Pitcairn", offset: i$1.UTC_PLUS_8, timezone: n$3.PitcairnTime });
({ id: t.PacificPonape, name: "Pacific/Ponape", offset: i$1.UTC_PLUS_11, timezone: n$3.PohnpeiStandardTime });
({ id: t.PacificPortMoresby, name: "Pacific/Port_Moresby", offset: i$1.UTC_PLUS_10, timezone: n$3.PapuaNewGuineaTime });
({ id: t.PacificRarotonga, name: "Pacific/Rarotonga", offset: i$1.UTC_PLUS_10, timezone: n$3.CookIslandTime });
({ id: t.PacificSaipan, name: "Pacific/Saipan", offset: i$1.UTC_PLUS_10, timezone: n$3.ChamorroStandardTime });
({ id: t.PacificTahiti, name: "Pacific/Tahiti", offset: i$1.UTC_PLUS_10, timezone: n$3.TahitiTime });
({ id: t.PacificTarawa, name: "Pacific/Tarawa", offset: i$1.UTC_PLUS_12, timezone: n$3.GilbertIslandTime });
({ id: t.PacificTongatapu, name: "Pacific/Tongatapu", offset: i$1.UTC_PLUS_13, timezone: n$3.TongaTime });
({ id: t.PacificChuuk, name: "Pacific/Chuuk", offset: i$1.UTC_PLUS_10, timezone: n$3.ChuukTime });
({ id: t.PacificPohnpei, name: "Pacific/Pohnpei", offset: i$1.UTC_PLUS_11, timezone: n$3.PohnpeiStandardTime });
({ id: t.PacificYap, name: "Pacific/Yap", offset: i$1.UTC_PLUS_10, timezone: n$3.ChuukTime });
var Vi = (a = 21) => {
  let u2 = "", A2 = crypto.getRandomValues(new Uint8Array(a));
  for (; a--; ) {
    let f2 = A2[a] & 63;
    f2 < 36 ? u2 += f2.toString(36) : f2 < 62 ? u2 += (f2 - 26).toString(36).toUpperCase() : f2 < 63 ? u2 += "_" : u2 += "-";
  }
  return u2;
};
var fn = [{ property: "name", enumerable: false }, { property: "message", enumerable: false }, { property: "stack", enumerable: false }, { property: "code", enumerable: true }], qi = Symbol(".toJSON was called"), hn = (a) => {
  a[qi] = true;
  let u2 = a.toJSON();
  return delete a[qi], u2;
}, Ji = ({ from: a, seen: u2, to_: A2, forceEnumerable: f2, maxDepth: U2, depth: E2 }) => {
  let v2 = A2 || (Array.isArray(a) ? [] : {});
  if (u2.push(a), E2 >= U2)
    return v2;
  if (typeof a.toJSON == "function" && a[qi] !== true)
    return hn(a);
  for (let [_, S] of Object.entries(a)) {
    if (typeof Buffer == "function" && Buffer.isBuffer(S)) {
      v2[_] = "[object Buffer]";
      continue;
    }
    if (typeof S == "object" && typeof S.pipe == "function") {
      v2[_] = "[object Stream]";
      continue;
    }
    if (typeof S != "function") {
      if (!S || typeof S != "object") {
        v2[_] = S;
        continue;
      }
      if (!u2.includes(a[_])) {
        E2++, v2[_] = Ji({ from: a[_], seen: [...u2], forceEnumerable: f2, maxDepth: U2, depth: E2 });
        continue;
      }
      v2[_] = "[Circular]";
    }
  }
  for (let { property: _, enumerable: S } of fn)
    typeof a[_] == "string" && Object.defineProperty(v2, _, { value: a[_], enumerable: f2 ? true : S, configurable: true, writable: true });
  return v2;
};
function Yi(a, u2 = {}) {
  let { maxDepth: A2 = Number.POSITIVE_INFINITY } = u2;
  return typeof a == "object" && a !== null ? Ji({ from: a, seen: [], forceEnumerable: true, maxDepth: A2, depth: 0 }) : typeof a == "function" ? `[Function: ${a.name || "anonymous"}]` : a;
}
var g$3 = ((m2) => (m2[m2.Warning = 999] = "Warning", m2[m2.Exception = 1e3] = "Exception", m2[m2.UnmanagedException = 1001] = "UnmanagedException", m2[m2.CaughtException = 1002] = "CaughtException", m2[m2.UncaughtException = 1003] = "UncaughtException", m2[m2.UnhandledPromiseRejectionException = 1004] = "UnhandledPromiseRejectionException", m2[m2.AuthenticationException = 2e3] = "AuthenticationException", m2[m2.AuthenticationExpiredAccessTokenException = 2001] = "AuthenticationExpiredAccessTokenException", m2[m2.AuthenticationInvalidAccessTokenException = 2002] = "AuthenticationInvalidAccessTokenException", m2[m2.AuthenticationMissingAccessTokenException = 2003] = "AuthenticationMissingAccessTokenException", m2[m2.AuthenticationExpiredRefreshTokenException = 2004] = "AuthenticationExpiredRefreshTokenException", m2[m2.AuthenticationInvalidRefreshTokenException = 2005] = "AuthenticationInvalidRefreshTokenException", m2[m2.AuthenticationMissingRefreshTokenException = 2006] = "AuthenticationMissingRefreshTokenException", m2[m2.AuthenticationMissingDeviceKeyException = 2007] = "AuthenticationMissingDeviceKeyException", m2[m2.AuthenticationUnAuthorizedAccessException = 2008] = "AuthenticationUnAuthorizedAccessException", m2[m2.AuthenticationCodeMismatchException = 2009] = "AuthenticationCodeMismatchException", m2[m2.AuthenticationExpiredCodeException = 2010] = "AuthenticationExpiredCodeException", m2[m2.AuthenticationLoginException = 2011] = "AuthenticationLoginException", m2[m2.AuthenticationLoginInvalidCredentialsException = 2012] = "AuthenticationLoginInvalidCredentialsException", m2[m2.AuthenticationLoginTooManyFailedAttemptsException = 2013] = "AuthenticationLoginTooManyFailedAttemptsException", m2[m2.AuthenticationLimitExceededException = 2014] = "AuthenticationLimitExceededException", m2[m2.AuthenticationUnauthorizedAccessException = 2015] = "AuthenticationUnauthorizedAccessException", m2[m2.AuthenticationTooManyRequestsException = 2016] = "AuthenticationTooManyRequestsException", m2[m2.AuthenticationUserNotFoundException = 2017] = "AuthenticationUserNotFoundException", m2[m2.AuthenticationSignupException = 2018] = "AuthenticationSignupException", m2[m2.AuthenticationUsernameAvailabilityCheckException = 2019] = "AuthenticationUsernameAvailabilityCheckException", m2[m2.AuthenticationUsernameExistsException = 2020] = "AuthenticationUsernameExistsException", m2[m2.AuthenticationAliasExistException = 2021] = "AuthenticationAliasExistException", m2[m2.AuthenticationCodeDeliveryFailureException = 2022] = "AuthenticationCodeDeliveryFailureException", m2[m2.AuthenticationMFAMethodNotFoundException = 2023] = "AuthenticationMFAMethodNotFoundException", m2[m2.AuthenticationNotAuthorizedException = 2024] = "AuthenticationNotAuthorizedException", m2[m2.AuthenticationPasswordResetRequiredException = 2025] = "AuthenticationPasswordResetRequiredException", m2[m2.AuthenticationUserNotConfirmedException = 2026] = "AuthenticationUserNotConfirmedException", m2[m2.DatabaseException = 3e3] = "DatabaseException", m2[m2.SequelizeNotInitializedException = 3001] = "SequelizeNotInitializedException", m2[m2.ProcessException = 4e3] = "ProcessException", m2[m2.ProcessWarningException = 4001] = "ProcessWarningException", m2[m2.KillProcessException = 4002] = "KillProcessException", m2[m2.FatalException = 4003] = "FatalException", m2[m2.ProcessSigTermException = 4004] = "ProcessSigTermException", m2[m2.ProcessSigIntException = 4005] = "ProcessSigIntException", m2[m2.MissingEnvironmentVariable = 4006] = "MissingEnvironmentVariable", m2[m2.NetworkException = 5e3] = "NetworkException", m2[m2.HttpException = 5001] = "HttpException", m2[m2.HttpRequestException = 5002] = "HttpRequestException", m2[m2.HttpRequestResourceNotFoundException = 5003] = "HttpRequestResourceNotFoundException", m2[m2.HttpResponseException = 5004] = "HttpResponseException", m2[m2.ServiceProviderException = 6e3] = "ServiceProviderException", m2[m2.AWSException = 6001] = "AWSException", m2[m2.AWSMissingAccessKeyException = 6002] = "AWSMissingAccessKeyException", m2[m2.AWSMissingSecretKeyException = 6003] = "AWSMissingSecretKeyException", m2[m2.CognitoException = 6004] = "CognitoException", m2[m2.CognitoInternalErrorException = 6005] = "CognitoInternalErrorException", m2[m2.CognitoInvalidEmailRoleAccessPolicyException = 6006] = "CognitoInvalidEmailRoleAccessPolicyException", m2[m2.CognitoInvalidLambdaResponseException = 6007] = "CognitoInvalidLambdaResponseException", m2[m2.CognitoUserLambdaValidationException = 6008] = "CognitoUserLambdaValidationException", m2[m2.CognitoInvalidParameterException = 6009] = "CognitoInvalidParameterException", m2[m2.CognitoInvalidSmsRoleAccessPolicyException = 6010] = "CognitoInvalidSmsRoleAccessPolicyException", m2[m2.CognitoInvalidSmsRoleTrustRelationshipException = 6011] = "CognitoInvalidSmsRoleTrustRelationshipException", m2[m2.CognitoInvalidUserPoolConfigurationException = 6012] = "CognitoInvalidUserPoolConfigurationException", m2[m2.CognitoResourceNotFoundException = 6013] = "CognitoResourceNotFoundException", m2[m2.CognitoMissingUserPoolClientIdException = 6014] = "CognitoMissingUserPoolClientIdException", m2[m2.CognitoMissingUserPoolIdException = 6015] = "CognitoMissingUserPoolIdException", m2[m2.CognitoUnexpectedLambdaException = 6016] = "CognitoUnexpectedLambdaException", m2[m2.StripeException = 6017] = "StripeException", m2[m2.StripeMissingSecretKeyException = 6018] = "StripeMissingSecretKeyException", m2[m2.StripeSubscriptionCreationFailedException = 6019] = "StripeSubscriptionCreationFailedException", m2[m2.StripePaymentMethodRequiredException = 6020] = "StripePaymentMethodRequiredException", m2[m2.UserException = 7e3] = "UserException", m2[m2.NullUserException = 7001] = "NullUserException", m2[m2.UserStateConflictException = 7002] = "UserStateConflictException", m2[m2.NullAccountException = 7003] = "NullAccountException", m2[m2.ValidationException = 8e3] = "ValidationException", m2[m2.InvalidTypeException = 8001] = "InvalidTypeException", m2[m2.MissingArgumentException = 8002] = "MissingArgumentException", m2[m2.MissingPropertyException = 8003] = "MissingPropertyException", m2[m2.InvalidArgumentException = 8004] = "InvalidArgumentException", m2[m2.InvalidPropertyException = 8005] = "InvalidPropertyException", m2[m2.MissingRequestBodyPropertyException = 8006] = "MissingRequestBodyPropertyException", m2[m2.MissingRequestUrlParameterException = 8007] = "MissingRequestUrlParameterException", m2[m2.MissingCookieException = 8008] = "MissingCookieException", m2))(g$3 || {});
var d$d = class extends Error {
  constructor(u2, A2) {
    super(u2);
    var _a2, _b, _c, _d;
    s$2(this, "cause");
    s$2(this, "code", 1e3);
    s$2(this, "context");
    s$2(this, "created");
    s$2(this, "data");
    s$2(this, "description");
    s$2(this, "model");
    s$2(this, "form");
    s$2(this, "friendlyMessage", "An unknown error has occurred. :(");
    s$2(this, "id");
    s$2(this, "logLevel", c$3.Exception);
    s$2(this, "origin");
    s$2(this, "pii");
    s$2(this, "request");
    s$2(this, "response");
    s$2(this, "scope");
    s$2(this, "remediation");
    s$2(this, "tags");
    s$2(this, "task");
    s$2(this, "user");
    s$2(this, "__proto__");
    let f2 = new.target.prototype;
    if (this.__proto__ = f2, Error.captureStackTrace && Error.captureStackTrace((_a2 = A2 == null ? void 0 : A2.cause) != null ? _a2 : this, d$d), this.id = Vi(), this.name = this.constructor.name, this.created = new Date().toString(), this.description = (_b = A2 == null ? void 0 : A2.description) != null ? _b : this.description, this.remediation = (_c = A2 == null ? void 0 : A2.remediation) != null ? _c : this.remediation, this.scope = (_d = A2 == null ? void 0 : A2.scope) != null ? _d : this.scope, A2) {
      let { cause: U2, context: E2, data: v2, model: _, form: S, origin: nn, pii: tn, request: rn, response: sn, tags: on, task: ln, user: mn } = A2;
      this.cause = U2, this.context = E2, this.data = v2, this.model = _, this.form = S, this.origin = nn, this.pii = tn, this.request = rn, this.response = sn, this.task = ln, this.tags = on, this.user = mn;
    }
  }
  toJSON() {
    return Yi(this);
  }
};
var T$1 = ((f2) => (f2.Simple = "simple", f2.ExponentialBackoff = "exponential", f2.CircuitBreaker = "circuit_breaker", f2))(T$1 || {});
const ErrorLabel = memo((_o) => {
  var _p = _o, {
    alignment = {},
    children,
    className = "",
    icon: icon2 = {},
    textColor = TextColors.Error,
    textSize = TextSize.Small
  } = _p, props = __objRest(_p, [
    "alignment",
    "children",
    "className",
    "icon",
    "textColor",
    "textSize"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      horizontal: AlignHorizontal.Center,
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    }, alignment),
    className: `${className} error-label`,
    icon: __spreadValues({
      color: Colors.Error,
      margin: {
        right: Amount.Least
      },
      name: BasicIcons.Alert,
      size: {
        height: Sizes.Smaller,
        width: Sizes.Smaller
      }
    }, icon2),
    textColor,
    textSize
  }, props), {
    children
  }));
});
function getErrorMessage(error) {
  if (error instanceof d$d) {
    return error.message;
  }
  if (Array.isArray(error) && error.length > 0) {
    if (error[0] instanceof d$d) {
      return error[0].message;
    } else if (typeof error[0] === "object") {
      return error[0].message.short;
    } else if (typeof error[0] === "string") {
      return error[0];
    }
  } else if (typeof error === "string") {
    return error;
  }
  return null;
}
const InputLabel = memo((_q) => {
  var _r = _q, {
    alignment = {},
    children,
    className = "",
    states = {},
    textColor = TextColors.InputLabel,
    textSize = TextSize.Small
  } = _r, props = __objRest(_r, [
    "alignment",
    "children",
    "className",
    "states",
    "textColor",
    "textSize"
  ]);
  var _a2, _b, _c;
  return /* @__PURE__ */ jsxs$1(Container$8, {
    alignment: {
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    },
    children: [/* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
      alignment: __spreadValues({
        horizontal: AlignHorizontal.Left,
        orientation: Orientation.Horizontal
      }, alignment),
      className: `${className} input-label`,
      textSize,
      textColor
    }, props), {
      children
    })), states.state && (((_a2 = states.state) == null ? void 0 : _a2.error) instanceof d$d || Array.isArray((_b = states.state) == null ? void 0 : _b.error) && ((_c = states.state) == null ? void 0 : _c.error.length) > 0) && /* @__PURE__ */ jsx$2(ErrorLabel, {
      alignment: {
        horizontal: AlignHorizontal.Right
      },
      size: {
        fill: Fill.Horizontal
      },
      textSize,
      children: getErrorMessage(states.state.error)
    })]
  });
});
const InputContainer = memo((_s) => {
  var _t = _s, {
    alignment = {},
    background = {},
    borderRadius = {},
    border = {},
    children,
    className = "",
    defaultValue,
    events = {},
    icon: icon2 = {},
    label = void 0,
    lineHeight = Sizes.Default,
    max: max2,
    maxLength,
    min,
    name: name2,
    placeholder = "",
    shadow = DepthShadow.Low,
    states = {},
    textAlign = TextAlign.Left,
    textColor = TextColors.InputControl,
    textSize = TextSize.Default,
    type,
    validation = {}
  } = _t, props = __objRest(_t, [
    "alignment",
    "background",
    "borderRadius",
    "border",
    "children",
    "className",
    "defaultValue",
    "events",
    "icon",
    "label",
    "lineHeight",
    "max",
    "maxLength",
    "min",
    "name",
    "placeholder",
    "shadow",
    "states",
    "textAlign",
    "textColor",
    "textSize",
    "type",
    "validation"
  ]);
  var _a2, _b, _c, _d;
  const [value2, setValue] = useState(defaultValue);
  const [valueChanged, setValueChanged] = useState(false);
  const [focused, setFocused] = useState(false);
  const [problems, setProblems] = useState();
  const inputRef = useRef(null);
  useEffect(() => {
    var _a3, _b2, _c2, _d2;
    if (valueChanged && (validation == null ? void 0 : validation.conditions)) {
      const probs = Si$1(value2, validation == null ? void 0 : validation.conditions);
      setProblems(probs && probs.length > 0 ? probs : void 0);
      if ((_a3 = events.input) == null ? void 0 : _a3.onValueChange)
        (_b2 = events.input) == null ? void 0 : _b2.onValueChange({
          validation: {
            problems: probs,
            validated: probs.length === 0
          },
          value: value2
        });
    } else {
      if ((_c2 = events.input) == null ? void 0 : _c2.onValueChange)
        (_d2 = events.input) == null ? void 0 : _d2.onValueChange({
          value: value2
        });
    }
  }, [value2]);
  return /* @__PURE__ */ jsxs$1(Container$8, {
    className: `${className} input-container`,
    events: __spreadValues({
      mouse: {
        onClick: (e2) => () => {
          var _a3, _b2;
          if (children) {
            (_a3 = inputRef.current) == null ? void 0 : _a3.focus();
          }
          if ((_b2 = events.mouse) == null ? void 0 : _b2.onClick) {
            events.mouse.onClick(e2);
          }
        }
      }
    }, events),
    children: [(label || problems) && /* @__PURE__ */ jsx$2(InputLabel, {
      states: {
        state: {
          error: problems
        }
      },
      children: label
    }), /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
      alignment: __spreadValues({
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      }, alignment),
      background: __spreadValues({
        color: BackgroundColors.InputControl
      }, background),
      borderRadius: __spreadValues({
        all: Amount.Least
      }, borderRadius),
      border: __spreadValues({
        all: {
          color: ((_a2 = states.state) == null ? void 0 : _a2.error) && Array.isArray(states.state.error) && states.state.error.length > 0 ? BorderColors.Error : (border == null ? void 0 : border.all) && typeof (border == null ? void 0 : border.all) == "object" ? border.all.color : BorderColors.InputControl,
          style: BorderStyle.Solid,
          width: 1
        }
      }, border),
      className: `${className} input-container-wrapper`,
      shadow,
      states: {
        state: {
          error: problems,
          focused
        }
      }
    }, props), {
      children: [icon2 && /* @__PURE__ */ jsx$2(Icon, __spreadValues({
        color: value2 === "" || value2 === void 0 ? TextColors.InputPlaceholder : (_b = icon2.color) != null ? _b : textColor,
        margin: {
          left: Amount.Less
        }
      }, icon2)), children ? children : /* @__PURE__ */ jsx$2(Input$2, {
        events: {
          input: {
            onChange: (_c = events.input) == null ? void 0 : _c.onChange,
            onValueChange: ({
              value: val
            }) => {
              var _a3;
              setValueChanged(true);
              setValue(val);
              if ((_a3 = events.input) == null ? void 0 : _a3.onValueChange) {
                events.input.onValueChange({
                  value: val
                });
              }
            }
          }
        },
        max: max2,
        maxLength,
        min,
        placeholder,
        textAlign,
        textColor,
        textSize,
        type
      }), ((_d = states.state) == null ? void 0 : _d.loading) && /* @__PURE__ */ jsx$2(ProgressSpinner, {
        size: {
          height: Sizes.Small,
          width: Sizes.Small
        }
      })]
    }))]
  });
});
const TextInput = memo((_u) => {
  var _v = _u, {
    className = ""
  } = _v, props = __objRest(_v, [
    "className"
  ]);
  return /* @__PURE__ */ jsx$2(InputContainer, __spreadValues({
    className: `${className} text-input`,
    type: InputType.Text
  }, props));
});
const VerificationCodeInput = memo((_w) => {
  var _x = _w, {
    as,
    className = "",
    defaultValue,
    events = {},
    length = 4,
    name: name2,
    placeholder = "",
    states = {},
    textSize = TextSize.Larger,
    textColor = TextColors.Dark,
    codeType = "numeric"
  } = _x, props = __objRest(_x, [
    "as",
    "className",
    "defaultValue",
    "events",
    "length",
    "name",
    "placeholder",
    "states",
    "textSize",
    "textColor",
    "codeType"
  ]);
  const [codeParts, setCodeParts] = useState({});
  const [code, setCode] = useState();
  const codePartsRef = useRef(codeParts);
  useState(void 0);
  useEffect(() => {
    setCode(Object.values(codeParts).join(""));
  }, [codeParts]);
  useEffect(() => {
    var _a2, _b;
    const typeCondition = () => {
      if (codeType === "alpha") {
        return {
          [x$4.IsAlpha]: true
        };
      }
      if (codeType === "alphanumeric") {
        return {
          [x$4.IsAlphanumeric]: true
        };
      }
      return {
        [x$4.IsNumber]: true
      };
    };
    const validation = __spreadValues({
      [x$4.IsRequired]: true,
      [x$4.IsLengthEqual]: length
    }, typeCondition);
    const probs = Si$1(code, validation);
    if ((_a2 = events.input) == null ? void 0 : _a2.onValueChange)
      (_b = events.input) == null ? void 0 : _b.onValueChange({
        validation: {
          problems: probs,
          validated: !probs.length
        },
        value: code
      });
  }, [code]);
  console.log("coeParts", codeParts);
  console.log("code", code);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: {
      horizontal: AlignHorizontal.Center,
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    },
    className: `${className} verification-code-input`
  }, props), {
    children: Array.from(Array(length)).map((_, key) => {
      return /* @__PURE__ */ jsx$2(TextInput, {
        id: `${name2}-verification-code-input-${key}`,
        events: __spreadValues({
          clipboard: __spreadValues({
            onPaste: (e2) => {
              if (key === 0) {
                const pastedText = e2.clipboardData.getData("Text");
                if (pastedText && pastedText.length === length && !Number.isNaN(pastedText)) {
                  let obj = {};
                  let i2 = 0;
                  for (const val of [...pastedText]) {
                    const prop = {
                      [i2]: val
                    };
                    obj = __spreadValues(__spreadValues({}, obj), prop);
                    i2 += 1;
                  }
                  codePartsRef.current = obj;
                  setCodeParts(obj);
                }
              }
            }
          }, events.clipboard),
          input: {
            onChange: (e2) => {
              var _a2;
              console.log("codePartsRef,", codePartsRef);
              console.log("e", e2);
              if (e2.nativeEvent.inputType !== "insertFromPaste") {
                const currentCodePart = (_a2 = codePartsRef.current) == null ? void 0 : _a2[key];
                console.log("curentCodePart", currentCodePart);
                if (e2.target.value.length === 1 || e2.target.value.length === 0) {
                  codePartsRef.current = __spreadProps(__spreadValues({}, codePartsRef.current), {
                    [key]: e2.target.value
                  });
                  setCodeParts(__spreadProps(__spreadValues({}, codePartsRef.current), {
                    [key]: e2.target.value
                  }));
                } else {
                  codePartsRef.current = __spreadProps(__spreadValues({}, codePartsRef.current), {
                    [key]: void 0
                  });
                  setCodeParts(__spreadProps(__spreadValues({}, codePartsRef.current), {
                    [key]: void 0
                  }));
                }
                if (e2.target.value.length === 1 && !currentCodePart) {
                  const nextElem = document.getElementById(`${name2}-verification-code-input-${key + 1}`);
                  if (nextElem) {
                    nextElem.focus();
                  }
                }
              }
            },
            onValueChange: ({
              value: value2
            }) => {
              console.log("VALUE", value2);
            }
          },
          keyboard: __spreadValues({
            onKeyPress: (e2) => {
              console.log("e", e2);
            },
            onKeyDown: (e2) => {
              if (e2.key === "Delete" || e2.key === "Backspace" && !e2.target.value) {
                const lastElem = document.getElementById(`${name2}-verification-code-input-${key - 1}`);
                if (lastElem) {
                  lastElem.focus();
                }
              }
            }
          }, events.keyboard)
        }, events),
        lineHeight: Sizes.Largest,
        margin: {
          left: Amount.Least,
          right: Amount.Least
        },
        max: 9,
        maxLength: 1,
        min: 0,
        size: {
          height: Sizes.Largest,
          width: Sizes.Largest
        },
        textAlign: TextAlign.Center,
        textSize: TextSize.Larger,
        value: codePartsRef.current[key] ? codePartsRef.current[key] : void 0
      }, key);
    })
  }));
});
const InputRow = memo((_y) => {
  var _z = _y, {
    children,
    className = "",
    margin = {}
  } = _z, props = __objRest(_z, [
    "children",
    "className",
    "margin"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    className: `${className} input-row`,
    margin: __spreadValues({
      bottom: Amount.More
    }, margin)
  }, props), {
    children
  }));
});
const LoadingOverlay = memo((_A) => {
  var _B = _A, {
    background = {},
    borderRadius = {},
    className = "",
    position = {},
    spinnerSize,
    states = {}
  } = _B, props = __objRest(_B, [
    "background",
    "borderRadius",
    "className",
    "position",
    "spinnerSize",
    "states"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: {
      horizontal: AlignHorizontal.Center,
      vertical: AlignVertical.Center
    },
    background: __spreadValues({
      color: BackgroundColors.Dark,
      opacity: 85
    }, background),
    borderRadius,
    className: `${className} loading-overlay`,
    position: __spreadValues({
      behavior: PositionBehavior.Absolute,
      bottom: 0,
      left: 0,
      right: 0,
      top: 0
    }, position),
    states: __spreadValues({
      state: __spreadValues({
        visible: false
      }, states.state)
    }, states),
    style: {
      zIndex: 10
    }
  }, props), {
    children: /* @__PURE__ */ jsx$2(ProgressSpinner, {
      size: spinnerSize
    })
  }));
});
const Paragraph = memo((_C) => {
  var _D = _C, {
    as = "p",
    children,
    className = "",
    lineHeight = Sizes.Default,
    textColor = TextColors.Paragraph,
    textSize = TextSize.Default
  } = _D, props = __objRest(_D, [
    "as",
    "children",
    "className",
    "lineHeight",
    "textColor",
    "textSize"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    as,
    className: `${className} paragraph`,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children
  }));
});
const Title = memo((_E) => {
  var _F = _E, {
    as = "h1",
    children,
    className = "",
    lineHeight = Sizes.Larger,
    textSize = TextSize.Larger,
    textColor = TextColors.Title,
    textWeight = TextWeight.Most
  } = _F, props = __objRest(_F, [
    "as",
    "children",
    "className",
    "lineHeight",
    "textSize",
    "textColor",
    "textWeight"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    alignment: {
      vertical: AlignVertical.Top
    },
    as,
    className: `${className} title`,
    textColor,
    lineHeight,
    textSize,
    textWeight
  }, props), {
    children
  }));
});
const CodeVerificationForm = memo(({
  background = {},
  borderRadius = {},
  onVerificationSuccess,
  userId
}) => {
  var _a2;
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const verificationState = useSelector((state) => {
    var _a3;
    return (_a3 = state.user.authentication) == null ? void 0 : _a3.verification.code;
  });
  const [code, setCode] = useState();
  const [problems, setProblems] = useState();
  useEffect(() => {
    if (userId) {
      dispatch(getVerificationDetails({
        userId
      }));
    }
  }, []);
  useEffect(() => {
    if (onVerificationSuccess && verificationState.verify.success) {
      onVerificationSuccess();
    }
  }, [verificationState.verify.success]);
  return /* @__PURE__ */ jsxs$1(Container$8, {
    className: "code-verification-form",
    background: __spreadValues({
      color: BackgroundColors.Lighter
    }, background),
    borderRadius: __spreadValues({
      all: Amount.More
    }, borderRadius),
    padding: {
      all: Amount.Most,
      bottom: Amount.None
    },
    shadow: DepthShadow.Highest,
    size: {
      width: 450
    },
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      borderRadius,
      states: {
        state: {
          visible: verificationState.status.inProgress || verificationState.resend.inProgress || verificationState.verify.inProgress
        }
      }
    }), verificationState.verify.success || verificationState.status.state === Ie$2.Confirmed ? /* @__PURE__ */ jsxs$1(Container$8, {
      padding: {
        all: Amount.Default
      },
      children: [/* @__PURE__ */ jsx$2(Title, {
        alignment: {
          horizontal: AlignHorizontal.Center
        },
        children: "You're verified!"
      }), /* @__PURE__ */ jsx$2(Paragraph, {
        alignment: {
          horizontal: AlignHorizontal.Center
        },
        padding: {
          all: Amount.More
        },
        children: "Thank you for verifying your email address."
      }), /* @__PURE__ */ jsx$2(Button$1, {
        events: {
          mouse: {
            onClick: () => navigate("/")
          }
        },
        type: ButtonType.Primary,
        children: "Login"
      })]
    }) : /* @__PURE__ */ jsxs$1(Fragment, {
      children: [/* @__PURE__ */ jsx$2(Title, {
        alignment: {
          horizontal: AlignHorizontal.Center
        },
        children: "Verification"
      }), /* @__PURE__ */ jsxs$1(Paragraph, {
        alignment: {
          horizontal: AlignHorizontal.Center
        },
        padding: {
          all: Amount.More
        },
        children: ["Enter the confirmation code sent to", " ", /* @__PURE__ */ jsx$2("b", {
          children: (_a2 = verificationState.delivery) == null ? void 0 : _a2.destination
        }), "."]
      }), /* @__PURE__ */ jsxs$1(Container$8, {
        children: [/* @__PURE__ */ jsx$2(InputRow, {
          children: /* @__PURE__ */ jsx$2(VerificationCodeInput, {
            autoComplete: AutoComplete.OneTimeCode,
            events: {
              input: {
                onValueChange: ({
                  validation,
                  value: value2
                }) => {
                  setProblems(validation == null ? void 0 : validation.problems);
                  if (validation && validation.validated || !validation) {
                    setCode(value2);
                  }
                }
              }
            },
            length: 6,
            name: "verification_code",
            value: code
          })
        }), /* @__PURE__ */ jsx$2(Button$1, {
          borderRadius: {
            all: Amount.Least
          },
          events: {
            mouse: {
              onClick: () => {
                if (userId && code) {
                  dispatch(verifyCode({
                    code,
                    userId
                  }));
                }
              }
            }
          },
          lineHeight: Sizes.Large,
          states: {
            state: {
              disabled: problems && problems.length > 0 || !code || code.length !== 6 || verificationState.verify.inProgress || verificationState.resend.inProgress
            }
          },
          type: ButtonType.Primary,
          children: "Verify"
        })]
      }), /* @__PURE__ */ jsx$2(Container$8, {
        alignment: {
          horizontal: AlignHorizontal.Center
        },
        padding: {
          all: Amount.Default
        },
        children: !verificationState.resend.success ? /* @__PURE__ */ jsx$2(Button$1, {
          events: {
            mouse: {
              onClick: () => {
                if (userId) {
                  dispatch(resendVerificationCode({
                    userId
                  }));
                }
              }
            }
          },
          type: ButtonType.Link,
          children: "Resend verification code"
        }) : /* @__PURE__ */ jsx$2(Label, {
          icon: {
            name: BasicIcons.Checkmark2,
            size: {
              height: Sizes.Smaller,
              width: Sizes.Smaller
            }
          },
          lineHeight: Sizes.Smaller,
          textSize: TextSize.Default,
          textColor: TextColors.Success,
          textWeight: TextWeight.More,
          children: "A new code has been sent"
        })
      })]
    })]
  });
});
const Orb = memo((_G) => {
  var _H = _G, {
    color = BackgroundColors.Default,
    className = "",
    size = {
      height: Sizes.Smallest,
      width: Sizes.Smallest
    }
  } = _H, props = __objRest(_H, [
    "color",
    "className",
    "size"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadValues({
    className: `${className} orb`,
    background: {
      color
    },
    borderRadius: {
      all: Amount.All
    },
    size
  }, props));
});
const NotificationLabel = memo((_I) => {
  var _J = _I, {
    alignment = {},
    background = {},
    borderRadius = {},
    children,
    className = "",
    label = "",
    padding = {},
    showOrb = true,
    type
  } = _J, props = __objRest(_J, [
    "alignment",
    "background",
    "borderRadius",
    "children",
    "className",
    "label",
    "padding",
    "showOrb",
    "type"
  ]);
  const getBackgroundColor = () => {
    if (!type)
      return background.color;
    switch (type) {
      case C$2.Error:
        return BackgroundColors.Error;
      case C$2.Info:
        return BackgroundColors.Info;
      case C$2.Success:
        return BackgroundColors.Success;
      case C$2.Warning:
        return BackgroundColors.Warning;
    }
  };
  const getTextColor = () => {
    if (!type)
      return TextColors.Default;
    switch (type) {
      case C$2.Error:
        return TextColors.Error;
      case C$2.Info:
        return TextColors.Info;
      case C$2.Success:
        return TextColors.Success;
      case C$2.Warning:
        return TextColors.Warning;
    }
  };
  const bgColor = getBackgroundColor();
  const textColor = getTextColor();
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      horizontal: AlignHorizontal.Center,
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    }, alignment),
    background: __spreadValues({
      color: BackgroundColors.Light,
      opacity: type ? 10 : 100
    }, background),
    borderRadius: __spreadValues({
      all: Amount.All
    }, borderRadius),
    className: `${className} notification-label`,
    padding: __spreadValues({
      all: Amount.Less
    }, padding)
  }, props), {
    children: [showOrb && /* @__PURE__ */ jsx$2(Orb, {
      background: {
        color: bgColor
      },
      margin: {
        right: Amount.Less
      }
    }), label && /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
      textColor,
      lineHeight: Sizes.Small,
      textWeight: TextWeight.Default
    }, props), {
      children: label
    })), children]
  }));
});
const ErrorNotification = memo((_K) => {
  var _L = _K, {
    label,
    showOrb = true
  } = _L, props = __objRest(_L, [
    "label",
    "showOrb"
  ]);
  return /* @__PURE__ */ jsx$2(NotificationLabel, __spreadValues({
    alignment: {
      horizontal: AlignHorizontal.Center
    },
    label,
    showOrb,
    type: C$2.Error
  }, props));
});
const FormActions = memo((_M) => {
  var _N = _M, {
    children
  } = _N, props = __objRest(_N, [
    "children"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: {
      horizontal: AlignHorizontal.SpaceBetween,
      orientation: Orientation.Horizontal
    },
    className: "form-actions",
    margin: {
      top: Amount.More
    }
  }, props), {
    children
  }));
});
const PropertyEditor = memo((_O) => {
  var _P = _O, {
    background = {},
    borderRadius = {},
    className = "",
    defaultValue = {}
  } = _P, props = __objRest(_P, [
    "background",
    "borderRadius",
    "className",
    "defaultValue"
  ]);
  const getValueLabel = (value2) => {
    if (typeof value2 === "string") {
      return value2;
    }
    if (typeof value2 === "number") {
      return value2.toString();
    }
    if (typeof value2 === "boolean") {
      return value2 ? "true" : "false";
    }
    if (value2 === null) {
      return "null";
    }
    if (value2 === void 0) {
      return "undefined";
    }
    if (typeof value2 === "object") {
      return JSON.stringify(value2);
    }
    if (typeof value2 === "function") {
      return value2.toString();
    }
    return value2;
  };
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.Lightest
    }, background),
    border: {
      all: {
        color: BorderColors.Lighter
      }
    },
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    className: `${className} object-editor`,
    shadow: DepthShadow.High
  }, props), {
    children: [/* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal
      },
      borderRadius: __spreadValues({
        all: Amount.Least,
        bottomLeft: Amount.None,
        bottomRight: Amount.None
      }, borderRadius),
      children: [/* @__PURE__ */ jsx$2(Container$8, {
        alignment: {},
        background: {
          color: BackgroundColors.Lighter
        },
        border: {
          right: {
            color: BorderColors.Light
          }
        },
        padding: {
          left: Amount.Less,
          right: Amount.Less
        },
        size: {
          width: 180
        },
        children: /* @__PURE__ */ jsx$2(Label, {
          lineHeight: Sizes.Large,
          children: "Property"
        })
      }), /* @__PURE__ */ jsx$2(Container$8, {
        background: {
          color: BackgroundColors.Lighter
        },
        padding: {
          left: Amount.Less,
          right: Amount.Less
        },
        size: {
          fill: Fill.Horizontal
        },
        children: /* @__PURE__ */ jsx$2(Label, {
          lineHeight: Sizes.Large,
          children: "Value"
        })
      })]
    }), /* @__PURE__ */ jsx$2(Container$8, {
      border: {
        top: {
          color: BorderColors.Light
        }
      },
      borderRadius: __spreadValues({
        all: Amount.Least,
        topLeft: Amount.None,
        topRight: Amount.None
      }, borderRadius),
      size: {
        fill: Fill.Horizontal
      },
      children: Object.keys(defaultValue).map((key) => {
        return /* @__PURE__ */ jsxs$1(Container$8, {
          alignment: {
            orientation: Orientation.Horizontal
          },
          size: {
            fill: Fill.Horizontal
          },
          children: [/* @__PURE__ */ jsx$2(Container$8, {
            border: {
              right: {
                color: BorderColors.Lighter
              }
            },
            padding: {
              left: Amount.Less,
              right: Amount.Less
            },
            size: {
              width: 180
            },
            children: /* @__PURE__ */ jsx$2(Label, {
              lineHeight: Sizes.Large,
              children: key
            })
          }), /* @__PURE__ */ jsx$2(Container$8, {
            padding: {
              left: Amount.Less,
              right: Amount.Less
            },
            size: {
              fill: Fill.Horizontal
            },
            children: /* @__PURE__ */ jsx$2(Label, {
              lineHeight: Sizes.Large,
              children: getValueLabel(defaultValue[key])
            })
          })]
        }, key);
      })
    })]
  }));
});
const ToggleInput = memo(({
  className = "",
  cursor = Cursor.Pointer,
  defaultValue = false,
  events = {},
  falseLabel,
  label,
  trueLabel,
  size = {
    height: Sizes.Default,
    width: Sizes.Default
  }
}) => {
  var _a2;
  const [focused, setFocused] = useState(false);
  const [problems, setProblems] = useState([]);
  const [toggleValue, setToggleValue] = useState(defaultValue);
  const toggleValueRef = useRef(toggleValue);
  useEffect(() => {
    var _a3, _b;
    if ((_a3 = events.input) == null ? void 0 : _a3.onValueChange)
      (_b = events.input) == null ? void 0 : _b.onValueChange({
        value: toggleValue
      });
  }, [toggleValue]);
  useEffect(() => {
    var _a3;
    setToggleValue((_a3 = defaultValue != null ? defaultValue : toggleValue) != null ? _a3 : "");
  }, [defaultValue]);
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [/* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal
      },
      children: [label && /* @__PURE__ */ jsx$2(InputLabel, {
        children: label
      }), problems.length > 0 ? /* @__PURE__ */ jsx$2(ErrorLabel, {
        alignment: {
          horizontal: AlignHorizontal.Right
        },
        children: (_a2 = problems[0]) == null ? void 0 : _a2.message.short
      }) : null]
    }), /* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Left,
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      },
      className: `${className} toggle-input`,
      children: [falseLabel && /* @__PURE__ */ jsx$2(Button$1, {
        cursor,
        form: "null",
        events: {
          mouse: {
            onClick: () => {
              toggleValueRef.current = false;
              setToggleValue(false);
            }
          }
        },
        type: ButtonType.Inline,
        children: /* @__PURE__ */ jsx$2(Label, {
          className: "toggle-input-falsey-label",
          textColor: !toggleValue ? TextColors.Light : TextColors.Lighter,
          children: falseLabel
        })
      }), /* @__PURE__ */ jsx$2(Container$8, {
        alignment: {
          orientation: Orientation.Horizontal,
          vertical: AlignVertical.Center
        },
        as: "button",
        background: {
          color: BackgroundColors.InputControl
        },
        borderRadius: {
          all: Amount.All
        },
        border: {
          all: {
            color: BorderColors.InputControl,
            style: BorderStyle.Solid,
            width: 1
          }
        },
        cursor,
        events: {
          focus: {
            onBlur: () => setFocused(false),
            onFocus: () => setFocused(true)
          },
          mouse: {
            onClick: (e2) => {
              toggleValueRef.current = !toggleValueRef.current;
              setToggleValue(toggleValueRef.current);
            }
          }
        },
        form: "null",
        padding: {
          all: Amount.Least
        },
        shadow: DepthShadow.Low,
        size: {
          height: size.height,
          width: `calc(${size.width} * 2)`
        },
        children: /* @__PURE__ */ jsx$2(Container$8, {
          alignment: {
            horizontal: AlignHorizontal.Center,
            vertical: AlignVertical.Center
          },
          background: {
            color: toggleValueRef.current === true ? Colors.Primary : Colors.Error
          },
          borderRadius: {
            all: Amount.All
          },
          cursor,
          depth: Depth.High,
          shadow: DepthShadow.High,
          size: {
            height: `calc(${size.height} / 3 * 2)`,
            width: `calc(${size.height} / 3 * 2)`
          },
          states: {
            on: {
              transform: {
                translate: {
                  x: `calc(${size.height} / 10 * 9)`
                }
              }
            },
            state: {
              focused,
              on: toggleValue
            }
          },
          children: /* @__PURE__ */ jsx$2(Icon, {
            color: ForegroundColors.White,
            name: toggleValueRef.current === true ? BasicIcons.Checkmark2 : BasicIcons.Close,
            size: {
              height: Sizes.Smallest,
              width: Sizes.Smallest
            }
          })
        })
      }), trueLabel && /* @__PURE__ */ jsx$2(Button$1, {
        cursor,
        form: "null",
        events: {
          mouse: {
            onClick: () => {
              toggleValueRef.current = true;
              setToggleValue(true);
            }
          }
        },
        type: ButtonType.Inline,
        children: /* @__PURE__ */ jsx$2(Label, {
          className: "toggle-input-truthy-label",
          textColor: toggleValue ? TextColors.Light : TextColors.Lighter,
          children: trueLabel
        })
      })]
    })]
  });
});
const EmailAddressInput = memo((_Q) => {
  var _R = _Q, {
    autoComplete = AutoComplete.EmailAddress,
    className = "",
    defaultValue,
    spellCheck = false,
    validation = {}
  } = _R, props = __objRest(_R, [
    "autoComplete",
    "className",
    "defaultValue",
    "spellCheck",
    "validation"
  ]);
  return /* @__PURE__ */ jsx$2(TextInput, __spreadValues({
    autoComplete,
    className: `email-address-input ${className}`,
    spellCheck,
    validation: __spreadValues({
      conditions: __spreadValues({
        [x$4.IsEmailAddress]: true
      }, validation.conditions)
    }, validation)
  }, props));
});
const PhoneNumberInput = memo((_S) => {
  var props = __objRest(_S, []);
  return /* @__PURE__ */ jsx$2(TextInput, __spreadValues({
    validation: {
      conditions: {
        [x$4.IsPhoneNumber]: true
      }
    }
  }, props));
});
const getBorderColor = ({
  focused,
  error
}) => {
  if (error && Array.isArray(error) && error.length > 0)
    return BorderColors.Error;
  if (focused)
    return BorderColors.Primary;
  return BorderColors.InputControl;
};
styled.div.withConfig({
  displayName: "Wrapper",
  componentId: "sc-1k5smuz-0"
})(["background:transparent;border:none;width:100%;", ";.react-date-picker,.react-date-picker__wrapper{width:100%;.react-calendar{color:rgb(", ");overflow:hidden;width:100%;}}.react-date-picker__wrapper{background:transparent;box-shadow:0 0 0 transparent;border:none;cursor:", ";width:100%;}.react-date-picker__inputGroup{line-height:26px;padding:0 ", ";}.react-date-picker__inputGroup__input,.react-date-picker__inputGroup__leadingZero{color:rgb(", ");font-size:14px;font-weight:500;}.react-date-picker__inputGroup__leadingZero{margin-right:4px;}input.react-date-picker__inputGroup__input,.react-date-picker__inputGroup__leadingZero{background:transparent;border:1px solid transparent;border-radius:4px;color:rgb(", ");height:initial;line-height:24px;padding:2px 6px 3px 6px;text-align:center;vertical-align:middle;&:hover{border:1px solid rgb(", ");}&:focus{box-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06) !important;border:1px solid rgb(", ");}}.react-date-picker__inputGroup__divider{color:rgb(", ");}.react-date-picker__calendar{background-color:rgb(", ");border:2px solid rgb( ", " );border-top:none;border-radius:0 0 ", " ", ";height:auto !important;left:-4px !important;padding:", ";right:-1px !important;top:calc(", " - 3px) !important;transition:border 0.2s ease-in-out,opacity 0.2s ease-in-out,transform 0.2s ease-in-out;z-index:100500;width:calc(100% + (", " + 8px));}.react-date-picker__calendar.react-date-picker__calendar--closed{opacity:0;pointer-events:none;transform:translateY(-10px);}.react-calendar__navigation{display:flex;.react-calendar__navigation__arrow{background-color:rgb(", ");border:none;border-radius:", ";color:rgb(", ");cursor:", ";height:", ";margin:0 ", ";text-align:center;width:", ";&:hover{background-color:rgb(", ");}}.react-calendar__navigation__label{background-color:transparent;border:none;border-radius:", ";color:rgb(", ");cursor:", ";font-weight:", ";padding:", " 0;&:hover{background-color:rgb(", ");}}}.react-calendar__tile{background:transparent;border:none;border-radius:", ";color:rgb(", ");padding:", " 0;&:hover{background-color:rgb(", ");color:rgb(", ");cursor:", ";}}.react-calendar__tile--active,.react-calendar__tile--hasActive{background:rgb(", ") !important;color:rgb(", ");}.react-calendar__month-view__weekdays__weekday{border:none;font-size:", ";padding:", " 0;text-align:center;text-decoration:none;}.react-calendar__month-view__days__day--neighboringMonth{color:rgb(", ");}"], ShadowStyles, TextColors.Lighter, Cursor.Pointer, Amount.Least, TextColors.InputControl, TextColors.InputControl, BorderColors.InputControl, BorderColors.Primary, ForegroundColors.Default, BackgroundColors.InputControl, (props) => getBorderColor({
  error: props.error,
  focused: props.focused
}), Amount.Least, Amount.Least, Amount.Least, (props) => props.size, (props) => props.size, BackgroundColors.Dark, Sizes.Default, TextColors.Lighter, Cursor.Pointer, Sizes.Default, Amount.Least, Sizes.Default, BackgroundColors.Darker, Amount.All, TextColors.Default, Cursor.Pointer, TextWeight.More, Amount.Least, BackgroundColors.Darker, Amount.Least, TextColors.Default, Amount.Less, BackgroundColors.Darker, TextColors.Light, Cursor.Pointer, BackgroundColors.Primary, TextColors.InputControl, TextSize.Small, Amount.Least, TextColors.Darker);
const DateInput = memo((_T) => {
  var _U = _T, {
    background = {},
    border = {},
    className = "",
    events = {},
    defaultValue,
    label,
    states = {},
    shadow = DepthShadow.Low,
    textSize = TextSize.Default,
    validation = {
      conditions: {
        [x$4.IsDate]: true
      }
    }
  } = _U, props = __objRest(_U, [
    "background",
    "border",
    "className",
    "events",
    "defaultValue",
    "label",
    "states",
    "shadow",
    "textSize",
    "validation"
  ]);
  const [value2, setValue] = useState(defaultValue);
  const [focused, setFocused] = useState(false);
  const [problems, setProblems] = useState([]);
  const [valueChanged, setValueChanged] = useState(false);
  useEffect(() => {
    var _a2, _b;
    if (valueChanged) {
      if (validation == null ? void 0 : validation.conditions) {
        const probs = Si$1(value2, validation.conditions);
        setProblems(probs);
        if ((_a2 = events.input) == null ? void 0 : _a2.onValueChange)
          events.input.onValueChange({
            validation: {
              problems: probs,
              validated: probs.length === 0
            },
            value: value2
          });
      } else {
        if (((_b = events.input) == null ? void 0 : _b.onValueChange) && value2)
          events.input.onValueChange({
            validation: {
              problems: [],
              validated: true
            },
            value: value2
          });
      }
    }
  }, [value2]);
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [(label || problems.length > 0) && /* @__PURE__ */ jsx$2(InputLabel, {
      states: {
        state: {
          error: problems
        }
      },
      children: label
    }), /* @__PURE__ */ jsx$2(InputContainer, __spreadProps(__spreadValues({
      background: __spreadValues({
        color: BackgroundColors.InputControl
      }, background),
      border: __spreadValues({
        all: {
          color: BorderColors.InputControl,
          style: BorderStyle.Solid,
          width: 1
        }
      }, border),
      className: `${className} date-input`,
      events: {
        mouse: {
          onMouseLeave: () => setFocused(false)
        }
      },
      states: {
        state: {
          error: problems,
          focused
        }
      },
      shadow: !focused ? shadow : DepthShadow.Higher
    }, props), {
      children: /* @__PURE__ */ jsx$2(Container$8, {
        alignment: {
          horizontal: AlignHorizontal.Center,
          vertical: AlignVertical.Center
        },
        border: {
          left: {
            color: BorderColors.InputControl,
            style: BorderStyle.Solid,
            width: 1
          }
        },
        className: "down-arrow",
        size: {
          height: Sizes.Default,
          width: Sizes.Default
        },
        children: /* @__PURE__ */ jsx$2(Icon, {
          color: focused ? ForegroundColors.Lightest : ForegroundColors.Lighter,
          name: BasicIcons.CaretDownArrow,
          className: focused ? "up" : "down",
          size: {
            height: Sizes.Smallest,
            width: Sizes.Smallest
          }
        })
      })
    }))]
  });
});
const DateTimeInput = memo(({
  events = {},
  defaultValue = new Date().toISOString(),
  states = {},
  validation = {
    conditions: {
      [x$4.IsDate]: true
    }
  }
}) => {
  return /* @__PURE__ */ jsx$2(InputContainer, {
    children: /* @__PURE__ */ jsx$2(Wrapper, {})
  });
});
const Wrapper = styled.div.withConfig({
  displayName: "Wrapper",
  componentId: "sc-v3l8eb-0"
})(["cursor:pointer;.react-date-picker,.react-date-picker__wrapper{border-radius:6px;width:100%;.react-calendar{border-radius:15px;box-shadow:0 5px 25px rgba(0,0,0,0.1);overflow:hidden;width:100%;}}.react-date-picker__wrapper{background:white;box-shadow:0 0 0 transparent;border:none;padding:6px;}.react-date-picker__inputGroup{line-height:26px;}.react-date-picker__inputGroup__input,.react-date-picker__inputGroup__leadingZero{color:#5b5b5b;font-size:14px;font-weight:500;}.react-date-picker__inputGroup__leadingZero{margin-right:4px;}input.react-date-picker__inputGroup__input,.react-date-picker__inputGroup__leadingZero{border:1px solid transparent;border-radius:4px;color:#5b5b5b;height:initial;line-height:24px;padding:2px 6px 3px 6px;text-align:center;vertical-align:middle;&:hover{border:1px solid #bbb;}&:focus{box-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06) !important;border:1px solid rgba(65,145,6,1);}}select.react-date-picker__inputGroup__input{height:27px;}.react-date-picker__inputGroup__divider{color:#aaa;}.react-date-picker__calendar{top:45px !important;z-index:100500;}.react-calendar__tile{border-radius:50px;&:hover{background:#f2f2f2;}}.react-calendar__tile--active,.react-calendar__tile--hasActive{background:rgba(65,145,63,1) !important;color:white;}"]);
var __assign$2 = function() {
  __assign$2 = Object.assign || function __assign2(t2) {
    for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s2 = arguments[i2];
      for (var p2 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p2))
          t2[p2] = s2[p2];
    }
    return t2;
  };
  return __assign$2.apply(this, arguments);
};
function __rest(s2, e2) {
  var t2 = {};
  for (var p2 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s2[p2];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s2); i2 < p2.length; i2++) {
      if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i2]))
        t2[p2[i2]] = s2[p2[i2]];
    }
  return t2;
}
function __spreadArray(to, from2, pack) {
  if (pack || arguments.length === 2)
    for (var i2 = 0, l2 = from2.length, ar; i2 < l2; i2++) {
      if (ar || !(i2 in from2)) {
        if (!ar)
          ar = Array.prototype.slice.call(from2, 0, i2);
        ar[i2] = from2[i2];
      }
    }
  return to.concat(ar || from2);
}
var escapeRegExp = function(stringToGoIntoTheRegex) {
  return stringToGoIntoTheRegex.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
};
var abbrMap = {
  k: 1e3,
  m: 1e6,
  b: 1e9
};
var parseAbbrValue = function(value2, decimalSeparator) {
  if (decimalSeparator === void 0) {
    decimalSeparator = ".";
  }
  var reg2 = new RegExp("(\\d+(" + escapeRegExp(decimalSeparator) + "\\d*)?)([kmb])$", "i");
  var match2 = value2.match(reg2);
  if (match2) {
    var digits = match2[1], abbr = match2[3];
    var multiplier = abbrMap[abbr.toLowerCase()];
    return Number(digits.replace(decimalSeparator, ".")) * multiplier;
  }
  return void 0;
};
var removeSeparators = function(value2, separator) {
  if (separator === void 0) {
    separator = ",";
  }
  var reg2 = new RegExp(escapeRegExp(separator), "g");
  return value2.replace(reg2, "");
};
var removeInvalidChars = function(value2, validChars) {
  var chars = escapeRegExp(validChars.join(""));
  var reg2 = new RegExp("[^\\d" + chars + "]", "gi");
  return value2.replace(reg2, "");
};
var cleanValue = function(_a2) {
  var value2 = _a2.value, _b = _a2.groupSeparator, groupSeparator = _b === void 0 ? "," : _b, _c = _a2.decimalSeparator, decimalSeparator = _c === void 0 ? "." : _c, _d = _a2.allowDecimals, allowDecimals = _d === void 0 ? true : _d, _e2 = _a2.decimalsLimit, decimalsLimit = _e2 === void 0 ? 2 : _e2, _f = _a2.allowNegativeValue, allowNegativeValue = _f === void 0 ? true : _f, _g = _a2.disableAbbreviations, disableAbbreviations = _g === void 0 ? false : _g, _h = _a2.prefix, prefix2 = _h === void 0 ? "" : _h, _j = _a2.transformRawValue, transformRawValue = _j === void 0 ? function(rawValue) {
    return rawValue;
  } : _j;
  var transformedValue = transformRawValue(value2);
  if (transformedValue === "-") {
    return transformedValue;
  }
  var abbreviations = disableAbbreviations ? [] : ["k", "m", "b"];
  var reg2 = new RegExp("((^|\\D)-\\d)|(-" + escapeRegExp(prefix2) + ")");
  var isNegative = reg2.test(transformedValue);
  var _k = RegExp("(\\d+)-?" + escapeRegExp(prefix2)).exec(value2) || [], prefixWithValue = _k[0], preValue = _k[1];
  var withoutPrefix = prefix2 ? prefixWithValue ? transformedValue.replace(prefixWithValue, "").concat(preValue) : transformedValue.replace(prefix2, "") : transformedValue;
  var withoutSeparators = removeSeparators(withoutPrefix, groupSeparator);
  var withoutInvalidChars = removeInvalidChars(withoutSeparators, __spreadArray([groupSeparator, decimalSeparator], abbreviations));
  var valueOnly = withoutInvalidChars;
  if (!disableAbbreviations) {
    if (abbreviations.some(function(letter) {
      return letter === withoutInvalidChars.toLowerCase();
    })) {
      return "";
    }
    var parsed = parseAbbrValue(withoutInvalidChars, decimalSeparator);
    if (parsed) {
      valueOnly = String(parsed);
    }
  }
  var includeNegative = isNegative && allowNegativeValue ? "-" : "";
  if (decimalSeparator && valueOnly.includes(decimalSeparator)) {
    var _l = withoutInvalidChars.split(decimalSeparator), int2 = _l[0], decimals = _l[1];
    var trimmedDecimals = decimalsLimit && decimals ? decimals.slice(0, decimalsLimit) : decimals;
    var includeDecimals = allowDecimals ? "" + decimalSeparator + trimmedDecimals : "";
    return "" + includeNegative + int2 + includeDecimals;
  }
  return "" + includeNegative + valueOnly;
};
var fixedDecimalValue = function(value2, decimalSeparator, fixedDecimalLength) {
  if (fixedDecimalLength && value2.length > 1) {
    if (value2.includes(decimalSeparator)) {
      var _a2 = value2.split(decimalSeparator), int2 = _a2[0], decimals = _a2[1];
      if (decimals.length > fixedDecimalLength) {
        return "" + int2 + decimalSeparator + decimals.slice(0, fixedDecimalLength);
      }
    }
    var reg2 = value2.length > fixedDecimalLength ? new RegExp("(\\d+)(\\d{" + fixedDecimalLength + "})") : new RegExp("(\\d)(\\d+)");
    var match2 = value2.match(reg2);
    if (match2) {
      var int2 = match2[1], decimals = match2[2];
      return "" + int2 + decimalSeparator + decimals;
    }
  }
  return value2;
};
var getSuffix = function(value2, _a2) {
  var _b = _a2.groupSeparator, groupSeparator = _b === void 0 ? "," : _b, _c = _a2.decimalSeparator, decimalSeparator = _c === void 0 ? "." : _c;
  var suffixReg = new RegExp("\\d([^" + escapeRegExp(groupSeparator) + escapeRegExp(decimalSeparator) + "0-9]+)");
  var suffixMatch = value2.match(suffixReg);
  return suffixMatch ? suffixMatch[1] : void 0;
};
var formatValue$1 = function(options) {
  var _value = options.value, decimalSeparator = options.decimalSeparator, intlConfig = options.intlConfig, decimalScale = options.decimalScale, _a2 = options.prefix, prefix2 = _a2 === void 0 ? "" : _a2, _b = options.suffix, suffix2 = _b === void 0 ? "" : _b;
  if (_value === "" || _value === void 0) {
    return "";
  }
  if (_value === "-") {
    return "-";
  }
  var isNegative = new RegExp("^\\d?-" + (prefix2 ? escapeRegExp(prefix2) + "?" : "") + "\\d").test(_value);
  var value2 = decimalSeparator !== "." ? replaceDecimalSeparator(_value, decimalSeparator, isNegative) : _value;
  var numberFormatter = intlConfig ? new Intl.NumberFormat(intlConfig.locale, intlConfig.currency ? {
    style: "currency",
    currency: intlConfig.currency,
    minimumFractionDigits: decimalScale || 0,
    maximumFractionDigits: 20
  } : void 0) : new Intl.NumberFormat(void 0, {
    minimumFractionDigits: decimalScale || 0,
    maximumFractionDigits: 20
  });
  var parts = numberFormatter.formatToParts(Number(value2));
  var formatted = replaceParts(parts, options);
  var intlSuffix = getSuffix(formatted, __assign$2({}, options));
  var includeDecimalSeparator = _value.slice(-1) === decimalSeparator ? decimalSeparator : "";
  var _c = value2.match(RegExp("\\d+\\.(\\d+)")) || [], decimals = _c[1];
  if (decimalScale === void 0 && decimals && decimalSeparator) {
    if (formatted.includes(decimalSeparator)) {
      formatted = formatted.replace(RegExp("(\\d+)(" + escapeRegExp(decimalSeparator) + ")(\\d+)", "g"), "$1$2" + decimals);
    } else {
      if (intlSuffix && !suffix2) {
        formatted = formatted.replace(intlSuffix, "" + decimalSeparator + decimals + intlSuffix);
      } else {
        formatted = "" + formatted + decimalSeparator + decimals;
      }
    }
  }
  if (suffix2 && includeDecimalSeparator) {
    return "" + formatted + includeDecimalSeparator + suffix2;
  }
  if (intlSuffix && includeDecimalSeparator) {
    return formatted.replace(intlSuffix, "" + includeDecimalSeparator + intlSuffix);
  }
  if (intlSuffix && suffix2) {
    return formatted.replace(intlSuffix, "" + includeDecimalSeparator + suffix2);
  }
  return [formatted, includeDecimalSeparator, suffix2].join("");
};
var replaceDecimalSeparator = function(value2, decimalSeparator, isNegative) {
  var newValue = value2;
  if (decimalSeparator && decimalSeparator !== ".") {
    newValue = newValue.replace(RegExp(escapeRegExp(decimalSeparator), "g"), ".");
    if (isNegative && decimalSeparator === "-") {
      newValue = "-" + newValue.slice(1);
    }
  }
  return newValue;
};
var replaceParts = function(parts, _a2) {
  var prefix2 = _a2.prefix, groupSeparator = _a2.groupSeparator, decimalSeparator = _a2.decimalSeparator, decimalScale = _a2.decimalScale, _b = _a2.disableGroupSeparators, disableGroupSeparators = _b === void 0 ? false : _b;
  return parts.reduce(function(prev, _a3, i2) {
    var type = _a3.type, value2 = _a3.value;
    if (i2 === 0 && prefix2) {
      if (type === "minusSign") {
        return [value2, prefix2];
      }
      if (type === "currency") {
        return __spreadArray(__spreadArray([], prev), [prefix2]);
      }
      return [prefix2, value2];
    }
    if (type === "currency") {
      return prefix2 ? prev : __spreadArray(__spreadArray([], prev), [value2]);
    }
    if (type === "group") {
      return !disableGroupSeparators ? __spreadArray(__spreadArray([], prev), [groupSeparator !== void 0 ? groupSeparator : value2]) : prev;
    }
    if (type === "decimal") {
      if (decimalScale !== void 0 && decimalScale === 0) {
        return prev;
      }
      return __spreadArray(__spreadArray([], prev), [decimalSeparator !== void 0 ? decimalSeparator : value2]);
    }
    if (type === "fraction") {
      return __spreadArray(__spreadArray([], prev), [decimalScale !== void 0 ? value2.slice(0, decimalScale) : value2]);
    }
    return __spreadArray(__spreadArray([], prev), [value2]);
  }, [""]).join("");
};
var defaultConfig = {
  currencySymbol: "",
  groupSeparator: "",
  decimalSeparator: "",
  prefix: "",
  suffix: ""
};
var getLocaleConfig = function(intlConfig) {
  var _a2 = intlConfig || {}, locale2 = _a2.locale, currency = _a2.currency;
  var numberFormatter = locale2 ? new Intl.NumberFormat(locale2, currency ? {
    currency,
    style: "currency"
  } : void 0) : new Intl.NumberFormat();
  return numberFormatter.formatToParts(1000.1).reduce(function(prev, curr, i2) {
    if (curr.type === "currency") {
      if (i2 === 0) {
        return __assign$2(__assign$2({}, prev), {
          currencySymbol: curr.value,
          prefix: curr.value
        });
      } else {
        return __assign$2(__assign$2({}, prev), {
          currencySymbol: curr.value,
          suffix: curr.value
        });
      }
    }
    if (curr.type === "group") {
      return __assign$2(__assign$2({}, prev), {
        groupSeparator: curr.value
      });
    }
    if (curr.type === "decimal") {
      return __assign$2(__assign$2({}, prev), {
        decimalSeparator: curr.value
      });
    }
    return prev;
  }, defaultConfig);
};
var isNumber$1 = function(input) {
  return RegExp(/\d/, "gi").test(input);
};
var padTrimValue = function(value2, decimalSeparator, decimalScale) {
  if (decimalSeparator === void 0) {
    decimalSeparator = ".";
  }
  if (decimalScale === void 0 || value2 === "" || value2 === void 0) {
    return value2;
  }
  if (!value2.match(/\d/g)) {
    return "";
  }
  var _a2 = value2.split(decimalSeparator), int2 = _a2[0], decimals = _a2[1];
  if (decimalScale === 0) {
    return int2;
  }
  var newValue = decimals || "";
  if (newValue.length < decimalScale) {
    while (newValue.length < decimalScale) {
      newValue += "0";
    }
  } else {
    newValue = newValue.slice(0, decimalScale);
  }
  return "" + int2 + decimalSeparator + newValue;
};
var repositionCursor = function(_a2) {
  var selectionStart = _a2.selectionStart, value2 = _a2.value, lastKeyStroke = _a2.lastKeyStroke, stateValue = _a2.stateValue, groupSeparator = _a2.groupSeparator;
  var cursorPosition = selectionStart;
  var modifiedValue = value2;
  if (stateValue && cursorPosition) {
    var splitValue = value2.split("");
    if (lastKeyStroke === "Backspace" && stateValue[cursorPosition] === groupSeparator) {
      splitValue.splice(cursorPosition - 1, 1);
      cursorPosition -= 1;
    }
    if (lastKeyStroke === "Delete" && stateValue[cursorPosition] === groupSeparator) {
      splitValue.splice(cursorPosition, 1);
      cursorPosition += 1;
    }
    modifiedValue = splitValue.join("");
    return {
      modifiedValue,
      cursorPosition
    };
  }
  return {
    modifiedValue,
    cursorPosition: selectionStart
  };
};
var CurrencyInput$1 = forwardRef(function(_a2, ref) {
  var _b = _a2.allowDecimals, allowDecimals = _b === void 0 ? true : _b, _c = _a2.allowNegativeValue, allowNegativeValue = _c === void 0 ? true : _c, id2 = _a2.id, name2 = _a2.name, className = _a2.className, customInput = _a2.customInput, decimalsLimit = _a2.decimalsLimit, defaultValue = _a2.defaultValue, _d = _a2.disabled, disabled = _d === void 0 ? false : _d, userMaxLength = _a2.maxLength, userValue = _a2.value, onValueChange = _a2.onValueChange, fixedDecimalLength = _a2.fixedDecimalLength, placeholder = _a2.placeholder, decimalScale = _a2.decimalScale, prefix2 = _a2.prefix, suffix2 = _a2.suffix, intlConfig = _a2.intlConfig, step = _a2.step, min = _a2.min, max2 = _a2.max, _e2 = _a2.disableGroupSeparators, disableGroupSeparators = _e2 === void 0 ? false : _e2, _f = _a2.disableAbbreviations, disableAbbreviations = _f === void 0 ? false : _f, _decimalSeparator = _a2.decimalSeparator, _groupSeparator = _a2.groupSeparator, onChange = _a2.onChange, onFocus = _a2.onFocus, onBlur = _a2.onBlur, onKeyDown = _a2.onKeyDown, onKeyUp = _a2.onKeyUp, transformRawValue = _a2.transformRawValue, props = __rest(_a2, ["allowDecimals", "allowNegativeValue", "id", "name", "className", "customInput", "decimalsLimit", "defaultValue", "disabled", "maxLength", "value", "onValueChange", "fixedDecimalLength", "placeholder", "decimalScale", "prefix", "suffix", "intlConfig", "step", "min", "max", "disableGroupSeparators", "disableAbbreviations", "decimalSeparator", "groupSeparator", "onChange", "onFocus", "onBlur", "onKeyDown", "onKeyUp", "transformRawValue"]);
  if (_decimalSeparator && isNumber$1(_decimalSeparator)) {
    throw new Error("decimalSeparator cannot be a number");
  }
  if (_groupSeparator && isNumber$1(_groupSeparator)) {
    throw new Error("groupSeparator cannot be a number");
  }
  var localeConfig = useMemo(function() {
    return getLocaleConfig(intlConfig);
  }, [intlConfig]);
  var decimalSeparator = _decimalSeparator || localeConfig.decimalSeparator || "";
  var groupSeparator = _groupSeparator || localeConfig.groupSeparator || "";
  if (decimalSeparator && groupSeparator && decimalSeparator === groupSeparator && disableGroupSeparators === false) {
    throw new Error("decimalSeparator cannot be the same as groupSeparator");
  }
  var formatValueOptions = {
    decimalSeparator,
    groupSeparator,
    disableGroupSeparators,
    intlConfig,
    prefix: prefix2 || localeConfig.prefix,
    suffix: suffix2
  };
  var cleanValueOptions = {
    decimalSeparator,
    groupSeparator,
    allowDecimals,
    decimalsLimit: decimalsLimit || fixedDecimalLength || 2,
    allowNegativeValue,
    disableAbbreviations,
    prefix: prefix2 || localeConfig.prefix,
    transformRawValue
  };
  var formattedStateValue = defaultValue !== void 0 && defaultValue !== null ? formatValue$1(__assign$2(__assign$2({}, formatValueOptions), {
    decimalScale,
    value: String(defaultValue)
  })) : userValue !== void 0 && userValue !== null ? formatValue$1(__assign$2(__assign$2({}, formatValueOptions), {
    decimalScale,
    value: String(userValue)
  })) : "";
  var _g = useState(formattedStateValue), stateValue = _g[0], setStateValue = _g[1];
  var _h = useState(false), dirty = _h[0], setDirty = _h[1];
  var _j = useState(0), cursor = _j[0], setCursor = _j[1];
  var _k = useState(0), changeCount = _k[0], setChangeCount = _k[1];
  var _l = useState(null), lastKeyStroke = _l[0], setLastKeyStroke = _l[1];
  var inputRef = ref || useRef(null);
  var processChange = function(value2, selectionStart) {
    setDirty(true);
    var _a3 = repositionCursor({
      selectionStart,
      value: value2,
      lastKeyStroke,
      stateValue,
      groupSeparator
    }), modifiedValue = _a3.modifiedValue, cursorPosition = _a3.cursorPosition;
    var stringValue = cleanValue(__assign$2({
      value: modifiedValue
    }, cleanValueOptions));
    if (userMaxLength && stringValue.replace(/-/g, "").length > userMaxLength) {
      return;
    }
    if (stringValue === "" || stringValue === "-" || stringValue === decimalSeparator) {
      onValueChange && onValueChange(void 0, name2, {
        float: null,
        formatted: "",
        value: ""
      });
      setStateValue(stringValue);
      return;
    }
    var numberValue = parseFloat(stringValue.replace(decimalSeparator, "."));
    var formattedValue = formatValue$1(__assign$2({
      value: stringValue
    }, formatValueOptions));
    if (cursorPosition !== void 0 && cursorPosition !== null) {
      var newCursor = cursorPosition + (formattedValue.length - value2.length);
      newCursor = newCursor <= 0 ? prefix2 ? prefix2.length : 0 : newCursor;
      setCursor(newCursor);
      setChangeCount(changeCount + 1);
    }
    setStateValue(formattedValue);
    if (onValueChange) {
      var values = {
        float: numberValue,
        formatted: formattedValue,
        value: stringValue
      };
      onValueChange(stringValue, name2, values);
    }
  };
  var handleOnChange = function(event) {
    var _a3 = event.target, value2 = _a3.value, selectionStart = _a3.selectionStart;
    processChange(value2, selectionStart);
    onChange && onChange(event);
  };
  var handleOnFocus = function(event) {
    onFocus && onFocus(event);
    return stateValue ? stateValue.length : 0;
  };
  var handleOnBlur = function(event) {
    var value2 = event.target.value;
    var valueOnly = cleanValue(__assign$2({
      value: value2
    }, cleanValueOptions));
    if (valueOnly === "-" || !valueOnly) {
      setStateValue("");
      onBlur && onBlur(event);
      return;
    }
    var fixedDecimals = fixedDecimalValue(valueOnly, decimalSeparator, fixedDecimalLength);
    var newValue = padTrimValue(fixedDecimals, decimalSeparator, decimalScale !== void 0 ? decimalScale : fixedDecimalLength);
    var numberValue = parseFloat(newValue.replace(decimalSeparator, "."));
    var formattedValue = formatValue$1(__assign$2(__assign$2({}, formatValueOptions), {
      value: newValue
    }));
    if (onValueChange) {
      onValueChange(newValue, name2, {
        float: numberValue,
        formatted: formattedValue,
        value: newValue
      });
    }
    setStateValue(formattedValue);
    onBlur && onBlur(event);
  };
  var handleOnKeyDown = function(event) {
    var key = event.key;
    setLastKeyStroke(key);
    if (step && (key === "ArrowUp" || key === "ArrowDown")) {
      event.preventDefault();
      setCursor(stateValue.length);
      var currentValue = parseFloat(userValue !== void 0 && userValue !== null ? String(userValue).replace(decimalSeparator, ".") : cleanValue(__assign$2({
        value: stateValue
      }, cleanValueOptions))) || 0;
      var newValue = key === "ArrowUp" ? currentValue + step : currentValue - step;
      if (min !== void 0 && newValue < min) {
        return;
      }
      if (max2 !== void 0 && newValue > max2) {
        return;
      }
      var fixedLength = String(step).includes(".") ? Number(String(step).split(".")[1].length) : void 0;
      processChange(String(fixedLength ? newValue.toFixed(fixedLength) : newValue).replace(".", decimalSeparator));
    }
    onKeyDown && onKeyDown(event);
  };
  var handleOnKeyUp = function(event) {
    var key = event.key, selectionStart = event.currentTarget.selectionStart;
    if (key !== "ArrowUp" && key !== "ArrowDown" && stateValue !== "-") {
      var suffix_1 = getSuffix(stateValue, {
        groupSeparator,
        decimalSeparator
      });
      if (suffix_1 && selectionStart && selectionStart > stateValue.length - suffix_1.length) {
        if (inputRef && typeof inputRef === "object" && inputRef.current) {
          var newCursor = stateValue.length - suffix_1.length;
          inputRef.current.setSelectionRange(newCursor, newCursor);
        }
      }
    }
    onKeyUp && onKeyUp(event);
  };
  useEffect(function() {
    if (dirty && stateValue !== "-" && inputRef && typeof inputRef === "object" && inputRef.current) {
      inputRef.current.setSelectionRange(cursor, cursor);
    }
  }, [stateValue, cursor, inputRef, dirty, changeCount]);
  var getRenderValue = function() {
    if (userValue !== void 0 && userValue !== null && stateValue !== "-" && (!decimalSeparator || stateValue !== decimalSeparator)) {
      return formatValue$1(__assign$2(__assign$2({}, formatValueOptions), {
        decimalScale: dirty ? void 0 : decimalScale,
        value: String(userValue)
      }));
    }
    return stateValue;
  };
  var inputProps = __assign$2({
    type: "text",
    inputMode: "decimal",
    id: id2,
    name: name2,
    className,
    onChange: handleOnChange,
    onBlur: handleOnBlur,
    onFocus: handleOnFocus,
    onKeyDown: handleOnKeyDown,
    onKeyUp: handleOnKeyUp,
    placeholder,
    disabled,
    value: getRenderValue(),
    ref: inputRef
  }, props);
  if (customInput) {
    var CustomInput = customInput;
    return /* @__PURE__ */ jsx$2(CustomInput, __spreadValues({}, __assign$2({}, inputProps)));
  }
  return /* @__PURE__ */ jsx$2("input", __spreadValues({}, __assign$2({}, inputProps)));
});
CurrencyInput$1.displayName = "CurrencyInput";
const CurrencyAmountInput = memo(({
  background = {},
  border = {},
  className = "",
  defaultValue,
  events = {},
  label,
  name: name2,
  shadow = DepthShadow.Low,
  states = {},
  textColor = TextColors.InputControl,
  textWeight = TextWeight.Default,
  validation = {
    conditions: {
      [x$4.IsCurrency]: true
    }
  }
}) => {
  const [value2, setValue] = useState(defaultValue != null ? defaultValue : 0);
  const [focused, setFocused] = useState(false);
  const [problems, setProblems] = useState([]);
  const inputRef = useRef(null);
  const [valueChanged, setValueChanged] = useState(false);
  useEffect(() => {
    var _a2, _b;
    if (valueChanged) {
      if (validation == null ? void 0 : validation.conditions) {
        const probs = Si$1(value2, validation.conditions);
        setProblems(probs);
        if ((_a2 = events.input) == null ? void 0 : _a2.onValueChange)
          events.input.onValueChange({
            validation: {
              problems: probs,
              validated: probs.length === 0
            },
            value: value2
          });
      } else {
        if ((_b = events.input) == null ? void 0 : _b.onValueChange)
          events.input.onValueChange({
            value: value2
          });
      }
    }
  }, [value2]);
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [(label || problems.length > 0) && /* @__PURE__ */ jsx$2(InputLabel, {
      states: {
        state: {
          error: problems
        }
      },
      children: label
    }), /* @__PURE__ */ jsxs$1(InputContainer, {
      background: __spreadValues({
        color: BackgroundColors.InputControl
      }, background),
      border: __spreadValues({
        all: {
          color: BorderColors.InputControl,
          style: BorderStyle.Solid,
          width: 1
        }
      }, border),
      className: `${className} currency-amount-input`,
      events: {
        mouse: {
          onClick: () => {
            if (inputRef.current)
              inputRef.current.focus();
          }
        }
      },
      shadow,
      states: __spreadValues({
        state: {
          error: problems,
          focused
        }
      }, states),
      children: [/* @__PURE__ */ jsx$2(Label, {
        margin: {
          left: Amount.Less,
          right: Amount.Least
        },
        textColor: !value2 ? TextColors.InputPlaceholder : textColor,
        children: "$"
      }), /* @__PURE__ */ jsx$2(CurrencyInput$1, {
        className: "currency-input",
        onBlur: () => setFocused(false),
        onFocus: () => setFocused(true),
        name: name2,
        defaultValue: value2 ? Number(value2).toFixed(2) : 0,
        onValueChange: (v2) => {
          setValueChanged(true);
          setValue(Number.parseInt(v2 != null ? v2 : "0"));
        },
        style: {
          backgroundColor: "transparent",
          border: "none",
          color: !value2 ? `rgb(${TextColors.InputPlaceholder})` : `rgb(${TextColors.InputControl})`,
          fontWeight: textWeight
        }
      })]
    })]
  });
});
function _extends$1() {
  _extends$1 = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var _excluded$2 = ["cdnSuffix", "cdnUrl", "countryCode", "style", "svg"];
var DEFAULT_CDN_URL = "https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.4/flags/4x3/";
var DEFAULT_CDN_SUFFIX = "svg";
var OFFSET = 127397;
var ReactCountryFlag = function ReactCountryFlag2(_ref) {
  var _ref$cdnSuffix = _ref.cdnSuffix, cdnSuffix = _ref$cdnSuffix === void 0 ? DEFAULT_CDN_SUFFIX : _ref$cdnSuffix, _ref$cdnUrl = _ref.cdnUrl, cdnUrl = _ref$cdnUrl === void 0 ? DEFAULT_CDN_URL : _ref$cdnUrl, countryCode = _ref.countryCode, style2 = _ref.style, _ref$svg = _ref.svg, svg = _ref$svg === void 0 ? false : _ref$svg, props = _objectWithoutPropertiesLoose$2(_ref, _excluded$2);
  if (typeof countryCode !== "string") {
    return null;
  }
  if (svg) {
    var flagUrl = "" + cdnUrl + countryCode.toLowerCase() + "." + cdnSuffix;
    return createElement$1("img", Object.assign({}, props, {
      src: flagUrl,
      style: _extends$1({
        display: "inline-block",
        width: "1em",
        height: "1em",
        verticalAlign: "middle"
      }, style2)
    }));
  }
  var emoji = countryCode.toUpperCase().replace(/./g, function(_char) {
    return String.fromCodePoint(_char.charCodeAt(0) + OFFSET);
  });
  return createElement$1("span", Object.assign({
    role: "img"
  }, props, {
    style: _extends$1({
      display: "inline-block",
      fontSize: "1em",
      lineHeight: "1em",
      verticalAlign: "middle"
    }, style2)
  }), emoji);
};
const Scrollable = (_V) => {
  var _W = _V, {
    alignment = {},
    children,
    className = "",
    size = {}
  } = _W, props = __objRest(_W, [
    "alignment",
    "children",
    "className",
    "size"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      overflow: Overflow.ScrollVertical
    }, alignment),
    background: {
      color: BackgroundColors.Transparent
    },
    className: `${className} scrollable`,
    size: __spreadValues({
      fill: Fill.Both
    }, size)
  }, props), {
    children
  }));
};
const NavigationLink = memo((_X) => {
  var _Y = _X, {
    activeClassName = "active",
    alignment = {},
    as = "span",
    borderRadius = {},
    children,
    className = "",
    cursor = Cursor.Pointer,
    events = {},
    inline = false,
    label,
    lineHeight = Sizes.Smaller,
    margin,
    matchExactPath = false,
    menu,
    padding = {},
    rel,
    states = {},
    target,
    textColor = TextColors.Primary,
    textSize,
    textWeight,
    to
  } = _Y, props = __objRest(_Y, [
    "activeClassName",
    "alignment",
    "as",
    "borderRadius",
    "children",
    "className",
    "cursor",
    "events",
    "inline",
    "label",
    "lineHeight",
    "margin",
    "matchExactPath",
    "menu",
    "padding",
    "rel",
    "states",
    "target",
    "textColor",
    "textSize",
    "textWeight",
    "to"
  ]);
  const resolved = useResolvedPath(to);
  const match2 = useMatch({
    end: matchExactPath,
    path: resolved.pathname
  });
  const location = useLocation();
  return /* @__PURE__ */ jsx$2(NavLink, {
    className: `${className} navigation-link`,
    rel,
    target,
    to: to + location.search,
    style: {
      color: "unset",
      display: inline ? "inline-flex" : "flex",
      textDecoration: "unset"
    },
    children: label ? /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
      alignment: __spreadValues({}, alignment),
      as,
      borderRadius,
      className: `${className} ${match2 ? activeClassName : ""} link`,
      cursor,
      margin,
      padding: __spreadValues({
        bottom: menu ? padding == null ? void 0 : padding.left : padding == null ? void 0 : padding.bottom
      }, padding),
      lineHeight,
      states: __spreadProps(__spreadValues({}, states), {
        state: __spreadValues({
          current: match2 ? true : false
        }, states.state)
      }),
      textColor,
      textSize,
      textWeight
    }, props), {
      children: label
    })) : children
  });
});
const MenuItem = memo((_Z) => {
  var __ = _Z, {
    alignment = {},
    as = "button",
    borderRadius = {},
    className = "",
    component,
    events = {},
    icon: icon2,
    label,
    lineHeight = Sizes.Default,
    shadow = DepthShadow.Surface,
    states = {},
    to,
    value: value2
  } = __, props = __objRest(__, [
    "alignment",
    "as",
    "borderRadius",
    "className",
    "component",
    "events",
    "icon",
    "label",
    "lineHeight",
    "shadow",
    "states",
    "to",
    "value"
  ]);
  var _a2;
  if (to) {
    return /* @__PURE__ */ jsx$2(NavigationLink, __spreadProps(__spreadValues({
      alignment: {
        horizontal: AlignHorizontal.Left
      },
      borderRadius: __spreadValues({
        all: Amount.Least
      }, borderRadius),
      events: {
        mouse: {
          onClick: (e2) => {
            var _a3, _b;
            e2.preventDefault();
            e2.stopPropagation();
            if ((_a3 = events.mouse) == null ? void 0 : _a3.onClick)
              (_b = events.mouse) == null ? void 0 : _b.onClick(e2);
          }
        }
      },
      padding: {
        left: Amount.Less,
        right: Amount.Less
      },
      states: __spreadValues({
        active: {
          background: {
            color: BackgroundColors.Primary
          },
          textColor: TextColors.PrimaryContrast
        },
        focused: {
          textColor: TextColors.PrimaryContrast
        },
        hovered: {
          background: {
            color: BackgroundColors.Primary
          },
          textColor: TextColors.PrimaryContrast
        }
      }, states),
      to
    }, props), {
      children: component != null ? component : /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
        icon: icon2,
        lineHeight
      }, props), {
        children: label
      }))
    }));
  }
  return /* @__PURE__ */ jsx$2(Button$1, __spreadProps(__spreadValues({
    alignment: {
      horizontal: AlignHorizontal.Left
    },
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    form: "null",
    icon: icon2,
    lineHeight,
    events: {
      mouse: {
        onClick: (e2) => {
          var _a3, _b;
          e2.preventDefault();
          e2.stopPropagation();
          if ((_a3 = events.mouse) == null ? void 0 : _a3.onClick)
            (_b = events.mouse) == null ? void 0 : _b.onClick(e2);
        }
      }
    },
    padding: {
      left: Amount.Less,
      right: Amount.Less
    },
    states,
    type: ButtonType.Transparent
  }, props), {
    children: component != null ? component : /* @__PURE__ */ jsx$2(Label, {
      icon: icon2,
      lineHeight,
      textColor: (_a2 = props.textColor) != null ? _a2 : TextColors.Default,
      states,
      children: label
    })
  }));
});
const Menu = memo((_$) => {
  var _aa = _$, {
    as = "nav",
    background = {},
    borderRadius = {},
    className = "",
    menu,
    events = {},
    onItemClick,
    padding = {},
    size = {},
    states = {}
  } = _aa, props = __objRest(_aa, [
    "as",
    "background",
    "borderRadius",
    "className",
    "menu",
    "events",
    "onItemClick",
    "padding",
    "size",
    "states"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    as,
    background: __spreadValues({
      color: BackgroundColors.Lighter
    }, background),
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    className: `${className} menu`,
    size: __spreadValues({
      minHeight: Sizes.Largest
    }, size),
    shadow: DepthShadow.Low
  }, props), {
    children: /* @__PURE__ */ jsx$2(Scrollable, {
      alignment: {
        overflow: Overflow.ScrollVertical
      },
      padding: __spreadValues({
        all: Amount.Least
      }, padding),
      children: menu && menu.map((item, key) => {
        return /* @__PURE__ */ jsxs$1(Container$8, {
          children: [item.title && /* @__PURE__ */ jsx$2(Label, {
            textSize: TextSize.Smaller,
            children: item.title
          }), /* @__PURE__ */ jsx$2(MenuItem, __spreadValues({
            events: {
              mouse: {
                onClick: () => {
                  if (onItemClick) {
                    onItemClick(item);
                  }
                }
              }
            },
            padding: {
              left: Amount.Less,
              right: Amount.Less
            },
            states: __spreadValues({
              active: {
                background: {
                  color: BackgroundColors.Primary
                },
                textColor: TextColors.PrimaryContrast
              },
              focused: {
                textColor: TextColors.PrimaryContrast
              },
              hovered: {
                background: {
                  color: BackgroundColors.Primary
                },
                textColor: TextColors.PrimaryContrast
              }
            }, states),
            textSize: TextSize.Small
          }, item))]
        }, key);
      })
    })
  }));
});
const DropdownControl = memo((_ba) => {
  var _ca = _ba, {
    alignment = {},
    background = {},
    border = {},
    borderRadius = {},
    className = "",
    component,
    cursor = Cursor.Pointer,
    icon: icon2,
    label,
    placeholder = "Select an option",
    states = {},
    size = {},
    textSize = TextSize.Default,
    textColor = TextColors.DropdownMenu
  } = _ca, props = __objRest(_ca, [
    "alignment",
    "background",
    "border",
    "borderRadius",
    "className",
    "component",
    "cursor",
    "icon",
    "label",
    "placeholder",
    "states",
    "size",
    "textSize",
    "textColor"
  ]);
  var _a2, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l, _m, _n, _o, _p;
  return /* @__PURE__ */ jsxs$1(InputContainer, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    }, alignment),
    as: "button",
    background: __spreadValues({
      color: BackgroundColors.DropdownMenu
    }, background),
    borderRadius: Object.assign({}, __spreadValues({
      all: Amount.Least
    }, borderRadius), ((_b = (_a2 = states.state) == null ? void 0 : _a2.dropdown) == null ? void 0 : _b.visible) ? {
      bottomLeft: Amount.None,
      bottomRight: Amount.None
    } : {}),
    border: Object.assign({}, __spreadValues({
      all: {
        color: ((_c = states.state) == null ? void 0 : _c.error) && Array.isArray(states.state.error) && (states == null ? void 0 : states.state.error.length) > 0 ? BorderColors.Error : (_e2 = (_d = border == null ? void 0 : border.all) == null ? void 0 : _d.color) != null ? _e2 : BorderColors.InputControl,
        style: BorderStyle.Solid,
        width: 1
      }
    }, border), ((_g = (_f = states.state) == null ? void 0 : _f.dropdown) == null ? void 0 : _g.visible) ? {
      bottom: {
        color: BorderColors.Transparent,
        style: BorderStyle.None,
        width: 1
      }
    } : {}),
    depth: ((_i2 = (_h = states.state) == null ? void 0 : _h.dropdown) == null ? void 0 : _i2.visible) ? Depth.Highest : Depth.Surface,
    className: `${className} dropdown-control`,
    cursor,
    form: "null",
    shadow: ((_k = (_j = states.state) == null ? void 0 : _j.dropdown) == null ? void 0 : _k.visible) ? DepthShadow.Surface : DepthShadow.Low,
    size: __spreadValues({
      fill: Fill.Horizontal
    }, size),
    states
  }, props), {
    children: [component ? component : /* @__PURE__ */ jsx$2(Label, {
      padding: {
        left: Amount.Less
      },
      selectable: false,
      size: {
        fill: Fill.Horizontal
      },
      textSize,
      textColor: !label && placeholder ? TextColors.InputPlaceholder : textColor,
      textOverflow: TextOverflow.Ellipsis,
      children: (_l = label != null ? label : placeholder) != null ? _l : ""
    }), /* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Center,
        vertical: AlignVertical.Center
      },
      border: {
        left: {
          color: BorderColors.Default,
          style: BorderStyle.Solid,
          width: 1
        }
      },
      className: "down-arrow",
      padding: {
        left: Amount.Least,
        right: Amount.Least
      },
      size: {
        height: `calc(${(_m = size == null ? void 0 : size.height) != null ? _m : Sizes.Default} / 5 * 3)`,
        width: (_n = size == null ? void 0 : size.height) != null ? _n : Sizes.Default
      },
      children: /* @__PURE__ */ jsx$2(Icon, {
        color: ((_o = states.state) == null ? void 0 : _o.visible) ? TextColors.Lightest : TextColors.Lighter,
        name: BasicIcons.CaretDownArrow,
        className: ((_p = states.state) == null ? void 0 : _p.visible) ? "up" : "down",
        size: {
          height: Sizes.Smallest,
          width: Sizes.Smallest
        }
      })
    })]
  }));
});
const DropdownPanel = memo((_da) => {
  var _ea = _da, {
    background = {},
    border = {},
    borderRadius = {},
    children,
    className = "",
    position = {},
    size = {},
    states = {}
  } = _ea, props = __objRest(_ea, [
    "background",
    "border",
    "borderRadius",
    "children",
    "className",
    "position",
    "size",
    "states"
  ]);
  var _a2, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l, _m, _n;
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.DropdownMenu
    }, background),
    borderRadius: Object.assign(__spreadValues({
      all: Amount.Least
    }, borderRadius), ((_b = (_a2 = states.state) == null ? void 0 : _a2.dropdown) == null ? void 0 : _b.visible) ? {
      topLeft: Amount.None,
      topRight: Amount.None
    } : {}),
    border: Object.assign({}, __spreadValues({
      all: {
        color: ((_c = states.state) == null ? void 0 : _c.error) && Array.isArray(states.state.error) && (states == null ? void 0 : states.state.error.length) > 0 ? BorderColors.Error : (_e2 = (_d = border == null ? void 0 : border.all) == null ? void 0 : _d.color) != null ? _e2 : BorderColors.InputControl,
        style: BorderStyle.Solid,
        width: 1
      }
    }, border), ((_g = (_f = states.state) == null ? void 0 : _f.dropdown) == null ? void 0 : _g.visible) ? {
      top: {
        color: BorderColors.Transparent,
        style: BorderStyle.None,
        width: 1
      }
    } : {}),
    className: `${className} dropdown-panel`,
    depth: ((_i2 = (_h = states.state) == null ? void 0 : _h.dropdown) == null ? void 0 : _i2.visible) ? Depth.Higher : Depth.Surface,
    position: __spreadValues({
      behavior: PositionBehavior.Absolute,
      left: 0,
      right: 0,
      top: (_j = size == null ? void 0 : size.height) != null ? _j : Sizes.Default
    }, position),
    shadow: ((_l = (_k = states.state) == null ? void 0 : _k.dropdown) == null ? void 0 : _l.visible) ? DepthShadow.Higher : DepthShadow.Surface,
    size: __spreadValues({
      minHeight: Sizes.Default,
      maxHeight: 300
    }, size),
    states,
    visibility: {
      hidden: !((_n = (_m = states.state) == null ? void 0 : _m.dropdown) == null ? void 0 : _n.visible)
    }
  }, props), {
    children
  }));
});
const DropdownInput = memo((_fa) => {
  var _ga = _fa, {
    borderRadius = {},
    className = "",
    defaultValue,
    events = {},
    label,
    menu,
    name: name2,
    padding = {},
    placeholder,
    size = {},
    states = {},
    validation
  } = _ga, props = __objRest(_ga, [
    "borderRadius",
    "className",
    "defaultValue",
    "events",
    "label",
    "menu",
    "name",
    "padding",
    "placeholder",
    "size",
    "states",
    "validation"
  ]);
  var _a2, _b, _c;
  const [focused, setFocused] = useState(true);
  const [menuVisible, setMenuVisible] = useState((_c = (_b = (_a2 = states == null ? void 0 : states.state) == null ? void 0 : _a2.dropdown) == null ? void 0 : _b.visible) != null ? _c : false);
  const menuVisibleRef = useRef(menuVisible);
  const [problems, setProblems] = useState([]);
  const [item, setItem] = useState(menu == null ? void 0 : menu.find((i2) => i2.value === defaultValue));
  const [valueChanged, setValueChanged] = useState(false);
  useEffect(() => {
    var _a3, _b2;
    if (valueChanged) {
      if (validation && (validation == null ? void 0 : validation.conditions)) {
        const probs = Si$1(item, validation.conditions);
        setProblems(probs);
        if ((_a3 = events.input) == null ? void 0 : _a3.onValueChange)
          events.input.onValueChange({
            validation: {
              problems: probs,
              validated: probs.length === 0
            },
            value: item == null ? void 0 : item.value
          });
      } else {
        if ((_b2 = events.input) == null ? void 0 : _b2.onValueChange)
          events.input.onValueChange({
            value: item == null ? void 0 : item.value
          });
      }
    }
  }, [item]);
  useEffect(() => {
    var _a3, _b2;
    setItem((_b2 = (_a3 = menu == null ? void 0 : menu.find((i2) => i2.value === defaultValue)) != null ? _a3 : item) != null ? _b2 : void 0);
  }, [defaultValue]);
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [(label || problems.length > 0) && /* @__PURE__ */ jsx$2(InputLabel, {
      states: {
        state: {
          error: problems
        }
      },
      children: label
    }), /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
      borderRadius: Object.assign({}, __spreadValues({
        all: Amount.Least
      }, borderRadius), menuVisible ? {
        bottomLeft: Amount.None,
        bottomRight: Amount.None
      } : {}),
      className: `${className} dropdown-input`,
      depth: menuVisible ? Depth.Higher : Depth.Surface,
      events: {
        mouse: {
          onMouseLeave: () => {
            menuVisibleRef.current = false;
            setMenuVisible(false);
          }
        }
      },
      size: __spreadValues({
        height: Sizes.Default
      }, size),
      shadow: menuVisible ? DepthShadow.Higher : DepthShadow.Surface
    }, props), {
      children: [/* @__PURE__ */ jsx$2(DropdownControl, {
        component: item == null ? void 0 : item.component,
        events: {
          focus: {
            onBlur: () => {
              setFocused(false);
            },
            onFocus: () => setFocused(true)
          },
          mouse: {
            onClick: () => {
              menuVisibleRef.current = !menuVisibleRef.current;
              setMenuVisible(menuVisibleRef.current);
            }
          }
        },
        icon: item == null ? void 0 : item.icon,
        label: item == null ? void 0 : item.label,
        name: name2,
        placeholder,
        states: __spreadValues({
          state: {
            error: problems,
            dropdown: {
              visible: menuVisibleRef.current
            },
            focused
          }
        }, states),
        size: __spreadValues({
          height: Sizes.Default
        }, size)
      }), /* @__PURE__ */ jsx$2(DropdownPanel, __spreadProps(__spreadValues({
        padding: __spreadValues({
          all: Amount.Least
        }, padding),
        position: {
          top: `calc(${Sizes.Default} - 3px)`
        },
        states: __spreadValues({
          state: {
            focused,
            dropdown: {
              visible: menuVisibleRef.current
            }
          }
        }, states)
      }, props), {
        children: /* @__PURE__ */ jsx$2(Menu, {
          menu,
          onItemClick: (i2) => {
            setValueChanged(true);
            setItem(i2);
            menuVisibleRef.current = false;
            setMenuVisible(false);
          },
          padding
        })
      }))]
    }))]
  });
});
const CountryInput = memo((_ha) => {
  var _ia = _ha, {
    defaultValue = k$3.UnitedStates,
    menu = Object.entries(i18nIsoCountries.getAlpha2Codes()).map(([alpha2, alpha3]) => ({
      icon: {
        component: /* @__PURE__ */ jsx$2(ReactCountryFlag, {
          svg: true,
          countryCode: alpha2,
          style: {
            height: Sizes.Smaller,
            width: "auto"
          }
        })
      },
      label: i18nIsoCountries.getName(alpha2, "en", {
        select: "official"
      }),
      value: alpha2
    })),
    name: name2 = "country",
    placeholder = "Select a country"
  } = _ia, props = __objRest(_ia, [
    "defaultValue",
    "menu",
    "name",
    "placeholder"
  ]);
  return /* @__PURE__ */ jsx$2(DropdownInput, __spreadValues({
    defaultValue,
    menu,
    name: name2,
    placeholder
  }, props));
});
const CurrencyInput = memo((_ja) => {
  var _ka = _ja, {
    defaultValue = D$2.UnitedStatesDollar,
    name: name2 = "language",
    placeholder = "Select a currency"
  } = _ka, props = __objRest(_ka, [
    "defaultValue",
    "name",
    "placeholder"
  ]);
  const currencies = [{
    icon: {
      component: /* @__PURE__ */ jsx$2(ReactCountryFlag, {
        svg: true,
        countryCode: k$3.UnitedStates,
        style: {
          height: Sizes.Smaller,
          width: "auto"
        }
      })
    },
    label: "US Dollar (USD)",
    value: D$2.UnitedStatesDollar
  }];
  return /* @__PURE__ */ jsx$2(DropdownInput, __spreadValues({
    defaultValue,
    menu: currencies,
    name: name2,
    placeholder
  }, props));
});
const LanguageInput = memo((_la) => {
  var _ma = _la, {
    defaultValue = G$3.English,
    name: name2,
    placeholder = "Select a language"
  } = _ma, props = __objRest(_ma, [
    "defaultValue",
    "name",
    "placeholder"
  ]);
  const languages = [{
    icon: {
      component: /* @__PURE__ */ jsx$2(ReactCountryFlag, {
        svg: true,
        countryCode: k$3.UnitedStates,
        style: {
          height: Sizes.Smaller,
          width: "auto"
        }
      })
    },
    label: "English (US)",
    value: G$3.English
  }];
  return /* @__PURE__ */ jsx$2(DropdownInput, __spreadValues({
    defaultValue,
    menu: languages,
    name: name2,
    placeholder
  }, props));
});
var propTypes = { exports: {} };
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
var ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim2(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
    err.name = "Invariant Violation";
    throw err;
  }
  shim2.isRequired = shim2;
  function getShim() {
    return shim2;
  }
  var ReactPropTypes = {
    array: shim2,
    bigint: shim2,
    bool: shim2,
    func: shim2,
    number: shim2,
    object: shim2,
    string: shim2,
    symbol: shim2,
    any: shim2,
    arrayOf: getShim,
    element: shim2,
    elementType: shim2,
    instanceOf: getShim,
    node: shim2,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
{
  propTypes.exports = factoryWithThrowingShims();
}
var PropTypes = propTypes.exports;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var __assign$1 = function() {
  __assign$1 = Object.assign || function __assign2(t2) {
    for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
      s2 = arguments[i2];
      for (var p2 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p2))
          t2[p2] = s2[p2];
    }
    return t2;
  };
  return __assign$1.apply(this, arguments);
};
function __awaiter(thisArg, _arguments, P2, generator) {
  function adopt(value2) {
    return value2 instanceof P2 ? value2 : new P2(function(resolve) {
      resolve(value2);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value2) {
      try {
        step(generator.next(value2));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value2) {
      try {
        step(generator["throw"](value2));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t2[0] & 1)
      throw t2[1];
    return t2[1];
  }, trys: [], ops: [] }, f2, y2, t2, g2;
  return g2 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g2[Symbol.iterator] = function() {
    return this;
  }), g2;
  function verb(n2) {
    return function(v2) {
      return step([n2, v2]);
    };
  }
  function step(op) {
    if (f2)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f2 = 1, y2 && (t2 = op[0] & 2 ? y2["return"] : op[0] ? y2["throw"] || ((t2 = y2["return"]) && t2.call(y2), 0) : y2.next) && !(t2 = t2.call(y2, op[1])).done)
          return t2;
        if (y2 = 0, t2)
          op = [op[0] & 2, t2.value];
        switch (op[0]) {
          case 0:
          case 1:
            t2 = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y2 = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t2 = _.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t2[1]) {
              _.label = t2[1];
              t2 = op;
              break;
            }
            if (t2 && _.label < t2[2]) {
              _.label = t2[2];
              _.ops.push(op);
              break;
            }
            if (t2[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e2) {
        op = [6, e2];
        y2 = 0;
      } finally {
        f2 = t2 = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __read(o2, n2) {
  var m2 = typeof Symbol === "function" && o2[Symbol.iterator];
  if (!m2)
    return o2;
  var i2 = m2.call(o2), r2, ar = [], e2;
  try {
    while ((n2 === void 0 || n2-- > 0) && !(r2 = i2.next()).done)
      ar.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i2["return"]))
        m2.call(i2);
    } finally {
      if (e2)
        throw e2.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i2 = 0; i2 < arguments.length; i2++)
    ar = ar.concat(__read(arguments[i2]));
  return ar;
}
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function toFileWithPath(file, path) {
  var f2 = withMimeType(file);
  if (typeof f2.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f2, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f2;
}
function withMimeType(file) {
  var name2 = file.name;
  var hasExtension = name2 && name2.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name2.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}
var FILES_TO_IGNORE = [
  ".DS_Store",
  "Thumbs.db"
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      if (isObject$6(evt) && isDataTransfer(evt)) {
        return [2, getDataTransferFiles(evt.dataTransfer, evt.type)];
      } else if (isChangeEvt(evt)) {
        return [2, getInputFiles(evt)];
      } else if (Array.isArray(evt) && evt.every(function(item) {
        return "getFile" in item && typeof item.getFile === "function";
      })) {
        return [2, getFsHandleFiles(evt)];
      }
      return [2, []];
    });
  });
}
function isDataTransfer(value2) {
  return isObject$6(value2.dataTransfer);
}
function isChangeEvt(value2) {
  return isObject$6(value2) && isObject$6(value2.target);
}
function isObject$6(v2) {
  return typeof v2 === "object" && v2 !== null;
}
function getInputFiles(evt) {
  return fromList(evt.target.files).map(function(file) {
    return toFileWithPath(file);
  });
}
function getFsHandleFiles(handles) {
  return __awaiter(this, void 0, void 0, function() {
    var files;
    return __generator(this, function(_a2) {
      switch (_a2.label) {
        case 0:
          return [4, Promise.all(handles.map(function(h2) {
            return h2.getFile();
          }))];
        case 1:
          files = _a2.sent();
          return [2, files.map(function(file) {
            return toFileWithPath(file);
          })];
      }
    });
  });
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a2) {
      switch (_a2.label) {
        case 0:
          if (dt === null) {
            return [2, []];
          }
          if (!dt.items)
            return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a2.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  if (items === null) {
    return [];
  }
  var files = [];
  for (var i2 = 0; i2 < items.length; i2++) {
    var file = items[i2];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject(item + " is not a File");
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch2) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a2) {
            switch (_a2.label) {
              case 0:
                if (!!batch2.length)
                  return [3, 5];
                _a2.label = 1;
              case 1:
                _a2.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a2.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a2.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch2.map(fromEntry));
                entries.push(items);
                readEntries();
                _a2.label = 6;
              case 6:
                return [2];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a2) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}
var _default$1 = function(file, acceptedFiles) {
  if (file && acceptedFiles) {
    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
    var fileName = file.name || "";
    var mimeType = (file.type || "").toLowerCase();
    var baseMimeType = mimeType.replace(/\/.*$/, "");
    return acceptedFilesArray.some(function(type) {
      var validType = type.trim().toLowerCase();
      if (validType.charAt(0) === ".") {
        return fileName.toLowerCase().endsWith(validType);
      } else if (validType.endsWith("/*")) {
        return baseMimeType === validType.replace(/\/.*$/, "");
      }
      return mimeType === validType;
    });
  }
  return true;
};
function ownKeys$4(object2, enumerableOnly) {
  var keys2 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread$3(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    i2 % 2 ? ownKeys$4(Object(source), true).forEach(function(key) {
      _defineProperty$3(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty$3(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _slicedToArray$1(arr, i2) {
  return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i2) || _unsupportedIterableToArray$2(arr, i2) || _nonIterableRest$1();
}
function _nonIterableRest$1() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$2(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$2(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$2(o2, minLen);
}
function _arrayLikeToArray$2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
    arr2[i2] = arr[i2];
  }
  return arr2;
}
function _iterableToArrayLimit$1(arr, i2) {
  var _i2 = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i2 == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e2;
  try {
    for (_i2 = _i2.call(arr); !(_n = (_s = _i2.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i2 && _arr.length === i2)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i2["return"] != null)
        _i2["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles$1(arr) {
  if (Array.isArray(arr))
    return arr;
}
var FILE_INVALID_TYPE = "file-invalid-type";
var FILE_TOO_LARGE = "file-too-large";
var FILE_TOO_SMALL = "file-too-small";
var TOO_MANY_FILES = "too-many-files";
var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2(accept) {
  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
  var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(", ")) : accept;
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(messageSuffix)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " ").concat(maxSize === 1 ? "byte" : "bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " ").concat(minSize === 1 ? "byte" : "bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: "Too many files"
};
function fileAccepted(file, accept) {
  var isAcceptable = file.type === "application/x-moz-file" || _default$1(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize)
        return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize)
        return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize)
      return [false, getTooSmallRejectionErr(minSize)];
    else if (isDefined(maxSize) && file.size > maxSize)
      return [false, getTooLargeRejectionErr(maxSize)];
  }
  return [true, null];
}
function isDefined(value2) {
  return value2 !== void 0 && value2 !== null;
}
function allFilesAccepted(_ref) {
  var files = _ref.files, accept = _ref.accept, minSize = _ref.minSize, maxSize = _ref.maxSize, multiple = _ref.multiple, maxFiles = _ref.maxFiles;
  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }
  return files.every(function(file) {
    var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray$1(_fileAccepted, 1), accepted = _fileAccepted2[0];
    var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray$1(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
    return accepted && sizeMatch;
  });
}
function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === "function") {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== "undefined") {
    return event.cancelBubble;
  }
  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(event) {
  event.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn2) {
      if (!isPropagationStopped(event) && fn2) {
        fn2.apply(void 0, [event].concat(args));
      }
      return isPropagationStopped(event);
    });
  };
}
function canUseFileSystemAccessAPI() {
  return "showOpenFilePicker" in window;
}
function filePickerOptionsTypes(accept) {
  accept = typeof accept === "string" ? accept.split(",") : accept;
  return [{
    description: "everything",
    accept: Array.isArray(accept) ? accept.filter(function(item) {
      return item === "audio/*" || item === "video/*" || item === "image/*" || item === "text/*" || /\w+\/[-+.\w]+/g.test(item);
    }).reduce(function(a, b2) {
      return _objectSpread$3(_objectSpread$3({}, a), {}, _defineProperty$3({}, b2, []));
    }, {}) : {}
  }];
}
var _excluded$1 = ["children"], _excluded2 = ["open"], _excluded3 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"], _excluded4 = ["refKey", "onChange", "onClick"];
function _toConsumableArray$1(arr) {
  return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread$1();
}
function _nonIterableSpread$1() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray$1(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles$1(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$1(arr);
}
function _slicedToArray(arr, i2) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i2) || _unsupportedIterableToArray$1(arr, i2) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$1(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray$1(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$1(o2, minLen);
}
function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
    arr2[i2] = arr[i2];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i2) {
  var _i2 = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i2 == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e2;
  try {
    for (_i2 = _i2.call(arr); !(_n = (_s = _i2.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i2 && _arr.length === i2)
        break;
    }
  } catch (err) {
    _d = true;
    _e2 = err;
  } finally {
    try {
      if (!_n && _i2["return"] != null)
        _i2["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys$3(object2, enumerableOnly) {
  var keys2 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread$2(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    i2 % 2 ? ownKeys$3(Object(source), true).forEach(function(key) {
      _defineProperty$2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty$2(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _objectWithoutProperties$1(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$1(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Dropzone = /* @__PURE__ */ forwardRef(function(_ref, ref) {
  var children = _ref.children, params = _objectWithoutProperties$1(_ref, _excluded$1);
  var _useDropzone = useDropzone(params), open = _useDropzone.open, props = _objectWithoutProperties$1(_useDropzone, _excluded2);
  useImperativeHandle(ref, function() {
    return {
      open
    };
  }, [open]);
  return /* @__PURE__ */ jsx$2(Fragment, {
    children: children(_objectSpread$2(_objectSpread$2({}, props), {}, {
      open
    }))
  });
});
Dropzone.displayName = "Dropzone";
var defaultProps = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false,
  validator: null,
  useFsAccessApi: false
};
Dropzone.defaultProps = defaultProps;
Dropzone.propTypes = {
  children: PropTypes.func,
  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),
  multiple: PropTypes.bool,
  preventDropOnDocument: PropTypes.bool,
  noClick: PropTypes.bool,
  noKeyboard: PropTypes.bool,
  noDrag: PropTypes.bool,
  noDragEventsBubbling: PropTypes.bool,
  minSize: PropTypes.number,
  maxSize: PropTypes.number,
  maxFiles: PropTypes.number,
  disabled: PropTypes.bool,
  getFilesFromEvent: PropTypes.func,
  onFileDialogCancel: PropTypes.func,
  onFileDialogOpen: PropTypes.func,
  useFsAccessApi: PropTypes.bool,
  onDragEnter: PropTypes.func,
  onDragLeave: PropTypes.func,
  onDragOver: PropTypes.func,
  onDrop: PropTypes.func,
  onDropAccepted: PropTypes.func,
  onDropRejected: PropTypes.func,
  validator: PropTypes.func
};
var initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  draggedFiles: [],
  acceptedFiles: [],
  fileRejections: []
};
function useDropzone() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _defaultProps$options = _objectSpread$2(_objectSpread$2({}, defaultProps), options), accept = _defaultProps$options.accept, disabled = _defaultProps$options.disabled, getFilesFromEvent = _defaultProps$options.getFilesFromEvent, maxSize = _defaultProps$options.maxSize, minSize = _defaultProps$options.minSize, multiple = _defaultProps$options.multiple, maxFiles = _defaultProps$options.maxFiles, onDragEnter = _defaultProps$options.onDragEnter, onDragLeave = _defaultProps$options.onDragLeave, onDragOver = _defaultProps$options.onDragOver, onDrop = _defaultProps$options.onDrop, onDropAccepted = _defaultProps$options.onDropAccepted, onDropRejected = _defaultProps$options.onDropRejected, onFileDialogCancel = _defaultProps$options.onFileDialogCancel, onFileDialogOpen = _defaultProps$options.onFileDialogOpen, useFsAccessApi = _defaultProps$options.useFsAccessApi, preventDropOnDocument = _defaultProps$options.preventDropOnDocument, noClick = _defaultProps$options.noClick, noKeyboard = _defaultProps$options.noKeyboard, noDrag = _defaultProps$options.noDrag, noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling, validator = _defaultProps$options.validator;
  var onFileDialogOpenCb = useMemo(function() {
    return typeof onFileDialogOpen === "function" ? onFileDialogOpen : noop$3;
  }, [onFileDialogOpen]);
  var onFileDialogCancelCb = useMemo(function() {
    return typeof onFileDialogCancel === "function" ? onFileDialogCancel : noop$3;
  }, [onFileDialogCancel]);
  var rootRef = useRef(null);
  var inputRef = useRef(null);
  var _useReducer = useReducer(reducer, initialState), _useReducer2 = _slicedToArray(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
  var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive, draggedFiles = state.draggedFiles;
  var onWindowFocus = function onWindowFocus2() {
    if (isFileDialogActive) {
      setTimeout(function() {
        if (inputRef.current) {
          var files = inputRef.current.files;
          if (!files.length) {
            dispatch({
              type: "closeDialog"
            });
            onFileDialogCancelCb();
          }
        }
      }, 300);
    }
  };
  useEffect(function() {
    if (useFsAccessApi && canUseFileSystemAccessAPI()) {
      return function() {
      };
    }
    window.addEventListener("focus", onWindowFocus, false);
    return function() {
      window.removeEventListener("focus", onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, useFsAccessApi]);
  var dragTargetsRef = useRef([]);
  var onDocumentDrop = function onDocumentDrop2(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  useEffect(function() {
    if (preventDropOnDocument) {
      document.addEventListener("dragover", onDocumentDragOver, false);
      document.addEventListener("drop", onDocumentDrop, false);
    }
    return function() {
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  var onDragEnterCb = useCallback(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [].concat(_toConsumableArray$1(dragTargetsRef.current), [event.target]);
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(draggedFiles2) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        dispatch({
          draggedFiles: draggedFiles2,
          isDragActive: true,
          type: "setDraggedFiles"
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      });
    }
  }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);
  var onDragOverCb = useCallback(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var hasFiles = isEvtWithFiles(event);
    if (hasFiles && event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = "copy";
      } catch (_unused) {
      }
    }
    if (hasFiles && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = useCallback(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var targets = dragTargetsRef.current.filter(function(target) {
      return rootRef.current && rootRef.current.contains(target);
    });
    var targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      isDragActive: false,
      type: "setDraggedFiles",
      draggedFiles: []
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var setFiles = useCallback(function(files, event) {
    var acceptedFiles = [];
    var fileRejections = [];
    files.forEach(function(file) {
      var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
      var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
      var customErrors = validator ? validator(file) : null;
      if (accepted && sizeMatch && !customErrors) {
        acceptedFiles.push(file);
      } else {
        var errors = [acceptError, sizeError];
        if (customErrors) {
          errors = errors.concat(customErrors);
        }
        fileRejections.push({
          file,
          errors: errors.filter(function(e2) {
            return e2;
          })
        });
      }
    });
    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
      acceptedFiles.forEach(function(file) {
        fileRejections.push({
          file,
          errors: [TOO_MANY_FILES_REJECTION]
        });
      });
      acceptedFiles.splice(0);
    }
    dispatch({
      acceptedFiles,
      fileRejections,
      type: "setFiles"
    });
    if (onDrop) {
      onDrop(acceptedFiles, fileRejections, event);
    }
    if (fileRejections.length > 0 && onDropRejected) {
      onDropRejected(fileRejections, event);
    }
    if (acceptedFiles.length > 0 && onDropAccepted) {
      onDropAccepted(acceptedFiles, event);
    }
  }, [dispatch, multiple, accept, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);
  var onDropCb = useCallback(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        setFiles(files, event);
      });
    }
    dispatch({
      type: "reset"
    });
  }, [getFilesFromEvent, setFiles, noDragEventsBubbling]);
  var openFileDialog = useCallback(function() {
    if (useFsAccessApi && canUseFileSystemAccessAPI()) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      var opts = {
        multiple,
        types: filePickerOptionsTypes(accept)
      };
      window.showOpenFilePicker(opts).then(function(handles) {
        return getFilesFromEvent(handles);
      }).then(function(files) {
        return setFiles(files, null);
      }).catch(function(e2) {
        return onFileDialogCancelCb(e2);
      }).finally(function() {
        return dispatch({
          type: "closeDialog"
        });
      });
      return;
    }
    if (inputRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, accept, multiple]);
  var onKeyDownCb = useCallback(function(event) {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, inputRef, openFileDialog]);
  var onFocusCb = useCallback(function() {
    dispatch({
      type: "focus"
    });
  }, []);
  var onBlurCb = useCallback(function() {
    dispatch({
      type: "blur"
    });
  }, []);
  var onClickCb = useCallback(function() {
    if (noClick) {
      return;
    }
    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [inputRef, noClick, openFileDialog]);
  var composeHandler = function composeHandler2(fn2) {
    return disabled ? null : fn2;
  };
  var composeKeyboardHandler = function composeKeyboardHandler2(fn2) {
    return noKeyboard ? null : composeHandler(fn2);
  };
  var composeDragHandler = function composeDragHandler2(fn2) {
    return noDrag ? null : composeHandler(fn2);
  };
  var stopPropagation = function stopPropagation2(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };
  var getRootProps = useMemo(function() {
    return function() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, role = _ref2.role, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest2 = _objectWithoutProperties$1(_ref2, _excluded3);
      return _objectSpread$2(_objectSpread$2(_defineProperty$2({
        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter2, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers(onDragOver2, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave2, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers(onDrop2, onDropCb)),
        role: typeof role === "string" && role !== "" ? role : "button"
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest2);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = useCallback(function(event) {
    event.stopPropagation();
  }, []);
  var getInputProps = useMemo(function() {
    return function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest2 = _objectWithoutProperties$1(_ref3, _excluded4);
      var inputProps = _defineProperty$2({
        accept,
        multiple,
        type: "file",
        style: {
          display: "none"
        },
        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
        autoComplete: "off",
        tabIndex: -1
      }, refKey, inputRef);
      return _objectSpread$2(_objectSpread$2({}, inputProps), rest2);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  var fileCount = draggedFiles.length;
  var isDragAccept = fileCount > 0 && allFilesAccepted({
    files: draggedFiles,
    accept,
    minSize,
    maxSize,
    multiple,
    maxFiles
  });
  var isDragReject = fileCount > 0 && !isDragAccept;
  return _objectSpread$2(_objectSpread$2({}, state), {}, {
    isDragAccept,
    isDragReject,
    isFocused: isFocused && !disabled,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    open: composeHandler(openFileDialog)
  });
}
function reducer(state, action) {
  switch (action.type) {
    case "focus":
      return _objectSpread$2(_objectSpread$2({}, state), {}, {
        isFocused: true
      });
    case "blur":
      return _objectSpread$2(_objectSpread$2({}, state), {}, {
        isFocused: false
      });
    case "openDialog":
      return _objectSpread$2(_objectSpread$2({}, initialState), {}, {
        isFileDialogActive: true
      });
    case "closeDialog":
      return _objectSpread$2(_objectSpread$2({}, state), {}, {
        isFileDialogActive: false
      });
    case "setDraggedFiles":
      var isDragActive = action.isDragActive, draggedFiles = action.draggedFiles;
      return _objectSpread$2(_objectSpread$2({}, state), {}, {
        draggedFiles,
        isDragActive
      });
    case "setFiles":
      return _objectSpread$2(_objectSpread$2({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections
      });
    case "reset":
      return _objectSpread$2({}, initialState);
    default:
      return state;
  }
}
function noop$3() {
}
const CloseButton = memo((_na) => {
  var _oa = _na, {
    background = {},
    icon: icon2 = {},
    className = "",
    size = {}
  } = _oa, props = __objRest(_oa, [
    "background",
    "icon",
    "className",
    "size"
  ]);
  return /* @__PURE__ */ jsx$2(Button$1, __spreadProps(__spreadValues({
    alignment: {
      horizontal: AlignHorizontal.Center,
      vertical: AlignVertical.Center
    },
    background: __spreadValues({
      color: BackgroundColors.CloseButton
    }, background),
    borderRadius: {
      all: Amount.All
    },
    className: `${className} close-button`,
    depth: Depth.Higher,
    form: "null",
    icon: __spreadValues({
      name: BasicIcons.Close,
      size: {
        height: Sizes.Default,
        width: Sizes.Default
      }
    }, icon2),
    size: __spreadValues({
      height: Sizes.Default,
      width: Sizes.Default
    }, size),
    states: {
      hovered: {
        background: {
          color: BackgroundColors.Primary
        },
        icon: {
          color: ForegroundColors.PrimaryContrast
        }
      }
    }
  }, props), {
    children: /* @__PURE__ */ jsx$2(Icon, __spreadValues({
      color: ForegroundColors.CloseButton,
      name: BasicIcons.Close,
      size: {
        height: Sizes.Smaller,
        width: Sizes.Smaller
      },
      states: {}
    }, icon2))
  }));
});
const ImageInput = memo((_pa) => {
  var _qa = _pa, {
    background = {},
    border = {},
    borderRadius = {},
    button = {},
    defaultValue = [],
    events = {},
    icon: icon2 = {},
    label,
    maxImages = 1,
    name: name2 = "images",
    padding = {}
  } = _qa, props = __objRest(_qa, [
    "background",
    "border",
    "borderRadius",
    "button",
    "defaultValue",
    "events",
    "icon",
    "label",
    "maxImages",
    "name",
    "padding"
  ]);
  var _a2, _b, _c, _d;
  const [images, setImages] = useState(defaultValue);
  const [errorMessage, setErrorMessage] = useState();
  const [previewImages, setPreviewImages] = useState([]);
  const [problems, setProblems] = useState([]);
  const validateFileType = (file) => {
    const validTypes2 = ["image/jpeg", "image/jpg", "image/png", "image/gif", "image/x-icon"];
    if (!validTypes2.includes(file.type)) {
      return false;
    }
    return true;
  };
  const validateNotAdded = (file) => {
    const added = previewImages && previewImages.some((f2) => {
      return f2.hasOwnProperty("path") && f2.path === file.name;
    });
    if (added) {
      setErrorMessage("File already added");
      return {
        code: "image-already-added",
        message: `Image already added`
      };
    }
    setErrorMessage(null);
    return null;
  };
  const onDrop = useCallback((files) => {
    for (const file of files) {
      if (validateFileType(file)) {
        if (maxImages > 1) {
          setImages((prevArray) => [...prevArray.slice(-maxImages + 1), file]);
        } else {
          setImages([file]);
        }
      } else {
        file.invalid = true;
        setErrorMessage("File type not permitted");
      }
    }
  }, []);
  const {
    getRootProps,
    getInputProps,
    isDragActive,
    open
  } = useDropzone({
    maxFiles: maxImages,
    noClick: true,
    onDrop,
    validator: validateNotAdded
  });
  useEffect(() => {
    if (!images || images.length === 0) {
      setPreviewImages([]);
      return;
    }
    const objectUrls = images.map((image) => {
      if ("size" in image && image.size > 0) {
        return __spreadValues({
          url: URL.createObjectURL(image)
        }, image);
      }
      return image;
    });
    setPreviewImages(objectUrls);
    return () => {
      for (const image of objectUrls) {
        if ("url" in image && image.url) {
          URL.revokeObjectURL(image.url);
        }
      }
    };
  }, [images]);
  useEffect(() => {
    var _a3, _b2;
    if ((_a3 = events == null ? void 0 : events.input) == null ? void 0 : _a3.onValueChange)
      (_b2 = events.input) == null ? void 0 : _b2.onValueChange({
        value: images
      });
  }, [previewImages]);
  const dragLabel = `Drag ${maxImages > 1 ? "images" : "an image"} here...`;
  const buttonLabel = `Browse files`;
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [(label || problems.length > 0) && /* @__PURE__ */ jsxs$1(InputLabel, {
      states: {
        state: {
          error: problems
        }
      },
      children: [label, maxImages > 1 && ` (${previewImages.length} of ${maxImages})`]
    }), /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues(__spreadValues({
      alignment: {
        horizontal: AlignHorizontal.Center,
        vertical: AlignVertical.Center
      },
      background: __spreadValues({
        color: isDragActive ? BackgroundColors.Darker : BackgroundColors.InputControl
      }, background),
      border: __spreadValues({
        all: {
          color: problems && Array.isArray(problems) && problems.length > 0 ? BorderColors.Error : (_b = (_a2 = border.all) == null ? void 0 : _a2.color) != null ? _b : BorderColors.Light,
          style: BorderStyle.Solid,
          width: 1
        }
      }, border),
      borderRadius: __spreadValues({
        all: Amount.Least
      }, borderRadius),
      padding: __spreadValues({
        all: Amount.Default
      }, padding),
      shadow: DepthShadow.Low
    }, props), getRootProps()), {
      children: /* @__PURE__ */ jsxs$1(Container$8, {
        alignment: {
          horizontal: AlignHorizontal.Center,
          vertical: AlignVertical.Center
        },
        events: {
          mouse: {
            disabled: isDragActive
          }
        },
        padding: {
          bottom: Amount.Default,
          left: Amount.Default,
          right: Amount.Default,
          top: Amount.Least
        },
        children: [/* @__PURE__ */ jsx$2("input", __spreadValues({
          name: name2
        }, getInputProps())), errorMessage && /* @__PURE__ */ jsx$2(ErrorLabel, {
          children: errorMessage
        }), previewImages && previewImages.length > 0 ? /* @__PURE__ */ jsx$2(Container$8, {
          alignment: {
            horizontal: AlignHorizontal.Center,
            orientation: Orientation.Horizontal,
            vertical: AlignVertical.Stretch
          },
          background: {
            color: BackgroundColors.Lightest
          },
          borderRadius: {
            all: Amount.Least
          },
          margin: {
            bottom: Amount.Less
          },
          padding: {
            all: Amount.Least
          },
          visibility: {
            opacity: isDragActive ? 50 : 100
          },
          children: previewImages.map((image, index) => /* @__PURE__ */ jsxs$1(Container$8, {
            margin: {
              all: Amount.Least
            },
            children: [/* @__PURE__ */ jsx$2(CloseButton, {
              events: {
                mouse: {
                  onClick: () => setImages((files) => files == null ? void 0 : files.filter((e2, i2) => i2 !== index))
                }
              },
              position: {
                behavior: PositionBehavior.Absolute,
                right: -7,
                top: -7
              }
            }), /* @__PURE__ */ jsx$2(Image, {
              alt: "preview",
              borderRadius: {
                all: Amount.Least
              },
              size: {
                height: 70,
                width: 70
              },
              url: image.url
            }, index)]
          }, index))
        }) : /* @__PURE__ */ jsx$2(Icon, __spreadValues({
          margin: {
            bottom: Amount.Less
          },
          name: (_c = icon2 == null ? void 0 : icon2.name) != null ? _c : BasicIcons.FileUpload,
          size: {
            height: Sizes.Default,
            width: Sizes.Default
          }
        }, icon2)), /* @__PURE__ */ jsxs$1(Container$8, {
          alignment: {
            vertical: AlignVertical.Center
          },
          children: [/* @__PURE__ */ jsx$2(Label, {
            margin: {
              bottom: Amount.Least
            },
            textSize: TextSize.Small,
            children: dragLabel
          }), button && /* @__PURE__ */ jsx$2(Button$1, __spreadProps(__spreadValues({
            events: {
              mouse: {
                onClick: open
              }
            },
            form: "null",
            lineHeight: Sizes.Small,
            textSize: TextSize.Small,
            type: (_d = button.type) != null ? _d : ButtonType.Primary
          }, button), {
            children: buttonLabel
          }))]
        })]
      })
    }))]
  });
});
const NumberInput = memo((_ra) => {
  var _sa = _ra, {
    className = ""
  } = _sa, props = __objRest(_sa, [
    "className"
  ]);
  return /* @__PURE__ */ jsx$2(InputContainer, __spreadValues({
    className: `${className} number-input`,
    type: InputType.Number
  }, props));
});
const SSNInput = memo((_ta) => {
  var _ua = _ta, {
    as,
    background = {},
    border = {},
    className = "",
    cursor = Cursor.Text,
    defaultValue,
    events = {},
    icon: icon2,
    label,
    name: name2,
    placeholder = "",
    shadow = DepthShadow.Low,
    states = {},
    textSize = TextSize.Default,
    textColor = TextColors.InputControl,
    textWeight = TextWeight.Default,
    validation = {
      conditions: {
        [x$4.IsSSN]: true
      }
    }
  } = _ua, props = __objRest(_ua, [
    "as",
    "background",
    "border",
    "className",
    "cursor",
    "defaultValue",
    "events",
    "icon",
    "label",
    "name",
    "placeholder",
    "shadow",
    "states",
    "textSize",
    "textColor",
    "textWeight",
    "validation"
  ]);
  var _a2, _b, _c, _d, _e2;
  const [value2, setValue] = useState(defaultValue ? [Number.parseInt((defaultValue == null ? void 0 : defaultValue.toString().slice(0, 3)) || "000"), Number.parseInt((defaultValue == null ? void 0 : defaultValue.toString().slice(3, 5)) || "00"), Number.parseInt((defaultValue == null ? void 0 : defaultValue.toString().slice(5)) || "0000")] : []);
  const [valueChanged, setValueChanged] = useState(false);
  const [focused, setFocused] = useState(false);
  const [problems, setProblems] = useState([]);
  const firstInputRef = useRef();
  const secondInputRef = useRef();
  const thirdInputRef = useRef();
  useEffect(() => {
    var _a3, _b2;
    setValueChanged(true);
    if (valueChanged) {
      if (validation && validation.conditions) {
        const probs = Si$1(value2, validation.conditions);
        setProblems(probs);
        if (((_a3 = events.input) == null ? void 0 : _a3.onValueChange) && value2)
          events.input.onValueChange({
            validation: {
              problems: probs,
              validated: probs.length === 0
            },
            value: Number.parseInt(value2.join(""))
          });
      } else {
        if (((_b2 = events.input) == null ? void 0 : _b2.onValueChange) && value2)
          events.input.onValueChange({
            value: Number.parseInt(value2.join(""))
          });
      }
    }
  }, [value2]);
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [/* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal
      },
      children: [label && /* @__PURE__ */ jsx$2(InputLabel, {
        children: label
      }), problems.length > 0 ? /* @__PURE__ */ jsx$2(ErrorLabel, {
        alignment: {
          horizontal: AlignHorizontal.Right
        },
        children: (_a2 = problems[0]) == null ? void 0 : _a2.message.short
      }) : null]
    }), /* @__PURE__ */ jsxs$1(InputContainer, __spreadProps(__spreadValues({
      background: __spreadValues({
        color: BackgroundColors.InputControl
      }, background),
      border: __spreadValues({
        all: {
          color: BorderColors.InputControl,
          style: BorderStyle.Solid,
          width: 1
        }
      }, border),
      cursor,
      className: `${className} ssn-input`,
      events: {
        mouse: {
          onClick: () => {
            if (!focused && firstInputRef.current) {
              firstInputRef.current.focus();
            }
          }
        }
      },
      padding: {
        left: Amount.Least,
        right: Amount.Least
      },
      shadow,
      states: {
        state: {
          error: problems,
          focused
        }
      }
    }, props), {
      children: [icon2 && /* @__PURE__ */ jsx$2(Fragment, {
        children: icon2
      }), /* @__PURE__ */ jsx$2(Input$1, {
        hidden: !((_b = states.state) == null ? void 0 : _b.visible),
        max: 999,
        min: 100,
        name: name2,
        onBlur: () => setFocused(false),
        onChange: (e2) => {
          var _a3;
          setValueChanged(true);
          setValue([e2.target.value, value2[1], value2[2]]);
          if (e2.target.value.length === 3 && secondInputRef.current) {
            (_a3 = secondInputRef.current) == null ? void 0 : _a3.focus();
          }
        },
        onFocus: () => setFocused(true),
        placeholder: "123",
        onKeyPress: (e2) => {
          if (e2.target.value.length === 3) {
            e2.preventDefault();
          }
        },
        ref: firstInputRef,
        textAlign: TextAlign.Center,
        textColor,
        type: "number"
      }), /* @__PURE__ */ jsx$2(Label, {
        textSize: TextSize.Larger,
        children: "-"
      }), /* @__PURE__ */ jsx$2(Input$1, {
        hidden: !((_c = states.state) == null ? void 0 : _c.visible),
        max: 99,
        min: 1,
        name: name2,
        onBlur: () => setFocused(false),
        onChange: (e2) => {
          var _a3;
          setValueChanged(true);
          setValue([value2[0], e2.target.value, value2[2]]);
          if (e2.target.value.length === 2) {
            (_a3 = thirdInputRef.current) == null ? void 0 : _a3.focus();
          }
        },
        onFocus: () => setFocused(true),
        placeholder: "45",
        onKeyPress: (e2) => {
          if (e2.target.value.length === 2) {
            e2.preventDefault();
          }
        },
        onKeyDown: (e2) => {
          var _a3;
          if (e2.key === "Backspace" && e2.target.value.length === 0) {
            (_a3 = firstInputRef.current) == null ? void 0 : _a3.focus();
          }
        },
        ref: secondInputRef,
        textAlign: TextAlign.Center,
        textColor,
        type: "number"
      }), /* @__PURE__ */ jsx$2(Label, {
        textSize: TextSize.Larger,
        children: "-"
      }), /* @__PURE__ */ jsx$2(Input$1, {
        hidden: !((_d = states.state) == null ? void 0 : _d.visible),
        max: 9999,
        min: 1e3,
        name: name2,
        onBlur: () => setFocused(false),
        onChange: (e2) => {
          setValueChanged(true);
          setValue([value2[0], value2[1], e2.target.value]);
        },
        onFocus: () => setFocused(true),
        placeholder: "6789",
        onKeyPress: (e2) => {
          if (e2.target.value.length === 4) {
            e2.preventDefault();
          }
        },
        onKeyDown: (e2) => {
          var _a3;
          if (e2.key === "Backspace" && e2.target.value.length === 0) {
            (_a3 = secondInputRef.current) == null ? void 0 : _a3.focus();
          }
        },
        ref: thirdInputRef,
        textAlign: TextAlign.Center,
        textColor,
        type: "number"
      }), ((_e2 = states.state) == null ? void 0 : _e2.loading) && /* @__PURE__ */ jsx$2(ProgressSpinner, {
        size: {
          height: Sizes.Small,
          width: Sizes.Small
        }
      })]
    }))]
  });
});
const Input$1 = styled.input.withConfig({
  displayName: "Input",
  componentId: "sc-1kwp1c5-0"
})(["", ";background:transparent;border:none;outline:none;padding:0 ", ";-moz-appearance:textfield;&::placeholder{color:rgb(", ");}&::-webkit-input-placeholder{color:rgb(", ");}&::-moz-placeholder{color:rgb(", ");}&::-webkit-outer-spin-button,&::-webkit-inner-spin-button{-webkit-appearance:none;margin:0;}"], TextStyles, Amount.Least, TextColors.InputPlaceholder, TextColors.InputPlaceholder, TextColors.InputPlaceholder);
const LongTextInput = memo(({
  background = {},
  border = {},
  className = "",
  defaultValue,
  events = {},
  label,
  lineHeight = Amount.More,
  name: name2,
  placeholder = "",
  shadow = DepthShadow.Low,
  spellCheck = true,
  states = {},
  textColor = TextColors.InputControl,
  validation = {}
}) => {
  var _a2, _b, _c;
  const [value2, setValue] = useState(defaultValue != null ? defaultValue : "");
  const [focused, setFocused] = useState(false);
  const [problems, setProblems] = useState([]);
  const [valueChanged, setValueChanged] = useState(false);
  const inputRef = useRef(null);
  useEffect(() => {
    var _a3, _b2;
    if (valueChanged) {
      if (validation && validation.conditions) {
        const probs = Si$1(value2, validation.conditions);
        setProblems(probs);
        if ((_a3 = events.input) == null ? void 0 : _a3.onValueChange)
          events.input.onValueChange({
            validation: {
              problems: probs,
              validated: probs.length === 0
            },
            value: value2
          });
      } else {
        if ((_b2 = events.input) == null ? void 0 : _b2.onValueChange)
          events.input.onValueChange({
            value: value2
          });
      }
    }
  }, [value2]);
  useEffect(() => {
    var _a3;
    setValue((_a3 = defaultValue != null ? defaultValue : value2) != null ? _a3 : "");
  }, [defaultValue]);
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [/* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal
      },
      children: [label && /* @__PURE__ */ jsx$2(InputLabel, {
        children: label
      }), problems.length > 0 ? /* @__PURE__ */ jsx$2(ErrorLabel, {
        alignment: {
          horizontal: AlignHorizontal.Right
        },
        children: (_a2 = problems[0]) == null ? void 0 : _a2.message.short
      }) : null]
    }), /* @__PURE__ */ jsxs$1(InputContainer, {
      background: __spreadValues({
        color: BackgroundColors.InputControl
      }, background),
      border: __spreadValues({
        all: {
          color: BorderColors.InputControl,
          style: BorderStyle.Solid,
          width: 1
        }
      }, border),
      className: `${className} text-input`,
      events: {
        mouse: {
          onClick: () => {
            var _a3;
            (_a3 = inputRef.current) == null ? void 0 : _a3.focus();
          }
        }
      },
      padding: {
        bottom: Amount.Least,
        left: Amount.Less,
        right: Amount.Less,
        top: Amount.Least
      },
      shadow,
      states: {
        state: {
          error: problems,
          focused
        }
      },
      children: [/* @__PURE__ */ jsx$2(Input, {
        name: name2,
        onBlur: () => setFocused(false),
        onChange: (e2) => {
          setValueChanged(true);
          setValue(prefix + e2.target.value + suffix);
        },
        onFocus: () => setFocused(true),
        placeholder,
        ref: inputRef,
        lineHeight,
        states: {
          state: {
            visible: !((_b = states.state) == null ? void 0 : _b.visible)
          }
        },
        textColor,
        value: value2,
        spellCheck
      }), ((_c = states.state) == null ? void 0 : _c.loading) && /* @__PURE__ */ jsx$2(ProgressSpinner, {})]
    })]
  });
});
const Input = styled.textarea.withConfig({
  displayName: "Input",
  componentId: "sc-a7ikmp-0"
})(["", ";background:transparent;border:none;width:100%;&::-ms-clear{display:none;width:0;height:0;}&::-ms-reveal{display:none;width:0;height:0;}&::-webkit-search-decoration,&::-webkit-search-cancel-button,&::-webkit-search-results-button,&::-webkit-search-results-decoration{display:none;}"], TextStyles);
var dist = {};
function _interopDefault(e2) {
  return e2 && typeof e2 == "object" && "default" in e2 ? e2.default : e2;
}
Object.defineProperty(dist, "__esModule", { value: true });
var React = e$3, React__default = _interopDefault(React), extendStatics = function(e2, a) {
  return (extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e3, a2) {
    e3.__proto__ = a2;
  } || function(e3, a2) {
    for (var i2 in a2)
      a2.hasOwnProperty(i2) && (e3[i2] = a2[i2]);
  })(e2, a);
};
function __extends(e2, a) {
  function i2() {
    this.constructor = e2;
  }
  extendStatics(e2, a), e2.prototype = a === null ? Object.create(a) : (i2.prototype = a.prototype, new i2());
}
var BRUTEFORCE_CARDINALITY, MIN_GUESSES_BEFORE_GROWING_SEQUENCE, MIN_SUBMATCH_GUESSES_MULTI_CHAR, MIN_SUBMATCH_GUESSES_SINGLE_CHAR, adjacency_graphs$1, calc_average_degree, k$1, __assign = function() {
  return (__assign = Object.assign || function(e2) {
    for (var a, i2 = 1, r2 = arguments.length; i2 < r2; i2++)
      for (var n2 in a = arguments[i2])
        Object.prototype.hasOwnProperty.call(a, n2) && (e2[n2] = a[n2]);
    return e2;
  }).apply(this, arguments);
}, frequency_lists_1 = { passwords: "123456,password,12345678,qwerty,123456789,12345,1234,111111,1234567,dragon,123123,baseball,abc123,football,monkey,letmein,shadow,master,696969,mustang,666666,qwertyuiop,123321,1234567890,pussy,superman,654321,1qaz2wsx,7777777,fuckyou,qazwsx,jordan,123qwe,000000,killer,trustno1,hunter,harley,zxcvbnm,asdfgh,buster,batman,soccer,tigger,charlie,sunshine,iloveyou,fuckme,ranger,hockey,computer,starwars,asshole,pepper,klaster,112233,zxcvbn,freedom,princess,maggie,pass,ginger,11111111,131313,fuck,love,cheese,159753,summer,chelsea,dallas,biteme,matrix,yankees,6969,corvette,austin,access,thunder,merlin,secret,diamond,hello,hammer,fucker,1234qwer,silver,gfhjkm,internet,samantha,golfer,scooter,test,orange,cookie,q1w2e3r4t5,maverick,sparky,phoenix,mickey,bigdog,snoopy,guitar,whatever,chicken,camaro,mercedes,peanut,ferrari,falcon,cowboy,welcome,sexy,samsung,steelers,smokey,dakota,arsenal,boomer,eagles,tigers,marina,nascar,booboo,gateway,yellow,porsche,monster,spider,diablo,hannah,bulldog,junior,london,purple,compaq,lakers,iceman,qwer1234,hardcore,cowboys,money,banana,ncc1701,boston,tennis,q1w2e3r4,coffee,scooby,123654,nikita,yamaha,mother,barney,brandy,chester,fuckoff,oliver,player,forever,rangers,midnight,chicago,bigdaddy,redsox,angel,badboy,fender,jasper,slayer,rabbit,natasha,marine,bigdick,wizard,marlboro,raiders,prince,casper,fishing,flower,jasmine,iwantu,panties,adidas,winter,winner,gandalf,password1,enter,ghbdtn,1q2w3e4r,golden,cocacola,jordan23,winston,madison,angels,panther,blowme,sexsex,bigtits,spanky,bitch,sophie,asdfasdf,horny,thx1138,toyota,tiger,dick,canada,12344321,blowjob,8675309,muffin,liverpoo,apples,qwerty123,passw0rd,abcd1234,pokemon,123abc,slipknot,qazxsw,123456a,scorpion,qwaszx,butter,startrek,rainbow,asdfghjkl,razz,newyork,redskins,gemini,cameron,qazwsxedc,florida,liverpool,turtle,sierra,viking,booger,butthead,doctor,rocket,159357,dolphins,captain,bandit,jaguar,packers,pookie,peaches,789456,asdf,dolphin,helpme,blue,theman,maxwell,qwertyui,shithead,lovers,maddog,giants,nirvana,metallic,hotdog,rosebud,mountain,warrior,stupid,elephant,suckit,success,bond007,jackass,alexis,porn,lucky,scorpio,samson,q1w2e3,azerty,rush2112,driver,freddy,1q2w3e4r5t,sydney,gators,dexter,red123,123456q,12345a,bubba,creative,voodoo,golf,trouble,america,nissan,gunner,garfield,bullshit,asdfghjk,5150,fucking,apollo,1qazxsw2,2112,eminem,legend,airborne,bear,beavis,apple,brooklyn,godzilla,skippy,4815162342,buddy,qwert,kitten,magic,shelby,beaver,phantom,asdasd,xavier,braves,darkness,blink182,copper,platinum,qweqwe,tomcat,01012011,girls,bigboy,102030,animal,police,online,11223344,voyager,lifehack,12qwaszx,fish,sniper,315475,trinity,blazer,heaven,lover,snowball,playboy,loveme,bubbles,hooters,cricket,willow,donkey,topgun,nintendo,saturn,destiny,pakistan,pumpkin,digital,sergey,redwings,explorer,tits,private,runner,therock,guinness,lasvegas,beatles,789456123,fire,cassie,christin,qwerty1,celtic,asdf1234,andrey,broncos,007007,babygirl,eclipse,fluffy,cartman,michigan,carolina,testing,alexande,birdie,pantera,cherry,vampire,mexico,dickhead,buffalo,genius,montana,beer,minecraft,maximus,flyers,lovely,stalker,metallica,doggie,snickers,speedy,bronco,lol123,paradise,yankee,horses,magnum,dreams,147258369,lacrosse,ou812,goober,enigma,qwertyu,scotty,pimpin,bollocks,surfer,cock,poohbear,genesis,star,asd123,qweasdzxc,racing,hello1,hawaii,eagle1,viper,poopoo,einstein,boobies,12345q,bitches,drowssap,simple,badger,alaska,action,jester,drummer,111222,spitfire,forest,maryjane,champion,diesel,svetlana,friday,hotrod,147258,chevy,lucky1,westside,security,google,badass,tester,shorty,thumper,hitman,mozart,zaq12wsx,boobs,reddog,010203,lizard,a123456,123456789a,ruslan,eagle,1232323q,scarface,qwerty12,147852,a12345,buddha,porno,420420,spirit,money1,stargate,qwe123,naruto,mercury,liberty,12345qwert,semperfi,suzuki,popcorn,spooky,marley,scotland,kitty,cherokee,vikings,simpsons,rascal,qweasd,hummer,loveyou,michael1,patches,russia,jupiter,penguin,passion,cumshot,vfhbyf,honda,vladimir,sandman,passport,raider,bastard,123789,infinity,assman,bulldogs,fantasy,sucker,1234554321,horney,domino,budlight,disney,ironman,usuckballz1,softball,brutus,redrum,bigred,mnbvcxz,fktrcfylh,karina,marines,digger,kawasaki,cougar,fireman,oksana,monday,cunt,justice,nigger,super,wildcats,tinker,logitech,dancer,swordfis,avalon,everton,alexandr,motorola,patriots,hentai,madonna,pussy1,ducati,colorado,connor,juventus,galore,smooth,freeuser,warcraft,boogie,titanic,wolverin,elizabet,arizona,valentin,saints,asdfg,accord,test123,password123,christ,yfnfif,stinky,slut,spiderma,naughty,chopper,hello123,ncc1701d,extreme,skyline,poop,zombie,pearljam,123qweasd,froggy,awesome,vision,pirate,fylhtq,dreamer,bullet,predator,empire,123123a,kirill,charlie1,panthers,penis,skipper,nemesis,rasdzv3,peekaboo,rolltide,cardinal,psycho,danger,mookie,happy1,wanker,chevelle,manutd,goblue,9379992,hobbes,vegeta,fyfcnfcbz,852456,picard,159951,windows,loverboy,victory,vfrcbv,bambam,serega,123654789,turkey,tweety,galina,hiphop,rooster,changeme,berlin,taurus,suckme,polina,electric,avatar,134679,maksim,raptor,alpha1,hendrix,newport,bigcock,brazil,spring,a1b2c3,madmax,alpha,britney,sublime,darkside,bigman,wolfpack,classic,hercules,ronaldo,letmein1,1q2w3e,741852963,spiderman,blizzard,123456789q,cheyenne,cjkysirj,tiger1,wombat,bubba1,pandora,zxc123,holiday,wildcat,devils,horse,alabama,147852369,caesar,12312,buddy1,bondage,pussycat,pickle,shaggy,catch22,leather,chronic,a1b2c3d4,admin,qqq111,qaz123,airplane,kodiak,freepass,billybob,sunset,katana,phpbb,chocolat,snowman,angel1,stingray,firebird,wolves,zeppelin,detroit,pontiac,gundam,panzer,vagina,outlaw,redhead,tarheels,greenday,nastya,01011980,hardon,engineer,dragon1,hellfire,serenity,cobra,fireball,lickme,darkstar,1029384756,01011,mustang1,flash,124578,strike,beauty,pavilion,01012000,bobafett,dbrnjhbz,bigmac,bowling,chris1,ytrewq,natali,pyramid,rulez,welcome1,dodgers,apache,swimming,whynot,teens,trooper,fuckit,defender,precious,135790,packard,weasel,popeye,lucifer,cancer,icecream,142536,raven,swordfish,presario,viktor,rockstar,blonde,james1,wutang,spike,pimp,atlanta,airforce,thailand,casino,lennon,mouse,741852,hacker,bluebird,hawkeye,456123,theone,catfish,sailor,goldfish,nfnmzyf,tattoo,pervert,barbie,maxima,nipples,machine,trucks,wrangler,rocks,tornado,lights,cadillac,bubble,pegasus,madman,longhorn,browns,target,666999,eatme,qazwsx123,microsoft,dilbert,christia,baller,lesbian,shooter,xfiles,seattle,qazqaz,cthutq,amateur,prelude,corona,freaky,malibu,123qweasdzxc,assassin,246810,atlantis,integra,pussies,iloveu,lonewolf,dragons,monkey1,unicorn,software,bobcat,stealth,peewee,openup,753951,srinivas,zaqwsx,valentina,shotgun,trigger,veronika,bruins,coyote,babydoll,joker,dollar,lestat,rocky1,hottie,random,butterfly,wordpass,smiley,sweety,snake,chipper,woody,samurai,devildog,gizmo,maddie,soso123aljg,mistress,freedom1,flipper,express,hjvfirf,moose,cessna,piglet,polaris,teacher,montreal,cookies,wolfgang,scully,fatboy,wicked,balls,tickle,bunny,dfvgbh,foobar,transam,pepsi,fetish,oicu812,basketba,toshiba,hotstuff,sunday,booty,gambit,31415926,impala,stephani,jessica1,hooker,lancer,knicks,shamrock,fuckyou2,stinger,314159,redneck,deftones,squirt,siemens,blaster,trucker,subaru,renegade,ibanez,manson,swinger,reaper,blondie,mylove,galaxy,blahblah,enterpri,travel,1234abcd,babylon5,indiana,skeeter,master1,sugar,ficken,smoke,bigone,sweetpea,fucked,trfnthbyf,marino,escort,smitty,bigfoot,babes,larisa,trumpet,spartan,valera,babylon,asdfghj,yankees1,bigboobs,stormy,mister,hamlet,aardvark,butterfl,marathon,paladin,cavalier,manchester,skater,indigo,hornet,buckeyes,01011990,indians,karate,hesoyam,toronto,diamonds,chiefs,buckeye,1qaz2wsx3edc,highland,hotsex,charger,redman,passwor,maiden,drpepper,storm,pornstar,garden,12345678910,pencil,sherlock,timber,thuglife,insane,pizza,jungle,jesus1,aragorn,1a2b3c,hamster,david1,triumph,techno,lollol,pioneer,catdog,321654,fktrctq,morpheus,141627,pascal,shadow1,hobbit,wetpussy,erotic,consumer,blabla,justme,stones,chrissy,spartak,goforit,burger,pitbull,adgjmptw,italia,barcelona,hunting,colors,kissme,virgin,overlord,pebbles,sundance,emerald,doggy,racecar,irina,element,1478963,zipper,alpine,basket,goddess,poison,nipple,sakura,chichi,huskers,13579,pussys,q12345,ultimate,ncc1701e,blackie,nicola,rommel,matthew1,caserta,omega,geronimo,sammy1,trojan,123qwe123,philips,nugget,tarzan,chicks,aleksandr,bassman,trixie,portugal,anakin,dodger,bomber,superfly,madness,q1w2e3r4t5y6,loser,123asd,fatcat,ybrbnf,soldier,warlock,wrinkle1,desire,sexual,babe,seminole,alejandr,951753,11235813,westham,andrei,concrete,access14,weed,letmein2,ladybug,naked,christop,trombone,tintin,bluesky,rhbcnbyf,qazxswedc,onelove,cdtnkfyf,whore,vfvjxrf,titans,stallion,truck,hansolo,blue22,smiles,beagle,panama,kingkong,flatron,inferno,mongoose,connect,poiuyt,snatch,qawsed,juice,blessed,rocker,snakes,turbo,bluemoon,sex4me,finger,jamaica,a1234567,mulder,beetle,fuckyou1,passat,immortal,plastic,123454321,anthony1,whiskey,dietcoke,suck,spunky,magic1,monitor,cactus,exigen,planet,ripper,teen,spyder,apple1,nolimit,hollywoo,sluts,sticky,trunks,1234321,14789632,pickles,sailing,bonehead,ghbdtnbr,delta,charlott,rubber,911911,112358,molly1,yomama,hongkong,jumper,william1,ilovesex,faster,unreal,cumming,memphis,1123581321,nylons,legion,sebastia,shalom,pentium,geheim,werewolf,funtime,ferret,orion,curious,555666,niners,cantona,sprite,philly,pirates,abgrtyu,lollipop,eternity,boeing,super123,sweets,cooldude,tottenha,green1,jackoff,stocking,7895123,moomoo,martini,biscuit,drizzt,colt45,fossil,makaveli,snapper,satan666,maniac,salmon,patriot,verbatim,nasty,shasta,asdzxc,shaved,blackcat,raistlin,qwerty12345,punkrock,cjkywt,01012010,4128,waterloo,crimson,twister,oxford,musicman,seinfeld,biggie,condor,ravens,megadeth,wolfman,cosmos,sharks,banshee,keeper,foxtrot,gn56gn56,skywalke,velvet,black1,sesame,dogs,squirrel,privet,sunrise,wolverine,sucks,legolas,grendel,ghost,cats,carrot,frosty,lvbnhbq,blades,stardust,frog,qazwsxed,121314,coolio,brownie,groovy,twilight,daytona,vanhalen,pikachu,peanuts,licker,hershey,jericho,intrepid,ninja,1234567a,zaq123,lobster,goblin,punisher,strider,shogun,kansas,amadeus,seven7,jason1,neptune,showtime,muscle,oldman,ekaterina,rfrfirf,getsome,showme,111222333,obiwan,skittles,danni,tanker,maestro,tarheel,anubis,hannibal,anal,newlife,gothic,shark,fighter,blue123,blues,123456z,princes,slick,chaos,thunder1,sabine,1q2w3e4r5t6y,python,test1,mirage,devil,clover,tequila,chelsea1,surfing,delete,potato,chubby,panasonic,sandiego,portland,baggins,fusion,sooners,blackdog,buttons,californ,moscow,playtime,mature,1a2b3c4d,dagger,dima,stimpy,asdf123,gangster,warriors,iverson,chargers,byteme,swallow,liquid,lucky7,dingdong,nymets,cracker,mushroom,456852,crusader,bigguy,miami,dkflbvbh,bugger,nimrod,tazman,stranger,newpass,doodle,powder,gotcha,guardian,dublin,slapshot,septembe,147896325,pepsi1,milano,grizzly,woody1,knights,photos,2468,nookie,charly,rammstein,brasil,123321123,scruffy,munchkin,poopie,123098,kittycat,latino,walnut,1701,thegame,viper1,1passwor,kolobok,picasso,robert1,barcelon,bananas,trance,auburn,coltrane,eatshit,goodluck,starcraft,wheels,parrot,postal,blade,wisdom,pink,gorilla,katerina,pass123,andrew1,shaney14,dumbass,osiris,fuck_inside,oakland,discover,ranger1,spanking,lonestar,bingo,meridian,ping,heather1,dookie,stonecol,megaman,192837465,rjntyjr,ledzep,lowrider,25802580,richard1,firefly,griffey,racerx,paradox,ghjcnj,gangsta,zaq1xsw2,tacobell,weezer,sirius,halflife,buffett,shiloh,123698745,vertigo,sergei,aliens,sobaka,keyboard,kangaroo,sinner,soccer1,0.0.000,bonjour,socrates,chucky,hotboy,sprint,0007,sarah1,scarlet,celica,shazam,formula1,sommer,trebor,qwerasdf,jeep,mailcreated5240,bollox,asshole1,fuckface,honda1,rebels,vacation,lexmark,penguins,12369874,ragnarok,formula,258456,tempest,vfhecz,tacoma,qwertz,colombia,flames,rockon,duck,prodigy,wookie,dodgeram,mustangs,123qaz,sithlord,smoker,server,bang,incubus,scoobydo,oblivion,molson,kitkat,titleist,rescue,zxcv1234,carpet,1122,bigballs,tardis,jimbob,xanadu,blueeyes,shaman,mersedes,pooper,pussy69,golfing,hearts,mallard,12312312,kenwood,patrick1,dogg,cowboys1,oracle,123zxc,nuttertools,102938,topper,1122334455,shemale,sleepy,gremlin,yourmom,123987,gateway1,printer,monkeys,peterpan,mikey,kingston,cooler,analsex,jimbo,pa55word,asterix,freckles,birdman,frank1,defiant,aussie,stud,blondes,tatyana,445566,aspirine,mariners,jackal,deadhead,katrin,anime,rootbeer,frogger,polo,scooter1,hallo,noodles,thomas1,parola,shaolin,celine,11112222,plymouth,creampie,justdoit,ohyeah,fatass,assfuck,amazon,1234567q,kisses,magnus,camel,nopass,bosco,987456,6751520,harley1,putter,champs,massive,spidey,lightnin,camelot,letsgo,gizmodo,aezakmi,bones,caliente,12121,goodtime,thankyou,raiders1,brucelee,redalert,aquarius,456654,catherin,smokin,pooh,mypass,astros,roller,porkchop,sapphire,qwert123,kevin1,a1s2d3f4,beckham,atomic,rusty1,vanilla,qazwsxedcrfv,hunter1,kaktus,cxfcnmt,blacky,753159,elvis1,aggies,blackjac,bangkok,scream,123321q,iforgot,power1,kasper,abc12,buster1,slappy,shitty,veritas,chevrole,amber1,01012001,vader,amsterdam,jammer,primus,spectrum,eduard,granny,horny1,sasha1,clancy,usa123,satan,diamond1,hitler,avenger,1221,spankme,123456qwerty,simba,smudge,scrappy,labrador,john316,syracuse,front242,falcons,husker,candyman,commando,gator,pacman,delta1,pancho,krishna,fatman,clitoris,pineappl,lesbians,8j4ye3uz,barkley,vulcan,punkin,boner,celtics,monopoly,flyboy,romashka,hamburg,123456aa,lick,gangbang,223344,area51,spartans,aaa111,tricky,snuggles,drago,homerun,vectra,homer1,hermes,topcat,cuddles,infiniti,1234567890q,cosworth,goose,phoenix1,killer1,ivanov,bossman,qawsedrf,peugeot,exigent,doberman,durango,brandon1,plumber,telefon,horndog,laguna,rbhbkk,dawg,webmaster,breeze,beast,porsche9,beefcake,leopard,redbull,oscar1,topdog,godsmack,theking,pics,omega1,speaker,viktoria,fuckers,bowler,starbuck,gjkbyf,valhalla,anarchy,blacks,herbie,kingpin,starfish,nokia,loveit,achilles,906090,labtec,ncc1701a,fitness,jordan1,brando,arsenal1,bull,kicker,napass,desert,sailboat,bohica,tractor,hidden,muppet,jackson1,jimmy1,terminator,phillies,pa55w0rd,terror,farside,swingers,legacy,frontier,butthole,doughboy,jrcfyf,tuesday,sabbath,daniel1,nebraska,homers,qwertyuio,azamat,fallen,agent007,striker,camels,iguana,looker,pinkfloy,moloko,qwerty123456,dannyboy,luckydog,789654,pistol,whocares,charmed,skiing,select,franky,puppy,daniil,vladik,vette,vfrcbvrf,ihateyou,nevada,moneys,vkontakte,mandingo,puppies,666777,mystic,zidane,kotenok,dilligaf,budman,bunghole,zvezda,123457,triton,golfball,technics,trojans,panda,laptop,rookie,01011991,15426378,aberdeen,gustav,jethro,enterprise,igor,stripper,filter,hurrican,rfnthbyf,lespaul,gizmo1,butch,132435,dthjybrf,1366613,excalibu,963852,nofear,momoney,possum,cutter,oilers,moocow,cupcake,gbpltw,batman1,splash,svetik,super1,soleil,bogdan,melissa1,vipers,babyboy,tdutybq,lancelot,ccbill,keystone,passwort,flamingo,firefox,dogman,vortex,rebel,noodle,raven1,zaphod,killme,pokemon1,coolman,danila,designer,skinny,kamikaze,deadman,gopher,doobie,warhammer,deeznuts,freaks,engage,chevy1,steve1,apollo13,poncho,hammers,azsxdc,dracula,000007,sassy,bitch1,boots,deskjet,12332,macdaddy,mighty,rangers1,manchest,sterlin,casey1,meatball,mailman,sinatra,cthulhu,summer1,bubbas,cartoon,bicycle,eatpussy,truelove,sentinel,tolkien,breast,capone,lickit,summit,123456k,peter1,daisy1,kitty1,123456789z,crazy1,jamesbon,texas1,sexygirl,362436,sonic,billyboy,redhot,microsof,microlab,daddy1,rockets,iloveyo,fernand,gordon24,danie,cutlass,polska,star69,titties,pantyhos,01011985,thekid,aikido,gofish,mayday,1234qwe,coke,anfield,sony,lansing,smut,scotch,sexx,catman,73501505,hustler,saun,dfkthbz,passwor1,jenny1,azsxdcfv,cheers,irish1,gabrie,tinman,orioles,1225,charlton,fortuna,01011970,airbus,rustam,xtreme,bigmoney,zxcasd,retard,grumpy,huskies,boxing,4runner,kelly1,ultima,warlord,fordf150,oranges,rotten,asdfjkl,superstar,denali,sultan,bikini,saratoga,thor,figaro,sixers,wildfire,vladislav,128500,sparta,mayhem,greenbay,chewie,music1,number1,cancun,fabie,mellon,poiuytrewq,cloud9,crunch,bigtime,chicken1,piccolo,bigbird,321654987,billy1,mojo,01011981,maradona,sandro,chester1,bizkit,rjirfrgbde,789123,rightnow,jasmine1,hyperion,treasure,meatloaf,armani,rovers,jarhead,01011986,cruise,coconut,dragoon,utopia,davids,cosmo,rfhbyf,reebok,1066,charli,giorgi,sticks,sayang,pass1234,exodus,anaconda,zaqxsw,illini,woofwoof,emily1,sandy1,packer,poontang,govols,jedi,tomato,beaner,cooter,creamy,lionking,happy123,albatros,poodle,kenworth,dinosaur,greens,goku,happyday,eeyore,tsunami,cabbage,holyshit,turkey50,memorex,chaser,bogart,orgasm,tommy1,volley,whisper,knopka,ericsson,walleye,321123,pepper1,katie1,chickens,tyler1,corrado,twisted,100000,zorro,clemson,zxcasdqwe,tootsie,milana,zenith,fktrcfylhf,shania,frisco,polniypizdec0211,crazybab,junebug,fugazi,rereirf,vfvekz,1001,sausage,vfczyz,koshka,clapton,justin1,anhyeuem,condom,fubar,hardrock,skywalker,tundra,cocks,gringo,150781,canon,vitalik,aspire,stocks,samsung1,applepie,abc12345,arjay,gandalf1,boob,pillow,sparkle,gmoney,rockhard,lucky13,samiam,everest,hellyeah,bigsexy,skorpion,rfrnec,hedgehog,australi,candle,slacker,dicks,voyeur,jazzman,america1,bobby1,br0d3r,wolfie,vfksirf,1qa2ws3ed,13243546,fright,yosemite,temp,karolina,fart,barsik,surf,cheetah,baddog,deniska,starship,bootie,milena,hithere,kume,greatone,dildo,50cent,0.0.0.000,albion,amanda1,midget,lion,maxell,football1,cyclone,freeporn,nikola,bonsai,kenshin,slider,balloon,roadkill,killbill,222333,jerkoff,78945612,dinamo,tekken,rambler,goliath,cinnamon,malaka,backdoor,fiesta,packers1,rastaman,fletch,sojdlg123aljg,stefano,artemis,calico,nyjets,damnit,robotech,duchess,rctybz,hooter,keywest,18436572,hal9000,mechanic,pingpong,operator,presto,sword,rasputin,spank,bristol,faggot,shado,963852741,amsterda,321456,wibble,carrera,alibaba,majestic,ramses,duster,route66,trident,clipper,steeler,wrestlin,divine,kipper,gotohell,kingfish,snake1,passwords,buttman,pompey,viagra,zxcvbnm1,spurs,332211,slutty,lineage2,oleg,macross,pooter,brian1,qwert1,charles1,slave,jokers,yzerman,swimmer,ne1469,nwo4life,solnce,seamus,lolipop,pupsik,moose1,ivanova,secret1,matador,love69,420247,ktyjxrf,subway,cinder,vermont,pussie,chico,florian,magick,guiness,allsop,ghetto,flash1,a123456789,typhoon,dfkthf,depeche,skydive,dammit,seeker,fuckthis,crysis,kcj9wx5n,umbrella,r2d2c3po,123123q,snoopdog,critter,theboss,ding,162534,splinter,kinky,cyclops,jayhawk,456321,caramel,qwer123,underdog,caveman,onlyme,grapes,feather,hotshot,fuckher,renault,george1,sex123,pippen,000001,789987,floppy,cunts,megapass,1000,pornos,usmc,kickass,great1,quattro,135246,wassup,helloo,p0015123,nicole1,chivas,shannon1,bullseye,java,fishes,blackhaw,jamesbond,tunafish,juggalo,dkflbckfd,123789456,dallas1,translator,122333,beanie,alucard,gfhjkm123,supersta,magicman,ashley1,cohiba,xbox360,caligula,12131415,facial,7753191,dfktynbyf,cobra1,cigars,fang,klingon,bob123,safari,looser,10203,deepthroat,malina,200000,tazmania,gonzo,goalie,jacob1,monaco,cruiser,misfit,vh5150,tommyboy,marino13,yousuck,sharky,vfhufhbnf,horizon,absolut,brighton,123456r,death1,kungfu,maxx,forfun,mamapapa,enter1,budweise,banker,getmoney,kostya,qazwsx12,bigbear,vector,fallout,nudist,gunners,royals,chainsaw,scania,trader,blueboy,walrus,eastside,kahuna,qwerty1234,love123,steph,01011989,cypress,champ,undertaker,ybrjkfq,europa,snowboar,sabres,moneyman,chrisbln,minime,nipper,groucho,whitey,viewsonic,penthous,wolf359,fabric,flounder,coolguy,whitesox,passme,smegma,skidoo,thanatos,fucku2,snapple,dalejr,mondeo,thesims,mybaby,panasoni,sinbad,thecat,topher,frodo,sneakers,q123456,z1x2c3,alfa,chicago1,taylor1,ghjcnjnfr,cat123,olivier,cyber,titanium,0420,madison1,jabroni,dang,hambone,intruder,holly1,gargoyle,sadie1,static,poseidon,studly,newcastl,sexxxx,poppy,johannes,danzig,beastie,musica,buckshot,sunnyday,adonis,bluedog,bonkers,2128506,chrono,compute,spawn,01011988,turbo1,smelly,wapbbs,goldstar,ferrari1,778899,quantum,pisces,boomboom,gunnar,1024,test1234,florida1,nike,superman1,multiplelo,custom,motherlode,1qwerty,westwood,usnavy,apple123,daewoo,korn,stereo,sasuke,sunflowe,watcher,dharma,555777,mouse1,assholes,babyblue,123qwerty,marius,walmart,snoop,starfire,tigger1,paintbal,knickers,aaliyah,lokomotiv,theend,winston1,sapper,rover,erotica,scanner,racer,zeus,sexy69,doogie,bayern,joshua1,newbie,scott1,losers,droopy,outkast,martin1,dodge1,wasser,ufkbyf,rjycnfynby,thirteen,12345z,112211,hotred,deejay,hotpussy,192837,jessic,philippe,scout,panther1,cubbies,havefun,magpie,fghtkm,avalanch,newyork1,pudding,leonid,harry1,cbr600,audia4,bimmer,fucku,01011984,idontknow,vfvfgfgf,1357,aleksey,builder,01011987,zerocool,godfather,mylife,donuts,allmine,redfish,777888,sascha,nitram,bounce,333666,smokes,1x2zkg8w,rodman,stunner,zxasqw12,hoosier,hairy,beretta,insert,123456s,rtyuehe,francesc,tights,cheese1,micron,quartz,hockey1,gegcbr,searay,jewels,bogey,paintball,celeron,padres,bing,syncmaster,ziggy,simon1,beaches,prissy,diehard,orange1,mittens,aleksandra,queens,02071986,biggles,thongs,southpark,artur,twinkle,gretzky,rabota,cambiami,monalisa,gollum,chuckles,spike1,gladiator,whisky,spongebob,sexy1,03082006,mazafaka,meathead,4121,ou8122,barefoot,12345678q,cfitymrf,bigass,a1s2d3,kosmos,blessing,titty,clevelan,terrapin,ginger1,johnboy,maggot,clarinet,deeznutz,336699,stumpy,stoney,footbal,traveler,volvo,bucket,snapon,pianoman,hawkeyes,futbol,casanova,tango,goodboy,scuba,honey1,sexyman,warthog,mustard,abc1234,nickel,10203040,meowmeow,1012,boricua,prophet,sauron,12qwas,reefer,andromeda,crystal1,joker1,90210,goofy,loco,lovesex,triangle,whatsup,mellow,bengals,monster1,maste,01011910,lover1,love1,123aaa,sunshin,smeghead,hokies,sting,welder,rambo,cerberus,bunny1,rockford,monke,1q2w3e4r5,goldwing,gabriell,buzzard,crjhgbjy,james007,rainman,groove,tiberius,purdue,nokia6300,hayabusa,shou,jagger,diver,zigzag,poochie,usarmy,phish,redwood,redwing,12345679,salamander,silver1,abcd123,sputnik,boobie,ripple,eternal,12qw34er,thegreat,allstar,slinky,gesperrt,mishka,whiskers,pinhead,overkill,sweet1,rhfcjnrf,montgom240,sersolution,jamie1,starman,proxy,swords,nikolay,bacardi,rasta,badgirl,rebecca1,wildman,penny1,spaceman,1007,10101,logan1,hacked,bulldog1,helmet,windsor,buffy1,runescape,trapper,123451,banane,dbrnjh,ripken,12345qwe,frisky,shun,fester,oasis,lightning,ib6ub9,cicero,kool,pony,thedog,784512,01011992,megatron,illusion,edward1,napster,11223,squash,roadking,woohoo,19411945,hoosiers,01091989,tracker,bagira,midway,leavemealone,br549,14725836,235689,menace,rachel1,feng,laser,stoned,realmadrid,787898,balloons,tinkerbell,5551212,maria1,pobeda,heineken,sonics,moonlight,optimus,comet,orchid,02071982,jaybird,kashmir,12345678a,chuang,chunky,peach,mortgage,rulezzz,saleen,chuckie,zippy,fishing1,gsxr750,doghouse,maxim,reader,shai,buddah,benfica,chou,salomon,meister,eraser,blackbir,bigmike,starter,pissing,angus,deluxe,eagles1,hardcock,135792468,mian,seahawks,godfathe,bookworm,gregor,intel,talisman,blackjack,babyface,hawaiian,dogfood,zhong,01011975,sancho,ludmila,medusa,mortimer,123456654321,roadrunn,just4me,stalin,01011993,handyman,alphabet,pizzas,calgary,clouds,password2,cgfhnfr,f**k,cubswin,gong,lexus,max123,xxx123,digital1,gfhjkm1,7779311,missy1,michae,beautifu,gator1,1005,pacers,buddie,chinook,heckfy,dutchess,sally1,breasts,beowulf,darkman,jenn,tiffany1,zhei,quan,qazwsx1,satana,shang,idontkno,smiths,puddin,nasty1,teddybea,valkyrie,passwd,chao,boxster,killers,yoda,cheater,inuyasha,beast1,wareagle,foryou,dragonball,mermaid,bhbirf,teddy1,dolphin1,misty1,delphi,gromit,sponge,qazzaq,fytxrf,gameover,diao,sergi,beamer,beemer,kittykat,rancid,manowar,adam12,diggler,assword,austin1,wishbone,gonavy,sparky1,fisting,thedude,sinister,1213,venera,novell,salsero,jayden,fuckoff1,linda1,vedder,02021987,1pussy,redline,lust,jktymrf,02011985,dfcbkbq,dragon12,chrome,gamecube,titten,cong,bella1,leng,02081988,eureka,bitchass,147369,banner,lakota,123321a,mustafa,preacher,hotbox,02041986,z1x2c3v4,playstation,01011977,claymore,electra,checkers,zheng,qing,armagedon,02051986,wrestle,svoboda,bulls,nimbus,alenka,madina,newpass6,onetime,aa123456,bartman,02091987,silverad,electron,12345t,devil666,oliver1,skylar,rhtdtlrj,gobucks,johann,12011987,milkman,02101985,camper,thunderb,bigbutt,jammin,davide,cheeks,goaway,lighter,claudi,thumbs,pissoff,ghostrider,cocaine,teng,squall,lotus,hootie,blackout,doitnow,subzero,02031986,marine1,02021988,pothead,123456qw,skate,1369,peng,antoni,neng,miao,bcfields,1492,marika,794613,musashi,tulips,nong,piao,chai,ruan,southpar,02061985,nude,mandarin,654123,ninjas,cannabis,jetski,xerxes,zhuang,kleopatra,dickie,bilbo,pinky,morgan1,1020,1017,dieter,baseball1,tottenham,quest,yfnfkmz,dirtbike,1234567890a,mango,jackson5,ipswich,iamgod,02011987,tdutybz,modena,qiao,slippery,qweasd123,bluefish,samtron,toon,111333,iscool,02091986,petrov,fuzzy,zhou,1357924680,mollydog,deng,02021986,1236987,pheonix,zhun,ghblehjr,othello,starcraf,000111,sanfran,a11111,cameltoe,badman,vasilisa,jiang,1qaz2ws,luan,sveta,12qw12,akira,chuai,369963,cheech,beatle,pickup,paloma,01011983,caravan,elizaveta,gawker,banzai,pussey,mullet,seng,bingo1,bearcat,flexible,farscape,borussia,zhuai,templar,guitar1,toolman,yfcntymrf,chloe1,xiang,slave1,guai,nuggets,02081984,mantis,slim,scorpio1,fyutkbyf,thedoors,02081987,02061986,123qq123,zappa,fergie,7ugd5hip2j,huai,asdfzxcv,sunflower,pussyman,deadpool,bigtit,01011982,love12,lassie,skyler,gatorade,carpedie,jockey,mancity,spectre,02021984,cameron1,artemka,reng,02031984,iomega,jing,moritz,spice,rhino,spinner,heater,zhai,hover,talon,grease,qiong,corleone,ltybcrf,tian,cowboy1,hippie,chimera,ting,alex123,02021985,mickey1,corsair,sonoma,aaron1,xxxpass,bacchus,webmaste,chuo,xyz123,chrysler,spurs1,artem,shei,cosmic,01020304,deutsch,gabriel1,123455,oceans,987456321,binladen,latinas,a12345678,speedo,buttercu,02081989,21031988,merlot,millwall,ceng,kotaku,jiong,dragonba,2580,stonecold,snuffy,01011999,02011986,hellos,blaze,maggie1,slapper,istanbul,bonjovi,babylove,mazda,bullfrog,phoeni,meng,porsche1,nomore,02061989,bobdylan,capslock,orion1,zaraza,teddybear,ntktajy,myname,rong,wraith,mets,niao,02041984,smokie,chevrolet,dialog,gfhjkmgfhjkm,dotcom,vadim,monarch,athlon,mikey1,hamish,pian,liang,coolness,chui,thoma,ramones,ciccio,chippy,eddie1,house1,ning,marker,cougars,jackpot,barbados,reds,pdtplf,knockers,cobalt,amateurs,dipshit,napoli,kilroy,pulsar,jayhawks,daemon,alexey,weng,shuang,9293709b13,shiner,eldorado,soulmate,mclaren,golfer1,andromed,duan,50spanks,sexyboy,dogshit,02021983,shuo,kakashka,syzygy,111111a,yeahbaby,qiang,netscape,fulham,120676,gooner,zhui,rainbow6,laurent,dog123,halifax,freeway,carlitos,147963,eastwood,microphone,monkey12,1123,persik,coldbeer,geng,nuan,danny1,fgtkmcby,entropy,gadget,just4fun,sophi,baggio,carlito,1234567891,02021989,02041983,specialk,piramida,suan,bigblue,salasana,hopeful,mephisto,bailey1,hack,annie1,generic,violetta,spencer1,arcadia,02051983,hondas,9562876,trainer,jones1,smashing,liao,159632,iceberg,rebel1,snooker,temp123,zang,matteo,fastball,q2w3e4r5,bamboo,fuckyo,shutup,astro,buddyboy,nikitos,redbird,maxxxx,shitface,02031987,kuai,kissmyass,sahara,radiohea,1234asdf,wildcard,maxwell1,patric,plasma,heynow,bruno1,shao,bigfish,misfits,sassy1,sheng,02011988,02081986,testpass,nanook,cygnus,licking,slavik,pringles,xing,1022,ninja1,submit,dundee,tiburon,pinkfloyd,yummy,shuai,guang,chopin,obelix,insomnia,stroker,1a2s3d4f,1223,playboy1,lazarus,jorda,spider1,homerj,sleeper,02041982,darklord,cang,02041988,02041987,tripod,magician,jelly,telephon,15975,vsjasnel12,pasword,iverson3,pavlov,homeboy,gamecock,amigo,brodie,budapest,yjdsqgfhjkm,reckless,02011980,pang,tiger123,2469,mason1,orient,01011979,zong,cdtnbr,maksimka,1011,bushido,taxman,giorgio,sphinx,kazantip,02101984,concorde,verizon,lovebug,georg,sam123,seadoo,qazwsxedc123,jiao,jezebel,pharmacy,abnormal,jellybea,maxime,puffy,islander,bunnies,jiggaman,drakon,010180,pluto,zhjckfd,12365,classics,crusher,mordor,hooligan,strawberry,02081985,scrabble,hawaii50,1224,wg8e3wjf,cthtuf,premium,arrow,123456qwe,mazda626,ramrod,tootie,rhjrjlbk,ghost1,1211,bounty,niang,02071984,goat,killer12,sweetnes,porno1,masamune,426hemi,corolla,mariposa,hjccbz,doomsday,bummer,blue12,zhao,bird33,excalibur,samsun,kirsty,buttfuck,kfhbcf,zhuo,marcello,ozzy,02021982,dynamite,655321,master12,123465,lollypop,stepan,1qa2ws,spiker,goirish,callum,michael2,moonbeam,attila,henry1,lindros,andrea1,sporty,lantern,12365478,nextel,violin,volcom,998877,water1,imation,inspiron,dynamo,citadel,placebo,clowns,tiao,02061988,tripper,dabears,haggis,merlin1,02031985,anthrax,amerika,iloveme,vsegda,burrito,bombers,snowboard,forsaken,katarina,a1a2a3,woofer,tigger2,fullmoon,tiger2,spock,hannah1,snoopy1,sexxxy,sausages,stanislav,cobain,robotics,exotic,green123,mobydick,senators,pumpkins,fergus,asddsa,147741,258852,windsurf,reddevil,vfitymrf,nevermind,nang,woodland,4417,mick,shui,q1q2q3,wingman,69696,superb,zuan,ganesh,pecker,zephyr,anastasiya,icu812,larry1,02081982,broker,zalupa,mihail,vfibyf,dogger,7007,paddle,varvara,schalke,1z2x3c,presiden,yankees2,tuning,poopy,02051982,concord,vanguard,stiffy,rjhjktdf,felix1,wrench,firewall,boxer,bubba69,popper,02011984,temppass,gobears,cuan,tipper,fuckme1,kamila,thong,puss,bigcat,drummer1,02031982,sowhat,digimon,tigers1,rang,jingle,bian,uranus,soprano,mandy1,dusty1,fandango,aloha,pumpkin1,postman,02061980,dogcat,bombay,pussy123,onetwo,highheel,pippo,julie1,laura1,pepito,beng,smokey1,stylus,stratus,reload,duckie,karen1,jimbo1,225588,369258,krusty,snappy,asdf12,electro,111qqq,kuang,fishin,clit,abstr,christma,qqqqq1,1234560,carnage,guyver,boxers,kittens,zeng,1000000,qwerty11,toaster,cramps,yugioh,02061987,icehouse,zxcvbnm123,pineapple,namaste,harrypotter,mygirl,falcon1,earnhard,fender1,spikes,nutmeg,01081989,dogboy,02091983,369852,softail,mypassword,prowler,bigboss,1112,harvest,heng,jubilee,killjoy,basset,keng,zaqxswcde,redsox1,biao,titan,misfit99,robot,wifey,kidrock,02101987,gameboy,enrico,1z2x3c4v,broncos1,arrows,havana,banger,cookie1,chriss,123qw,platypus,cindy1,lumber,pinball,foxy,london1,1023,05051987,02041985,password12,superma,longbow,radiohead,nigga,12051988,spongebo,qwert12345,abrakadabra,dodgers1,02101989,chillin,niceguy,pistons,hookup,santafe,bigben,jets,1013,vikings1,mankind,viktoriya,beardog,hammer1,02071980,reddwarf,magelan,longjohn,jennife,gilles,carmex2,02071987,stasik,bumper,doofus,slamdunk,pixies,garion,steffi,alessandro,beerman,niceass,warrior1,honolulu,134679852,visa,johndeer,mother1,windmill,boozer,oatmeal,aptiva,busty,delight,tasty,slick1,bergkamp,badgers,guitars,puffin,02091981,nikki1,irishman,miller1,zildjian,123000,airwolf,magnet,anai,install,02041981,02061983,astra,romans,megan1,mudvayne,freebird,muscles,dogbert,02091980,02091984,snowflak,01011900,mang,joseph1,nygiants,playstat,junior1,vjcrdf,qwer12,webhompas,giraffe,pelican,jefferso,comanche,bruiser,monkeybo,kjkszpj,123456l,micro,albany,02051987,angel123,epsilon,aladin,death666,hounddog,josephin,altima,chilly,02071988,78945,ultra,02041979,gasman,thisisit,pavel,idunno,kimmie,05051985,paulie,ballin,medion,moondog,manolo,pallmall,climber,fishbone,genesis1,153624,toffee,tbone,clippers,krypton,jerry1,picturs,compass,111111q,02051988,1121,02081977,sairam,getout,333777,cobras,22041987,bigblock,severin,booster,norwich,whiteout,ctrhtn,123456m,02061984,hewlett,shocker,fuckinside,02031981,chase1,white1,versace,123456789s,basebal,iloveyou2,bluebell,08031986,anthon,stubby,foreve,undertak,werder,saiyan,mama123,medic,chipmunk,mike123,mazdarx7,qwe123qwe,bowwow,kjrjvjnbd,celeb,choochoo,demo,lovelife,02051984,colnago,lithium,02051989,15051981,zzzxxx,welcom,anastasi,fidelio,franc,26061987,roadster,stone55,drifter,hookem,hellboy,1234qw,cbr900rr,sinned,good123654,storm1,gypsy,zebra,zachary1,toejam,buceta,02021979,testing1,redfox,lineage,mike1,highbury,koroleva,nathan1,washingt,02061982,02091985,vintage,redbaron,dalshe,mykids,11051987,macbeth,julien,james123,krasotka,111000,10011986,987123,pipeline,tatarin,sensei,codered,komodo,frogman,7894561230,nascar24,juicy,01031988,redrose,mydick,pigeon,tkbpfdtnf,smirnoff,1215,spam,winner1,flyfish,moskva,81fukkc,21031987,olesya,starligh,summer99,13041988,fishhead,freesex,super12,06061986,azazel,scoobydoo,02021981,cabron,yogibear,sheba1,konstantin,tranny,chilli,terminat,ghbywtccf,slowhand,soccer12,cricket1,fuckhead,1002,seagull,achtung,blam,bigbob,bdsm,nostromo,survivor,cnfybckfd,lemonade,boomer1,rainbow1,rober,irinka,cocksuck,peaches1,itsme,sugar1,zodiac,upyours,dinara,135791,sunny1,chiara,johnson1,02041989,solitude,habibi,sushi,markiz,smoke1,rockies,catwoman,johnny1,qwerty7,bearcats,username,01011978,wanderer,ohshit,02101986,sigma,stephen1,paradigm,02011989,flanker,sanity,jsbach,spotty,bologna,fantasia,chevys,borabora,cocker,74108520,123ewq,12021988,01061990,gtnhjdbx,02071981,01011960,sundevil,3000gt,mustang6,gagging,maggi,armstron,yfnfkb,13041987,revolver,02021976,trouble1,madcat,jeremy1,jackass1,volkswag,30051985,corndog,pool6123,marines1,03041991,pizza1,piggy,sissy,02031979,sunfire,angelus,undead,24061986,14061991,wildbill,shinobi,45m2do5bs,123qwer,21011989,cleopatr,lasvega,hornets,amorcit,11081989,coventry,nirvana1,destin,sidekick,20061988,02081983,gbhfvblf,sneaky,bmw325,22021989,nfytxrf,sekret,kalina,zanzibar,hotone,qazws,wasabi,heidi1,highlander,blues1,hitachi,paolo,23041987,slayer1,simba1,02011981,tinkerbe,kieran,01121986,172839,boiler,1125,bluesman,waffle,asdfgh01,threesom,conan,1102,reflex,18011987,nautilus,everlast,fatty,vader1,01071986,cyborg,ghbdtn123,birddog,rubble,02071983,suckers,02021973,skyhawk,12qw12qw,dakota1,joebob,nokia6233,woodie,longdong,lamer,troll,ghjcnjgfhjkm,420000,boating,nitro,armada,messiah,1031,penguin1,02091989,americ,02071989,redeye,asdqwe123,07071987,monty1,goten,spikey,sonata,635241,tokiohotel,sonyericsson,citroen,compaq1,1812,umpire,belmont,jonny,pantera1,nudes,palmtree,14111986,fenway,bighead,razor,gryphon,andyod22,aaaaa1,taco,10031988,enterme,malachi,dogface,reptile,01041985,dindom,handball,marseille,candy1,19101987,torino,tigge,matthias,viewsoni,13031987,stinker,evangelion,24011985,123456123,rampage,sandrine,02081980,thecrow,astral,28041987,sprinter,private1,seabee,shibby,02101988,25081988,fearless,junkie,01091987,aramis,antelope,draven,fuck1,mazda6,eggman,02021990,barselona,buddy123,19061987,fyfnjkbq,nancy1,12121990,10071987,sluggo,kille,hotties,irishka,zxcasdqwe123,shamus,fairlane,honeybee,soccer10,13061986,fantomas,17051988,10051987,20111986,gladiato,karachi,gambler,gordo,01011995,biatch,matthe,25800852,papito,excite,buffalo1,bobdole,cheshire,player1,28021992,thewho,10101986,pinky1,mentor,tomahawk,brown1,03041986,bismillah,bigpoppa,ijrjkfl,01121988,runaway,08121986,skibum,studman,helper,squeak,holycow,manfred,harlem,glock,gideon,987321,14021985,yellow1,wizard1,margarit,success1,medved,sf49ers,lambda,pasadena,johngalt,quasar,1776,02031980,coldplay,amand,playa,bigpimp,04041991,capricorn,elefant,sweetness,bruce1,luca,dominik,10011990,biker,09051945,datsun,elcamino,trinitro,malice,audi,voyager1,02101983,joe123,carpente,spartan1,mario1,glamour,diaper,12121985,22011988,winter1,asimov,callisto,nikolai,pebble,02101981,vendetta,david123,boytoy,11061985,02031989,iloveyou1,stupid1,cayman,casper1,zippo,yamahar1,wildwood,foxylady,calibra,02041980,27061988,dungeon,leedsutd,30041986,11051990,bestbuy,antares,dominion,24680,01061986,skillet,enforcer,derparol,01041988,196969,29071983,f00tball,purple1,mingus,25031987,21031990,remingto,giggles,klaste,3x7pxr,01011994,coolcat,29051989,megane,20031987,02051980,04041988,synergy,0000007,macman,iforget,adgjmp,vjqgfhjkm,28011987,rfvfcenhf,16051989,25121987,16051987,rogue,mamamia,08051990,20091991,1210,carnival,bolitas,paris1,dmitriy,dimas,05051989,papillon,knuckles,29011985,hola,tophat,28021990,100500,cutiepie,devo,415263,ducks,ghjuhfvvf,asdqwe,22021986,freefall,parol,02011983,zarina,buste,vitamin,warez,bigones,17061988,baritone,jamess,twiggy,mischief,bitchy,hetfield,1003,dontknow,grinch,sasha_007,18061990,12031985,12031987,calimero,224466,letmei,15011987,acmilan,alexandre,02031977,08081988,whiteboy,21051991,barney1,02071978,money123,18091985,bigdawg,02031988,cygnusx1,zoloto,31011987,firefigh,blowfish,screamer,lfybbk,20051988,chelse,11121986,01031989,harddick,sexylady,30031988,02041974,auditt,pizdec,kojak,kfgjxrf,20091988,123456ru,wp2003wp,1204,15051990,slugger,kordell1,03031986,swinging,01011974,02071979,rockie,dimples,1234123,1dragon,trucking,rusty2,roger1,marijuana,kerouac,02051978,08031985,paco,thecure,keepout,kernel,noname123,13121985,francisc,bozo,02011982,22071986,02101979,obsidian,12345qw,spud,tabasco,02051985,jaguars,dfktynby,kokomo,popova,notused,sevens,4200,magneto,02051976,roswell,15101986,21101986,lakeside,bigbang,aspen,little1,14021986,loki,suckmydick,strawber,carlos1,nokian73,dirty1,joshu,25091987,16121987,02041975,advent,17011987,slimshady,whistler,10101990,stryker,22031984,15021985,01031985,blueball,26031988,ksusha,bahamut,robocop,w_pass,chris123,impreza,prozac,bookie,bricks,13021990,alice1,cassandr,11111q,john123,4ever,korova,02051973,142857,25041988,paramedi,eclipse1,salope,07091990,1124,darkangel,23021986,999666,nomad,02051981,smackdow,01021990,yoyoma,argentin,moonligh,57chevy,bootys,hardone,capricor,galant,spanker,dkflbr,24111989,magpies,krolik,21051988,cevthrb,cheddar,22041988,bigbooty,scuba1,qwedsa,duffman,bukkake,acura,johncena,sexxy,p@ssw0rd,258369,cherries,12345s,asgard,leopold,fuck123,mopar,lalakers,dogpound,matrix1,crusty,spanner,kestrel,fenris,universa,peachy,assasin,lemmein,eggplant,hejsan,canucks,wendy1,doggy1,aikman,tupac,turnip,godlike,fussball,golden1,19283746,april1,django,petrova,captain1,vincent1,ratman,taekwondo,chocha,serpent,perfect1,capetown,vampir,amore,gymnast,timeout,nbvjatq,blue32,ksenia,k.lvbkf,nazgul,budweiser,clutch,mariya,sylveste,02051972,beaker,cartman1,q11111,sexxx,forever1,loser1,marseill,magellan,vehpbr,sexgod,jktxrf,hallo123,132456,liverpool1,southpaw,seneca,camden,357159,camero,tenchi,johndoe,145236,roofer,741963,vlad,02041978,fktyrf,zxcv123,wingnut,wolfpac,notebook,pufunga7782,brandy1,biteme1,goodgirl,redhat,02031978,challeng,millenium,hoops,maveric,noname,angus1,gaell,onion,olympus,sabrina1,ricard,sixpack,gratis,gagged,camaross,hotgirls,flasher,02051977,bubba123,goldfing,moonshin,gerrard,volkov,sonyfuck,mandrake,258963,tracer,lakers1,asians,susan1,money12,helmut,boater,diablo2,1234zxcv,dogwood,bubbles1,happy2,randy1,aries,beach1,marcius2,navigator,goodie,hellokitty,fkbyjxrf,earthlink,lookout,jumbo,opendoor,stanley1,marie1,12345m,07071977,ashle,wormix,murzik,02081976,lakewood,bluejays,loveya,commande,gateway2,peppe,01011976,7896321,goth,oreo,slammer,rasmus,faith1,knight1,stone1,redskin,ironmaiden,gotmilk,destiny1,dejavu,1master,midnite,timosha,espresso,delfin,toriamos,oberon,ceasar,markie,1a2s3d,ghhh47hj7649,vjkjrj,daddyo,dougie,disco,auggie,lekker,therock1,ou8123,start1,noway,p4ssw0rd,shadow12,333444,saigon,2fast4u,capecod,23skidoo,qazxcv,beater,bremen,aaasss,roadrunner,peace1,12345qwer,02071975,platon,bordeaux,vbkfirf,135798642,test12,supernov,beatles1,qwert40,optimist,vanessa1,prince1,ilovegod,nightwish,natasha1,alchemy,bimbo,blue99,patches1,gsxr1000,richar,hattrick,hott,solaris,proton,nevets,enternow,beavis1,amigos,159357a,ambers,lenochka,147896,suckdick,shag,intercourse,blue1234,spiral,02061977,tosser,ilove,02031975,cowgirl,canuck,q2w3e4,munch,spoons,waterboy,123567,evgeniy,savior,zasada,redcar,mamacita,terefon,globus,doggies,htubcnhfwbz,1008,cuervo,suslik,azertyui,limewire,houston1,stratfor,steaua,coors,tennis1,12345qwerty,stigmata,derf,klondike,patrici,marijuan,hardball,odyssey,nineinch,boston1,pass1,beezer,sandr,charon,power123,a1234,vauxhall,875421,awesome1,reggae,boulder,funstuff,iriska,krokodil,rfntymrf,sterva,champ1,bball,peeper,m123456,toolbox,cabernet,sheepdog,magic32,pigpen,02041977,holein1,lhfrjy,banan,dabomb,natalie1,jennaj,montana1,joecool,funky,steven1,ringo,junio,sammy123,qqqwww,baltimor,footjob,geezer,357951,mash4077,cashmone,pancake,monic,grandam,bongo,yessir,gocubs,nastia,vancouve,barley,dragon69,watford,ilikepie,02071976,laddie,123456789m,hairball,toonarmy,pimpdadd,cvthnm,hunte,davinci,lback,sophie1,firenze,q1234567,admin1,bonanza,elway7,daman,strap,azert,wxcvbn,afrika,theforce,123456t,idefix,wolfen,houdini,scheisse,default,beech,maserati,02061976,sigmachi,dylan1,bigdicks,eskimo,mizzou,02101976,riccardo,egghead,111777,kronos,ghbrjk,chaos1,jomama,rfhnjirf,rodeo,dolemite,cafc91,nittany,pathfind,mikael,password9,vqsablpzla,purpl,gabber,modelsne,myxworld,hellsing,punker,rocknrol,fishon,fuck69,02041976,lolol,twinkie,tripleh,cirrus,redbone,killer123,biggun,allegro,gthcbr,smith1,wanking,bootsy,barry1,mohawk,koolaid,5329,futurama,samoht,klizma,996633,lobo,honeys,peanut1,556677,zxasqw,joemama,javelin,samm,223322,sandra1,flicks,montag,nataly,3006,tasha1,1235789,dogbone,poker1,p0o9i8u7,goodday,smoothie,toocool,max333,metroid,archange,vagabond,billabon,22061941,tyson1,02031973,darkange,skateboard,evolutio,morrowind,wizards,frodo1,rockin,cumslut,plastics,zaqwsxcde,5201314,doit,outback,bumble,dominiqu,persona,nevermore,alinka,02021971,forgetit,sexo,all4one,c2h5oh,petunia,sheeba,kenny1,elisabet,aolsucks,woodstoc,pumper,02011975,fabio,granada,scrapper,123459,minimoni,q123456789,breaker,1004,02091976,ncc74656,slimshad,friendster,austin31,wiseguy,donner,dilbert1,132465,blackbird,buffet,jellybean,barfly,behappy,01011971,carebear,fireblad,02051975,boxcar,cheeky,kiteboy,hello12,panda1,elvisp,opennow,doktor,alex12,02101977,pornking,flamengo,02091975,snowbird,lonesome,robin1,11111a,weed420,baracuda,bleach,12345abc,nokia1,metall,singapor,mariner,herewego,dingo,tycoon,cubs,blunts,proview,123456789d,kamasutra,lagnaf,vipergts,navyseal,starwar,masterbate,wildone,peterbil,cucumber,butkus,123qwert,climax,deniro,gotribe,cement,scooby1,summer69,harrier,shodan,newyear,02091977,starwars1,romeo1,sedona,harald,doubled,sasha123,bigguns,salami,awnyce,kiwi,homemade,pimping,azzer,bradley1,warhamme,linkin,dudeman,qwe321,pinnacle,maxdog,flipflop,lfitymrf,fucker1,acidburn,esquire,sperma,fellatio,jeepster,thedon,sexybitch,pookey,spliff,widget,vfntvfnbrf,trinity1,mutant,samuel1,meliss,gohome,1q2q3q,mercede,comein,grin,cartoons,paragon,henrik,rainyday,pacino,senna,bigdog1,alleycat,12345qaz,narnia,mustang2,tanya1,gianni,apollo11,wetter,clovis,escalade,rainbows,freddy1,smart1,daisydog,s123456,cocksucker,pushkin,lefty,sambo,fyutkjxtr,hiziad,boyz,whiplash,orchard,newark,adrenalin,1598753,bootsie,chelle,trustme,chewy,golfgti,tuscl,ambrosia,5wr2i7h8,penetration,shonuf,jughead,payday,stickman,gotham,kolokol,johnny5,kolbasa,stang,puppydog,charisma,gators1,mone,jakarta,draco,nightmar,01011973,inlove,laetitia,02091973,tarpon,nautica,meadow,0192837465,luckyone,14881488,chessie,goldeney,tarakan,69camaro,bungle,wordup,interne,fuckme2,515000,dragonfl,sprout,02081974,gerbil,bandit1,02071971,melanie1,phialpha,camber,kathy1,adriano,gonzo1,10293847,bigjohn,bismarck,7777777a,scamper,12348765,rabbits,222777,bynthytn,dima123,alexander1,mallorca,dragster,favorite6,beethove,burner,cooper1,fosters,hello2,normandy,777999,sebring,1michael,lauren1,blake1,killa,02091971,nounours,trumpet1,thumper1,playball,xantia,rugby1,rocknroll,guillaum,angela1,strelok,prosper,buttercup,masterp,dbnfkbr,cambridg,venom,treefrog,lumina,1234566,supra,sexybabe,freee,shen,frogs,driller,pavement,grace1,dicky,checker,smackdown,pandas,cannibal,asdffdsa,blue42,zyjxrf,nthvbyfnjh,melrose,neon,jabber,gamma,369258147,aprilia,atticus,benessere,catcher,skipper1,azertyuiop,sixty9,thierry,treetop,jello,melons,123456789qwe,tantra,buzzer,catnip,bouncer,computer1,sexyone,ananas,young1,olenka,sexman,mooses,kittys,sephiroth,contra,hallowee,skylark,sparkles,777333,1qazxsw23edc,lucas1,q1w2e3r,gofast,hannes,amethyst,ploppy,flower2,hotass,amatory,volleyba,dixie1,bettyboo,ticklish,02061974,frenchy,phish1,murphy1,trustno,02061972,leinad,mynameis,spooge,jupiter1,hyundai,frosch,junkmail,abacab,marbles,32167,casio,sunshine1,wayne1,longhair,caster,snicker,02101973,gannibal,skinhead,hansol,gatsby,segblue2,montecar,plato,gumby,kaboom,matty,bosco1,888999,jazzy,panter,jesus123,charlie2,giulia,candyass,sex69,travis1,farmboy,special1,02041973,letsdoit,password01,allison1,abcdefg1,notredam,ilikeit,789654123,liberty1,rugger,uptown,alcatraz,123456w,airman,007bond,navajo,kenobi,terrier,stayout,grisha,frankie1,fluff,1qazzaq1,1234561,virginie,1234568,tango1,werdna,octopus,fitter,dfcbkbcf,blacklab,115599,montrose,allen1,supernova,frederik,ilovepussy,justice1,radeon,playboy2,blubber,sliver,swoosh,motocros,lockdown,pearls,thebear,istheman,pinetree,biit,1234rewq,rustydog,tampabay,titts,babycake,jehovah,vampire1,streaming,collie,camil,fidelity,calvin1,stitch,gatit,restart,puppy1,budgie,grunt,capitals,hiking,dreamcas,zorro1,321678,riffraff,makaka,playmate,napalm,rollin,amstel,zxcvb123,samanth,rumble,fuckme69,jimmys,951357,pizzaman,1234567899,tralala,delpiero,alexi,yamato,itisme,1million,vfndtq,kahlua,londo,wonderboy,carrots,tazz,ratboy,rfgecnf,02081973,nico,fujitsu,tujhrf,sergbest,blobby,02051970,sonic1,1357911,smirnov,video1,panhead,bucky,02031974,44332211,duffer,cashmoney,left4dead,bagpuss,salman,01011972,titfuck,66613666,england1,malish,dresden,lemans,darina,zapper,123456as,123456qqq,met2002,02041972,redstar,blue23,1234509876,pajero,booyah,please1,tetsuo,semper,finder,hanuman,sunlight,123456n,02061971,treble,cupoi,password99,dimitri,3ip76k2,popcorn1,lol12345,stellar,nympho,shark1,keith1,saskia,bigtruck,revoluti,rambo1,asd222,feelgood,phat,gogators,bismark,cola,puck,furball,burnout,slonik,bowtie,mommy1,icecube,fabienn,mouser,papamama,rolex,giants1,blue11,trooper1,momdad,iklo,morten,rhubarb,gareth,123456d,blitz,canada1,r2d2,brest,tigercat,usmarine,lilbit,benny1,azrael,lebowski,12345r,madagaskar,begemot,loverman,dragonballz,italiano,mazda3,naughty1,onions,diver1,cyrano,capcom,asdfg123,forlife,fisherman,weare138,requiem,mufasa,alpha123,piercing,hellas,abracadabra,duckman,caracas,macintos,02011971,jordan2,crescent,fduecn,hogtied,eatmenow,ramjet,18121812,kicksass,whatthe,discus,rfhfvtkmrf,rufus1,sqdwfe,mantle,vegitto,trek,dan123,paladin1,rudeboy,liliya,lunchbox,riversid,acapulco,libero,dnsadm,maison,toomuch,boobear,hemlock,sextoy,pugsley,misiek,athome,migue,altoids,marcin,123450,rhfcfdbwf,jeter2,rhinos,rjhjkm,mercury1,ronaldinho,shampoo,makayla,kamilla,masterbating,tennesse,holger,john1,matchbox,hores,poptart,parlament,goodyear,asdfgh1,02081970,hardwood,alain,erection,hfytnrb,highlife,implants,benjami,dipper,jeeper,bendover,supersonic,babybear,laserjet,gotenks,bama,natedogg,aol123,pokemo,rabbit1,raduga,sopranos,cashflow,menthol,pharao,hacking,334455,ghjcnbnenrf,lizzy,muffin1,pooky,penis1,flyer,gramma,dipset,becca,ireland1,diana1,donjuan,pong,ziggy1,alterego,simple1,cbr900,logger,111555,claudia1,cantona7,matisse,ljxtymrf,victori,harle,mamas,encore,mangos,iceman1,diamon,alexxx,tiamat,5000,desktop,mafia,smurf,princesa,shojou,blueberr,welkom,maximka,123890,123q123,tammy1,bobmarley,clips,demon666,ismail,termite,laser1,missie,altair,donna1,bauhaus,trinitron,mogwai,flyers88,juniper,nokia5800,boroda,jingles,qwerasdfzxcv,shakur,777666,legos,mallrats,1qazxsw,goldeneye,tamerlan,julia1,backbone,spleen,49ers,shady,darkone,medic1,justi,giggle,cloudy,aisan,douche,parkour,bluejay,huskers1,redwine,1qw23er4,satchmo,1231234,nineball,stewart1,ballsack,probes,kappa,amiga,flipper1,dortmund,963258,trigun,1237895,homepage,blinky,screwy,gizzmo,belkin,chemist,coolhand,chachi,braves1,thebest,greedisgood,pro100,banana1,101091m,123456g,wonderfu,barefeet,8inches,1111qqqq,kcchiefs,qweasdzxc123,metal1,jennifer1,xian,asdasd123,pollux,cheerleaers,fruity,mustang5,turbos,shopper,photon,espana,hillbill,oyster,macaroni,gigabyte,jesper,motown,tuxedo,buster12,triplex,cyclones,estrell,mortis,holla,456987,fiddle,sapphic,jurassic,thebeast,ghjcnjq,baura,spock1,metallica1,karaoke,nemrac58,love1234,02031970,flvbybcnhfnjh,frisbee,diva,ajax,feathers,flower1,soccer11,allday,mierda,pearl1,amature,marauder,333555,redheads,womans,egorka,godbless,159263,nimitz,aaaa1111,sashka,madcow,socce,greywolf,baboon,pimpdaddy,123456789r,reloaded,lancia,rfhfylfi,dicker,placid,grimace,22446688,olemiss,whores,culinary,wannabe,maxi,1234567aa,amelie,riley1,trample,phantom1,baberuth,bramble,asdfqwer,vides,4you,abc123456,taichi,aztnm,smother,outsider,hakr,blackhawk,bigblack,girlie,spook,valeriya,gianluca,freedo,1q2q3q4q,handbag,lavalamp,cumm,pertinant,whatup,nokia123,redlight,patrik,111aaa,poppy1,dfytxrf,aviator,sweeps,kristin1,cypher,elway,yinyang,access1,poophead,tucson,noles1,monterey,waterfal,dank,dougal,918273,suede,minnesot,legman,bukowski,ganja,mammoth,riverrat,asswipe,daredevi,lian,arizona1,kamikadze,alex1234,smile1,angel2,55bgates,bellagio,0001,wanrltw,stiletto,lipton,arsena,biohazard,bbking,chappy,tetris,as123456,darthvad,lilwayne,nopassword,7412369,123456789987654321,natchez,glitter,14785236,mytime,rubicon,moto,pyon,wazzup,tbird,shane1,nightowl,getoff,beckham7,trueblue,hotgirl,nevermin,deathnote,13131,taffy,bigal,copenhag,apricot,gallaries,dtkjcbgtl,totoro,onlyone,civicsi,jesse1,baby123,sierra1,festus,abacus,sickboy,fishtank,fungus,charle,golfpro,teensex,mario66,seaside,aleksei,rosewood,blackberry,1020304050,bedlam,schumi,deerhunt,contour,darkelf,surveyor,deltas,pitchers,741258963,dipstick,funny1,lizzard,112233445566,jupiter2,softtail,titman,greenman,z1x2c3v4b5,smartass,12345677,notnow,myworld,nascar1,chewbacc,nosferatu,downhill,dallas22,kuan,blazers,whales,soldat,craving,powerman,yfcntyf,hotrats,cfvceyu,qweasdzx,princess1,feline,qqwwee,chitown,1234qaz,mastermind,114477,dingbat,care1839,standby,kismet,atreides,dogmeat,icarus,monkeyboy,alex1,mouses,nicetits,sealteam,chopper1,crispy,winter99,rrpass1,myporn,myspace1,corazo,topolino,ass123,lawman,muffy,orgy,1love,passord,hooyah,ekmzyf,pretzel,amonra,nestle,01011950,jimbeam,happyman,z12345,stonewal,helios,manunited,harcore,dick1,gaymen,2hot4u,light1,qwerty13,kakashi,pjkjnj,alcatel,taylo,allah,buddydog,ltkmaby,mongo,blonds,start123,audia6,123456v,civilwar,bellaco,turtles,mustan,deadspin,aaa123,fynjirf,lucky123,tortoise,amor,summe,waterski,zulu,drag0n,dtxyjcnm,gizmos,strife,interacial,pusyy,goose1,bear1,equinox,matri,jaguar1,tobydog,sammys,nachos,traktor,bryan1,morgoth,444555,dasani,miami1,mashka,xxxxxx1,ownage,nightwin,hotlips,passmast,cool123,skolko,eldiablo,manu,1357908642,screwyou,badabing,foreplay,hydro,kubrick,seductive,demon1,comeon,galileo,aladdin,metoo,happines,902100,mizuno,caddy,bizzare,girls1,redone,ohmygod,sable,bonovox,girlies,hamper,opus,gizmodo1,aaabbb,pizzahut,999888,rocky2,anton1,kikimora,peavey,ocelot,a1a2a3a4,2wsx3edc,jackie1,solace,sprocket,galary,chuck1,volvo1,shurik,poop123,locutus,virago,wdtnjxtr,tequier,bisexual,doodles,makeitso,fishy,789632145,nothing1,fishcake,sentry,libertad,oaktree,fivestar,adidas1,vegitta,mississi,spiffy,carme,neutron,vantage,agassi,boners,123456789v,hilltop,taipan,barrage,kenneth1,fister,martian,willem,lfybkf,bluestar,moonman,ntktdbpjh,paperino,bikers,daffy,benji,quake,dragonfly,suckcock,danilka,lapochka,belinea,calypso,asshol,camero1,abraxas,mike1234,womam,q1q2q3q4q5,youknow,maxpower,pic's,audi80,sonora,raymond1,tickler,tadpole,belair,crazyman,finalfantasy,999000,jonatha,paisley,kissmyas,morgana,monste,mantra,spunk,magic123,jonesy,mark1,alessand,741258,baddest,ghbdtnrfrltkf,zxccxz,tictac,augustin,racers,7grout,foxfire,99762000,openit,nathanie,1z2x3c4v5b,seadog,gangbanged,lovehate,hondacbr,harpoon,mamochka,fisherma,bismilla,locust,wally1,spiderman1,saffron,utjhubq,123456987,20spanks,safeway,pisser,bdfyjd,kristen1,bigdick1,magenta,vfhujif,anfisa,friday13,qaz123wsx,0987654321q,tyrant,guan,meggie,kontol,nurlan,ayanami,rocket1,yaroslav,websol76,mutley,hugoboss,websolutions,elpaso,gagarin,badboys,sephirot,918273645,newuser,qian,edcrfv,booger1,852258,lockout,timoxa94,mazda323,firedog,sokolova,skydiver,jesus777,1234567890z,soulfly,canary,malinka,guillerm,hookers,dogfart,surfer1,osprey,india123,rhjkbr,stoppedby,nokia5530,123456789o,blue1,werter,divers,3000,123456f,alpina,cali,whoknows,godspeed,986532,foreskin,fuzzy1,heyyou,didier,slapnuts,fresno,rosebud1,sandman1,bears1,blade1,honeybun,queen1,baronn,pakista,philipp,9111961,topsecret,sniper1,214365,slipper,letsfuck,pippen33,godawgs,mousey,qw123456,scrotum,loveis,lighthou,bp2002,nancy123,jeffrey1,susieq,buddy2,ralphie,trout1,willi,antonov,sluttey,rehbwf,marty1,darian,losangeles,letme1n,12345d,pusssy,godiva,ender,golfnut,leonidas,a1b2c3d4e5,puffer,general1,wizzard,lehjxrf,racer1,bigbucks,cool12,buddys,zinger,esprit,vbienrf,josep,tickling,froggie,987654321a,895623,daddys,crumbs,gucci,mikkel,opiate,tracy1,christophe,came11,777555,petrovich,humbug,dirtydog,allstate,horatio,wachtwoord,creepers,squirts,rotary,bigd,georgia1,fujifilm,2sweet,dasha,yorkie,slimjim,wiccan,kenzie,system1,skunk,b12345,getit,pommes,daredevil,sugars,bucker,piston,lionheart,1bitch,515051,catfight,recon,icecold,fantom,vodafone,kontakt,boris1,vfcnth,canine,01011961,valleywa,faraon,chickenwing101,qq123456,livewire,livelife,roosters,jeepers,ilya1234,coochie,pavlik,dewalt,dfhdfhf,architec,blackops,1qaz2wsx3edc4rfv,rhfcjnf,wsxedc,teaser,sebora,25252,rhino1,ankara,swifty,decimal,redleg,shanno,nermal,candies,smirnova,dragon01,photo1,ranetki,a1s2d3f4g5,axio,wertzu,maurizio,6uldv8,zxcvasdf,punkass,flowe,graywolf,peddler,3rjs1la7qe,mpegs,seawolf,ladyboy,pianos,piggies,vixen,alexus,orpheus,gdtrfb,z123456,macgyver,hugetits,ralph1,flathead,maurici,mailru,goofball,nissan1,nikon,stopit,odin,big1,smooch,reboot,famil,bullit,anthony7,gerhard,methos,124038,morena,eagle2,jessica2,zebras,getlost,gfynthf,123581321,sarajevo,indon,comets,tatjana,rfgbnjirf,joystick,batman12,123456c,sabre,beerme,victory1,kitties,1475369,badboy1,booboo1,comcast,slava,squid,saxophon,lionhear,qaywsx,bustle,nastena,roadway,loader,hillside,starlight,24681012,niggers,access99,bazooka,molly123,blackice,bandi,cocacol,nfhfrfy,timur,muschi,horse1,quant4307s,squerting,oscars,mygirls,flashman,tangerin,goofy1,p0o9i8,housewifes,newness,monkey69,escorpio,password11,hippo,warcraft3,qazxsw123,qpalzm,ribbit,ghbdtndctv,bogota,star123,258000,lincoln1,bigjim,lacoste,firestorm,legenda,indain,ludacris,milamber,1009,evangeli,letmesee,a111111,hooters1,bigred1,shaker,husky,a4tech,cnfkrth,argyle,rjhjdf,nataha,0o9i8u7y,gibson1,sooners1,glendale,archery,hoochie,stooge,aaaaaa1,scorpions,school1,vegas1,rapier,mike23,bassoon,groupd2013,macaco,baker1,labia,freewill,santiag,silverado,butch1,vflfufcrfh,monica1,rugrat,cornhole,aerosmit,bionicle,gfgfvfvf,daniel12,virgo,fmale,favorite2,detroit1,pokey,shredder,baggies,wednesda,cosmo1,mimosa,sparhawk,firehawk,romario,911turbo,funtimes,fhntvrf,nexus6,159753456,timothy1,bajingan,terry1,frenchie,raiden,1mustang,babemagnet,74123698,nadejda,truffles,rapture,douglas1,lamborghini,motocross,rjcvjc,748596,skeeter1,dante1,angel666,telecom,carsten,pietro,bmw318,astro1,carpediem,samir,orang,helium,scirocco,fuzzball,rushmore,rebelz,hotspur,lacrimosa,chevys10,madonna1,domenico,yfnfirf,jachin,shelby1,bloke,dawgs,dunhill,atlanta1,service1,mikado,devilman,angelit,reznor,euphoria,lesbain,checkmat,browndog,phreak,blaze1,crash1,farida,mutter,luckyme,horsemen,vgirl,jediknig,asdas,cesare,allnight,rockey,starlite,truck1,passfan,close-up,samue,cazzo,wrinkles,homely,eatme1,sexpot,snapshot,dima1995,asthma,thetruth,ducky,blender,priyanka,gaucho,dutchman,sizzle,kakarot,651550,passcode,justinbieber,666333,elodie,sanjay,110442,alex01,lotus1,2300mj,lakshmi,zoomer,quake3,12349876,teapot,12345687,ramada,pennywis,striper,pilot1,chingon,optima,nudity,ethan1,euclid,beeline,loyola,biguns,zaq12345,bravo1,disney1,buffa,assmunch,vivid,6661313,wellingt,aqwzsx,madala11,9874123,sigmar,pictere,tiptop,bettyboop,dinero,tahiti,gregory1,bionic,speed1,fubar1,lexus1,denis1,hawthorn,saxman,suntzu,bernhard,dominika,camaro1,hunter12,balboa,bmw2002,seville,diablo1,vfhbyjxrf,1234abc,carling,lockerroom,punani,darth,baron1,vaness,1password,libido,picher,232425,karamba,futyn007,daydream,11001001,dragon123,friends1,bopper,rocky123,chooch,asslover,shimmer,riddler,openme,tugboat,sexy123,midori,gulnara,christo,swatch,laker,offroad,puddles,hackers,mannheim,manager1,horseman,roman1,dancer1,komputer,pictuers,nokia5130,ejaculation,lioness,123456y,evilone,nastenka,pushok,javie,lilman,3141592,mjolnir,toulouse,pussy2,bigworm,smoke420,fullback,extensa,dreamcast,belize,delboy,willie1,casablanca,csyjxtr,ricky1,bonghit,salvator,basher,pussylover,rosie1,963258741,vivitron,cobra427,meonly,armageddon,myfriend,zardoz,qwedsazxc,kraken,fzappa,starfox,333999,illmatic,capoeira,weenie,ramzes,freedom2,toasty,pupkin,shinigami,fhvfutljy,nocturne,churchil,thumbnils,tailgate,neworder,sexymama,goarmy,cerebus,michelle1,vbifyz,surfsup,earthlin,dabulls,basketbal,aligator,mojojojo,saibaba,welcome2,wifes,wdtnjr,12345w,slasher,papabear,terran,footman,hocke,153759,texans,tom123,sfgiants,billabong,aassdd,monolith,xxx777,l3tm31n,ticktock,newone,hellno,japanees,contortionist,admin123,scout1,alabama1,divx1,rochard,privat,radar1,bigdad,fhctybq,tortuga,citrus,avanti,fantasy1,woodstock,s12345,fireman1,embalmer,woodwork,bonzai,konyor,newstart,jigga,panorama,goats,smithy,rugrats,hotmama,daedalus,nonstop,fruitbat,lisenok,quaker,violator,12345123,my3sons,cajun,fraggle,gayboy,oldfart,vulva,knickerless,orgasms,undertow,binky,litle,kfcnjxrf,masturbation,bunnie,alexis1,planner,transexual,sparty,leeloo,monies,fozzie,stinger1,landrove,anakonda,scoobie,yamaha1,henti,star12,rfhlbyfk,beyonce,catfood,cjytxrf,zealots,strat,fordtruc,archangel,silvi,sativa,boogers,miles1,bigjoe,tulip,petite,greentea,shitter,jonboy,voltron,morticia,evanescence,3edc4rfv,longshot,windows1,serge,aabbcc,starbucks,sinful,drywall,prelude1,www123,camel1,homebrew,marlins,123412,letmeinn,domini,swampy,plokij,fordf350,webcam,michele1,bolivi,27731828,wingzero,qawsedrftg,shinji,sverige,jasper1,piper1,cummer,iiyama,gocats,amour,alfarome,jumanji,mike69,fantasti,1monkey,w00t88,shawn1,lorien,1a2s3d4f5g,koleso,murph,natascha,sunkist,kennwort,emine,grinder,m12345,q1q2q3q4,cheeba,money2,qazwsxedc1,diamante,prosto,pdiddy,stinky1,gabby1,luckys,franci,pornographic,moochie,gfhjdjp,samdog,empire1,comicbookdb,emili,motdepasse,iphone,braveheart,reeses,nebula,sanjose,bubba2,kickflip,arcangel,superbow,porsche911,xyzzy,nigger1,dagobert,devil1,alatam,monkey2,barbara1,12345v,vfpfafrf,alessio,babemagn,aceman,arrakis,kavkaz,987789,jasons,berserk,sublime1,rogue1,myspace,buckwhea,csyekz,pussy4me,vette1,boots1,boingo,arnaud,budlite,redstorm,paramore,becky1,imtheman,chango,marley1,milkyway,666555,giveme,mahalo,lux2000,lucian,paddy,praxis,shimano,bigpenis,creeper,newproject2004,rammstei,j3qq4h7h2v,hfljcnm,lambchop,anthony2,bugman,gfhjkm12,dreamer1,stooges,cybersex,diamant,cowboyup,maximus1,sentra,615243,goethe,manhatta,fastcar,selmer,1213141516,yfnfitymrf,denni,chewey,yankee1,elektra,123456789p,trousers,fishface,topspin,orwell,vorona,sodapop,motherfu,ibilltes,forall,kookie,ronald1,balrog,maximilian,mypasswo,sonny1,zzxxcc,tkfkdg,magoo,mdogg,heeled,gitara,lesbos,marajade,tippy,morozova,enter123,lesbean,pounded,asd456,fialka,scarab,sharpie,spanky1,gstring,sachin,12345asd,princeto,hellohel,ursitesux,billows,1234kekc,kombat,cashew,duracell,kseniya,sevenof9,kostik,arthur1,corvet07,rdfhnbhf,songoku,tiberian,needforspeed,1qwert,dropkick,kevin123,panache,libra,a123456a,kjiflm,vfhnsirf,cntgfy,iamcool,narut,buffer,sk8ordie,urlaub,fireblade,blanked,marishka,gemini1,altec,gorillaz,chief1,revival47,ironman1,space1,ramstein,doorknob,devilmaycry,nemesis1,sosiska,pennstat,monday1,pioner,shevchenko,detectiv,evildead,blessed1,aggie,coffees,tical,scotts,bullwink,marsel,krypto,adrock,rjitxrf,asmodeus,rapunzel,theboys,hotdogs,deepthro,maxpayne,veronic,fyyeirf,otter,cheste,abbey1,thanos,bedrock,bartok,google1,xxxzzz,rodent,montecarlo,hernande,mikayla,123456789l,bravehea,12locked,ltymub,pegasus1,ameteur,saltydog,faisal,milfnew,momsuck,everques,ytngfhjkz,m0nkey,businessbabe,cooki,custard,123456ab,lbvjxrf,outlaws,753357,qwerty78,udacha,insider,chees,fuckmehard,shotokan,katya,seahorse,vtldtlm,turtle1,mike12,beebop,heathe,everton1,darknes,barnie,rbcekz,alisher,toohot,theduke,555222,reddog1,breezy,bulldawg,monkeyman,baylee,losangel,mastermi,apollo1,aurelie,zxcvb12345,cayenne,bastet,wsxzaq,geibcnbr,yello,fucmy69,redwall,ladybird,bitchs,cccccc1,rktjgfnhf,ghjdthrf,quest1,oedipus,linus,impalass,fartman,12345k,fokker,159753a,optiplex,bbbbbb1,realtor,slipkno,santacru,rowdy,jelena,smeller,3984240,ddddd1,sexyme,janet1,3698741,eatme69,cazzone,today1,poobear,ignatius,master123,newpass1,heather2,snoopdogg,blondinka,pass12,honeydew,fuckthat,890098890,lovem,goldrush,gecko,biker1,llama,pendejo,avalanche,fremont,snowman1,gandolf,chowder,1a2b3c4d5e,flyguy,magadan,1fuck,pingvin,nokia5230,ab1234,lothar,lasers,bignuts,renee1,royboy,skynet,12340987,1122334,dragrace,lovely1,22334455,booter,12345612,corvett,123456qq,capital1,videoes,funtik,wyvern,flange,sammydog,hulkster,13245768,not4you,vorlon,omegared,l58jkdjp!,filippo,123mudar,samadams,petrus,chris12,charlie123,123456789123,icetea,sunderla,adrian1,123qweas,kazanova,aslan,monkey123,fktyeirf,goodsex,123ab,lbtest,banaan,bluenose,837519,asd12345,waffenss,whateve,1a2a3a4a,trailers,vfhbirf,bhbcrf,klaatu,turk182,monsoon,beachbum,sunbeam,succes,clyde1,viking1,rawhide,bubblegum,princ,mackenzi,hershey1,222555,dima55,niggaz,manatee,aquila,anechka,pamel,bugsbunn,lovel,sestra,newport1,althor,hornyman,wakeup,zzz111,phishy,cerber,torrent,thething,solnishko,babel,buckeye1,peanu,ethernet,uncencored,baraka,665544,chris2,rb26dett,willy1,choppers,texaco,biggirl,123456b,anna2614,sukebe,caralho,callofduty,rt6ytere,jesus7,angel12,1money,timelord,allblack,pavlova,romanov,tequiero,yitbos,lookup,bulls23,snowflake,dickweed,barks,lever,irisha,firestar,fred1234,ghjnjnbg,danman,gatito,betty1,milhouse,kbctyjr,masterbaiting,delsol,papit,doggys,123698741,bdfyjdf,invictus,bloods,kayla1,yourmama,apple2,angelok,bigboy1,pontiac1,verygood,yeshua,twins2,porn4me,141516,rasta69,james2,bosshog,candys,adventur,stripe,djkjlz,dokken,austin316,skins,hogwarts,vbhevbh,navigato,desperado,xxx666,cneltyn,vasiliy,hazmat,daytek,eightbal,fred1,four20,74227422,fabia,aerosmith,manue,wingchun,boohoo,hombre,sanity72,goatboy,fuckm,partizan,avrora,utahjazz,submarin,pussyeat,heinlein,control1,costaric,smarty,chuan,triplets,snowy,snafu,teacher1,vangogh,vandal,evergree,cochise,qwerty99,pyramid1,saab900,sniffer,qaz741,lebron23,mark123,wolvie,blackbelt,yoshi,feeder,janeway,nutella,fuking,asscock,deepak,poppie,bigshow,housewife,grils,tonto,cynthia1,temptress,irakli,belle1,russell1,manders,frank123,seabass,gforce,songbird,zippy1,naught,brenda1,chewy1,hotshit,topaz,43046721,girfriend,marinka,jakester,thatsme,planeta,falstaff,patrizia,reborn,riptide,cherry1,shuan,nogard,chino,oasis1,qwaszx12,goodlife,davis1,1911a1,harrys,shitfuck,12345678900,russian7,007700,bulls1,porshe,danil,dolphi,river1,sabaka,gobigred,deborah1,volkswagen,miamo,alkaline,muffdive,1letmein,fkbyrf,goodguy,hallo1,nirvan,ozzie,cannonda,cvbhyjdf,marmite,germany1,joeblow,radio1,love11,raindrop,159852,jacko,newday,fathead,elvis123,caspe,citibank,sports1,deuce,boxter,fakepass,golfman,snowdog,birthday4,nonmembe,niklas,parsifal,krasota,theshit,1235813,maganda,nikita1,omicron,cassie1,columbo,buick,sigma1,thistle,bassin,rickster,apteka,sienna,skulls,miamor,coolgirl,gravis,1qazxc,virgini,hunter2,akasha,batma,motorcyc,bambino,tenerife,fordf250,zhuan,iloveporn,markiza,hotbabes,becool,fynjybyf,wapapapa,forme,mamont,pizda,dragonz,sharon1,scrooge,mrbill,pfloyd,leeroy,natedog,ishmael,777111,tecumseh,carajo,nfy.irf,0000000000o,blackcock,fedorov,antigone,feanor,novikova,bobert,peregrin,spartan117,pumkin,rayman,manuals,tooltime,555333,bonethug,marina1,bonnie1,tonyhawk,laracroft,mahalkita,18273645,terriers,gamer,hoser,littlema,molotok,glennwei,lemon1,caboose,tater,12345654321,brians,fritz1,mistral,jigsaw,fuckshit,hornyguy,southside,edthom,antonio1,bobmarle,pitures,ilikesex,crafty,nexus,boarder,fulcrum,astonvil,yanks1,yngwie,account1,zooropa,hotlegs,sammi,gumbo,rover1,perkele,maurolarastefy,lampard,357753,barracud,dmband,abcxyz,pathfinder,335577,yuliya,micky,jayman,asdfg12345,1596321,halcyon,rerfhtre,feniks,zaxscd,gotyoass,jaycee,samson1,jamesb,vibrate,grandpri,camino,colossus,davidb,mamo4ka,nicky1,homer123,pinguin,watermelon,shadow01,lasttime,glider,823762,helen1,pyramids,tulane,osama,rostov,john12,scoote,bhbyrf,gohan,galeries,joyful,bigpussy,tonka,mowgli,astalavista,zzz123,leafs,dalejr8,unicorn1,777000,primal,bigmama,okmijn,killzone,qaz12345,snookie,zxcvvcxz,davidc,epson,rockman,ceaser,beanbag,katten,3151020,duckhunt,segreto,matros,ragnar,699669,sexsexse,123123z,fuckyeah,bigbutts,gbcmrf,element1,marketin,saratov,elbereth,blaster1,yamahar6,grime,masha,juneau,1230123,pappy,lindsay1,mooner,seattle1,katzen,lucent,polly1,lagwagon,pixie,misiaczek,666666a,smokedog,lakers24,eyeball,ironhors,ametuer,volkodav,vepsrf,kimmy,gumby1,poi098,ovation,1q2w3,drinker,penetrating,summertime,1dallas,prima,modles,takamine,hardwork,macintosh,tahoe,passthie,chiks,sundown,flowers1,boromir,music123,phaedrus,albert1,joung,malakas,gulliver,parker1,balder,sonne,jessie1,domainlock2005,express1,vfkbyf,youandme,raketa,koala,dhjnvytyjub,nhfrnjh,testibil,ybrbnjc,987654321q,axeman,pintail,pokemon123,dogggg,shandy,thesaint,11122233,x72jhhu3z,theclash,raptors,zappa1,djdjxrf,hell666,friday1,vivaldi,pluto1,lance1,guesswho,jeadmi,corgan,skillz,skippy1,mango1,gymnastic,satori,362514,theedge,cxfcnkbdfz,sparkey,deicide,bagels,lololol,lemmings,r4e3w2q1,silve,staind,schnuffi,dazzle,basebal1,leroy1,bilbo1,luckie,qwerty2,goodfell,hermione,peaceout,davidoff,yesterda,killah,flippy,chrisb,zelda1,headless,muttley,fuckof,tittys,catdaddy,photog,beeker,reaver,ram1500,yorktown,bolero,tryagain,arman,chicco,learjet,alexei,jenna1,go2hell,12s3t4p55,momsanaladventure,mustang9,protoss,rooter,ginola,dingo1,mojave,erica1,1qazse4,marvin1,redwolf,sunbird,dangerou,maciek,girsl,hawks1,packard1,excellen,dashka,soleda,toonces,acetate,nacked,jbond007,alligator,debbie1,wellhung,monkeyma,supers,rigger,larsson,vaseline,rjnzhf,maripos,123456asd,cbr600rr,doggydog,cronic,jason123,trekker,flipmode,druid,sonyvaio,dodges,mayfair,mystuff,fun4me,samanta,sofiya,magics,1ranger,arcane,sixtynin,222444,omerta,luscious,gbyudby,bobcats,envision,chance1,seaweed,holdem,tomate,mensch,slicer,acura1,goochi,qweewq,punter,repoman,tomboy,never1,cortina,gomets,147896321,369852147,dogma,bhjxrf,loglatin,eragon,strato,gazelle,growler,885522,klaudia,payton34,fuckem,butchie,scorpi,lugano,123456789k,nichola,chipper1,spide,uhbujhbq,rsalinas,vfylfhby,longhorns,bugatti,everquest,!qaz2wsx,blackass,999111,snakeman,p455w0rd,fanatic,family1,pfqxbr,777vlad,mysecret,marat,phoenix2,october1,genghis,panties1,cooker,citron,ace123,1234569,gramps,blackcoc,kodiak1,hickory,ivanhoe,blackboy,escher,sincity,beaks,meandyou,spaniel,canon1,timmy1,lancaste,polaroid,edinburg,fuckedup,hotman,cueball,golfclub,gopack,bookcase,worldcup,dkflbvbhjdbx,twostep,17171717aa,letsplay,zolushka,stella1,pfkegf,kingtut,67camaro,barracuda,wiggles,gjhjkm,prancer,patata,kjifhf,theman1,romanova,sexyass,copper1,dobber,sokolov,pomidor,algernon,cadman,amoremio,william2,silly1,bobbys,hercule,hd764nw5d7e1vb1,defcon,deutschland,robinhood,alfalfa,machoman,lesbens,pandora1,easypay,tomservo,nadezhda,goonies,saab9000,jordyn,f15eagle,dbrecz,12qwerty,greatsex,thrawn,blunted,baywatch,doggystyle,loloxx,chevy2,january1,kodak,bushel,78963214,ub6ib9,zz8807zpl,briefs,hawker,224488,first1,bonzo,brent1,erasure,69213124,sidewind,soccer13,622521,mentos,kolibri,onepiece,united1,ponyboy,keksa12,wayer,mypussy,andrej,mischa,mille,bruno123,garter,bigpun,talgat,familia,jazzy1,mustang8,newjob,747400,bobber,blackbel,hatteras,ginge,asdfjkl;,camelot1,blue44,rebbyt34,ebony1,vegas123,myboys,aleksander,ijrjkflrf,lopata,pilsner,lotus123,m0nk3y,andreev,freiheit,balls1,drjynfrnt,mazda1,waterpolo,shibumi,852963,123bbb,cezer121,blondie1,volkova,rattler,kleenex,ben123,sanane,happydog,satellit,qazplm,qazwsxedcrfvtgb,meowmix,badguy,facefuck,spice1,blondy,major1,25000,anna123,654321a,sober1,deathrow,patterso,china1,naruto1,hawkeye1,waldo1,butchy,crayon,5tgb6yhn,klopik,crocodil,mothra,imhorny,pookie1,splatter,slippy,lizard1,router,buratino,yahweh,123698,dragon11,123qwe456,peepers,trucker1,ganjaman,1hxboqg2,cheyanne,storys,sebastie,zztop,maddison,4rfv3edc,darthvader,jeffro,iloveit,victor1,hotty,delphin,lifeisgood,gooseman,shifty,insertions,dude123,abrupt,123masha,boogaloo,chronos,stamford,pimpster,kthjxrf,getmein,amidala,flubber,fettish,grapeape,dantes,oralsex,jack1,foxcg33,winchest,francis1,getin,archon,cliffy,blueman,1basebal,sport1,emmitt22,porn123,bignasty,morga,123hfjdk147,ferrar,juanito,fabiol,caseydog,steveo,peternorth,paroll,kimchi,bootleg,gaijin,secre,acacia,eatme2,amarillo,monkey11,rfhfgep,tylers,a1a2a3a4a5,sweetass,blower,rodina,babushka,camilo,cimbom,tiffan,vfnbkmlf,ohbaby,gotigers,lindsey1,dragon13,romulus,qazxsw12,zxcvbn1,dropdead,hitman47,snuggle,eleven11,bloopers,357mag,avangard,bmw320,ginscoot,dshade,masterkey,voodoo1,rootedit,caramba,leahcim,hannover,8phrowz622,tim123,cassius,000000a,angelito,zzzzz1,badkarma,star1,malaga,glenwood,footlove,golf1,summer12,helpme1,fastcars,titan1,police1,polinka,k.jdm,marusya,augusto,shiraz,pantyhose,donald1,blaise,arabella,brigada,c3por2d2,peter01,marco1,hellow,dillweed,uzumymw,geraldin,loveyou2,toyota1,088011,gophers,indy500,slainte,5hsu75kpot,teejay,renat,racoon,sabrin,angie1,shiznit,harpua,sexyred,latex,tucker1,alexandru,wahoo,teamwork,deepblue,goodison,rundmc,r2d2c3p0,puppys,samba,ayrton,boobed,999777,topsecre,blowme1,123321z,loudog,random1,pantie,drevil,mandolin,121212q,hottub,brother1,failsafe,spade1,matvey,open1234,carmen1,priscill,schatzi,kajak,gooddog,trojans1,gordon1,kayak,calamity,argent,ufhvjybz,seviyi,penfold,assface,dildos,hawkwind,crowbar,yanks,ruffles,rastus,luv2epus,open123,aquafina,dawns,jared1,teufel,12345c,vwgolf,pepsi123,amores,passwerd,01478520,boliva,smutty,headshot,password3,davidd,zydfhm,gbgbcmrf,pornpass,insertion,ceckbr,test2,car123,checkit,dbnfkbq,niggas,nyyankee,muskrat,nbuhtyjr,gunner1,ocean1,fabienne,chrissy1,wendys,loveme89,batgirl,cerveza,igorek,steel1,ragman,boris123,novifarm,sexy12,qwerty777,mike01,giveitup,123456abc,fuckall,crevice,hackerz,gspot,eight8,assassins,texass,swallows,123458,baldur,moonshine,labatt,modem,sydney1,voland,dbnfkz,hotchick,jacker,princessa,dawgs1,holiday1,booper,reliant,miranda1,jamaica1,andre1,badnaamhere,barnaby,tiger7,david12,margaux,corsica,085tzzqi,universi,thewall,nevermor,martin6,qwerty77,cipher,apples1,0102030405,seraphim,black123,imzadi,gandon,ducati99,1shadow,dkflbvbhjdyf,44magnum,bigbad,feedme,samantha1,ultraman,redneck1,jackdog,usmc0311,fresh1,monique1,tigre,alphaman,cool1,greyhoun,indycar,crunchy,55chevy,carefree,willow1,063dyjuy,xrated,assclown,federica,hilfiger,trivia,bronco1,mamita,100200300,simcity,lexingky,akatsuki,retsam,johndeere,abudfv,raster,elgato,businka,satanas,mattingl,redwing1,shamil,patate,mannn,moonstar,evil666,b123456,bowl300,tanechka,34523452,carthage,babygir,santino,bondarenko,jesuss,chico1,numlock,shyguy,sound1,kirby1,needit,mostwanted,427900,funky1,steve123,passions,anduril,kermit1,prospero,lusty,barakuda,dream1,broodwar,porky,christy1,mahal,yyyyyy1,allan1,1sexy,flintsto,capri,cumeater,heretic,robert2,hippos,blindax,marykay,collecti,kasumi,1qaz!qaz,112233q,123258,chemistr,coolboy,0o9i8u,kabuki,righton,tigress,nessie,sergej,andrew12,yfafyz,ytrhjvfyn,angel7,victo,mobbdeep,lemming,transfor,1725782,myhouse,aeynbr,muskie,leno4ka,westham1,cvbhyjd,daffodil,pussylicker,pamela1,stuffer,warehous,tinker1,2w3e4r,pluton,louise1,polarbea,253634,prime1,anatoliy,januar,wysiwyg,cobraya,ralphy,whaler,xterra,cableguy,112233a,porn69,jamesd,aqualung,jimmy123,lumpy,luckyman,kingsize,golfing1,alpha7,leeds1,marigold,lol1234,teabag,alex11,10sne1,saopaulo,shanny,roland1,basser,3216732167,carol1,year2005,morozov,saturn1,joseluis,bushed,redrock,memnoch,lalaland,indiana1,lovegod,gulnaz,buffalos,loveyou1,anteater,pattaya,jaydee,redshift,bartek,summerti,coffee1,ricochet,incest,schastie,rakkaus,h2opolo,suikoden,perro,dance1,loveme1,whoopass,vladvlad,boober,flyers1,alessia,gfcgjhn,pipers,papaya,gunsling,coolone,blackie1,gonads,gfhjkzytn,foxhound,qwert12,gangrel,ghjvtntq,bluedevi,mywife,summer01,hangman,licorice,patter,vfr750,thorsten,515253,ninguna,dakine,strange1,mexic,vergeten,12345432,8phrowz624,stampede,floyd1,sailfish,raziel,ananda,giacomo,freeme,crfprf,74185296,allstars,master01,solrac,gfnhbjn,bayliner,bmw525,3465xxx,catter,single1,michael3,pentium4,nitrox,mapet123456,halibut,killroy,xxxxx1,phillip1,poopsie,arsenalfc,buffys,kosova,all4me,32165498,arslan,opensesame,brutis,charles2,pochta,nadegda,backspac,mustang0,invis,gogeta,654321q,adam25,niceday,truckin,gfdkbr,biceps,sceptre,bigdave,lauras,user345,sandys,shabba,ratdog,cristiano,natha,march13,gumball,getsdown,wasdwasd,redhead1,dddddd1,longlegs,13572468,starsky,ducksoup,bunnys,omsairam,whoami,fred123,danmark,flapper,swanky,lakings,yfhenj,asterios,rainier,searcher,dapper,ltdjxrf,horsey,seahawk,shroom,tkfkdgo,aquaman,tashkent,number9,messi10,1asshole,milenium,illumina,vegita,jodeci,buster01,bareback,goldfinger,fire1,33rjhjds,sabian,thinkpad,smooth1,sully,bonghits,sushi1,magnavox,colombi,voiture,limpone,oldone,aruba,rooster1,zhenya,nomar5,touchdow,limpbizkit,rhfcfdxbr,baphomet,afrodita,bball1,madiso,ladles,lovefeet,matthew2,theworld,thunderbird,dolly1,123rrr,forklift,alfons,berkut,speedy1,saphire,oilman,creatine,pussylov,bastard1,456258,wicked1,filimon,skyline1,fucing,yfnfkbz,hot123,abdulla,nippon,nolimits,billiard,booty1,buttplug,westlife,coolbean,aloha1,lopas,asasin,1212121,october2,whodat,good4u,d12345,kostas,ilya1992,regal,pioneer1,volodya,focus1,bastos,nbvjif,fenix,anita1,vadimka,nickle,jesusc,123321456,teste,christ1,essendon,evgenii,celticfc,adam1,forumwp,lovesme,26exkp,chillout,burly,thelast1,marcus1,metalgear,test11,ronaldo7,socrate,world1,franki,mommie,vicecity,postov1000,charlie3,oldschool,333221,legoland,antoshka,counterstrike,buggy,mustang3,123454,qwertzui,toons,chesty,bigtoe,tigger12,limpopo,rerehepf,diddle,nokia3250,solidsnake,conan1,rockroll,963369,titanic1,qwezxc,cloggy,prashant,katharin,maxfli,takashi,cumonme,michael9,mymother,pennstate,khalid,48151623,fightclub,showboat,mateusz,elrond,teenie,arrow1,mammamia,dustydog,dominator,erasmus,zxcvb1,1a2a3a,bones1,dennis1,galaxie,pleaseme,whatever1,junkyard,galadriel,charlies,2wsxzaq1,crimson1,behemoth,teres,master11,fairway,shady1,pass99,1batman,joshua12,baraban,apelsin,mousepad,melon,twodogs,123321qwe,metalica,ryjgrf,pipiska,rerfhfxf,lugnut,cretin,iloveu2,powerade,aaaaaaa1,omanko,kovalenko,isabe,chobits,151nxjmt,shadow11,zcxfcnkbdf,gy3yt2rgls,vfhbyrf,159753123,bladerunner,goodone,wonton,doodie,333666999,fuckyou123,kitty123,chisox,orlando1,skateboa,red12345,destroye,snoogans,satan1,juancarlo,goheels,jetson,scottt,fuckup,aleksa,gfhfljrc,passfind,oscar123,derrick1,hateme,viper123,pieman,audi100,tuffy,andover,shooter1,10000,makarov,grant1,nighthaw,13576479,browneye,batigol,nfvfhf,chocolate1,7hrdnw23,petter,bantam,morlii,jediknight,brenden,argonaut,goodstuf,wisconsi,315920,abigail1,dirtbag,splurge,k123456,lucky777,valdepen,gsxr600,322223,ghjnjrjk,zaq1xsw2cde3,schwanz,walter1,letmein22,nomads,124356,codeblue,nokian70,fucke,footbal1,agyvorc,aztecs,passw0r,smuggles,femmes,ballgag,krasnodar,tamuna,schule,sixtynine,empires,erfolg,dvader,ladygaga,elite1,venezuel,nitrous,kochamcie,olivia1,trustn01,arioch,sting1,131415,tristar,555000,maroon,135799,marsik,555556,fomoco,natalka,cwoui,tartan,davecole,nosferat,hotsauce,dmitry,horus,dimasik,skazka,boss302,bluebear,vesper,ultras,tarantul,asd123asd,azteca,theflash,8ball,1footbal,titlover,lucas123,number6,sampson1,789852,party1,dragon99,adonai,carwash,metropol,psychnau,vthctltc,hounds,firework,blink18,145632,wildcat1,satchel,rice80,ghtktcnm,sailor1,cubano,anderso,rocks1,mike11,famili,dfghjc,besiktas,roygbiv,nikko,bethan,minotaur,rakesh,orange12,hfleuf,jackel,myangel,favorite7,1478520,asssss,agnieszka,haley1,raisin,htubyf,1buster,cfiekz,derevo,1a2a3a4a5a,baltika,raffles,scruffy1,clitlick,louis1,buddha1,fy.nrf,walker1,makoto,shadow2,redbeard,vfvfvskfhfve,mycock,sandydog,lineman,network1,favorite8,longdick,mustangg,mavericks,indica,1killer,cisco1,angelofwar,blue69,brianna1,bubbaa,slayer666,level42,baldrick,brutus1,lowdown,haribo,lovesexy,500000,thissuck,picker,stephy,1fuckme,characte,telecast,1bigdog,repytwjdf,thematrix,hammerhe,chucha,ganesha,gunsmoke,georgi,sheltie,1harley,knulla,sallas,westie,dragon7,conker,crappie,margosha,lisboa,3e2w1q,shrike,grifter,ghjcnjghjcnj,asdfg1,mnbvcxz1,myszka,posture,boggie,rocketman,flhtyfkby,twiztid,vostok,pi314159,force1,televizor,gtkmvtym,samhain,imcool,jadzia,dreamers,strannik,k2trix,steelhea,nikitin,commodor,brian123,chocobo,whopper,ibilljpf,megafon,ararat,thomas12,ghbrjkbcn,q1234567890,hibernia,kings1,jim123,redfive,68camaro,iawgk2,xavier1,1234567u,d123456,ndirish,airborn,halfmoon,fluffy1,ranchero,sneaker,soccer2,passion1,cowman,birthday1,johnn,razzle,glock17,wsxqaz,nubian,lucky2,jelly1,henderso,eric1,123123e,boscoe01,fuck0ff,simpson1,sassie,rjyjgkz,nascar3,watashi,loredana,janus,wilso,conman,david2,mothe,iloveher,snikers,davidj,fkmnthyfnbdf,mettss,ratfink,123456h,lostsoul,sweet16,brabus,wobble,petra1,fuckfest,otters,sable1,svetka,spartacu,bigstick,milashka,1lover,pasport,champagn,papichul,hrvatska,hondacivic,kevins,tacit,moneybag,gohogs,rasta1,246813579,ytyfdbcnm,gubber,darkmoon,vitaliy,233223,playboys,tristan1,joyce1,oriflame,mugwump,access2,autocad,thematri,qweqwe123,lolwut,ibill01,multisyn,1233211,pelikan,rob123,chacal,1234432,griffon,pooch,dagestan,geisha,satriani,anjali,rocketma,gixxer,pendrago,vincen,hellokit,killyou,ruger,doodah,bumblebe,badlands,galactic,emachines,foghorn,jackso,jerem,avgust,frontera,123369,daisymae,hornyboy,welcome123,tigger01,diabl,angel13,interex,iwantsex,rockydog,kukolka,sawdust,online1,3234412,bigpapa,jewboy,3263827,dave123,riches,333222,tony1,toggle,farter,124816,tities,balle,brasilia,southsid,micke,ghbdtn12,patit,ctdfcnjgjkm,olds442,zzzzzz1,nelso,gremlins,gypsy1,carter1,slut69,farcry,7415963,michael8,birdie1,charl,123456789abc,100001,aztec,sinjin,bigpimpi,closeup,atlas1,nvidia,doggone,classic1,manana,malcolm1,rfkbyf,hotbabe,rajesh,dimebag,ganjubas,rodion,jagr68,seren,syrinx,funnyman,karapuz,123456789n,bloomin,admin18533362,biggdogg,ocarina,poopy1,hellome,internet1,booties,blowjobs,matt1,donkey1,swede,1jennife,evgeniya,lfhbyf,coach1,444777,green12,patryk,pinewood,justin12,271828,89600506779,notredame,tuborg,lemond,sk8ter,million1,wowser,pablo1,st0n3,jeeves,funhouse,hiroshi,gobucs,angeleye,bereza,winter12,catalin,qazedc,andros,ramazan,vampyre,sweethea,imperium,murat,jamest,flossy,sandeep,morgen,salamandra,bigdogg,stroller,njdevils,nutsack,vittorio,%%passwo,playful,rjyatnrf,tookie,ubnfhf,michi,777444,shadow13,devils1,radiance,toshiba1,beluga,amormi,dandfa,trust1,killemall,smallville,polgara,billyb,landscap,steves,exploite,zamboni,damage11,dzxtckfd,trader12,pokey1,kobe08,damager,egorov,dragon88,ckfdbr,lisa69,blade2,audis4,nelson1,nibbles,23176djivanfros,mutabor,artofwar,matvei,metal666,hrfzlz,schwinn,poohbea,seven77,thinker,123456789qwerty,sobriety,jakers,karamelka,vbkfyf,volodin,iddqd,dale03,roberto1,lizaveta,qqqqqq1,cathy1,08154711,davidm,quixote,bluenote,tazdevil,katrina1,bigfoot1,bublik,marma,olechka,fatpussy,marduk,arina,nonrev67,qqqq1111,camill,wtpfhm,truffle,fairview,mashina,voltaire,qazxswedcvfr,dickface,grassy,lapdance,bosstone,crazy8,yackwin,mobil,danielit,mounta1n,player69,bluegill,mewtwo,reverb,cnthdf,pablito,a123321,elena1,warcraft1,orland,ilovemyself,rfntyjr,joyride,schoo,dthjxrf,thetachi,goodtimes,blacksun,humpty,chewbacca,guyute,123xyz,lexicon,blue45,qwe789,galatasaray,centrino,hendrix1,deimos,saturn5,craig1,vlad1996,sarah123,tupelo,ljrnjh,hotwife,bingos,1231231,nicholas1,flamer,pusher,1233210,heart1,hun999,jiggy,giddyup,oktober,123456zxc,budda,galahad,glamur,samwise,oneton,bugsbunny,dominic1,scooby2,freetime,internat,159753852,sc00ter,wantit,mazinger,inflames,laracrof,greedo,014789,godofwar,repytwjd,water123,fishnet,venus1,wallace1,tenpin,paula1,1475963,mania,novikov,qwertyasdfgh,goldmine,homies,777888999,8balls,holeinon,paper1,samael,013579,mansur,nikit,ak1234,blueline,polska1,hotcock,laredo,windstar,vbkbwbz,raider1,newworld,lfybkrf,catfish1,shorty1,piranha,treacle,royale,2234562,smurfs,minion,cadence,flapjack,123456p,sydne,135531,robinhoo,nasdaq,decatur,cyberonline,newage,gemstone,jabba,touchme,hooch,pigdog,indahous,fonzie,zebra1,juggle,patrick2,nihongo,hitomi,oldnavy,qwerfdsa,ukraina,shakti,allure,kingrich,diane1,canad,piramide,hottie1,clarion,college1,5641110,connect1,therion,clubber,velcro,dave1,astra1,13579-,astroboy,skittle,isgreat,photoes,cvzefh1gkc,001100,2cool4u,7555545,ginger12,2wsxcde3,camaro69,invader,domenow,asd1234,colgate,qwertasdfg,jack123,pass01,maxman,bronte,whkzyc,peter123,bogie,yecgaa,abc321,1qay2wsx,enfield,camaroz2,trashman,bonefish,system32,azsxdcfvgb,peterose,iwantyou,dick69,temp1234,blastoff,capa200,connie1,blazin,12233445,sexybaby,123456j,brentfor,pheasant,hommer,jerryg,thunders,august1,lager,kapusta,boobs1,nokia5300,rocco1,xytfu7,stars1,tugger,123sas,blingbling,1bubba,0wnsyo0,1george,baile,richard2,habana,1diamond,sensatio,1golfer,maverick1,1chris,clinton1,michael7,dragons1,sunrise1,pissant,fatim,mopar1,levani,rostik,pizzapie,987412365,oceans11,748159263,cum4me,palmetto,4r3e2w1q,paige1,muncher,arsehole,kratos,gaffer,banderas,billys,prakash,crabby,bungie,silver12,caddis,spawn1,xboxlive,sylvania,littlebi,524645,futura,valdemar,isacs155,prettygirl,big123,555444,slimer,chicke,newstyle,skypilot,sailormoon,fatluvr69,jetaime,sitruc,jesuschrist,sameer,bear12,hellion,yendor,country1,etnies,conejo,jedimast,darkknight,toobad,yxcvbn,snooks,porn4life,calvary,alfaromeo,ghostman,yannick,fnkfynblf,vatoloco,homebase,5550666,barret,1111111111zz,odysseus,edwardss,favre4,jerrys,crybaby,xsw21qaz,firestor,spanks,indians1,squish,kingair,babycakes,haters,sarahs,212223,teddyb,xfactor,cumload,rhapsody,death123,three3,raccoon,thomas2,slayer66,1q2q3q4q5q,thebes,mysterio,thirdeye,orkiox.,nodoubt,bugsy,schweiz,dima1996,angels1,darkwing,jeronimo,moonpie,ronaldo9,peaches2,mack10,manish,denise1,fellowes,carioca,taylor12,epaulson,makemoney,oc247ngucz,kochanie,3edcvfr4,vulture,1qw23e,1234567z,munchie,picard1,xthtgfirf,sportste,psycho1,tahoe1,creativ,perils,slurred,hermit,scoob,diesel1,cards1,wipeout,weeble,integra1,out3xf,powerpc,chrism,kalle,ariadne,kailua,phatty,dexter1,fordman,bungalow,paul123,compa,train1,thejoker,jys6wz,pussyeater,eatmee,sludge,dominus,denisa,tagheuer,yxcvbnm,bill1,ghfdlf,300zx,nikita123,carcass,semaj,ramone,muenchen,animal1,greeny,annemari,dbrf134,jeepcj7,mollys,garten,sashok,ironmaid,coyotes,astoria,george12,westcoast,primetim,123456o,panchito,rafae,japan1,framer,auralo,tooshort,egorova,qwerty22,callme,medicina,warhawk,w1w2w3w4,cristia,merli,alex22,kawaii,chatte,wargames,utvols,muaddib,trinket,andreas1,jjjjj1,cleric,scooters,cuntlick,gggggg1,slipknot1,235711,handcuff,stussy,guess1,leiceste,ppppp1,passe,lovegun,chevyman,hugecock,driver1,buttsex,psychnaut1,cyber1,black2,alpha12,melbourn,man123,metalman,yjdsqujl,blondi,bungee,freak1,stomper,caitlin1,nikitina,flyaway,prikol,begood,desperad,aurelius,john1234,whosyourdaddy,slimed123,bretagne,den123,hotwheel,king123,roodypoo,izzicam,save13tx,warpten,nokia3310,samolet,ready1,coopers,scott123,bonito,1aaaaa,yomomma,dawg1,rache,itworks,asecret,fencer,451236,polka,olivetti,sysadmin,zepplin,sanjuan,479373,lickem,hondacrx,pulamea,future1,naked1,sexyguy,w4g8at,lollol1,declan,runner1,rumple,daddy123,4snz9g,grandprix,calcio,whatthefuck,nagrom,asslick,pennst,negrit,squiggy,1223334444,police22,giovann,toronto1,tweet,yardbird,seagate,truckers,554455,scimitar,pescator,slydog,gaysex,dogfish,fuck777,12332112,qazxswed,morkovka,daniela1,imback,horny69,789123456,123456789w,jimmy2,bagger,ilove69,nikolaus,atdhfkm,rebirth,1111aaaa,pervasive,gjgeufq,dte4uw,gfhnbpfy,skeletor,whitney1,walkman,delorean,disco1,555888,as1234,ishikawa,fuck12,reaper1,dmitrii,bigshot,morrisse,purgen,qwer4321,itachi,willys,123123qwe,kisska,roma123,trafford,sk84life,326159487,pedros,idiom,plover,bebop,159875321,jailbird,arrowhea,qwaszx123,zaxscdvf,catlover,bakers,13579246,bones69,vermont1,helloyou,simeon,chevyz71,funguy,stargaze,parolparol,steph1,bubby,apathy,poppet,laxman,kelly123,goodnews,741236,boner1,gaetano,astonvilla,virtua,luckyboy,rocheste,hello2u,elohim,trigger1,cstrike,pepsicola,miroslav,96385274,fistfuck,cheval,magyar,svetlanka,lbfyjxrf,mamedov,123123123q,ronaldo1,scotty1,1nicole,pittbull,fredd,bbbbb1,dagwood,gfhkfvtyn,ghblehrb,logan5,1jordan,sexbomb,omega2,montauk,258741,dtythf,gibbon,winamp,thebomb,millerli,852654,gemin,baldy,halflife2,dragon22,mulberry,morrigan,hotel6,zorglub,surfin,951159,excell,arhangel,emachine,moses1,968574,reklama,bulldog2,cuties,barca,twingo,saber,elite11,redtruck,casablan,ashish,moneyy,pepper12,cnhtktw,rjcnbr,arschloch,phenix,cachorro,sunita,madoka,joselui,adams1,mymoney,hemicuda,fyutkjr,jake12,chicas,eeeee1,sonnyboy,smarties,birdy,kitten1,cnfcbr,island1,kurosaki,taekwond,konfetka,bennett1,omega3,jackson2,fresca,minako,octavian,kban667,feyenoord,muaythai,jakedog,fktrcfylhjdyf,1357911q,phuket,sexslave,fktrcfylhjdbx,asdfjk,89015173454,qwerty00,kindbud,eltoro,sex6969,nyknicks,12344321q,caballo,evenflow,hoddle,love22,metro1,mahalko,lawdog,tightass,manitou,buckie,whiskey1,anton123,335533,password4,primo,ramair,timbo,brayden,stewie,pedro1,yorkshir,ganster,hellothe,tippy1,direwolf,genesi,rodrig,enkeli,vaz21099,sorcerer,winky,oneshot,boggle,serebro,badger1,japanes,comicbook,kamehame,alcat,denis123,echo45,sexboy,gr8ful,hondo,voetbal,blue33,2112rush,geneviev,danni1,moosey,polkmn,matthew7,ironhead,hot2trot,ashley12,sweeper,imogen,blue21,retep,stealth1,guitarra,bernard1,tatian,frankfur,vfnhbwf,slacking,haha123,963741,asdasdas,katenok,airforce1,123456789qaz,shotgun1,12qwasz,reggie1,sharo,976431,pacifica,dhip6a,neptun,kardon,spooky1,beaut,555555a,toosweet,tiedup,11121314,startac,lover69,rediska,pirata,vfhrbp,1234qwerty,energize,hansolo1,playbo,larry123,oemdlg,cnjvfnjkju,a123123,alexan,gohawks,antonius,fcbayern,mambo,yummy1,kremlin,ellen1,tremere,vfiekz,bellevue,charlie9,izabella,malishka,fermat,rotterda,dawggy,becket,chasey,kramer1,21125150,lolit,cabrio,schlong,arisha,verity,3some,favorit,maricon,travelle,hotpants,red1234,garrett1,home123,knarf,seven777,figment,asdewq,canseco,good2go,warhol,thomas01,pionee,al9agd,panacea,chevy454,brazzers,oriole,azerty123,finalfan,patricio,northsta,rebelde,bulldo,stallone,boogie1,7uftyx,cfhfnjd,compusa,cornholi,config,deere,hoopster,sepultura,grasshop,babygurl,lesbo,diceman,proverbs,reddragon,nurbek,tigerwoo,superdup,buzzsaw,kakaroto,golgo13,edwar,123qaz123,butter1,sssss1,texas2,respekt,ou812ic,123456qaz,55555a,doctor1,mcgwire,maria123,aol999,cinders,aa1234,joness,ghbrjkmyj,makemone,sammyboy,567765,380zliki,theraven,testme,mylene,elvira26,indiglo,tiramisu,shannara,baby1,123666,gfhreh,papercut,johnmish,orange8,bogey1,mustang7,bagpipes,dimarik,vsijyjr,4637324,ravage,cogito,seven11,natashka,warzone,hr3ytm,4free,bigdee,000006,243462536,bigboi,123333,trouts,sandy123,szevasz,monica2,guderian,newlife1,ratchet,r12345,razorbac,12345i,piazza31,oddjob,beauty1,fffff1,anklet,nodrog,pepit,olivi,puravida,robert12,transam1,portman,bubbadog,steelers1,wilson1,eightball,mexico1,superboy,4rfv5tgb,mzepab,samurai1,fuckslut,colleen1,girdle,vfrcbvec,q1w2e3r4t,soldier1,19844891,alyssa1,a12345a,fidelis,skelter,nolove,mickeymouse,frehley,password69,watermel,aliska,soccer15,12345e,ladybug1,abulafia,adagio,tigerlil,takehana,hecate,bootneck,junfan,arigato,wonkette,bobby123,trustnoone,phantasm,132465798,brianjo,w12345,t34vfrc1991,deadeye,1robert,1daddy,adida,check1,grimlock,muffi,airwalk,prizrak,onclick,longbeac,ernie1,eadgbe,moore1,geniu,shadow123,bugaga,jonathan1,cjrjkjdf,orlova,buldog,talon1,westport,aenima,541233432442,barsuk,chicago2,kellys,hellbent,toughguy,iskander,skoal,whatisit,jake123,scooter2,fgjrfkbgcbc,ghandi,love13,adelphia,vjhrjdrf,adrenali,niunia,jemoeder,rainbo,all4u8,anime1,freedom7,seraph,789321,tommys,antman,firetruc,neogeo,natas,bmwm3,froggy1,paul1,mamit,bayview,gateways,kusanagi,ihateu,frederi,rock1,centurion,grizli,biggin,fish1,stalker1,3girls,ilovepor,klootzak,lollo,redsox04,kirill123,jake1,pampers,vasya,hammers1,teacup,towing,celtic1,ishtar,yingyang,4904s677075,dahc1,patriot1,patrick9,redbirds,doremi,rebecc,yoohoo,makarova,epiphone,rfgbnfy,milesd,blister,chelseafc,katana1,blackrose,1james,primrose,shock5,hard1,scooby12,c6h12o6,dustoff,boing,chisel,kamil,1william,defiant1,tyvugq,mp8o6d,aaa340,nafets,sonnet,flyhigh,242526,crewcom,love23,strike1,stairway,katusha,salamand,cupcake1,password0,007james,sunnie,multisync,harley01,tequila1,fred12,driver8,q8zo8wzq,hunter01,mozzer,temporar,eatmeraw,mrbrownxx,kailey,sycamore,flogger,tincup,rahasia,ganymede,bandera,slinger,1111122222,vander,woodys,1cowboy,khaled,jamies,london12,babyboo,tzpvaw,diogenes,budice,mavrick,135797531,cheeta,macros,squonk,blackber,topfuel,apache1,falcon16,darkjedi,cheeze,vfhvtkfl,sparco,change1,gfhfif,freestyl,kukuruza,loveme2,12345f,kozlov,sherpa,marbella,44445555,bocephus,1winner,alvar,hollydog,gonefish,iwantin,barman,godislove,amanda18,rfpfynbg,eugen,abcdef1,redhawk,thelema,spoonman,baller1,harry123,475869,tigerman,cdtnjxrf,marillio,scribble,elnino,carguy,hardhead,l2g7k3,troopers,selen,dragon76,antigua,ewtosi,ulysse,astana,paroli,cristo,carmex,marjan,bassfish,letitbe,kasparov,jay123,19933991,blue13,eyecandy,scribe,mylord,ukflbjkec,ellie1,beaver1,destro,neuken,halfpint,ameli,lilly1,satanic,xngwoj,12345trewq,asdf1,bulldogg,asakura,jesucrist,flipside,packers4,biggy,kadett,biteme69,bobdog,silverfo,saint1,bobbo,packman,knowledg,foolio,fussbal,12345g,kozerog,westcoas,minidisc,nbvcxw,martini1,alastair,rasengan,superbee,memento,porker,lena123,florenc,kakadu,bmw123,getalife,bigsky,monkee,people1,schlampe,red321,memyself,0147896325,12345678900987654321,soccer14,realdeal,gfgjxrf,bella123,juggs,doritos,celtics1,peterbilt,ghbdtnbrb,gnusmas,xcountry,ghbdtn1,batman99,deusex,gtnhjdf,blablabl,juster,marimba,love2,rerjkrf,alhambra,micros,siemens1,assmaste,moonie,dashadasha,atybrc,eeeeee1,wildrose,blue55,davidl,xrp23q,skyblue,leo123,ggggg1,bestfriend,franny,1234rmvb,fun123,rules1,sebastien,chester2,hakeem,winston2,fartripper,atlant,07831505,iluvsex,q1a2z3,larrys,009900,ghjkju,capitan,rider1,qazxsw21,belochka,andy123,hellya,chicca,maximal,juergen,password1234,howard1,quetzal,daniel123,qpwoeiruty,123555,bharat,ferrari3,numbnuts,savant,ladydog,phipsi,lovepussy,etoile,power2,mitten,britneys,chilidog,08522580,2fchbg,kinky1,bluerose,loulo,ricardo1,doqvq3,kswbdu,013cpfza,timoha,ghbdtnghbdtn,3stooges,gearhead,browns1,g00ber,super7,greenbud,kitty2,pootie,toolshed,gamers,coffe,ibill123,freelove,anasazi,sister1,jigger,natash,stacy1,weronika,luzern,soccer7,hoopla,dmoney,valerie1,canes,razdvatri,washere,greenwoo,rfhjkbyf,anselm,pkxe62,maribe,daniel2,maxim1,faceoff,carbine,xtkjdtr,buddy12,stratos,jumpman,buttocks,aqswdefr,pepsis,sonechka,steeler1,lanman,nietzsch,ballz,biscuit1,wrxsti,goodfood,juventu,federic,mattman,vika123,strelec,jledfyxbr,sideshow,4life,fredderf,bigwilly,12347890,12345671,sharik,bmw325i,fylhtqrf,dannon4,marky,mrhappy,drdoom,maddog1,pompier,cerbera,goobers,howler,jenny69,evely,letitrid,cthuttdyf,felip,shizzle,golf12,t123456,yamah,bluearmy,squishy,roxan,10inches,dollface,babygirl1,blacksta,kaneda,lexingto,canadien,222888,kukushka,sistema,224422,shadow69,ppspankp,mellons,barbie1,free4all,alfa156,lostone,2w3e4r5t,painkiller,robbie1,binger,8dihc6,jaspe,rellik,quark,sogood,hoopstar,number2,snowy1,dad2ownu,cresta,qwe123asd,hjvfyjdf,gibsonsg,qbg26i,dockers,grunge,duckling,lfiekz,cuntsoup,kasia1,1tigger,woaini,reksio,tmoney,firefighter,neuron,audia3,woogie,powerboo,powermac,fatcock,12345666,upnfmc,lustful,porn1,gotlove,amylee,kbytqrf,11924704,25251325,sarasota,sexme,ozzie1,berliner,nigga1,guatemal,seagulls,iloveyou!,chicken2,qwerty21,010203040506,1pillow,libby1,vodoley,backlash,piglets,teiubesc,019283,vonnegut,perico,thunde,buckey,gtxtymrf,manunite,iiiii1,lost4815162342,madonn,270873_,britney1,kevlar,piano1,boondock,colt1911,salamat,doma77ns,anuradha,cnhjqrf,rottweil,newmoon,topgun1,mauser,fightclu,birthday21,reviewpa,herons,aassddff,lakers32,melissa2,vredina,jiujitsu,mgoblue,shakey,moss84,12345zxcvb,funsex,benji1,garci,113322,chipie,windex,nokia5310,pwxd5x,bluemax,cosita,chalupa,trotsky,new123,g3ujwg,newguy,canabis,gnaget,happydays,felixx,1patrick,cumface,sparkie,kozlova,123234,newports,broncos7,golf18,recycle,hahah,harrypot,cachondo,open4me,miria,guessit,pepsione,knocker,usmc1775,countach,playe,wiking,landrover,cracksevi,drumline,a7777777,smile123,manzana,panty,liberta,pimp69,dolfan,quality1,schnee,superson,elaine22,webhompass,mrbrownx,deepsea,4wheel,mamasita,rockport,rollie,myhome,jordan12,kfvgjxrf,hockey12,seagrave,ford1,chelsea2,samsara,marissa1,lamesa,mobil1,piotrek,tommygun,yyyyy1,wesley1,billy123,homersim,julies,amanda12,shaka,maldini,suzenet,springst,iiiiii1,yakuza,111111aa,westwind,helpdesk,annamari,bringit,hopefull,hhhhhhh1,saywhat,mazdarx8,bulova,jennife1,baikal,gfhjkmxbr,victoria1,gizmo123,alex99,defjam,2girls,sandrock,positivo,shingo,syncmast,opensesa,silicone,fuckina,senna1,karlos,duffbeer,montagne,gehrig,thetick,pepino,hamburge,paramedic,scamp,smokeweed,fabregas,phantoms,venom121293,2583458,badone,porno69,manwhore,vfvf123,notagain,vbktyf,rfnthbyrf,wildblue,kelly001,dragon66,camell,curtis1,frolova,1212123,dothedew,tyler123,reddrago,planetx,promethe,gigolo,1001001,thisone,eugeni,blackshe,cruzazul,incognito,puller,joonas,quick1,spirit1,gazza,zealot,gordito,hotrod1,mitch1,pollito,hellcat,mythos,duluth,383pdjvl,easy123,hermos,binkie,its420,lovecraf,darien,romina,doraemon,19877891,syclone,hadoken,transpor,ichiro,intell,gargamel,dragon2,wavpzt,557744,rjw7x4,jennys,kickit,rjynfrn,likeit,555111,corvus,nec3520,133113,mookie1,bochum,samsung2,locoman0,154ugeiu,vfvfbgfgf,135792,[start],tenni,20001,vestax,hufmqw,neveragain,wizkid,kjgfnf,nokia6303,tristen,saltanat,louie1,gandalf2,sinfonia,alpha3,tolstoy,ford150,f00bar,1hello,alici,lol12,riker1,hellou,333888,1hunter,qw1234,vibrator,mets86,43211234,gonzale,cookies1,sissy1,john11,bubber,blue01,cup2006,gtkmvtyb,nazareth,heybaby,suresh,teddie,mozilla,rodeo1,madhouse,gamera,123123321,naresh,dominos,foxtrot1,taras,powerup,kipling,jasonb,fidget,galena,meatman,alpacino,bookmark,farting,humper,titsnass,gorgon,castaway,dianka,anutka,gecko1,fucklove,connery,wings1,erika1,peoria,moneymaker,ichabod,heaven1,paperboy,phaser,breakers,nurse1,westbrom,alex13,brendan1,123asd123,almera,grubber,clarkie,thisisme,welkom01,51051051051,crypto,freenet,pflybwf,black12,testme2,changeit,autobahn,attica,chaoss,denver1,tercel,gnasher23,master2,vasilii,sherman1,gomer,bigbuck,derek1,qwerzxcv,jumble,dragon23,art131313,numark,beasty,cxfcnmttcnm,updown,starion,glist,sxhq65,ranger99,monkey7,shifter,wolves1,4r5t6y,phone1,favorite5,skytommy,abracada,1martin,102030405060,gatech,giulio,blacktop,cheer1,africa1,grizzly1,inkjet,shemales,durango1,booner,11223344q,supergirl,vanyarespekt,dickless,srilanka,weaponx,6string,nashvill,spicey,boxer1,fabien,2sexy2ho,bowhunt,jerrylee,acrobat,tawnee,ulisse,nolimit8,l8g3bkde,pershing,gordo1,allover,gobrowns,123432,123444,321456987,spoon1,hhhhh1,sailing1,gardenia,teache,sexmachine,tratata,pirate1,niceone,jimbos,314159265,qsdfgh,bobbyy,ccccc1,carla1,vjkjltw,savana,biotech,frigid,123456789g,dragon10,yesiam,alpha06,oakwood,tooter,winsto,radioman,vavilon,asnaeb,google123,nariman,kellyb,dthyjcnm,password6,parol1,golf72,skate1,lthtdj,1234567890s,kennet,rossia,lindas,nataliya,perfecto,eminem1,kitana,aragorn1,rexona,arsenalf,planot,coope,testing123,timex,blackbox,bullhead,barbarian,dreamon,polaris1,cfvjktn,frdfhbev,gametime,slipknot666,nomad1,hfgcjlbz,happy69,fiddler,brazil1,joeboy,indianali,113355,obelisk,telemark,ghostrid,preston1,anonim,wellcome,verizon1,sayangku,censor,timeport,dummies,adult1,nbnfybr,donger,thales,iamgay,sexy1234,deadlift,pidaras,doroga,123qwe321,portuga,asdfgh12,happys,cadr14nu,pi3141,maksik,dribble,cortland,darken,stepanova,bommel,tropic,sochi2014,bluegras,shahid,merhaba,nacho,2580456,orange44,kongen,3cudjz,78girl,my3kids,marcopol,deadmeat,gabbie,saruman,jeepman,freddie1,katie123,master99,ronal,ballbag,centauri,killer7,xqgann,pinecone,jdeere,geirby,aceshigh,55832811,pepsimax,rayden,razor1,tallyho,ewelina,coldfire,florid,glotest,999333,sevenup,bluefin,limaperu,apostol,bobbins,charmed1,michelin,sundin,centaur,alphaone,christof,trial1,lions1,45645,just4you,starflee,vicki1,cougar1,green2,jellyfis,batman69,games1,hihje863,crazyzil,w0rm1,oklick,dogbite,yssup,sunstar,paprika,postov10,124578963,x24ik3,kanada,buckster,iloveamy,bear123,smiler,nx74205,ohiostat,spacey,bigbill,doudo,nikolaeva,hcleeb,sex666,mindy1,buster11,deacons,boness,njkcnsq,candy2,cracker1,turkey1,qwertyu1,gogreen,tazzzz,edgewise,ranger01,qwerty6,blazer1,arian,letmeinnow,cigar1,jjjjjj1,grigio,frien,tenchu,f9lmwd,imissyou,filipp,heathers,coolie,salem1,woodduck,scubadiv,123kat,raffaele,nikolaev,dapzu455,skooter,9inches,lthgfhjkm,gr8one,ffffff1,zujlrf,amanda69,gldmeo,m5wkqf,rfrltkf,televisi,bonjou,paleale,stuff1,cumalot,fuckmenow,climb7,mark1234,t26gn4,oneeye,george2,utyyflbq,hunting1,tracy71,ready2go,hotguy,accessno,charger1,rudedog,kmfdm,goober1,sweetie1,wtpmjgda,dimensio,ollie1,pickles1,hellraiser,mustdie,123zzz,99887766,stepanov,verdun,tokenbad,anatol,bartende,cidkid86,onkelz,timmie,mooseman,patch1,12345678c,marta1,dummy1,bethany1,myfamily,history1,178500,lsutiger,phydeaux,moren,dbrnjhjdbx,gnbxrf,uniden,drummers,abpbrf,godboy,daisy123,hogan1,ratpack,irland,tangerine,greddy,flore,sqrunch,billyjoe,q55555,clemson1,98745632,marios,ishot,angelin,access12,naruto12,lolly,scxakv,austin12,sallad,cool99,rockit,mongo1,mark22,ghbynth,ariadna,senha,docto,tyler2,mobius,hammarby,192168,anna12,claire1,pxx3eftp,secreto,greeneye,stjabn,baguvix,satana666,rhbcnbyjxrf,dallastx,garfiel,michaelj,1summer,montan,1234ab,filbert,squids,fastback,lyudmila,chucho,eagleone,kimberle,ar3yuk3,jake01,nokids,soccer22,1066ad,ballon,cheeto,review69,madeira,taylor2,sunny123,chubbs,lakeland,striker1,porche,qwertyu8,digiview,go1234,ferari,lovetits,aditya,minnow,green3,matman,cellphon,fortytwo,minni,pucara,69a20a,roman123,fuente,12e3e456,paul12,jacky,demian,littleman,jadakiss,vlad1997,franca,282860,midian,nunzio,xaccess2,colibri,jessica0,revilo,654456,harvey1,wolf1,macarena,corey1,husky1,arsen,milleniu,852147,crowes,redcat,combat123654,hugger,psalms,quixtar,ilovemom,toyot,ballss,ilovekim,serdar,james23,avenger1,serendip,malamute,nalgas,teflon,shagger,letmein6,vyjujnjxbt,assa1234,student1,dixiedog,gznybwf13,fuckass,aq1sw2de3,robroy,hosehead,sosa21,123345,ias100,teddy123,poppin,dgl70460,zanoza,farhan,quicksilver,1701d,tajmahal,depechemode,paulchen,angler,tommy2,recoil,megamanx,scarecro,nicole2,152535,rfvtgb,skunky,fatty1,saturno,wormwood,milwauke,udbwsk,sexlover,stefa,7bgiqk,gfnhbr,omar10,bratan,lbyfvj,slyfox,forest1,jambo,william3,tempus,solitari,lucydog,murzilka,qweasdzxc1,vehpbkrf,12312345,fixit,woobie,andre123,123456789x,lifter,zinaida,soccer17,andone,foxbat,torsten,apple12,teleport,123456i,leglover,bigcocks,vologda,dodger1,martyn,d6o8pm,naciona,eagleeye,maria6,rimshot,bentley1,octagon,barbos,masaki,gremio,siemen,s1107d,mujeres,bigtits1,cherr,saints1,mrpink,simran,ghzybr,ferrari2,secret12,tornado1,kocham,picolo,deneme,onelove1,rolan,fenster,1fuckyou,cabbie,pegaso,nastyboy,password5,aidana,mine2306,mike13,wetone,tigger69,ytreza,bondage1,myass,golova,tolik,happyboy,poilkj,nimda2k,rammer,rubies,hardcore1,jetset,hoops1,jlaudio,misskitt,1charlie,google12,theone1,phred,porsch,aalborg,luft4,charlie5,password7,gnosis,djgabbab,1daniel,vinny,borris,cumulus,member1,trogdor,darthmau,andrew2,ktjybl,relisys,kriste,rasta220,chgobndg,weener,qwerty66,fritter,followme,freeman1,ballen,blood1,peache,mariso,trevor1,biotch,gtfullam,chamonix,friendste,alligato,misha1,1soccer,18821221,venkat,superd,molotov,bongos,mpower,acun3t1x,dfcmrf,h4x3d,rfhfufylf,tigran,booyaa,plastic1,monstr,rfnhby,lookatme,anabolic,tiesto,simon123,soulman,canes1,skyking,tomcat1,madona,bassline,dasha123,tarheel1,dutch1,xsw23edc,qwerty123456789,imperator,slaveboy,bateau,paypal,house123,pentax,wolf666,drgonzo,perros,digger1,juninho,hellomoto,bladerun,zzzzzzz1,keebler,take8422,fffffff1,ginuwine,israe,caesar1,crack1,precious1,garand,magda1,zigazaga,321ewq,johnpaul,mama1234,iceman69,sanjeev,treeman,elric,rebell,1thunder,cochon,deamon,zoltan,straycat,uhbyuj,luvfur,mugsy,primer,wonder1,teetime,candycan,pfchfytw,fromage,gitler,salvatio,piggy1,23049307,zafira,chicky,sergeev,katze,bangers,andriy,jailbait,vaz2107,ghbhjlf,dbjktnnf,aqswde,zaratustra,asroma,1pepper,alyss,kkkkk1,ryan1,radish,cozumel,waterpol,pentium1,rosebowl,farmall,steinway,dbrekz,baranov,jkmuf,another1,chinacat,qqqqqqq1,hadrian,devilmaycry4,ratbag,teddy2,love21,pullings,packrat,robyn1,boobo,qw12er34,tribe1,rosey,celestia,nikkie,fortune12,olga123,danthema,gameon,vfrfhjys,dilshod,henry14,jenova,redblue,chimaera,pennywise,sokrates,danimal,qqaazz,fuaqz4,killer2,198200,tbone1,kolyan,wabbit,lewis1,maxtor,egoist,asdfas,spyglass,omegas,jack12,nikitka,esperanz,doozer,matematika,wwwww1,ssssss1,poiu0987,suchka,courtney1,gungho,alpha2,fktyjxrf,summer06,bud420,devildriver,heavyd,saracen,foucault,choclate,rjdfktyrj,goblue1,monaro,jmoney,dcpugh,efbcapa201,qqh92r,pepsicol,bbb747,ch5nmk,honeyb,beszoptad,tweeter,intheass,iseedeadpeople,123dan,89231243658s,farside1,findme,smiley1,55556666,sartre,ytcnjh,kacper,costarica,134679258,mikeys,nolimit9,vova123,withyou,5rxypn,love143,freebie,rescue1,203040,michael6,12monkey,redgreen,steff,itstime,naveen,good12345,acidrain,1dawg,miramar,playas,daddio,orion2,852741,studmuff,kobe24,senha123,stephe,mehmet,allalone,scarface1,helloworld,smith123,blueyes,vitali,memphis1,mybitch,colin1,159874,1dick,podaria,d6wnro,brahms,f3gh65,dfcbkmtd,xxxman,corran,ugejvp,qcfmtz,marusia,totem,arachnid,matrix2,antonell,fgntrf,zemfira,christos,surfing1,naruto123,plato1,56qhxs,madzia,vanille,043aaa,asq321,mutton,ohiostate,golde,cdznjckfd,rhfcysq,green5,elephan,superdog,jacqueli,bollock,lolitas,nick12,1orange,maplelea,july23,argento,waldorf,wolfer,pokemon12,zxcvbnmm,flicka,drexel,outlawz,harrie,atrain,juice2,falcons1,charlie6,19391945,tower1,dragon21,hotdamn,dirtyboy,love4ever,1ginger,thunder2,virgo1,alien1,bubblegu,4wwvte,123456789qqq,realtime,studio54,passss,vasilek,awsome,giorgia,bigbass,2002tii,sunghile,mosdef,simbas,count0,uwrl7c,summer05,lhepmz,ranger21,sugarbea,principe,5550123,tatanka,9638v,cheerios,majere,nomercy,jamesbond007,bh90210,7550055,jobber,karaganda,pongo,trickle,defamer,6chid8,1q2a3z,tuscan,nick123,.adgjm,loveyo,hobbes1,note1234,shootme,171819,loveporn,9788960,monty123,fabrice,macduff,monkey13,shadowfa,tweeker,hanna1,madball,telnet,loveu2,qwedcxzas,thatsit,vfhcbr,ptfe3xxp,gblfhfcs,ddddddd1,hakkinen,liverune,deathsta,misty123,suka123,recon1,inferno1,232629,polecat,sanibel,grouch,hitech,hamradio,rkfdbfnehf,vandam,nadin,fastlane,shlong,iddqdidkfa,ledzeppelin,sexyfeet,098123,stacey1,negras,roofing,lucifer1,ikarus,tgbyhn,melnik,barbaria,montego,twisted1,bigal1,jiggle,darkwolf,acerview,silvio,treetops,bishop1,iwanna,pornsite,happyme,gfccdjhl,114411,veritech,batterse,casey123,yhntgb,mailto,milli,guster,q12345678,coronet,sleuth,fuckmeha,armadill,kroshka,geordie,lastochka,pynchon,killall,tommy123,sasha1996,godslove,hikaru,clticic,cornbrea,vfkmdbyf,passmaster,123123123a,souris,nailer,diabolo,skipjack,martin12,hinata,mof6681,brookie,dogfight,johnso,karpov,326598,rfvbrflpt,travesti,caballer,galaxy1,wotan,antoha,art123,xakep1234,ricflair,pervert1,p00kie,ambulanc,santosh,berserker,larry33,bitch123,a987654321,dogstar,angel22,cjcbcrf,redhouse,toodles,gold123,hotspot,kennedy1,glock21,chosen1,schneide,mainman,taffy1,3ki42x,4zqauf,ranger2,4meonly,year2000,121212a,kfylsi,netzwerk,diese,picasso1,rerecz,225522,dastan,swimmer1,brooke1,blackbea,oneway,ruslana,dont4get,phidelt,chrisp,gjyxbr,xwing,kickme,shimmy,kimmy1,4815162342lost,qwerty5,fcporto,jazzbo,mierd,252627,basses,sr20det,00133,florin,howdy1,kryten,goshen,koufax,cichlid,imhotep,andyman,wrest666,saveme,dutchy,anonymou,semprini,siempre,mocha1,forest11,wildroid,aspen1,sesam,kfgekz,cbhbec,a55555,sigmanu,slash1,giggs11,vatech,marias,candy123,jericho1,kingme,123a123,drakula,cdjkjxm,mercur,oneman,hoseman,plumper,ilovehim,lancers,sergey1,takeshi,goodtogo,cranberr,ghjcnj123,harvick,qazxs,1972chev,horsesho,freedom3,letmein7,saitek,anguss,vfvfgfgfz,300000,elektro,toonporn,999111999q,mamuka,q9umoz,edelweis,subwoofer,bayside,disturbe,volition,lucky3,12345678z,3mpz4r,march1,atlantida,strekoza,seagrams,090909t,yy5rbfsc,jack1234,sammy12,sampras,mark12,eintrach,chaucer,lllll1,nochance,whitepower,197000,lbvekz,passer,torana,12345as,pallas,koolio,12qw34,nokia8800,findout,1thomas,mmmmm1,654987,mihaela,chinaman,superduper,donnas,ringo1,jeroen,gfdkjdf,professo,cdtnrf,tranmere,tanstaaf,himera,ukflbfnjh,667788,alex32,joschi,w123456,okidoki,flatline,papercli,super8,doris1,2good4u,4z34l0ts,pedigree,freeride,gsxr1100,wulfgar,benjie,ferdinan,king1,charlie7,djdxbr,fhntvbq,ripcurl,2wsx1qaz,kingsx,desade,sn00py,loveboat,rottie,evgesha,4money,dolittle,adgjmpt,buzzers,brett1,makita,123123qweqwe,rusalka,sluts1,123456e,jameson1,bigbaby,1z2z3z,ckjybr,love4u,fucker69,erhfbyf,jeanluc,farhad,fishfood,merkin,giant1,golf69,rfnfcnhjaf,camera1,stromb,smoothy,774411,nylon,juice1,rfn.irf,newyor,123456789t,marmot,star11,jennyff,jester1,hisashi,kumquat,alex777,helicopt,merkur,dehpye,cummin,zsmj2v,kristjan,april12,englan,honeypot,badgirls,uzumaki,keines,p12345,guita,quake1,duncan1,juicer,milkbone,hurtme,123456789b,qq123456789,schwein,p3wqaw,54132442,qwertyytrewq,andreeva,ruffryde,punkie,abfkrf,kristinka,anna1987,ooooo1,335533aa,umberto,amber123,456123789,456789123,beelch,manta,peeker,1112131415,3141592654,gipper,wrinkle5,katies,asd123456,james11,78n3s5af,michael0,daboss,jimmyb,hotdog1,david69,852123,blazed,sickan,eljefe,2n6wvq,gobills,rfhfcm,squeaker,cabowabo,luebri,karups,test01,melkor,angel777,smallvil,modano,olorin,4rkpkt,leslie1,koffie,shadows1,littleon,amiga1,topeka,summer20,asterix1,pitstop,aloysius,k12345,magazin,joker69,panocha,pass1word,1233214,ironpony,368ejhih,88keys,pizza123,sonali,57np39,quake2,1234567890qw,1020304,sword1,fynjif,abcde123,dfktyjr,rockys,grendel1,harley12,kokakola,super2,azathoth,lisa123,shelley1,girlss,ibragim,seven1,jeff24,1bigdick,dragan,autobot,t4nvp7,omega123,900000,hecnfv,889988,nitro1,doggie1,fatjoe,811pahc,tommyt,savage1,pallino,smitty1,jg3h4hfn,jamielee,1qazwsx,zx123456,machine1,asdfgh123,guinnes,789520,sharkman,jochen,legend1,sonic2,extreme1,dima12,photoman,123459876,nokian95,775533,vaz2109,april10,becks,repmvf,pooker,qwer12345,themaster,nabeel,monkey10,gogetit,hockey99,bbbbbbb1,zinedine,dolphin2,anelka,1superma,winter01,muggsy,horny2,669966,kuleshov,jesusis,calavera,bullet1,87t5hdf,sleepers,winkie,vespa,lightsab,carine,magister,1spider,shitbird,salavat,becca1,wc18c2,shirak,galactus,zaskar,barkley1,reshma,dogbreat,fullsail,asasa,boeder,12345ta,zxcvbnm12,lepton,elfquest,tony123,vkaxcs,savatage,sevilia1,badkitty,munkey,pebbles1,diciembr,qapmoc,gabriel2,1qa2ws3e,cbcmrb,welldone,nfyufh,kaizen,jack11,manisha,grommit,g12345,maverik,chessman,heythere,mixail,jjjjjjj1,sylvia1,fairmont,harve,skully,global1,youwish,pikachu1,badcat,zombie1,49527843,ultra1,redrider,offsprin,lovebird,153426,stymie,aq1sw2,sorrento,0000001,r3ady41t,webster1,95175,adam123,coonass,159487,slut1,gerasim,monkey99,slutwife,159963,1pass1page,hobiecat,bigtymer,all4you,maggie2,olamide,comcast1,infinit,bailee,vasileva,.ktxrf,asdfghjkl1,12345678912,setter,fuckyou7,nnagqx,lifesuck,draken,austi,feb2000,cable1,1234qwerasdf,hax0red,zxcv12,vlad7788,nosaj,lenovo,underpar,huskies1,lovegirl,feynman,suerte,babaloo,alskdjfhg,oldsmobi,bomber1,redrover,pupuce,methodman,phenom,cutegirl,countyli,gretsch,godisgood,bysunsu,hardhat,mironova,123qwe456rty,rusty123,salut,187211,555666777,11111z,mahesh,rjntyjxtr,br00klyn,dunce1,timebomb,bovine,makelove,littlee,shaven,rizwan,patrick7,42042042,bobbijo,rustem,buttmunc,dongle,tiger69,bluecat,blackhol,shirin,peaces,cherub,cubase,longwood,lotus7,gwju3g,bruin,pzaiu8,green11,uyxnyd,seventee,dragon5,tinkerbel,bluess,bomba,fedorova,joshua2,bodyshop,peluche,gbpacker,shelly1,d1i2m3a4,ghtpbltyn,talons,sergeevna,misato,chrisc,sexmeup,brend,olddog,davros,hazelnut,bridget1,hzze929b,readme,brethart,wild1,ghbdtnbr1,nortel,kinger,royal1,bucky1,allah1,drakkar,emyeuanh,gallaghe,hardtime,jocker,tanman,flavio,abcdef123,leviatha,squid1,skeet,sexse,123456x,mom4u4mm,lilred,djljktq,ocean11,cadaver,baxter1,808state,fighton,primavera,1andrew,moogle,limabean,goddess1,vitalya,blue56,258025,bullride,cicci,1234567d,connor1,gsxr11,oliveoil,leonard1,legsex,gavrik,rjnjgtc,mexicano,2bad4u,goodfellas,ornw6d,mancheste,hawkmoon,zlzfrh,schorsch,g9zns4,bashful,rossi46,stephie,rfhfntkm,sellout,123fuck,stewar1,solnze,00007,thor5200,compaq12,didit,bigdeal,hjlbyf,zebulon,wpf8eu,kamran,emanuele,197500,carvin,ozlq6qwm,3syqo15hil,pennys,epvjb6,asdfghjkl123,198000,nfbcbz,jazzer,asfnhg66,zoloft,albundy,aeiou,getlaid,planet1,gjkbyjxrf,alex2000,brianb,moveon,maggie11,eieio,vcradq,shaggy1,novartis,cocoloco,dunamis,554uzpad,sundrop,1qwertyu,alfie,feliks,briand,123www,red456,addams,fhntv1998,goodhead,theway,javaman,angel01,stratoca,lonsdale,15987532,bigpimpin,skater1,issue43,muffie,yasmina,slowride,crm114,sanity729,himmel,carolcox,bustanut,parabola,masterlo,computador,crackhea,dynastar,rockbott,doggysty,wantsome,bigten,gaelle,juicy1,alaska1,etower,sixnine,suntan,froggies,nokia7610,hunter11,njnets,alicante,buttons1,diosesamo,elizabeth1,chiron,trustnoo,amatuers,tinytim,mechta,sammy2,cthulu,trs8f7,poonam,m6cjy69u35,cookie12,blue25,jordans,santa1,kalinka,mikey123,lebedeva,12345689,kissss,queenbee,vjybnjh,ghostdog,cuckold,bearshare,rjcntyrj,alinochka,ghjcnjrdfibyj,aggie1,teens1,3qvqod,dauren,tonino,hpk2qc,iqzzt580,bears85,nascar88,theboy,njqcw4,masyanya,pn5jvw,intranet,lollone,shadow99,00096462,techie,cvtifhbrb,redeemed,gocanes,62717315,topman,intj3a,cobrajet,antivirus,whyme,berserke,ikilz083,airedale,brandon2,hopkig,johanna1,danil8098,gojira,arthu,vision1,pendragon,milen,chrissie,vampiro,mudder,chris22,blowme69,omega7,surfers,goterps,italy1,baseba11,diego1,gnatsum,birdies,semenov,joker123,zenit2011,wojtek,cab4ma99,watchmen,damia,forgotte,fdm7ed,strummer,freelanc,cingular,orange77,mcdonalds,vjhjpjdf,kariya,tombston,starlet,hawaii1,dantheman,megabyte,nbvjirf,anjing,ybrjkftdbx,hotmom,kazbek,pacific1,sashimi,asd12,coorslig,yvtte545,kitte,elysium,klimenko,cobblers,kamehameha,only4me,redriver,triforce,sidorov,vittoria,fredi,dank420,m1234567,fallout2,989244342a,crazy123,crapola,servus,volvos,1scooter,griffin1,autopass,ownzyou,deviant,george01,2kgwai,boeing74,simhrq,hermosa,hardcor,griffy,rolex1,hackme,cuddles1,master3,bujhtr,aaron123,popolo,blader,1sexyred,gerry1,cronos,ffvdj474,yeehaw,bob1234,carlos2,mike77,buckwheat,ramesh,acls2h,monster2,montess,11qq22ww,lazer,zx123456789,chimpy,masterch,sargon,lochness,archana,1234qwert,hbxfhl,sarahb,altoid,zxcvbn12,dakot,caterham,dolomite,chazz,r29hqq,longone,pericles,grand1,sherbert,eagle3,pudge,irontree,synapse,boome,nogood,summer2,pooki,gangsta1,mahalkit,elenka,lbhtrnjh,dukedog,19922991,hopkins1,evgenia,domino1,x123456,manny1,tabbycat,drake1,jerico,drahcir,kelly2,708090a,facesit,11c645df,mac123,boodog,kalani,hiphop1,critters,hellothere,tbirds,valerka,551scasi,love777,paloalto,mrbrown,duke3d,killa1,arcturus,spider12,dizzy1,smudger,goddog,75395,spammy,1357997531,78678,datalife,zxcvbn123,1122112211,london22,23dp4x,rxmtkp,biggirls,ownsu,lzbs2twz,sharps,geryfe,237081a,golakers,nemesi,sasha1995,pretty1,mittens1,d1lakiss,speedrac,gfhjkmm,sabbat,hellrais,159753258,qwertyuiop123,playgirl,crippler,salma,strat1,celest,hello5,omega5,cheese12,ndeyl5,edward12,soccer3,cheerio,davido,vfrcbr,gjhjctyjr,boscoe,inessa,shithole,ibill,qwepoi,201jedlz,asdlkj,davidk,spawn2,ariel1,michael4,jamie123,romantik,micro1,pittsbur,canibus,katja,muhtar,thomas123,studboy,masahiro,rebrov,patrick8,hotboys,sarge1,1hammer,nnnnn1,eistee,datalore,jackdani,sasha2010,mwq6qlzo,cmfnpu,klausi,cnhjbntkm,andrzej,ilovejen,lindaa,hunter123,vvvvv1,novembe,hamster1,x35v8l,lacey1,1silver,iluvporn,valter,herson,alexsandr,cojones,backhoe,womens,777angel,beatit,klingon1,ta8g4w,luisito,benedikt,maxwel,inspecto,zaq12ws,wladimir,bobbyd,peterj,asdfg12,hellspawn,bitch69,nick1234,golfer23,sony123,jello1,killie,chubby1,kodaira52,yanochka,buckfast,morris1,roaddogg,snakeeye,sex1234,mike22,mmouse,fucker11,dantist,brittan,vfrfhjdf,doc123,plokijuh,emerald1,batman01,serafim,elementa,soccer9,footlong,cthuttdbx,hapkido,eagle123,getsmart,getiton,batman2,masons,mastiff,098890,cfvfhf,james7,azalea,sherif,saun24865709,123red,cnhtrjpf,martina1,pupper,michael5,alan12,shakir,devin1,ha8fyp,palom,mamulya,trippy,deerhunter,happyone,monkey77,3mta3,123456789f,crownvic,teodor,natusik,0137485,vovchik,strutter,triumph1,cvetok,moremone,sonnen,screwbal,akira1,sexnow,pernille,independ,poopies,samapi,kbcbxrf,master22,swetlana,urchin,viper2,magica,slurpee,postit,gilgames,kissarmy,clubpenguin,limpbizk,timber1,celin,lilkim,fuckhard,lonely1,mom123,goodwood,extasy,sdsadee23,foxglove,malibog,clark1,casey2,shell1,odense,balefire,dcunited,cubbie,pierr,solei,161718,bowling1,areyukesc,batboy,r123456,1pionee,marmelad,maynard1,cn42qj,cfvehfq,heathrow,qazxcvbn,connecti,secret123,newfie,xzsawq21,tubitzen,nikusha,enigma1,yfcnz123,1austin,michaelc,splunge,wanger,phantom2,jason2,pain4me,primetime21,babes1,liberte,sugarray,undergro,zonker,labatts,djhjyf,watch1,eagle5,madison2,cntgfirf,sasha2,masterca,fiction7,slick50,bruins1,sagitari,12481632,peniss,insuranc,2b8riedt,12346789,mrclean,ssptx452,tissot,q1w2e3r4t5y6u7,avatar1,comet1,spacer,vbrjkf,pass11,wanker1,14vbqk9p,noshit,money4me,sayana,fish1234,seaways,pipper,romeo123,karens,wardog,ab123456,gorilla1,andrey123,lifesucks,jamesr,4wcqjn,bearman,glock22,matt11,dflbvrf,barbi,maine1,dima1997,sunnyboy,6bjvpe,bangkok1,666666q,rafiki,letmein0,0raziel0,dalla,london99,wildthin,patrycja,skydog,qcactw,tmjxn151,yqlgr667,jimmyd,stripclub,deadwood,863abgsg,horses1,qn632o,scatman,sonia1,subrosa,woland,kolya,charlie4,moleman,j12345,summer11,angel11,blasen,sandal,mynewpas,retlaw,cambria,mustang4,nohack04,kimber45,fatdog,maiden1,bigload,necron,dupont24,ghost123,turbo2,.ktymrf,radagast,balzac,vsevolod,pankaj,argentum,2bigtits,mamabear,bumblebee,mercury7,maddie1,chomper,jq24nc,snooky,pussylic,1lovers,taltos,warchild,diablo66,jojo12,sumerki,aventura,gagger,annelies,drumset,cumshots,azimut,123580,clambake,bmw540,birthday54,psswrd,paganini,wildwest,filibert,teaseme,1test,scampi,thunder5,antosha,purple12,supersex,hhhhhh1,brujah,111222333a,13579a,bvgthfnjh,4506802a,killians,choco,qqqwwweee,raygun,1grand,koetsu13,sharp1,mimi92139,fastfood,idontcare,bluered,chochoz,4z3al0ts,target1,sheffiel,labrat,stalingrad,147123,cubfan,corvett1,holden1,snapper1,4071505,amadeo,pollo,desperados,lovestory,marcopolo,mumbles,familyguy,kimchee,marcio,support1,tekila,shygirl1,trekkie,submissi,ilaria,salam,loveu,wildstar,master69,sales1,netware,homer2,arseniy,gerrity1,raspberr,atreyu,stick1,aldric,tennis12,matahari,alohomora,dicanio,michae1,michaeld,666111,luvbug,boyscout,esmerald,mjordan,admiral1,steamboa,616913,ybhdfyf,557711,555999,sunray,apokalipsis,theroc,bmw330,buzzy,chicos,lenusik,shadowma,eagles05,444222,peartree,qqq123,sandmann,spring1,430799,phatass,andi03,binky1,arsch,bamba,kenny123,fabolous,loser123,poop12,maman,phobos,tecate,myxworld4,metros,cocorico,nokia6120,johnny69,hater,spanked,313233,markos,love2011,mozart1,viktoriy,reccos,331234,hornyone,vitesse,1um83z,55555q,proline,v12345,skaven,alizee,bimini,fenerbahce,543216,zaqqaz,poi123,stabilo,brownie1,1qwerty1,dinesh,baggins1,1234567t,davidkin,friend1,lietuva,octopuss,spooks,12345qq,myshit,buttface,paradoxx,pop123,golfin,sweet69,rfghbp,sambuca,kayak1,bogus1,girlz,dallas12,millers,123456zx,operatio,pravda,eternal1,chase123,moroni,proust,blueduck,harris1,redbarch,996699,1010101,mouche,millenni,1123456,score1,1234565,1234576,eae21157,dave12,pussyy,gfif1991,1598741,hoppy,darrian,snoogins,fartface,ichbins,vfkbyrf,rusrap,2741001,fyfrjylf,aprils,favre,thisis,bannana,serval,wiggum,satsuma,matt123,ivan123,gulmira,123zxc123,oscar2,acces,annie2,dragon0,emiliano,allthat,pajaro,amandine,rawiswar,sinead,tassie,karma1,piggys,nokias,orions,origami,type40,mondo,ferrets,monker,biteme2,gauntlet,arkham,ascona,ingram01,klem1,quicksil,bingo123,blue66,plazma,onfire,shortie,spjfet,123963,thered,fire777,lobito,vball,1chicken,moosehea,elefante,babe23,jesus12,parallax,elfstone,number5,shrooms,freya,hacker1,roxette,snoops,number7,fellini,dtlmvf,chigger,mission1,mitsubis,kannan,whitedog,james01,ghjgecr,rfnfgekmnf,everythi,getnaked,prettybo,sylvan,chiller,carrera4,cowbo,biochem,azbuka,qwertyuiop1,midnight1,informat,audio1,alfred1,0range,sucker1,scott2,russland,1eagle,torben,djkrjlfd,rocky6,maddy1,bonobo,portos,chrissi,xjznq5,dexte,vdlxuc,teardrop,pktmxr,iamtheone,danijela,eyphed,suzuki1,etvww4,redtail,ranger11,mowerman,asshole2,coolkid,adriana1,bootcamp,longcut,evets,npyxr5,bighurt,bassman1,stryder,giblet,nastja,blackadd,topflite,wizar,cumnow,technolo,bassboat,bullitt,kugm7b,maksimus,wankers,mine12,sunfish,pimpin1,shearer9,user1,vjzgjxnf,tycobb,80070633pc,stanly,vitaly,shirley1,cinzia,carolyn1,angeliqu,teamo,qdarcv,aa123321,ragdoll,bonit,ladyluck,wiggly,vitara,jetbalance,12345600,ozzman,dima12345,mybuddy,shilo,satan66,erebus,warrio,090808qwe,stupi,bigdan,paul1234,chiapet,brooks1,philly1,dually,gowest,farmer1,1qa2ws3ed4rf,alberto1,beachboy,barne,aa12345,aliyah,radman,benson1,dfkthbq,highball,bonou2,i81u812,workit,darter,redhook,csfbr5yy,buttlove,episode1,ewyuza,porthos,lalal,abcd12,papero,toosexy,keeper1,silver7,jujitsu,corset,pilot123,simonsay,pinggolf,katerinka,kender,drunk1,fylhjvtlf,rashmi,nighthawk,maggy,juggernaut,larryb,cabibble,fyabcf,247365,gangstar,jaybee,verycool,123456789qw,forbidde,prufrock,12345zxc,malaika,blackbur,docker,filipe,koshechka,gemma1,djamaal,dfcbkmtdf,gangst,9988aa,ducks1,pthrfkj,puertorico,muppets,griffins,whippet,sauber,timofey,larinso,123456789zxc,quicken,qsefth,liteon,headcase,bigdadd,zxc321,maniak,jamesc,bassmast,bigdogs,1girls,123xxx,trajan,lerochka,noggin,mtndew,04975756,domin,wer123,fumanchu,lambada,thankgod,june22,kayaking,patchy,summer10,timepass,poiu1234,kondor,kakka,lament,zidane10,686xqxfg,l8v53x,caveman1,nfvthkfy,holymoly,pepita,alex1996,mifune,fighter1,asslicker,jack22,abc123abc,zaxxon,midnigh,winni,psalm23,punky,monkey22,password13,mymusic,justyna,annushka,lucky5,briann,495rus19,withlove,almaz,supergir,miata,bingbong,bradpitt,kamasutr,yfgjktjy,vanman,pegleg,amsterdam1,123a321,letmein9,shivan,korona,bmw520,annette1,scotsman,gandal,welcome12,sc00by,qpwoei,fred69,m1sf1t,hamburg1,1access,dfkmrbhbz,excalibe,boobies1,fuckhole,karamel,starfuck,star99,breakfas,georgiy,ywvxpz,smasher,fatcat1,allanon,12345n,coondog,whacko,avalon1,scythe,saab93,timon,khorne,atlast,nemisis,brady12,blenheim,52678677,mick7278,9skw5g,fleetwoo,ruger1,kissass,pussy7,scruff,12345l,bigfun,vpmfsz,yxkck878,evgeny,55667788,lickher,foothill,alesis,poppies,77777778,californi,mannie,bartjek,qhxbij,thehulk,xirt2k,angelo4ek,rfkmrekznjh,tinhorse,1david,sparky12,night1,luojianhua,bobble,nederland,rosemari,travi,minou,ciscokid,beehive,565hlgqo,alpine1,samsung123,trainman,xpress,logistic,vw198m2n,hanter,zaqwsx123,qwasz,mariachi,paska,kmg365,kaulitz,sasha12,north1,polarbear,mighty1,makeksa11,123456781,one4all,gladston,notoriou,polniypizdec110211,gosia,grandad,xholes,timofei,invalidp,speaker1,zaharov,maggiema,loislane,gonoles,br5499,discgolf,kaskad,snooper,newman1,belial,demigod,vicky1,pridurok,alex1990,tardis1,cruzer,hornie,sacramen,babycat,burunduk,mark69,oakland1,me1234,gmctruck,extacy,sexdog,putang,poppen,billyd,1qaz2w,loveable,gimlet,azwebitalia,ragtop,198500,qweas,mirela,rock123,11bravo,sprewell,tigrenok,jaredleto,vfhbif,blue2,rimjob,catwalk,sigsauer,loqse,doromich,jack01,lasombra,jonny5,newpassword,profesor,garcia1,123as123,croucher,demeter,4_life,rfhfvtkm,superman2,rogues,assword1,russia1,jeff1,mydream,z123456789,rascal1,darre,kimberl,pickle1,ztmfcq,ponchik,lovesporn,hikari,gsgba368,pornoman,chbjun,choppy,diggity,nightwolf,viktori,camar,vfhecmrf,alisa1,minstrel,wishmaster,mulder1,aleks,gogirl,gracelan,8womys,highwind,solstice,dbrnjhjdyf,nightman,pimmel,beertje,ms6nud,wwfwcw,fx3tuo,poopface,asshat,dirtyd,jiminy,luv2fuck,ptybnxtvgbjy,dragnet,pornogra,10inch,scarlet1,guido1,raintree,v123456,1aaaaaaa,maxim1935,hotwater,gadzooks,playaz,harri,brando1,defcon1,ivanna,123654a,arsenal2,candela,nt5d27,jaime1,duke1,burton1,allstar1,dragos,newpoint,albacore,1236987z,verygoodbot,1wildcat,fishy1,ptktysq,chris11,puschel,itdxtyrj,7kbe9d,serpico,jazzie,1zzzzz,kindbuds,wenef45313,1compute,tatung,sardor,gfyfcjybr,test99,toucan,meteora,lysander,asscrack,jowgnx,hevnm4,suckthis,masha123,karinka,marit,oqglh565,dragon00,vvvbbb,cheburashka,vfrfrf,downlow,unforgiven,p3e85tr,kim123,sillyboy,gold1,golfvr6,quicksan,irochka,froglegs,shortsto,caleb1,tishka,bigtitts,smurfy,bosto,dropzone,nocode,jazzbass,digdug,green7,saltlake,therat,dmitriev,lunita,deaddog,summer0,1212qq,bobbyg,mty3rh,isaac1,gusher,helloman,sugarbear,corvair,extrem,teatime,tujazopi,titanik,efyreg,jo9k2jw2,counchac,tivoli,utjvtnhbz,bebit,jacob6,clayton1,incubus1,flash123,squirter,dima2010,cock1,rawks,komatsu,forty2,98741236,cajun1,madelein,mudhoney,magomed,q111111,qaswed,consense,12345b,bakayaro,silencer,zoinks,bigdic,werwolf,pinkpuss,96321478,alfie1,ali123,sarit,minette,musics,chato,iaapptfcor,cobaka,strumpf,datnigga,sonic123,yfnecbr,vjzctvmz,pasta1,tribbles,crasher,htlbcrf,1tiger,shock123,bearshar,syphon,a654321,cubbies1,jlhanes,eyespy,fucktheworld,carrie1,bmw325is,suzuk,mander,dorina,mithril,hondo1,vfhnbyb,sachem,newton1,12345x,7777755102q,230857z,xxxsex,scubapro,hayastan,spankit,delasoul,searock6,fallout3,nilrem,24681357,pashka,voluntee,pharoh,willo,india1,badboy69,roflmao,gunslinger,lovergir,mama12,melange,640xwfkv,chaton,darkknig,bigman1,aabbccdd,harleyd,birdhouse,giggsy,hiawatha,tiberium,joker7,hello1234,sloopy,tm371855,greendog,solar1,bignose,djohn11,espanol,oswego,iridium,kavitha,pavell,mirjam,cyjdsvujljv,alpha5,deluge,hamme,luntik,turismo,stasya,kjkbnf,caeser,schnecke,tweety1,tralfaz,lambrett,prodigy1,trstno1,pimpshit,werty1,karman,bigboob,pastel,blackmen,matthew8,moomin,q1w2e,gilly,primaver,jimmyg,house2,elviss,15975321,1jessica,monaliza,salt55,vfylfhbyrf,harley11,tickleme,murder1,nurgle,kickass1,theresa1,fordtruck,pargolf,managua,inkognito,sherry1,gotit,friedric,metro2033,slk230,freeport,cigarett,492529,vfhctkm,thebeach,twocats,bakugan,yzerman1,charlieb,motoko,skiman,1234567w,pussy3,love77,asenna,buffie,260zntpc,kinkos,access20,mallard1,fuckyou69,monami,rrrrr1,bigdog69,mikola,1boomer,godzila,ginger2,dima2000,skorpion39,dima1234,hawkdog79,warrior2,ltleirf,supra1,jerusale,monkey01,333z333,666888,kelsey1,w8gkz2x1,fdfnfh,msnxbi,qwe123rty,mach1,monkey3,123456789qq,c123456,nezabudka,barclays,nisse,dasha1,12345678987654321,dima1993,oldspice,frank2,rabbitt,prettyboy,ov3ajy,iamthema,kawasak,banjo1,gtivr6,collants,gondor,hibees,cowboys2,codfish,buster2,purzel,rubyred,kayaker,bikerboy,qguvyt,masher,sseexx,kenshiro,moonglow,semenova,rosari,eduard1,deltaforce,grouper,bongo1,tempgod,1taylor,goldsink,qazxsw1,1jesus,m69fg2w,maximili,marysia,husker1,kokanee,sideout,googl,south1,plumber1,trillian,00001,1357900,farkle,1xxxxx,pascha,emanuela,bagheera,hound1,mylov,newjersey,swampfox,sakic19,torey,geforce,wu4etd,conrail,pigman,martin2,ber02,nascar2,angel69,barty,kitsune,cornet,yes90125,goomba,daking,anthea,sivart,weather1,ndaswf,scoubidou,masterchief,rectum,3364068,oranges1,copter,1samanth,eddies,mimoza,ahfywbz,celtic88,86mets,applemac,amanda11,taliesin,1angel,imhere,london11,bandit12,killer666,beer1,06225930,psylocke,james69,schumach,24pnz6kc,endymion,wookie1,poiu123,birdland,smoochie,lastone,rclaki,olive1,pirat,thunder7,chris69,rocko,151617,djg4bb4b,lapper,ajcuivd289,colole57,shadow7,dallas21,ajtdmw,executiv,dickies,omegaman,jason12,newhaven,aaaaaas,pmdmscts,s456123789,beatri,applesauce,levelone,strapon,benladen,creaven,ttttt1,saab95,f123456,pitbul,54321a,sex12345,robert3,atilla,mevefalkcakk,1johnny,veedub,lilleke,nitsuj,5t6y7u8i,teddys,bluefox,nascar20,vwjetta,buffy123,playstation3,loverr,qweasd12,lover2,telekom,benjamin1,alemania,neutrino,rockz,valjean,testicle,trinity3,realty,firestarter,794613852,ardvark,guadalup,philmont,arnold1,holas,zw6syj,birthday299,dover1,sexxy1,gojets,741236985,cance,blue77,xzibit,qwerty88,komarova,qweszxc,footer,rainger,silverst,ghjcnb,catmando,tatooine,31217221027711,amalgam,69dude,qwerty321,roscoe1,74185,cubby,alfa147,perry1,darock,katmandu,darknight,knicks1,freestuff,45454,kidman,4tlved,axlrose,cutie1,quantum1,joseph10,ichigo,pentium3,rfhectkm,rowdy1,woodsink,justforfun,sveta123,pornografia,mrbean,bigpig,tujheirf,delta9,portsmou,hotbod,kartal,10111213,fkbyf001,pavel1,pistons1,necromancer,verga,c7lrwu,doober,thegame1,hatesyou,sexisfun,1melissa,tuczno18,bowhunte,gobama,scorch,campeon,bruce2,fudge1,herpderp,bacon1,redsky,blackeye,19966991,19992000,ripken8,masturba,34524815,primax,paulina1,vp6y38,427cobra,4dwvjj,dracon,fkg7h4f3v6,longview,arakis,panama1,honda2,lkjhgfdsaz,razors,steels,fqkw5m,dionysus,mariajos,soroka,enriqu,nissa,barolo,king1234,hshfd4n279,holland1,flyer1,tbones,343104ky,modems,tk421,ybrbnrf,pikapp,sureshot,wooddoor,florida2,mrbungle,vecmrf,catsdogs,axolotl,nowayout,francoi,chris21,toenail,hartland,asdjkl,nikkii,onlyyou,buckskin,fnord,flutie,holen1,rincewind,lefty1,ducky1,199000,fvthbrf,redskin1,ryno23,lostlove,19mtpgam19,abercrom,benhur,jordan11,roflcopter,ranma,phillesh,avondale,igromania,p4ssword,jenny123,tttttt1,spycams,cardigan,2112yyz,sleepy1,paris123,mopars,lakers34,hustler1,james99,matrix3,popimp,12pack,eggbert,medvedev,testit,performa,logitec,marija,sexybeast,supermanboy,iwantit,rjktcj,jeffer,svarog,halo123,whdbtp,nokia3230,heyjoe,marilyn1,speeder,ibxnsm,prostock,bennyboy,charmin,codydog,parol999,ford9402,jimmer,crayola,159357258,alex77,joey1,cayuga,phish420,poligon,specops,tarasova,caramelo,draconis,dimon,cyzkhw,june29,getbent,1guitar,jimjam,dictiona,shammy,flotsam,0okm9ijn,crapper,technic,fwsadn,rhfdxtyrj,zaq11qaz,anfield1,159753q,curious1,hip-hop,1iiiii,gfhjkm2,cocteau,liveevil,friskie,crackhead,b1afra,elektrik,lancer1,b0ll0cks,jasond,z1234567,tempest1,alakazam,asdfasd,duffy1,oneday,dinkle,qazedctgb,kasimir,happy7,salama,hondaciv,nadezda,andretti,cannondale,sparticu,znbvjd,blueice,money01,finster,eldar,moosie,pappa,delta123,neruda,bmw330ci,jeanpaul,malibu1,alevtina,sobeit,travolta,fullmetal,enamorad,mausi,boston12,greggy,smurf1,ratrace,ichiban,ilovepus,davidg,wolf69,villa1,cocopuff,football12,starfury,zxc12345,forfree,fairfiel,dreams1,tayson,mike2,dogday,hej123,oldtimer,sanpedro,clicker,mollycat,roadstar,golfe,lvbnhbq1,topdevice,a1b2c,sevastopol,calli,milosc,fire911,pink123,team3x,nolimit5,snickers1,annies,09877890,jewel1,steve69,justin11,autechre,killerbe,browncow,slava1,christer,fantomen,redcloud,elenberg,beautiful1,passw0rd1,nazira,advantag,cockring,chaka,rjpzdrf,99941,az123456,biohazar,energie,bubble1,bmw323,tellme,printer1,glavine,1starwar,coolbeans,april17,carly1,quagmire,admin2,djkujuhfl,pontoon,texmex,carlos12,thermo,vaz2106,nougat,bob666,1hockey,1john,cricke,qwerty10,twinz,totalwar,underwoo,tijger,lildevil,123q321,germania,freddd,1scott,beefy,5t4r3e2w1q,fishbait,nobby,hogger,dnstuff,jimmyc,redknapp,flame1,tinfloor,balla,nfnfhby,yukon1,vixens,batata,danny123,1zxcvbnm,gaetan,homewood,greats,tester1,green99,1fucker,sc0tland,starss,glori,arnhem,goatman,1234asd,supertra,bill123,elguapo,sexylegs,jackryan,usmc69,innow,roaddog,alukard,winter11,crawler,gogiants,rvd420,alessandr,homegrow,gobbler,esteba,valeriy,happy12,1joshua,hawking,sicnarf,waynes,iamhappy,bayadera,august2,sashas,gotti,dragonfire,pencil1,halogen,borisov,bassingw,15975346,zachar,sweetp,soccer99,sky123,flipyou,spots3,xakepy,cyclops1,dragon77,rattolo58,motorhea,piligrim,helloween,dmb2010,supermen,shad0w,eatcum,sandokan,pinga,ufkfrnbrf,roksana,amista,pusser,sony1234,azerty1,1qasw2,ghbdt,q1w2e3r4t5y6u7i8,ktutylf,brehznev,zaebali,shitass,creosote,gjrtvjy,14938685,naughtyboy,pedro123,21crack,maurice1,joesakic,nicolas1,matthew9,lbyfhf,elocin,hfcgbplzq,pepper123,tiktak,mycroft,ryan11,firefly1,arriva,cyecvevhbr,loreal,peedee,jessica8,lisa01,anamari,pionex,ipanema,airbag,frfltvbz,123456789aa,epwr49,casper12,sweethear,sanandreas,wuschel,cocodog,france1,119911,redroses,erevan,xtvgbjy,bigfella,geneve,volvo850,evermore,amy123,moxie,celebs,geeman,underwor,haslo1,joy123,hallow,chelsea0,12435687,abarth,12332145,tazman1,roshan,yummie,genius1,chrisd,ilovelife,seventy7,qaz1wsx2,rocket88,gaurav,bobbyboy,tauchen,roberts1,locksmit,masterof,www111,d9ungl,volvos40,asdasd1,golfers,jillian1,7xm5rq,arwpls4u,gbhcf2,elloco,football2,muerte,bob101,sabbath1,strider1,killer66,notyou,lawnboy,de7mdf,johnnyb,voodoo2,sashaa,homedepo,bravos,nihao123,braindea,weedhead,rajeev,artem1,camille1,rockss,bobbyb,aniston,frnhbcf,oakridge,biscayne,cxfcnm,dressage,jesus3,kellyann,king69,juillet,holliste,h00ters,ripoff,123645,1999ar,eric12,123777,tommi,dick12,bilder,chris99,rulezz,getpaid,chicubs,ender1,byajhvfnbrf,milkshak,sk8board,freakshow,antonella,monolit,shelb,hannah01,masters1,pitbull1,1matthew,luvpussy,agbdlcid,panther2,alphas,euskadi,8318131,ronnie1,7558795,sweetgirl,cookie59,sequoia,5552555,ktyxbr,4500455,money7,severus,shinobu,dbityrf,phisig,rogue2,fractal,redfred,sebastian1,nelli,b00mer,cyberman,zqjphsyf6ctifgu,oldsmobile,redeemer,pimpi,lovehurts,1slayer,black13,rtynfdh,airmax,g00gle,1panther,artemon,nopasswo,fuck1234,luke1,trinit,666000,ziadma,oscardog,davex,hazel1,isgood,demond,james5,construc,555551,january2,m1911a1,flameboy,merda,nathan12,nicklaus,dukester,hello99,scorpio7,leviathan,dfcbktr,pourquoi,vfrcbv123,shlomo,rfcgth,rocky3,ignatz,ajhneyf,roger123,squeek,4815162342a,biskit,mossimo,soccer21,gridlock,lunker,popstar,ghhh47hj764,chutney,nitehawk,vortec,gamma1,codeman,dragula,kappasig,rainbow2,milehigh,blueballs,ou8124me,rulesyou,collingw,mystere,aster,astrovan,firetruck,fische,crawfish,hornydog,morebeer,tigerpaw,radost,144000,1chance,1234567890qwe,gracie1,myopia,oxnard,seminoles,evgeni,edvard,partytim,domani,tuffy1,jaimatadi,blackmag,kzueirf,peternor,mathew1,maggie12,henrys,k1234567,fasted,pozitiv,cfdtkbq,jessica7,goleafs,bandito,girl78,sharingan,skyhigh,bigrob,zorros,poopers,oldschoo,pentium2,gripper,norcal,kimba,artiller,moneymak,00197400,272829,shadow1212,thebull,handbags,all4u2c,bigman2,civics,godisgoo,section8,bandaid,suzanne1,zorba,159123,racecars,i62gbq,rambo123,ironroad,johnson2,knobby,twinboys,sausage1,kelly69,enter2,rhjirf,yessss,james12,anguilla,boutit,iggypop,vovochka,06060,budwiser,romuald,meditate,good1,sandrin,herkules,lakers8,honeybea,11111111a,miche,rangers9,lobster1,seiko,belova,midcon,mackdadd,bigdaddy1,daddie,sepultur,freddy12,damon1,stormy1,hockey2,bailey12,hedimaptfcor,dcowboys,sadiedog,thuggin,horny123,josie1,nikki2,beaver69,peewee1,mateus,viktorija,barrys,cubswin1,matt1234,timoxa,rileydog,sicilia,luckycat,candybar,julian1,abc456,pussylip,phase1,acadia,catty,246800,evertonf,bojangle,qzwxec,nikolaj,fabrizi,kagome,noncapa0,marle,popol,hahaha1,cossie,carla10,diggers,spankey,sangeeta,cucciolo,breezer,starwar1,cornholio,rastafari,spring99,yyyyyyy1,webstar,72d5tn,sasha1234,inhouse,gobuffs,civic1,redstone,234523,minnie1,rivaldo,angel5,sti2000,xenocide,11qq11,1phoenix,herman1,holly123,tallguy,sharks1,madri,superbad,ronin,jalal123,hardbody,1234567r,assman1,vivahate,buddylee,38972091,bonds25,40028922,qrhmis,wp2005,ceejay,pepper01,51842543,redrum1,renton,varadero,tvxtjk7r,vetteman,djhvbrc,curly1,fruitcak,jessicas,maduro,popmart,acuari,dirkpitt,buick1,bergerac,golfcart,pdtpljxrf,hooch1,dudelove,d9ebk7,123452000,afdjhbn,greener,123455432,parachut,mookie12,123456780,jeepcj5,potatoe,sanya,qwerty2010,waqw3p,gotika,freaky1,chihuahu,buccanee,ecstacy,crazyboy,slickric,blue88,fktdnbyf,2004rj,delta4,333222111,calient,ptbdhw,1bailey,blitz1,sheila1,master23,hoagie,pyf8ah,orbita,daveyboy,prono1,delta2,heman,1horny,tyrik123,ostrov,md2020,herve,rockfish,el546218,rfhbyjxrf,chessmaster,redmoon,lenny1,215487,tomat,guppy,amekpass,amoeba,my3girls,nottingh,kavita,natalia1,puccini,fabiana,8letters,romeos,netgear,casper2,taters,gowings,iforgot1,pokesmot,pollit,lawrun,petey1,rosebuds,007jr,gthtcnhjqrf,k9dls02a,neener,azertyu,duke11,manyak,tiger01,petros,supermar,mangas,twisty,spotter,takagi,dlanod,qcmfd454,tusymo,zz123456,chach,navyblue,gilbert1,2kash6zq,avemaria,1hxboqg2s,viviane,lhbjkjubz2957704,nowwowtg,1a2b3c4,m0rn3,kqigb7,superpuper,juehtw,gethigh,theclown,makeme,pradeep,sergik,deion21,nurik,devo2706,nbvibt,roman222,kalima,nevaeh,martin7,anathema,florian1,tamwsn3sja,dinmamma,133159,123654q,slicks,pnp0c08,yojimbo,skipp,kiran,pussyfuck,teengirl,apples12,myballs,angeli,1234a,125678,opelastra,blind1,armagedd,fish123,pitufo,chelseaf,thedevil,nugget1,cunt69,beetle1,carter15,apolon,collant,password00,fishboy,djkrjdf,deftone,celti,three11,cyrus1,lefthand,skoal1,ferndale,aries1,fred01,roberta1,chucks,cornbread,lloyd1,icecrea,cisco123,newjerse,vfhrbpf,passio,volcom1,rikimaru,yeah11,djembe,facile,a1l2e3x4,batman7,nurbol,lorenzo1,monica69,blowjob1,998899,spank1,233391,n123456,1bear,bellsout,999998,celtic67,sabre1,putas,y9enkj,alfabeta,heatwave,honey123,hard4u,insane1,xthysq,magnum1,lightsaber,123qweqwe,fisher1,pixie1,precios,benfic,thegirls,bootsman,4321rewq,nabokov,hightime,djghjc,1chelsea,junglist,august16,t3fkvkmj,1232123,lsdlsd12,chuckie1,pescado,granit,toogood,cathouse,natedawg,bmw530,123kid,hajime,198400,engine1,wessonnn,kingdom1,novembre,1rocks,kingfisher,qwerty89,jordan22,zasranec,megat,sucess,installutil,fetish01,yanshi1982,1313666,1314520,clemence,wargod,time1,newzealand,snaker,13324124,cfrehf,hepcat,mazahaka,bigjay,denisov,eastwest,1yellow,mistydog,cheetos,1596357,ginger11,mavrik,bubby1,bhbyf,pyramide,giusepp,luthien,honda250,andrewjackie,kentavr,lampoon,zaq123wsx,sonicx,davidh,1ccccc,gorodok,windsong,programm,blunt420,vlad1995,zxcvfdsa,tarasov,mrskin,sachas,mercedes1,koteczek,rawdog,honeybear,stuart1,kaktys,richard7,55555n,azalia,hockey10,scouter,francy,1xxxxxx,julie456,tequilla,penis123,schmoe,tigerwoods,1ferrari,popov,snowdrop,matthieu,smolensk,cornflak,jordan01,love2000,23wesdxc,kswiss,anna2000,geniusnet,baby2000,33ds5x,waverly,onlyone4,networkingpe,raven123,blesse,gocards,wow123,pjflkork,juicey,poorboy,freeee,billybo,shaheen,zxcvbnm.,berlit,truth1,gepard,ludovic,gunther1,bobby2,bob12345,sunmoon,septembr,bigmac1,bcnjhbz,seaking,all4u,12qw34er56ty,bassie,nokia5228,7355608,sylwia,charvel,billgate,davion,chablis,catsmeow,kjiflrf,amylynn,rfvbkkf,mizredhe,handjob,jasper12,erbol,solara,bagpipe,biffer,notime,erlan,8543852,sugaree,oshkosh,fedora,bangbus,5lyedn,longball,teresa1,bootyman,aleksand,qazwsxedc12,nujbhc,tifosi,zpxvwy,lights1,slowpoke,tiger12,kstate,password10,alex69,collins1,9632147,doglover,baseball2,security1,grunts,orange2,godloves,213qwe879,julieb,1qazxsw23edcvfr4,noidea,8uiazp,betsy1,junior2,parol123,123456zz,piehonkii,kanker,bunky,hingis,reese1,qaz123456,sidewinder,tonedup,footsie,blackpoo,jalapeno,mummy1,always1,josh1,rockyboy,plucky,chicag,nadroj,blarney,blood123,wheaties,packer1,ravens1,mrjones,gfhjkm007,anna2010,awatar,guitar12,hashish,scale1,tomwaits,amrita,fantasma,rfpfym,pass2,tigris,bigair,slicker,sylvi,shilpa,cindylou,archie1,bitches1,poppys,ontime,horney1,camaroz28,alladin,bujhm,cq2kph,alina1,wvj5np,1211123a,tetons,scorelan,concordi,morgan2,awacs,shanty,tomcat14,andrew123,bear69,vitae,fred99,chingy,octane,belgario,fatdaddy,rhodan,password23,sexxes,boomtown,joshua01,war3demo,my2kids,buck1,hot4you,monamour,12345aa,yumiko,parool,carlton1,neverland,rose12,right1,sociald,grouse,brandon0,cat222,alex00,civicex,bintang,malkav,arschloc,dodgeviper,qwerty666,goduke,dante123,boss1,ontheroc,corpsman,love14,uiegu451,hardtail,irondoor,ghjrehfnehf,36460341,konijn,h2slca,kondom25,123456ss,cfytxrf,btnjey,nando,freemail,comander,natas666,siouxsie,hummer1,biomed,dimsum,yankees0,diablo666,lesbian1,pot420,jasonm,glock23,jennyb,itsmine,lena2010,whattheh,beandip,abaddon,kishore,signup,apogee,biteme12,suzieq,vgfun4,iseeyou,rifleman,qwerta,4pussy,hawkman,guest1,june17,dicksuck,bootay,cash12,bassale,ktybyuhfl,leetch,nescafe,7ovtgimc,clapton1,auror,boonie,tracker1,john69,bellas,cabinboy,yonkers,silky1,ladyffesta,drache,kamil1,davidp,bad123,snoopy12,sanche,werthvfy,achille,nefertiti,gerald1,slage33,warszawa,macsan26,mason123,kotopes,welcome8,nascar99,kiril,77778888,hairy1,monito,comicsans,81726354,killabee,arclight,yuo67,feelme,86753099,nnssnn,monday12,88351132,88889999,websters,subito,asdf12345,vaz2108,zvbxrpl,159753456852,rezeda,multimed,noaccess,henrique,tascam,captiva,zadrot,hateyou,sophie12,123123456,snoop1,charlie8,birmingh,hardline,libert,azsxdcf,89172735872,rjpthju,bondar,philips1,olegnaruto,myword,yakman,stardog,banana12,1234567890w,farout,annick,duke01,rfj422,billard,glock19,shaolin1,master10,cinderel,deltaone,manning1,biggreen,sidney1,patty1,goforit1,766rglqy,sevendus,aristotl,armagedo,blumen,gfhfyjz,kazakov,lekbyxxx,accord1,idiota,soccer16,texas123,victoire,ololo,chris01,bobbbb,299792458,eeeeeee1,confiden,07070,clarks,techno1,kayley,stang1,wwwwww1,uuuuu1,neverdie,jasonr,cavscout,481516234,mylove1,shaitan,1qazxcvb,barbaros,123456782000,123wer,thissucks,7seven,227722,faerie,hayduke,dbacks,snorkel,zmxncbv,tiger99,unknown1,melmac,polo1234,sssssss1,1fire,369147,bandung,bluejean,nivram,stanle,ctcnhf,soccer20,blingbli,dirtball,alex2112,183461,skylin,boobman,geronto,brittany1,yyz2112,gizmo69,ktrcec,dakota12,chiken,sexy11,vg08k714,bernadet,1bulldog,beachs,hollyb,maryjoy,margo1,danielle1,chakra,alexand,hullcity,matrix12,sarenna,pablos,antler,supercar,chomsky,german1,airjordan,545ettvy,camaron,flight1,netvideo,tootall,valheru,481516,1234as,skimmer,redcross,inuyash,uthvfy,1012nw,edoardo,bjhgfi,golf11,9379992a,lagarto,socball,boopie,krazy,.adgjmptw,gaydar,kovalev,geddylee,firstone,turbodog,loveee,135711,badbo,trapdoor,opopop11,danny2,max2000,526452,kerry1,leapfrog,daisy2,134kzbip,1andrea,playa1,peekab00,heskey,pirrello,gsewfmck,dimon4ik,puppie,chelios,554433,hypnodanny,fantik,yhwnqc,ghbdtngjrf,anchorag,buffett1,fanta,sappho,024680,vialli,chiva,lucylu,hashem,exbntkm,thema,23jordan,jake11,wildside,smartie,emerica,2wj2k9oj,ventrue,timoth,lamers,baerchen,suspende,boobis,denman85,1adam12,otello,king12,dzakuni,qsawbbs,isgay,porno123,jam123,daytona1,tazzie,bunny123,amaterasu,jeffre,crocus,mastercard,bitchedup,chicago7,aynrand,intel1,tamila,alianza,mulch,merlin12,rose123,alcapone,mircea,loveher,joseph12,chelsea6,dorothy1,wolfgar,unlimite,arturik,qwerty3,paddy1,piramid,linda123,cooool,millie1,warlock1,forgotit,tort02,ilikeyou,avensis,loveislife,dumbass1,clint1,2110se,drlove,olesia,kalinina,sergey123,123423,alicia1,markova,tri5a3,media1,willia1,xxxxxxx1,beercan,smk7366,jesusislord,motherfuck,smacker,birthday5,jbaby,harley2,hyper1,a9387670a,honey2,corvet,gjmptw,rjhjkmbien,apollon,madhuri,3a5irt,cessna17,saluki,digweed,tamia1,yja3vo,cfvlehfr,1111111q,martyna,stimpy1,anjana,yankeemp,jupiler,idkfa,1blue,fromv,afric,3xbobobo,liverp00l,nikon1,amadeus1,acer123,napoleo,david7,vbhjckfdf,mojo69,percy1,pirates1,grunt1,alenushka,finbar,zsxdcf,mandy123,1fred,timewarp,747bbb,druids,julia123,123321qq,spacebar,dreads,fcbarcelona,angela12,anima,christopher1,stargazer,123123s,hockey11,brewski,marlbor,blinker,motorhead,damngood,werthrf,letmein3,moremoney,killer99,anneke,eatit,pilatus,andrew01,fiona1,maitai,blucher,zxgdqn,e5pftu,nagual,panic1,andron,openwide,alphabeta,alison1,chelsea8,fende,mmm666,1shot2,a19l1980,123456@,1black,m1chael,vagner,realgood,maxxx,vekmnbr,stifler,2509mmh,tarkan,sherzod,1234567b,gunners1,artem2010,shooby,sammie1,p123456,piggie,abcde12345,nokia6230,moldir,piter,1qaz3edc,frequenc,acuransx,1star,nikeair,alex21,dapimp,ranjan,ilovegirls,anastasiy,berbatov,manso,21436587,leafs1,106666,angelochek,ingodwetrust,123456aaa,deano,korsar,pipetka,thunder9,minka,himura,installdevic,1qqqqq,digitalprodu,suckmeoff,plonker,headers,vlasov,ktr1996,windsor1,mishanya,garfield1,korvin,littlebit,azaz09,vandamme,scripto,s4114d,passward,britt1,r1chard,ferrari5,running1,7xswzaq,falcon2,pepper76,trademan,ea53g5,graham1,volvos80,reanimator,micasa,1234554321q,kairat,escorpion,sanek94,karolina1,kolovrat,karen2,1qaz@wsx,racing1,splooge,sarah2,deadman1,creed1,nooner,minicoop,oceane,room112,charme,12345ab,summer00,wetcunt,drewman,nastyman,redfire,appels,merlin69,dolfin,bornfree,diskette,ohwell,12345678qwe,jasont,madcap,cobra2,dolemit1,whatthehell,juanit,voldemar,rocke,bianc,elendil,vtufgjkbc,hotwheels,spanis,sukram,pokerface,k1ller,freakout,dontae,realmadri,drumss,gorams,258789,snakey,jasonn,whitewolf,befree,johnny99,pooka,theghost,kennys,vfvektxrf,toby1,jumpman23,deadlock,barbwire,stellina,alexa1,dalamar,mustanggt,northwes,tesoro,chameleo,sigtau,satoshi,george11,hotcum,cornell1,golfer12,geek01d,trololo,kellym,megapolis,pepsi2,hea666,monkfish,blue52,sarajane,bowler1,skeets,ddgirls,hfccbz,bailey01,isabella1,dreday,moose123,baobab,crushme,000009,veryhot,roadie,meanone,mike18,henriett,dohcvtec,moulin,gulnur,adastra,angel9,western1,natura,sweetpe,dtnfkm,marsbar,daisys,frogger1,virus1,redwood1,streetball,fridolin,d78unhxq,midas,michelob,cantik,sk2000,kikker,macanudo,rambone,fizzle,20000,peanuts1,cowpie,stone32,astaroth,dakota01,redso,mustard1,sexylove,giantess,teaparty,bobbin,beerbong,monet1,charles3,anniedog,anna1988,cameleon,longbeach,tamere,qpful542,mesquite,waldemar,12345zx,iamhere,lowboy,canard,granp,daisymay,love33,moosejaw,nivek,ninjaman,shrike01,aaa777,88002000600,vodolei,bambush,falcor,harley69,alphaomega,severine,grappler,bosox,twogirls,gatorman,vettes,buttmunch,chyna,excelsio,crayfish,birillo,megumi,lsia9dnb9y,littlebo,stevek,hiroyuki,firehous,master5,briley2,gangste,chrisk,camaleon,bulle,troyboy,froinlaven,mybutt,sandhya,rapala,jagged,crazycat,lucky12,jetman,wavmanuk,1heather,beegee,negril,mario123,funtime1,conehead,abigai,mhorgan,patagoni,travel1,backspace,frenchfr,mudcat,dashenka,baseball3,rustys,741852kk,dickme,baller23,griffey1,suckmycock,fuhrfzgc,jenny2,spuds,berlin1,justfun,icewind,bumerang,pavlusha,minecraft123,shasta1,ranger12,123400,twisters,buthead,miked,finance1,dignity7,hello9,lvjdp383,jgthfnjh,dalmatio,paparoach,miller31,2bornot2b,fathe,monterre,theblues,satans,schaap,jasmine2,sibelius,manon,heslo,jcnhjd,shane123,natasha2,pierrot,bluecar,iloveass,harriso,red12,london20,job314,beholder,reddawg,fuckyou!,pussylick,bologna1,austintx,ole4ka,blotto,onering,jearly,balbes,lightbul,bighorn,crossfir,lee123,prapor,1ashley,gfhjkm22,wwe123,09090,sexsite,marina123,jagua,witch1,schmoo,parkview,dragon3,chilango,ultimo,abramova,nautique,2bornot2,duende,1arthur,nightwing,surfboar,quant4307,15s9pu03,karina1,shitball,walleye1,wildman1,whytesha,1morgan,my2girls,polic,baranova,berezuckiy,kkkkkk1,forzima,fornow,qwerty02,gokart,suckit69,davidlee,whatnow,edgard,tits1,bayshore,36987412,ghbphfr,daddyy,explore1,zoidberg,5qnzjx,morgane,danilov,blacksex,mickey12,balsam,83y6pv,sarahc,slaye,all4u2,slayer69,nadia1,rlzwp503,4cranker,kaylie,numberon,teremok,wolf12,deeppurple,goodbeer,aaa555,66669999,whatif,harmony1,ue8fpw,3tmnej,254xtpss,dusty197,wcksdypk,zerkalo,dfnheirf,motorol,digita,whoareyou,darksoul,manics,rounders,killer11,d2000lb,cegthgfhjkm,catdog1,beograd,pepsico,julius1,123654987,softbal,killer23,weasel1,lifeson,q123456q,444555666,bunches,andy1,darby1,service01,bear11,jordan123,amega,duncan21,yensid,lerxst,rassvet,bronco2,fortis,pornlove,paiste,198900,asdflkjh,1236547890,futur,eugene1,winnipeg261,fk8bhydb,seanjohn,brimston,matthe1,bitchedu,crisco,302731,roxydog,woodlawn,volgograd,ace1210,boy4u2ownnyc,laura123,pronger,parker12,z123456z,andrew13,longlife,sarang,drogba,gobruins,soccer4,holida,espace,almira,murmansk,green22,safina,wm00022,1chevy,schlumpf,doroth,ulises,golf99,hellyes,detlef,mydog,erkina,bastardo,mashenka,sucram,wehttam,generic1,195000,spaceboy,lopas123,scammer,skynyrd,daddy2,titani,ficker,cr250r,kbnthfnehf,takedown,sticky1,davidruiz,desant,nremtp,painter1,bogies,agamemno,kansas1,smallfry,archi,2b4dnvsx,1player,saddie,peapod,6458zn7a,qvw6n2,gfxqx686,twice2,sh4d0w3d,mayfly,375125,phitau,yqmbevgk,89211375759,kumar1,pfhfpf,toyboy,way2go,7pvn4t,pass69,chipster,spoony,buddycat,diamond3,rincewin,hobie,david01,billbo,hxp4life,matild,pokemon2,dimochka,clown1,148888,jenmt3,cuxldv,cqnwhy,cde34rfv,simone1,verynice,toobig,pasha123,mike00,maria2,lolpop,firewire,dragon9,martesana,a1234567890,birthday3,providen,kiska,pitbulls,556655,misawa,damned69,martin11,goldorak,gunship,glory1,winxclub,sixgun,splodge,agent1,splitter,dome69,ifghjb,eliza1,snaiper,wutang36,phoenix7,666425,arshavin,paulaner,namron,m69fg1w,qwert1234,terrys,zesyrmvu,joeman,scoots,dwml9f,625vrobg,sally123,gostoso,symow8,pelota,c43qpul5rz,majinbuu,lithium1,bigstuff,horndog1,kipelov,kringle,1beavis,loshara,octobe,jmzacf,12342000,qw12qw,runescape1,chargers1,krokus,piknik,jessy,778811,gjvbljh,474jdvff,pleaser,misskitty,breaker1,7f4df451,dayan,twinky,yakumo,chippers,matia,tanith,len2ski1,manni,nichol1,f00b4r,nokia3110,standart,123456789i,shami,steffie,larrywn,chucker,john99,chamois,jjjkkk,penmouse,ktnj2010,gooners,hemmelig,rodney1,merlin01,bearcat1,1yyyyy,159753z,1fffff,1ddddd,thomas11,gjkbyrf,ivanka,f1f2f3,petrovna,phunky,conair,brian2,creative1,klipsch,vbitymrf,freek,breitlin,cecili,westwing,gohabsgo,tippmann,1steve,quattro6,fatbob,sp00ky,rastas,1123581,redsea,rfnmrf,jerky1,1aaaaaa,spk666,simba123,qwert54321,123abcd,beavis69,fyfyfc,starr1,1236547,peanutbutter,sintra,12345abcde,1357246,abcde1,climbon,755dfx,mermaids,monte1,serkan,geilesau,777win,jasonc,parkside,imagine1,rockhead,producti,playhard,principa,spammer,gagher,escada,tsv1860,dbyjuhfl,cruiser1,kennyg,montgome,2481632,pompano,cum123,angel6,sooty,bear01,april6,bodyhamm,pugsly,getrich,mikes,pelusa,fosgate,jasonp,rostislav,kimberly1,128mo,dallas11,gooner1,manuel1,cocacola1,imesh,5782790,password8,daboys,1jones,intheend,e3w2q1,whisper1,madone,pjcgujrat,1p2o3i,jamesp,felicida,nemrac,phikap,firecat,jrcfyjxrf,matt12,bigfan,doedel,005500,jasonx,1234567k,badfish,goosey,utjuhfabz,wilco,artem123,igor123,spike123,jor23dan,dga9la,v2jmsz,morgan12,avery1,dogstyle,natasa,221195ws,twopac,oktober7,karthik,poop1,mightymo,davidr,zermatt,jehova,aezakmi1,dimwit,monkey5,serega123,qwerty111,blabl,casey22,boy123,1clutch,asdfjkl1,hariom,bruce10,jeep95,1smith,sm9934,karishma,bazzzz,aristo,669e53e1,nesterov,kill666,fihdfv,1abc2,anna1,silver11,mojoman,telefono,goeagles,sd3lpgdr,rfhfynby,melinda1,llcoolj,idteul,bigchief,rocky13,timberwo,ballers,gatekeep,kashif,hardass,anastasija,max777,vfuyjkbz,riesling,agent99,kappas,dalglish,tincan,orange3,turtoise,abkbvjy,mike24,hugedick,alabala,geolog,aziza,devilboy,habanero,waheguru,funboy,freedom5,natwest,seashore,impaler,qwaszx1,pastas,bmw535,tecktonik,mika00,jobsearc,pinche,puntang,aw96b6,1corvett,skorpio,foundati,zzr1100,gembird,vfnhjcrby,soccer18,vaz2110,peterp,archer1,cross1,samedi,dima1992,hunter99,lipper,hotbody,zhjckfdf,ducati1,trailer1,04325956,cheryl1,benetton,kononenko,sloneczko,rfgtkmrf,nashua,balalaika,ampere,eliston,dorsai,digge,flyrod,oxymoron,minolta,ironmike,majortom,karimov,fortun,putaria,an83546921an13,blade123,franchis,mxaigtg5,dynxyu,devlt4,brasi,terces,wqmfuh,nqdgxz,dale88,minchia,seeyou,housepen,1apple,1buddy,mariusz,bighouse,tango2,flimflam,nicola1,qwertyasd,tomek1,shumaher,kartoshka,bassss,canaries,redman1,123456789as,preciosa,allblacks,navidad,tommaso,beaudog,forrest1,green23,ryjgjxrf,go4it,ironman2,badnews,butterba,1grizzly,isaeva,rembrand,toront,1richard,bigjon,yfltymrf,1kitty,4ng62t,littlejo,wolfdog,ctvtyjd,spain1,megryan,tatertot,raven69,4809594q,tapout,stuntman,a131313,lagers,hotstuf,lfdbl11,stanley2,advokat,boloto,7894561,dooker,adxel187,cleodog,4play,0p9o8i,masterb,bimota,charlee,toystory,6820055,6666667,crevette,6031769,corsa,bingoo,dima1990,tennis11,samuri,avocado,melissa6,unicor,habari,metart,needsex,cockman,hernan,3891576,3334444,amigo1,gobuffs2,mike21,allianz,2835493,179355,midgard,joey123,oneluv,ellis1,towncar,shonuff,scouse,tool69,thomas19,chorizo,jblaze,lisa1,dima1999,sophia1,anna1989,vfvekbxrf,krasavica,redlegs,jason25,tbontb,katrine,eumesmo,vfhufhbnrf,1654321,asdfghj1,motdepas,booga,doogle,1453145,byron1,158272,kardinal,tanne,fallen1,abcd12345,ufyljy,n12345,kucing,burberry,bodger,1234578,februar,1234512,nekkid,prober,harrison1,idlewild,rfnz90,foiegras,pussy21,bigstud,denzel,tiffany2,bigwill,1234567890zzz,hello69,compute1,viper9,hellspaw,trythis,gococks,dogballs,delfi,lupine,millenia,newdelhi,charlest,basspro,1mike,joeblack,975310,1rosebud,batman11,misterio,fucknut,charlie0,august11,juancho,ilonka,jigei743ks,adam1234,889900,goonie,alicat,ggggggg1,1zzzzzzz,sexywife,northstar,chris23,888111,containe,trojan1,jason5,graikos,1ggggg,1eeeee,tigers01,indigo1,hotmale,jacob123,mishima,richard3,cjxb2014,coco123,meagain,thaman,wallst,edgewood,bundas,1power,matilda1,maradon,hookedup,jemima,r3vi3wpass,2004-10-,mudman,taz123,xswzaq,emerson1,anna21,warlord1,toering,pelle,tgwdvu,masterb8,wallstre,moppel,priora,ghjcnjrdfif,yoland,12332100,1j9e7f6f,jazzzz,yesman,brianm,42qwerty42,12345698,darkmanx,nirmal,john31,bb123456,neuspeed,billgates,moguls,fj1200,hbhlair,shaun1,ghbdfn,305pwzlr,nbu3cd,susanb,pimpdad,mangust6403,joedog,dawidek,gigante,708090,703751,700007,ikalcr,tbivbn,697769,marvi,iyaayas,karen123,jimmyboy,dozer1,e6z8jh,bigtime1,getdown,kevin12,brookly,zjduc3,nolan1,cobber,yr8wdxcq,liebe,m1garand,blah123,616879,action1,600000,sumitomo,albcaz,asian1,557799,dave69,556699,sasa123,streaker,michel1,karate1,buddy7,daulet,koks888,roadtrip,wapiti,oldguy,illini1,1234qq,mrspock,kwiatek,buterfly,august31,jibxhq,jackin,taxicab,tristram,talisker,446655,444666,chrisa,freespace,vfhbfyyf,chevell,444333,notyours,442244,christian1,seemore,sniper12,marlin1,joker666,multik,devilish,crf450,cdfoli,eastern1,asshead,duhast,voyager2,cyberia,1wizard,cybernet,iloveme1,veterok,karandash,392781,looksee,diddy,diabolic,foofight,missey,herbert1,bmw318i,premier1,zsfmpv,eric1234,dun6sm,fuck11,345543,spudman,lurker,bitem,lizzy1,ironsink,minami,339311,s7fhs127,sterne,332233,plankton,galax,azuywe,changepa,august25,mouse123,sikici,killer69,xswqaz,quovadis,gnomik,033028pw,777777a,barrakuda,spawn666,goodgod,slurp,morbius,yelnats,cujo31,norman1,fastone,earwig,aureli,wordlife,bnfkbz,yasmi,austin123,timberla,missy2,legalize,netcom,liljon,takeit,georgin,987654321z,warbird,vitalina,all4u3,mmmmmm1,bichon,ellobo,wahoos,fcazmj,aksarben,lodoss,satnam,vasili,197800,maarten,sam138989,0u812,ankita,walte,prince12,anvils,bestia,hoschi,198300,univer,jack10,ktyecbr,gr00vy,hokie,wolfman1,fuckwit,geyser,emmanue,ybrjkftd,qwerty33,karat,dblock,avocat,bobbym,womersle,1please,nostra,dayana,billyray,alternat,iloveu1,qwerty69,rammstein1,mystikal,winne,drawde,executor,craxxxs,ghjcnjnf,999888777,welshman,access123,963214785,951753852,babe69,fvcnthlfv,****me,666999666,testing2,199200,nintendo64,oscarr,guido8,zhanna,gumshoe,jbird,159357456,pasca,123452345,satan6,mithrand,fhbirf,aa1111aa,viggen,ficktjuv,radial9,davids1,rainbow7,futuro,hipho,platin,poppy123,rhenjq,fulle,rosit,chicano,scrumpy,lumpy1,seifer,uvmrysez,autumn1,xenon,susie1,7u8i9o0p,gamer1,sirene,muffy1,monkeys1,kalinin,olcrackmaster,hotmove,uconn,gshock,merson,lthtdyz,pizzaboy,peggy1,pistache,pinto1,fishka,ladydi,pandor,baileys,hungwell,redboy,rookie1,amanda01,passwrd,clean1,matty1,tarkus,jabba1,bobster,beer30,solomon1,moneymon,sesamo,fred11,sunnysid,jasmine5,thebears,putamadre,workhard,flashbac,counter1,liefde,magnat,corky1,green6,abramov,lordik,univers,shortys,david3,vip123,gnarly,1234567s,billy2,honkey,deathstar,grimmy,govinda,direktor,12345678s,linus1,shoppin,rekbrjdf,santeria,prett,berty75,mohican,daftpunk,uekmyfhf,chupa,strats,ironbird,giants56,salisbur,koldun,summer04,pondscum,jimmyj,miata1,george3,redshoes,weezie,bartman1,0p9o8i7u,s1lver,dorkus,125478,omega9,sexisgood,mancow,patric1,jetta1,074401,ghjuhtcc,gfhjk,bibble,terry2,123213,medicin,rebel2,hen3ry,4freedom,aldrin,lovesyou,browny,renwod,winnie1,belladon,1house,tyghbn,blessme,rfhfrfnbwf,haylee,deepdive,booya,phantasy,gansta,cock69,4mnveh,gazza1,redapple,structur,anakin1,manolito,steve01,poolman,chloe123,vlad1998,qazwsxe,pushit,random123,ontherocks,o236nq,brain1,dimedrol,agape,rovnogod,1balls,knigh,alliso,love01,wolf01,flintstone,beernuts,tuffguy,isengard,highfive,alex23,casper99,rubina,getreal,chinita,italian1,airsoft,qwerty23,muffdiver,willi1,grace123,orioles1,redbull1,chino1,ziggy123,breadman,estefan,ljcneg,gotoit,logan123,wideglid,mancity1,treess,qwe123456,kazumi,qweasdqwe,oddworld,naveed,protos,towson,a801016,godislov,at_asp,bambam1,soccer5,dark123,67vette,carlos123,hoser1,scouser,wesdxc,pelus,dragon25,pflhjn,abdula,1freedom,policema,tarkin,eduardo1,mackdad,gfhjkm11,lfplhfgthvf,adilet,zzzzxxxx,childre,samarkand,cegthgegth,shama,fresher,silvestr,greaser,allout,plmokn,sexdrive,nintendo1,fantasy7,oleander,fe126fd,crumpet,pingzing,dionis,hipster,yfcnz,requin,calliope,jerome1,housecat,abc123456789,doghot,snake123,augus,brillig,chronic1,gfhjkbot,expediti,noisette,master7,caliban,whitetai,favorite3,lisamari,educatio,ghjhjr,saber1,zcegth,1958proman,vtkrbq,milkdud,imajica,thehip,bailey10,hockey19,dkflbdjcnjr,j123456,bernar,aeiouy,gamlet,deltachi,endzone,conni,bcgfybz,brandi1,auckland2010,7653ajl1,mardigra,testuser,bunko18,camaro67,36936,greenie,454dfmcq,6xe8j2z4,mrgreen,ranger5,headhunt,banshee1,moonunit,zyltrc,hello3,pussyboy,stoopid,tigger11,yellow12,drums1,blue02,kils123,junkman,banyan,jimmyjam,tbbucs,sportster,badass1,joshie,braves10,lajolla,1amanda,antani,78787,antero,19216801,chich,rhett32,sarahm,beloit,sucker69,corkey,nicosnn,rccola,caracol,daffyduc,bunny2,mantas,monkies,hedonist,cacapipi,ashton1,sid123,19899891,patche,greekgod,cbr1000,leader1,19977991,ettore,chongo,113311,picass,cfif123,rhtfnbd,frances1,andy12,minnette,bigboy12,green69,alices,babcia,partyboy,javabean,freehand,qawsed123,xxx111,harold1,passwo,jonny1,kappa1,w2dlww3v5p,1merlin,222999,tomjones,jakeman,franken,markhegarty,john01,carole1,daveman,caseys,apeman,mookey,moon123,claret,titans1,residentevil,campari,curitiba,dovetail,aerostar,jackdaniels,basenji,zaq12w,glencoe,biglove,goober12,ncc170,far7766,monkey21,eclipse9,1234567v,vanechka,aristote,grumble,belgorod,abhishek,neworleans,pazzword,dummie,sashadog,diablo11,mst3000,koala1,maureen1,jake99,isaiah1,funkster,gillian1,ekaterina20,chibears,astra123,4me2no,winte,skippe,necro,windows9,vinograd,demolay,vika2010,quiksilver,19371ayj,dollar1,shecky,qzwxecrv,butterfly1,merrill1,scoreland,1crazy,megastar,mandragora,track1,dedhed,jacob2,newhope,qawsedrftgyh,shack1,samvel,gatita,shyster,clara1,telstar,office1,crickett,truls,nirmala,joselito,chrisl,lesnik,aaaabbbb,austin01,leto2010,bubbie,aaa12345,widder,234432,salinger,mrsmith,qazsedcft,newshoes,skunks,yt1300,bmw316,arbeit,smoove,123321qweewq,123qazwsx,22221111,seesaw,0987654321a,peach1,1029384756q,sereda,gerrard8,shit123,batcave,energy1,peterb,mytruck,peter12,alesya,tomato1,spirou,laputaxx,magoo1,omgkremidia,knight12,norton1,vladislava,shaddy,austin11,jlbyjxrf,kbdthgekm,punheta,fetish69,exploiter,roger2,manstein,gtnhjd,32615948worms,dogbreath,ujkjdjkjvrf,vodka1,ripcord,fatrat,kotek1,tiziana,larrybir,thunder3,nbvfnb,9kyq6fge,remembe,likemike,gavin1,shinigam,yfcnfcmz,13245678,jabbar,vampyr,ane4ka,lollipo,ashwin,scuderia,limpdick,deagle,3247562,vishenka,fdhjhf,alex02,volvov70,mandys,bioshock,caraca,tombraider,matrix69,jeff123,13579135,parazit,black3,noway1,diablos,hitmen,garden1,aminor,decembe,august12,b00ger,006900,452073t,schach,hitman1,mariner1,vbnmrf,paint1,742617000027,bitchboy,pfqxjyjr,5681392,marryher,sinnet,malik1,muffin12,aninha,piolin,lady12,traffic1,cbvjyf,6345789,june21,ivan2010,ryan123,honda99,gunny,coorslight,asd321,hunter69,7224763,sonofgod,dolphins1,1dolphin,pavlenko,woodwind,lovelov,pinkpant,gblfhfcbyf,hotel1,justinbiebe,vinter,jeff1234,mydogs,1pizza,boats1,parrothe,shawshan,brooklyn1,cbrown,1rocky,hemi426,dragon64,redwings1,porsches,ghostly,hubbahub,buttnut,b929ezzh,sorokina,flashg,fritos,b7mguk,metatron,treehous,vorpal,8902792,marcu,free123,labamba,chiefs1,zxc123zxc,keli_14,hotti,1steeler,money4,rakker,foxwoods,free1,ahjkjd,sidorova,snowwhit,neptune1,mrlover,trader1,nudelamb,baloo,power7,deltasig,bills1,trevo,7gorwell,nokia6630,nokia5320,madhatte,1cowboys,manga1,namtab,sanjar,fanny1,birdman1,adv12775,carlo1,dude1998,babyhuey,nicole11,madmike,ubvyfpbz,qawsedr,lifetec,skyhook,stalker123,toolong,robertso,ripazha,zippy123,1111111a,manol,dirtyman,analslut,jason3,dutches,minhasenha,cerise,fenrir,jayjay1,flatbush,franka,bhbyjxrf,26429vadim,lawntrax,198700,fritzy,nikhil,ripper1,harami,truckman,nemvxyheqdd5oqxyxyzi,gkfytnf,bugaboo,cableman,hairpie,xplorer,movado,hotsex69,mordred,ohyeah1,patrick3,frolov,katieh,4311111q,mochaj,presari,bigdo,753951852,freedom4,kapitan,tomas1,135795,sweet123,pokers,shagme,tane4ka,sentinal,ufgyndmv,jonnyb,skate123,123456798,123456788,very1,gerrit,damocles,dollarbi,caroline1,lloyds,pizdets,flatland,92702689,dave13,meoff,ajnjuhfabz,achmed,madison9,744744z,amonte,avrillavigne,elaine1,norma1,asseater,everlong,buddy23,cmgang1,trash1,mitsu,flyman,ulugbek,june27,magistr,fittan,sebora64,dingos,sleipnir,caterpil,cindys,212121qaz,partys,dialer,gjytltkmybr,qweqaz,janvier,rocawear,lostboy,aileron,sweety1,everest1,pornman,boombox,potter1,blackdic,44448888,eric123,112233aa,2502557i,novass,nanotech,yourname,x12345,indian1,15975300,1234567l,carla51,chicago0,coleta,cxzdsaewq,qqwweerr,marwan,deltic,hollys,qwerasd,pon32029,rainmake,nathan0,matveeva,legioner,kevink,riven,tombraid,blitzen,a54321,jackyl,chinese1,shalimar,oleg1995,beaches1,tommylee,eknock,berli,monkey23,badbob,pugwash,likewhoa,jesus2,yujyd360,belmar,shadow22,utfp5e,angelo1,minimax,pooder,cocoa1,moresex,tortue,lesbia,panthe,snoopy2,drumnbass,alway,gmcz71,6jhwmqku,leppard,dinsdale,blair1,boriqua,money111,virtuagirl,267605,rattlesn,1sunshin,monica12,veritas1,newmexic,millertime,turandot,rfvxfnrf,jaydog,kakawka,bowhunter,booboo12,deerpark,erreway,taylorma,rfkbybyf,wooglin,weegee,rexdog,iamhorny,cazzo1,vhou812,bacardi1,dctktyyfz,godpasi,peanut12,bertha1,fuckyoubitch,ghosty,altavista,jertoot,smokeit,ghjcnbvtyz,fhnehxbr,rolsen,qazxcdews,maddmaxx,redrocke,qazokm,spencer2,thekiller,asdf11,123sex,tupac1,p1234567,dbrown,1biteme,tgo4466,316769,sunghi,shakespe,frosty1,gucci1,arcana,bandit01,lyubov,poochy,dartmout,magpies1,sunnyd,mouseman,summer07,chester7,shalini,danbury,pigboy,dave99,deniss,harryb,ashley11,pppppp1,01081988m,balloon1,tkachenko,bucks1,master77,pussyca,tricky1,zzxxccvv,zoulou,doomer,mukesh,iluv69,supermax,todays,thefox,don123,dontask,diplom,piglett,shiney,fahbrf,qaz12wsx,temitope,reggin,project1,buffy2,inside1,lbpfqyth,vanilla1,lovecock,u4slpwra,fylh.irf,123211,7ertu3ds,necroman,chalky,artist1,simpso,4x7wjr,chaos666,lazyacres,harley99,ch33s3,marusa,eagle7,dilligas,computadora,lucky69,denwer,nissan350z,unforgiv,oddball,schalke0,aztec1,borisova,branden1,parkave,marie123,germa,lafayett,878kckxy,405060,cheeseca,bigwave,fred22,andreea,poulet,mercutio,psycholo,andrew88,o4izdmxu,sanctuar,newhome,milion,suckmydi,rjvgm.nth,warior,goodgame,1qwertyuiop,6339cndh,scorpio2,macker,southbay,crabcake,toadie,paperclip,fatkid,maddo,cliff1,rastafar,maries,twins1,geujdrf,anjela,wc4fun,dolina,mpetroff,rollout,zydeco,shadow3,pumpki,steeda,volvo240,terras,blowjo,blue2000,incognit,badmojo,gambit1,zhukov,station1,aaronb,graci,duke123,clipper1,qazxsw2,ledzeppe,kukareku,sexkitte,cinco,007008,lakers12,a1234b,acmilan1,afhfjy,starrr,slutty3,phoneman,kostyan,bonzo1,sintesi07,ersatz,cloud1,nephilim,nascar03,rey619,kairos,123456789e,hardon1,boeing1,juliya,hfccdtn,vgfun8,polizei,456838,keithb,minouche,ariston,savag,213141,clarkken,microwav,london2,santacla,campeo,qr5mx7,464811,mynuts,bombo,1mickey,lucky8,danger1,ironside,carter12,wyatt1,borntorun,iloveyou123,jose1,pancake1,tadmichaels,monsta,jugger,hunnie,triste,heat7777,ilovejesus,queeny,luckycharm,lieben,gordolee85,jtkirk,forever21,jetlag,skylane,taucher,neworlea,holera,000005,anhnhoem,melissa7,mumdad,massimiliano,dima1994,nigel1,madison3,slicky,shokolad,serenit,jmh1978,soccer123,chris3,drwho,rfpzdrf,1qasw23ed,free4me,wonka,sasquatc,sanan,maytag,verochka,bankone,molly12,monopoli,xfqybr,lamborgini,gondolin,candycane,needsome,jb007,scottie1,brigit,0147258369,kalamazo,lololyo123,bill1234,ilovejes,lol123123,popkorn,april13,567rntvm,downunde,charle1,angelbab,guildwars,homeworld,qazxcvbnm,superma1,dupa123,kryptoni,happyy,artyom,stormie,cool11,calvin69,saphir,konovalov,jansport,october8,liebling,druuna,susans,megans,tujhjdf,wmegrfux,jumbo1,ljb4dt7n,012345678910,kolesnik,speculum,at4gftlw,kurgan,93pn75,cahek0980,dallas01,godswill,fhifdby,chelsea4,jump23,barsoom,catinhat,urlacher,angel99,vidadi1,678910,lickme69,topaz1,westend,loveone,c12345,gold12,alex1959,mamon,barney12,1maggie,alex12345,lp2568cskt,s1234567,gjikbdctyf,anthony0,browns99,chips1,sunking,widespre,lalala1,tdutif,fucklife,master00,alino4ka,stakan,blonde1,phoebus,tenore,bvgthbz,brunos,suzjv8,uvdwgt,revenant,1banana,veroniqu,sexfun,sp1der,4g3izhox,isakov,shiva1,scooba,bluefire,wizard12,dimitris,funbags,perseus,hoodoo,keving,malboro,157953,a32tv8ls,latics,animate,mossad,yejntb,karting,qmpq39zr,busdrive,jtuac3my,jkne9y,sr20dett,4gxrzemq,keylargo,741147,rfktylfhm,toast1,skins1,xcalibur,gattone,seether,kameron,glock9mm,julio1,delenn,gameday,tommyd,str8edge,bulls123,66699,carlsberg,woodbird,adnama,45auto,codyman,truck2,1w2w3w4w,pvjegu,method1,luetdi,41d8cd98f00b,bankai,5432112345,94rwpe,reneee,chrisx,melvins,775577,sam2000,scrappy1,rachid,grizzley,margare,morgan01,winstons,gevorg,gonzal,crawdad,gfhfdjp,babilon,noneya,pussy11,barbell,easyride,c00li0,777771,311music,karla1,golions,19866891,peejay,leadfoot,hfvbkm,kr9z40sy,cobra123,isotwe,grizz,sallys,****you,aaa123a,dembel,foxs14,hillcres,webman,mudshark,alfredo1,weeded,lester1,hovepark,ratface,000777fffa,huskie,wildthing,elbarto,waikiki,masami,call911,goose2,regin,dovajb,agricola,cjytxrj,andy11,penny123,family01,a121212,1braves,upupa68,happy100,824655,cjlove,firsttim,kalel,redhair,dfhtymt,sliders,bananna,loverbo,fifa2008,crouton,chevy350,panties2,kolya1,alyona,hagrid,spagetti,q2w3e4r,867530,narkoman,nhfdvfnjkju123,1ccccccc,napolean,0072563,allay,w8sted,wigwam,jamesk,state1,parovoz,beach69,kevinb,rossella,logitech1,celula,gnocca,canucks1,loginova,marlboro1,aaaa1,kalleanka,mester,mishutka,milenko,alibek,jersey1,peterc,1mouse,nedved,blackone,ghfplybr,682regkh,beejay,newburgh,ruffian,clarets,noreaga,xenophon,hummerh2,tenshi,smeagol,soloyo,vfhnby,ereiamjh,ewq321,goomie,sportin,cellphone,sonnie,jetblack,saudan,gblfhfc,matheus,uhfvjnf,alicja,jayman1,devon1,hexagon,bailey2,vtufajy,yankees7,salty1,908070,killemal,gammas,eurocard,sydney12,tuesday1,antietam,wayfarer,beast666,19952009sa,aq12ws,eveli,hockey21,haloreach,dontcare,xxxx1,andrea11,karlmarx,jelszo,tylerb,protools,timberwolf,ruffneck,pololo,1bbbbb,waleed,sasami,twinss,fairlady,illuminati,alex007,sucks1,homerjay,scooter7,tarbaby,barmaley,amistad,vanes,randers,tigers12,dreamer2,goleafsg,googie,bernie1,as12345,godeep,james3,phanto,gwbush,cumlover,2196dc,studioworks,995511,golf56,titova,kaleka,itali,socks1,kurwamac,daisuke,hevonen,woody123,daisie,wouter,henry123,gostosa,guppie,porpoise,iamsexy,276115,paula123,1020315,38gjgeuftd,rjrfrjkf,knotty,idiot1,sasha12345,matrix13,securit,radical1,ag764ks,jsmith,coolguy1,secretar,juanas,sasha1988,itout,00000001,tiger11,1butthea,putain,cavalo,basia1,kobebryant,1232323,12345asdfg,sunsh1ne,cyfqgth,tomkat,dorota,dashit,pelmen,5t6y7u,whipit,smokeone,helloall,bonjour1,snowshoe,nilknarf,x1x2x3,lammas,1234599,lol123456,atombomb,ironchef,noclue,alekseev,gwbush1,silver2,12345678m,yesican,fahjlbnf,chapstic,alex95,open1,tiger200,lisichka,pogiako,cbr929,searchin,tanya123,alex1973,phil413,alex1991,dominati,geckos,freddi,silenthill,egroeg,vorobey,antoxa,dark666,shkola,apple22,rebellio,shamanking,7f8srt,cumsucker,partagas,bill99,22223333,arnster55,fucknuts,proxima,silversi,goblues,parcells,vfrcbvjdf,piloto,avocet,emily2,1597530,miniskir,himitsu,pepper2,juiceman,venom1,bogdana,jujube,quatro,botafogo,mama2010,junior12,derrickh,asdfrewq,miller2,chitarra,silverfox,napol,prestigio,devil123,mm111qm,ara123,max33484,sex2000,primo1,sephan,anyuta,alena2010,viborg,verysexy,hibiscus,terps,josefin,oxcart,spooker,speciali,raffaello,partyon,vfhvtkflrf,strela,a123456z,worksuck,glasss,lomonosov,dusty123,dukeblue,1winter,sergeeva,lala123,john22,cmc09,sobolev,bettylou,dannyb,gjkrjdybr,hagakure,iecnhbr,awsedr,pmdmsctsk,costco,alekseeva,fktrcttd,bazuka,flyingv,garuda,buffy16,gutierre,beer12,stomatolog,ernies,palmeiras,golf123,love269,n.kmgfy,gjkysqgbpltw,youare,joeboo,baksik,lifeguar,111a111,nascar8,mindgame,dude1,neopets,frdfkfyu,june24,phoenix8,penelopa,merlin99,mercenar,badluck,mishel,bookert,deadsexy,power9,chinchil,1234567m,alex10,skunk1,rfhkcjy,sammycat,wright1,randy2,marakesh,temppassword,elmer251,mooki,patrick0,bonoedge,1tits,chiar,kylie1,graffix,milkman1,cornel,mrkitty,nicole12,ticketmaster,beatles4,number20,ffff1,terps1,superfre,yfdbufnjh,jake1234,flblfc,1111qq,zanuda,jmol01,wpoolejr,polopol,nicolett,omega13,cannonba,123456789.,sandy69,ribeye,bo243ns,marilena,bogdan123,milla,redskins1,19733791,alias1,movie1,ducat,marzena,shadowru,56565,coolman1,pornlover,teepee,spiff,nafanya,gateway3,fuckyou0,hasher,34778,booboo69,staticx,hang10,qq12345,garnier,bosco123,1234567qw,carson1,samso,1xrg4kcq,cbr929rr,allan123,motorbik,andrew22,pussy101,miroslava,cytujdbr,camp0017,cobweb,snusmumrik,salmon1,cindy2,aliya,serendipity,co437at,tincouch,timmy123,hunter22,st1100,vvvvvv1,blanka,krondor,sweeti,nenit,kuzmich,gustavo1,bmw320i,alex2010,trees1,kyliem,essayons,april26,kumari,sprin,fajita,appletre,fghbjhb,1green,katieb,steven2,corrado1,satelite,1michell,123456789c,cfkfvfylhf,acurarsx,slut543,inhere,bob2000,pouncer,k123456789,fishie,aliso,audia8,bluetick,soccer69,jordan99,fromhell,mammoth1,fighting54,mike25,pepper11,extra1,worldwid,chaise,vfr800,sordfish,almat,nofate,listopad,hellgate,dctvghbdf,jeremia,qantas,lokiju,honker,sprint1,maral,triniti,compaq3,sixsix6,married1,loveman,juggalo1,repvtyrj,zxcasdqw,123445,whore1,123678,monkey6,west123,warcraf,pwnage,mystery1,creamyou,ant123,rehjgfnrf,corona1,coleman1,steve121,alderaan,barnaul,celeste1,junebug1,bombshel,gretzky9,tankist,targa,cachou,vaz2101,playgolf,boneyard,strateg,romawka,iforgotit,pullup,garbage1,irock,archmage,shaft1,oceano,sadies,alvin1,135135ab,psalm69,lmfao,ranger02,zaharova,33334444,perkman,realman,salguod,cmoney,astonmartin,glock1,greyfox,viper99,helpm,blackdick,46775575,family5,shazbot,dewey1,qwertyas,shivani,black22,mailman1,greenday1,57392632,red007,stanky,sanchez1,tysons,daruma,altosax,krayzie,85852008,1forever,98798798,irock.,123456654,142536789,ford22,brick1,michela,preciou,crazy4u,01telemike01,nolife,concac,safety1,annie123,brunswic,destini,123456qwer,madison0,snowball1,137946,1133557799,jarule,scout2,songohan,thedead,00009999,murphy01,spycam,hirsute,aurinko,associat,1miller,baklan,hermes1,2183rm,martie,kangoo,shweta,yvonne1,westsid,jackpot1,rotciv,maratik,fabrika,claude1,nursultan,noentry,ytnhjufnm,electra1,ghjcnjnfr1,puneet,smokey01,integrit,bugeye,trouble2,14071789,paul01,omgwtf,dmh415,ekilpool,yourmom1,moimeme,sparky11,boludo,ruslan123,kissme1,demetrio,appelsin,asshole3,raiders2,bunns,fynjybj,billygoa,p030710p$e4o,macdonal,248ujnfk,acorns,schmidt1,sparrow1,vinbylrj,weasle,jerom,ycwvrxxh,skywalk,gerlinde,solidus,postal1,poochie1,1charles,rhianna,terorist,rehnrf,omgwtfbbq,assfucke,deadend,zidan,jimboy,vengence,maroon5,7452tr,dalejr88,sombra,anatole,elodi,amazonas,147789,q12345q,gawker1,juanma,kassidy,greek1,bruces,bilbob,mike44,0o9i8u7y6t,kaligula,agentx,familie,anders1,pimpjuice,0128um,birthday10,lawncare,hownow,grandorgue,juggerna,scarfac,kensai,swatteam,123four,motorbike,repytxbr,other1,celicagt,pleomax,gen0303,godisgreat,icepick,lucifer666,heavy1,tea4two,forsure,02020,shortdog,webhead,chris13,palenque,3techsrl,knights1,orenburg,prong,nomarg,wutang1,80637852730,laika,iamfree,12345670,pillow1,12343412,bigears,peterg,stunna,rocky5,12123434,damir,feuerwehr,7418529630,danone,yanina,valenci,andy69,111222q,silvia1,1jjjjj,loveforever,passwo1,stratocaster,8928190a,motorolla,lateralu,ujujkm,chubba,ujkjdf,signon,123456789zx,serdce,stevo,wifey200,ololo123,popeye1,1pass,central1,melena,luxor,nemezida,poker123,ilovemusic,qaz1234,noodles1,lakeshow,amarill,ginseng,billiam,trento,321cba,fatback,soccer33,master13,marie2,newcar,bigtop,dark1,camron,nosgoth,155555,biglou,redbud,jordan7,159789,diversio,actros,dazed,drizzit,hjcnjd,wiktoria,justic,gooses,luzifer,darren1,chynna,tanuki,11335577,icculus,boobss,biggi,firstson,ceisi123,gatewa,hrothgar,jarhead1,happyjoy,felipe1,bebop1,medman,athena1,boneman,keiths,djljgfl,dicklick,russ120,mylady,zxcdsa,rock12,bluesea,kayaks,provista,luckies,smile4me,bootycal,enduro,123123f,heartbre,ern3sto,apple13,bigpappa,fy.njxrf,bigtom,cool69,perrito,quiet1,puszek,cious,cruella,temp1,david26,alemap,aa123123,teddies,tricolor,smokey12,kikiriki,mickey01,robert01,super5,ranman,stevenso,deliciou,money777,degauss,mozar,susanne1,asdasd12,shitbag,mommy123,wrestle1,imfree,fuckyou12,barbaris,florent,ujhijr,f8yruxoj,tefjps,anemone,toltec,2gether,left4dead2,ximen,gfkmvf,dunca,emilys,diana123,16473a,mark01,bigbro,annarbor,nikita2000,11aa11,tigres,llllll1,loser2,fbi11213,jupite,qwaszxqw,macabre,123ert,rev2000,mooooo,klapaucius,bagel1,chiquit,iyaoyas,bear101,irocz28,vfktymrfz,smokey2,love99,rfhnbyf,dracul,keith123,slicko,peacock1,orgasmic,thesnake,solder,wetass,doofer,david5,rhfcyjlfh,swanny,tammys,turkiye,tubaman,estefani,firehose,funnyguy,servo,grace17,pippa1,arbiter,jimmy69,nfymrf,asdf67nm,rjcnzy,demon123,thicknes,sexysex,kristall,michail,encarta,banderos,minty,marchenko,de1987ma,mo5kva,aircav,naomi1,bonni,tatoo,cronaldo,49ers1,mama1963,1truck,telecaster,punksnotdead,erotik,1eagles,1fender,luv269,acdeehan,tanner1,freema,1q3e5t7u,linksys,tiger6,megaman1,neophyte,australia1,mydaddy,1jeffrey,fgdfgdfg,gfgekz,1986irachka,keyman,m0b1l3,dfcz123,mikeyg,playstation2,abc125,slacker1,110491g,lordsoth,bhavani,ssecca,dctvghbdtn,niblick,hondacar,baby01,worldcom,4034407,51094didi,3657549,3630000,3578951,sweetpussy,majick,supercoo,robert11,abacabb,panda123,gfhjkm13,ford4x4,zippo1,lapin,1726354,lovesong,dude11,moebius,paravoz,1357642,matkhau,solnyshko,daniel4,multiplelog,starik,martusia,iamtheman,greentre,jetblue,motorrad,vfrcbvev,redoak,dogma1,gnorman,komlos,tonka1,1010220,666satan,losenord,lateralus,absinthe,command1,jigga1,iiiiiii1,pants1,jungfrau,926337,ufhhbgjnnth,yamakasi,888555,sunny7,gemini69,alone1,zxcvbnmz,cabezon,skyblues,zxc1234,456123a,zero00,caseih,azzurra,legolas1,menudo,murcielago,785612,779977,benidorm,viperman,dima1985,piglet1,hemligt,hotfeet,7elephants,hardup,gamess,a000000,267ksyjf,kaitlynn,sharkie,sisyphus,yellow22,667766,redvette,666420,mets69,ac2zxdty,hxxrvwcy,cdavis,alan1,noddy,579300,druss,eatshit1,555123,appleseed,simpleplan,kazak,526282,fynfyfyfhbde,birthday6,dragon6,1pookie,bluedevils,omg123,hj8z6e,x5dxwp,455445,batman23,termin,chrisbrown,animals1,lucky9,443322,kzktxrf,takayuki,fermer,assembler,zomu9q,sissyboy,sergant,felina,nokia6230i,eminem12,croco,hunt4red,festina,darknigh,cptnz062,ndshnx4s,twizzler,wnmaz7sd,aamaax,gfhfcjkmrf,alabama123,barrynov,happy5,punt0it,durandal,8xuuobe4,cmu9ggzh,bruno12,316497,crazyfrog,vfvfktyf,apple3,kasey1,mackdaddy,anthon1,sunnys,angel3,cribbage,moon1,donal,bryce1,pandabear,mwss474,whitesta,freaker,197100,bitche,p2ssw0rd,turnb,tiktonik,moonlite,ferret1,jackas,ferrum,bearclaw,liberty2,1diablo,caribe,snakeeyes,janbam,azonic,rainmaker,vetalik,bigeasy,baby1234,sureno13,blink1,kluivert,calbears,lavanda,198600,dhtlbyf,medvedeva,fox123,whirling,bonscott,freedom9,october3,manoman,segredo,cerulean,robinso,bsmith,flatus,dannon,password21,rrrrrr1,callista,romai,rainman1,trantor,mickeymo,bulldog7,g123456,pavlin,pass22,snowie,hookah,7ofnine,bubba22,cabible,nicerack,moomoo1,summer98,yoyo123,milan1,lieve27,mustang69,jackster,exocet,nadege,qaz12,bahama,watson1,libras,eclipse2,bahram,bapezm,up9x8rww,ghjcnjz,themaste,deflep27,ghost16,gattaca,fotograf,junior123,gilber,gbjyth,8vjzus,rosco1,begonia,aldebara,flower12,novastar,buzzman,manchild,lopez1,mama11,william7,yfcnz1,blackstar,spurs123,moom4242,1amber,iownyou,tightend,07931505,paquito,1johnson,smokepot,pi31415,snowmass,ayacdc,jessicam,giuliana,5tgbnhy6,harlee,giuli,bigwig,tentacle,scoubidou2,benelli,vasilina,nimda,284655,jaihind,lero4ka,1tommy,reggi,ididit,jlbyjxtcndj,mike26,qbert,wweraw,lukasz,loosee123,palantir,flint1,mapper,baldie,saturne,virgin1,meeeee,elkcit,iloveme2,blue15,themoon,radmir,number3,shyanne,missle,hannelor,jasmina,karin1,lewie622,ghjcnjqgfhjkm,blasters,oiseau,sheela,grinders,panget,rapido,positiv,twink,fltkbyf,kzsfj874,daniel01,enjoyit,nofags,doodad,rustler,squealer,fortunat,peace123,khushi,devils2,7inches,candlebo,topdawg,armen,soundman,zxcqweasd,april7,gazeta,netman,hoppers,bear99,ghbjhbntn,mantle7,bigbo,harpo,jgordon,bullshi,vinny1,krishn,star22,thunderc,galinka,phish123,tintable,nightcrawler,tigerboy,rbhgbx,messi,basilisk,masha1998,nina123,yomamma,kayla123,geemoney,0000000000d,motoman,a3jtni,ser123,owen10,italien,vintelok,12345rewq,nightime,jeepin,ch1tt1ck,mxyzptlk,bandido,ohboy,doctorj,hussar,superted,parfilev,grundle,1jack,livestrong,chrisj,matthew3,access22,moikka,fatone,miguelit,trivium,glenn1,smooches,heiko,dezember,spaghett,stason,molokai,bossdog,guitarma,waderh,boriska,photosho,path13,hfrtnf,audre,junior24,monkey24,silke,vaz21093,bigblue1,trident1,candide,arcanum,klinker,orange99,bengals1,rosebu,mjujuj,nallepuh,mtwapa1a,ranger69,level1,bissjop,leica,1tiffany,rutabega,elvis77,kellie1,sameas,barada,karabas,frank12,queenb,toutoune,surfcity,samanth1,monitor1,littledo,kazakova,fodase,mistral1,april22,carlit,shakal,batman123,fuckoff2,alpha01,5544332211,buddy3,towtruck,kenwood1,vfiekmrf,jkl123,pypsik,ranger75,sitges,toyman,bartek1,ladygirl,booman,boeing77,installsqlst,222666,gosling,bigmack,223311,bogos,kevin2,gomez1,xohzi3g4,kfnju842,klubnika,cubalibr,123456789101,kenpo,0147852369,raptor1,tallulah,boobys,jjones,1q2s3c,moogie,vid2600,almas,wombat1,extra300,xfiles1,green77,sexsex1,heyjude,sammyy,missy123,maiyeuem,nccpl25282,thicluv,sissie,raven3,fldjrfn,buster22,broncos2,laurab,letmein4,harrydog,solovey,fishlips,asdf4321,ford123,superjet,norwegen,movieman,psw333333,intoit,postbank,deepwate,ola123,geolog323,murphys,eshort,a3eilm2s2y,kimota,belous,saurus,123321qaz,i81b4u,aaa12,monkey20,buckwild,byabybnb,mapleleafs,yfcnzyfcnz,baby69,summer03,twista,246890,246824,ltcnhjth,z1z2z3,monika1,sad123,uto29321,bathory,villan,funkey,poptarts,spam967888,705499fh,sebast,porn1234,earn381,1porsche,whatthef,123456789y,polo12,brillo,soreilly,waters1,eudora,allochka,is_a_bot,winter00,bassplay,531879fiz,onemore,bjarne,red911,kot123,artur1,qazxdr,c0rvette,diamond7,matematica,klesko,beaver12,2enter,seashell,panam,chaching,edward2,browni,xenogear,cornfed,aniram,chicco22,darwin1,ancella2,sophie2,vika1998,anneli,shawn41,babie,resolute,pandora2,william8,twoone,coors1,jesusis1,teh012,cheerlea,renfield,tessa1,anna1986,madness1,bkmlfh,19719870,liebherr,ck6znp42,gary123,123654z,alsscan,eyedoc,matrix7,metalgea,chinito,4iter,falcon11,7jokx7b9du,bigfeet,tassadar,retnuh,muscle1,klimova,darion,batistuta,bigsur,1herbier,noonie,ghjrehjh,karimova,faustus,snowwhite,1manager,dasboot,michael12,analfuck,inbed,dwdrums,jaysoncj,maranell,bsheep75,164379,rolodex,166666,rrrrrrr1,almaz666,167943,russel1,negrito,alianz,goodpussy,veronik,1w2q3r4e,efremov,emb377,sdpass,william6,alanfahy,nastya1995,panther5,automag,123qwe12,vfvf2011,fishe,1peanut,speedie,qazwsx1234,pass999,171204j,ketamine,sheena1,energizer,usethis1,123abc123,buster21,thechamp,flvbhfk,frank69,chane,hopeful1,claybird,pander,anusha,bigmaxxx,faktor,housebed,dimidrol,bigball,shashi,derby1,fredy,dervish,bootycall,80988218126,killerb,cheese2,pariss,mymail,dell123,catbert,christa1,chevytru,gjgjdf,00998877,overdriv,ratten,golf01,nyyanks,dinamite,bloembol,gismo,magnus1,march2,twinkles,ryan22,duckey,118a105b,kitcat,brielle,poussin,lanzarot,youngone,ssvegeta,hero63,battle1,kiler,fktrcfylh1,newera,vika1996,dynomite,oooppp,beer4me,foodie,ljhjuf,sonshine,godess,doug1,constanc,thinkbig,steve2,damnyou,autogod,www333,kyle1,ranger7,roller1,harry2,dustin1,hopalong,tkachuk,b00bies,bill2,deep111,stuffit,fire69,redfish1,andrei123,graphix,1fishing,kimbo1,mlesp31,ifufkbyf,gurkan,44556,emily123,busman,and123,8546404,paladine,1world,bulgakov,4294967296,bball23,1wwwww,mycats,elain,delta6,36363,emilyb,color1,6060842,cdtnkfyrf,hedonism,gfgfrfhkj,5551298,scubad,gostate,sillyme,hdbiker,beardown,fishers,sektor,00000007,newbaby,rapid1,braves95,gator2,nigge,anthony3,sammmy,oou812,heffer,phishin,roxanne1,yourass,hornet1,albator,2521659,underwat,tanusha,dianas,3f3fpht7op,dragon20,bilbobag,cheroke,radiatio,dwarf1,majik,33st33,dochka,garibald,robinh,sham69,temp01,wakeboar,violet1,1w2w3w,registr,tonite,maranello,1593570,parolamea,galatasara,loranthos,1472583,asmodean,1362840,scylla,doneit,jokerr,porkypig,kungen,mercator,koolhaas,come2me,debbie69,calbear,liverpoolfc,yankees4,12344321a,kennyb,madma,85200258,dustin23,thomas13,tooling,mikasa,mistic,crfnbyf,112233445,sofia1,heinz57,colts1,price1,snowey,joakim,mark11,963147,cnhfcnm,kzinti,1bbbbbbb,rubberdu,donthate,rupert1,sasha1992,regis1,nbuhbwf,fanboy,sundial,sooner1,wayout,vjnjhjkf,deskpro,arkangel,willie12,mikeyb,celtic1888,luis1,buddy01,duane1,grandma1,aolcom,weeman,172839456,basshead,hornball,magnu,pagedown,molly2,131517,rfvtgbyhn,astonmar,mistery,madalina,cash1,1happy,shenlong,matrix01,nazarova,369874125,800500,webguy,rse2540,ashley2,briank,789551,786110,chunli,j0nathan,greshnik,courtne,suckmyco,mjollnir,789632147,asdfg1234,754321,odelay,ranma12,zebedee,artem777,bmw318is,butt1,rambler1,yankees9,alabam,5w76rnqp,rosies,mafioso,studio1,babyruth,tranzit,magical123,gfhjkm135,12345$,soboleva,709394,ubique,drizzt1,elmers,teamster,pokemons,1472583690,1597532486,shockers,merckx,melanie2,ttocs,clarisse,earth1,dennys,slobber,flagman,farfalla,troika,4fa82hyx,hakan,x4ww5qdr,cumsuck,leather1,forum1,july20,barbel,zodiak,samuel12,ford01,rushfan,bugsy1,invest1,tumadre,screwme,a666666,money5,henry8,tiddles,sailaway,starburs,100years,killer01,comando,hiromi,ranetka,thordog,blackhole,palmeira,verboten,solidsna,q1w1e1,humme,kevinc,gbrfxe,gevaudan,hannah11,peter2,vangar,sharky7,talktome,jesse123,chuchi,pammy,!qazxsw2,siesta,twenty1,wetwilly,477041,natural1,sun123,daniel3,intersta,shithead1,hellyea,bonethugs,solitair,bubbles2,father1,nick01,444000,adidas12,dripik,cameron2,442200,a7nz8546,respublika,fkojn6gb,428054,snoppy,rulez1,haslo,rachael1,purple01,zldej102,ab12cd34,cytuehjxrf,madhu,astroman,preteen,handsoff,mrblonde,biggio,testin,vfdhif,twolves,unclesam,asmara,kpydskcw,lg2wmgvr,grolsch,biarritz,feather1,williamm,s62i93,bone1,penske,337733,336633,taurus1,334433,billet,diamondd,333000,nukem,fishhook,godogs,thehun,lena1982,blue00,smelly1,unb4g9ty,65pjv22,applegat,mikehunt,giancarlo,krillin,felix123,december1,soapy,46doris,nicole23,bigsexy1,justin10,pingu,bambou,falcon12,dgthtl,1surfer,qwerty01,estrellit,nfqcjy,easygo,konica,qazqwe,1234567890m,stingers,nonrev,3e4r5t,champio,bbbbbb99,196400,allen123,seppel,simba2,rockme,zebra3,tekken3,endgame,sandy2,197300,fitte,monkey00,eldritch,littleone,rfyfgkz,1member,66chevy,oohrah,cormac,hpmrbm41,197600,grayfox,elvis69,celebrit,maxwell7,rodders,krist,1camaro,broken1,kendall1,silkcut,katenka,angrick,maruni,17071994a,tktyf,kruemel,snuffles,iro4ka,baby12,alexis01,marryme,vlad1994,forward1,culero,badaboom,malvin,hardtoon,hatelove,molley,knopo4ka,duchess1,mensuck,cba321,kickbutt,zastava,wayner,fuckyou6,eddie123,cjkysir,john33,dragonfi,cody1,jabell,cjhjrf,badseed,sweden1,marihuana,brownlov,elland,nike1234,kwiettie,jonnyboy,togepi,billyk,robert123,bb334,florenci,ssgoku,198910,bristol1,bob007,allister,yjdujhjl,gauloise,198920,bellaboo,9lives,aguilas,wltfg4ta,foxyroxy,rocket69,fifty50,babalu,master21,malinois,kaluga,gogosox,obsessio,yeahrigh,panthers1,capstan,liza2000,leigh1,paintball1,blueskie,cbr600f3,bagdad,jose98,mandreki,shark01,wonderbo,muledeer,xsvnd4b2,hangten,200001,grenden,anaell,apa195,model1,245lufpq,zip100,ghjcgtrn,wert1234,misty2,charro,juanjose,fkbcrf,frostbit,badminto,buddyy,1doctor,vanya,archibal,parviz,spunky1,footboy,dm6tzsgp,legola,samadhi,poopee,ytdxz2ca,hallowboy,dposton,gautie,theworm,guilherme,dopehead,iluvtits,bobbob1,ranger6,worldwar,lowkey,chewbaca,oooooo99,ducttape,dedalus,celular,8i9o0p,borisenko,taylor01,111111z,arlingto,p3nnywiz,rdgpl3ds,boobless,kcmfwesg,blacksab,mother2,markus1,leachim,secret2,s123456789,1derful,espero,russell2,tazzer,marykate,freakme,mollyb,lindros8,james00,gofaster,stokrotka,kilbosik,aquamann,pawel1,shedevil,mousie,slot2009,october6,146969,mm259up,brewcrew,choucho,uliana,sexfiend,fktirf,pantss,vladimi,starz,sheeps,12341234q,bigun,tiggers,crjhjcnm,libtech,pudge1,home12,zircon,klaus1,jerry2,pink1,lingus,monkey66,dumass,polopolo09,feuerweh,rjyatnf,chessy,beefer,shamen,poohbear1,4jjcho,bennevis,fatgirls,ujnbrf,cdexswzaq,9noize9,rich123,nomoney,racecar1,hacke,clahay,acuario,getsum,hondacrv,william0,cheyenn,techdeck,atljhjdf,wtcacq,suger,fallenangel,bammer,tranquil,carla123,relayer,lespaul1,portvale,idontno,bycnbnen,trooper2,gennadiy,pompon,billbob,amazonka,akitas,chinatow,atkbrc,busters,fitness1,cateye,selfok2013,1murphy,fullhous,mucker,bajskorv,nectarin,littlebitch,love24,feyenoor,bigal37,lambo1,pussybitch,icecube1,biged,kyocera,ltybcjdf,boodle,theking1,gotrice,sunset1,abm1224,fromme,sexsells,inheat,kenya1,swinger1,aphrodit,kurtcobain,rhind101,poidog,poiulkjh,kuzmina,beantown,tony88,stuttgar,drumer,joaqui,messenge,motorman,amber2,nicegirl,rachel69,andreia,faith123,studmuffin,jaiden,red111,vtkmybr,gamecocks,gumper,bosshogg,4me2know,tokyo1,kleaner,roadhog,fuckmeno,phoenix3,seeme,buttnutt,boner69,andreyka,myheart,katerin,rugburn,jvtuepip,dc3ubn,chile1,ashley69,happy99,swissair,balls2,fylhttdf,jimboo,55555d,mickey11,voronin,m7hsqstm,stufff,merete,weihnachte,dowjones,baloo1,freeones,bears34,auburn1,beverl,timberland,1elvis,guinness1,bombadil,flatron1,logging7,telefoon,merl1n,masha1,andrei1,cowabung,yousuck1,1matrix,peopl,asd123qwe,sweett,mirror1,torrente,joker12,diamond6,jackaroo,00000a,millerlite,ironhorse,2twins,stryke,gggg1,zzzxxxccc,roosevel,8363eddy,angel21,depeche1,d0ct0r,blue14,areyou,veloce,grendal,frederiksberg,cbcntvf,cb207sl,sasha2000,was.here,fritzz,rosedale,spinoza,cokeisit,gandalf3,skidmark,ashley01,12345j,1234567890qaz,sexxxxxx,beagles,lennart,12345789,pass10,politic,max007,gcheckou,12345611,tiffy,lightman,mushin,velosiped,brucewayne,gauthie,elena123,greenegg,h2oski,clocker,nitemare,123321s,megiddo,cassidy1,david13,boywonde,flori,peggy12,pgszt6md,batterie,redlands,scooter6,bckhere,trueno,bailey11,maxwell2,bandana,timoth1,startnow,ducati74,tiern,maxine1,blackmetal,suzyq,balla007,phatfarm,kirsten1,titmouse,benhogan,culito,forbin,chess1,warren1,panman,mickey7,24lover,dascha,speed2,redlion,andrew10,johnwayn,nike23,chacha1,bendog,bullyboy,goldtree,spookie,tigger99,1cookie,poutine,cyclone1,woodpony,camaleun,bluesky1,dfadan,eagles20,lovergirl,peepshow,mine1,dima1989,rjdfkmxer,11111aaaaa,machina,august17,1hhhhh,0773417k,1monster,freaksho,jazzmin,davidw,kurupt,chumly,huggies,sashenka,ccccccc1,bridge1,giggalo,cincinna,pistol1,hello22,david77,lightfoo,lucky6,jimmy12,261397,lisa12,tabaluga,mysite,belo4ka,greenn,eagle99,punkrawk,salvado,slick123,wichsen,knight99,dummys,fefolico,contrera,kalle1,anna1984,delray,robert99,garena,pretende,racefan,alons,serenada,ludmilla,cnhtkjr,l0swf9gx,hankster,dfktynbyrf,sheep1,john23,cv141ab,kalyani,944turbo,crystal2,blackfly,zrjdktdf,eus1sue1,mario5,riverplate,harddriv,melissa3,elliott1,sexybitc,cnhfyybr,jimdavis,bollix,beta1,amberlee,skywalk1,natala,1blood,brattax,shitty1,gb15kv99,ronjon,rothmans,thedoc,joey21,hotboi,firedawg,bimbo38,jibber,aftermat,nomar,01478963,phishing,domodo,anna13,materia,martha1,budman1,gunblade,exclusiv,sasha1997,anastas,rebecca2,fackyou,kallisti,fuckmyass,norseman,ipswich1,151500,1edward,intelinside,darcy1,bcrich,yjdjcnbf,failte,buzzzz,cream1,tatiana1,7eleven,green8,153351,1a2s3d4f5g6h,154263,milano1,bambi1,bruins77,rugby2,jamal1,bolita,sundaypunch,bubba12,realmadr,vfyxtcnth,iwojima,notlob,black666,valkiria,nexus1,millerti,birthday100,swiss1,appollo,gefest,greeneyes,celebrat,tigerr,slava123,izumrud,bubbabub,legoman,joesmith,katya123,sweetdream,john44,wwwwwww1,oooooo1,socal,lovespor,s5r8ed67s,258147,heidis,cowboy22,wachovia,michaelb,qwe1234567,i12345,255225,goldie1,alfa155,45colt,safeu851,antonova,longtong,1sparky,gfvznm,busen,hjlbjy,whateva,rocky4,cokeman,joshua3,kekskek1,sirocco,jagman,123456qwert,phinupi,thomas10,loller,sakur,vika2011,fullred,mariska,azucar,ncstate,glenn74,halima,aleshka,ilovemylife,verlaat,baggie,scoubidou6,phatboy,jbruton,scoop1,barney11,blindman,def456,maximus2,master55,nestea,11223355,diego123,sexpistols,sniffy,philip1,f12345,prisonbreak,nokia2700,ajnjuhfa,yankees3,colfax,ak470000,mtnman,bdfyeirf,fotball,ichbin,trebla,ilusha,riobravo,beaner1,thoradin,polkaudi,kurosawa,honda123,ladybu,valerik,poltava,saviola,fuckyouguys,754740g0,anallove,microlab1,juris01,ncc1864,garfild,shania1,qagsud,makarenko,cindy69,lebedev,andrew11,johnnybo,groovy1,booster1,sanders1,tommyb,johnson4,kd189nlcih,hondaman,vlasova,chick1,sokada,sevisgur,bear2327,chacho,sexmania,roma1993,hjcnbckfd,valley1,howdie,tuppence,jimandanne,strike3,y4kuz4,nhfnfnf,tsubasa,19955991,scabby,quincunx,dima1998,uuuuuu1,logica,skinner1,pinguino,lisa1234,xpressmusic,getfucked,qqqq1,bbbb1,matulino,ulyana,upsman,johnsmith,123579,co2000,spanner1,todiefor,mangoes,isabel1,123852,negra,snowdon,nikki123,bronx1,booom,ram2500,chuck123,fireboy,creek1,batman13,princesse,az12345,maksat,1knight,28infern,241455,r7112s,muselman,mets1986,katydid,vlad777,playme,kmfdm1,asssex,1prince,iop890,bigbroth,mollymoo,waitron,lizottes,125412,juggler,quinta,0sister0,zanardi,nata123,heckfyxbr,22q04w90e,engine2,nikita95,zamira,hammer22,lutscher,carolina1,zz6319,sanman,vfuflfy,buster99,rossco,kourniko,aggarwal,tattoo1,janice1,finger1,125521,19911992,shdwlnds,rudenko,vfvfgfgf123,galatea,monkeybu,juhani,premiumcash,classact,devilmay,helpme2,knuddel,hardpack,ramil,perrit,basil1,zombie13,stockcar,tos8217,honeypie,nowayman,alphadog,melon1,talula,125689,tiribon12,tornike,haribol,telefone,tiger22,sucka,lfytxrf,chicken123,muggins,a23456,b1234567,lytdybr,otter1,pippa,vasilisk,cooking1,helter,78978,bestboy,viper7,ahmed1,whitewol,mommys,apple5,shazam1,chelsea7,kumiko,masterma,rallye,bushmast,jkz123,entrar,andrew6,nathan01,alaric,tavasz,heimdall,gravy1,jimmy99,cthlwt,powerr,gthtrhtcnjr,canesfan,sasha11,ybrbnf_25,august9,brucie,artichok,arnie1,superdude,tarelka,mickey22,dooper,luners,holeshot,good123,gettysbu,bicho,hammer99,divine5,1zxcvbn,stronzo,q22222,disne,bmw750il,godhead,hallodu,aerith,nastik,differen,cestmoi,amber69,5string,pornosta,dirtygirl,ginger123,formel1,scott12,honda200,hotspurs,johnatha,firstone123,lexmark1,msconfig,karlmasc,l123456,123qweasdzx,baldman,sungod,furka,retsub,9811020,ryder1,tcglyued,astron,lbvfcbr,minddoc,dirt49,baseball12,tbear,simpl,schuey,artimus,bikman,plat1num,quantex,gotyou,hailey1,justin01,ellada,8481068,000002,manimal,dthjybxrf,buck123,dick123,6969696,nospam,strong1,kodeord,bama12,123321w,superman123,gladiolus,nintend,5792076,dreamgirl,spankme1,gautam,arianna1,titti,tetas,cool1234,belladog,importan,4206969,87e5nclizry,teufelo7,doller,yfl.irf,quaresma,3440172,melis,bradle,nnmaster,fast1,iverso,blargh,lucas12,chrisg,iamsam,123321az,tomjerry,kawika,2597174,standrew,billyg,muskan,gizmodo2,rz93qpmq,870621345,sathya,qmezrxg4,januari,marthe,moom4261,cum2me,hkger286,lou1988,suckit1,croaker,klaudia1,753951456,aidan1,fsunoles,romanenko,abbydog,isthebes,akshay,corgi,fuck666,walkman555,ranger98,scorpian,hardwareid,bluedragon,fastman,2305822q,iddqdiddqd,1597532,gopokes,zvfrfcb,w1234567,sputnik1,tr1993,pa$$w0rd,2i5fdruv,havvoc,1357913,1313131,bnm123,cowd00d,flexscan,thesims2,boogiema,bigsexxy,powerstr,ngc4565,joshman,babyboy1,123jlb,funfunfu,qwe456,honor1,puttana,bobbyj,daniel21,pussy12,shmuck,1232580,123578951,maxthedo,hithere1,bond0007,gehenna,nomames,blueone,r1234567,bwana,gatinho,1011111,torrents,cinta,123451234,tiger25,money69,edibey,pointman,mmcm19,wales1,caffreys,phaedra,bloodlus,321ret32,rufuss,tarbit,joanna1,102030405,stickboy,lotrfotr34,jamshid,mclarenf1,ataman,99ford,yarrak,logan2,ironlung,pushistik,dragoon1,unclebob,tigereye,pinokio,tylerj,mermaid1,stevie1,jaylen,888777,ramana,roman777,brandon7,17711771s,thiago,luigi1,edgar1,brucey,videogam,classi,birder,faramir,twiddle,cubalibre,grizzy,fucky,jjvwd4,august15,idinahui,ranita,nikita1998,123342,w1w2w3,78621323,4cancel,789963,(null,vassago,jaydog472,123452,timt42,canada99,123589,rebenok,htyfnf,785001,osipov,maks123,neverwinter,love2010,777222,67390436,eleanor1,bykemo,aquemini,frogg,roboto,thorny,shipmate,logcabin,66005918,nokian,gonzos,louisian,1abcdefg,triathlo,ilovemar,couger,letmeino,supera,runvs,fibonacci,muttly,58565254,5thgbqi,vfnehsv,electr,jose12,artemis1,newlove,thd1shr,hawkey,grigoryan,saisha,tosca,redder,lifesux,temple1,bunnyman,thekids,sabbeth,tarzan1,182838,158uefas,dell50,1super,666222,47ds8x,jackhamm,mineonly,rfnfhbyf,048ro,665259,kristina1,bombero,52545856,secure1,bigloser,peterk,alex2,51525354,anarchy1,superx,teenslut,money23,sigmapi,sanfrancisco,acme34,private5,eclips,qwerttrewq,axelle,kokain,hardguy,peter69,jesuschr,dyanna,dude69,sarah69,toyota91,amberr,45645645,bugmenot,bigted,44556677,556644,wwr8x9pu,alphaome,harley13,kolia123,wejrpfpu,revelati,nairda,sodoff,cityboy,pinkpussy,dkalis,miami305,wow12345,triplet,tannenbau,asdfasdf1,darkhors,527952,retired1,soxfan,nfyz123,37583867,goddes,515069,gxlmxbewym,1warrior,36925814,dmb2011,topten,karpova,89876065093rax,naturals,gateway9,cepseoun,turbot,493949,cock22,italia1,sasafras,gopnik,stalke,1qazxdr5,wm2006,ace1062,alieva,blue28,aracel,sandia,motoguzz,terri1,emmajane,conej,recoba,alex1995,jerkyboy,cowboy12,arenrone,precisio,31415927,scsa316,panzer1,studly1,powerhou,bensam,mashoutq,billee,eeyore1,reape,thebeatl,rul3z,montesa,doodle1,cvzefh1gk,424365,a159753,zimmerma,gumdrop,ashaman,grimreap,icandoit,borodina,branca,dima2009,keywest1,vaders,bubluk,diavolo,assss,goleta,eatass,napster1,382436,369741,5411pimo,lenchik,pikach,gilgamesh,kalimera,singer1,gordon2,rjycnbnewbz,maulwurf,joker13,2much4u,bond00,alice123,robotec,fuckgirl,zgjybz,redhorse,margaret1,brady1,pumpkin2,chinky,fourplay,1booger,roisin,1brandon,sandan,blackheart,cheez,blackfin,cntgfyjdf,mymoney1,09080706,goodboss,sebring1,rose1,kensingt,bigboner,marcus12,ym3cautj,struppi,thestone,lovebugs,stater,silver99,forest99,qazwsx12345,vasile,longboar,mkonji,huligan,rhfcbdfz,airmail,porn11,1ooooo,sofun,snake2,msouthwa,dougla,1iceman,shahrukh,sharona,dragon666,france98,196800,196820,ps253535,zjses9evpa,sniper01,design1,konfeta,jack99,drum66,good4you,station2,brucew,regedit,school12,mvtnr765,pub113,fantas,tiburon1,king99,ghjcnjgbpltw,checkito,308win,1ladybug,corneliu,svetasveta,197430,icicle,imaccess,ou81269,jjjdsl,brandon6,bimbo1,smokee,piccolo1,3611jcmg,children2,cookie2,conor1,darth1,margera,aoi856,paully,ou812345,sklave,eklhigcz,30624700,amazing1,wahooo,seau55,1beer,apples2,chulo,dolphin9,heather6,198206,198207,hergood,miracle1,njhyflj,4real,milka,silverfi,fabfive,spring12,ermine,mammy,jumpjet,adilbek,toscana,caustic,hotlove,sammy69,lolita1,byoung,whipme,barney01,mistys,tree1,buster3,kaylin,gfccgjhn,132333,aishiteru,pangaea,fathead1,smurph,198701,ryslan,gasto,xexeylhf,anisimov,chevyss,saskatoo,brandy12,tweaker,irish123,music2,denny1,palpatin,outlaw1,lovesuck,woman1,mrpibb,diadora,hfnfneq,poulette,harlock,mclaren1,cooper12,newpass3,bobby12,rfgecnfcerf,alskdjfh,mini14,dukers,raffael,199103,cleo123,1234567qwertyu,mossberg,scoopy,dctulf,starline,hjvjxrf,misfits1,rangers2,bilbos,blackhea,pappnase,atwork,purple2,daywalker,summoner,1jjjjjjj,swansong,chris10,laluna,12345qqq,charly1,lionsden,money99,silver33,hoghead,bdaddy,199430,saisg002,nosaints,tirpitz,1gggggg,jason13,kingss,ernest1,0cdh0v99ue,pkunzip,arowana,spiri,deskjet1,armine,lances,magic2,thetaxi,14159265,cacique,14142135,orange10,richard0,backdraf,255ooo,humtum,kohsamui,c43dae874d,wrestling1,cbhtym,sorento,megha,pepsiman,qweqwe12,bliss7,mario64,korolev,balls123,schlange,gordit,optiquest,fatdick,fish99,richy,nottoday,dianne1,armyof1,1234qwerasdfzxcv,bbonds,aekara,lidiya,baddog1,yellow5,funkie,ryan01,greentree,gcheckout,marshal1,liliput,000000z,rfhbyrf,gtogto43,rumpole,tarado,marcelit,aqwzsxedc,kenshin1,sassydog,system12,belly1,zilla,kissfan,tools1,desember,donsdad,nick11,scorpio6,poopoo1,toto99,steph123,dogfuck,rocket21,thx113,dude12,sanek,sommar,smacky,pimpsta,letmego,k1200rs,lytghjgtnhjdcr,abigale,buddog,deles,baseball9,roofus,carlsbad,hamzah,hereiam,genial,schoolgirlie,yfz450,breads,piesek,washear,chimay,apocalyp,nicole18,gfgf1234,gobulls,dnevnik,wonderwall,beer1234,1moose,beer69,maryann1,adpass,mike34,birdcage,hottuna,gigant,penquin,praveen,donna123,123lol123,thesame,fregat,adidas11,selrahc,pandoras,test3,chasmo,111222333000,pecos,daniel11,ingersol,shana1,mama12345,cessna15,myhero,1simpson,nazarenko,cognit,seattle2,irina1,azfpc310,rfycthdf,hardy1,jazmyn,sl1200,hotlanta,jason22,kumar123,sujatha,fsd9shtyu,highjump,changer,entertai,kolding,mrbig,sayuri,eagle21,qwertzu,jorge1,0101dd,bigdong,ou812a,sinatra1,htcnjhfy,oleg123,videoman,pbyfblf,tv612se,bigbird1,kenaidog,gunite,silverma,ardmore,123123qq,hotbot,cascada,cbr600f4,harakiri,chico123,boscos,aaron12,glasgow1,kmn5hc,lanfear,1light,liveoak,fizika,ybrjkftdyf,surfside,intermilan,multipas,redcard,72chevy,balata,coolio1,schroede,kanat,testerer,camion,kierra,hejmeddig,antonio2,tornados,isidor,pinkey,n8skfswa,ginny1,houndog,1bill,chris25,hastur,1marine,greatdan,french1,hatman,123qqq,z1z2z3z4,kicker1,katiedog,usopen,smith22,mrmagoo,1234512i,assa123,7seven7,monster7,june12,bpvtyf,149521,guenter,alex1985,voronina,mbkugegs,zaqwsxcderfv,rusty5,mystic1,master0,abcdef12,jndfkb,r4zpm3,cheesey,skripka,blackwhite,sharon69,dro8smwq,lektor,techman,boognish,deidara,heckfyf,quietkey,authcode,monkey4,jayboy,pinkerto,merengue,chulita,bushwick,turambar,kittykit,joseph2,dad123,kristo,pepote,scheiss,hambone1,bigballa,restaura,tequil,111luzer,euro2000,motox,denhaag,chelsi,flaco1,preeti,lillo,1001sin,passw,august24,beatoff,555555d,willis1,kissthis,qwertyz,rvgmw2gl,iloveboobies,timati,kimbo,msinfo,dewdrop,sdbaker,fcc5nky2,messiah1,catboy,small1,chode,beastie1,star77,hvidovre,short1,xavie,dagobah,alex1987,papageno,dakota2,toonami,fuerte,jesus33,lawina,souppp,dirtybir,chrish,naturist,channel1,peyote,flibble,gutentag,lactate,killem,zucchero,robinho,ditka,grumpy1,avr7000,boxxer,topcop,berry1,mypass1,beverly1,deuce1,9638527410,cthuttdf,kzkmrf,lovethem,band1t,cantona1,purple11,apples123,wonderwo,123a456,fuzzie,lucky99,dancer2,hoddling,rockcity,winner12,spooty,mansfiel,aimee1,287hf71h,rudiger,culebra,god123,agent86,daniel0,bunky1,notmine,9ball,goofus,puffy1,xyh28af4,kulikov,bankshot,vurdf5i2,kevinm,ercole,sexygirls,razvan,october7,goater,lollie,raissa,thefrog,mdmaiwa3,mascha,jesussaves,union1,anthony9,crossroa,brother2,areyuke,rodman91,toonsex,dopeman,gericom,vaz2115,cockgobbler,12356789,12345699,signatur,alexandra1,coolwhip,erwin1,awdrgyjilp,pens66,ghjrjgtyrj,linkinpark,emergenc,psych0,blood666,bootmort,wetworks,piroca,johnd,iamthe1,supermario,homer69,flameon,image1,bebert,fylhtq1,annapoli,apple11,hockey22,10048,indahouse,mykiss,1penguin,markp,misha123,foghat,march11,hank1,santorin,defcon4,tampico,vbnhjafy,robert22,bunkie,athlon64,sex777,nextdoor,koskesh,lolnoob,seemnemaailm,black23,march15,yeehaa,chiqui,teagan,siegheil,monday2,cornhusk,mamusia,chilis,sthgrtst,feldspar,scottm,pugdog,rfghjy,micmac,gtnhjdyf,terminato,1jackson,kakosja,bogomol,123321aa,rkbvtyrj,tresor,tigertig,fuckitall,vbkkbjy,caramon,zxc12,balin,dildo1,soccer09,avata,abby123,cheetah1,marquise,jennyc,hondavfr,tinti,anna1985,dennis2,jorel,mayflowe,icema,hal2000,nikkis,bigmouth,greenery,nurjan,leonov,liberty7,fafnir,larionov,sat321321,byteme1,nausicaa,hjvfynbrf,everto,zebra123,sergio1,titone,wisdom1,kahala,104328q,marcin1,salima,pcitra,1nnnnn,nalini,galvesto,neeraj,rick1,squeeky,agnes1,jitterbu,agshar,maria12,0112358,traxxas,stivone,prophet1,bananza,sommer1,canoneos,hotfun,redsox11,1bigmac,dctdjkjl,legion1,everclea,valenok,black9,danny001,roxie1,1theman,mudslide,july16,lechef,chula,glamis,emilka,canbeef,ioanna,cactus1,rockshox,im2cool,ninja9,thvfrjdf,june28,milo17,missyou,micky1,nbibyf,nokiaa,goldi,mattias,fuckthem,asdzxc123,ironfist,junior01,nesta,crazzy,killswit,hygge,zantac,kazama,melvin1,allston,maandag,hiccup,prototyp,specboot,dwl610,hello6,159456,baldhead,redwhite,calpoly,whitetail,agile1,cousteau,matt01,aust1n,malcolmx,gjlfhjr,semperf1,ferarri,a1b2c3d,vangelis,mkvdari,bettis36,andzia,comand,tazzman,morgaine,pepluv,anna1990,inandout,anetka,anna1997,wallpape,moonrake,huntress,hogtie,cameron7,sammy7,singe11,clownboy,newzeala,wilmar,safrane,rebeld,poopi,granat,hammertime,nermin,11251422,xyzzy1,bogeys,jkmxbr,fktrcfyl,11223311,nfyrbcn,11223300,powerpla,zoedog,ybrbnbyf,zaphod42,tarawa,jxfhjdfirf,dude1234,g5wks9,goobe,czekolada,blackros,amaranth,medical1,thereds,julija,nhecsyfujkjdt,promopas,buddy4,marmalad,weihnachten,tronic,letici,passthief,67mustan,ds7zamnw,morri,w8woord,cheops,pinarell,sonofsam,av473dv,sf161pn,5c92v5h6,purple13,tango123,plant1,1baby,xufrgemw,fitta,1rangers,spawns,kenned,taratata,19944991,11111118,coronas,4ebouux8,roadrash,corvette1,dfyjdf846,marley12,qwaszxerdfcv,68stang,67stang,racin,ellehcim,sofiko,nicetry,seabass1,jazzman1,zaqwsx1,laz2937,uuuuuuu1,vlad123,rafale,j1234567,223366,nnnnnn1,226622,junkfood,asilas,cer980,daddymac,persepho,neelam,00700,shithappens,255555,qwertyy,xbox36,19755791,qweasd1,bearcub,jerryb,a1b1c1,polkaudio,basketball1,456rty,1loveyou,marcus2,mama1961,palace1,transcend,shuriken,sudhakar,teenlove,anabelle,matrix99,pogoda,notme,bartend,jordana,nihaoma,ataris,littlegi,ferraris,redarmy,giallo,fastdraw,accountbloc,peludo,pornostar,pinoyako,cindee,glassjaw,dameon,johnnyd,finnland,saudade,losbravo,slonko,toplay,smalltit,nicksfun,stockhol,penpal,caraj,divedeep,cannibus,poppydog,pass88,viktory,walhalla,arisia,lucozade,goldenbo,tigers11,caball,ownage123,tonna,handy1,johny,capital5,faith2,stillher,brandan,pooky1,antananarivu,hotdick,1justin,lacrimos,goathead,bobrik,cgtwbfkbcn,maywood,kamilek,gbplf123,gulnar,beanhead,vfvjyn,shash,viper69,ttttttt1,hondacr,kanako,muffer,dukies,justin123,agapov58,mushka,bad11bad,muleman,jojo123,andreika,makeit,vanill,boomers,bigals,merlin11,quacker,aurelien,spartak1922,ligeti,diana2,lawnmowe,fortune1,awesom,rockyy,anna1994,oinker,love88,eastbay,ab55484,poker0,ozzy666,papasmurf,antihero,photogra,ktm250,painkill,jegr2d2,p3orion,canman,dextur,qwest123,samboy,yomismo,sierra01,herber,vfrcbvvfrcbv,gloria1,llama1,pie123,bobbyjoe,buzzkill,skidrow,grabber,phili,javier1,9379992q,geroin,oleg1994,sovereig,rollover,zaq12qaz,battery1,killer13,alina123,groucho1,mario12,peter22,butterbean,elise1,lucycat,neo123,ferdi,golfer01,randie,gfhfyjbr,ventura1,chelsea3,pinoy,mtgox,yrrim7,shoeman,mirko,ffggyyo,65mustan,ufdibyjd,john55,suckfuck,greatgoo,fvfnjhb,mmmnnn,love20,1bullshi,sucesso,easy1234,robin123,rockets1,diamondb,wolfee,nothing0,joker777,glasnost,richar1,guille,sayan,koresh,goshawk,alexx,batman21,a123456b,hball,243122,rockandr,coolfool,isaia,mary1,yjdbrjdf,lolopc,cleocat,cimbo,lovehina,8vfhnf,passking,bonapart,diamond2,bigboys,kreator,ctvtyjdf,sassy123,shellac,table54781,nedkelly,philbert,sux2bu,nomis,sparky99,python1,littlebear,numpty,silmaril,sweeet,jamesw,cbufhtnf,peggysue,wodahs,luvsex,wizardry,venom123,love4you,bama1,samat,reviewpass,ned467,cjkjdtq,mamula,gijoe,amersham,devochka,redhill,gisel,preggo,polock,cando,rewster,greenlantern,panasonik,dave1234,mikeee,1carlos,miledi,darkness1,p0o9i8u7y6,kathryn1,happyguy,dcp500,assmaster,sambuka,sailormo,antonio3,logans,18254288,nokiax2,qwertzuiop,zavilov,totti,xenon1,edward11,targa1,something1,tony_t,q1w2e3r4t5y6u7i8o9p0,02551670,vladimir1,monkeybutt,greenda,neel21,craiger,saveliy,dei008,honda450,fylhtq95,spike2,fjnq8915,passwordstandard,vova12345,talonesi,richi,gigemags,pierre1,westin,trevoga,dorothee,bastogne,25563o,brandon3,truegrit,krimml,iamgreat,servis,a112233,paulinka,azimuth,corperfmonsy,358hkyp,homerun1,dogbert1,eatmyass,cottage1,savina,baseball7,bigtex,gimmesum,asdcxz,lennon1,a159357,1bastard,413276191q,pngfilt,pchealth,netsnip,bodiroga,1matt,webtvs,ravers,adapters,siddis,mashamasha,coffee2,myhoney,anna1982,marcia1,fairchil,maniek,iloveluc,batmonh,wildon,bowie1,netnwlnk,fancy1,tom204,olga1976,vfif123,queens1,ajax01,lovess,mockba,icam4usb,triada,odinthor,rstlne,exciter,sundog,anchorat,girls69,nfnmzyrf,soloma,gti16v,shadowman,ottom,rataros,tonchin,vishal,chicken0,pornlo,christiaan,volante,likesit,mariupol,runfast,gbpltw123,missys,villevalo,kbpjxrf,ghibli,calla,cessna172,kinglear,dell11,swift1,walera,1cricket,pussy5,turbo911,tucke,maprchem56458,rosehill,thekiwi1,ygfxbkgt,mandarinka,98xa29,magnit,cjfrf,paswoord,grandam1,shenmue,leedsuni,hatrick,zagadka,angeldog,michaell,dance123,koichi,bballs,29palms,xanth,228822,ppppppp1,1kkkkk,1lllll,mynewbots,spurss,madmax1,224455,city1,mmmmmmm1,nnnnnnn1,biedronka,thebeatles,elessar,f14tomcat,jordan18,bobo123,ayi000,tedbear,86chevyx,user123,bobolink,maktub,elmer1,flyfishi,franco1,gandalf0,traxdata,david21,enlighte,dmitrij,beckys,1giants,flippe,12345678w,jossie,rugbyman,snowcat,rapeme,peanut11,gemeni,udders,techn9ne,armani1,chappie,war123,vakantie,maddawg,sewanee,jake5253,tautt1,anthony5,letterma,jimbo2,kmdtyjr,hextall,jessica6,amiga500,hotcunt,phoenix9,veronda,saqartvelo,scubas,sixer3,williamj,nightfal,shihan,melnikova,kosssss,handily,killer77,jhrl0821,march17,rushman,6gcf636i,metoyou,irina123,mine11,primus1,formatters,matthew5,infotech,gangster1,jordan45,moose69,kompas,motoxxx,greatwhi,cobra12,kirpich,weezer1,hello23,montse,tracy123,connecte,cjymrf,hemingwa,azreal,gundam00,mobila,boxman,slayers1,ravshan,june26,fktrcfylhjd,bermuda1,tylerd,maersk,qazwsx11,eybdthcbntn,ash123,camelo,kat123,backd00r,cheyenne1,1king,jerkin,tnt123,trabant,warhammer40k,rambos,punto,home77,pedrito,1frank,brille,guitarman,george13,rakas,tgbxtcrbq,flute1,bananas1,lovezp1314,thespot,postie,buster69,sexytime,twistys,zacharia,sportage,toccata,denver7,terry123,bogdanova,devil69,higgins1,whatluck,pele10,kkk666,jeffery1,1qayxsw2,riptide1,chevy11,munchy,lazer1,hooker1,ghfgjh,vergesse,playgrou,4077mash,gusev,humpin,oneputt,hydepark,monster9,tiger8,tangsoo,guy123,hesoyam1,uhtqneyu,thanku,lomond,ortezza,kronik,geetha,rabbit66,killas,qazxswe,alabaste,1234567890qwerty,capone1,andrea12,geral,beatbox,slutfuck,booyaka,jasmine7,ostsee,maestro1,beatme,tracey1,buster123,donaldduck,ironfish,happy6,konnichi,gintonic,momoney1,dugan1,today2,enkidu,destiny2,trim7gun,katuha,fractals,morganstanley,polkadot,gotime,prince11,204060,fifa2010,bobbyt,seemee,amanda10,airbrush,bigtitty,heidie,layla1,cotton1,5speed,fyfnjkmtdyf,flynavy,joxury8f,meeko,akuma,dudley1,flyboy1,moondog1,trotters,mariami,signin,chinna,legs11,pussy4,1s1h1e1f1,felici,optimus1,iluvu,marlins1,gavaec,balance1,glock40,london01,kokot,southwes,comfort1,sammy11,rockbottom,brianc,litebeer,homero,chopsuey,greenlan,charit,freecell,hampster,smalldog,viper12,blofeld,1234567890987654321,realsex,romann,cartman2,cjdthitycndj,nelly1,bmw528,zwezda,masterba,jeep99,turtl,america2,sunburst,sanyco,auntjudy,125wm,blue10,qwsazx,cartma,toby12,robbob,red222,ilovecock,losfix16,1explore,helge,vaz2114,whynotme,baba123,mugen,1qazwsxedc,albertjr,0101198,sextime,supras,nicolas2,wantsex,pussy6,checkm8,winam,24gordon,misterme,curlew,gbljhfcs,medtech,franzi,butthea,voivod,blackhat,egoiste,pjkeirf,maddog69,pakalolo,hockey4,igor1234,rouges,snowhite,homefree,sexfreak,acer12,dsmith,blessyou,199410,vfrcbvjd,falco02,belinda1,yaglasph,april21,groundho,jasmin1,nevergiveup,elvir,gborv526,c00kie,emma01,awesome2,larina,mike12345,maximu,anupam,bltynbabrfwbz,tanushka,sukkel,raptor22,josh12,schalke04,cosmodog,fuckyou8,busybee,198800,bijoux,frame1,blackmor,giveit,issmall,bear13,123-123,bladez,littlegirl,ultra123,fletch1,flashnet,loploprock,rkelly,12step,lukas1,littlewhore,cuntfinger,stinkyfinger,laurenc,198020,n7td4bjl,jackie69,camel123,ben1234,1gateway,adelheid,fatmike,thuglove,zzaaqq,chivas1,4815162342q,mamadou,nadano,james22,benwin,andrea99,rjirf,michou,abkbgg,d50gnn,aaazzz,a123654,blankman,booboo11,medicus,bigbone,197200,justine1,bendix,morphius,njhvjp,44mag,zsecyus56,goodbye1,nokiadermo,a333444,waratsea,4rzp8ab7,fevral,brillian,kirbys,minim,erathia,grazia,zxcvb1234,dukey,snaggle,poppi,hymen,1video,dune2000,jpthjdf,cvbn123,zcxfcnkbdfz,astonv,ginnie,316271,engine3,pr1ncess,64chevy,glass1,laotzu,hollyy,comicbooks,assasins,nuaddn9561,scottsda,hfcnfvfy,accobra,7777777z,werty123,metalhead,romanson,redsand,365214,shalo,arsenii,1989cc,sissi,duramax,382563,petera,414243,mamapap,jollymon,field1,fatgirl,janets,trompete,matchbox20,rambo2,nepenthe,441232,qwertyuiop10,bozo123,phezc419hv,romantika,lifestyl,pengui,decembre,demon6,panther6,444888,scanman,ghjcnjabkz,pachanga,buzzword,indianer,spiderman3,tony12,startre,frog1,fyutk,483422,tupacshakur,albert12,1drummer,bmw328i,green17,aerdna,invisibl,summer13,calimer,mustaine,lgnu9d,morefun,hesoyam123,escort1,scrapland,stargat,barabbas,dead13,545645,mexicali,sierr,gfhfpbn,gonchar,moonstafa,searock,counte,foster1,jayhawk1,floren,maremma,nastya2010,softball1,adaptec,halloo,barrabas,zxcasd123,hunny,mariana1,kafedra,freedom0,green420,vlad1234,method7,665566,tooting,hallo12,davinchi,conducto,medias,666444,invernes,madhatter,456asd,12345678i,687887,le33px,spring00,help123,bellybut,billy5,vitalik1,river123,gorila,bendis,power666,747200,footslav,acehigh,qazxswedc123,q1a1z1,richard9,peterburg,tabletop,gavrilov,123qwe1,kolosov,fredrau,run4fun,789056,jkbvgbflf,chitra,87654321q,steve22,wideopen,access88,surfe,tdfyutkbjy,impossib,kevin69,880888,cantina,887766,wxcvb,dontforg,qwer1209,asslicke,mamma123,indig,arkasha,scrapp,morelia,vehxbr,jones2,scratch1,cody11,cassie12,gerbera,dontgotm,underhil,maks2010,hollywood1,hanibal,elena2010,jason11,1010321,stewar,elaman,fireplug,goodby,sacrific,babyphat,bobcat12,bruce123,1233215,tony45,tiburo,love15,bmw750,wallstreet,2h0t4me,1346795,lamerz,munkee,134679q,granvill,1512198,armastus,aiden1,pipeutvj,g1234567,angeleyes,usmc1,102030q,putangina,brandnew,shadowfax,eagles12,1falcon,brianw,lokomoti,2022958,scooper,pegas,jabroni1,2121212,buffal,siffredi,wewiz,twotone,rosebudd,nightwis,carpet1,mickey2,2525252,sleddog,red333,jamesm,2797349,jeff12,onizuka,felixxxx,rf6666,fine1,ohlala,forplay,chicago5,muncho,scooby11,ptichka,johnnn,19851985p,dogphil3650,totenkopf,monitor2,macross7,3816778,dudder,semaj1,bounder,racerx1,5556633,7085506,ofclr278,brody1,7506751,nantucke,hedj2n4q,drew1,aessedai,trekbike,pussykat,samatron,imani,9124852,wiley1,dukenukem,iampurehaha2,9556035,obvious1,mccool24,apache64,kravchenko,justforf,basura,jamese,s0ccer,safado,darksta,surfer69,damian1,gjpbnbd,gunny1,wolley,sananton,zxcvbn123456,odt4p6sv8,sergei1,modem1,mansikka,zzzz1,rifraf,dima777,mary69,looking4,donttell,red100,ninjutsu,uaeuaeman,bigbri,brasco,queenas8151,demetri,angel007,bubbl,kolort,conny,antonia1,avtoritet,kaka22,kailayu,sassy2,wrongway,chevy3,1nascar,patriots1,chrisrey,mike99,sexy22,chkdsk,sd3utre7,padawan,a6pihd,doming,mesohorny,tamada,donatello,emma22,eather,susan69,pinky123,stud69,fatbitch,pilsbury,thc420,lovepuss,1creativ,golf1234,hurryup,1honda,huskerdu,marino1,gowron,girl1,fucktoy,gtnhjpfdjlcr,dkjfghdk,pinkfl,loreli,7777777s,donkeykong,rockytop,staples1,sone4ka,xxxjay,flywheel,toppdogg,bigbubba,aaa123456,2letmein,shavkat,paule,dlanor,adamas,0147852,aassaa,dixon1,bmw328,mother12,ilikepussy,holly2,tsmith,excaliber,fhutynbyf,nicole3,tulipan,emanue,flyvholm,currahee,godsgift,antonioj,torito,dinky1,sanna,yfcnzvjz,june14,anime123,123321456654,hanswurst,bandman,hello101,xxxyyy,chevy69,technica,tagada,arnol,v00d00,lilone,filles,drumandbass,dinamit,a1234a,eatmeat,elway07,inout,james6,dawid1,thewolf,diapason,yodaddy,qscwdv,fuckit1,liljoe,sloeber,simbacat,sascha1,qwe1234,1badger,prisca,angel17,gravedig,jakeyboy,longboard,truskawka,golfer11,pyramid7,highspee,pistola,theriver,hammer69,1packers,dannyd,alfonse,qwertgfdsa,11119999,basket1,ghjtrn,saralee,12inches,paolo1,zse4xdr5,taproot,sophieh6,grizzlie,hockey69,danang,biggums,hotbitch,5alive,beloved1,bluewave,dimon95,koketka,multiscan,littleb,leghorn,poker2,delite,skyfir,bigjake,persona1,amberdog,hannah12,derren,ziffle,1sarah,1assword,sparky01,seymur,tomtom1,123321qw,goskins,soccer19,luvbekki,bumhole,2balls,1muffin,borodin,monkey9,yfeiybrb,1alex,betmen,freder,nigger123,azizbek,gjkzrjdf,lilmike,1bigdadd,1rock,taganrog,snappy1,andrey1,kolonka,bunyan,gomango,vivia,clarkkent,satur,gaudeamus,mantaray,1month,whitehea,fargus,andrew99,ray123,redhawks,liza2009,qw12345,den12345,vfhnsyjdf,147258369a,mazepa,newyorke,1arsenal,hondas2000,demona,fordgt,steve12,birthday2,12457896,dickster,edcwsxqaz,sahalin,pantyman,skinny1,hubertus,cumshot1,chiro,kappaman,mark3434,canada12,lichking,bonkers1,ivan1985,sybase,valmet,doors1,deedlit,kyjelly,bdfysx,ford11,throatfuck,backwood,fylhsq,lalit,boss429,kotova,bricky,steveh,joshua19,kissa,imladris,star1234,lubimka,partyman,crazyd,tobias1,ilike69,imhome,whome,fourstar,scanner1,ujhjl312,anatoli,85bears,jimbo69,5678ytr,potapova,nokia7070,sunday1,kalleank,1996gta,refinnej,july1,molodec,nothanks,enigm,12play,sugardog,nhfkbdfkb,larousse,cannon1,144444,qazxcdew,stimorol,jhereg,spawn7,143000,fearme,hambur,merlin21,dobie,is3yeusc,partner1,dekal,varsha,478jfszk,flavi,hippo1,9hmlpyjd,july21,7imjfstw,lexxus,truelov,nokia5200,carlos6,anais,mudbone,anahit,taylorc,tashas,larkspur,animal2000,nibiru,jan123,miyvarxar,deflep,dolore,communit,ifoptfcor,laura2,anadrol,mamaliga,mitzi1,blue92,april15,matveev,kajlas,wowlook1,1flowers,shadow14,alucard1,1golf,bantha,scotlan,singapur,mark13,manchester1,telus01,superdav,jackoff1,madnes,bullnuts,world123,clitty,palmer1,david10,spider10,sargsyan,rattlers,david4,windows2,sony12,visigoth,qqqaaa,penfloor,cabledog,camilla1,natasha123,eagleman,softcore,bobrov,dietmar,divad,sss123,d1234567,tlbyjhju,1q1q1q1,paraiso,dav123,lfiekmrf,drachen,lzhan16889,tplate,gfghbrf,casio1,123boots1,123test,sys64738,heavymetal,andiamo,meduza,soarer,coco12,negrita,amigas,heavymet,bespin,1asdfghj,wharfrat,wetsex,tight1,janus1,sword123,ladeda,dragon98,austin2,atep1,jungle1,12345abcd,lexus300,pheonix1,alex1974,123qw123,137955,bigtim,shadow88,igor1994,goodjob,arzen,champ123,121ebay,changeme1,brooksie,frogman1,buldozer,morrowin,achim,trish1,lasse,festiva,bubbaman,scottb,kramit,august22,tyson123,passsword,oompah,al123456,fucking1,green45,noodle1,looking1,ashlynn,al1716,stang50,coco11,greese,bob111,brennan1,jasonj,1cherry,1q2345,1xxxxxxx,fifa2011,brondby,zachar1,satyam,easy1,magic7,1rainbow,cheezit,1eeeeeee,ashley123,assass1,amanda123,jerbear,1bbbbbb,azerty12,15975391,654321z,twinturb,onlyone1,denis1988,6846kg3r,jumbos,pennydog,dandelion,haileris,epervier,snoopy69,afrodite,oldpussy,green55,poopypan,verymuch,katyusha,recon7,mine69,tangos,contro,blowme2,jade1,skydive1,fiveiron,dimo4ka,bokser,stargirl,fordfocus,tigers2,platina,baseball11,raque,pimper,jawbreak,buster88,walter34,chucko,penchair,horizon1,thecure1,scc1975,adrianna1,kareta,duke12,krille,dumbfuck,cunt1,aldebaran,laverda,harumi,knopfler,pongo1,pfhbyf,dogman1,rossigno,1hardon,scarlets,nuggets1,ibelieve,akinfeev,xfhkbr,athene,falcon69,happie,billly,nitsua,fiocco,qwerty09,gizmo2,slava2,125690,doggy123,craigs,vader123,silkeborg,124365,peterm,123978,krakatoa,123699,123592,kgvebmqy,pensacol,d1d2d3,snowstor,goldenboy,gfg65h7,ev700,church1,orange11,g0dz1ll4,chester3,acheron,cynthi,hotshot1,jesuschris,motdepass,zymurgy,one2one,fietsbel,harryp,wisper,pookster,nn527hp,dolla,milkmaid,rustyboy,terrell1,epsilon1,lillian1,dale3,crhbgrf,maxsim,selecta,mamada,fatman1,ufkjxrf,shinchan,fuckuall,women1,000008,bossss,greta1,rbhjxrf,mamasboy,purple69,felicidade,sexy21,cathay,hunglow,splatt,kahless,shopping1,1gandalf,themis,delta7,moon69,blue24,parliame,mamma1,miyuki,2500hd,jackmeof,razer,rocker1,juvis123,noremac,boing747,9z5ve9rrcz,icewater,titania,alley1,moparman,christo1,oliver2,vinicius,tigerfan,chevyy,joshua99,doda99,matrixx,ekbnrf,jackfrost,viper01,kasia,cnfhsq,triton1,ssbt8ae2,rugby8,ramman,1lucky,barabash,ghtlfntkm,junaid,apeshit,enfant,kenpo1,shit12,007000,marge1,shadow10,qwerty789,richard8,vbitkm,lostboys,jesus4me,richard4,hifive,kolawole,damilola,prisma,paranoya,prince2,lisaann,happyness,cardss,methodma,supercop,a8kd47v5,gamgee,polly123,irene1,number8,hoyasaxa,1digital,matthew0,dclxvi,lisica,roy123,2468013579,sparda,queball,vaffanculo,pass1wor,repmvbx,999666333,freedom8,botanik,777555333,marcos1,lubimaya,flash2,einstei,08080,123456789j,159951159,159357123,carrot1,alina1995,sanjos,dilara,mustang67,wisteria,jhnjgtl12,98766789,darksun,arxangel,87062134,creativ1,malyshka,fuckthemall,barsic,rocksta,2big4u,5nizza,genesis2,romance1,ofcourse,1horse,latenite,cubana,sactown,789456123a,milliona,61808861,57699434,imperia,bubba11,yellow3,change12,55495746,flappy,jimbo123,19372846,19380018,cutlass1,craig123,klepto,beagle1,solus,51502112,pasha1,19822891,46466452,19855891,petshop,nikolaevna,119966,nokia6131,evenpar,hoosier1,contrasena,jawa350,gonzo123,mouse2,115511,eetfuk,gfhfvgfvgfv,1crystal,sofaking,coyote1,kwiatuszek,fhrflbq,valeria1,anthro,0123654789,alltheway,zoltar,maasikas,wildchil,fredonia,earlgrey,gtnhjczy,matrix123,solid1,slavko,12monkeys,fjdksl,inter1,nokia6500,59382113kevinp,spuddy,cachero,coorslit,password!,kiba1z,karizma,vova1994,chicony,english1,bondra12,1rocket,hunden,jimbob1,zpflhjn1,th0mas,deuce22,meatwad,fatfree,congas,sambora,cooper2,janne,clancy1,stonie,busta,kamaz,speedy2,jasmine3,fahayek,arsenal0,beerss,trixie1,boobs69,luansantana,toadman,control2,ewing33,maxcat,mama1964,diamond4,tabaco,joshua0,piper2,music101,guybrush,reynald,pincher,katiebug,starrs,pimphard,frontosa,alex97,cootie,clockwor,belluno,skyeseth,booty69,chaparra,boochie,green4,bobcat1,havok,saraann,pipeman,aekdb,jumpshot,wintermu,chaika,1chester,rjnjatq,emokid,reset1,regal1,j0shua,134679a,asmodey,sarahh,zapidoo,ciccione,sosexy,beckham23,hornets1,alex1971,delerium,manageme,connor11,1rabbit,sane4ek,caseyboy,cbljhjdf,redsox20,tttttt99,haustool,ander,pantera6,passwd1,journey1,9988776655,blue135,writerspace,xiaoyua123,justice2,niagra,cassis,scorpius,bpgjldsgjldthnf,gamemaster,bloody1,retrac,stabbin,toybox,fight1,ytpyf.,glasha,va2001,taylor11,shameles,ladylove,10078,karmann,rodeos,eintritt,lanesra,tobasco,jnrhjqcz,navyman,pablit,leshka,jessica3,123vika,alena1,platinu,ilford,storm7,undernet,sasha777,1legend,anna2002,kanmax1994,porkpie,thunder0,gundog,pallina,easypass,duck1,supermom,roach1,twincam,14028,tiziano,qwerty32,123654789a,evropa,shampoo1,yfxfkmybr,cubby1,tsunami1,fktrcttdf,yasacrac,17098,happyhap,bullrun,rodder,oaktown,holde,isbest,taylor9,reeper,hammer11,julias,rolltide1,compaq123,fourx4,subzero1,hockey9,7mary3,busines,ybrbnjcbr,wagoneer,danniash,portishead,digitex,alex1981,david11,infidel,1snoopy,free30,jaden,tonto1,redcar27,footie,moskwa,thomas21,hammer12,burzum,cosmo123,50000,burltree,54343,54354,vwpassat,jack5225,cougars1,burlpony,blackhorse,alegna,petert,katemoss,ram123,nels0n,ferrina,angel77,cstock,1christi,dave55,abc123a,alex1975,av626ss,flipoff,folgore,max1998,science1,si711ne,yams7,wifey1,sveiks,cabin1,volodia,ox3ford,cartagen,platini,picture1,sparkle1,tiedomi,service321,wooody,christi1,gnasher,brunob,hammie,iraffert,bot2010,dtcyeirf,1234567890p,cooper11,alcoholi,savchenko,adam01,chelsea5,niewiem,icebear,lllooottt,ilovedick,sweetpus,money8,cookie13,rfnthbyf1988,booboo2,angus123,blockbus,david9,chica1,nazaret,samsung9,smile4u,daystar,skinnass,john10,thegirl,sexybeas,wasdwasd1,sigge1,1qa2ws3ed4rf5tg,czarny,ripley1,chris5,ashley19,anitha,pokerman,prevert,trfnthby,tony69,georgia2,stoppedb,qwertyuiop12345,miniclip,franky1,durdom,cabbages,1234567890o,delta5,liudmila,nhfycajhvths,court1,josiew,abcd1,doghead,diman,masiania,songline,boogle,triston,deepika,sexy4me,grapple,spacebal,ebonee,winter0,smokewee,nargiza,dragonla,sassys,andy2000,menards,yoshio,massive1,suckmy1k,passat99,sexybo,nastya1996,isdead,stratcat,hokuto,infix,pidoras,daffyduck,cumhard,baldeagl,kerberos,yardman,shibainu,guitare,cqub6553,tommyy,bk.irf,bigfoo,hecto,july27,james4,biggus,esbjerg,isgod,1irish,phenmarr,jamaic,roma1990,diamond0,yjdbrjd,girls4me,tampa1,kabuto,vaduz,hanse,spieng,dianochka,csm101,lorna1,ogoshi,plhy6hql,2wsx4rfv,cameron0,adebayo,oleg1996,sharipov,bouboule,hollister1,frogss,yeababy,kablam,adelante,memem,howies,thering,cecilia1,onetwo12,ojp123456,jordan9,msorcloledbr,neveraga,evh5150,redwin,1august,canno,1mercede,moody1,mudbug,chessmas,tiikeri,stickdaddy77,alex15,kvartira,7654321a,lollol123,qwaszxedc,algore,solana,vfhbyfvfhbyf,blue72,misha1111,smoke20,junior13,mogli,threee,shannon2,fuckmylife,kevinh,saransk,karenw,isolde,sekirarr,orion123,thomas0,debra1,laketaho,alondra,curiva,jazz1234,1tigers,jambos,lickme2,suomi,gandalf7,028526,zygote,brett123,br1ttany,supafly,159000,kingrat,luton1,cool-ca,bocman,thomasd,skiller,katter,mama777,chanc,tomass,1rachel,oldno7,rfpfyjdf,bigkev,yelrah,primas,osito,kipper1,msvcr71,bigboy11,thesun,noskcaj,chicc,sonja1,lozinka,mobile1,1vader,ummagumma,waves1,punter12,tubgtn,server1,irina1991,magic69,dak001,pandemonium,dead1,berlingo,cherrypi,1montana,lohotron,chicklet,asdfgh123456,stepside,ikmvw103,icebaby,trillium,1sucks,ukrnet,glock9,ab12345,thepower,robert8,thugstools,hockey13,buffon,livefree,sexpics,dessar,ja0000,rosenrot,james10,1fish,svoloch,mykitty,muffin11,evbukb,shwing,artem1992,andrey1992,sheldon1,passpage,nikita99,fubar123,vannasx,eight888,marial,max2010,express2,violentj,2ykn5ccf,spartan11,brenda69,jackiech,abagail,robin2,grass1,andy76,bell1,taison,superme,vika1995,xtr451,fred20,89032073168,denis1984,2000jeep,weetabix,199020,daxter,tevion,panther8,h9iymxmc,bigrig,kalambur,tsalagi,12213443,racecar02,jeffrey4,nataxa,bigsam,purgator,acuracl,troutbum,potsmoke,jimmyz,manutd1,nytimes,pureevil,bearss,cool22,dragonage,nodnarb,dbrbyu,4seasons,freude,elric1,werule,hockey14,12758698,corkie,yeahright,blademan,tafkap,clave,liziko,hofner,jeffhardy,nurich,runne,stanisla,lucy1,monk3y,forzaroma,eric99,bonaire,blackwoo,fengshui,1qaz0okm,newmoney,pimpin69,07078,anonymer,laptop1,cherry12,ace111,salsa1,wilbur1,doom12,diablo23,jgtxzbhr,under1,honda01,breadfan,megan2,juancarlos,stratus1,ackbar,love5683,happytim,lambert1,cbljhtyrj,komarov,spam69,nfhtkrf,brownn,sarmat,ifiksr,spike69,hoangen,angelz,economia,tanzen,avogadro,1vampire,spanners,mazdarx,queequeg,oriana,hershil,sulaco,joseph11,8seconds,aquariu,cumberla,heather9,anthony8,burton12,crystal0,maria3,qazwsxc,snow123,notgood,198520,raindog,heehaw,consulta,dasein,miller01,cthulhu1,dukenuke,iubire,baytown,hatebree,198505,sistem,lena12,welcome01,maraca,middleto,sindhu,mitsou,phoenix5,vovan,donaldo,dylandog,domovoy,lauren12,byrjuybnj,123llll,stillers,sanchin,tulpan,smallvill,1mmmmm,patti1,folgers,mike31,colts18,123456rrr,njkmrjz,phoenix0,biene,ironcity,kasperok,password22,fitnes,matthew6,spotligh,bujhm123,tommycat,hazel5,guitar11,145678,vfcmrf,compass1,willee,1barney,jack2000,littleminge,shemp,derrek,xxx12345,littlefuck,spuds1,karolinka,camneely,qwertyu123,142500,brandon00,munson15,falcon3,passssap,z3cn2erv,goahead,baggio10,141592,denali1,37kazoo,copernic,123456789asd,orange88,bravada,rush211,197700,pablo123,uptheass,samsam1,demoman,mattylad10,heydude,mister2,werken,13467985,marantz,a22222,f1f2f3f4,fm12mn12,gerasimova,burrito1,sony1,glenny,baldeagle,rmfidd,fenomen,verbati,forgetme,5element,wer138,chanel1,ooicu812,10293847qp,minicooper,chispa,myturn,deisel,vthrehbq,boredboi4u,filatova,anabe,poiuyt1,barmalei,yyyy1,fourkids,naumenko,bangbros,pornclub,okaykk,euclid90,warrior3,kornet,palevo,patatina,gocart,antanta,jed1054,clock1,111111w,dewars,mankind1,peugeot406,liten,tahira,howlin,naumov,rmracing,corone,cunthole,passit,rock69,jaguarxj,bumsen,197101,sweet2,197010,whitecat,sawadee,money100,yfhrjnbrb,andyboy,9085603566,trace1,fagget,robot1,angel20,6yhn7ujm,specialinsta,kareena,newblood,chingada,boobies2,bugger1,squad51,133andre,call06,ashes1,ilovelucy,success2,kotton,cavalla,philou,deebee,theband,nine09,artefact,196100,kkkkkkk1,nikolay9,onelov,basia,emilyann,sadman,fkrjujkbr,teamomuch,david777,padrino,money21,firdaus,orion3,chevy01,albatro,erdfcv,2legit,sarah7,torock,kevinn,holio,soloy,enron714,starfleet,qwer11,neverman,doctorwh,lucy11,dino12,trinity7,seatleon,o123456,pimpman,1asdfgh,snakebit,chancho,prorok,bleacher,ramire,darkseed,warhorse,michael123,1spanky,1hotdog,34erdfcv,n0th1ng,dimanche,repmvbyf,michaeljackson,login1,icequeen,toshiro,sperme,racer2,veget,birthday26,daniel9,lbvekmrf,charlus,bryan123,wspanic,schreibe,1andonly,dgoins,kewell,apollo12,egypt1,fernie,tiger21,aa123456789,blowj,spandau,bisquit,12345678d,deadmau5,fredie,311420,happyface,samant,gruppa,filmstar,andrew17,bakesale,sexy01,justlook,cbarkley,paul11,bloodred,rideme,birdbath,nfkbcvfy,jaxson,sirius1,kristof,virgos,nimrod1,hardc0re,killerbee,1abcdef,pitcher1,justonce,vlada,dakota99,vespucci,wpass,outside1,puertori,rfvbkf,teamlosi,vgfun2,porol777,empire11,20091989q,jasong,webuivalidat,escrima,lakers08,trigger2,addpass,342500,mongini,dfhtybr,horndogg,palermo1,136900,babyblu,alla98,dasha2010,jkelly,kernow,yfnecz,rockhopper,toeman,tlaloc,silver77,dave01,kevinr,1234567887654321,135642,me2you,8096468644q,remmus,spider7,jamesa,jilly,samba1,drongo,770129ji,supercat,juntas,tema1234,esthe,1234567892000,drew11,qazqaz123,beegees,blome,rattrace,howhigh,tallboy,rufus2,sunny2,sou812,miller12,indiana7,irnbru,patch123,letmeon,welcome5,nabisco,9hotpoin,hpvteb,lovinit,stormin,assmonke,trill,atlanti,money1234,cubsfan,mello1,stars2,ueptkm,agate,dannym88,lover123,wordz,worldnet,julemand,chaser1,s12345678,pissword,cinemax,woodchuc,point1,hotchkis,packers2,bananana,kalender,420666,penguin8,awo8rx3wa8t,hoppie,metlife,ilovemyfamily,weihnachtsbau,pudding1,luckystr,scully1,fatboy1,amizade,dedham,jahbless,blaat,surrende,****er,1panties,bigasses,ghjuhfvbcn,asshole123,dfktyrb,likeme,nickers,plastik,hektor,deeman,muchacha,cerebro,santana5,testdrive,dracula1,canalc,l1750sq,savannah1,murena,1inside,pokemon00,1iiiiiii,jordan20,sexual1,mailliw,calipso,014702580369,1zzzzzz,1jjjjjj,break1,15253545,yomama1,katinka,kevin11,1ffffff,martijn,sslazio,daniel5,porno2,nosmas,leolion,jscript,15975312,pundai,kelli1,kkkddd,obafgkm,marmaris,lilmama,london123,rfhfnt,elgordo,talk87,daniel7,thesims3,444111,bishkek,afrika2002,toby22,1speedy,daishi,2children,afroman,qqqqwwww,oldskool,hawai,v55555,syndicat,pukimak,fanatik,tiger5,parker01,bri5kev6,timexx,wartburg,love55,ecosse,yelena03,madinina,highway1,uhfdbwfgf,karuna,buhjvfybz,wallie,46and2,khalif,europ,qaz123wsx456,bobbybob,wolfone,falloutboy,manning18,scuba10,schnuff,ihateyou1,lindam,sara123,popcor,fallengun,divine1,montblanc,qwerty8,rooney10,roadrage,bertie1,latinus,lexusis,rhfvfnjhcr,opelgt,hitme,agatka,1yamaha,dmfxhkju,imaloser,michell1,sb211st,silver22,lockedup,andrew9,monica01,sassycat,dsobwick,tinroof,ctrhtnyj,bultaco,rhfcyjzhcr,aaaassss,14ss88,joanne1,momanddad,ahjkjdf,yelhsa,zipdrive,telescop,500600,1sexsex,facial1,motaro,511647,stoner1,temujin,elephant1,greatman,honey69,kociak,ukqmwhj6,altezza,cumquat,zippos,kontiki,123max,altec1,bibigon,tontos,qazsew,nopasaran,militar,supratt,oglala,kobayash,agathe,yawetag,dogs1,cfiekmrf,megan123,jamesdea,porosenok,tiger23,berger1,hello11,seemann,stunner1,walker2,imissu,jabari,minfd,lollol12,hjvfy,1-oct,stjohns,2278124q,123456789qwer,alex1983,glowworm,chicho,mallards,bluedevil,explorer1,543211,casita,1time,lachesis,alex1982,airborn1,dubesor,changa,lizzie1,captaink,socool,bidule,march23,1861brr,k.ljxrf,watchout,fotze,1brian,keksa2,aaaa1122,matrim,providian,privado,dreame,merry1,aregdone,davidt,nounour,twenty2,play2win,artcast2,zontik,552255,shit1,sluggy,552861,dr8350,brooze,alpha69,thunder6,kamelia2011,caleb123,mmxxmm,jamesh,lfybkjd,125267,125000,124536,bliss1,dddsss,indonesi,bob69,123888,tgkbxfgy,gerar,themack,hijodeputa,good4now,ddd123,clk430,kalash,tolkien1,132forever,blackb,whatis,s1s2s3s4,lolkin09,yamahar,48n25rcc,djtiesto,111222333444555,bigbull,blade55,coolbree,kelse,ichwill,yamaha12,sakic,bebeto,katoom,donke,sahar,wahine,645202,god666,berni,starwood,june15,sonoio,time123,llbean,deadsoul,lazarev,cdtnf,ksyusha,madarchod,technik,jamesy,4speed,tenorsax,legshow,yoshi1,chrisbl,44e3ebda,trafalga,heather7,serafima,favorite4,havefun1,wolve,55555r,james13,nosredna,bodean,jlettier,borracho,mickael,marinus,brutu,sweet666,kiborg,rollrock,jackson6,macross1,ousooner,9085084232,takeme,123qwaszx,firedept,vfrfhjd,jackfros,123456789000,briane,cookie11,baby22,bobby18,gromova,systemofadown,martin01,silver01,pimaou,darthmaul,hijinx,commo,chech,skyman,sunse,2vrd6,vladimirovna,uthvfybz,nicole01,kreker,bobo1,v123456789,erxtgb,meetoo,drakcap,vfvf12,misiek1,butane,network2,flyers99,riogrand,jennyk,e12345,spinne,avalon11,lovejone,studen,maint,porsche2,qwerty100,chamberl,bluedog1,sungam,just4u,andrew23,summer22,ludic,musiclover,aguil,beardog1,libertin,pippo1,joselit,patito,bigberth,digler,sydnee,jockstra,poopo,jas4an,nastya123,profil,fuesse,default1,titan2,mendoz,kpcofgs,anamika,brillo021,bomberman,guitar69,latching,69pussy,blues2,phelge,ninja123,m7n56xo,qwertasd,alex1976,cunningh,estrela,gladbach,marillion,mike2000,258046,bypop,muffinman,kd5396b,zeratul,djkxbwf,john77,sigma2,1linda,selur,reppep,quartz1,teen1,freeclus,spook1,kudos4ever,clitring,sexiness,blumpkin,macbook,tileman,centra,escaflowne,pentable,shant,grappa,zverev,1albert,lommerse,coffee11,777123,polkilo,muppet1,alex74,lkjhgfdsazx,olesica,april14,ba25547,souths,jasmi,arashi,smile2,2401pedro,mybabe,alex111,quintain,pimp1,tdeir8b2,makenna,122333444455555,%e2%82%ac,tootsie1,pass111,zaqxsw123,gkfdfybt,cnfnbcnbrf,usermane,iloveyou12,hard69,osasuna,firegod,arvind,babochka,kiss123,cookie123,julie123,kamakazi,dylan2,223355,tanguy,nbhtqa,tigger13,tubby1,makavel,asdflkj,sambo1,mononoke,mickeys,gayguy,win123,green33,wcrfxtvgbjy,bigsmall,1newlife,clove,babyfac,bigwaves,mama1970,shockwav,1friday,bassey,yarddog,codered1,victory7,bigrick,kracker,gulfstre,chris200,sunbanna,bertuzzi,begemotik,kuolema,pondus,destinee,123456789zz,abiodun,flopsy,amadeusptfcor,geronim,yggdrasi,contex,daniel6,suck1,adonis1,moorea,el345612,f22raptor,moviebuf,raunchy,6043dkf,zxcvbnm123456789,eric11,deadmoin,ratiug,nosliw,fannies,danno,888889,blank1,mikey2,gullit,thor99,mamiya,ollieb,thoth,dagger1,websolutionssu,bonker,prive,1346798520,03038,q1234q,mommy2,contax,zhipo,gwendoli,gothic1,1234562000,lovedick,gibso,digital2,space199,b26354,987654123,golive,serious1,pivkoo,better1,824358553,794613258,nata1980,logout,fishpond,buttss,squidly,good4me,redsox19,jhonny,zse45rdx,matrixxx,honey12,ramina,213546879,motzart,fall99,newspape,killit,gimpy,photowiz,olesja,thebus,marco123,147852963,bedbug,147369258,hellbound,gjgjxrf,123987456,lovehurt,five55,hammer01,1234554321a,alina2011,peppino,ang238,questor,112358132,alina1994,alina1998,money77,bobjones,aigerim,cressida,madalena,420smoke,tinchair,raven13,mooser,mauric,lovebu,adidas69,krypton1,1111112,loveline,divin,voshod,michaelm,cocotte,gbkbuhbv,76689295,kellyj,rhonda1,sweetu70,steamforums,geeque,nothere,124c41,quixotic,steam181,1169900,rfcgthcrbq,rfvbkm,sexstuff,1231230,djctvm,rockstar1,fulhamfc,bhecbr,rfntyf,quiksilv,56836803,jedimaster,pangit,gfhjkm777,tocool,1237654,stella12,55378008,19216811,potte,fender12,mortalkombat,ball1,nudegirl,palace22,rattrap,debeers,lickpussy,jimmy6,not4u2c,wert12,bigjuggs,sadomaso,1357924,312mas,laser123,arminia,branford,coastie,mrmojo,19801982,scott11,banaan123,ingres,300zxtt,hooters6,sweeties,19821983,19831985,19833891,sinnfein,welcome4,winner69,killerman,tachyon,tigre1,nymets1,kangol,martinet,sooty1,19921993,789qwe,harsingh,1597535,thecount,phantom3,36985214,lukas123,117711,pakistan1,madmax11,willow01,19932916,fucker12,flhrci,opelagila,theword,ashley24,tigger3,crazyj,rapide,deadfish,allana,31359092,sasha1993,sanders2,discman,zaq!2wsx,boilerma,mickey69,jamesg,babybo,jackson9,orion7,alina2010,indien,breeze1,atease,warspite,bazongaz,1celtic,asguard,mygal,fitzgera,1secret,duke33,cyklone,dipascuc,potapov,1escobar2,c0l0rad0,kki177hk,1little,macondo,victoriya,peter7,red666,winston6,kl?benhavn,muneca,jackme,jennan,happylife,am4h39d8nh,bodybuil,201980,dutchie,biggame,lapo4ka,rauchen,black10,flaquit,water12,31021364,command2,lainth88,mazdamx5,typhon,colin123,rcfhlfc,qwaszx11,g0away,ramir,diesirae,hacked1,cessna1,woodfish,enigma2,pqnr67w5,odgez8j3,grisou,hiheels,5gtgiaxm,2580258,ohotnik,transits,quackers,serjik,makenzie,mdmgatew,bryana,superman12,melly,lokit,thegod,slickone,fun4all,netpass,penhorse,1cooper,nsync,asdasd22,otherside,honeydog,herbie1,chiphi,proghouse,l0nd0n,shagg,select1,frost1996,casper123,countr,magichat,greatzyo,jyothi,3bears,thefly,nikkita,fgjcnjk,nitros,hornys,san123,lightspe,maslova,kimber1,newyork2,spammm,mikejone,pumpk1n,bruiser1,bacons,prelude9,boodie,dragon4,kenneth2,love98,power5,yodude,pumba,thinline,blue30,sexxybj,2dumb2live,matt21,forsale,1carolin,innova,ilikeporn,rbgtkjd,a1s2d3f,wu9942,ruffus,blackboo,qwerty999,draco1,marcelin,hideki,gendalf,trevon,saraha,cartmen,yjhbkmcr,time2go,fanclub,ladder1,chinni,6942987,united99,lindac,quadra,paolit,mainstre,beano002,lincoln7,bellend,anomie,8520456,bangalor,goodstuff,chernov,stepashka,gulla,mike007,frasse,harley03,omnislash,8538622,maryjan,sasha2011,gineok,8807031,hornier,gopinath,princesit,bdr529,godown,bosslady,hakaone,1qwe2,madman1,joshua11,lovegame,bayamon,jedi01,stupid12,sport123,aaa666,tony44,collect1,charliem,chimaira,cx18ka,trrim777,chuckd,thedream,redsox99,goodmorning,delta88,iloveyou11,newlife2,figvam,chicago3,jasonk,12qwer,9875321,lestat1,satcom,conditio,capri50,sayaka,9933162,trunks1,chinga,snooch,alexand1,findus,poekie,cfdbyf,kevind,mike1969,fire13,leftie,bigtuna,chinnu,silence1,celos1,blackdra,alex24,gfgfif,2boobs,happy8,enolagay,sataniv1993,turner1,dylans,peugeo,sasha1994,hoppel,conno,moonshot,santa234,meister1,008800,hanako,tree123,qweras,gfitymrf,reggie31,august29,supert,joshua10,akademia,gbljhfc,zorro123,nathalia,redsox12,hfpdjl,mishmash,nokiae51,nyyankees,tu190022,strongbo,none1,not4u2no,katie2,popart,harlequi,santan,michal1,1therock,screwu,csyekmrf,olemiss1,tyrese,hoople,sunshin1,cucina,starbase,topshelf,fostex,california1,castle1,symantec,pippolo,babare,turntabl,1angela,moo123,ipvteb,gogolf,alex88,cycle1,maxie1,phase2,selhurst,furnitur,samfox,fromvermine,shaq34,gators96,captain2,delonge,tomatoe,bisous,zxcvbnma,glacius,pineapple1,cannelle,ganibal,mko09ijn,paraklast1974,hobbes12,petty43,artema,junior8,mylover,1234567890d,fatal1ty,prostreet,peruan,10020,nadya,caution1,marocas,chanel5,summer08,metal123,111lox,scrapy,thatguy,eddie666,washingto,yannis,minnesota_hp,lucky4,playboy6,naumova,azzurro,patat,dale33,pa55wd,speedster,zemanova,saraht,newto,tony22,qscesz,arkady,1oliver,death6,vkfwx046,antiflag,stangs,jzf7qf2e,brianp,fozzy,cody123,startrek1,yoda123,murciela,trabajo,lvbnhbtdf,canario,fliper,adroit,henry5,goducks,papirus,alskdj,soccer6,88mike,gogetter,tanelorn,donking,marky1,leedsu,badmofo,al1916,wetdog,akmaral,pallet,april24,killer00,nesterova,rugby123,coffee12,browseui,ralliart,paigow,calgary1,armyman,vtldtltd,frodo2,frxtgb,iambigal,benno,jaytee,2hot4you,askar,bigtee,brentwoo,palladin,eddie2,al1916w,horosho,entrada,ilovetits,venture1,dragon19,jayde,chuvak,jamesl,fzr600,brandon8,vjqvbh,snowbal,snatch1,bg6njokf,pudder,karolin,candoo,pfuflrf,satchel1,manteca,khongbiet,critter1,partridg,skyclad,bigdon,ginger69,brave1,anthony4,spinnake,chinadol,passout,cochino,nipples1,15058,lopesk,sixflags,lloo999,parkhead,breakdance,cia123,fidodido,yuitre12,fooey,artem1995,gayathri,medin,nondriversig,l12345,bravo7,happy13,kazuya,camster,alex1998,luckyy,zipcode,dizzle,boating1,opusone,newpassw,movies23,kamikazi,zapato,bart316,cowboys0,corsair1,kingshit,hotdog12,rolyat,h200svrm,qwerty4,boofer,rhtyltkm,chris999,vaz21074,simferopol,pitboss,love3,britania,tanyshka,brause,123qwerty123,abeille,moscow1,ilkaev,manut,process1,inetcfg,dragon05,fortknox,castill,rynner,mrmike,koalas,jeebus,stockpor,longman,juanpabl,caiman,roleplay,jeremi,26058,prodojo,002200,magical1,black5,bvlgari,doogie1,cbhtqa,mahina,a1s2d3f4g5h6,jblpro,usmc01,bismilah,guitar01,april9,santana1,1234aa,monkey14,sorokin,evan1,doohan,animalsex,pfqxtyjr,dimitry,catchme,chello,silverch,glock45,dogleg,litespee,nirvana9,peyton18,alydar,warhamer,iluvme,sig229,minotavr,lobzik,jack23,bushwack,onlin,football123,joshua5,federov,winter2,bigmax,fufnfrhbcnb,hfpldfnhb,1dakota,f56307,chipmonk,4nick8,praline,vbhjh123,king11,22tango,gemini12,street1,77879,doodlebu,homyak,165432,chuluthu,trixi,karlito,salom,reisen,cdtnkzxjr,pookie11,tremendo,shazaam,welcome0,00000ty,peewee51,pizzle,gilead,bydand,sarvar,upskirt,legends1,freeway1,teenfuck,ranger9,darkfire,dfymrf,hunt0802,justme1,buffy1ma,1harry,671fsa75yt,burrfoot,budster,pa437tu,jimmyp,alina2006,malacon,charlize,elway1,free12,summer02,gadina,manara,gomer1,1cassie,sanja,kisulya,money3,pujols,ford50,midiland,turga,orange6,demetriu,freakboy,orosie1,radio123,open12,vfufpby,mustek,chris33,animes,meiling,nthtvjr,jasmine9,gfdkjd,oligarh,marimar,chicago9,.kzirf,bugssgub,samuraix,jackie01,pimpjuic,macdad,cagiva,vernost,willyboy,fynjyjdf,tabby1,privet123,torres9,retype,blueroom,raven11,q12we3,alex1989,bringiton,ridered,kareltje,ow8jtcs8t,ciccia,goniners,countryb,24688642,covingto,24861793,beyblade,vikin,badboyz,wlafiga,walstib,mirand,needajob,chloes,balaton,kbpfdtnf,freyja,bond9007,gabriel12,stormbri,hollage,love4eve,fenomeno,darknite,dragstar,kyle123,milfhunter,ma123123123,samia,ghislain,enrique1,ferien12,xjy6721,natalie2,reglisse,wilson2,wesker,rosebud7,amazon1,robertr,roykeane,xtcnth,mamatata,crazyc,mikie,savanah,blowjob69,jackie2,forty1,1coffee,fhbyjxrf,bubbah,goteam,hackedit,risky1,logoff,h397pnvr,buck13,robert23,bronc,st123st,godflesh,pornog,iamking,cisco69,septiembr,dale38,zhongguo,tibbar,panther9,buffa1,bigjohn1,mypuppy,vehvfycr,april16,shippo,fire1234,green15,q123123,gungadin,steveg,olivier1,chinaski,magnoli,faithy,storm12,toadfrog,paul99,78791,august20,automati,squirtle,cheezy,positano,burbon,nunya,llebpmac,kimmi,turtle2,alan123,prokuror,violin1,durex,pussygal,visionar,trick1,chicken6,29024,plowboy,rfybreks,imbue,sasha13,wagner1,vitalogy,cfymrf,thepro,26028,gorbunov,dvdcom,letmein5,duder,fastfun,pronin,libra1,conner1,harley20,stinker1,20068,20038,amitech,syoung,dugway,18068,welcome7,jimmypag,anastaci,kafka1,pfhfnecnhf,catsss,campus100,shamal,nacho1,fire12,vikings2,brasil1,rangerover,mohamma,peresvet,14058,cocomo,aliona,14038,qwaser,vikes,cbkmdf,skyblue1,ou81234,goodlove,dfkmltvfh,108888,roamer,pinky2,static1,zxcv4321,barmen,rock22,shelby2,morgans,1junior,pasword1,logjam,fifty5,nhfrnjhbcn,chaddy,philli,nemesis2,ingenier,djkrjd,ranger3,aikman8,knothead,daddy69,love007,vsythb,ford350,tiger00,renrut,owen11,energy12,march14,alena123,robert19,carisma,orange22,murphy11,podarok,prozak,kfgeirf,wolf13,lydia1,shazza,parasha,akimov,tobbie,pilote,heather4,baster,leones,gznfxjr,megama,987654321g,bullgod,boxster1,minkey,wombats,vergil,colegiata,lincol,smoothe,pride1,carwash1,latrell,bowling3,fylhtq123,pickwick,eider,bubblebox,bunnies1,loquit,slipper1,nutsac,purina,xtutdfhf,plokiju,1qazxs,uhjpysq,zxcvbasdfg,enjoy1,1pumpkin,phantom7,mama22,swordsma,wonderbr,dogdays,milker,u23456,silvan,dfkthbr,slagelse,yeahman,twothree,boston11,wolf100,dannyg,troll1,fynjy123,ghbcnfd,bftest,ballsdeep,bobbyorr,alphasig,cccdemo,fire123,norwest,claire2,august10,lth1108,problemas,sapito,alex06,1rusty,maccom,goirish1,ohyes,bxdumb,nabila,boobear1,rabbit69,princip,alexsander,travail,chantal1,dogggy,greenpea,diablo69,alex2009,bergen09,petticoa,classe,ceilidh,vlad2011,kamakiri,lucidity,qaz321,chileno,cexfhf,99ranger,mcitra,estoppel,volvos60,carter80,webpass,temp12,touareg,fcgbhby,bubba8,sunitha,200190ru,bitch2,shadow23,iluvit,nicole0,ruben1,nikki69,butttt,shocker1,souschef,lopotok01,kantot,corsano,cfnfyf,riverat,makalu,swapna,all4u9,cdtnkfy,ntktgepbr,ronaldo99,thomasj,bmw540i,chrisw,boomba,open321,z1x2c3v4b5n6m7,gaviota,iceman44,frosya,chris100,chris24,cosette,clearwat,micael,boogyman,pussy9,camus1,chumpy,heccrbq,konoplya,chester8,scooter5,ghjgfufylf,giotto,koolkat,zero000,bonita1,ckflrbq,j1964,mandog,18n28n24a,renob,head1,shergar,ringo123,tanita,sex4free,johnny12,halberd,reddevils,biolog,dillinge,fatb0y,c00per,hyperlit,wallace2,spears1,vitamine,buheirf,sloboda,alkash,mooman,marion1,arsenal7,sunder,nokia5610,edifier,pippone,fyfnjkmtdbx,fujimo,pepsi12,kulikova,bolat,duetto,daimon,maddog01,timoshka,ezmoney,desdemon,chesters,aiden,hugues,patrick5,aikman08,robert4,roenick,nyranger,writer1,36169544,foxmulder,118801,kutter,shashank,jamjar,118811,119955,aspirina,dinkus,1sailor,nalgene,19891959,snarf,allie1,cracky,resipsa,45678912,kemerovo,19841989,netware1,alhimik,19801984,nicole123,19761977,51501984,malaka1,montella,peachfuz,jethro1,cypress1,henkie,holdon,esmith,55443322,1friend,quique,bandicoot,statistika,great123,death13,ucht36,master4,67899876,bobsmith,nikko1,jr1234,hillary1,78978978,rsturbo,lzlzdfcz,bloodlust,shadow00,skagen,bambina,yummies,88887777,91328378,matthew4,itdoes,98256518,102938475,alina2002,123123789,fubared,dannys,123456321,nikifor,suck69,newmexico,scubaman,rhbcnb,fifnfy,puffdadd,159357852,dtheyxbr,theman22,212009164,prohor,shirle,nji90okm,newmedia,goose5,roma1995,letssee,iceman11,aksana,wirenut,pimpdady,1212312121,tamplier,pelican1,domodedovo,1928374655,fiction6,duckpond,ybrecz,thwack,onetwo34,gunsmith,murphydo,fallout1,spectre1,jabberwo,jgjesq,turbo6,bobo12,redryder,blackpus,elena1971,danilova,antoin,bobo1234,bobob,bobbobbo,dean1,222222a,jesusgod,matt23,musical1,darkmage,loppol,werrew,josepha,rebel12,toshka,gadfly,hawkwood,alina12,dnomyar,sexaddict,dangit,cool23,yocrack,archimed,farouk,nhfkzkz,lindalou,111zzzzz,ghjatccjh,wethepeople,m123456789,wowsers,kbkbxrf,bulldog5,m_roesel,sissinit,yamoon6,123ewqasd,dangel,miruvor79,kaytee,falcon7,bandit11,dotnet,dannii,arsenal9,miatamx5,1trouble,strip4me,dogpile,sexyred1,rjdfktdf,google10,shortman,crystal7,awesome123,cowdog,haruka,birthday28,jitter,diabolik,boomer12,dknight,bluewate,hockey123,crm0624,blueboys,willy123,jumpup,google2,cobra777,llabesab,vicelord,hopper1,gerryber,remmah,j10e5d4,qqqqqqw,agusti,fre_ak8yj,nahlik,redrobin,scott3,epson1,dumpy,bundao,aniolek,hola123,jergens,itsasecret,maxsam,bluelight,mountai1,bongwater,1london,pepper14,freeuse,dereks,qweqw,fordgt40,rfhfdfy,raider12,hunnybun,compac,splicer,megamon,tuffgong,gymnast1,butter11,modaddy,wapbbs_1,dandelio,soccer77,ghjnbdjcnjzybt,123xyi2,fishead,x002tp00,whodaman,555aaa,oussama,brunodog,technici,pmtgjnbl,qcxdw8ry,schweden,redsox3,throbber,collecto,japan10,dbm123dm,hellhoun,tech1,deadzone,kahlan,wolf123,dethklok,xzsawq,bigguy1,cybrthc,chandle,buck01,qq123123,secreta,williams1,c32649135,delta12,flash33,123joker,spacejam,polopo,holycrap,daman1,tummybed,financia,nusrat,euroline,magicone,jimkirk,ameritec,daniel26,sevenn,topazz,kingpins,dima1991,macdog,spencer5,oi812,geoffre,music11,baffle,123569,usagi,cassiope,polla,lilcrowe,thecakeisalie,vbhjndjhtw,vthokies,oldmans,sophie01,ghoster,penny2,129834,locutus1,meesha,magik,jerry69,daddysgirl,irondesk,andrey12,jasmine123,vepsrfyn,likesdick,1accord,jetboat,grafix,tomuch,showit,protozoa,mosias98,taburetka,blaze420,esenin,anal69,zhv84kv,puissant,charles0,aishwarya,babylon6,bitter1,lenina,raleigh1,lechat,access01,kamilka,fynjy,sparkplu,daisy3112,choppe,zootsuit,1234567j,rubyrose,gorilla9,nightshade,alternativa,cghfdjxybr,snuggles1,10121v,vova1992,leonardo1,dave2,matthewd,vfhfnbr,1986mets,nobull,bacall,mexican1,juanjo,mafia1,boomer22,soylent,edwards1,jordan10,blackwid,alex86,gemini13,lunar2,dctvcjcfnm,malaki,plugger,eagles11,snafu2,1shelly,cintaku,hannah22,tbird1,maks5843,irish88,homer22,amarok,fktrcfylhjdf,lincoln2,acess,gre69kik,need4speed,hightech,core2duo,blunt1,ublhjgjybrf,dragon33,1autopas,autopas1,wwww1,15935746,daniel20,2500aa,massim,1ggggggg,96ford,hardcor1,cobra5,blackdragon,vovan_lt,orochimaru,hjlbntkb,qwertyuiop12,tallen,paradoks,frozenfish,ghjuhfvvbcn,gerri1,nuggett,camilit,doright,trans1,serena1,catch2,bkmyeh,fireston,afhvfwtdn,purple3,figure8,fuckya,scamp1,laranja,ontheoutside,louis123,yellow7,moonwalk,mercury2,tolkein,raide,amenra,a13579,dranreb,5150vh,harish,tracksta,sexking,ozzmosis,katiee,alomar,matrix19,headroom,jahlove,ringding,apollo8,132546,132613,12345672000,saretta,135798,136666,thomas7,136913,onetwothree,hockey33,calida,nefertit,bitwise,tailhook,boop4,kfgecbr,bujhmbujhm,metal69,thedark,meteoro,felicia1,house12,tinuviel,istina,vaz2105,pimp13,toolfan,nina1,tuesday2,maxmotives,lgkp500,locksley,treech,darling1,kurama,aminka,ramin,redhed,dazzler,jager1,stpiliot,cardman,rfvtym,cheeser,14314314,paramoun,samcat,plumpy,stiffie,vsajyjr,panatha,qqq777,car12345,098poi,asdzx,keegan1,furelise,kalifornia,vbhjckfd,beast123,zcfvfzkexifz,harry5,1birdie,96328i,escola,extra330,henry12,gfhfyjqz,14u2nv,max1234,templar1,1dave,02588520,catrin,pangolin,marhaba,latin1,amorcito,dave22,escape1,advance1,yasuhiro,grepw,meetme,orange01,ernes,erdna,zsergn,nautica1,justinb,soundwav,miasma,greg78,nadine1,sexmad,lovebaby,promo1,excel1,babys,dragonma,camry1,sonnenschein,farooq,wazzkaprivet,magal,katinas,elvis99,redsox24,rooney1,chiefy,peggys,aliev,pilsung,mudhen,dontdoit,dennis12,supercal,energia,ballsout,funone,claudiu,brown2,amoco,dabl1125,philos,gjdtkbntkm,servette,13571113,whizzer,nollie,13467982,upiter,12string,bluejay1,silkie,william4,kosta1,143333,connor12,sustanon,06068,corporat,ssnake,laurita,king10,tahoes,arsenal123,sapato,charless,jeanmarc,levent,algerie,marine21,jettas,winsome,dctvgbplf,1701ab,xxxp455w0rd5,lllllll1,ooooooo1,monalis,koufax32,anastasya,debugger,sarita2,jason69,ufkxjyjr,gjlcnfdf,1jerry,daniel10,balinor,sexkitten,death2,qwertasdfgzxcvb,s9te949f,vegeta1,sysman,maxxam,dimabilan,mooose,ilovetit,june23,illest,doesit,mamou,abby12,longjump,transalp,moderato,littleguy,magritte,dilnoza,hawaiiguy,winbig,nemiroff,kokaine,admira,myemail,dream2,browneyes,destiny7,dragonss,suckme1,asa123,andranik,suckem,fleshbot,dandie,timmys,scitra,timdog,hasbeen,guesss,smellyfe,arachne,deutschl,harley88,birthday27,nobody1,papasmur,home1,jonass,bunia3,epatb1,embalm,vfvekmrf,apacer,12345656,estreet,weihnachtsbaum,mrwhite,admin12,kristie1,kelebek,yoda69,socken,tima123,bayern1,fktrcfylth,tamiya,99strenght,andy01,denis2011,19delta,stokecit,aotearoa,stalker2,nicnac,conrad1,popey,agusta,bowl36,1bigfish,mossyoak,1stunner,getinnow,jessejames,gkfnjy,drako,1nissan,egor123,hotness,1hawaii,zxc123456,cantstop,1peaches,madlen,west1234,jeter1,markis,judit,attack1,artemi,silver69,153246,crazy2,green9,yoshimi,1vette,chief123,jasper2,1sierra,twentyon,drstrang,aspirant,yannic,jenna123,bongtoke,slurpy,1sugar,civic97,rusty21,shineon,james19,anna12345,wonderwoman,1kevin,karol1,kanabis,wert21,fktif6115,evil1,kakaha,54gv768,826248s,tyrone1,1winston,sugar2,falcon01,adelya,mopar440,zasxcd,leecher,kinkysex,mercede1,travka,11234567,rebon,geekboy".split(","), english_wikipedia: "the,of,and,in,was,is,for,as,on,with,by,he,at,from,his,an,were,are,which,doc,https,also,or,has,had,first,one,their,its,after,new,who,they,two,her,she,been,other,when,time,during,there,into,school,more,may,years,over,only,year,most,would,world,city,some,where,between,later,three,state,such,then,national,used,made,known,under,many,university,united,while,part,season,team,these,american,than,film,second,born,south,became,states,war,through,being,including,both,before,north,high,however,people,family,early,history,album,area,them,series,against,until,since,district,county,name,work,life,group,music,following,number,company,several,four,called,played,released,career,league,game,government,house,each,based,day,same,won,use,station,club,international,town,located,population,general,college,east,found,age,march,end,september,began,home,public,church,line,june,river,member,system,place,century,band,july,york,january,october,song,august,best,former,british,party,named,held,village,show,local,november,took,service,december,built,another,major,within,along,members,five,single,due,although,small,old,left,final,large,include,building,served,president,received,games,death,february,main,third,set,children,own,order,species,park,law,air,published,road,died,book,men,women,army,often,according,education,central,country,division,english,top,included,development,french,community,among,water,play,side,list,times,near,late,form,original,different,center,power,led,students,german,moved,court,six,land,council,island,u.s.,record,million,research,art,established,award,street,military,television,given,region,support,western,production,non,political,point,cup,period,business,title,started,various,election,using,england,role,produced,become,program,works,field,total,office,class,written,association,radio,union,level,championship,director,few,force,created,department,founded,services,married,though,per,n't,site,open,act,short,society,version,royal,present,northern,worked,professional,full,returned,joined,story,france,european,currently,language,social,california,india,days,design,st.,further,round,australia,wrote,san,project,control,southern,railway,board,popular,continued,free,battle,considered,video,common,position,living,half,playing,recorded,red,post,described,average,records,special,modern,appeared,announced,areas,rock,release,elected,others,example,term,opened,similar,formed,route,census,current,schools,originally,lake,developed,race,himself,forces,addition,information,upon,province,match,event,songs,result,events,win,eastern,track,lead,teams,science,human,construction,minister,germany,awards,available,throughout,training,style,body,museum,australian,health,seven,signed,chief,eventually,appointed,sea,centre,debut,tour,points,media,light,range,character,across,features,families,largest,indian,network,less,performance,players,refer,europe,sold,festival,usually,taken,despite,designed,committee,process,return,official,episode,institute,stage,followed,performed,japanese,personal,thus,arts,space,low,months,includes,china,study,middle,magazine,leading,japan,groups,aircraft,featured,federal,civil,rights,model,coach,canadian,books,remained,eight,type,independent,completed,capital,academy,instead,kingdom,organization,countries,studies,competition,sports,size,above,section,finished,gold,involved,reported,management,systems,industry,directed,market,fourth,movement,technology,bank,ground,campaign,base,lower,sent,rather,added,provided,coast,grand,historic,valley,conference,bridge,winning,approximately,films,chinese,awarded,degree,russian,shows,native,female,replaced,municipality,square,studio,medical,data,african,successful,mid,bay,attack,previous,operations,spanish,theatre,student,republic,beginning,provide,ship,primary,owned,writing,tournament,culture,introduced,texas,related,natural,parts,governor,reached,ireland,units,senior,decided,italian,whose,higher,africa,standard,income,professor,placed,regional,los,buildings,championships,active,novel,energy,generally,interest,via,economic,previously,stated,itself,channel,below,operation,leader,traditional,trade,structure,limited,runs,prior,regular,famous,saint,navy,foreign,listed,artist,catholic,airport,results,parliament,collection,unit,officer,goal,attended,command,staff,commission,lived,location,plays,commercial,places,foundation,significant,older,medal,self,scored,companies,highway,activities,programs,wide,musical,notable,library,numerous,paris,towards,individual,allowed,plant,property,annual,contract,whom,highest,initially,required,earlier,assembly,artists,rural,seat,practice,defeated,ended,soviet,length,spent,manager,press,associated,author,issues,additional,characters,lord,zealand,policy,engine,township,noted,historical,complete,financial,religious,mission,contains,nine,recent,represented,pennsylvania,administration,opening,secretary,lines,report,executive,youth,closed,theory,writer,italy,angeles,appearance,feature,queen,launched,legal,terms,entered,issue,edition,singer,greek,majority,background,source,anti,cultural,complex,changes,recording,stadium,islands,operated,particularly,basketball,month,uses,port,castle,mostly,names,fort,selected,increased,status,earth,subsequently,pacific,cover,variety,certain,goals,remains,upper,congress,becoming,studied,irish,nature,particular,loss,caused,chart,dr.,forced,create,era,retired,material,review,rate,singles,referred,larger,individuals,shown,provides,products,speed,democratic,poland,parish,olympics,cities,themselves,temple,wing,genus,households,serving,cost,wales,stations,passed,supported,view,cases,forms,actor,male,matches,males,stars,tracks,females,administrative,median,effect,biography,train,engineering,camp,offered,chairman,houses,mainly,19th,surface,therefore,nearly,score,ancient,subject,prime,seasons,claimed,experience,specific,jewish,failed,overall,believed,plot,troops,greater,spain,consists,broadcast,heavy,increase,raised,separate,campus,1980s,appears,presented,lies,composed,recently,influence,fifth,nations,creek,references,elections,britain,double,cast,meaning,earned,carried,producer,latter,housing,brothers,attempt,article,response,border,remaining,nearby,direct,ships,value,workers,politician,academic,label,1970s,commander,rule,fellow,residents,authority,editor,transport,dutch,projects,responsible,covered,territory,flight,races,defense,tower,emperor,albums,facilities,daily,stories,assistant,managed,primarily,quality,function,proposed,distribution,conditions,prize,journal,code,vice,newspaper,corps,highly,constructed,mayor,critical,secondary,corporation,rugby,regiment,ohio,appearances,serve,allow,nation,multiple,discovered,directly,scene,levels,growth,elements,acquired,1990s,officers,physical,20th,latin,host,jersey,graduated,arrived,issued,literature,metal,estate,vote,immediately,quickly,asian,competed,extended,produce,urban,1960s,promoted,contemporary,global,formerly,appear,industrial,types,opera,ministry,soldiers,commonly,mass,formation,smaller,typically,drama,shortly,density,senate,effects,iran,polish,prominent,naval,settlement,divided,basis,republican,languages,distance,treatment,continue,product,mile,sources,footballer,format,clubs,leadership,initial,offers,operating,avenue,officially,columbia,grade,squadron,fleet,percent,farm,leaders,agreement,likely,equipment,website,mount,grew,method,transferred,intended,renamed,iron,asia,reserve,capacity,politics,widely,activity,advanced,relations,scottish,dedicated,crew,founder,episodes,lack,amount,build,efforts,concept,follows,ordered,leaves,positive,economy,entertainment,affairs,memorial,ability,illinois,communities,color,text,railroad,scientific,focus,comedy,serves,exchange,environment,cars,direction,organized,firm,description,agency,analysis,purpose,destroyed,reception,planned,revealed,infantry,architecture,growing,featuring,household,candidate,removed,situated,models,knowledge,solo,technical,organizations,assigned,conducted,participated,largely,purchased,register,gained,combined,headquarters,adopted,potential,protection,scale,approach,spread,independence,mountains,titled,geography,applied,safety,mixed,accepted,continues,captured,rail,defeat,principal,recognized,lieutenant,mentioned,semi,owner,joint,liberal,actress,traffic,creation,basic,notes,unique,supreme,declared,simply,plants,sales,massachusetts,designated,parties,jazz,compared,becomes,resources,titles,concert,learning,remain,teaching,versions,content,alongside,revolution,sons,block,premier,impact,champions,districts,generation,estimated,volume,image,sites,account,roles,sport,quarter,providing,zone,yard,scoring,classes,presence,performances,representatives,hosted,split,taught,origin,olympic,claims,critics,facility,occurred,suffered,municipal,damage,defined,resulted,respectively,expanded,platform,draft,opposition,expected,educational,ontario,climate,reports,atlantic,surrounding,performing,reduced,ranked,allows,birth,nominated,younger,newly,kong,positions,theater,philadelphia,heritage,finals,disease,sixth,laws,reviews,constitution,tradition,swedish,theme,fiction,rome,medicine,trains,resulting,existing,deputy,environmental,labour,classical,develop,fans,granted,receive,alternative,begins,nuclear,fame,buried,connected,identified,palace,falls,letters,combat,sciences,effort,villages,inspired,regions,towns,conservative,chosen,animals,labor,attacks,materials,yards,steel,representative,orchestra,peak,entitled,officials,returning,reference,northwest,imperial,convention,examples,ocean,publication,painting,subsequent,frequently,religion,brigade,fully,sides,acts,cemetery,relatively,oldest,suggested,succeeded,achieved,application,programme,cells,votes,promotion,graduate,armed,supply,flying,communist,figures,literary,netherlands,korea,worldwide,citizens,1950s,faculty,draw,stock,seats,occupied,methods,unknown,articles,claim,holds,authorities,audience,sweden,interview,obtained,covers,settled,transfer,marked,allowing,funding,challenge,southeast,unlike,crown,rise,portion,transportation,sector,phase,properties,edge,tropical,standards,institutions,philosophy,legislative,hills,brand,fund,conflict,unable,founding,refused,attempts,metres,permanent,starring,applications,creating,effective,aired,extensive,employed,enemy,expansion,billboard,rank,battalion,multi,vehicle,fought,alliance,category,perform,federation,poetry,bronze,bands,entry,vehicles,bureau,maximum,billion,trees,intelligence,greatest,screen,refers,commissioned,gallery,injury,confirmed,setting,treaty,adult,americans,broadcasting,supporting,pilot,mobile,writers,programming,existence,squad,minnesota,copies,korean,provincial,sets,defence,offices,agricultural,internal,core,northeast,retirement,factory,actions,prevent,communications,ending,weekly,containing,functions,attempted,interior,weight,bowl,recognition,incorporated,increasing,ultimately,documentary,derived,attacked,lyrics,mexican,external,churches,centuries,metropolitan,selling,opposed,personnel,mill,visited,presidential,roads,pieces,norwegian,controlled,18th,rear,influenced,wrestling,weapons,launch,composer,locations,developing,circuit,specifically,studios,shared,canal,wisconsin,publishing,approved,domestic,consisted,determined,comic,establishment,exhibition,southwest,fuel,electronic,cape,converted,educated,melbourne,hits,wins,producing,norway,slightly,occur,surname,identity,represent,constituency,funds,proved,links,structures,athletic,birds,contest,users,poet,institution,display,receiving,rare,contained,guns,motion,piano,temperature,publications,passenger,contributed,toward,cathedral,inhabitants,architect,exist,athletics,muslim,courses,abandoned,signal,successfully,disambiguation,tennessee,dynasty,heavily,maryland,jews,representing,budget,weather,missouri,introduction,faced,pair,chapel,reform,height,vietnam,occurs,motor,cambridge,lands,focused,sought,patients,shape,invasion,chemical,importance,communication,selection,regarding,homes,voivodeship,maintained,borough,failure,aged,passing,agriculture,oregon,teachers,flow,philippines,trail,seventh,portuguese,resistance,reaching,negative,fashion,scheduled,downtown,universities,trained,skills,scenes,views,notably,typical,incident,candidates,engines,decades,composition,commune,chain,inc.,austria,sale,values,employees,chamber,regarded,winners,registered,task,investment,colonial,swiss,user,entirely,flag,stores,closely,entrance,laid,journalist,coal,equal,causes,turkish,quebec,techniques,promote,junction,easily,dates,kentucky,singapore,residence,violence,advance,survey,humans,expressed,passes,streets,distinguished,qualified,folk,establish,egypt,artillery,visual,improved,actual,finishing,medium,protein,switzerland,productions,operate,poverty,neighborhood,organisation,consisting,consecutive,sections,partnership,extension,reaction,factor,costs,bodies,device,ethnic,racial,flat,objects,chapter,improve,musicians,courts,controversy,membership,merged,wars,expedition,interests,arab,comics,gain,describes,mining,bachelor,crisis,joining,decade,1930s,distributed,habitat,routes,arena,cycle,divisions,briefly,vocals,directors,degrees,object,recordings,installed,adjacent,demand,voted,causing,businesses,ruled,grounds,starred,drawn,opposite,stands,formal,operates,persons,counties,compete,wave,israeli,ncaa,resigned,brief,greece,combination,demographics,historian,contain,commonwealth,musician,collected,argued,louisiana,session,cabinet,parliamentary,electoral,loan,profit,regularly,conservation,islamic,purchase,17th,charts,residential,earliest,designs,paintings,survived,moth,items,goods,grey,anniversary,criticism,images,discovery,observed,underground,progress,additionally,participate,thousands,reduce,elementary,owners,stating,iraq,resolution,capture,tank,rooms,hollywood,finance,queensland,reign,maintain,iowa,landing,broad,outstanding,circle,path,manufacturing,assistance,sequence,gmina,crossing,leads,universal,shaped,kings,attached,medieval,ages,metro,colony,affected,scholars,oklahoma,coastal,soundtrack,painted,attend,definition,meanwhile,purposes,trophy,require,marketing,popularity,cable,mathematics,mississippi,represents,scheme,appeal,distinct,factors,acid,subjects,roughly,terminal,economics,senator,diocese,prix,contrast,argentina,czech,wings,relief,stages,duties,16th,novels,accused,whilst,equivalent,charged,measure,documents,couples,request,danish,defensive,guide,devices,statistics,credited,tries,passengers,allied,frame,puerto,peninsula,concluded,instruments,wounded,differences,associate,forests,afterwards,replace,requirements,aviation,solution,offensive,ownership,inner,legislation,hungarian,contributions,actors,translated,denmark,steam,depending,aspects,assumed,injured,severe,admitted,determine,shore,technique,arrival,measures,translation,debuted,delivered,returns,rejected,separated,visitors,damaged,storage,accompanied,markets,industries,losses,gulf,charter,strategy,corporate,socialist,somewhat,significantly,physics,mounted,satellite,experienced,constant,relative,pattern,restored,belgium,connecticut,partners,harvard,retained,networks,protected,mode,artistic,parallel,collaboration,debate,involving,journey,linked,salt,authors,components,context,occupation,requires,occasionally,policies,tamil,ottoman,revolutionary,hungary,poem,versus,gardens,amongst,audio,makeup,frequency,meters,orthodox,continuing,suggests,legislature,coalition,guitarist,eighth,classification,practices,soil,tokyo,instance,limit,coverage,considerable,ranking,colleges,cavalry,centers,daughters,twin,equipped,broadway,narrow,hosts,rates,domain,boundary,arranged,12th,whereas,brazilian,forming,rating,strategic,competitions,trading,covering,baltimore,commissioner,infrastructure,origins,replacement,praised,disc,collections,expression,ukraine,driven,edited,austrian,solar,ensure,premiered,successor,wooden,operational,hispanic,concerns,rapid,prisoners,childhood,meets,influential,tunnel,employment,tribe,qualifying,adapted,temporary,celebrated,appearing,increasingly,depression,adults,cinema,entering,laboratory,script,flows,romania,accounts,fictional,pittsburgh,achieve,monastery,franchise,formally,tools,newspapers,revival,sponsored,processes,vienna,springs,missions,classified,13th,annually,branches,lakes,gender,manner,advertising,normally,maintenance,adding,characteristics,integrated,decline,modified,strongly,critic,victims,malaysia,arkansas,nazi,restoration,powered,monument,hundreds,depth,15th,controversial,admiral,criticized,brick,honorary,initiative,output,visiting,birmingham,progressive,existed,carbon,1920s,credits,colour,rising,hence,defeating,superior,filmed,listing,column,surrounded,orleans,principles,territories,struck,participation,indonesia,movements,index,commerce,conduct,constitutional,spiritual,ambassador,vocal,completion,edinburgh,residing,tourism,finland,bears,medals,resident,themes,visible,indigenous,involvement,basin,electrical,ukrainian,concerts,boats,styles,processing,rival,drawing,vessels,experimental,declined,touring,supporters,compilation,coaching,cited,dated,roots,string,explained,transit,traditionally,poems,minimum,representation,14th,releases,effectively,architectural,triple,indicated,greatly,elevation,clinical,printed,10th,proposal,peaked,producers,romanized,rapidly,stream,innings,meetings,counter,householder,honour,lasted,agencies,document,exists,surviving,experiences,honors,landscape,hurricane,harbor,panel,competing,profile,vessel,farmers,lists,revenue,exception,customers,11th,participants,wildlife,utah,bible,gradually,preserved,replacing,symphony,begun,longest,siege,provinces,mechanical,genre,transmission,agents,executed,videos,benefits,funded,rated,instrumental,ninth,similarly,dominated,destruction,passage,technologies,thereafter,outer,facing,affiliated,opportunities,instrument,governments,scholar,evolution,channels,shares,sessions,widespread,occasions,engineers,scientists,signing,battery,competitive,alleged,eliminated,supplies,judges,hampshire,regime,portrayed,penalty,taiwan,denied,submarine,scholarship,substantial,transition,victorian,http,nevertheless,filed,supports,continental,tribes,ratio,doubles,useful,honours,blocks,principle,retail,departure,ranks,patrol,yorkshire,vancouver,inter,extent,afghanistan,strip,railways,component,organ,symbol,categories,encouraged,abroad,civilian,periods,traveled,writes,struggle,immediate,recommended,adaptation,egyptian,graduating,assault,drums,nomination,historically,voting,allies,detailed,achievement,percentage,arabic,assist,frequent,toured,apply,and/or,intersection,maine,touchdown,throne,produces,contribution,emerged,obtain,archbishop,seek,researchers,remainder,populations,clan,finnish,overseas,fifa,licensed,chemistry,festivals,mediterranean,injuries,animated,seeking,publisher,volumes,limits,venue,jerusalem,generated,trials,islam,youngest,ruling,glasgow,germans,songwriter,persian,municipalities,donated,viewed,belgian,cooperation,posted,tech,dual,volunteer,settlers,commanded,claiming,approval,delhi,usage,terminus,partly,electricity,locally,editions,premiere,absence,belief,traditions,statue,indicate,manor,stable,attributed,possession,managing,viewers,chile,overview,seed,regulations,essential,minority,cargo,segment,endemic,forum,deaths,monthly,playoffs,erected,practical,machines,suburb,relation,mrs.,descent,indoor,continuous,characterized,solutions,caribbean,rebuilt,serbian,summary,contested,psychology,pitch,attending,muhammad,tenure,drivers,diameter,assets,venture,punk,airlines,concentration,athletes,volunteers,pages,mines,influences,sculpture,protest,ferry,behalf,drafted,apparent,furthermore,ranging,romanian,democracy,lanka,significance,linear,d.c.,certified,voters,recovered,tours,demolished,boundaries,assisted,identify,grades,elsewhere,mechanism,1940s,reportedly,aimed,conversion,suspended,photography,departments,beijing,locomotives,publicly,dispute,magazines,resort,conventional,platforms,internationally,capita,settlements,dramatic,derby,establishing,involves,statistical,implementation,immigrants,exposed,diverse,layer,vast,ceased,connections,belonged,interstate,uefa,organised,abuse,deployed,cattle,partially,filming,mainstream,reduction,automatic,rarely,subsidiary,decides,merger,comprehensive,displayed,amendment,guinea,exclusively,manhattan,concerning,commons,radical,serbia,baptist,buses,initiated,portrait,harbour,choir,citizen,sole,unsuccessful,manufactured,enforcement,connecting,increases,patterns,sacred,muslims,clothing,hindu,unincorporated,sentenced,advisory,tanks,campaigns,fled,repeated,remote,rebellion,implemented,texts,fitted,tribute,writings,sufficient,ministers,21st,devoted,jurisdiction,coaches,interpretation,pole,businessman,peru,sporting,prices,cuba,relocated,opponent,arrangement,elite,manufacturer,responded,suitable,distinction,calendar,dominant,tourist,earning,prefecture,ties,preparation,anglo,pursue,worship,archaeological,chancellor,bangladesh,scores,traded,lowest,horror,outdoor,biology,commented,specialized,loop,arriving,farming,housed,historians,'the,patent,pupils,christianity,opponents,athens,northwestern,maps,promoting,reveals,flights,exclusive,lions,norfolk,hebrew,extensively,eldest,shops,acquisition,virtual,renowned,margin,ongoing,essentially,iranian,alternate,sailed,reporting,conclusion,originated,temperatures,exposure,secured,landed,rifle,framework,identical,martial,focuses,topics,ballet,fighters,belonging,wealthy,negotiations,evolved,bases,oriented,acres,democrat,heights,restricted,vary,graduation,aftermath,chess,illness,participating,vertical,collective,immigration,demonstrated,leaf,completing,organic,missile,leeds,eligible,grammar,confederate,improvement,congressional,wealth,cincinnati,spaces,indicates,corresponding,reaches,repair,isolated,taxes,congregation,ratings,leagues,diplomatic,submitted,winds,awareness,photographs,maritime,nigeria,accessible,animation,restaurants,philippine,inaugural,dismissed,armenian,illustrated,reservoir,speakers,programmes,resource,genetic,interviews,camps,regulation,computers,preferred,travelled,comparison,distinctive,recreation,requested,southeastern,dependent,brisbane,breeding,playoff,expand,bonus,gauge,departed,qualification,inspiration,shipping,slaves,variations,shield,theories,munich,recognised,emphasis,favour,variable,seeds,undergraduate,territorial,intellectual,qualify,mini,banned,pointed,democrats,assessment,judicial,examination,attempting,objective,partial,characteristic,hardware,pradesh,execution,ottawa,metre,drum,exhibitions,withdrew,attendance,phrase,journalism,logo,measured,error,christians,trio,protestant,theology,respective,atmosphere,buddhist,substitute,curriculum,fundamental,outbreak,rabbi,intermediate,designation,globe,liberation,simultaneously,diseases,experiments,locomotive,difficulties,mainland,nepal,relegated,contributing,database,developments,veteran,carries,ranges,instruction,lodge,protests,obama,newcastle,experiment,physician,describing,challenges,corruption,delaware,adventures,ensemble,succession,renaissance,tenth,altitude,receives,approached,crosses,syria,croatia,warsaw,professionals,improvements,worn,airline,compound,permitted,preservation,reducing,printing,scientist,activist,comprises,sized,societies,enters,ruler,gospel,earthquake,extend,autonomous,croatian,serial,decorated,relevant,ideal,grows,grass,tier,towers,wider,welfare,columns,alumni,descendants,interface,reserves,banking,colonies,manufacturers,magnetic,closure,pitched,vocalist,preserve,enrolled,cancelled,equation,2000s,nickname,bulgaria,heroes,exile,mathematical,demands,input,structural,tube,stem,approaches,argentine,axis,manuscript,inherited,depicted,targets,visits,veterans,regard,removal,efficiency,organisations,concepts,lebanon,manga,petersburg,rally,supplied,amounts,yale,tournaments,broadcasts,signals,pilots,azerbaijan,architects,enzyme,literacy,declaration,placing,batting,incumbent,bulgarian,consistent,poll,defended,landmark,southwestern,raid,resignation,travels,casualties,prestigious,namely,aims,recipient,warfare,readers,collapse,coached,controls,volleyball,coup,lesser,verse,pairs,exhibited,proteins,molecular,abilities,integration,consist,aspect,advocate,administered,governing,hospitals,commenced,coins,lords,variation,resumed,canton,artificial,elevated,palm,difficulty,civic,efficient,northeastern,inducted,radiation,affiliate,boards,stakes,byzantine,consumption,freight,interaction,oblast,numbered,seminary,contracts,extinct,predecessor,bearing,cultures,functional,neighboring,revised,cylinder,grants,narrative,reforms,athlete,tales,reflect,presidency,compositions,specialist,cricketer,founders,sequel,widow,disbanded,associations,backed,thereby,pitcher,commanding,boulevard,singers,crops,militia,reviewed,centres,waves,consequently,fortress,tributary,portions,bombing,excellence,nest,payment,mars,plaza,unity,victories,scotia,farms,nominations,variant,attacking,suspension,installation,graphics,estates,comments,acoustic,destination,venues,surrender,retreat,libraries,quarterback,customs,berkeley,collaborated,gathered,syndrome,dialogue,recruited,shanghai,neighbouring,psychological,saudi,moderate,exhibit,innovation,depot,binding,brunswick,situations,certificate,actively,shakespeare,editorial,presentation,ports,relay,nationalist,methodist,archives,experts,maintains,collegiate,bishops,maintaining,temporarily,embassy,essex,wellington,connects,reformed,bengal,recalled,inches,doctrine,deemed,legendary,reconstruction,statements,palestinian,meter,achievements,riders,interchange,spots,auto,accurate,chorus,dissolved,missionary,thai,operators,e.g.,generations,failing,delayed,cork,nashville,perceived,venezuela,cult,emerging,tomb,abolished,documented,gaining,canyon,episcopal,stored,assists,compiled,kerala,kilometers,mosque,grammy,theorem,unions,segments,glacier,arrives,theatrical,circulation,conferences,chapters,displays,circular,authored,conductor,fewer,dimensional,nationwide,liga,yugoslavia,peer,vietnamese,fellowship,armies,regardless,relating,dynamic,politicians,mixture,serie,somerset,imprisoned,posts,beliefs,beta,layout,independently,electronics,provisions,fastest,logic,headquartered,creates,challenged,beaten,appeals,plains,protocol,graphic,accommodate,iraqi,midfielder,span,commentary,freestyle,reflected,palestine,lighting,burial,virtually,backing,prague,tribal,heir,identification,prototype,criteria,dame,arch,tissue,footage,extending,procedures,predominantly,updated,rhythm,preliminary,cafe,disorder,prevented,suburbs,discontinued,retiring,oral,followers,extends,massacre,journalists,conquest,larvae,pronounced,behaviour,diversity,sustained,addressed,geographic,restrictions,voiced,milwaukee,dialect,quoted,grid,nationally,nearest,roster,twentieth,separation,indies,manages,citing,intervention,guidance,severely,migration,artwork,focusing,rivals,trustees,varied,enabled,committees,centered,skating,slavery,cardinals,forcing,tasks,auckland,youtube,argues,colored,advisor,mumbai,requiring,theological,registration,refugees,nineteenth,survivors,runners,colleagues,priests,contribute,variants,workshop,concentrated,creator,lectures,temples,exploration,requirement,interactive,navigation,companion,perth,allegedly,releasing,citizenship,observation,stationed,ph.d.,sheep,breed,discovers,encourage,kilometres,journals,performers,isle,saskatchewan,hybrid,hotels,lancashire,dubbed,airfield,anchor,suburban,theoretical,sussex,anglican,stockholm,permanently,upcoming,privately,receiver,optical,highways,congo,colours,aggregate,authorized,repeatedly,varies,fluid,innovative,transformed,praise,convoy,demanded,discography,attraction,export,audiences,ordained,enlisted,occasional,westminster,syrian,heavyweight,bosnia,consultant,eventual,improving,aires,wickets,epic,reactions,scandal,i.e.,discrimination,buenos,patron,investors,conjunction,testament,construct,encountered,celebrity,expanding,georgian,brands,retain,underwent,algorithm,foods,provision,orbit,transformation,associates,tactical,compact,varieties,stability,refuge,gathering,moreover,manila,configuration,gameplay,discipline,entity,comprising,composers,skill,monitoring,ruins,museums,sustainable,aerial,altered,codes,voyage,friedrich,conflicts,storyline,travelling,conducting,merit,indicating,referendum,currency,encounter,particles,automobile,workshops,acclaimed,inhabited,doctorate,cuban,phenomenon,dome,enrollment,tobacco,governance,trend,equally,manufacture,hydrogen,grande,compensation,download,pianist,grain,shifted,neutral,evaluation,define,cycling,seized,array,relatives,motors,firms,varying,automatically,restore,nicknamed,findings,governed,investigate,manitoba,administrator,vital,integral,indonesian,confusion,publishers,enable,geographical,inland,naming,civilians,reconnaissance,indianapolis,lecturer,deer,tourists,exterior,rhode,bassist,symbols,scope,ammunition,yuan,poets,punjab,nursing,cent,developers,estimates,presbyterian,nasa,holdings,generate,renewed,computing,cyprus,arabia,duration,compounds,gastropod,permit,valid,touchdowns,facade,interactions,mineral,practiced,allegations,consequence,goalkeeper,baronet,copyright,uprising,carved,targeted,competitors,mentions,sanctuary,fees,pursued,tampa,chronicle,capabilities,specified,specimens,toll,accounting,limestone,staged,upgraded,philosophical,streams,guild,revolt,rainfall,supporter,princeton,terrain,hometown,probability,assembled,paulo,surrey,voltage,developer,destroyer,floors,lineup,curve,prevention,potentially,onwards,trips,imposed,hosting,striking,strict,admission,apartments,solely,utility,proceeded,observations,euro,incidents,vinyl,profession,haven,distant,expelled,rivalry,runway,torpedo,zones,shrine,dimensions,investigations,lithuania,idaho,pursuit,copenhagen,considerably,locality,wireless,decrease,genes,thermal,deposits,hindi,habitats,withdrawn,biblical,monuments,casting,plateau,thesis,managers,flooding,assassination,acknowledged,interim,inscription,guided,pastor,finale,insects,transported,activists,marshal,intensity,airing,cardiff,proposals,lifestyle,prey,herald,capitol,aboriginal,measuring,lasting,interpreted,occurring,desired,drawings,healthcare,panels,elimination,oslo,ghana,blog,sabha,intent,superintendent,governors,bankruptcy,p.m.,equity,disk,layers,slovenia,prussia,quartet,mechanics,graduates,politically,monks,screenplay,nato,absorbed,topped,petition,bold,morocco,exhibits,canterbury,publish,rankings,crater,dominican,enhanced,planes,lutheran,governmental,joins,collecting,brussels,unified,streak,strategies,flagship,surfaces,oval,archive,etymology,imprisonment,instructor,noting,remix,opposing,servant,rotation,width,trans,maker,synthesis,excess,tactics,snail,ltd.,lighthouse,sequences,cornwall,plantation,mythology,performs,foundations,populated,horizontal,speedway,activated,performer,diving,conceived,edmonton,subtropical,environments,prompted,semifinals,caps,bulk,treasury,recreational,telegraph,continent,portraits,relegation,catholics,graph,velocity,rulers,endangered,secular,observer,learns,inquiry,idol,dictionary,certification,estimate,cluster,armenia,observatory,revived,nadu,consumers,hypothesis,manuscripts,contents,arguments,editing,trails,arctic,essays,belfast,acquire,promotional,undertaken,corridor,proceedings,antarctic,millennium,labels,delegates,vegetation,acclaim,directing,substance,outcome,diploma,philosopher,malta,albanian,vicinity,degc,legends,regiments,consent,terrorist,scattered,presidents,gravity,orientation,deployment,duchy,refuses,estonia,crowned,separately,renovation,rises,wilderness,objectives,agreements,empress,slopes,inclusion,equality,decree,ballot,criticised,rochester,recurring,struggled,disabled,henri,poles,prussian,convert,bacteria,poorly,sudan,geological,wyoming,consistently,minimal,withdrawal,interviewed,proximity,repairs,initiatives,pakistani,republicans,propaganda,viii,abstract,commercially,availability,mechanisms,naples,discussions,underlying,lens,proclaimed,advised,spelling,auxiliary,attract,lithuanian,editors,o'brien,accordance,measurement,novelist,ussr,formats,councils,contestants,indie,facebook,parishes,barrier,battalions,sponsor,consulting,terrorism,implement,uganda,crucial,unclear,notion,distinguish,collector,attractions,filipino,ecology,investments,capability,renovated,iceland,albania,accredited,scouts,armor,sculptor,cognitive,errors,gaming,condemned,successive,consolidated,baroque,entries,regulatory,reserved,treasurer,variables,arose,technological,rounded,provider,rhine,agrees,accuracy,genera,decreased,frankfurt,ecuador,edges,particle,rendered,calculated,careers,faction,rifles,americas,gaelic,portsmouth,resides,merchants,fiscal,premises,coin,draws,presenter,acceptance,ceremonies,pollution,consensus,membrane,brigadier,nonetheless,genres,supervision,predicted,magnitude,finite,differ,ancestry,vale,delegation,removing,proceeds,placement,emigrated,siblings,molecules,payments,considers,demonstration,proportion,newer,valve,achieving,confederation,continuously,luxury,notre,introducing,coordinates,charitable,squadrons,disorders,geometry,winnipeg,ulster,loans,longtime,receptor,preceding,belgrade,mandate,wrestler,neighbourhood,factories,buddhism,imported,sectors,protagonist,steep,elaborate,prohibited,artifacts,prizes,pupil,cooperative,sovereign,subspecies,carriers,allmusic,nationals,settings,autobiography,neighborhoods,analog,facilitate,voluntary,jointly,newfoundland,organizing,raids,exercises,nobel,machinery,baltic,crop,granite,dense,websites,mandatory,seeks,surrendered,anthology,comedian,bombs,slot,synopsis,critically,arcade,marking,equations,halls,indo,inaugurated,embarked,speeds,clause,invention,premiership,likewise,presenting,demonstrate,designers,organize,examined,km/h,bavaria,troop,referee,detection,zurich,prairie,rapper,wingspan,eurovision,luxembourg,slovakia,inception,disputed,mammals,entrepreneur,makers,evangelical,yield,clergy,trademark,defunct,allocated,depicting,volcanic,batted,conquered,sculptures,providers,reflects,armoured,locals,walt,herzegovina,contracted,entities,sponsorship,prominence,flowing,ethiopia,marketed,corporations,withdraw,carnegie,induced,investigated,portfolio,flowering,opinions,viewing,classroom,donations,bounded,perception,leicester,fruits,charleston,academics,statute,complaints,smallest,deceased,petroleum,resolved,commanders,algebra,southampton,modes,cultivation,transmitter,spelled,obtaining,sizes,acre,pageant,bats,abbreviated,correspondence,barracks,feast,tackles,raja,derives,geology,disputes,translations,counted,constantinople,seating,macedonia,preventing,accommodation,homeland,explored,invaded,provisional,transform,sphere,unsuccessfully,missionaries,conservatives,highlights,traces,organisms,openly,dancers,fossils,absent,monarchy,combining,lanes,stint,dynamics,chains,missiles,screening,module,tribune,generating,miners,nottingham,seoul,unofficial,owing,linking,rehabilitation,citation,louisville,mollusk,depicts,differential,zimbabwe,kosovo,recommendations,responses,pottery,scorer,aided,exceptions,dialects,telecommunications,defines,elderly,lunar,coupled,flown,25th,espn,formula_1,bordered,fragments,guidelines,gymnasium,valued,complexity,papal,presumably,maternal,challenging,reunited,advancing,comprised,uncertain,favorable,twelfth,correspondent,nobility,livestock,expressway,chilean,tide,researcher,emissions,profits,lengths,accompanying,witnessed,itunes,drainage,slope,reinforced,feminist,sanskrit,develops,physicians,outlets,isbn,coordinator,averaged,termed,occupy,diagnosed,yearly,humanitarian,prospect,spacecraft,stems,enacted,linux,ancestors,karnataka,constitute,immigrant,thriller,ecclesiastical,generals,celebrations,enhance,heating,advocated,evident,advances,bombardment,watershed,shuttle,wicket,twitter,adds,branded,teaches,schemes,pension,advocacy,conservatory,cairo,varsity,freshwater,providence,seemingly,shells,cuisine,specially,peaks,intensive,publishes,trilogy,skilled,nacional,unemployment,destinations,parameters,verses,trafficking,determination,infinite,savings,alignment,linguistic,countryside,dissolution,measurements,advantages,licence,subfamily,highlands,modest,regent,algeria,crest,teachings,knockout,brewery,combine,conventions,descended,chassis,primitive,fiji,explicitly,cumberland,uruguay,laboratories,bypass,elect,informal,preceded,holocaust,tackle,minneapolis,quantity,securities,console,doctoral,religions,commissioners,expertise,unveiled,precise,diplomat,standings,infant,disciplines,sicily,endorsed,systematic,charted,armored,mild,lateral,townships,hurling,prolific,invested,wartime,compatible,galleries,moist,battlefield,decoration,convent,tubes,terrestrial,nominee,requests,delegate,leased,dubai,polar,applying,addresses,munster,sings,commercials,teamed,dances,eleventh,midland,cedar,flee,sandstone,snails,inspection,divide,asset,themed,comparable,paramount,dairy,archaeology,intact,institutes,rectangular,instances,phases,reflecting,substantially,applies,vacant,lacked,copa,coloured,encounters,sponsors,encoded,possess,revenues,ucla,chaired,a.m.,enabling,playwright,stoke,sociology,tibetan,frames,motto,financing,illustrations,gibraltar,chateau,bolivia,transmitted,enclosed,persuaded,urged,folded,suffolk,regulated,bros.,submarines,myth,oriental,malaysian,effectiveness,narrowly,acute,sunk,replied,utilized,tasmania,consortium,quantities,gains,parkway,enlarged,sided,employers,adequate,accordingly,assumption,ballad,mascot,distances,peaking,saxony,projected,affiliation,limitations,metals,guatemala,scots,theaters,kindergarten,verb,employer,differs,discharge,controller,seasonal,marching,guru,campuses,avoided,vatican,maori,excessive,chartered,modifications,caves,monetary,sacramento,mixing,institutional,celebrities,irrigation,shapes,broadcaster,anthem,attributes,demolition,offshore,specification,surveys,yugoslav,contributor,auditorium,lebanese,capturing,airports,classrooms,chennai,paths,tendency,determining,lacking,upgrade,sailors,detected,kingdoms,sovereignty,freely,decorative,momentum,scholarly,georges,gandhi,speculation,transactions,undertook,interact,similarities,cove,teammate,constituted,painters,tends,madagascar,partnerships,afghan,personalities,attained,rebounds,masses,synagogue,reopened,asylum,embedded,imaging,catalogue,defenders,taxonomy,fiber,afterward,appealed,communists,lisbon,rica,judaism,adviser,batsman,ecological,commands,lgbt,cooling,accessed,wards,shiva,employs,thirds,scenic,worcester,tallest,contestant,humanities,economist,textile,constituencies,motorway,tram,percussion,cloth,leisure,1880s,baden,flags,resemble,riots,coined,sitcom,composite,implies,daytime,tanzania,penalties,optional,competitor,excluded,steering,reversed,autonomy,reviewer,breakthrough,professionally,damages,pomeranian,deputies,valleys,ventures,highlighted,electorate,mapping,shortened,executives,tertiary,specimen,launching,bibliography,sank,pursuing,binary,descendant,marched,natives,ideology,turks,adolf,archdiocese,tribunal,exceptional,nigerian,preference,fails,loading,comeback,vacuum,favored,alter,remnants,consecrated,spectators,trends,patriarch,feedback,paved,sentences,councillor,astronomy,advocates,broader,commentator,commissions,identifying,revealing,theatres,incomplete,enables,constituent,reformation,tract,haiti,atmospheric,screened,explosive,czechoslovakia,acids,symbolic,subdivision,liberals,incorporate,challenger,erie,filmmaker,laps,kazakhstan,organizational,evolutionary,chemicals,dedication,riverside,fauna,moths,maharashtra,annexed,gen.,resembles,underwater,garnered,timeline,remake,suited,educator,hectares,automotive,feared,latvia,finalist,narrator,portable,airways,plaque,designing,villagers,licensing,flank,statues,struggles,deutsche,migrated,cellular,jacksonville,wimbledon,defining,highlight,preparatory,planets,cologne,employ,frequencies,detachment,readily,libya,resign,halt,helicopters,reef,landmarks,collaborative,irregular,retaining,helsinki,folklore,weakened,viscount,interred,professors,memorable,mega,repertoire,rowing,dorsal,albeit,progressed,operative,coronation,liner,telugu,domains,philharmonic,detect,bengali,synthetic,tensions,atlas,dramatically,paralympics,xbox,shire,kiev,lengthy,sued,notorious,seas,screenwriter,transfers,aquatic,pioneers,unesco,radius,abundant,tunnels,syndicated,inventor,accreditation,janeiro,exeter,ceremonial,omaha,cadet,predators,resided,prose,slavic,precision,abbot,deity,engaging,cambodia,estonian,compliance,demonstrations,protesters,reactor,commodore,successes,chronicles,mare,extant,listings,minerals,tonnes,parody,cultivated,traders,pioneering,supplement,slovak,preparations,collision,partnered,vocational,atoms,malayalam,welcomed,documentation,curved,functioning,presently,formations,incorporates,nazis,botanical,nucleus,ethical,greeks,metric,automated,whereby,stance,europeans,duet,disability,purchasing,email,telescope,displaced,sodium,comparative,processor,inning,precipitation,aesthetic,import,coordination,feud,alternatively,mobility,tibet,regained,succeeding,hierarchy,apostolic,catalog,reproduction,inscriptions,vicar,clusters,posthumously,rican,loosely,additions,photographic,nowadays,selective,derivative,keyboards,guides,collectively,affecting,combines,operas,networking,decisive,terminated,continuity,finishes,ancestor,consul,heated,simulation,leipzig,incorporating,georgetown,formula_2,circa,forestry,portrayal,councillors,advancement,complained,forewings,confined,transaction,definitions,reduces,televised,1890s,rapids,phenomena,belarus,alps,landscapes,quarterly,specifications,commemorate,continuation,isolation,antenna,downstream,patents,ensuing,tended,saga,lifelong,columnist,labeled,gymnastics,papua,anticipated,demise,encompasses,madras,antarctica,interval,icon,rams,midlands,ingredients,priory,strengthen,rouge,explicit,gaza,aging,securing,anthropology,listeners,adaptations,underway,vista,malay,fortified,lightweight,violations,concerto,financed,jesuit,observers,trustee,descriptions,nordic,resistant,opted,accepts,prohibition,andhra,inflation,negro,wholly,imagery,spur,instructed,gloucester,cycles,middlesex,destroyers,statewide,evacuated,hyderabad,peasants,mice,shipyard,coordinate,pitching,colombian,exploring,numbering,compression,countess,hiatus,exceed,raced,archipelago,traits,soils,o'connor,vowel,android,facto,angola,amino,holders,logistics,circuits,emergence,kuwait,partition,emeritus,outcomes,submission,promotes,barack,negotiated,loaned,stripped,50th,excavations,treatments,fierce,participant,exports,decommissioned,cameo,remarked,residences,fuselage,mound,undergo,quarry,node,midwest,specializing,occupies,etc.,showcase,molecule,offs,modules,salon,exposition,revision,peers,positioned,hunters,competes,algorithms,reside,zagreb,calcium,uranium,silicon,airs,counterpart,outlet,collectors,sufficiently,canberra,inmates,anatomy,ensuring,curves,aviv,firearms,basque,volcano,thrust,sheikh,extensions,installations,aluminum,darker,sacked,emphasized,aligned,asserted,pseudonym,spanning,decorations,eighteenth,orbital,spatial,subdivided,notation,decay,macedonian,amended,declining,cyclist,feat,unusually,commuter,birthplace,latitude,activation,overhead,30th,finalists,whites,encyclopedia,tenor,qatar,survives,complement,concentrations,uncommon,astronomical,bangalore,pius,genome,memoir,recruit,prosecutor,modification,paired,container,basilica,arlington,displacement,germanic,mongolia,proportional,debates,matched,calcutta,rows,tehran,aerospace,prevalent,arise,lowland,24th,spokesman,supervised,advertisements,clash,tunes,revelation,wanderers,quarterfinals,fisheries,steadily,memoirs,pastoral,renewable,confluence,acquiring,strips,slogan,upstream,scouting,analyst,practitioners,turbine,strengthened,heavier,prehistoric,plural,excluding,isles,persecution,turin,rotating,villain,hemisphere,unaware,arabs,corpus,relied,singular,unanimous,schooling,passive,angles,dominance,instituted,aria,outskirts,balanced,beginnings,financially,structured,parachute,viewer,attitudes,subjected,escapes,derbyshire,erosion,addressing,styled,declaring,originating,colts,adjusted,stained,occurrence,fortifications,baghdad,nitrogen,localities,yemen,galway,debris,lodz,victorious,pharmaceutical,substances,unnamed,dwelling,atop,developmental,activism,voter,refugee,forested,relates,overlooking,genocide,kannada,insufficient,oversaw,partisan,dioxide,recipients,factions,mortality,capped,expeditions,receptors,reorganized,prominently,atom,flooded,flute,orchestral,scripts,mathematician,airplay,detached,rebuilding,dwarf,brotherhood,salvation,expressions,arabian,cameroon,poetic,recruiting,bundesliga,inserted,scrapped,disabilities,evacuation,pasha,undefeated,crafts,rituals,aluminium,norm,pools,submerged,occupying,pathway,exams,prosperity,wrestlers,promotions,basal,permits,nationalism,trim,merge,gazette,tributaries,transcription,caste,porto,emerge,modeled,adjoining,counterparts,paraguay,redevelopment,renewal,unreleased,equilibrium,similarity,minorities,soviets,comprise,nodes,tasked,unrelated,expired,johan,precursor,examinations,electrons,socialism,exiled,admiralty,floods,wigan,nonprofit,lacks,brigades,screens,repaired,hanover,fascist,labs,osaka,delays,judged,statutory,colt,col.,offspring,solving,bred,assisting,retains,somalia,grouped,corresponds,tunisia,chaplain,eminent,chord,22nd,spans,viral,innovations,possessions,mikhail,kolkata,icelandic,implications,introduces,racism,workforce,alto,compulsory,admits,censorship,onset,reluctant,inferior,iconic,progression,liability,turnout,satellites,behavioral,coordinated,exploitation,posterior,averaging,fringe,krakow,mountainous,greenwich,para,plantations,reinforcements,offerings,famed,intervals,constraints,individually,nutrition,1870s,taxation,threshold,tomatoes,fungi,contractor,ethiopian,apprentice,diabetes,wool,gujarat,honduras,norse,bucharest,23rd,arguably,accompany,prone,teammates,perennial,vacancy,polytechnic,deficit,okinawa,functionality,reminiscent,tolerance,transferring,myanmar,concludes,neighbours,hydraulic,economically,slower,plots,charities,synod,investor,catholicism,identifies,bronx,interpretations,adverse,judiciary,hereditary,nominal,sensor,symmetry,cubic,triangular,tenants,divisional,outreach,representations,passages,undergoing,cartridge,testified,exceeded,impacts,limiting,railroads,defeats,regain,rendering,humid,retreated,reliability,governorate,antwerp,infamous,implied,packaging,lahore,trades,billed,extinction,ecole,rejoined,recognizes,projection,qualifications,stripes,forts,socially,lexington,accurately,sexuality,westward,wikipedia,pilgrimage,abolition,choral,stuttgart,nests,expressing,strikeouts,assessed,monasteries,reconstructed,humorous,marxist,fertile,consort,urdu,patronage,peruvian,devised,lyric,baba,nassau,communism,extraction,popularly,markings,inability,litigation,accounted,processed,emirates,tempo,cadets,eponymous,contests,broadly,oxide,courtyard,frigate,directory,apex,outline,regency,chiefly,patrols,secretariat,cliffs,residency,privy,armament,australians,dorset,geometric,genetics,scholarships,fundraising,flats,demographic,multimedia,captained,documentaries,updates,canvas,blockade,guerrilla,songwriting,administrators,intake,drought,implementing,fraction,cannes,refusal,inscribed,meditation,announcing,exported,ballots,formula_3,curator,basel,arches,flour,subordinate,confrontation,gravel,simplified,berkshire,patriotic,tuition,employing,servers,castile,posting,combinations,discharged,miniature,mutations,constellation,incarnation,ideals,necessity,granting,ancestral,crowds,pioneered,mormon,methodology,rama,indirect,complexes,bavarian,patrons,uttar,skeleton,bollywood,flemish,viable,bloc,breeds,triggered,sustainability,tailed,referenced,comply,takeover,latvian,homestead,platoon,communal,nationality,excavated,targeting,sundays,posed,physicist,turret,endowment,marginal,dispatched,commentators,renovations,attachment,collaborations,ridges,barriers,obligations,shareholders,prof.,defenses,presided,rite,backgrounds,arbitrary,affordable,gloucestershire,thirteenth,inlet,miniseries,possesses,detained,pressures,subscription,realism,solidarity,proto,postgraduate,noun,burmese,abundance,homage,reasoning,anterior,robust,fencing,shifting,vowels,garde,profitable,loch,anchored,coastline,samoa,terminology,prostitution,magistrate,venezuelan,speculated,regulate,fixture,colonists,digit,induction,manned,expeditionary,computational,centennial,principally,vein,preserving,engineered,numerical,cancellation,conferred,continually,borne,seeded,advertisement,unanimously,treaties,infections,ions,sensors,lowered,amphibious,lava,fourteenth,bahrain,niagara,nicaragua,squares,congregations,26th,periodic,proprietary,1860s,contributors,seller,overs,emission,procession,presumed,illustrator,zinc,gases,tens,applicable,stretches,reproductive,sixteenth,apparatus,accomplishments,canoe,guam,oppose,recruitment,accumulated,limerick,namibia,staging,remixes,ordnance,uncertainty,pedestrian,temperate,treason,deposited,registry,cerambycidae,attracting,lankan,reprinted,shipbuilding,homosexuality,neurons,eliminating,1900s,resume,ministries,beneficial,blackpool,surplus,northampton,licenses,constructing,announcer,standardized,alternatives,taipei,inadequate,failures,yields,medalist,titular,obsolete,torah,burlington,predecessors,lublin,retailers,castles,depiction,issuing,gubernatorial,propulsion,tiles,damascus,discs,alternating,pomerania,peasant,tavern,redesignated,27th,illustration,focal,mans,codex,specialists,productivity,antiquity,controversies,promoter,pits,companions,behaviors,lyrical,prestige,creativity,swansea,dramas,approximate,feudal,tissues,crude,campaigned,unprecedented,chancel,amendments,surroundings,allegiance,exchanges,align,firmly,optimal,commenting,reigning,landings,obscure,1850s,contemporaries,paternal,devi,endurance,communes,incorporation,denominations,exchanged,routing,resorts,amnesty,slender,explores,suppression,heats,pronunciation,centred,coupe,stirling,freelance,treatise,linguistics,laos,informs,discovering,pillars,encourages,halted,robots,definitive,maturity,tuberculosis,venetian,silesian,unchanged,originates,mali,lincolnshire,quotes,seniors,premise,contingent,distribute,danube,gorge,logging,dams,curling,seventeenth,specializes,wetlands,deities,assess,thickness,rigid,culminated,utilities,substrate,insignia,nile,assam,shri,currents,suffrage,canadians,mortar,asteroid,bosnian,discoveries,enzymes,sanctioned,replica,hymn,investigators,tidal,dominate,derivatives,converting,leinster,verbs,honoured,criticisms,dismissal,discrete,masculine,reorganization,unlimited,wurttemberg,sacks,allocation,bahn,jurisdictions,participates,lagoon,famine,communion,culminating,surveyed,shortage,cables,intersects,cassette,foremost,adopting,solicitor,outright,bihar,reissued,farmland,dissertation,turnpike,baton,photographed,christchurch,kyoto,finances,rails,histories,linebacker,kilkenny,accelerated,dispersed,handicap,absorption,rancho,ceramic,captivity,cites,font,weighed,mater,utilize,bravery,extract,validity,slovenian,seminars,discourse,ranged,duel,ironically,warships,sega,temporal,surpassed,prolonged,recruits,northumberland,greenland,contributes,patented,eligibility,unification,discusses,reply,translates,beirut,relies,torque,northward,reviewers,monastic,accession,neural,tramway,heirs,sikh,subscribers,amenities,taliban,audit,rotterdam,wagons,kurdish,favoured,combustion,meanings,persia,browser,diagnostic,niger,formula_4,denomination,dividing,parameter,branding,badminton,leningrad,sparked,hurricanes,beetles,propeller,mozambique,refined,diagram,exhaust,vacated,readings,markers,reconciliation,determines,concurrent,imprint,primera,organism,demonstrating,filmmakers,vanderbilt,affiliates,traction,evaluated,defendants,megachile,investigative,zambia,assassinated,rewarded,probable,staffordshire,foreigners,directorate,nominees,consolidation,commandant,reddish,differing,unrest,drilling,bohemia,resembling,instrumentation,considerations,haute,promptly,variously,dwellings,clans,tablet,enforced,cockpit,semifinal,hussein,prisons,ceylon,emblem,monumental,phrases,correspond,crossover,outlined,characterised,acceleration,caucus,crusade,protested,composing,rajasthan,habsburg,rhythmic,interception,inherent,cooled,ponds,spokesperson,gradual,consultation,kuala,globally,suppressed,builders,avengers,suffix,integer,enforce,fibers,unionist,proclamation,uncovered,infrared,adapt,eisenhower,utilizing,captains,stretched,observing,assumes,prevents,analyses,saxophone,caucasus,notices,villains,dartmouth,mongol,hostilities,stretching,veterinary,lenses,texture,prompting,overthrow,excavation,islanders,masovian,battleship,biographer,replay,degradation,departing,luftwaffe,fleeing,oversight,immigrated,serbs,fishermen,strengthening,respiratory,italians,denotes,radial,escorted,motif,wiltshire,expresses,accessories,reverted,establishments,inequality,protocols,charting,famously,satirical,entirety,trench,friction,atletico,sampling,subset,weekday,upheld,sharply,correlation,incorrect,mughal,travelers,hasan,earnings,offset,evaluate,specialised,recognizing,flexibility,nagar,postseason,algebraic,capitalism,crystals,melodies,polynomial,racecourse,defences,austro,wembley,attracts,anarchist,resurrection,reviewing,decreasing,prefix,ratified,mutation,displaying,separating,restoring,assemblies,ordinance,priesthood,cruisers,appoint,moldova,imports,directive,epidemic,militant,senegal,signaling,restriction,critique,retrospective,nationalists,undertake,sioux,canals,algerian,redesigned,philanthropist,depict,conceptual,turbines,intellectuals,eastward,applicants,contractors,vendors,undergone,namesake,ensured,tones,substituted,hindwings,arrests,tombs,transitional,principality,reelection,taiwanese,cavity,manifesto,broadcasters,spawned,thoroughbred,identities,generators,proposes,hydroelectric,johannesburg,cortex,scandinavian,killings,aggression,boycott,catalyst,physiology,fifteenth,waterfront,chromosome,organist,costly,calculation,cemeteries,flourished,recognise,juniors,merging,disciples,ashore,workplace,enlightenment,diminished,debated,hailed,podium,educate,mandated,distributor,litre,electromagnetic,flotilla,estuary,peterborough,staircase,selections,melodic,confronts,wholesale,integrate,intercepted,catalonia,unite,immense,palatinate,switches,earthquakes,occupational,successors,praising,concluding,faculties,firstly,overhaul,empirical,metacritic,inauguration,evergreen,laden,winged,philosophers,amalgamated,geoff,centimeters,napoleonic,upright,planting,brewing,fined,sensory,migrants,wherein,inactive,headmaster,warwickshire,siberia,terminals,denounced,academia,divinity,bilateral,clive,omitted,peerage,relics,apartheid,syndicate,fearing,fixtures,desirable,dismantled,ethnicity,valves,biodiversity,aquarium,ideological,visibility,creators,analyzed,tenant,balkan,postwar,supplier,smithsonian,risen,morphology,digits,bohemian,wilmington,vishnu,demonstrates,aforementioned,biographical,mapped,khorasan,phosphate,presentations,ecosystem,processors,calculations,mosaic,clashes,penned,recalls,coding,angular,lattice,macau,accountability,extracted,pollen,therapeutic,overlap,violinist,deposed,candidacy,infants,covenant,bacterial,restructuring,dungeons,ordination,conducts,builds,invasive,customary,concurrently,relocation,cello,statutes,borneo,entrepreneurs,sanctions,packet,rockefeller,piedmont,comparisons,waterfall,receptions,glacial,surge,signatures,alterations,advertised,enduring,somali,botanist,100th,canonical,motifs,longitude,circulated,alloy,indirectly,margins,preserves,internally,besieged,shale,peripheral,drained,baseman,reassigned,tobago,soloist,socio,grazing,contexts,roofs,portraying,ottomans,shrewsbury,noteworthy,lamps,supplying,beams,qualifier,portray,greenhouse,stronghold,hitter,rites,cretaceous,urging,derive,nautical,aiming,fortunes,verde,donors,reliance,exceeding,exclusion,exercised,simultaneous,continents,guiding,pillar,gradient,poznan,eruption,clinics,moroccan,indicator,trams,piers,parallels,fragment,teatro,potassium,satire,compressed,businessmen,influx,seine,perspectives,shelters,decreases,mounting,formula_5,confederacy,equestrian,expulsion,mayors,liberia,resisted,affinity,shrub,unexpectedly,stimulus,amtrak,deported,perpendicular,statesman,wharf,storylines,romanesque,weights,surfaced,interceptions,dhaka,crambidae,orchestras,rwanda,conclude,constitutes,subsidiaries,admissions,prospective,shear,bilingual,campaigning,presiding,domination,commemorative,trailing,confiscated,petrol,acquisitions,polymer,onlyinclude,chloride,elevations,resolutions,hurdles,pledged,likelihood,objected,erect,encoding,databases,aristotle,hindus,marshes,bowled,ministerial,grange,acronym,annexation,squads,ambient,pilgrims,botany,sofla,astronomer,planetary,descending,bestowed,ceramics,diplomacy,metabolism,colonization,potomac,africans,engraved,recycling,commitments,resonance,disciplinary,jamaican,narrated,spectral,tipperary,waterford,stationary,arbitration,transparency,threatens,crossroads,slalom,oversee,centenary,incidence,economies,livery,moisture,newsletter,autobiographical,bhutan,propelled,dependence,moderately,adobe,barrels,subdivisions,outlook,labelled,stratford,arising,diaspora,barony,automobiles,ornamental,slated,norms,primetime,generalized,analysts,vectors,libyan,yielded,certificates,rooted,vernacular,belarusian,marketplace,prediction,fairfax,malawi,viruses,wooded,demos,mauritius,prosperous,coincided,liberties,huddersfield,ascent,warnings,hinduism,glucose,pulitzer,unused,filters,illegitimate,acquitted,protestants,canopy,staple,psychedelic,winding,abbas,pathways,cheltenham,lagos,niche,invaders,proponents,barred,conversely,doncaster,recession,embraced,rematch,concession,emigration,upgrades,bowls,tablets,remixed,loops,kensington,shootout,monarchs,organizers,harmful,punjabi,broadband,exempt,neolithic,profiles,portrays,parma,cyrillic,quasi,attested,regimental,revive,torpedoes,heidelberg,rhythms,spherical,denote,hymns,icons,theologian,qaeda,exceptionally,reinstated,comune,playhouse,lobbying,grossing,viceroy,delivers,visually,armistice,utrecht,syllable,vertices,analogous,annex,refurbished,entrants,knighted,disciple,rhetoric,detailing,inactivated,ballads,algae,intensified,favourable,sanitation,receivers,pornography,commemorated,cannons,entrusted,manifold,photographers,pueblo,textiles,steamer,myths,marquess,onward,liturgical,romney,uzbekistan,consistency,denoted,hertfordshire,convex,hearings,sulfur,universidad,podcast,selecting,emperors,arises,justices,1840s,mongolian,exploited,termination,digitally,infectious,sedan,symmetric,penal,illustrate,formulation,attribute,problematic,modular,inverse,berth,searches,rutgers,leicestershire,enthusiasts,lockheed,upwards,transverse,accolades,backward,archaeologists,crusaders,nuremberg,defects,ferries,vogue,containers,openings,transporting,separates,lumpur,purchases,attain,wichita,topology,woodlands,deleted,periodically,syntax,overturned,musicals,corp.,strasbourg,instability,nationale,prevailing,cache,marathi,versailles,unmarried,grains,straits,antagonist,segregation,assistants,d'etat,contention,dictatorship,unpopular,motorcycles,criterion,analytical,salzburg,militants,hanged,worcestershire,emphasize,paralympic,erupted,convinces,offences,oxidation,nouns,populace,atari,spanned,hazardous,educators,playable,births,baha'i,preseason,generates,invites,meteorological,handbook,foothills,enclosure,diffusion,mirza,convergence,geelong,coefficient,connector,formula_6,cylindrical,disasters,pleaded,knoxville,contamination,compose,libertarian,arrondissement,franciscan,intercontinental,susceptible,initiation,malaria,unbeaten,consonants,waived,saloon,popularized,estadio,pseudo,interdisciplinary,transports,transformers,carriages,bombings,revolves,ceded,collaborator,celestial,exemption,colchester,maltese,oceanic,ligue,crete,shareholder,routed,depictions,ridden,advisors,calculate,lending,guangzhou,simplicity,newscast,scheduling,snout,eliot,undertaking,armenians,nottinghamshire,whitish,consulted,deficiency,salle,cinemas,superseded,rigorous,kerman,convened,landowners,modernization,evenings,pitches,conditional,scandinavia,differed,formulated,cyclists,swami,guyana,dunes,electrified,appalachian,abdomen,scenarios,prototypes,sindh,consonant,adaptive,boroughs,wolverhampton,modelling,cylinders,amounted,minimize,ambassadors,lenin,settler,coincide,approximation,grouping,murals,bullying,registers,rumours,engagements,energetic,vertex,annals,bordering,geologic,yellowish,runoff,converts,allegheny,facilitated,saturdays,colliery,monitored,rainforest,interfaces,geographically,impaired,prevalence,joachim,paperback,slowed,shankar,distinguishing,seminal,categorized,authorised,auspices,bandwidth,asserts,rebranded,balkans,supplemented,seldom,weaving,capsule,apostles,populous,monmouth,payload,symphonic,densely,shoreline,managerial,masonry,antioch,averages,textbooks,royalist,coliseum,tandem,brewers,diocesan,posthumous,walled,incorrectly,distributions,ensued,reasonably,graffiti,propagation,automation,harmonic,augmented,middleweight,limbs,elongated,landfall,comparatively,literal,grossed,koppen,wavelength,1830s,cerebral,boasts,congestion,physiological,practitioner,coasts,cartoonist,undisclosed,frontal,launches,burgundy,qualifiers,imposing,stade,flanked,assyrian,raided,multiplayer,montane,chesapeake,pathology,drains,vineyards,intercollegiate,semiconductor,grassland,convey,citations,predominant,rejects,benefited,yahoo,graphs,busiest,encompassing,hamlets,explorers,suppress,minors,graphical,calculus,sediment,intends,diverted,mainline,unopposed,cottages,initiate,alumnus,towed,autism,forums,darlington,modernist,oxfordshire,lectured,capitalist,suppliers,panchayat,actresses,foundry,southbound,commodity,wesleyan,divides,palestinians,luton,caretaker,nobleman,mutiny,organizer,preferences,nomenclature,splits,unwilling,offenders,timor,relying,halftime,semitic,arithmetic,milestone,jesuits,arctiidae,retrieved,consuming,contender,edged,plagued,inclusive,transforming,khmer,federally,insurgents,distributing,amherst,rendition,prosecutors,viaduct,disqualified,kabul,liturgy,prevailed,reelected,instructors,swimmers,aperture,churchyard,interventions,totals,darts,metropolis,fuels,fluent,northbound,correctional,inflicted,barrister,realms,culturally,aristocratic,collaborating,emphasizes,choreographer,inputs,ensembles,humboldt,practised,endowed,strains,infringement,archaeologist,congregational,magna,relativity,efficiently,proliferation,mixtape,abruptly,regeneration,commissioning,yukon,archaic,reluctantly,retailer,northamptonshire,universally,crossings,boilers,nickelodeon,revue,abbreviation,retaliation,scripture,routinely,medicinal,benedictine,kenyan,retention,deteriorated,glaciers,apprenticeship,coupling,researched,topography,entrances,anaheim,pivotal,compensate,arched,modify,reinforce,dusseldorf,journeys,motorsport,conceded,sumatra,spaniards,quantitative,loire,cinematography,discarded,botswana,morale,engined,zionist,philanthropy,sainte,fatalities,cypriot,motorsports,indicators,pricing,institut,bethlehem,implicated,gravitational,differentiation,rotor,thriving,precedent,ambiguous,concessions,forecast,conserved,fremantle,asphalt,landslide,middlesbrough,formula_7,humidity,overseeing,chronological,diaries,multinational,crimean,turnover,improvised,youths,declares,tasmanian,canadiens,fumble,refinery,weekdays,unconstitutional,upward,guardians,brownish,imminent,hamas,endorsement,naturalist,martyrs,caledonia,chords,yeshiva,reptiles,severity,mitsubishi,fairs,installment,substitution,repertory,keyboardist,interpreter,silesia,noticeable,rhineland,transmit,inconsistent,booklet,academies,epithet,pertaining,progressively,aquatics,scrutiny,prefect,toxicity,rugged,consume,o'donnell,evolve,uniquely,cabaret,mediated,landowner,transgender,palazzo,compilations,albuquerque,induce,sinai,remastered,efficacy,underside,analogue,specify,possessing,advocating,compatibility,liberated,greenville,mecklenburg,header,memorials,sewage,rhodesia,1800s,salaries,atoll,coordinating,partisans,repealed,amidst,subjective,optimization,nectar,evolving,exploits,madhya,styling,accumulation,raion,postage,responds,buccaneers,frontman,brunei,choreography,coated,kinetic,sampled,inflammatory,complementary,eclectic,norte,vijay,a.k.a,mainz,casualty,connectivity,laureate,franchises,yiddish,reputed,unpublished,economical,periodicals,vertically,bicycles,brethren,capacities,unitary,archeological,tehsil,domesday,wehrmacht,justification,angered,mysore,fielded,abuses,nutrients,ambitions,taluk,battleships,symbolism,superiority,neglect,attendees,commentaries,collaborators,predictions,yorker,breeders,investing,libretto,informally,coefficients,memorandum,pounder,collingwood,tightly,envisioned,arbor,mistakenly,captures,nesting,conflicting,enhancing,streetcar,manufactures,buckinghamshire,rewards,commemorating,stony,expenditure,tornadoes,semantic,relocate,weimar,iberian,sighted,intending,ensign,beverages,expectation,differentiate,centro,utilizes,saxophonist,catchment,transylvania,ecosystems,shortest,sediments,socialists,ineffective,kapoor,formidable,heroine,guantanamo,prepares,scattering,pamphlet,verified,elector,barons,totaling,shrubs,pyrenees,amalgamation,mutually,longitudinal,comte,negatively,masonic,envoy,sexes,akbar,mythical,tonga,bishopric,assessments,malaya,warns,interiors,reefs,reflections,neutrality,musically,nomadic,waterways,provence,collaborate,scaled,adulthood,emerges,euros,optics,incentives,overland,periodical,liege,awarding,realization,slang,affirmed,schooner,hokkaido,czechoslovak,protectorate,undrafted,disagreed,commencement,electors,spruce,swindon,fueled,equatorial,inventions,suites,slovene,backdrop,adjunct,energies,remnant,inhabit,alliances,simulcast,reactors,mosques,travellers,outfielder,plumage,migratory,benin,experimented,fibre,projecting,drafting,laude,evidenced,northernmost,indicted,directional,replication,croydon,comedies,jailed,organizes,devotees,reservoirs,turrets,originate,economists,songwriters,junta,trenches,mounds,proportions,comedic,apostle,azerbaijani,farmhouse,resembled,disrupted,playback,mixes,diagonal,relevance,govern,programmer,gdansk,maize,soundtracks,tendencies,mastered,impacted,believers,kilometre,intervene,chairperson,aerodrome,sails,subsidies,ensures,aesthetics,congresses,ratios,sardinia,southernmost,functioned,controllers,downward,randomly,distortion,regents,palatine,disruption,spirituality,vidhan,tracts,compiler,ventilation,anchorage,symposium,assert,pistols,excelled,avenues,convoys,moniker,constructions,proponent,phased,spines,organising,schleswig,policing,campeonato,mined,hourly,croix,lucrative,authenticity,haitian,stimulation,burkina,espionage,midfield,manually,staffed,awakening,metabolic,biographies,entrepreneurship,conspicuous,guangdong,preface,subgroup,mythological,adjutant,feminism,vilnius,oversees,honourable,tripoli,stylized,kinase,societe,notoriety,altitudes,configurations,outward,transmissions,announces,auditor,ethanol,clube,nanjing,mecca,haifa,blogs,postmaster,paramilitary,depart,positioning,potent,recognizable,spire,brackets,remembrance,overlapping,turkic,articulated,scientology,operatic,deploy,readiness,biotechnology,restrict,cinematographer,inverted,synonymous,administratively,westphalia,commodities,replaces,downloads,centralized,munitions,preached,sichuan,fashionable,implementations,matrices,hiv/aids,loyalist,luzon,celebrates,hazards,heiress,mercenaries,synonym,creole,ljubljana,technician,auditioned,technicians,viewpoint,wetland,mongols,princely,sharif,coating,dynasties,southward,doubling,formula_8,mayoral,harvesting,conjecture,goaltender,oceania,spokane,welterweight,bracket,gatherings,weighted,newscasts,mussolini,affiliations,disadvantage,vibrant,spheres,sultanate,distributors,disliked,establishes,marches,drastically,yielding,jewellery,yokohama,vascular,airlift,canons,subcommittee,repression,strengths,graded,outspoken,fused,pembroke,filmography,redundant,fatigue,repeal,threads,reissue,pennant,edible,vapor,corrections,stimuli,commemoration,dictator,anand,secession,amassed,orchards,pontifical,experimentation,greeted,bangor,forwards,decomposition,quran,trolley,chesterfield,traverse,sermons,burials,skier,climbs,consultants,petitioned,reproduce,parted,illuminated,kurdistan,reigned,occupants,packaged,geometridae,woven,regulating,protagonists,crafted,affluent,clergyman,consoles,migrant,supremacy,attackers,caliph,defect,convection,rallies,huron,resin,segunda,quota,warship,overseen,criticizing,shrines,glamorgan,lowering,beaux,hampered,invasions,conductors,collects,bluegrass,surrounds,substrates,perpetual,chronology,pulmonary,executions,crimea,compiling,noctuidae,battled,tumors,minsk,novgorod,serviced,yeast,computation,swamps,theodor,baronetcy,salford,uruguayan,shortages,odisha,siberian,novelty,cinematic,invitational,decks,dowager,oppression,bandits,appellate,state-of-the-art,clade,palaces,signalling,galaxies,industrialist,tensor,learnt,incurred,magistrates,binds,orbits,ciudad,willingness,peninsular,basins,biomedical,shafts,marlborough,bournemouth,withstand,fitzroy,dunedin,variance,steamship,integrating,muscular,fines,akron,bulbophyllum,malmo,disclosed,cornerstone,runways,medicines,twenty20,gettysburg,progresses,frigates,bodied,transformations,transforms,helens,modelled,versatile,regulator,pursuits,legitimacy,amplifier,scriptures,voyages,examines,presenters,octagonal,poultry,formula_9,anatolia,computed,migrate,directorial,hybrids,localized,preferring,guggenheim,persisted,grassroots,inflammation,fishery,otago,vigorous,professions,instructional,inexpensive,insurgency,legislators,sequels,surnames,agrarian,stainless,nairobi,minas,forerunner,aristocracy,transitions,sicilian,showcased,doses,hiroshima,summarized,gearbox,emancipation,limitation,nuclei,seismic,abandonment,dominating,appropriations,occupations,electrification,hilly,contracting,exaggerated,entertainer,kazan,oricon,cartridges,characterization,parcel,maharaja,exceeds,aspiring,obituary,flattened,contrasted,narration,replies,oblique,outpost,fronts,arranger,talmud,keynes,doctrines,endured,confesses,fortification,supervisors,kilometer,academie,jammu,bathurst,piracy,prostitutes,navarre,cumulative,cruises,lifeboat,twinned,radicals,interacting,expenditures,wexford,libre,futsal,curated,clockwise,colloquially,procurement,immaculate,lyricist,enhancement,porcelain,alzheimer,highlighting,judah,disagreements,storytelling,sheltered,wroclaw,vaudeville,contrasts,neoclassical,compares,contrasting,deciduous,francaise,descriptive,cyclic,reactive,antiquities,meiji,repeats,creditors,forcibly,newmarket,picturesque,impending,uneven,bison,raceway,solvent,ecumenical,optic,professorship,harvested,waterway,banjo,pharaoh,geologist,scanning,dissent,recycled,unmanned,retreating,gospels,aqueduct,branched,tallinn,groundbreaking,syllables,hangar,designations,procedural,craters,cabins,encryption,anthropologist,montevideo,outgoing,inverness,chattanooga,fascism,calais,chapels,groundwater,downfall,misleading,robotic,tortricidae,pixel,handel,prohibit,crewe,renaming,reprised,kickoff,leftist,spaced,integers,causeway,pines,authorship,organise,ptolemy,accessibility,virtues,lesions,iroquois,qur'an,atheist,synthesized,biennial,confederates,dietary,skaters,stresses,tariff,koreans,intercity,republics,quintet,baroness,naive,amplitude,insistence,tbilisi,residues,grammatical,diversified,egyptians,accompaniment,vibration,repository,mandal,topological,distinctions,coherent,invariant,batters,nuevo,internationals,implements,follower,bahia,widened,independents,cantonese,totaled,guadalajara,wolverines,befriended,muzzle,surveying,hungarians,medici,deportation,rayon,approx,recounts,attends,clerical,hellenic,furnished,alleging,soluble,systemic,gallantry,bolshevik,intervened,hostel,gunpowder,specialising,stimulate,leiden,removes,thematic,floral,bafta,printers,conglomerate,eroded,analytic,successively,lehigh,thessaloniki,kilda,clauses,ascended,nehru,scripted,tokugawa,competence,diplomats,exclude,consecration,freedoms,assaults,revisions,blacksmith,textual,sparse,concacaf,slain,uploaded,enraged,whaling,guise,stadiums,debuting,dormitory,cardiovascular,yunnan,dioceses,consultancy,notions,lordship,archdeacon,collided,medial,airfields,garment,wrestled,adriatic,reversal,refueling,verification,jakob,horseshoe,intricate,veracruz,sarawak,syndication,synthesizer,anthologies,stature,feasibility,guillaume,narratives,publicized,antrim,intermittent,constituents,grimsby,filmmaking,doping,unlawful,nominally,transmitting,documenting,seater,internationale,ejected,steamboat,alsace,boise,ineligible,geared,vassal,mustered,ville,inline,pairing,eurasian,kyrgyzstan,barnsley,reprise,stereotypes,rushes,conform,firefighters,deportivo,revolutionaries,rabbis,concurrency,charters,sustaining,aspirations,algiers,chichester,falkland,morphological,systematically,volcanoes,designate,artworks,reclaimed,jurist,anglia,resurrected,chaotic,feasible,circulating,simulated,environmentally,confinement,adventist,harrisburg,laborers,ostensibly,universiade,pensions,influenza,bratislava,octave,refurbishment,gothenburg,putin,barangay,annapolis,breaststroke,illustrates,distorted,choreographed,promo,emphasizing,stakeholders,descends,exhibiting,intrinsic,invertebrates,evenly,roundabout,salts,formula_10,strata,inhibition,branching,stylistic,rumored,realises,mitochondrial,commuted,adherents,logos,bloomberg,telenovela,guineas,charcoal,engages,winery,reflective,siena,cambridgeshire,ventral,flashback,installing,engraving,grasses,traveller,rotated,proprietor,nationalities,precedence,sourced,trainers,cambodian,reductions,depleted,saharan,classifications,biochemistry,plaintiffs,arboretum,humanist,fictitious,aleppo,climates,bazaar,his/her,homogeneous,multiplication,moines,indexed,linguist,skeletal,foliage,societal,differentiated,informing,mammal,infancy,archival,cafes,malls,graeme,musee,schizophrenia,fargo,pronouns,derivation,descend,ascending,terminating,deviation,recaptured,confessions,weakening,tajikistan,bahadur,pasture,b/hip,donegal,supervising,sikhs,thinkers,euclidean,reinforcement,friars,portage,fuscous,lucknow,synchronized,assertion,choirs,privatization,corrosion,multitude,skyscraper,royalties,ligament,usable,spores,directs,clashed,stockport,fronted,dependency,contiguous,biologist,backstroke,powerhouse,frescoes,phylogenetic,welding,kildare,gabon,conveyed,augsburg,severn,continuum,sahib,lille,injuring,passeriformesfamily,succeeds,translating,unitarian,startup,turbulent,outlying,philanthropic,stanislaw,idols,claremont,conical,haryana,armagh,blended,implicit,conditioned,modulation,rochdale,labourers,coinage,shortstop,potsdam,gears,obesity,bestseller,advisers,bouts,comedians,jozef,lausanne,taxonomic,correlated,columbian,marne,indications,psychologists,libel,edict,beaufort,disadvantages,renal,finalized,racehorse,unconventional,disturbances,falsely,zoology,adorned,redesign,executing,narrower,commended,appliances,stalls,resurgence,saskatoon,miscellaneous,permitting,epoch,formula_11,cumbria,forefront,vedic,eastenders,disposed,supermarkets,rower,inhibitor,magnesium,colourful,yusuf,harrow,formulas,centrally,balancing,ionic,nocturnal,consolidate,ornate,raiding,charismatic,accelerate,nominate,residual,dhabi,commemorates,attribution,uninhabited,mindanao,atrocities,genealogical,romani,applicant,enactment,abstraction,trough,pulpit,minuscule,misconduct,grenades,timely,supplements,messaging,curvature,ceasefire,telangana,susquehanna,braking,redistribution,shreveport,neighbourhoods,gregorian,widowed,khuzestan,empowerment,scholastic,evangelist,peptide,topical,theorist,historia,thence,sudanese,museo,jurisprudence,masurian,frankish,headlined,recounted,netball,petitions,tolerant,hectare,truncated,southend,methane,captives,reigns,massif,subunit,acidic,weightlifting,footballers,sabah,britannia,tunisian,segregated,sawmill,withdrawing,unpaid,weaponry,somme,perceptions,unicode,alcoholism,durban,wrought,waterfalls,jihad,auschwitz,upland,eastbound,adjective,anhalt,evaluating,regimes,guildford,reproduced,pamphlets,hierarchical,maneuvers,hanoi,fabricated,repetition,enriched,arterial,replacements,tides,globalization,adequately,westbound,satisfactory,fleets,phosphorus,lastly,neuroscience,anchors,xinjiang,membranes,improvisation,shipments,orthodoxy,submissions,bolivian,mahmud,ramps,leyte,pastures,outlines,flees,transmitters,fares,sequential,stimulated,novice,alternately,symmetrical,breakaway,layered,baronets,lizards,blackish,edouard,horsepower,penang,principals,mercantile,maldives,overwhelmingly,hawke,rallied,prostate,conscription,juveniles,maccabi,carvings,strikers,sudbury,spurred,improves,lombardy,macquarie,parisian,elastic,distillery,shetland,humane,brentford,wrexham,warehouses,routines,encompassed,introductory,isfahan,instituto,palais,revolutions,sporadic,impoverished,portico,fellowships,speculative,enroll,dormant,adhere,fundamentally,sculpted,meritorious,template,upgrading,reformer,rectory,uncredited,indicative,creeks,galveston,radically,hezbollah,firearm,educating,prohibits,trondheim,locus,refit,headwaters,screenings,lowlands,wasps,coarse,attaining,sedimentary,perished,pitchfork,interned,cerro,stagecoach,aeronautical,liter,transitioned,haydn,inaccurate,legislatures,bromwich,knesset,spectroscopy,butte,asiatic,degraded,concordia,catastrophic,lobes,wellness,pensacola,periphery,hapoel,theta,horizontally,freiburg,liberalism,pleas,durable,warmian,offenses,mesopotamia,shandong,unsuitable,hospitalized,appropriately,phonetic,encompass,conversions,observes,illnesses,breakout,assigns,crowns,inhibitors,nightly,manifestation,fountains,maximize,alphabetical,sloop,expands,newtown,widening,gaddafi,commencing,camouflage,footprint,tyrol,barangays,universite,highlanders,budgets,query,lobbied,westchester,equator,stipulated,pointe,distinguishes,allotted,embankment,advises,storing,loyalists,fourier,rehearsals,starvation,gland,rihanna,tubular,expressive,baccalaureate,intersections,revered,carbonate,eritrea,craftsmen,cosmopolitan,sequencing,corridors,shortlisted,bangladeshi,persians,mimic,parades,repetitive,recommends,flanks,promoters,incompatible,teaming,ammonia,greyhound,solos,improper,legislator,newsweek,recurrent,vitro,cavendish,eireann,crises,prophets,mandir,strategically,guerrillas,formula_12,ghent,contenders,equivalence,drone,sociological,hamid,castes,statehood,aland,clinched,relaunched,tariffs,simulations,williamsburg,rotate,mediation,smallpox,harmonica,lodges,lavish,restrictive,o'sullivan,detainees,polynomials,echoes,intersecting,learners,elects,charlemagne,defiance,epsom,liszt,facilitating,absorbing,revelations,padua,pieter,pious,penultimate,mammalian,montenegrin,supplementary,widows,aromatic,croats,roanoke,trieste,legions,subdistrict,babylonian,grasslands,volga,violently,sparsely,oldies,telecommunication,respondents,quarries,downloadable,commandos,taxpayer,catalytic,malabar,afforded,copying,declines,nawab,junctions,assessing,filtering,classed,disused,compliant,christoph,gottingen,civilizations,hermitage,caledonian,whereupon,ethnically,springsteen,mobilization,terraces,indus,excel,zoological,enrichment,simulate,guitarists,registrar,cappella,invoked,reused,manchu,configured,uppsala,genealogy,mergers,casts,curricular,rebelled,subcontinent,horticultural,parramatta,orchestrated,dockyard,claudius,decca,prohibiting,turkmenistan,brahmin,clandestine,obligatory,elaborated,parasitic,helix,constraint,spearheaded,rotherham,eviction,adapting,albans,rescues,sociologist,guiana,convicts,occurrences,kamen,antennas,asturias,wheeled,sanitary,deterioration,trier,theorists,baseline,announcements,valea,planners,factual,serialized,serials,bilbao,demoted,fission,jamestown,cholera,alleviate,alteration,indefinite,sulfate,paced,climatic,valuation,artisans,proficiency,aegean,regulators,fledgling,sealing,influencing,servicemen,frequented,cancers,tambon,narayan,bankers,clarified,embodied,engraver,reorganisation,dissatisfied,dictated,supplemental,temperance,ratification,puget,nutrient,pretoria,papyrus,uniting,ascribed,cores,coptic,schoolhouse,barrio,1910s,armory,defected,transatlantic,regulates,ported,artefacts,specifies,boasted,scorers,mollusks,emitted,navigable,quakers,projective,dialogues,reunification,exponential,vastly,banners,unsigned,dissipated,halves,coincidentally,leasing,purported,escorting,estimation,foxes,lifespan,inflorescence,assimilation,showdown,staunch,prologue,ligand,superliga,telescopes,northwards,keynote,heaviest,taunton,redeveloped,vocalists,podlaskie,soyuz,rodents,azores,moravian,outset,parentheses,apparel,domestically,authoritative,polymers,monterrey,inhibit,launcher,jordanian,folds,taxis,mandates,singled,liechtenstein,subsistence,marxism,ousted,governorship,servicing,offseason,modernism,prism,devout,translators,islamist,chromosomes,pitted,bedfordshire,fabrication,authoritarian,javanese,leaflets,transient,substantive,predatory,sigismund,assassinate,diagrams,arrays,rediscovered,reclamation,spawning,fjord,peacekeeping,strands,fabrics,highs,regulars,tirana,ultraviolet,athenian,filly,barnet,naacp,nueva,favourites,terminates,showcases,clones,inherently,interpreting,bjorn,finely,lauded,unspecified,chola,pleistocene,insulation,antilles,donetsk,funnel,nutritional,biennale,reactivated,southport,primate,cavaliers,austrians,interspersed,restarted,suriname,amplifiers,wladyslaw,blockbuster,sportsman,minogue,brightness,benches,bridgeport,initiating,israelis,orbiting,newcomers,externally,scaling,transcribed,impairment,luxurious,longevity,impetus,temperament,ceilings,tchaikovsky,spreads,pantheon,bureaucracy,1820s,heraldic,villas,formula_13,galician,meath,avoidance,corresponded,headlining,connacht,seekers,rappers,solids,monograph,scoreless,opole,isotopes,himalayas,parodies,garments,microscopic,republished,havilland,orkney,demonstrators,pathogen,saturated,hellenistic,facilitates,aerodynamic,relocating,indochina,laval,astronomers,bequeathed,administrations,extracts,nagoya,torquay,demography,medicare,ambiguity,renumbered,pursuant,concave,syriac,electrode,dispersal,henan,bialystok,walsall,crystalline,puebla,janata,illumination,tianjin,enslaved,coloration,championed,defamation,grille,johor,rejoin,caspian,fatally,planck,workings,appointing,institutionalized,wessex,modernized,exemplified,regatta,jacobite,parochial,programmers,blending,eruptions,insurrection,regression,indices,sited,dentistry,mobilized,furnishings,levant,primaries,ardent,nagasaki,conqueror,dorchester,opined,heartland,amman,mortally,wellesley,bowlers,outputs,coveted,orthography,immersion,disrepair,disadvantaged,curate,childless,condensed,codice_1,remodeled,resultant,bolsheviks,superfamily,saxons,2010s,contractual,rivalries,malacca,oaxaca,magnate,vertebrae,quezon,olympiad,yucatan,tyres,macro,specialization,commendation,caliphate,gunnery,exiles,excerpts,fraudulent,adjustable,aramaic,interceptor,drumming,standardization,reciprocal,adolescents,federalist,aeronautics,favorably,enforcing,reintroduced,zhejiang,refining,biplane,banknotes,accordion,intersect,illustrating,summits,classmate,militias,biomass,massacres,epidemiology,reworked,wrestlemania,nantes,auditory,taxon,elliptical,chemotherapy,asserting,avoids,proficient,airmen,yellowstone,multicultural,alloys,utilization,seniority,kuyavian,huntsville,orthogonal,bloomington,cultivars,casimir,internment,repulsed,impedance,revolving,fermentation,parana,shutout,partnering,empowered,islamabad,polled,classify,amphibians,greyish,obedience,4x100,projectile,khyber,halfback,relational,d'ivoire,synonyms,endeavour,padma,customized,mastery,defenceman,berber,purge,interestingly,covent,promulgated,restricting,condemnation,hillsborough,walkers,privateer,intra,captaincy,naturalized,huffington,detecting,hinted,migrating,bayou,counterattack,anatomical,foraging,unsafe,swiftly,outdated,paraguayan,attire,masjid,endeavors,jerseys,triassic,quechua,growers,axial,accumulate,wastewater,cognition,fungal,animator,pagoda,kochi,uniformly,antibody,yerevan,hypotheses,combatants,italianate,draining,fragmentation,snowfall,formative,inversion,kitchener,identifier,additive,lucha,selects,ashland,cambrian,racetrack,trapping,congenital,primates,wavelengths,expansions,yeomanry,harcourt,wealthiest,awaited,punta,intervening,aggressively,vichy,piloted,midtown,tailored,heyday,metadata,guadalcanal,inorganic,hadith,pulses,francais,tangent,scandals,erroneously,tractors,pigment,constabulary,jiangsu,landfill,merton,basalt,astor,forbade,debuts,collisions,exchequer,stadion,roofed,flavour,sculptors,conservancy,dissemination,electrically,undeveloped,existent,surpassing,pentecostal,manifested,amend,formula_14,superhuman,barges,tunis,analytics,argyll,liquids,mechanized,domes,mansions,himalayan,indexing,reuters,nonlinear,purification,exiting,timbers,triangles,decommissioning,departmental,causal,fonts,americana,sept.,seasonally,incomes,razavi,sheds,memorabilia,rotational,terre,sutra,protege,yarmouth,grandmaster,annum,looted,imperialism,variability,liquidation,baptised,isotope,showcasing,milling,rationale,hammersmith,austen,streamlined,acknowledging,contentious,qaleh,breadth,turing,referees,feral,toulon,unofficially,identifiable,standout,labeling,dissatisfaction,jurgen,angrily,featherweight,cantons,constrained,dominates,standalone,relinquished,theologians,markedly,italics,downed,nitrate,likened,gules,craftsman,singaporean,pixels,mandela,moray,parity,departement,antigen,academically,burgh,brahma,arranges,wounding,triathlon,nouveau,vanuatu,banded,acknowledges,unearthed,stemming,authentication,byzantines,converge,nepali,commonplace,deteriorating,recalling,palette,mathematicians,greenish,pictorial,ahmedabad,rouen,validation,u.s.a.,'best,malvern,archers,converter,undergoes,fluorescent,logistical,notification,transvaal,illicit,symphonies,stabilization,worsened,fukuoka,decrees,enthusiast,seychelles,blogger,louvre,dignitaries,burundi,wreckage,signage,pinyin,bursts,federer,polarization,urbana,lazio,schism,nietzsche,venerable,administers,seton,kilograms,invariably,kathmandu,farmed,disqualification,earldom,appropriated,fluctuations,kermanshah,deployments,deformation,wheelbase,maratha,psalm,bytes,methyl,engravings,skirmish,fayette,vaccines,ideally,astrology,breweries,botanic,opposes,harmonies,irregularities,contended,gaulle,prowess,constants,aground,filipinos,fresco,ochreous,jaipur,willamette,quercus,eastwards,mortars,champaign,braille,reforming,horned,hunan,spacious,agitation,draught,specialties,flourishing,greensboro,necessitated,swedes,elemental,whorls,hugely,structurally,plurality,synthesizers,embassies,assad,contradictory,inference,discontent,recreated,inspectors,unicef,commuters,embryo,modifying,stints,numerals,communicated,boosted,trumpeter,brightly,adherence,remade,leases,restrained,eucalyptus,dwellers,planar,grooves,gainesville,daimler,anzac,szczecin,cornerback,prized,peking,mauritania,khalifa,motorized,lodging,instrumentalist,fortresses,cervical,formula_15,passerine,sectarian,researches,apprenticed,reliefs,disclose,gliding,repairing,queue,kyushu,literate,canoeing,sacrament,separatist,calabria,parkland,flowed,investigates,statistically,visionary,commits,dragoons,scrolls,premieres,revisited,subdued,censored,patterned,elective,outlawed,orphaned,leyland,richly,fujian,miniatures,heresy,plaques,countered,nonfiction,exponent,moravia,dispersion,marylebone,midwestern,enclave,ithaca,federated,electronically,handheld,microscopy,tolls,arrivals,climbers,continual,cossacks,moselle,deserts,ubiquitous,gables,forecasts,deforestation,vertebrates,flanking,drilled,superstructure,inspected,consultative,bypassed,ballast,subsidy,socioeconomic,relic,grenada,journalistic,administering,accommodated,collapses,appropriation,reclassified,foreword,porte,assimilated,observance,fragmented,arundel,thuringia,gonzaga,shenzhen,shipyards,sectional,ayrshire,sloping,dependencies,promenade,ecuadorian,mangrove,constructs,goalscorer,heroism,iteration,transistor,omnibus,hampstead,cochin,overshadowed,chieftain,scalar,finishers,ghanaian,abnormalities,monoplane,encyclopaedia,characterize,travancore,baronetage,bearers,biking,distributes,paving,christened,inspections,banco,humber,corinth,quadratic,albanians,lineages,majored,roadside,inaccessible,inclination,darmstadt,fianna,epilepsy,propellers,papacy,montagu,bhutto,sugarcane,optimized,pilasters,contend,batsmen,brabant,housemates,sligo,ascot,aquinas,supervisory,accorded,gerais,echoed,nunavut,conservatoire,carniola,quartermaster,gminas,impeachment,aquitaine,reformers,quarterfinal,karlsruhe,accelerator,coeducational,archduke,gelechiidae,seaplane,dissident,frenchman,palau,depots,hardcover,aachen,darreh,denominational,groningen,parcels,reluctance,drafts,elliptic,counters,decreed,airship,devotional,contradiction,formula_16,undergraduates,qualitative,guatemalan,slavs,southland,blackhawks,detrimental,abolish,chechen,manifestations,arthritis,perch,fated,hebei,peshawar,palin,immensely,havre,totalling,rampant,ferns,concourse,triples,elites,olympian,larva,herds,lipid,karabakh,distal,monotypic,vojvodina,batavia,multiplied,spacing,spellings,pedestrians,parchment,glossy,industrialization,dehydrogenase,patriotism,abolitionist,mentoring,elizabethan,figurative,dysfunction,abyss,constantin,middletown,stigma,mondays,gambia,gaius,israelites,renounced,nepalese,overcoming,buren,sulphur,divergence,predation,looting,iberia,futuristic,shelved,anthropological,innsbruck,escalated,clermont,entrepreneurial,benchmark,mechanically,detachments,populist,apocalyptic,exited,embryonic,stanza,readership,chiba,landlords,expansive,boniface,therapies,perpetrators,whitehall,kassel,masts,carriageway,clinch,pathogens,mazandaran,undesirable,teutonic,miocene,nagpur,juris,cantata,compile,diffuse,dynastic,reopening,comptroller,o'neal,flourish,electing,scientifically,departs,welded,modal,cosmology,fukushima,libertadores,chang'an,asean,generalization,localization,afrikaans,cricketers,accompanies,emigrants,esoteric,southwards,shutdown,prequel,fittings,innate,wrongly,equitable,dictionaries,senatorial,bipolar,flashbacks,semitism,walkway,lyrically,legality,sorbonne,vigorously,durga,samoan,karel,interchanges,patna,decider,registering,electrodes,anarchists,excursion,overthrown,gilan,recited,michelangelo,advertiser,kinship,taboo,cessation,formula_17,premiers,traversed,madurai,poorest,torneo,exerted,replicate,spelt,sporadically,horde,landscaping,razed,hindered,esperanto,manchuria,propellant,jalan,baha'is,sikkim,linguists,pandit,racially,ligands,dowry,francophone,escarpment,behest,magdeburg,mainstay,villiers,yangtze,grupo,conspirators,martyrdom,noticeably,lexical,kazakh,unrestricted,utilised,sired,inhabits,proofs,joseon,pliny,minted,buddhists,cultivate,interconnected,reuse,viability,australasian,derelict,resolving,overlooks,menon,stewardship,playwrights,thwarted,filmfare,disarmament,protections,bundles,sidelined,hypothesized,singer/songwriter,forage,netted,chancery,townshend,restructured,quotation,hyperbolic,succumbed,parliaments,shenandoah,apical,kibbutz,storeys,pastors,lettering,ukrainians,hardships,chihuahua,avail,aisles,taluka,antisemitism,assent,ventured,banksia,seamen,hospice,faroe,fearful,woreda,outfield,chlorine,transformer,tatar,panoramic,pendulum,haarlem,styria,cornice,importing,catalyzes,subunits,enamel,bakersfield,realignment,sorties,subordinates,deanery,townland,gunmen,tutelage,evaluations,allahabad,thrace,veneto,mennonite,sharia,subgenus,satisfies,puritan,unequal,gastrointestinal,ordinances,bacterium,horticulture,argonauts,adjectives,arable,duets,visualization,woolwich,revamped,euroleague,thorax,completes,originality,vasco,freighter,sardar,oratory,sects,extremes,signatories,exporting,arisen,exacerbated,departures,saipan,furlongs,d'italia,goring,dakar,conquests,docked,offshoot,okrug,referencing,disperse,netting,summed,rewritten,articulation,humanoid,spindle,competitiveness,preventive,facades,westinghouse,wycombe,synthase,emulate,fostering,abdel,hexagonal,myriad,caters,arjun,dismay,axiom,psychotherapy,colloquial,complemented,martinique,fractures,culmination,erstwhile,atrium,electronica,anarchism,nadal,montpellier,algebras,submitting,adopts,stemmed,overcame,internacional,asymmetric,gallipoli,gliders,flushing,extermination,hartlepool,tesla,interwar,patriarchal,hitherto,ganges,combatant,marred,philology,glastonbury,reversible,isthmus,undermined,southwark,gateshead,andalusia,remedies,hastily,optimum,smartphone,evade,patrolled,beheaded,dopamine,waivers,ugandan,gujarati,densities,predicting,intestinal,tentative,interstellar,kolonia,soloists,penetrated,rebellions,qeshlaq,prospered,colegio,deficits,konigsberg,deficient,accessing,relays,kurds,politburo,codified,incarnations,occupancy,cossack,metaphysical,deprivation,chopra,piccadilly,formula_18,makeshift,protestantism,alaskan,frontiers,faiths,tendon,dunkirk,durability,autobots,bonuses,coinciding,emails,gunboat,stucco,magma,neutrons,vizier,subscriptions,visuals,envisaged,carpets,smoky,schema,parliamentarian,immersed,domesticated,parishioners,flinders,diminutive,mahabharata,ballarat,falmouth,vacancies,gilded,twigs,mastering,clerics,dalmatia,islington,slogans,compressor,iconography,congolese,sanction,blends,bulgarians,moderator,outflow,textures,safeguard,trafalgar,tramways,skopje,colonialism,chimneys,jazeera,organisers,denoting,motivations,ganga,longstanding,deficiencies,gwynedd,palladium,holistic,fascia,preachers,embargo,sidings,busan,ignited,artificially,clearwater,cemented,northerly,salim,equivalents,crustaceans,oberliga,quadrangle,historiography,romanians,vaults,fiercely,incidental,peacetime,tonal,bhopal,oskar,radha,pesticides,timeslot,westerly,cathedrals,roadways,aldershot,connectors,brahmins,paler,aqueous,gustave,chromatic,linkage,lothian,specialises,aggregation,tributes,insurgent,enact,hampden,ghulam,federations,instigated,lyceum,fredrik,chairmanship,floated,consequent,antagonists,intimidation,patriarchate,warbler,heraldry,entrenched,expectancy,habitation,partitions,widest,launchers,nascent,ethos,wurzburg,lycee,chittagong,mahatma,merseyside,asteroids,yokosuka,cooperatives,quorum,redistricting,bureaucratic,yachts,deploying,rustic,phonology,chorale,cellist,stochastic,crucifixion,surmounted,confucian,portfolios,geothermal,crested,calibre,tropics,deferred,nasir,iqbal,persistence,essayist,chengdu,aborigines,fayetteville,bastion,interchangeable,burlesque,kilmarnock,specificity,tankers,colonels,fijian,quotations,enquiry,quito,palmerston,delle,multidisciplinary,polynesian,iodine,antennae,emphasised,manganese,baptists,galilee,jutland,latent,excursions,skepticism,tectonic,precursors,negligible,musique,misuse,vitoria,expressly,veneration,sulawesi,footed,mubarak,chongqing,chemically,midday,ravaged,facets,varma,yeovil,ethnographic,discounted,physicists,attache,disbanding,essen,shogunate,cooperated,waikato,realising,motherwell,pharmacology,sulfide,inward,expatriate,devoid,cultivar,monde,andean,groupings,goran,unaffected,moldovan,postdoctoral,coleophora,delegated,pronoun,conductivity,coleridge,disapproval,reappeared,microbial,campground,olsztyn,fostered,vaccination,rabbinical,champlain,milestones,viewership,caterpillar,effected,eupithecia,financier,inferred,uzbek,bundled,bandar,balochistan,mysticism,biosphere,holotype,symbolizes,lovecraft,photons,abkhazia,swaziland,subgroups,measurable,falkirk,valparaiso,ashok,discriminatory,rarity,tabernacle,flyweight,jalisco,westernmost,antiquarian,extracellular,margrave,colspan=9,midsummer,digestive,reversing,burgeoning,substitutes,medallist,khrushchev,guerre,folio,detonated,partido,plentiful,aggregator,medallion,infiltration,shaded,santander,fared,auctioned,permian,ramakrishna,andorra,mentors,diffraction,bukit,potentials,translucent,feminists,tiers,protracted,coburg,wreath,guelph,adventurer,he/she,vertebrate,pipelines,celsius,outbreaks,australasia,deccan,garibaldi,unionists,buildup,biochemical,reconstruct,boulders,stringent,barbed,wording,furnaces,pests,befriends,organises,popes,rizal,tentacles,cadre,tallahassee,punishments,occidental,formatted,mitigation,rulings,rubens,cascades,inducing,choctaw,volta,synagogues,movable,altarpiece,mitigate,practise,intermittently,encountering,memberships,earns,signify,retractable,amounting,pragmatic,wilfrid,dissenting,divergent,kanji,reconstituted,devonian,constitutions,levied,hendrik,starch,costal,honduran,ditches,polygon,eindhoven,superstars,salient,argus,punitive,purana,alluvial,flaps,inefficient,retracted,advantageous,quang,andersson,danville,binghamton,symbolize,conclave,shaanxi,silica,interpersonal,adept,frans,pavilions,lubbock,equip,sunken,limburg,activates,prosecutions,corinthian,venerated,shootings,retreats,parapet,orissa,riviere,animations,parodied,offline,metaphysics,bluffs,plume,piety,fruition,subsidized,steeplechase,shanxi,eurasia,angled,forecasting,suffragan,ashram,larval,labyrinth,chronicler,summaries,trailed,merges,thunderstorms,filtered,formula_19,advertisers,alpes,informatics,parti,constituting,undisputed,certifications,javascript,molten,sclerosis,rumoured,boulogne,hmong,lewes,breslau,notts,bantu,ducal,messengers,radars,nightclubs,bantamweight,carnatic,kaunas,fraternal,triggering,controversially,londonderry,visas,scarcity,offaly,uprisings,repelled,corinthians,pretext,kuomintang,kielce,empties,matriculated,pneumatic,expos,agile,treatises,midpoint,prehistory,oncology,subsets,hydra,hypertension,axioms,wabash,reiterated,swapped,achieves,premio,ageing,overture,curricula,challengers,subic,selangor,liners,frontline,shutter,validated,normalized,entertainers,molluscs,maharaj,allegation,youngstown,synth,thoroughfare,regionally,pillai,transcontinental,pedagogical,riemann,colonia,easternmost,tentatively,profiled,herefordshire,nativity,meuse,nucleotide,inhibits,huntingdon,throughput,recorders,conceding,domed,homeowners,centric,gabled,canoes,fringes,breeder,subtitled,fluoride,haplogroup,zionism,izmir,phylogeny,kharkiv,romanticism,adhesion,usaaf,delegations,lorestan,whalers,biathlon,vaulted,mathematically,pesos,skirmishes,heisman,kalamazoo,gesellschaft,launceston,interacts,quadruple,kowloon,psychoanalysis,toothed,ideologies,navigational,valence,induces,lesotho,frieze,rigging,undercarriage,explorations,spoof,eucharist,profitability,virtuoso,recitals,subterranean,sizeable,herodotus,subscriber,huxley,pivot,forewing,warring,boleslaw,bharatiya,suffixes,trois,percussionist,downturn,garrisons,philosophies,chants,mersin,mentored,dramatist,guilds,frameworks,thermodynamic,venomous,mehmed,assembling,rabbinic,hegemony,replicas,enlargement,claimant,retitled,utica,dumfries,metis,deter,assortment,tubing,afflicted,weavers,rupture,ornamentation,transept,salvaged,upkeep,callsign,rajput,stevenage,trimmed,intracellular,synchronization,consular,unfavorable,royalists,goldwyn,fasting,hussars,doppler,obscurity,currencies,amiens,acorn,tagore,townsville,gaussian,migrations,porta,anjou,graphite,seaport,monographs,gladiators,metrics,calligraphy,sculptural,swietokrzyskie,tolombeh,eredivisie,shoals,queries,carts,exempted,fiberglass,mirrored,bazar,progeny,formalized,mukherjee,professed,amazon.com,cathode,moreton,removable,mountaineers,nagano,transplantation,augustinian,steeply,epilogue,adapter,decisively,accelerating,mediaeval,substituting,tasman,devonshire,litres,enhancements,himmler,nephews,bypassing,imperfect,argentinian,reims,integrates,sochi,ascii,licences,niches,surgeries,fables,versatility,indra,footpath,afonso,crore,evaporation,encodes,shelling,conformity,simplify,updating,quotient,overt,firmware,umpires,architectures,eocene,conservatism,secretion,embroidery,f.c..,tuvalu,mosaics,shipwreck,prefectural,cohort,grievances,garnering,centerpiece,apoptosis,djibouti,bethesda,formula_20,shonen,richland,justinian,dormitories,meteorite,reliably,obtains,pedagogy,hardness,cupola,manifolds,amplification,steamers,familial,dumbarton,jerzy,genital,maidstone,salinity,grumman,signifies,presbytery,meteorology,procured,aegis,streamed,deletion,nuestra,mountaineering,accords,neuronal,khanate,grenoble,axles,dispatches,tokens,turku,auctions,propositions,planters,proclaiming,recommissioned,stravinsky,obverse,bombarded,waged,saviour,massacred,reformist,purportedly,resettlement,ravenna,embroiled,minden,revitalization,hikers,bridging,torpedoed,depletion,nizam,affectionately,latitudes,lubeck,spore,polymerase,aarhus,nazism,101st,buyout,galerie,diets,overflow,motivational,renown,brevet,deriving,melee,goddesses,demolish,amplified,tamworth,retake,brokerage,beneficiaries,henceforth,reorganised,silhouette,browsers,pollutants,peron,lichfield,encircled,defends,bulge,dubbing,flamenco,coimbatore,refinement,enshrined,grizzlies,capacitor,usefulness,evansville,interscholastic,rhodesian,bulletins,diamondbacks,rockers,platted,medalists,formosa,transporter,slabs,guadeloupe,disparate,concertos,violins,regaining,mandible,untitled,agnostic,issuance,hamiltonian,brampton,srpska,homology,downgraded,florentine,epitaph,kanye,rallying,analysed,grandstand,infinitely,antitrust,plundered,modernity,colspan=3|total,amphitheatre,doric,motorists,yemeni,carnivorous,probabilities,prelate,struts,scrapping,bydgoszcz,pancreatic,signings,predicts,compendium,ombudsman,apertura,appoints,rebbe,stereotypical,valladolid,clustered,touted,plywood,inertial,kettering,curving,d'honneur,housewives,grenadier,vandals,barbarossa,necked,waltham,reputedly,jharkhand,cistercian,pursues,viscosity,organiser,cloister,islet,stardom,moorish,himachal,strives,scripps,staggered,blasts,westwards,millimeters,angolan,hubei,agility,admirals,mordellistena,coincides,platte,vehicular,cordillera,riffs,schoolteacher,canaan,acoustics,tinged,reinforcing,concentrates,daleks,monza,selectively,musik,polynesia,exporter,reviving,macclesfield,bunkers,ballets,manors,caudal,microbiology,primes,unbroken,outcry,flocks,pakhtunkhwa,abelian,toowoomba,luminous,mould,appraisal,leuven,experimentally,interoperability,hideout,perak,specifying,knighthood,vasily,excerpt,computerized,niels,networked,byzantium,reaffirmed,geographer,obscured,fraternities,mixtures,allusion,accra,lengthened,inquest,panhandle,pigments,revolts,bluetooth,conjugate,overtaken,foray,coils,breech,streaks,impressionist,mendelssohn,intermediary,panned,suggestive,nevis,upazila,rotunda,mersey,linnaeus,anecdotes,gorbachev,viennese,exhaustive,moldavia,arcades,irrespective,orator,diminishing,predictive,cohesion,polarized,montage,avian,alienation,conus,jaffna,urbanization,seawater,extremity,editorials,scrolling,dreyfus,traverses,topographic,gunboats,extratropical,normans,correspondents,recognises,millennia,filtration,ammonium,voicing,complied,prefixes,diplomas,figurines,weakly,gated,oscillator,lucerne,embroidered,outpatient,airframe,fractional,disobedience,quarterbacks,formula_21,shinto,chiapas,epistle,leakage,pacifist,avignon,penrith,renders,mantua,screenplays,gustaf,tesco,alphabetically,rations,discharges,headland,tapestry,manipur,boolean,mediator,ebenezer,subchannel,fable,bestselling,ateneo,trademarks,recurrence,dwarfs,britannica,signifying,vikram,mediate,condensation,censuses,verbandsgemeinde,cartesian,sprang,surat,britons,chelmsford,courtenay,statistic,retina,abortions,liabilities,closures,mississauga,skyscrapers,saginaw,compounded,aristocrat,msnbc,stavanger,septa,interpretive,hinder,visibly,seeding,shutouts,irregularly,quebecois,footbridge,hydroxide,implicitly,lieutenants,simplex,persuades,midshipman,heterogeneous,officiated,crackdown,lends,tartu,altars,fractions,dissidents,tapered,modernisation,scripting,blazon,aquaculture,thermodynamics,sistan,hasidic,bellator,pavia,propagated,theorized,bedouin,transnational,mekong,chronicled,declarations,kickstarter,quotas,runtime,duquesne,broadened,clarendon,brownsville,saturation,tatars,electorates,malayan,replicated,observable,amphitheater,endorsements,referral,allentown,mormons,pantomime,eliminates,typeface,allegorical,varna,conduction,evoke,interviewer,subordinated,uyghur,landscaped,conventionally,ascend,edifice,postulated,hanja,whitewater,embarking,musicologist,tagalog,frontage,paratroopers,hydrocarbons,transliterated,nicolae,viewpoints,surrealist,asheville,falklands,hacienda,glide,opting,zimbabwean,discal,mortgages,nicaraguan,yadav,ghosh,abstracted,castilian,compositional,cartilage,intergovernmental,forfeited,importation,rapping,artes,republika,narayana,condominium,frisian,bradman,duality,marche,extremist,phosphorylation,genomes,allusions,valencian,habeas,ironworks,multiplex,harpsichord,emigrate,alternated,breda,waffen,smartphones,familiarity,regionalliga,herbaceous,piping,dilapidated,carboniferous,xviii,critiques,carcinoma,sagar,chippewa,postmodern,neapolitan,excludes,notoriously,distillation,tungsten,richness,installments,monoxide,chand,privatisation,molded,maths,projectiles,luoyang,epirus,lemma,concentric,incline,erroneous,sideline,gazetted,leopards,fibres,renovate,corrugated,unilateral,repatriation,orchestration,saeed,rockingham,loughborough,formula_22,bandleader,appellation,openness,nanotechnology,massively,tonnage,dunfermline,exposes,moored,ridership,motte,eurobasket,majoring,feats,silla,laterally,playlist,downwards,methodologies,eastbourne,daimyo,cellulose,leyton,norwalk,oblong,hibernian,opaque,insular,allegory,camogie,inactivation,favoring,masterpieces,rinpoche,serotonin,portrayals,waverley,airliner,longford,minimalist,outsourcing,excise,meyrick,qasim,organisational,synaptic,farmington,gorges,scunthorpe,zoned,tohoku,librarians,davao,decor,theatrically,brentwood,pomona,acquires,planter,capacitors,synchronous,skateboarding,coatings,turbocharged,ephraim,capitulation,scoreboard,hebrides,ensues,cereals,ailing,counterpoint,duplication,antisemitic,clique,aichi,oppressive,transcendental,incursions,rename,renumbering,powys,vestry,bitterly,neurology,supplanted,affine,susceptibility,orbiter,activating,overlaps,ecoregion,raman,canoer,darfur,microorganisms,precipitated,protruding,torun,anthropologists,rennes,kangaroos,parliamentarians,edits,littoral,archived,begum,rensselaer,microphones,ypres,empower,etruscan,wisden,montfort,calibration,isomorphic,rioting,kingship,verbally,smyrna,cohesive,canyons,fredericksburg,rahul,relativistic,micropolitan,maroons,industrialized,henchmen,uplift,earthworks,mahdi,disparity,cultured,transliteration,spiny,fragmentary,extinguished,atypical,inventors,biosynthesis,heralded,curacao,anomalies,aeroplane,surya,mangalore,maastricht,ashkenazi,fusiliers,hangzhou,emitting,monmouthshire,schwarzenegger,ramayana,peptides,thiruvananthapuram,alkali,coimbra,budding,reasoned,epithelial,harbors,rudimentary,classically,parque,ealing,crusades,rotations,riparian,pygmy,inertia,revolted,microprocessor,calendars,solvents,kriegsmarine,accademia,cheshmeh,yoruba,ardabil,mitra,genomic,notables,propagate,narrates,univision,outposts,polio,birkenhead,urinary,crocodiles,pectoral,barrymore,deadliest,rupees,chaim,protons,comical,astrophysics,unifying,formula_23,vassals,cortical,audubon,pedals,tenders,resorted,geophysical,lenders,recognising,tackling,lanarkshire,doctrinal,annan,combating,guangxi,estimating,selectors,tribunals,chambered,inhabiting,exemptions,curtailed,abbasid,kandahar,boron,bissau,150th,codenamed,wearer,whorl,adhered,subversive,famer,smelting,inserting,mogadishu,zoologist,mosul,stumps,almanac,olympiacos,stamens,participatory,cults,honeycomb,geologists,dividend,recursive,skiers,reprint,pandemic,liber,percentages,adversely,stoppage,chieftains,tubingen,southerly,overcrowding,unorganized,hangars,fulfil,hails,cantilever,woodbridge,pinus,wiesbaden,fertilization,fluorescence,enhances,plenary,troublesome,episodic,thrissur,kickboxing,allele,staffing,garda,televisions,philatelic,spacetime,bullpen,oxides,leninist,enrolling,inventive,truro,compatriot,ruskin,normative,assay,gotha,murad,illawarra,gendarmerie,strasse,mazraeh,rebounded,fanfare,liaoning,rembrandt,iranians,emirate,governs,latency,waterfowl,chairmen,katowice,aristocrats,eclipsed,sentient,sonatas,interplay,sacking,decepticons,dynamical,arbitrarily,resonant,petar,velocities,alludes,wastes,prefectures,belleville,sensibility,salvadoran,consolidating,medicaid,trainees,vivekananda,molar,porous,upload,youngster,infused,doctorates,wuhan,annihilation,enthusiastically,gamespot,kanpur,accumulating,monorail,operetta,tiling,sapporo,finns,calvinist,hydrocarbon,sparrows,orienteering,cornelis,minster,vuelta,plebiscite,embraces,panchayats,focussed,remediation,brahman,olfactory,reestablished,uniqueness,northumbria,rwandan,predominately,abode,ghats,balances,californian,uptake,bruges,inert,westerns,reprints,cairn,yarra,resurfaced,audible,rossini,regensburg,italiana,fleshy,irrigated,alerts,yahya,varanasi,marginalized,expatriates,cantonment,normandie,sahitya,directives,rounder,hulls,fictionalized,constables,inserts,hipped,potosi,navies,biologists,canteen,husbandry,augment,fortnight,assamese,kampala,o'keefe,paleolithic,bluish,promontory,consecutively,striving,niall,reuniting,dipole,friendlies,disapproved,thrived,netflix,liberian,dielectric,medway,strategist,sankt,pickups,hitters,encode,rerouted,claimants,anglesey,partitioned,cavan,flutes,reared,repainted,armaments,bowed,thoracic,balliol,piero,chaplains,dehestan,sender,junkers,sindhi,sickle,dividends,metallurgy,honorific,berths,namco,springboard,resettled,gansu,copyrighted,criticizes,utopian,bendigo,ovarian,binomial,spaceflight,oratorio,proprietors,supergroup,duplicated,foreground,strongholds,revolved,optimize,layouts,westland,hurler,anthropomorphic,excelsior,merchandising,reeds,vetoed,cryptography,hollyoaks,monash,flooring,ionian,resilience,johnstown,resolves,lawmakers,alegre,wildcards,intolerance,subculture,selector,slums,formulate,bayonet,istvan,restitution,interchangeably,awakens,rostock,serpentine,oscillation,reichstag,phenotype,recessed,piotr,annotated,preparedness,consultations,clausura,preferential,euthanasia,genoese,outcrops,freemasonry,geometrical,genesee,islets,prometheus,panamanian,thunderbolt,terraced,stara,shipwrecks,futebol,faroese,sharqi,aldermen,zeitung,unify,formula_24,humanism,syntactic,earthen,blyth,taxed,rescinded,suleiman,cymru,dwindled,vitality,superieure,resupply,adolphe,ardennes,rajiv,profiling,olympique,gestation,interfaith,milosevic,tagline,funerary,druze,silvery,plough,shrubland,relaunch,disband,nunatak,minimizing,excessively,waned,attaching,luminosity,bugle,encampment,electrostatic,minesweeper,dubrovnik,rufous,greenock,hochschule,assyrians,extracting,malnutrition,priya,attainment,anhui,connotations,predicate,seabirds,deduced,pseudonyms,gopal,plovdiv,refineries,imitated,kwazulu,terracotta,tenets,discourses,brandeis,whigs,dominions,pulmonate,landslides,tutors,determinant,richelieu,farmstead,tubercles,technicolor,hegel,redundancy,greenpeace,shortening,mules,distilled,xxiii,fundamentalist,acrylic,outbuildings,lighted,corals,signaled,transistors,cavite,austerity,76ers,exposures,dionysius,outlining,commutative,permissible,knowledgeable,howrah,assemblage,inhibited,crewmen,mbit/s,pyramidal,aberdeenshire,bering,rotates,atheism,howitzer,saone,lancet,fermented,contradicted,materiel,ofsted,numeric,uniformity,josephus,nazarene,kuwaiti,noblemen,pediment,emergent,campaigner,akademi,murcia,perugia,gallen,allsvenskan,finned,cavities,matriculation,rosters,twickenham,signatory,propel,readable,contends,artisan,flamboyant,reggio,italo,fumbles,widescreen,rectangle,centimetres,collaborates,envoys,rijeka,phonological,thinly,refractive,civilisation,reductase,cognate,dalhousie,monticello,lighthouses,jitsu,luneburg,socialite,fermi,collectible,optioned,marquee,jokingly,architecturally,kabir,concubine,nationalisation,watercolor,wicklow,acharya,pooja,leibniz,rajendra,nationalized,stalemate,bloggers,glutamate,uplands,shivaji,carolingian,bucuresti,dasht,reappears,muscat,functionally,formulations,hinged,hainan,catechism,autosomal,incremental,asahi,coeur,diversification,multilateral,fewest,recombination,finisher,harrogate,hangul,feasts,photovoltaic,paget,liquidity,alluded,incubation,applauded,choruses,malagasy,hispanics,bequest,underparts,cassava,kazimierz,gastric,eradication,mowtowr,tyrosine,archbishopric,e9e9e9,unproductive,uxbridge,hydrolysis,harbours,officio,deterministic,devonport,kanagawa,breaches,freetown,rhinoceros,chandigarh,janos,sanatorium,liberator,inequalities,agonist,hydrophobic,constructors,nagorno,snowboarding,welcomes,subscribed,iloilo,resuming,catalysts,stallions,jawaharlal,harriers,definitively,roughriders,hertford,inhibiting,elgar,randomized,incumbents,episcopate,rainforests,yangon,improperly,kemal,interpreters,diverged,uttarakhand,umayyad,phnom,panathinaikos,shabbat,diode,jiangxi,forbidding,nozzle,artistry,licensee,processions,staffs,decimated,expressionism,shingle,palsy,ontology,mahayana,maribor,sunil,hostels,edwardian,jetty,freehold,overthrew,eukaryotic,schuylkill,rawalpindi,sheath,recessive,ferenc,mandibles,berlusconi,confessor,convergent,ababa,slugging,rentals,sephardic,equivalently,collagen,markov,dynamically,hailing,depressions,sprawling,fairgrounds,indistinguishable,plutarch,pressurized,banff,coldest,braunschweig,mackintosh,sociedad,wittgenstein,tromso,airbase,lecturers,subtitle,attaches,purified,contemplated,dreamworks,telephony,prophetic,rockland,aylesbury,biscay,coherence,aleksandar,judoka,pageants,theses,homelessness,luthor,sitcoms,hinterland,fifths,derwent,privateers,enigmatic,nationalistic,instructs,superimposed,conformation,tricycle,dusan,attributable,unbeknownst,laptops,etching,archbishops,ayatollah,cranial,gharbi,interprets,lackawanna,abingdon,saltwater,tories,lender,minaj,ancillary,ranching,pembrokeshire,topographical,plagiarism,murong,marque,chameleon,assertions,infiltrated,guildhall,reverence,schenectady,formula_25,kollam,notary,mexicana,initiates,abdication,basra,theorems,ionization,dismantling,eared,censors,budgetary,numeral,verlag,excommunicated,distinguishable,quarried,cagliari,hindustan,symbolizing,watertown,descartes,relayed,enclosures,militarily,sault,devolved,dalian,djokovic,filaments,staunton,tumour,curia,villainous,decentralized,galapagos,moncton,quartets,onscreen,necropolis,brasileiro,multipurpose,alamos,comarca,jorgen,concise,mercia,saitama,billiards,entomologist,montserrat,lindbergh,commuting,lethbridge,phoenician,deviations,anaerobic,denouncing,redoubt,fachhochschule,principalities,negros,announcers,seconded,parrots,konami,revivals,approving,devotee,riyadh,overtook,morecambe,lichen,expressionist,waterline,silverstone,geffen,sternites,aspiration,behavioural,grenville,tripura,mediums,genders,pyotr,charlottesville,sacraments,programmable,ps100,shackleton,garonne,sumerian,surpass,authorizing,interlocking,lagoons,voiceless,advert,steeple,boycotted,alouettes,yosef,oxidative,sassanid,benefiting,sayyid,nauru,predetermined,idealism,maxillary,polymerization,semesters,munchen,conor,outfitted,clapham,progenitor,gheorghe,observational,recognitions,numerically,colonized,hazrat,indore,contaminants,fatality,eradicate,assyria,convocation,cameos,skillful,skoda,corfu,confucius,overtly,ramadan,wollongong,placements,d.c..,permutation,contemporaneous,voltages,elegans,universitat,samar,plunder,dwindling,neuter,antonin,sinhala,campania,solidified,stanzas,fibrous,marburg,modernize,sorcery,deutscher,florets,thakur,disruptive,infielder,disintegration,internazionale,vicariate,effigy,tripartite,corrective,klamath,environs,leavenworth,sandhurst,workmen,compagnie,hoseynabad,strabo,palisades,ordovician,sigurd,grandsons,defection,viacom,sinhalese,innovator,uncontrolled,slavonic,indexes,refrigeration,aircrew,superbike,resumption,neustadt,confrontations,arras,hindenburg,ripon,embedding,isomorphism,dwarves,matchup,unison,lofty,argos,louth,constitutionally,transitive,newington,facelift,degeneration,perceptual,aviators,enclosing,igneous,symbolically,academician,constitutionality,iso/iec,sacrificial,maturation,apprentices,enzymology,naturalistic,hajji,arthropods,abbess,vistula,scuttled,gradients,pentathlon,etudes,freedmen,melaleuca,thrice,conductive,sackville,franciscans,stricter,golds,kites,worshiped,monsignor,trios,orally,tiered,primacy,bodywork,castleford,epidemics,alveolar,chapelle,chemists,hillsboro,soulful,warlords,ngati,huguenot,diurnal,remarking,luger,motorways,gauss,jahan,cutoff,proximal,bandai,catchphrase,jonubi,ossetia,codename,codice_2,throated,itinerant,chechnya,riverfront,leela,evoked,entailed,zamboanga,rejoining,circuitry,haymarket,khartoum,feuds,braced,miyazaki,mirren,lubusz,caricature,buttresses,attrition,characterizes,widnes,evanston,materialism,contradictions,marist,midrash,gainsborough,ulithi,turkmen,vidya,escuela,patrician,inspirations,reagent,premierships,humanistic,euphrates,transitioning,belfry,zedong,adaption,kaliningrad,lobos,epics,waiver,coniferous,polydor,inductee,refitted,moraine,unsatisfactory,worsening,polygamy,rajya,nested,subgenre,broadside,stampeders,lingua,incheon,pretender,peloton,persuading,excitation,multan,predates,tonne,brackish,autoimmune,insulated,podcasts,iraqis,bodybuilding,condominiums,midlothian,delft,debtor,asymmetrical,lycaenidae,forcefully,pathogenic,tamaulipas,andaman,intravenous,advancements,senegalese,chronologically,realigned,inquirer,eusebius,dekalb,additives,shortlist,goldwater,hindustani,auditing,caterpillars,pesticide,nakhon,ingestion,lansdowne,traditionalist,northland,thunderbirds,josip,nominating,locale,ventricular,animators,verandah,epistles,surveyors,anthems,dredd,upheaval,passaic,anatolian,svalbard,associative,floodplain,taranaki,estuaries,irreducible,beginners,hammerstein,allocate,coursework,secreted,counteract,handwritten,foundational,passover,discoverer,decoding,wares,bourgeoisie,playgrounds,nazionale,abbreviations,seanad,golan,mishra,godavari,rebranding,attendances,backstory,interrupts,lettered,hasbro,ultralight,hormozgan,armee,moderne,subdue,disuse,improvisational,enrolment,persists,moderated,carinthia,hatchback,inhibitory,capitalized,anatoly,abstracts,albemarle,bergamo,insolvency,sentai,cellars,walloon,joked,kashmiri,dirac,materialized,renomination,homologous,gusts,eighteens,centrifugal,storied,baluchestan,formula_26,poincare,vettel,infuriated,gauges,streetcars,vedanta,stately,liquidated,goguryeo,swifts,accountancy,levee,acadian,hydropower,eustace,comintern,allotment,designating,torsion,molding,irritation,aerobic,halen,concerted,plantings,garrisoned,gramophone,cytoplasm,onslaught,requisitioned,relieving,genitive,centrist,jeong,espanola,dissolving,chatterjee,sparking,connaught,varese,arjuna,carpathian,empowering,meteorologist,decathlon,opioid,hohenzollern,fenced,ibiza,avionics,footscray,scrum,discounts,filament,directories,a.f.c,stiffness,quaternary,adventurers,transmits,harmonious,taizong,radiating,germantown,ejection,projectors,gaseous,nahuatl,vidyalaya,nightlife,redefined,refuted,destitute,arista,potters,disseminated,distanced,jamboree,kaohsiung,tilted,lakeshore,grained,inflicting,kreis,novelists,descendents,mezzanine,recast,fatah,deregulation,ac/dc,australis,kohgiluyeh,boreal,goths,authoring,intoxicated,nonpartisan,theodosius,pyongyang,shree,boyhood,sanfl,plenipotentiary,photosynthesis,presidium,sinaloa,honshu,texan,avenida,transmembrane,malays,acropolis,catalunya,vases,inconsistencies,methodists,quell,suisse,banat,simcoe,cercle,zealanders,discredited,equine,sages,parthian,fascists,interpolation,classifying,spinoff,yehuda,cruised,gypsum,foaled,wallachia,saraswati,imperialist,seabed,footnotes,nakajima,locales,schoolmaster,drosophila,bridgehead,immanuel,courtier,bookseller,niccolo,stylistically,portmanteau,superleague,konkani,millimetres,arboreal,thanjavur,emulation,sounders,decompression,commoners,infusion,methodological,osage,rococo,anchoring,bayreuth,formula_27,abstracting,symbolized,bayonne,electrolyte,rowed,corvettes,traversing,editorship,sampler,presidio,curzon,adirondack,swahili,rearing,bladed,lemur,pashtun,behaviours,bottling,zaire,recognisable,systematics,leeward,formulae,subdistricts,smithfield,vijaya,buoyancy,boosting,cantonal,rishi,airflow,kamakura,adana,emblems,aquifer,clustering,husayn,woolly,wineries,montessori,turntable,exponentially,caverns,espoused,pianists,vorpommern,vicenza,latterly,o'rourke,williamstown,generale,kosice,duisburg,poirot,marshy,mismanagement,mandalay,dagenham,universes,chiral,radiated,stewards,vegan,crankshaft,kyrgyz,amphibian,cymbals,infrequently,offenbach,environmentalist,repatriated,permutations,midshipmen,loudoun,refereed,bamberg,ornamented,nitric,selim,translational,dorsum,annunciation,gippsland,reflector,informational,regia,reactionary,ahmet,weathering,erlewine,legalized,berne,occupant,divas,manifests,analyzes,disproportionate,mitochondria,totalitarian,paulista,interscope,anarcho,correlate,brookfield,elongate,brunel,ordinal,precincts,volatility,equaliser,hittite,somaliland,ticketing,monochrome,ubuntu,chhattisgarh,titleholder,ranches,referendums,blooms,accommodates,merthyr,religiously,ryukyu,tumultuous,checkpoints,anode,mi'kmaq,cannonball,punctuation,remodelled,assassinations,criminology,alternates,yonge,pixar,namibian,piraeus,trondelag,hautes,lifeboats,shoal,atelier,vehemently,sadat,postcode,jainism,lycoming,undisturbed,lutherans,genomics,popmatters,tabriz,isthmian,notched,autistic,horsham,mites,conseil,bloomsbury,seung,cybertron,idris,overhauled,disbandment,idealized,goldfields,worshippers,lobbyist,ailments,paganism,herbarium,athenians,messerschmitt,faraday,entangled,'olya,untreated,criticising,howitzers,parvati,lobed,debussy,atonement,tadeusz,permeability,mueang,sepals,degli,optionally,fuelled,follies,asterisk,pristina,lewiston,congested,overpass,affixed,pleads,telecasts,stanislaus,cryptographic,friesland,hamstring,selkirk,antisubmarine,inundated,overlay,aggregates,fleur,trolleybus,sagan,ibsen,inductees,beltway,tiled,ladders,cadbury,laplace,ascetic,micronesia,conveying,bellingham,cleft,batches,usaid,conjugation,macedon,assisi,reappointed,brine,jinnah,prairies,screenwriting,oxidized,despatches,linearly,fertilizers,brazilians,absorbs,wagga,modernised,scorsese,ashraf,charlestown,esque,habitable,nizhny,lettres,tuscaloosa,esplanade,coalitions,carbohydrates,legate,vermilion,standardised,galleria,psychoanalytic,rearrangement,substation,competency,nationalised,reshuffle,reconstructions,mehdi,bougainville,receivership,contraception,enlistment,conducive,aberystwyth,solicitors,dismisses,fibrosis,montclair,homeowner,surrealism,s.h.i.e.l.d,peregrine,compilers,1790s,parentage,palmas,rzeszow,worldview,eased,svenska,housemate,bundestag,originator,enlisting,outwards,reciprocity,formula_28,carbohydrate,democratically,firefighting,romagna,acknowledgement,khomeini,carbide,quests,vedas,characteristically,guwahati,brixton,unintended,brothels,parietal,namur,sherbrooke,moldavian,baruch,milieu,undulating,laurier,entre,dijon,ethylene,abilene,heracles,paralleling,ceres,dundalk,falun,auspicious,chisinau,polarity,foreclosure,templates,ojibwe,punic,eriksson,biden,bachchan,glaciation,spitfires,norsk,nonviolent,heidegger,algonquin,capacitance,cassettes,balconies,alleles,airdate,conveys,replays,classifies,infrequent,amine,cuttings,rarer,woking,olomouc,amritsar,rockabilly,illyrian,maoist,poignant,tempore,stalinist,segmented,bandmate,mollusc,muhammed,totalled,byrds,tendered,endogenous,kottayam,aisne,oxidase,overhears,illustrators,verve,commercialization,purplish,directv,moulded,lyttelton,baptismal,captors,saracens,georgios,shorten,polity,grids,fitzwilliam,sculls,impurities,confederations,akhtar,intangible,oscillations,parabolic,harlequin,maulana,ovate,tanzanian,singularity,confiscation,qazvin,speyer,phonemes,overgrown,vicarage,gurion,undocumented,niigata,thrones,preamble,stave,interment,liiga,ataturk,aphrodite,groupe,indentured,habsburgs,caption,utilitarian,ozark,slovenes,reproductions,plasticity,serbo,dulwich,castel,barbuda,salons,feuding,lenape,wikileaks,swamy,breuning,shedding,afield,superficially,operationally,lamented,okanagan,hamadan,accolade,furthering,adolphus,fyodor,abridged,cartoonists,pinkish,suharto,cytochrome,methylation,debit,colspan=9|,refine,taoist,signalled,herding,leaved,bayan,fatherland,rampart,sequenced,negation,storyteller,occupiers,barnabas,pelicans,nadir,conscripted,railcars,prerequisite,furthered,columba,carolinas,markup,gwalior,franche,chaco,eglinton,ramparts,rangoon,metabolites,pollination,croat,televisa,holyoke,testimonial,setlist,safavid,sendai,georgians,shakespearean,galleys,regenerative,krzysztof,overtones,estado,barbary,cherbourg,obispo,sayings,composites,sainsbury,deliberation,cosmological,mahalleh,embellished,ascap,biala,pancras,calumet,grands,canvases,antigens,marianas,defenseman,approximated,seedlings,soren,stele,nuncio,immunology,testimonies,glossary,recollections,suitability,tampere,venous,cohomology,methanol,echoing,ivanovich,warmly,sterilization,imran,multiplying,whitechapel,undersea,xuanzong,tacitus,bayesian,roundhouse,correlations,rioters,molds,fiorentina,bandmates,mezzo,thani,guerilla,200th,premiums,tamils,deepwater,chimpanzees,tribesmen,selwyn,globo,turnovers,punctuated,erode,nouvelle,banbury,exponents,abolishing,helical,maimonides,endothelial,goteborg,infield,encroachment,cottonwood,mazowiecki,parable,saarbrucken,reliever,epistemology,artistes,enrich,rationing,formula_29,palmyra,subfamilies,kauai,zoran,fieldwork,arousal,creditor,friuli,celts,comoros,equated,escalation,negev,tallied,inductive,anion,netanyahu,mesoamerican,lepidoptera,aspirated,remit,westmorland,italic,crosse,vaclav,fuego,owain,balmain,venetians,ethnicities,deflected,ticino,apulia,austere,flycatcher,reprising,repressive,hauptbahnhof,subtype,ophthalmology,summarizes,eniwetok,colonisation,subspace,nymphalidae,earmarked,tempe,burnet,crests,abbots,norwegians,enlarge,ashoka,frankfort,livorno,malware,renters,singly,iliad,moresby,rookies,gustavus,affirming,alleges,legume,chekhov,studded,abdicated,suzhou,isidore,townsite,repayment,quintus,yankovic,amorphous,constructor,narrowing,industrialists,tanganyika,capitalization,connective,mughals,rarities,aerodynamics,worthing,antalya,diagnostics,shaftesbury,thracian,obstetrics,benghazi,multiplier,orbitals,livonia,roscommon,intensify,ravel,oaths,overseer,locomotion,necessities,chickasaw,strathclyde,treviso,erfurt,aortic,contemplation,accrington,markazi,predeceased,hippocampus,whitecaps,assemblyman,incursion,ethnography,extraliga,reproducing,directorship,benzene,byway,stupa,taxable,scottsdale,onondaga,favourably,countermeasures,lithuanians,thatched,deflection,tarsus,consuls,annuity,paralleled,contextual,anglian,klang,hoisted,multilingual,enacting,samaj,taoiseach,carthaginian,apologised,hydrology,entrant,seamless,inflorescences,mugabe,westerners,seminaries,wintering,penzance,mitre,sergeants,unoccupied,delimitation,discriminate,upriver,abortive,nihon,bessarabia,calcareous,buffaloes,patil,daegu,streamline,berks,chaparral,laity,conceptions,typified,kiribati,threaded,mattel,eccentricity,signified,patagonia,slavonia,certifying,adnan,astley,sedition,minimally,enumerated,nikos,goalless,walid,narendra,causa,missoula,coolant,dalek,outcrop,hybridization,schoolchildren,peasantry,afghans,confucianism,shahr,gallic,tajik,kierkegaard,sauvignon,commissar,patriarchs,tuskegee,prussians,laois,ricans,talmudic,officiating,aesthetically,baloch,antiochus,separatists,suzerainty,arafat,shading,u.s.c,chancellors,inc..,toolkit,nepenthes,erebidae,solicited,pratap,kabbalah,alchemist,caltech,darjeeling,biopic,spillway,kaiserslautern,nijmegen,bolstered,neath,pahlavi,eugenics,bureaus,retook,northfield,instantaneous,deerfield,humankind,selectivity,putative,boarders,cornhuskers,marathas,raikkonen,aliabad,mangroves,garages,gulch,karzai,poitiers,chernobyl,thane,alexios,belgrano,scion,solubility,urbanized,executable,guizhou,nucleic,tripled,equalled,harare,houseguests,potency,ghazi,repeater,overarching,regrouped,broward,ragtime,d'art,nandi,regalia,campsites,mamluk,plating,wirral,presumption,zenit,archivist,emmerdale,decepticon,carabidae,kagoshima,franconia,guarani,formalism,diagonally,submarginal,denys,walkways,punts,metrolink,hydrographic,droplets,upperside,martyred,hummingbird,antebellum,curiously,mufti,friary,chabad,czechs,shaykh,reactivity,berklee,turbonilla,tongan,sultans,woodville,unlicensed,enmity,dominicans,operculum,quarrying,watercolour,catalyzed,gatwick,'what,mesozoic,auditors,shizuoka,footballing,haldane,telemundo,appended,deducted,disseminate,o'shea,pskov,abrasive,entente,gauteng,calicut,lemurs,elasticity,suffused,scopula,staining,upholding,excesses,shostakovich,loanwords,naidu,championnat,chromatography,boasting,goaltenders,engulfed,salah,kilogram,morristown,shingles,shi'a,labourer,renditions,frantisek,jekyll,zonal,nanda,sheriffs,eigenvalues,divisione,endorsing,ushered,auvergne,cadres,repentance,freemasons,utilising,laureates,diocletian,semiconductors,o'grady,vladivostok,sarkozy,trackage,masculinity,hydroxyl,mervyn,muskets,speculations,gridiron,opportunistic,mascots,aleutian,fillies,sewerage,excommunication,borrowers,capillary,trending,sydenham,synthpop,rajah,cagayan,deportes,kedah,faure,extremism,michoacan,levski,culminates,occitan,bioinformatics,unknowingly,inciting,emulated,footpaths,piacenza,dreadnought,viceroyalty,oceanographic,scouted,combinatorial,ornithologist,cannibalism,mujahideen,independiente,cilicia,hindwing,minimized,odeon,gyorgy,rubles,purchaser,collieries,kickers,interurban,coiled,lynchburg,respondent,plzen,detractors,etchings,centering,intensification,tomography,ranjit,warblers,retelling,reinstatement,cauchy,modulus,redirected,evaluates,beginner,kalateh,perforated,manoeuvre,scrimmage,internships,megawatts,mottled,haakon,tunbridge,kalyan,summarised,sukarno,quetta,canonized,henryk,agglomeration,coahuila,diluted,chiropractic,yogyakarta,talladega,sheik,cation,halting,reprisals,sulfuric,musharraf,sympathizers,publicised,arles,lectionary,fracturing,startups,sangha,latrobe,rideau,ligaments,blockading,cremona,lichens,fabaceae,modulated,evocative,embodies,battersea,indistinct,altai,subsystem,acidity,somatic,formula_30,tariq,rationality,sortie,ashlar,pokal,cytoplasmic,valour,bangla,displacing,hijacking,spectrometry,westmeath,weill,charing,goias,revolvers,individualized,tenured,nawaz,piquet,chanted,discard,bernd,phalanx,reworking,unilaterally,subclass,yitzhak,piloting,circumvent,disregarded,semicircular,viscous,tibetans,endeavours,retaliated,cretan,vienne,workhouse,sufficiency,aurangzeb,legalization,lipids,expanse,eintracht,sanjak,megas,125th,bahraini,yakima,eukaryotes,thwart,affirmation,peloponnese,retailing,carbonyl,chairwoman,macedonians,dentate,rockaway,correctness,wealthier,metamorphic,aragonese,fermanagh,pituitary,schrodinger,evokes,spoiler,chariots,akita,genitalia,combe,confectionery,desegregation,experiential,commodores,persepolis,viejo,restorations,virtualization,hispania,printmaking,stipend,yisrael,theravada,expended,radium,tweeted,polygonal,lippe,charente,leveraged,cutaneous,fallacy,fragrant,bypasses,elaborately,rigidity,majid,majorca,kongo,plasmodium,skits,audiovisual,eerste,staircases,prompts,coulthard,northwestward,riverdale,beatrix,copyrights,prudential,communicates,mated,obscenity,asynchronous,analyse,hansa,searchlight,farnborough,patras,asquith,qarah,contours,fumbled,pasteur,redistributed,almeria,sanctuaries,jewry,israelite,clinicians,koblenz,bookshop,affective,goulburn,panelist,sikorsky,cobham,mimics,ringed,portraiture,probabilistic,girolamo,intelligible,andalusian,jalal,athenaeum,eritrean,auxiliaries,pittsburg,devolution,sangam,isolating,anglers,cronulla,annihilated,kidderminster,synthesize,popularised,theophilus,bandstand,innumerable,chagrin,retroactively,weser,multiples,birdlife,goryeo,pawnee,grosser,grappling,tactile,ahmadinejad,turboprop,erdogan,matchday,proletarian,adhering,complements,austronesian,adverts,luminaries,archeology,impressionism,conifer,sodomy,interracial,platoons,lessen,postings,pejorative,registrations,cookery,persecutions,microbes,audits,idiosyncratic,subsp,suspensions,restricts,colouring,ratify,instrumentals,nucleotides,sulla,posits,bibliotheque,diameters,oceanography,instigation,subsumed,submachine,acceptor,legation,borrows,sedge,discriminated,loaves,insurers,highgate,detectable,abandons,kilns,sportscaster,harwich,iterations,preakness,arduous,tensile,prabhu,shortwave,philologist,shareholding,vegetative,complexities,councilors,distinctively,revitalize,automaton,amassing,montreux,khanh,surabaya,nurnberg,pernambuco,cuisines,charterhouse,firsts,tercera,inhabitant,homophobia,naturalism,einar,powerplant,coruna,entertainments,whedon,rajputs,raton,democracies,arunachal,oeuvre,wallonia,jeddah,trolleybuses,evangelism,vosges,kiowa,minimise,encirclement,undertakes,emigrant,beacons,deepened,grammars,publius,preeminent,seyyed,repechage,crafting,headingley,osteopathic,lithography,hotly,bligh,inshore,betrothed,olympians,formula_31,dissociation,trivandrum,arran,petrovic,stettin,disembarked,simplification,bronzes,philo,acrobatic,jonsson,conjectured,supercharged,kanto,detects,cheeses,correlates,harmonics,lifecycle,sudamericana,reservists,decayed,elitserien,parametric,113th,dusky,hogarth,modulo,symbiotic,monopolies,discontinuation,converges,southerners,tucuman,eclipses,enclaves,emits,famicom,caricatures,artistically,levelled,mussels,erecting,mouthparts,cunard,octaves,crucible,guardia,unusable,lagrangian,droughts,ephemeral,pashto,canis,tapering,sasebo,silurian,metallurgical,outscored,evolves,reissues,sedentary,homotopy,greyhawk,reagents,inheriting,onshore,tilting,rebuffed,reusable,naturalists,basingstoke,insofar,offensives,dravidian,curators,planks,rajan,isoforms,flagstaff,preside,globular,egalitarian,linkages,biographers,goalscorers,molybdenum,centralised,nordland,jurists,ellesmere,rosberg,hideyoshi,restructure,biases,borrower,scathing,redress,tunnelling,workflow,magnates,mahendra,dissenters,plethora,transcriptions,handicrafts,keyword,xi'an,petrograd,unser,prokofiev,90deg,madan,bataan,maronite,kearny,carmarthen,termini,consulates,disallowed,rockville,bowery,fanzine,docklands,bests,prohibitions,yeltsin,selassie,naturalization,realisation,dispensary,tribeca,abdulaziz,pocahontas,stagnation,pamplona,cuneiform,propagating,subsurface,christgau,epithelium,schwerin,lynching,routledge,hanseatic,upanishad,glebe,yugoslavian,complicity,endowments,girona,mynetworktv,entomology,plinth,ba'ath,supercup,torus,akkadian,salted,englewood,commandery,belgaum,prefixed,colorless,dartford,enthroned,caesarea,nominative,sandown,safeguards,hulled,formula_32,leamington,dieppe,spearhead,generalizations,demarcation,llanelli,masque,brickwork,recounting,sufism,strikingly,petrochemical,onslow,monologues,emigrating,anderlecht,sturt,hossein,sakhalin,subduction,novices,deptford,zanjan,airstrikes,coalfield,reintroduction,timbaland,hornby,messianic,stinging,universalist,situational,radiocarbon,strongman,rowling,saloons,traffickers,overran,fribourg,cambrai,gravesend,discretionary,finitely,archetype,assessor,pilipinas,exhumed,invocation,interacted,digitized,timisoara,smelter,teton,sexism,precepts,srinagar,pilsudski,carmelite,hanau,scoreline,hernando,trekking,blogging,fanbase,wielded,vesicles,nationalization,banja,rafts,motoring,luang,takeda,girder,stimulates,histone,sunda,nanoparticles,attains,jumpers,catalogued,alluding,pontus,ancients,examiners,shinkansen,ribbentrop,reimbursement,pharmacological,ramat,stringed,imposes,cheaply,transplanted,taiping,mizoram,looms,wallabies,sideman,kootenay,encased,sportsnet,revolutionized,tangier,benthic,runic,pakistanis,heatseekers,shyam,mishnah,presbyterians,stadt,sutras,straddles,zoroastrian,infer,fueling,gymnasts,ofcom,gunfight,journeyman,tracklist,oshawa,ps500,pa'in,mackinac,xiongnu,mississippian,breckinridge,freemason,bight,autoroute,liberalization,distantly,thrillers,solomons,presumptive,romanization,anecdotal,bohemians,unpaved,milder,concurred,spinners,alphabets,strenuous,rivieres,kerrang,mistreatment,dismounted,intensively,carlist,dancehall,shunting,pluralism,trafficked,brokered,bonaventure,bromide,neckar,designates,malian,reverses,sotheby,sorghum,serine,environmentalists,languedoc,consulship,metering,bankstown,handlers,militiamen,conforming,regularity,pondicherry,armin,capsized,consejo,capitalists,drogheda,granular,purged,acadians,endocrine,intramural,elicit,terns,orientations,miklos,omitting,apocryphal,slapstick,brecon,pliocene,affords,typography,emigre,tsarist,tomasz,beset,nishi,necessitating,encyclical,roleplaying,journeyed,inflow,sprints,progressives,novosibirsk,cameroonian,ephesus,speckled,kinshasa,freiherr,burnaby,dalmatian,torrential,rigor,renegades,bhakti,nurburgring,cosimo,convincingly,reverting,visayas,lewisham,charlottetown,charadriiformesfamily,transferable,jodhpur,converters,deepening,camshaft,underdeveloped,protease,polonia,uterine,quantify,tobruk,dealerships,narasimha,fortran,inactivity,1780s,victors,categorised,naxos,workstation,skink,sardinian,chalice,precede,dammed,sondheim,phineas,tutored,sourcing,uncompromising,placer,tyneside,courtiers,proclaims,pharmacies,hyogo,booksellers,sengoku,kursk,spectrometer,countywide,wielkopolski,bobsleigh,shetty,llywelyn,consistory,heretics,guinean,cliches,individualism,monolithic,imams,usability,bursa,deliberations,railings,torchwood,inconsistency,balearic,stabilizer,demonstrator,facet,radioactivity,outboard,educates,d'oyly,heretical,handover,jurisdictional,shockwave,hispaniola,conceptually,routers,unaffiliated,trentino,formula_33,cypriots,intervenes,neuchatel,formulating,maggiore,delisted,alcohols,thessaly,potable,estimator,suborder,fluency,mimicry,clergymen,infrastructures,rivals.com,baroda,subplot,majlis,plano,clinching,connotation,carinae,savile,intercultural,transcriptional,sandstones,ailerons,annotations,impresario,heinkel,scriptural,intermodal,astrological,ribbed,northeastward,posited,boers,utilise,kalmar,phylum,breakwater,skype,textured,guideline,azeri,rimini,massed,subsidence,anomalous,wolfsburg,polyphonic,accrediting,vodacom,kirov,captaining,kelantan,logie,fervent,eamon,taper,bundeswehr,disproportionately,divination,slobodan,pundits,hispano,kinetics,reunites,makati,ceasing,statistician,amending,chiltern,eparchy,riverine,melanoma,narragansett,pagans,raged,toppled,breaching,zadar,holby,dacian,ochre,velodrome,disparities,amphoe,sedans,webpage,williamsport,lachlan,groton,baring,swastika,heliport,unwillingness,razorbacks,exhibitors,foodstuffs,impacting,tithe,appendages,dermot,subtypes,nurseries,balinese,simulating,stary,remakes,mundi,chautauqua,geologically,stockade,hakka,dilute,kalimantan,pahang,overlapped,fredericton,baha'u'llah,jahangir,damping,benefactors,shomali,triumphal,cieszyn,paradigms,shielded,reggaeton,maharishi,zambian,shearing,golestan,mirroring,partitioning,flyover,songbook,incandescent,merrimack,huguenots,sangeet,vulnerabilities,trademarked,drydock,tantric,honoris,queenstown,labelling,iterative,enlists,statesmen,anglicans,herge,qinghai,burgundian,islami,delineated,zhuge,aggregated,banknote,qatari,suitably,tapestries,asymptotic,charleroi,majorities,pyramidellidae,leanings,climactic,tahir,ramsar,suppressor,revisionist,trawler,ernakulam,penicillium,categorization,slits,entitlement,collegium,earths,benefice,pinochet,puritans,loudspeaker,stockhausen,eurocup,roskilde,alois,jaroslav,rhondda,boutiques,vigor,neurotransmitter,ansar,malden,ferdinando,sported,relented,intercession,camberwell,wettest,thunderbolts,positional,oriel,cloverleaf,penalized,shoshone,rajkumar,completeness,sharjah,chromosomal,belgians,woolen,ultrasonic,sequentially,boleyn,mordella,microsystems,initiator,elachista,mineralogy,rhododendron,integrals,compostela,hamza,sawmills,stadio,berlioz,maidens,stonework,yachting,tappeh,myocardial,laborer,workstations,costumed,nicaea,lanark,roundtable,mashhad,nablus,algonquian,stuyvesant,sarkar,heroines,diwan,laments,intonation,intrigues,almaty,feuded,grandes,algarve,rehabilitate,macrophages,cruciate,dismayed,heuristic,eliezer,kozhikode,covalent,finalised,dimorphism,yaroslavl,overtaking,leverkusen,middlebury,feeders,brookings,speculates,insoluble,lodgings,jozsef,cysteine,shenyang,habilitation,spurious,brainchild,mtdna,comique,albedo,recife,partick,broadening,shahi,orientated,himalaya,swabia,palme,mennonites,spokeswoman,conscripts,sepulchre,chartres,eurozone,scaffold,invertebrate,parishad,bagan,heian,watercolors,basse,supercomputer,commences,tarragona,plainfield,arthurian,functor,identically,murex,chronicling,pressings,burrowing,histoire,guayaquil,goalkeeping,differentiable,warburg,machining,aeneas,kanawha,holocene,ramesses,reprisal,qingdao,avatars,turkestan,cantatas,besieging,repudiated,teamsters,equipping,hydride,ahmadiyya,euston,bottleneck,computations,terengganu,kalinga,stela,rediscovery,'this,azhar,stylised,karelia,polyethylene,kansai,motorised,lounges,normalization,calculators,1700s,goalkeepers,unfolded,commissary,cubism,vignettes,multiverse,heaters,briton,sparingly,childcare,thorium,plock,riksdag,eunuchs,catalysis,limassol,perce,uncensored,whitlam,ulmus,unites,mesopotamian,refraction,biodiesel,forza,fulda,unseated,mountbatten,shahrak,selenium,osijek,mimicking,antimicrobial,axons,simulcasting,donizetti,swabian,sportsmen,hafiz,neared,heraclius,locates,evaded,subcarpathian,bhubaneswar,negeri,jagannath,thaksin,aydin,oromo,lateran,goldsmiths,multiculturalism,cilia,mihai,evangelists,lorient,qajar,polygons,vinod,mechanised,anglophone,prefabricated,mosses,supervillain,airliners,biofuels,iodide,innovators,valais,wilberforce,logarithm,intelligentsia,dissipation,sanctioning,duchies,aymara,porches,simulators,mostar,telepathic,coaxial,caithness,burghs,fourths,stratification,joaquim,scribes,meteorites,monarchist,germination,vries,desiring,replenishment,istria,winemaking,tammany,troupes,hetman,lanceolate,pelagic,triptych,primeira,scant,outbound,hyphae,denser,bentham,basie,normale,executes,ladislaus,kontinental,herat,cruiserweight,activision,customization,manoeuvres,inglewood,northwood,waveform,investiture,inpatient,alignments,kiryat,rabat,archimedes,ustad,monsanto,archetypal,kirkby,sikhism,correspondingly,catskill,overlaid,petrels,widowers,unicameral,federalists,metalcore,gamerankings,mussel,formula_34,lymphocytes,cystic,southgate,vestiges,immortals,kalam,strove,amazons,pocono,sociologists,sopwith,adheres,laurens,caregivers,inspecting,transylvanian,rebroadcast,rhenish,miserables,pyrams,blois,newtonian,carapace,redshirt,gotland,nazir,unilever,distortions,linebackers,federalism,mombasa,lumen,bernoulli,favouring,aligarh,denounce,steamboats,dnieper,stratigraphic,synths,bernese,umass,icebreaker,guanajuato,heisenberg,boldly,diodes,ladakh,dogmatic,scriptwriter,maritimes,battlestar,symposia,adaptable,toluca,bhavan,nanking,ieyasu,picardy,soybean,adalbert,brompton,deutsches,brezhnev,glandular,laotian,hispanicized,ibadan,personification,dalit,yamuna,regio,dispensed,yamagata,zweibrucken,revising,fandom,stances,participle,flavours,khitan,vertebral,crores,mayaguez,dispensation,guntur,undefined,harpercollins,unionism,meena,leveling,philippa,refractory,telstra,judea,attenuation,pylons,elaboration,elegy,edging,gracillariidae,residencies,absentia,reflexive,deportations,dichotomy,stoves,sanremo,shimon,menachem,corneal,conifers,mordellidae,facsimile,diagnoses,cowper,citta,viticulture,divisive,riverview,foals,mystics,polyhedron,plazas,airspeed,redgrave,motherland,impede,multiplicity,barrichello,airships,pharmacists,harvester,clays,payloads,differentiating,popularize,caesars,tunneling,stagnant,circadian,indemnity,sensibilities,musicology,prefects,serfs,metra,lillehammer,carmarthenshire,kiosks,welland,barbican,alkyl,tillandsia,gatherers,asociacion,showings,bharati,brandywine,subversion,scalable,pfizer,dawla,barium,dardanelles,nsdap,konig,ayutthaya,hodgkin,sedimentation,completions,purchasers,sponsorships,maximizing,banked,taoism,minot,enrolls,fructose,aspired,capuchin,outages,artois,carrollton,totality,osceola,pawtucket,fontainebleau,converged,queretaro,competencies,botha,allotments,sheaf,shastri,obliquely,banding,catharines,outwardly,monchengladbach,driest,contemplative,cassini,ranga,pundit,kenilworth,tiananmen,disulfide,formula_35,townlands,codice_3,looping,caravans,rachmaninoff,segmentation,fluorine,anglicised,gnostic,dessau,discern,reconfigured,altrincham,rebounding,battlecruiser,ramblers,1770s,convective,triomphe,miyagi,mourners,instagram,aloft,breastfeeding,courtyards,folkestone,changsha,kumamoto,saarland,grayish,provisionally,appomattox,uncial,classicism,mahindra,elapsed,supremes,monophyletic,cautioned,formula_36,noblewoman,kernels,sucre,swaps,bengaluru,grenfell,epicenter,rockhampton,worshipful,licentiate,metaphorical,malankara,amputated,wattle,palawan,tankobon,nobunaga,polyhedra,transduction,jilin,syrians,affinities,fluently,emanating,anglicized,sportscar,botanists,altona,dravida,chorley,allocations,kunming,luanda,premiering,outlived,mesoamerica,lingual,dissipating,impairments,attenborough,balustrade,emulator,bakhsh,cladding,increments,ascents,workington,qal'eh,winless,categorical,petrel,emphasise,dormer,toros,hijackers,telescopic,solidly,jankovic,cession,gurus,madoff,newry,subsystems,northside,talib,englishmen,farnese,holographic,electives,argonne,scrivener,predated,brugge,nauvoo,catalyses,soared,siddeley,graphically,powerlifting,funicular,sungai,coercive,fusing,uncertainties,locos,acetic,diverge,wedgwood,dressings,tiebreaker,didactic,vyacheslav,acreage,interplanetary,battlecruisers,sunbury,alkaloids,hairpin,automata,wielkie,interdiction,plugins,monkees,nudibranch,esporte,approximations,disabling,powering,characterisation,ecologically,martinsville,termen,perpetuated,lufthansa,ascendancy,motherboard,bolshoi,athanasius,prunus,dilution,invests,nonzero,mendocino,charan,banque,shaheed,counterculture,unita,voivode,hospitalization,vapour,supermarine,resistor,steppes,osnabruck,intermediates,benzodiazepines,sunnyside,privatized,geopolitical,ponta,beersheba,kievan,embody,theoretic,sangh,cartographer,blige,rotors,thruway,battlefields,discernible,demobilized,broodmare,colouration,sagas,policymakers,serialization,augmentation,hoare,frankfurter,transnistria,kinases,detachable,generational,converging,antiaircraft,khaki,bimonthly,coadjutor,arkhangelsk,kannur,buffers,livonian,northwich,enveloped,cysts,yokozuna,herne,beeching,enron,virginian,woollen,excepting,competitively,outtakes,recombinant,hillcrest,clearances,pathe,cumbersome,brasov,u.s.a,likud,christiania,cruciform,hierarchies,wandsworth,lupin,resins,voiceover,sitar,electrochemical,mediacorp,typhus,grenadiers,hepatic,pompeii,weightlifter,bosniak,oxidoreductase,undersecretary,rescuers,ranji,seleucid,analysing,exegesis,tenancy,toure,kristiansand,110th,carillon,minesweepers,poitou,acceded,palladian,redevelop,naismith,rifled,proletariat,shojo,hackensack,harvests,endpoint,kuban,rosenborg,stonehenge,authorisation,jacobean,revocation,compatriots,colliding,undetermined,okayama,acknowledgment,angelou,fresnel,chahar,ethereal,mg/kg,emmet,mobilised,unfavourable,cultura,characterizing,parsonage,skeptics,expressways,rabaul,medea,guardsmen,visakhapatnam,caddo,homophobic,elmwood,encircling,coexistence,contending,seljuk,mycologist,infertility,moliere,insolvent,covenants,underpass,holme,landesliga,workplaces,delinquency,methamphetamine,contrived,tableau,tithes,overlying,usurped,contingents,spares,oligocene,molde,beatification,mordechai,balloting,pampanga,navigators,flowered,debutant,codec,orogeny,newsletters,solon,ambivalent,ubisoft,archdeaconry,harpers,kirkus,jabal,castings,kazhagam,sylhet,yuwen,barnstaple,amidships,causative,isuzu,watchtower,granules,canaveral,remuneration,insurer,payout,horizonte,integrative,attributing,kiwis,skanderbeg,asymmetry,gannett,urbanism,disassembled,unaltered,precluded,melodifestivalen,ascends,plugin,gurkha,bisons,stakeholder,industrialisation,abbotsford,sextet,bustling,uptempo,slavia,choreographers,midwives,haram,javed,gazetteer,subsection,natively,weighting,lysine,meera,redbridge,muchmusic,abruzzo,adjoins,unsustainable,foresters,kbit/s,cosmopterigidae,secularism,poetics,causality,phonograph,estudiantes,ceausescu,universitario,adjoint,applicability,gastropods,nagaland,kentish,mechelen,atalanta,woodpeckers,lombards,gatineau,romansh,avraham,acetylcholine,perturbation,galois,wenceslaus,fuzhou,meandering,dendritic,sacristy,accented,katha,therapeutics,perceives,unskilled,greenhouses,analogues,chaldean,timbre,sloped,volodymyr,sadiq,maghreb,monogram,rearguard,caucuses,mures,metabolite,uyezd,determinism,theosophical,corbet,gaels,disruptions,bicameral,ribosomal,wolseley,clarksville,watersheds,tarsi,radon,milanese,discontinuous,aristotelian,whistleblower,representational,hashim,modestly,localised,atrial,hazara,ravana,troyes,appointees,rubus,morningside,amity,aberdare,ganglia,wests,zbigniew,aerobatic,depopulated,corsican,introspective,twinning,hardtop,shallower,cataract,mesolithic,emblematic,graced,lubrication,republicanism,voronezh,bastions,meissen,irkutsk,oboes,hokkien,sprites,tenet,individualist,capitulated,oakville,dysentery,orientalist,hillsides,keywords,elicited,incised,lagging,apoel,lengthening,attractiveness,marauders,sportswriter,decentralization,boltzmann,contradicts,draftsman,precipitate,solihull,norske,consorts,hauptmann,riflemen,adventists,syndromes,demolishing,customize,continuo,peripherals,seamlessly,linguistically,bhushan,orphanages,paraul,lessened,devanagari,quarto,responders,patronymic,riemannian,altoona,canonization,honouring,geodetic,exemplifies,republica,enzymatic,porters,fairmount,pampa,sufferers,kamchatka,conjugated,coachella,uthman,repositories,copious,headteacher,awami,phoneme,homomorphism,franconian,moorland,davos,quantified,kamloops,quarks,mayoralty,weald,peacekeepers,valerian,particulate,insiders,perthshire,caches,guimaraes,piped,grenadines,kosciuszko,trombonist,artemisia,covariance,intertidal,soybeans,beatified,ellipse,fruiting,deafness,dnipropetrovsk,accrued,zealous,mandala,causation,junius,kilowatt,bakeries,montpelier,airdrie,rectified,bungalows,toleration,debian,pylon,trotskyist,posteriorly,two-and-a-half,herbivorous,islamists,poetical,donne,wodehouse,frome,allium,assimilate,phonemic,minaret,unprofitable,darpa,untenable,leaflet,bitcoin,zahir,thresholds,argentino,jacopo,bespoke,stratified,wellbeing,shiite,basaltic,timberwolves,secrete,taunts,marathons,isomers,carre,consecrators,penobscot,pitcairn,sakha,crosstown,inclusions,impassable,fenders,indre,uscgc,jordi,retinue,logarithmic,pilgrimages,railcar,cashel,blackrock,macroscopic,aligning,tabla,trestle,certify,ronson,palps,dissolves,thickened,silicate,taman,walsingham,hausa,lowestoft,rondo,oleksandr,cuyahoga,retardation,countering,cricketing,holborn,identifiers,hells,geophysics,infighting,sculpting,balaji,webbed,irradiation,runestone,trusses,oriya,sojourn,forfeiture,colonize,exclaimed,eucharistic,lackluster,glazing,northridge,gutenberg,stipulates,macroeconomic,priori,outermost,annular,udinese,insulating,headliner,godel,polytope,megalithic,salix,sharapova,derided,muskegon,braintree,plateaus,confers,autocratic,isomer,interstitial,stamping,omits,kirtland,hatchery,evidences,intifada,111th,podgorica,capua,motivating,nuneaton,jakub,korsakov,amitabh,mundial,monrovia,gluten,predictor,marshalling,d'orleans,levers,touchscreen,brantford,fricative,banishment,descendent,antagonism,ludovico,loudspeakers,formula_37,livelihoods,manassas,steamships,dewsbury,uppermost,humayun,lures,pinnacles,dependents,lecce,clumps,observatories,paleozoic,dedicating,samiti,draughtsman,gauls,incite,infringing,nepean,pythagorean,convents,triumvirate,seigneur,gaiman,vagrant,fossa,byproduct,serrated,renfrewshire,sheltering,achaemenid,dukedom,catchers,sampdoria,platelet,bielefeld,fluctuating,phenomenology,strikeout,ethnology,prospectors,woodworking,tatra,wildfires,meditations,agrippa,fortescue,qureshi,wojciech,methyltransferase,accusative,saatchi,amerindian,volcanism,zeeland,toyama,vladimirovich,allege,polygram,redox,budgeted,advisories,nematode,chipset,starscream,tonbridge,hardening,shales,accompanist,paraded,phonographic,whitefish,sportive,audiobook,kalisz,hibernation,latif,duels,ps200,coxeter,nayak,safeguarding,cantabria,minesweeping,zeiss,dunams,catholicos,sawtooth,ontological,nicobar,bridgend,unclassified,intrinsically,hanoverian,rabbitohs,kenseth,alcalde,northumbrian,raritan,septuagint,presse,sevres,origen,dandenong,peachtree,intersected,impeded,usages,hippodrome,novara,trajectories,customarily,yardage,inflected,yanow,kalan,taverns,liguria,librettist,intermarriage,1760s,courant,gambier,infanta,ptolemaic,ukulele,haganah,sceptical,manchukuo,plexus,implantation,hilal,intersex,efficiencies,arbroath,hagerstown,adelphi,diario,marais,matti,lifes,coining,modalities,divya,bletchley,conserving,ivorian,mithridates,generative,strikeforce,laymen,toponymy,pogrom,satya,meticulously,agios,dufferin,yaakov,fortnightly,cargoes,deterrence,prefrontal,przemysl,mitterrand,commemorations,chatsworth,gurdwara,abuja,chakraborty,badajoz,geometries,artiste,diatonic,ganglion,presides,marymount,nanak,cytokines,feudalism,storks,rowers,widens,politico,evangelicals,assailants,pittsfield,allowable,bijapur,telenovelas,dichomeris,glenelg,herbivores,keita,inked,radom,fundraisers,constantius,boheme,portability,komnenos,crystallography,derrida,moderates,tavistock,fateh,spacex,disjoint,bristles,commercialized,interwoven,empirically,regius,bulacan,newsday,showa,radicalism,yarrow,pleura,sayed,structuring,cotes,reminiscences,acetyl,edicts,escalators,aomori,encapsulated,legacies,bunbury,placings,fearsome,postscript,powerfully,keighley,hildesheim,amicus,crevices,deserters,benelux,aurangabad,freeware,ioannis,carpathians,chirac,seceded,prepaid,landlocked,naturalised,yanukovych,soundscan,blotch,phenotypic,determinants,twente,dictatorial,giessen,composes,recherche,pathophysiology,inventories,ayurveda,elevating,gravestone,degeneres,vilayet,popularizing,spartanburg,bloemfontein,previewed,renunciation,genotype,ogilvy,tracery,blacklisted,emissaries,diploid,disclosures,tupolev,shinjuku,antecedents,pennine,braganza,bhattacharya,countable,spectroscopic,ingolstadt,theseus,corroborated,compounding,thrombosis,extremadura,medallions,hasanabad,lambton,perpetuity,glycol,besancon,palaiologos,pandey,caicos,antecedent,stratum,laserdisc,novitiate,crowdfunding,palatal,sorceress,dassault,toughness,celle,cezanne,vientiane,tioga,hander,crossbar,gisborne,cursor,inspectorate,serif,praia,sphingidae,nameplate,psalter,ivanovic,sitka,equalised,mutineers,sergius,outgrowth,creationism,haredi,rhizomes,predominate,undertakings,vulgate,hydrothermal,abbeville,geodesic,kampung,physiotherapy,unauthorised,asteraceae,conservationist,minoan,supersport,mohammadabad,cranbrook,mentorship,legitimately,marshland,datuk,louvain,potawatomi,carnivores,levies,lyell,hymnal,regionals,tinto,shikoku,conformal,wanganui,beira,lleida,standstill,deloitte,formula_40,corbusier,chancellery,mixtapes,airtime,muhlenberg,formula_39,bracts,thrashers,prodigious,gironde,chickamauga,uyghurs,substitutions,pescara,batangas,gregarious,gijon,paleo,mathura,pumas,proportionally,hawkesbury,yucca,kristiania,funimation,fluted,eloquence,mohun,aftermarket,chroniclers,futurist,nonconformist,branko,mannerisms,lesnar,opengl,altos,retainers,ashfield,shelbourne,sulaiman,divisie,gwent,locarno,lieder,minkowski,bivalve,redeployed,cartography,seaway,bookings,decays,ostend,antiquaries,pathogenesis,formula_38,chrysalis,esperance,valli,motogp,homelands,bridged,bloor,ghazal,vulgaris,baekje,prospector,calculates,debtors,hesperiidae,titian,returner,landgrave,frontenac,kelowna,pregame,castelo,caius,canoeist,watercolours,winterthur,superintendents,dissonance,dubstep,adorn,matic,salih,hillel,swordsman,flavoured,emitter,assays,monongahela,deeded,brazzaville,sufferings,babylonia,fecal,umbria,astrologer,gentrification,frescos,phasing,zielona,ecozone,candido,manoj,quadrilateral,gyula,falsetto,prewar,puntland,infinitive,contraceptive,bakhtiari,ohrid,socialization,tailplane,evoking,havelock,macapagal,plundering,104th,keynesian,templars,phrasing,morphologically,czestochowa,humorously,catawba,burgas,chiswick,ellipsoid,kodansha,inwards,gautama,katanga,orthopaedic,heilongjiang,sieges,outsourced,subterminal,vijayawada,hares,oration,leitrim,ravines,manawatu,cryogenic,tracklisting,about.com,ambedkar,degenerated,hastened,venturing,lobbyists,shekhar,typefaces,northcote,rugen,'good,ornithology,asexual,hemispheres,unsupported,glyphs,spoleto,epigenetic,musicianship,donington,diogo,kangxi,bisected,polymorphism,megawatt,salta,embossed,cheetahs,cruzeiro,unhcr,aristide,rayleigh,maturing,indonesians,noire,llano,ffffff,camus,purges,annales,convair,apostasy,algol,phage,apaches,marketers,aldehyde,pompidou,kharkov,forgeries,praetorian,divested,retrospectively,gornji,scutellum,bitumen,pausanias,magnification,imitations,nyasaland,geographers,floodlights,athlone,hippolyte,expositions,clarinetist,razak,neutrinos,rotax,sheykh,plush,interconnect,andalus,cladogram,rudyard,resonator,granby,blackfriars,placido,windscreen,sahel,minamoto,haida,cations,emden,blackheath,thematically,blacklist,pawel,disseminating,academical,undamaged,raytheon,harsher,powhatan,ramachandran,saddles,paderborn,capping,zahra,prospecting,glycine,chromatin,profane,banska,helmand,okinawan,dislocation,oscillators,insectivorous,foyle,gilgit,autonomic,tuareg,sluice,pollinated,multiplexed,granary,narcissus,ranchi,staines,nitra,goalscoring,midwifery,pensioners,algorithmic,meetinghouse,biblioteca,besar,narva,angkor,predate,lohan,cyclical,detainee,occipital,eventing,faisalabad,dartmoor,kublai,courtly,resigns,radii,megachilidae,cartels,shortfall,xhosa,unregistered,benchmarks,dystopian,bulkhead,ponsonby,jovanovic,accumulates,papuan,bhutanese,intuitively,gotaland,headliners,recursion,dejan,novellas,diphthongs,imbued,withstood,analgesic,amplify,powertrain,programing,maidan,alstom,affirms,eradicated,summerslam,videogame,molla,severing,foundered,gallium,atmospheres,desalination,shmuel,howmeh,catolica,bossier,reconstructing,isolates,lyase,tweets,unconnected,tidewater,divisible,cohorts,orebro,presov,furnishing,folklorist,simplifying,centrale,notations,factorization,monarchies,deepen,macomb,facilitation,hennepin,declassified,redrawn,microprocessors,preliminaries,enlarging,timeframe,deutschen,shipbuilders,patiala,ferrous,aquariums,genealogies,vieux,unrecognized,bridgwater,tetrahedral,thule,resignations,gondwana,registries,agder,dataset,felled,parva,analyzer,worsen,coleraine,columella,blockaded,polytechnique,reassembled,reentry,narvik,greys,nigra,knockouts,bofors,gniezno,slotted,hamasaki,ferrers,conferring,thirdly,domestication,photojournalist,universality,preclude,ponting,halved,thereupon,photosynthetic,ostrava,mismatch,pangasinan,intermediaries,abolitionists,transited,headings,ustase,radiological,interconnection,dabrowa,invariants,honorius,preferentially,chantilly,marysville,dialectical,antioquia,abstained,gogol,dirichlet,muricidae,symmetries,reproduces,brazos,fatwa,bacillus,ketone,paribas,chowk,multiplicative,dermatitis,mamluks,devotes,adenosine,newbery,meditative,minefields,inflection,oxfam,conwy,bystrica,imprints,pandavas,infinitesimal,conurbation,amphetamine,reestablish,furth,edessa,injustices,frankston,serjeant,4x200,khazar,sihanouk,longchamp,stags,pogroms,coups,upperparts,endpoints,infringed,nuanced,summing,humorist,pacification,ciaran,jamaat,anteriorly,roddick,springboks,faceted,hypoxia,rigorously,cleves,fatimid,ayurvedic,tabled,ratna,senhora,maricopa,seibu,gauguin,holomorphic,campgrounds,amboy,coordinators,ponderosa,casemates,ouachita,nanaimo,mindoro,zealander,rimsky,cluny,tomaszow,meghalaya,caetano,tilak,roussillon,landtag,gravitation,dystrophy,cephalopods,trombones,glens,killarney,denominated,anthropogenic,pssas,roubaix,carcasses,montmorency,neotropical,communicative,rabindranath,ordinated,separable,overriding,surged,sagebrush,conciliation,codice_4,durrani,phosphatase,qadir,votive,revitalized,taiyuan,tyrannosaurus,graze,slovaks,nematodes,environmentalism,blockhouse,illiteracy,schengen,ecotourism,alternation,conic,wields,hounslow,blackfoot,kwame,ambulatory,volhynia,hordaland,croton,piedras,rohit,drava,conceptualized,birla,illustrative,gurgaon,barisal,tutsi,dezong,nasional,polje,chanson,clarinets,krasnoyarsk,aleksandrovich,cosmonaut,d'este,palliative,midseason,silencing,wardens,durer,girders,salamanders,torrington,supersonics,lauda,farid,circumnavigation,embankments,funnels,bajnoksag,lorries,cappadocia,jains,warringah,retirees,burgesses,equalization,cusco,ganesan,algal,amazonian,lineups,allocating,conquerors,usurper,mnemonic,predating,brahmaputra,ahmadabad,maidenhead,numismatic,subregion,encamped,reciprocating,freebsd,irgun,tortoises,governorates,zionists,airfoil,collated,ajmer,fiennes,etymological,polemic,chadian,clerestory,nordiques,fluctuated,calvados,oxidizing,trailhead,massena,quarrels,dordogne,tirunelveli,pyruvate,pulsed,athabasca,sylar,appointee,serer,japonica,andronikos,conferencing,nicolaus,chemin,ascertained,incited,woodbine,helices,hospitalised,emplacements,to/from,orchestre,tyrannical,pannonia,methodism,pop/rock,shibuya,berbers,despot,seaward,westpac,separator,perpignan,alamein,judeo,publicize,quantization,ethniki,gracilis,menlo,offside,oscillating,unregulated,succumbing,finnmark,metrical,suleyman,raith,sovereigns,bundesstrasse,kartli,fiduciary,darshan,foramen,curler,concubines,calvinism,larouche,bukhara,sophomores,mohanlal,lutheranism,monomer,eamonn,'black,uncontested,immersive,tutorials,beachhead,bindings,permeable,postulates,comite,transformative,indiscriminate,hofstra,associacao,amarna,dermatology,lapland,aosta,babur,unambiguous,formatting,schoolboys,gwangju,superconducting,replayed,adherent,aureus,compressors,forcible,spitsbergen,boulevards,budgeting,nossa,annandale,perumal,interregnum,sassoon,kwajalein,greenbrier,caldas,triangulation,flavius,increment,shakhtar,nullified,pinfall,nomen,microfinance,depreciation,cubist,steeper,splendour,gruppe,everyman,chasers,campaigners,bridle,modality,percussive,darkly,capes,velar,picton,triennial,factional,padang,toponym,betterment,norepinephrine,112th,estuarine,diemen,warehousing,morphism,ideologically,pairings,immunization,crassus,exporters,sefer,flocked,bulbous,deseret,booms,calcite,bohol,elven,groot,pulau,citigroup,wyeth,modernizing,layering,pastiche,complies,printmaker,condenser,theropod,cassino,oxyrhynchus,akademie,trainings,lowercase,coxae,parte,chetniks,pentagonal,keselowski,monocoque,morsi,reticulum,meiosis,clapboard,recoveries,tinge,an/fps,revista,sidon,livre,epidermis,conglomerates,kampong,congruent,harlequins,tergum,simplifies,epidemiological,underwriting,tcp/ip,exclusivity,multidimensional,mysql,columbine,ecologist,hayat,sicilies,levees,handset,aesop,usenet,pacquiao,archiving,alexandrian,compensatory,broadsheet,annotation,bahamian,d'affaires,interludes,phraya,shamans,marmara,customizable,immortalized,ambushes,chlorophyll,diesels,emulsion,rheumatoid,voluminous,screenwriters,tailoring,sedis,runcorn,democratization,bushehr,anacostia,constanta,antiquary,sixtus,radiate,advaita,antimony,acumen,barristers,reichsbahn,ronstadt,symbolist,pasig,cursive,secessionist,afrikaner,munnetra,inversely,adsorption,syllabic,moltke,idioms,midline,olimpico,diphosphate,cautions,radziwill,mobilisation,copelatus,trawlers,unicron,bhaskar,financiers,minimalism,derailment,marxists,oireachtas,abdicate,eigenvalue,zafar,vytautas,ganguly,chelyabinsk,telluride,subordination,ferried,dived,vendee,pictish,dimitrov,expiry,carnation,cayley,magnitudes,lismore,gretna,sandwiched,unmasked,sandomierz,swarthmore,tetra,nanyang,pevsner,dehradun,mormonism,rashi,complying,seaplanes,ningbo,cooperates,strathcona,mornington,mestizo,yulia,edgbaston,palisade,ethno,polytopes,espirito,tymoshenko,pronunciations,paradoxical,taichung,chipmunks,erhard,maximise,accretion,kanda,`abdu'l,narrowest,umpiring,mycenaean,divisor,geneticist,ceredigion,barque,hobbyists,equates,auxerre,spinose,cheil,sweetwater,guano,carboxylic,archiv,tannery,cormorant,agonists,fundacion,anbar,tunku,hindrance,meerut,concordat,secunderabad,kachin,achievable,murfreesboro,comprehensively,forges,broadest,synchronised,speciation,scapa,aliyev,conmebol,tirelessly,subjugated,pillaged,udaipur,defensively,lakhs,stateless,haasan,headlamps,patterning,podiums,polyphony,mcmurdo,mujer,vocally,storeyed,mucosa,multivariate,scopus,minimizes,formalised,certiorari,bourges,populate,overhanging,gaiety,unreserved,borromeo,woolworths,isotopic,bashar,purify,vertebra,medan,juxtaposition,earthwork,elongation,chaudhary,schematic,piast,steeped,nanotubes,fouls,achaea,legionnaires,abdur,qmjhl,embraer,hardback,centerville,ilocos,slovan,whitehorse,mauritian,moulding,mapuche,donned,provisioning,gazprom,jonesboro,audley,lightest,calyx,coldwater,trigonometric,petroglyphs,psychoanalyst,congregate,zambezi,fissure,supervises,bexley,etobicoke,wairarapa,tectonics,emphasises,formula_41,debugging,linfield,spatially,ionizing,ungulates,orinoco,clades,erlangen,news/talk,vols.,ceara,yakovlev,finsbury,entanglement,fieldhouse,graphene,intensifying,grigory,keyong,zacatecas,ninian,allgemeine,keswick,societa,snorri,femininity,najib,monoclonal,guyanese,postulate,huntly,abbeys,machinist,yunus,emphasising,ishaq,urmia,bremerton,pretenders,lumiere,thoroughfares,chikara,dramatized,metathorax,taiko,transcendence,wycliffe,retrieves,umpired,steuben,racehorses,taylors,kuznetsov,montezuma,precambrian,canopies,gaozong,propodeum,disestablished,retroactive,shoreham,rhizome,doubleheader,clinician,diwali,quartzite,shabaab,agassiz,despatched,stormwater,luxemburg,callao,universidade,courland,skane,glyph,dormers,witwatersrand,curacy,qualcomm,nansen,entablature,lauper,hausdorff,lusaka,ruthenian,360deg,cityscape,douai,vaishnava,spars,vaulting,rationalist,gygax,sequestration,typology,pollinates,accelerators,leben,colonials,cenotaph,imparted,carthaginians,equaled,rostrum,gobind,bodhisattva,oberst,bicycling,arabi,sangre,biophysics,hainaut,vernal,lunenburg,apportioned,finches,lajos,nenad,repackaged,zayed,nikephoros,r.e.m,swaminarayan,gestalt,unplaced,crags,grohl,sialkot,unsaturated,gwinnett,linemen,forays,palakkad,writs,instrumentalists,aircrews,badged,terrapins,180deg,oneness,commissariat,changi,pupation,circumscribed,contador,isotropic,administrated,fiefs,nimes,intrusions,minoru,geschichte,nadph,tainan,changchun,carbondale,frisia,swapo,evesham,hawai'i,encyclopedic,transporters,dysplasia,formula_42,onsite,jindal,guetta,judgements,narbonne,permissions,paleogene,rationalism,vilna,isometric,subtracted,chattahoochee,lamina,missa,greville,pervez,lattices,persistently,crystallization,timbered,hawaiians,fouling,interrelated,masood,ripening,stasi,gamal,visigothic,warlike,cybernetics,tanjung,forfar,cybernetic,karelian,brooklands,belfort,greifswald,campeche,inexplicably,refereeing,understory,uninterested,prius,collegiately,sefid,sarsfield,categorize,biannual,elsevier,eisteddfod,declension,autonoma,procuring,misrepresentation,novelization,bibliographic,shamanism,vestments,potash,eastleigh,ionized,turan,lavishly,scilly,balanchine,importers,parlance,'that,kanyakumari,synods,mieszko,crossovers,serfdom,conformational,legislated,exclave,heathland,sadar,differentiates,propositional,konstantinos,photoshop,manche,vellore,appalachia,orestes,taiga,exchanger,grozny,invalidated,baffin,spezia,staunchly,eisenach,robustness,virtuosity,ciphers,inlets,bolagh,understandings,bosniaks,parser,typhoons,sinan,luzerne,webcomic,subtraction,jhelum,businessweek,ceske,refrained,firebox,mitigated,helmholtz,dilip,eslamabad,metalwork,lucan,apportionment,provident,gdynia,schooners,casement,danse,hajjiabad,benazir,buttress,anthracite,newsreel,wollaston,dispatching,cadastral,riverboat,provincetown,nantwich,missal,irreverent,juxtaposed,darya,ennobled,electropop,stereoscopic,maneuverability,laban,luhansk,udine,collectibles,haulage,holyrood,materially,supercharger,gorizia,shkoder,townhouses,pilate,layoffs,folkloric,dialectic,exuberant,matures,malla,ceuta,citizenry,crewed,couplet,stopover,transposition,tradesmen,antioxidant,amines,utterance,grahame,landless,isere,diction,appellant,satirist,urbino,intertoto,subiaco,antonescu,nehemiah,ubiquitin,emcee,stourbridge,fencers,103rd,wranglers,monteverdi,watertight,expounded,xiamen,manmohan,pirie,threefold,antidepressant,sheboygan,grieg,cancerous,diverging,bernini,polychrome,fundamentalism,bihari,critiqued,cholas,villers,tendulkar,dafydd,vastra,fringed,evangelization,episcopalian,maliki,sana'a,ashburton,trianon,allegany,heptathlon,insufficiently,panelists,pharrell,hexham,amharic,fertilized,plumes,cistern,stratigraphy,akershus,catalans,karoo,rupee,minuteman,quantification,wigmore,leutnant,metanotum,weeknights,iridescent,extrasolar,brechin,deuterium,kuching,lyricism,astrakhan,brookhaven,euphorbia,hradec,bhagat,vardar,aylmer,positron,amygdala,speculators,unaccompanied,debrecen,slurry,windhoek,disaffected,rapporteur,mellitus,blockers,fronds,yatra,sportsperson,precession,physiologist,weeknight,pidgin,pharma,condemns,standardize,zetian,tibor,glycoprotein,emporia,cormorants,amalie,accesses,leonhard,denbighshire,roald,116th,will.i.am,symbiosis,privatised,meanders,chemnitz,jabalpur,shing,secede,ludvig,krajina,homegrown,snippets,sasanian,euripides,peder,cimarron,streaked,graubunden,kilimanjaro,mbeki,middleware,flensburg,bukovina,lindwall,marsalis,profited,abkhaz,polis,camouflaged,amyloid,morgantown,ovoid,bodleian,morte,quashed,gamelan,juventud,natchitoches,storyboard,freeview,enumeration,cielo,preludes,bulawayo,1600s,olympiads,multicast,faunal,asura,reinforces,puranas,ziegfeld,handicraft,seamount,kheil,noche,hallmarks,dermal,colorectal,encircle,hessen,umbilicus,sunnis,leste,unwin,disclosing,superfund,montmartre,refuelling,subprime,kolhapur,etiology,bismuth,laissez,vibrational,mazar,alcoa,rumsfeld,recurve,ticonderoga,lionsgate,onlookers,homesteads,filesystem,barometric,kingswood,biofuel,belleza,moshav,occidentalis,asymptomatic,northeasterly,leveson,huygens,numan,kingsway,primogeniture,toyotomi,yazoo,limpets,greenbelt,booed,concurrence,dihedral,ventrites,raipur,sibiu,plotters,kitab,109th,trackbed,skilful,berthed,effendi,fairing,sephardi,mikhailovich,lockyer,wadham,invertible,paperbacks,alphabetic,deuteronomy,constitutive,leathery,greyhounds,estoril,beechcraft,poblacion,cossidae,excreted,flamingos,singha,olmec,neurotransmitters,ascoli,nkrumah,forerunners,dualism,disenchanted,benefitted,centrum,undesignated,noida,o'donoghue,collages,egrets,egmont,wuppertal,cleave,montgomerie,pseudomonas,srinivasa,lymphatic,stadia,resold,minima,evacuees,consumerism,ronde,biochemist,automorphism,hollows,smuts,improvisations,vespasian,bream,pimlico,eglin,colne,melancholic,berhad,ousting,saale,notaulices,ouest,hunslet,tiberias,abdomina,ramsgate,stanislas,donbass,pontefract,sucrose,halts,drammen,chelm,l'arc,taming,trolleys,konin,incertae,licensees,scythian,giorgos,dative,tanglewood,farmlands,o'keeffe,caesium,romsdal,amstrad,corte,oglethorpe,huntingdonshire,magnetization,adapts,zamosc,shooto,cuttack,centrepiece,storehouse,winehouse,morbidity,woodcuts,ryazan,buddleja,buoyant,bodmin,estero,austral,verifiable,periyar,christendom,curtail,shura,kaifeng,cotswold,invariance,seafaring,gorica,androgen,usman,seabird,forecourt,pekka,juridical,audacious,yasser,cacti,qianlong,polemical,d'amore,espanyol,distrito,cartographers,pacifism,serpents,backa,nucleophilic,overturning,duplicates,marksman,oriente,vuitton,oberleutnant,gielgud,gesta,swinburne,transfiguration,1750s,retaken,celje,fredrikstad,asuka,cropping,mansard,donates,blacksmiths,vijayanagara,anuradhapura,germinate,betis,foreshore,jalandhar,bayonets,devaluation,frazione,ablaze,abidjan,approvals,homeostasis,corollary,auden,superfast,redcliffe,luxembourgish,datum,geraldton,printings,ludhiana,honoree,synchrotron,invercargill,hurriedly,108th,three-and-a-half,colonist,bexar,limousin,bessemer,ossetian,nunataks,buddhas,rebuked,thais,tilburg,verdicts,interleukin,unproven,dordrecht,solent,acclamation,muammar,dahomey,operettas,4x400,arrears,negotiators,whitehaven,apparitions,armoury,psychoactive,worshipers,sculptured,elphinstone,airshow,kjell,o'callaghan,shrank,professorships,predominance,subhash,coulomb,sekolah,retrofitted,samos,overthrowing,vibrato,resistors,palearctic,datasets,doordarshan,subcutaneous,compiles,immorality,patchwork,trinidadian,glycogen,pronged,zohar,visigoths,freres,akram,justo,agora,intakes,craiova,playwriting,bukhari,militarism,iwate,petitioners,harun,wisla,inefficiency,vendome,ledges,schopenhauer,kashi,entombed,assesses,tenn.,noumea,baguio,carex,o'donovan,filings,hillsdale,conjectures,blotches,annuals,lindisfarne,negated,vivek,angouleme,trincomalee,cofactor,verkhovna,backfield,twofold,automaker,rudra,freighters,darul,gharana,busway,formula_43,plattsburgh,portuguesa,showrunner,roadmap,valenciennes,erdos,biafra,spiritualism,transactional,modifies,carne,107th,cocos,gcses,tiverton,radiotherapy,meadowlands,gunma,srebrenica,foxtel,authenticated,enslavement,classicist,klaipeda,minstrels,searchable,infantrymen,incitement,shiga,nadp+,urals,guilders,banquets,exteriors,counterattacks,visualized,diacritics,patrimony,svensson,transepts,prizren,telegraphy,najaf,emblazoned,coupes,effluent,ragam,omani,greensburg,taino,flintshire,cd/dvd,lobbies,narrating,cacao,seafarers,bicolor,collaboratively,suraj,floodlit,sacral,puppetry,tlingit,malwa,login,motionless,thien,overseers,vihar,golem,specializations,bathhouse,priming,overdubs,winningest,archetypes,uniao,acland,creamery,slovakian,lithographs,maryborough,confidently,excavating,stillborn,ramallah,audiencia,alava,ternary,hermits,rostam,bauxite,gawain,lothair,captions,gulfstream,timelines,receded,mediating,petain,bastia,rudbar,bidders,disclaimer,shrews,tailings,trilobites,yuriy,jamil,demotion,gynecology,rajinikanth,madrigals,ghazni,flycatchers,vitebsk,bizet,computationally,kashgar,refinements,frankford,heralds,europe/africa,levante,disordered,sandringham,queues,ransacked,trebizond,verdes,comedie,primitives,figurine,organists,culminate,gosport,coagulation,ferrying,hoyas,polyurethane,prohibitive,midfielders,ligase,progesterone,defectors,sweetened,backcountry,diodorus,waterside,nieuport,khwaja,jurong,decried,gorkha,ismaili,300th,octahedral,kindergartens,paseo,codification,notifications,disregarding,risque,reconquista,shortland,atolls,texarkana,perceval,d'etudes,kanal,herbicides,tikva,nuova,gatherer,dissented,soweto,dexterity,enver,bacharach,placekicker,carnivals,automate,maynooth,symplectic,chetnik,militaire,upanishads,distributive,strafing,championing,moiety,miliband,blackadder,enforceable,maung,dimer,stadtbahn,diverges,obstructions,coleophoridae,disposals,shamrocks,aural,banca,bahru,coxed,grierson,vanadium,watermill,radiative,ecoregions,berets,hariri,bicarbonate,evacuations,mallee,nairn,rushden,loggia,slupsk,satisfactorily,milliseconds,cariboo,reine,cyclo,pigmentation,postmodernism,aqueducts,vasari,bourgogne,dilemmas,liquefied,fluminense,alloa,ibaraki,tenements,kumasi,humerus,raghu,labours,putsch,soundcloud,bodybuilder,rakyat,domitian,pesaro,translocation,sembilan,homeric,enforcers,tombstones,lectureship,rotorua,salamis,nikolaos,inferences,superfortress,lithgow,surmised,undercard,tarnow,barisan,stingrays,federacion,coldstream,haverford,ornithological,heerenveen,eleazar,jyoti,murali,bamako,riverbed,subsidised,theban,conspicuously,vistas,conservatorium,madrasa,kingfishers,arnulf,credential,syndicalist,sheathed,discontinuity,prisms,tsushima,coastlines,escapees,vitis,optimizing,megapixel,overground,embattled,halide,sprinters,buoys,mpumalanga,peculiarities,106th,roamed,menezes,macao,prelates,papyri,freemen,dissertations,irishmen,pooled,sverre,reconquest,conveyance,subjectivity,asturian,circassian,formula_45,comdr,thickets,unstressed,monro,passively,harmonium,moveable,dinar,carlsson,elysees,chairing,b'nai,confusingly,kaoru,convolution,godolphin,facilitator,saxophones,eelam,jebel,copulation,anions,livres,licensure,pontypridd,arakan,controllable,alessandria,propelling,stellenbosch,tiber,wolka,liberators,yarns,d'azur,tsinghua,semnan,amhara,ablation,melies,tonality,historique,beeston,kahne,intricately,sonoran,robespierre,gyrus,boycotts,defaulted,infill,maranhao,emigres,framingham,paraiba,wilhelmshaven,tritium,skyway,labial,supplementation,possessor,underserved,motets,maldivian,marrakech,quays,wikimedia,turbojet,demobilization,petrarch,encroaching,sloops,masted,karbala,corvallis,agribusiness,seaford,stenosis,hieronymus,irani,superdraft,baronies,cortisol,notability,veena,pontic,cyclin,archeologists,newham,culled,concurring,aeolian,manorial,shouldered,fords,philanthropists,105th,siddharth,gotthard,halim,rajshahi,jurchen,detritus,practicable,earthenware,discarding,travelogue,neuromuscular,elkhart,raeder,zygmunt,metastasis,internees,102nd,vigour,upmarket,summarizing,subjunctive,offsets,elizabethtown,udupi,pardubice,repeaters,instituting,archaea,substandard,technische,linga,anatomist,flourishes,velika,tenochtitlan,evangelistic,fitchburg,springbok,cascading,hydrostatic,avars,occasioned,filipina,perceiving,shimbun,africanus,consternation,tsing,optically,beitar,45deg,abutments,roseville,monomers,huelva,lotteries,hypothalamus,internationalist,electromechanical,hummingbirds,fibreglass,salaried,dramatists,uncovers,invokes,earners,excretion,gelding,ancien,aeronautica,haverhill,stour,ittihad,abramoff,yakov,ayodhya,accelerates,industrially,aeroplanes,deleterious,dwelt,belvoir,harpalus,atpase,maluku,alasdair,proportionality,taran,epistemological,interferometer,polypeptide,adjudged,villager,metastatic,marshalls,madhavan,archduchess,weizmann,kalgoorlie,balan,predefined,sessile,sagaing,brevity,insecticide,psychosocial,africana,steelworks,aether,aquifers,belem,mineiro,almagro,radiators,cenozoic,solute,turbocharger,invicta,guested,buccaneer,idolatry,unmatched,paducah,sinestro,dispossessed,conforms,responsiveness,cyanobacteria,flautist,procurator,complementing,semifinalist,rechargeable,permafrost,cytokine,refuges,boomed,gelderland,franchised,jinan,burnie,doubtless,randomness,colspan=12,angra,ginebra,famers,nuestro,declarative,roughness,lauenburg,motile,rekha,issuer,piney,interceptors,napoca,gipsy,formulaic,formula_44,viswanathan,ebrahim,thessalonica,galeria,muskogee,unsold,html5,taito,mobutu,icann,carnarvon,fairtrade,morphisms,upsilon,nozzles,fabius,meander,murugan,strontium,episcopacy,sandinista,parasol,attenuated,bhima,primeval,panay,ordinator,negara,osteoporosis,glossop,ebook,paradoxically,grevillea,modoc,equating,phonetically,legumes,covariant,dorje,quatre,bruxelles,pyroclastic,shipbuilder,zhaozong,obscuring,sveriges,tremolo,extensible,barrack,multnomah,hakon,chaharmahal,parsing,volumetric,astrophysical,glottal,combinatorics,freestanding,encoder,paralysed,cavalrymen,taboos,heilbronn,orientalis,lockport,marvels,ozawa,dispositions,waders,incurring,saltire,modulate,papilio,phenol,intermedia,rappahannock,plasmid,fortify,phenotypes,transiting,correspondences,leaguer,larnaca,incompatibility,mcenroe,deeming,endeavoured,aboriginals,helmed,salar,arginine,werke,ferrand,expropriated,delimited,couplets,phoenicians,petioles,ouster,anschluss,protectionist,plessis,urchins,orquesta,castleton,juniata,bittorrent,fulani,donji,mykola,rosemont,chandos,scepticism,signer,chalukya,wicketkeeper,coquitlam,programmatic,o'brian,carteret,urology,steelhead,paleocene,konkan,bettered,venkatesh,surfacing,longitudinally,centurions,popularization,yazid,douro,widths,premios,leonards,gristmill,fallujah,arezzo,leftists,ecliptic,glycerol,inaction,disenfranchised,acrimonious,depositing,parashah,cockatoo,marechal,bolzano,chios,cablevision,impartiality,pouches,thickly,equities,bentinck,emotive,boson,ashdown,conquistadors,parsi,conservationists,reductive,newlands,centerline,ornithologists,waveguide,nicene,philological,hemel,setanta,masala,aphids,convening,casco,matrilineal,chalcedon,orthographic,hythe,replete,damming,bolivarian,admixture,embarks,borderlands,conformed,nagarjuna,blenny,chaitanya,suwon,shigeru,tatarstan,lingayen,rejoins,grodno,merovingian,hardwicke,puducherry,prototyping,laxmi,upheavals,headquarter,pollinators,bromine,transom,plantagenet,arbuthnot,chidambaram,woburn,osamu,panelling,coauthored,zhongshu,hyaline,omissions,aspergillus,offensively,electrolytic,woodcut,sodom,intensities,clydebank,piotrkow,supplementing,quipped,focke,harbinger,positivism,parklands,wolfenbuttel,cauca,tryptophan,taunus,curragh,tsonga,remand,obscura,ashikaga,eltham,forelimbs,analogs,trnava,observances,kailash,antithesis,ayumi,abyssinia,dorsally,tralee,pursuers,misadventures,padova,perot,mahadev,tarim,granth,licenced,compania,patuxent,baronial,korda,cochabamba,codices,karna,memorialized,semaphore,playlists,mandibular,halal,sivaji,scherzinger,stralsund,foundries,ribosome,mindfulness,nikolayevich,paraphyletic,newsreader,catalyze,ioannina,thalamus,gbit/s,paymaster,sarab,500th,replenished,gamepro,cracow,formula_46,gascony,reburied,lessing,easement,transposed,meurthe,satires,proviso,balthasar,unbound,cuckoos,durbar,louisbourg,cowes,wholesalers,manet,narita,xiaoping,mohamad,illusory,cathal,reuptake,alkaloid,tahrir,mmorpg,underlies,anglicanism,repton,aharon,exogenous,buchenwald,indigent,odostomia,milled,santorum,toungoo,nevsky,steyr,urbanisation,darkseid,subsonic,canaanite,akiva,eglise,dentition,mediators,cirencester,peloponnesian,malmesbury,durres,oerlikon,tabulated,saens,canaria,ischemic,esterhazy,ringling,centralization,walthamstow,nalanda,lignite,takht,leninism,expiring,circe,phytoplankton,promulgation,integrable,breeches,aalto,menominee,borgo,scythians,skrull,galleon,reinvestment,raglan,reachable,liberec,airframes,electrolysis,geospatial,rubiaceae,interdependence,symmetrically,simulcasts,keenly,mauna,adipose,zaidi,fairport,vestibular,actuators,monochromatic,literatures,congestive,sacramental,atholl,skytrain,tycho,tunings,jamia,catharina,modifier,methuen,tapings,infiltrating,colima,grafting,tauranga,halides,pontificate,phonetics,koper,hafez,grooved,kintetsu,extrajudicial,linkoping,cyberpunk,repetitions,laurentian,parnu,bretton,darko,sverdlovsk,foreshadowed,akhenaten,rehnquist,gosford,coverts,pragmatism,broadleaf,ethiopians,instated,mediates,sodra,opulent,descriptor,enugu,shimla,leesburg,officership,giffard,refectory,lusitania,cybermen,fiume,corus,tydfil,lawrenceville,ocala,leviticus,burghers,ataxia,richthofen,amicably,acoustical,watling,inquired,tiempo,multiracial,parallelism,trenchard,tokyopop,germanium,usisl,philharmonia,shapur,jacobites,latinized,sophocles,remittances,o'farrell,adder,dimitrios,peshwa,dimitar,orlov,outstretched,musume,satish,dimensionless,serialised,baptisms,pagasa,antiviral,1740s,quine,arapaho,bombardments,stratosphere,ophthalmic,injunctions,carbonated,nonviolence,asante,creoles,sybra,boilermakers,abington,bipartite,permissive,cardinality,anheuser,carcinogenic,hohenlohe,surinam,szeged,infanticide,generically,floorball,'white,automakers,cerebellar,homozygous,remoteness,effortlessly,allude,'great,headmasters,minting,manchurian,kinabalu,wemyss,seditious,widgets,marbled,almshouses,bards,subgenres,tetsuya,faulting,kickboxer,gaulish,hoseyn,malton,fluvial,questionnaires,mondale,downplayed,traditionalists,vercelli,sumatran,landfills,gamesradar,exerts,franciszek,unlawfully,huesca,diderot,libertarians,professorial,laane,piecemeal,conidae,taiji,curatorial,perturbations,abstractions,szlachta,watercraft,mullah,zoroastrianism,segmental,khabarovsk,rectors,affordability,scuola,diffused,stena,cyclonic,workpiece,romford,'little,jhansi,stalag,zhongshan,skipton,maracaibo,bernadotte,thanet,groening,waterville,encloses,sahrawi,nuffield,moorings,chantry,annenberg,islay,marchers,tenses,wahid,siegen,furstenberg,basques,resuscitation,seminarians,tympanum,gentiles,vegetarianism,tufted,venkata,fantastical,pterophoridae,machined,superposition,glabrous,kaveri,chicane,executors,phyllonorycter,bidirectional,jasta,undertones,touristic,majapahit,navratilova,unpopularity,barbadian,tinian,webcast,hurdler,rigidly,jarrah,staphylococcus,igniting,irrawaddy,stabilised,airstrike,ragas,wakayama,energetically,ekstraklasa,minibus,largemouth,cultivators,leveraging,waitangi,carnaval,weaves,turntables,heydrich,sextus,excavate,govind,ignaz,pedagogue,uriah,borrowings,gemstones,infractions,mycobacterium,batavian,massing,praetor,subalpine,massoud,passers,geostationary,jalil,trainsets,barbus,impair,budejovice,denbigh,pertain,historicity,fortaleza,nederlandse,lamenting,masterchef,doubs,gemara,conductance,ploiesti,cetaceans,courthouses,bhagavad,mihailovic,occlusion,bremerhaven,bulwark,morava,kaine,drapery,maputo,conquistador,kaduna,famagusta,first-past-the-post,erudite,galton,undated,tangential,filho,dismembered,dashes,criterium,darwen,metabolized,blurring,everard,randwick,mohave,impurity,acuity,ansbach,chievo,surcharge,plantain,algoma,porosity,zirconium,selva,sevenoaks,venizelos,gwynne,golgi,imparting,separatism,courtesan,idiopathic,gravestones,hydroelectricity,babar,orford,purposeful,acutely,shard,ridgewood,viterbo,manohar,expropriation,placenames,brevis,cosine,unranked,richfield,newnham,recoverable,flightless,dispersing,clearfield,abu'l,stranraer,kempe,streamlining,goswami,epidermal,pieta,conciliatory,distilleries,electrophoresis,bonne,tiago,curiosities,candidature,picnicking,perihelion,lintel,povoa,gullies,configure,excision,facies,signers,1730s,insufficiency,semiotics,streatham,deactivation,entomological,skippers,albacete,parodying,escherichia,honorees,singaporeans,counterterrorism,tiruchirappalli,omnivorous,metropole,globalisation,athol,unbounded,codice_5,landforms,classifier,farmhouses,reaffirming,reparation,yomiuri,technologists,mitte,medica,viewable,steampunk,konya,kshatriya,repelling,edgewater,lamiinae,devas,potteries,llandaff,engendered,submits,virulence,uplifted,educationist,metropolitans,frontrunner,dunstable,forecastle,frets,methodius,exmouth,linnean,bouchet,repulsion,computable,equalling,liceo,tephritidae,agave,hydrological,azarenka,fairground,l'homme,enforces,xinhua,cinematographers,cooperstown,sa'id,paiute,christianization,tempos,chippenham,insulator,kotor,stereotyped,dello,cours,hisham,d'souza,eliminations,supercars,passau,rebrand,natures,coote,persephone,rededicated,cleaved,plenum,blistering,indiscriminately,cleese,safed,recursively,compacted,revues,hydration,shillong,echelons,garhwal,pedimented,grower,zwolle,wildflower,annexing,methionine,petah,valens,famitsu,petiole,specialities,nestorian,shahin,tokaido,shearwater,barberini,kinsmen,experimenter,alumnae,cloisters,alumina,pritzker,hardiness,soundgarden,julich,ps300,watercourse,cementing,wordplay,olivet,demesne,chasseurs,amide,zapotec,gaozu,porphyry,absorbers,indium,analogies,devotions,engravers,limestones,catapulted,surry,brickworks,gotra,rodham,landline,paleontologists,shankara,islip,raucous,trollope,arpad,embarkation,morphemes,recites,picardie,nakhchivan,tolerances,formula_47,khorramabad,nichiren,adrianople,kirkuk,assemblages,collider,bikaner,bushfires,roofline,coverings,reredos,bibliotheca,mantras,accentuated,commedia,rashtriya,fluctuation,serhiy,referential,fittipaldi,vesicle,geeta,iraklis,immediacy,chulalongkorn,hunsruck,bingen,dreadnoughts,stonemason,meenakshi,lebesgue,undergrowth,baltistan,paradoxes,parlement,articled,tiflis,dixieland,meriden,tejano,underdogs,barnstable,exemplify,venter,tropes,wielka,kankakee,iskandar,zilina,pharyngeal,spotify,materialised,picts,atlantique,theodoric,prepositions,paramilitaries,pinellas,attlee,actuated,piedmontese,grayling,thucydides,multifaceted,unedited,autonomously,universelle,utricularia,mooted,preto,incubated,underlie,brasenose,nootka,bushland,sensu,benzodiazepine,esteghlal,seagoing,amenhotep,azusa,sappers,culpeper,smokeless,thoroughbreds,dargah,gorda,alumna,mankato,zdroj,deleting,culvert,formula_49,punting,wushu,hindering,immunoglobulin,standardisation,birger,oilfield,quadrangular,ulama,recruiters,netanya,1630s,communaute,istituto,maciej,pathan,meher,vikas,characterizations,playmaker,interagency,intercepts,assembles,horthy,introspection,narada,matra,testes,radnicki,estonians,csiro,instar,mitford,adrenergic,crewmembers,haaretz,wasatch,lisburn,rangefinder,ordre,condensate,reforestation,corregidor,spvgg,modulator,mannerist,faulted,aspires,maktoum,squarepants,aethelred,piezoelectric,mulatto,dacre,progressions,jagiellonian,norge,samaria,sukhoi,effingham,coxless,hermetic,humanists,centrality,litters,stirlingshire,beaconsfield,sundanese,geometrically,caretakers,habitually,bandra,pashtuns,bradenton,arequipa,laminar,brickyard,hitchin,sustains,shipboard,ploughing,trechus,wheelers,bracketed,ilyushin,subotica,d'hondt,reappearance,bridgestone,intermarried,fulfilment,aphasia,birkbeck,transformational,strathmore,hornbill,millstone,lacan,voids,solothurn,gymnasiums,laconia,viaducts,peduncle,teachta,edgware,shinty,supernovae,wilfried,exclaim,parthia,mithun,flashpoint,moksha,cumbia,metternich,avalanches,militancy,motorist,rivadavia,chancellorsville,federals,gendered,bounding,footy,gauri,caliphs,lingam,watchmaker,unrecorded,riverina,unmodified,seafloor,droit,pfalz,chrysostom,gigabit,overlordship,besiege,espn2,oswestry,anachronistic,ballymena,reactivation,duchovny,ghani,abacetus,duller,legio,watercourses,nord-pas-de-calais,leiber,optometry,swarms,installer,sancti,adverbs,iheartmedia,meiningen,zeljko,kakheti,notional,circuses,patrilineal,acrobatics,infrastructural,sheva,oregonian,adjudication,aamir,wloclawek,overfishing,obstructive,subtracting,aurobindo,archeologist,newgate,'cause,secularization,tehsils,abscess,fingal,janacek,elkhorn,trims,kraftwerk,mandating,irregulars,faintly,congregationalist,sveti,kasai,mishaps,kennebec,provincially,durkheim,scotties,aicte,rapperswil,imphal,surrenders,morphs,nineveh,hoxha,cotabato,thuringian,metalworking,retold,shogakukan,anthers,proteasome,tippeligaen,disengagement,mockumentary,palatial,erupts,flume,corrientes,masthead,jaroslaw,rereleased,bharti,labors,distilling,tusks,varzim,refounded,enniskillen,melkite,semifinalists,vadodara,bermudian,capstone,grasse,origination,populus,alesi,arrondissements,semigroup,verein,opossum,messrs.,portadown,bulbul,tirupati,mulhouse,tetrahedron,roethlisberger,nonverbal,connexion,warangal,deprecated,gneiss,octet,vukovar,hesketh,chambre,despatch,claes,kargil,hideo,gravelly,tyndale,aquileia,tuners,defensible,tutte,theotokos,constructivist,ouvrage,dukla,polisario,monasticism,proscribed,commutation,testers,nipissing,codon,mesto,olivine,concomitant,exoskeleton,purports,coromandel,eyalet,dissension,hippocrates,purebred,yaounde,composting,oecophoridae,procopius,o'day,angiogenesis,sheerness,intelligencer,articular,felixstowe,aegon,endocrinology,trabzon,licinius,pagodas,zooplankton,hooghly,satie,drifters,sarthe,mercian,neuilly,tumours,canal+,scheldt,inclinations,counteroffensive,roadrunners,tuzla,shoreditch,surigao,predicates,carnot,algeciras,militaries,generalize,bulkheads,gawler,pollutant,celta,rundgren,microrna,gewog,olimpija,placental,lubelski,roxburgh,discerned,verano,kikuchi,musicale,l'enfant,ferocity,dimorphic,antigonus,erzurum,prebendary,recitative,discworld,cyrenaica,stigmella,totnes,sutta,pachuca,ulsan,downton,landshut,castellan,pleural,siedlce,siecle,catamaran,cottbus,utilises,trophic,freeholders,holyhead,u.s.s,chansons,responder,waziristan,suzuka,birding,shogi,asker,acetone,beautification,cytotoxic,dixit,hunterdon,cobblestone,formula_48,kossuth,devizes,sokoto,interlaced,shuttered,kilowatts,assiniboine,isaak,salto,alderney,sugarloaf,franchising,aggressiveness,toponyms,plaintext,antimatter,henin,equidistant,salivary,bilingualism,mountings,obligate,extirpated,irenaeus,misused,pastoralists,aftab,immigrating,warping,tyrolean,seaforth,teesside,soundwave,oligarchy,stelae,pairwise,iupac,tezuka,posht,orchestrations,landmass,ironstone,gallia,hjalmar,carmelites,strafford,elmhurst,palladio,fragility,teleplay,gruffudd,karoly,yerba,potok,espoo,inductance,macaque,nonprofits,pareto,rock'n'roll,spiritualist,shadowed,skateboarder,utterances,generality,congruence,prostrate,deterred,yellowknife,albarn,maldon,battlements,mohsen,insecticides,khulna,avellino,menstruation,glutathione,springdale,parlophone,confraternity,korps,countrywide,bosphorus,preexisting,damodar,astride,alexandrovich,sprinting,crystallized,botev,leaching,interstates,veers,angevin,undaunted,yevgeni,nishapur,northerners,alkmaar,bethnal,grocers,sepia,tornus,exemplar,trobe,charcot,gyeonggi,larne,tournai,lorain,voided,genji,enactments,maxilla,adiabatic,eifel,nazim,transducer,thelonious,pyrite,deportiva,dialectal,bengt,rosettes,labem,sergeyevich,synoptic,conservator,statuette,biweekly,adhesives,bifurcation,rajapaksa,mammootty,republique,yusef,waseda,marshfield,yekaterinburg,minnelli,fundy,fenian,matchups,dungannon,supremacist,panelled,drenthe,iyengar,fibula,narmada,homeport,oceanside,precept,antibacterial,altarpieces,swath,ospreys,lillooet,legnica,lossless,formula_50,galvatron,iorga,stormont,rsfsr,loggers,kutno,phenomenological,medallists,cuatro,soissons,homeopathy,bituminous,injures,syndicates,typesetting,displacements,dethroned,makassar,lucchese,abergavenny,targu,alborz,akb48,boldface,gastronomy,sacra,amenity,accumulator,myrtaceae,cornices,mourinho,denunciation,oxbow,diddley,aargau,arbitrage,bedchamber,gruffydd,zamindar,klagenfurt,caernarfon,slowdown,stansted,abrasion,tamaki,suetonius,dukakis,individualistic,ventrally,hotham,perestroika,ketones,fertilisation,sobriquet,couplings,renderings,misidentified,rundfunk,sarcastically,braniff,concours,dismissals,elegantly,modifiers,crediting,combos,crucially,seafront,lieut,ischemia,manchus,derivations,proteases,aristophanes,adenauer,porting,hezekiah,sante,trulli,hornblower,foreshadowing,ypsilanti,dharwad,khani,hohenstaufen,distillers,cosmodrome,intracranial,turki,salesian,gorzow,jihlava,yushchenko,leichhardt,venables,cassia,eurogamer,airtel,curative,bestsellers,timeform,sortied,grandview,massillon,ceding,pilbara,chillicothe,heredity,elblag,rogaland,ronne,millennial,batley,overuse,bharata,fille,campbelltown,abeyance,counterclockwise,250cc,neurodegenerative,consigned,electromagnetism,sunnah,saheb,exons,coxswain,gleaned,bassoons,worksop,prismatic,immigrate,pickets,takeo,bobsledder,stosur,fujimori,merchantmen,stiftung,forli,endorses,taskforce,thermally,atman,gurps,floodplains,enthalpy,extrinsic,setubal,kennesaw,grandis,scalability,durations,showrooms,prithvi,outro,overruns,andalucia,amanita,abitur,hipper,mozambican,sustainment,arsene,chesham,palaeolithic,reportage,criminality,knowsley,haploid,atacama,shueisha,ridgefield,astern,getafe,lineal,timorese,restyled,hollies,agincourt,unter,justly,tannins,mataram,industrialised,tarnovo,mumtaz,mustapha,stretton,synthetase,condita,allround,putra,stjepan,troughs,aechmea,specialisation,wearable,kadokawa,uralic,aeros,messiaen,existentialism,jeweller,effigies,gametes,fjordane,cochlear,interdependent,demonstrative,unstructured,emplacement,famines,spindles,amplitudes,actuator,tantalum,psilocybe,apnea,monogatari,expulsions,seleucus,tsuen,hospitaller,kronstadt,eclipsing,olympiakos,clann,canadensis,inverter,helio,egyptologist,squamous,resonate,munir,histology,torbay,khans,jcpenney,veterinarians,aintree,microscopes,colonised,reflectors,phosphorylated,pristimantis,tulare,corvinus,multiplexing,midweek,demosthenes,transjordan,ecija,tengku,vlachs,anamorphic,counterweight,radnor,trinitarian,armidale,maugham,njsiaa,futurism,stairways,avicenna,montebello,bridgetown,wenatchee,lyonnais,amass,surinamese,streptococcus,m*a*s*h,hydrogenation,frazioni,proscenium,kalat,pennsylvanian,huracan,tallying,kralove,nucleolar,phrygian,seaports,hyacinthe,ignace,donning,instalment,regnal,fonds,prawn,carell,folktales,goaltending,bracknell,vmware,patriarchy,mitsui,kragujevac,pythagoras,soult,thapa,disproved,suwalki,secures,somoza,l'ecole,divizia,chroma,herders,technologist,deduces,maasai,rampur,paraphrase,raimi,imaged,magsaysay,ivano,turmeric,formula_51,subcommittees,axillary,ionosphere,organically,indented,refurbishing,pequot,violinists,bearn,colle,contralto,silverton,mechanization,etruscans,wittelsbach,pasir,redshirted,marrakesh,scarp,plein,wafers,qareh,teotihuacan,frobenius,sinensis,rehoboth,bundaberg,newbridge,hydrodynamic,traore,abubakar,adjusts,storytellers,dynamos,verbandsliga,concertmaster,exxonmobil,appreciable,sieradz,marchioness,chaplaincy,rechristened,cunxu,overpopulation,apolitical,sequencer,beaked,nemanja,binaries,intendant,absorber,filamentous,indebtedness,nusra,nashik,reprises,psychedelia,abwehr,ligurian,isoform,resistive,pillaging,mahathir,reformatory,lusatia,allerton,ajaccio,tepals,maturin,njcaa,abyssinian,objector,fissures,sinuous,ecclesiastic,dalits,caching,deckers,phosphates,wurlitzer,navigated,trofeo,berea,purefoods,solway,unlockable,grammys,kostroma,vocalizations,basilan,rebuke,abbasi,douala,helsingborg,ambon,bakar,runestones,cenel,tomislav,pigmented,northgate,excised,seconda,kirke,determinations,dedicates,vilas,pueblos,reversion,unexploded,overprinted,ekiti,deauville,masato,anaesthesia,endoplasmic,transponders,aguascalientes,hindley,celluloid,affording,bayeux,piaget,rickshaws,eishockey,camarines,zamalek,undersides,hardwoods,hermitian,mutinied,monotone,blackmails,affixes,jpmorgan,habermas,mitrovica,paleontological,polystyrene,thana,manas,conformist,turbofan,decomposes,logano,castration,metamorphoses,patroness,herbicide,mikolaj,rapprochement,macroeconomics,barranquilla,matsudaira,lintels,femina,hijab,spotsylvania,morpheme,bitola,baluchistan,kurukshetra,otway,extrusion,waukesha,menswear,helder,trung,bingley,protester,boars,overhang,differentials,exarchate,hejaz,kumara,unjustified,timings,sharpness,nuovo,taisho,sundar,etc..,jehan,unquestionably,muscovy,daltrey,canute,paneled,amedeo,metroplex,elaborates,telus,tetrapods,dragonflies,epithets,saffir,parthenon,lucrezia,refitting,pentateuch,hanshin,montparnasse,lumberjacks,sanhedrin,erectile,odors,greenstone,resurgent,leszek,amory,substituents,prototypical,viewfinder,monck,universiteit,joffre,revives,chatillon,seedling,scherzo,manukau,ashdod,gympie,homolog,stalwarts,ruinous,weibo,tochigi,wallenberg,gayatri,munda,satyagraha,storefronts,heterogeneity,tollway,sportswriters,binocular,gendarmes,ladysmith,tikal,ortsgemeinde,ja'far,osmotic,linlithgow,bramley,telecoms,pugin,repose,rupaul,sieur,meniscus,garmisch,reintroduce,400th,shoten,poniatowski,drome,kazakhstani,changeover,astronautics,husserl,herzl,hypertext,katakana,polybius,antananarivo,seong,breguet,reliquary,utada,aggregating,liangshan,sivan,tonawanda,audiobooks,shankill,coulee,phenolic,brockton,bookmakers,handsets,boaters,wylde,commonality,mappings,silhouettes,pennines,maurya,pratchett,singularities,eschewed,pretensions,vitreous,ibero,totalitarianism,poulenc,lingered,directx,seasoning,deputation,interdict,illyria,feedstock,counterbalance,muzik,buganda,parachuted,violist,homogeneity,comix,fjords,corsairs,punted,verandahs,equilateral,laoghaire,magyars,117th,alesund,televoting,mayotte,eateries,refurbish,nswrl,yukio,caragiale,zetas,dispel,codecs,inoperable,outperformed,rejuvenation,elstree,modernise,contributory,pictou,tewkesbury,chechens,ashina,psionic,refutation,medico,overdubbed,nebulae,sandefjord,personages,eccellenza,businessperson,placename,abenaki,perryville,threshing,reshaped,arecibo,burslem,colspan=3|turnout,rebadged,lumia,erinsborough,interactivity,bitmap,indefatigable,theosophy,excitatory,gleizes,edsel,bermondsey,korce,saarinen,wazir,diyarbakir,cofounder,liberalisation,onsen,nighthawks,siting,retirements,semyon,d'histoire,114th,redditch,venetia,praha,'round,valdosta,hieroglyphic,postmedial,edirne,miscellany,savona,cockpits,minimization,coupler,jacksonian,appeasement,argentines,saurashtra,arkwright,hesiod,folios,fitzalan,publica,rivaled,civitas,beermen,constructivism,ribeira,zeitschrift,solanum,todos,deformities,chilliwack,verdean,meagre,bishoprics,gujrat,yangzhou,reentered,inboard,mythologies,virtus,unsurprisingly,rusticated,museu,symbolise,proportionate,thesaban,symbian,aeneid,mitotic,veliki,compressive,cisterns,abies,winemaker,massenet,bertolt,ahmednagar,triplemania,armorial,administracion,tenures,smokehouse,hashtag,fuerza,regattas,gennady,kanazawa,mahmudabad,crustal,asaph,valentinian,ilaiyaraaja,honeyeater,trapezoidal,cooperatively,unambiguously,mastodon,inhospitable,harnesses,riverton,renewables,djurgardens,haitians,airings,humanoids,boatswain,shijiazhuang,faints,veera,punjabis,steepest,narain,karlovy,serre,sulcus,collectives,1500m,arion,subarctic,liberally,apollonius,ostia,droplet,headstones,norra,robusta,maquis,veronese,imola,primers,luminance,escadrille,mizuki,irreconcilable,stalybridge,temur,paraffin,stuccoed,parthians,counsels,fundamentalists,vivendi,polymath,sugababes,mikko,yonne,fermions,vestfold,pastoralist,kigali,unseeded,glarus,cusps,amasya,northwesterly,minorca,astragalus,verney,trevelyan,antipathy,wollstonecraft,bivalves,boulez,royle,divisao,quranic,bareilly,coronal,deviates,lulea,erectus,petronas,chandan,proxies,aeroflot,postsynaptic,memoriam,moyne,gounod,kuznetsova,pallava,ordinating,reigate,'first,lewisburg,exploitative,danby,academica,bailiwick,brahe,injective,stipulations,aeschylus,computes,gulden,hydroxylase,liveries,somalis,underpinnings,muscovite,kongsberg,domus,overlain,shareware,variegated,jalalabad,agence,ciphertext,insectivores,dengeki,menuhin,cladistic,baerum,betrothal,tokushima,wavelet,expansionist,pottsville,siyuan,prerequisites,carpi,nemzeti,nazar,trialled,eliminator,irrorated,homeward,redwoods,undeterred,strayed,lutyens,multicellular,aurelian,notated,lordships,alsatian,idents,foggia,garros,chalukyas,lillestrom,podlaski,pessimism,hsien,demilitarized,whitewashed,willesden,kirkcaldy,sanctorum,lamia,relaying,escondido,paediatric,contemplates,demarcated,bluestone,betula,penarol,capitalise,kreuznach,kenora,115th,hold'em,reichswehr,vaucluse,m.i.a,windings,boys/girls,cajon,hisar,predictably,flemington,ysgol,mimicked,clivina,grahamstown,ionia,glyndebourne,patrese,aquaria,sleaford,dayal,sportscenter,malappuram,m.b.a.,manoa,carbines,solvable,designator,ramanujan,linearity,academicians,sayid,lancastrian,factorial,strindberg,vashem,delos,comyn,condensing,superdome,merited,kabaddi,intransitive,bideford,neuroimaging,duopoly,scorecards,ziggler,heriot,boyars,virology,marblehead,microtubules,westphalian,anticipates,hingham,searchers,harpist,rapides,morricone,convalescent,mises,nitride,metrorail,matterhorn,bicol,drivetrain,marketer,snippet,winemakers,muban,scavengers,halberstadt,herkimer,peten,laborious,stora,montgomeryshire,booklist,shamir,herault,eurostar,anhydrous,spacewalk,ecclesia,calliostoma,highschool,d'oro,suffusion,imparts,overlords,tagus,rectifier,counterinsurgency,ministered,eilean,milecastle,contre,micromollusk,okhotsk,bartoli,matroid,hasidim,thirunal,terme,tarlac,lashkar,presque,thameslink,flyby,troopship,renouncing,fatih,messrs,vexillum,bagration,magnetite,bornholm,androgynous,vehement,tourette,philosophic,gianfranco,tuileries,codice_6,radially,flexion,hants,reprocessing,setae,burne,palaeographically,infantryman,shorebirds,tamarind,moderna,threading,militaristic,crohn,norrkoping,125cc,stadtholder,troms,klezmer,alphanumeric,brome,emmanuelle,tiwari,alchemical,formula_52,onassis,bleriot,bipedal,colourless,hermeneutics,hosni,precipitating,turnstiles,hallucinogenic,panhellenic,wyandotte,elucidated,chita,ehime,generalised,hydrophilic,biota,niobium,rnzaf,gandhara,longueuil,logics,sheeting,bielsko,cuvier,kagyu,trefoil,docent,pancrase,stalinism,postures,encephalopathy,monckton,imbalances,epochs,leaguers,anzio,diminishes,pataki,nitrite,amuro,nabil,maybach,l'aquila,babbler,bacolod,thutmose,evora,gaudi,breakage,recur,preservative,60deg,mendip,functionaries,columnar,maccabiah,chert,verden,bromsgrove,clijsters,dengue,pastorate,phuoc,principia,viareggio,kharagpur,scharnhorst,anyang,bosons,l'art,criticises,ennio,semarang,brownian,mirabilis,asperger,calibers,typographical,cartooning,minos,disembark,supranational,undescribed,etymologically,alappuzha,vilhelm,lanao,pakenham,bhagavata,rakoczi,clearings,astrologers,manitowoc,bunuel,acetylene,scheduler,defamatory,trabzonspor,leaded,scioto,pentathlete,abrahamic,minigames,aldehydes,peerages,legionary,1640s,masterworks,loudness,bryansk,likeable,genocidal,vegetated,towpath,declination,pyrrhus,divinely,vocations,rosebery,associazione,loaders,biswas,oeste,tilings,xianzong,bhojpuri,annuities,relatedness,idolator,psers,constriction,chuvash,choristers,hanafi,fielders,grammarian,orpheum,asylums,millbrook,gyatso,geldof,stabilise,tableaux,diarist,kalahari,panini,cowdenbeath,melanin,4x100m,resonances,pinar,atherosclerosis,sheringham,castlereagh,aoyama,larks,pantograph,protrude,natak,gustafsson,moribund,cerevisiae,cleanly,polymeric,holkar,cosmonauts,underpinning,lithosphere,firuzabad,languished,mingled,citrate,spadina,lavas,daejeon,fibrillation,porgy,pineville,ps1000,cobbled,emamzadeh,mukhtar,dampers,indelible,salonika,nanoscale,treblinka,eilat,purporting,fluctuate,mesic,hagiography,cutscenes,fondation,barrens,comically,accrue,ibrox,makerere,defections,'there,hollandia,skene,grosseto,reddit,objectors,inoculation,rowdies,playfair,calligrapher,namor,sibenik,abbottabad,propellants,hydraulically,chloroplasts,tablelands,tecnico,schist,klasse,shirvan,bashkortostan,bullfighting,north/south,polski,hanns,woodblock,kilmore,ejecta,ignacy,nanchang,danubian,commendations,snohomish,samaritans,argumentation,vasconcelos,hedgehogs,vajrayana,barents,kulkarni,kumbakonam,identifications,hillingdon,weirs,nayanar,beauvoir,messe,divisors,atlantiques,broods,affluence,tegucigalpa,unsuited,autodesk,akash,princeps,culprits,kingstown,unassuming,goole,visayan,asceticism,blagojevich,irises,paphos,unsound,maurier,pontchartrain,desertification,sinfonietta,latins,especial,limpet,valerenga,glial,brainstem,mitral,parables,sauropod,judean,iskcon,sarcoma,venlo,justifications,zhuhai,blavatsky,alleviated,usafe,steppenwolf,inversions,janko,chagall,secretory,basildon,saguenay,pergamon,hemispherical,harmonized,reloading,franjo,domaine,extravagance,relativism,metamorphosed,labuan,baloncesto,gmail,byproducts,calvinists,counterattacked,vitus,bubonic,120th,strachey,ritually,brookwood,selectable,savinja,incontinence,meltwater,jinja,1720s,brahmi,morgenthau,sheaves,sleeved,stratovolcano,wielki,utilisation,avoca,fluxus,panzergrenadier,philately,deflation,podlaska,prerogatives,kuroda,theophile,zhongzong,gascoyne,magus,takao,arundell,fylde,merdeka,prithviraj,venkateswara,liepaja,daigo,dreamland,reflux,sunnyvale,coalfields,seacrest,soldering,flexor,structuralism,alnwick,outweighed,unaired,mangeshkar,batons,glaad,banshees,irradiated,organelles,biathlete,cabling,chairlift,lollapalooza,newsnight,capacitive,succumbs,flatly,miramichi,burwood,comedienne,charteris,biotic,workspace,aficionados,sokolka,chatelet,o'shaughnessy,prosthesis,neoliberal,refloated,oppland,hatchlings,econometrics,loess,thieu,androids,appalachians,jenin,pterostichinae,downsized,foils,chipsets,stencil,danza,narrate,maginot,yemenite,bisects,crustacean,prescriptive,melodious,alleviation,empowers,hansson,autodromo,obasanjo,osmosis,daugava,rheumatism,moraes,leucine,etymologies,chepstow,delaunay,bramall,bajaj,flavoring,approximates,marsupials,incisive,microcomputer,tactically,waals,wilno,fisichella,ursus,hindmarsh,mazarin,lomza,xenophobia,lawlessness,annecy,wingers,gornja,gnaeus,superieur,tlaxcala,clasps,symbolises,slats,rightist,effector,blighted,permanence,divan,progenitors,kunsthalle,anointing,excelling,coenzyme,indoctrination,dnipro,landholdings,adriaan,liturgies,cartan,ethmia,attributions,sanctus,trichy,chronicon,tancred,affinis,kampuchea,gantry,pontypool,membered,distrusted,fissile,dairies,hyposmocoma,craigie,adarsh,martinsburg,taxiway,30deg,geraint,vellum,bencher,khatami,formula_53,zemun,teruel,endeavored,palmares,pavements,u.s..,internationalization,satirized,carers,attainable,wraparound,muang,parkersburg,extinctions,birkenfeld,wildstorm,payers,cohabitation,unitas,culloden,capitalizing,clwyd,daoist,campinas,emmylou,orchidaceae,halakha,orientales,fealty,domnall,chiefdom,nigerians,ladislav,dniester,avowed,ergonomics,newsmagazine,kitsch,cantilevered,benchmarking,remarriage,alekhine,coldfield,taupo,almirante,substations,apprenticeships,seljuq,levelling,eponym,symbolising,salyut,opioids,underscore,ethnologue,mohegan,marikina,libro,bassano,parse,semantically,disjointed,dugdale,padraig,tulsi,modulating,xfinity,headlands,mstislav,earthworms,bourchier,lgbtq,embellishments,pennants,rowntree,betel,motet,mulla,catenary,washoe,mordaunt,dorking,colmar,girardeau,glentoran,grammatically,samad,recreations,technion,staccato,mikoyan,spoilers,lyndhurst,victimization,chertsey,belafonte,tondo,tonsberg,narrators,subcultures,malformations,edina,augmenting,attests,euphemia,cabriolet,disguising,1650s,navarrese,demoralized,cardiomyopathy,welwyn,wallachian,smoothness,planktonic,voles,issuers,sardasht,survivability,cuauhtemoc,thetis,extruded,signet,raghavan,lombok,eliyahu,crankcase,dissonant,stolberg,trencin,desktops,bursary,collectivization,charlottenburg,triathlete,curvilinear,involuntarily,mired,wausau,invades,sundaram,deletions,bootstrap,abellio,axiomatic,noguchi,setups,malawian,visalia,materialist,kartuzy,wenzong,plotline,yeshivas,parganas,tunica,citric,conspecific,idlib,superlative,reoccupied,blagoevgrad,masterton,immunological,hatta,courbet,vortices,swallowtail,delves,haridwar,diptera,boneh,bahawalpur,angering,mardin,equipments,deployable,guanine,normality,rimmed,artisanal,boxset,chandrasekhar,jools,chenar,tanakh,carcassonne,belatedly,millville,anorthosis,reintegration,velde,surfactant,kanaan,busoni,glyphipterix,personas,fullness,rheims,tisza,stabilizers,bharathi,joost,spinola,mouldings,perching,esztergom,afzal,apostate,lustre,s.league,motorboat,monotheistic,armature,barat,asistencia,bloomsburg,hippocampal,fictionalised,defaults,broch,hexadecimal,lusignan,ryanair,boccaccio,breisgau,southbank,bskyb,adjoined,neurobiology,aforesaid,sadhu,langue,headship,wozniacki,hangings,regulus,prioritized,dynamism,allier,hannity,shimin,antoninus,gymnopilus,caledon,preponderance,melayu,electrodynamics,syncopated,ibises,krosno,mechanistic,morpeth,harbored,albini,monotheism,'real,hyperactivity,haveli,writer/director,minato,nimoy,caerphilly,chitral,amirabad,fanshawe,l'oreal,lorde,mukti,authoritarianism,valuing,spyware,hanbury,restarting,stato,embed,suiza,empiricism,stabilisation,stari,castlemaine,orbis,manufactory,mauritanian,shoji,taoyuan,prokaryotes,oromia,ambiguities,embodying,slims,frente,innovate,ojibwa,powdery,gaeltacht,argentinos,quatermass,detergents,fijians,adaptor,tokai,chileans,bulgars,oxidoreductases,bezirksliga,conceicao,myosin,nellore,500cc,supercomputers,approximating,glyndwr,polypropylene,haugesund,cockerell,tudman,ashbourne,hindemith,bloodlines,rigveda,etruria,romanos,steyn,oradea,deceleration,manhunter,laryngeal,fraudulently,janez,wendover,haplotype,janaki,naoki,belizean,mellencamp,cartographic,sadhana,tricolour,pseudoscience,satara,bytow,s.p.a.,jagdgeschwader,arcot,omagh,sverdrup,masterplan,surtees,apocrypha,ahvaz,d'amato,socratic,leumit,unnumbered,nandini,witold,marsupial,coalesced,interpolated,gimnasia,karadzic,keratin,mamoru,aldeburgh,speculator,escapement,irfan,kashyap,satyajit,haddington,solver,rothko,ashkelon,kickapoo,yeomen,superbly,bloodiest,greenlandic,lithic,autofocus,yardbirds,poona,keble,javan,sufis,expandable,tumblr,ursuline,swimwear,winwood,counsellors,aberrations,marginalised,befriending,workouts,predestination,varietal,siddhartha,dunkeld,judaic,esquimalt,shabab,ajith,telefonica,stargard,hoysala,radhakrishnan,sinusoidal,strada,hiragana,cebuano,monoid,independencia,floodwaters,mildura,mudflats,ottokar,translit,radix,wigner,philosophically,tephritid,synthesizing,castletown,installs,stirner,resettle,bushfire,choirmaster,kabbalistic,shirazi,lightship,rebus,colonizers,centrifuge,leonean,kristofferson,thymus,clackamas,ratnam,rothesay,municipally,centralia,thurrock,gulfport,bilinear,desirability,merite,psoriasis,macaw,erigeron,consignment,mudstone,distorting,karlheinz,ramen,tailwheel,vitor,reinsurance,edifices,superannuation,dormancy,contagion,cobden,rendezvoused,prokaryotic,deliberative,patricians,feigned,degrades,starlings,sopot,viticultural,beaverton,overflowed,convener,garlands,michiel,ternopil,naturelle,biplanes,bagot,gamespy,ventspils,disembodied,flattening,profesional,londoners,arusha,scapular,forestall,pyridine,ulema,eurodance,aruna,callus,periodontal,coetzee,immobilized,o'meara,maharani,katipunan,reactants,zainab,microgravity,saintes,britpop,carrefour,constrain,adversarial,firebirds,brahmo,kashima,simca,surety,surpluses,superconductivity,gipuzkoa,cumans,tocantins,obtainable,humberside,roosting,'king,formula_54,minelayer,bessel,sulayman,cycled,biomarkers,annealing,shusha,barda,cassation,djing,polemics,tuple,directorates,indomitable,obsolescence,wilhelmine,pembina,bojan,tambo,dioecious,pensioner,magnificat,1660s,estrellas,southeasterly,immunodeficiency,railhead,surreptitiously,codeine,encores,religiosity,tempera,camberley,efendi,boardings,malleable,hagia,input/output,lucasfilm,ujjain,polymorphisms,creationist,berners,mickiewicz,irvington,linkedin,endures,kinect,munition,apologetics,fairlie,predicated,reprinting,ethnographer,variances,levantine,mariinsky,jadid,jarrow,asia/oceania,trinamool,waveforms,bisexuality,preselection,pupae,buckethead,hieroglyph,lyricists,marionette,dunbartonshire,restorer,monarchical,pazar,kickoffs,cabildo,savannas,gliese,dench,spoonbills,novelette,diliman,hypersensitivity,authorising,montefiore,mladen,qu'appelle,theistic,maruti,laterite,conestoga,saare,californica,proboscis,carrickfergus,imprecise,hadassah,baghdadi,jolgeh,deshmukh,amusements,heliopolis,berle,adaptability,partenkirchen,separations,baikonur,cardamom,southeastward,southfield,muzaffar,adequacy,metropolitana,rajkot,kiyoshi,metrobus,evictions,reconciles,librarianship,upsurge,knightley,badakhshan,proliferated,spirituals,burghley,electroacoustic,professing,featurette,reformists,skylab,descriptors,oddity,greyfriars,injects,salmond,lanzhou,dauntless,subgenera,underpowered,transpose,mahinda,gatos,aerobatics,seaworld,blocs,waratahs,joris,giggs,perfusion,koszalin,mieczyslaw,ayyubid,ecologists,modernists,sant'angelo,quicktime,him/her,staves,sanyo,melaka,acrocercops,qigong,iterated,generalizes,recuperation,vihara,circassians,psychical,chavo,memoires,infiltrates,notaries,pelecaniformesfamily,strident,chivalric,pierrepont,alleviating,broadsides,centipede,b.tech,reinterpreted,sudetenland,hussite,covenanters,radhika,ironclads,gainsbourg,testis,penarth,plantar,azadegan,beano,espn.com,leominster,autobiographies,nbcuniversal,eliade,khamenei,montferrat,undistinguished,ethnological,wenlock,fricatives,polymorphic,biome,joule,sheaths,astrophysicist,salve,neoclassicism,lovat,downwind,belisarius,forma,usurpation,freie,depopulation,backbench,ascenso,'high,aagpbl,gdanski,zalman,mouvement,encapsulation,bolshevism,statny,voyageurs,hywel,vizcaya,mazra'eh,narthex,azerbaijanis,cerebrospinal,mauretania,fantail,clearinghouse,bolingbroke,pequeno,ansett,remixing,microtubule,wrens,jawahar,palembang,gambian,hillsong,fingerboard,repurposed,sundry,incipient,veolia,theologically,ulaanbaatar,atsushi,foundling,resistivity,myeloma,factbook,mazowiecka,diacritic,urumqi,clontarf,provokes,intelsat,professes,materialise,portobello,benedictines,panionios,introverted,reacquired,bridport,mammary,kripke,oratorios,vlore,stoning,woredas,unreported,antti,togolese,fanzines,heuristics,conservatories,carburetors,clitheroe,cofounded,formula_57,erupting,quinnipiac,bootle,ghostface,sittings,aspinall,sealift,transferase,boldklub,siskiyou,predominated,francophonie,ferruginous,castrum,neogene,sakya,madama,precipitous,'love,posix,bithynia,uttara,avestan,thrushes,seiji,memorably,septimius,libri,cibernetico,hyperinflation,dissuaded,cuddalore,peculiarity,vaslui,grojec,albumin,thurles,casks,fasteners,fluidity,buble,casals,terek,gnosticism,cognates,ulnar,radwanska,babylonians,majuro,oxidizer,excavators,rhythmically,liffey,gorakhpur,eurydice,underscored,arborea,lumumba,tuber,catholique,grama,galilei,scrope,centreville,jacobin,bequests,ardeche,polygamous,montauban,terai,weatherboard,readability,attainder,acraea,transversely,rivets,winterbottom,reassures,bacteriology,vriesea,chera,andesite,dedications,homogenous,reconquered,bandon,forrestal,ukiyo,gurdjieff,tethys,sparc,muscogee,grebes,belchatow,mansa,blantyre,palliser,sokolow,fibroblasts,exmoor,misaki,soundscapes,housatonic,middelburg,convenor,leyla,antipope,histidine,okeechobee,alkenes,sombre,alkene,rubik,macaques,calabar,trophee,pinchot,'free,frusciante,chemins,falaise,vasteras,gripped,schwarzenberg,cumann,kanchipuram,acoustically,silverbacks,fangio,inset,plympton,kuril,vaccinations,recep,theropods,axils,stavropol,encroached,apoptotic,papandreou,wailers,moonstone,assizes,micrometers,hornchurch,truncation,annapurna,egyptologists,rheumatic,promiscuity,satiric,fleche,caloptilia,anisotropy,quaternions,gruppo,viscounts,awardees,aftershocks,sigint,concordance,oblasts,gaumont,stent,commissars,kesteven,hydroxy,vijayanagar,belorussian,fabricius,watermark,tearfully,mamet,leukaemia,sorkh,milepost,tattooing,vosta,abbasids,uncompleted,hedong,woodwinds,extinguishing,malus,multiplexes,francoist,pathet,responsa,bassists,'most,postsecondary,ossory,grampian,saakashvili,alito,strasberg,impressionistic,volador,gelatinous,vignette,underwing,campanian,abbasabad,albertville,hopefuls,nieuwe,taxiways,reconvened,recumbent,pathologists,unionized,faversham,asymptotically,romulo,culling,donja,constricted,annesley,duomo,enschede,lovech,sharpshooter,lansky,dhamma,papillae,alanine,mowat,delius,wrest,mcluhan,podkarpackie,imitators,bilaspur,stunting,pommel,casemate,handicaps,nagas,testaments,hemings,necessitate,rearward,locative,cilla,klitschko,lindau,merion,consequential,antic,soong,copula,berthing,chevrons,rostral,sympathizer,budokan,ranulf,beria,stilt,replying,conflated,alcibiades,painstaking,yamanashi,calif.,arvid,ctesiphon,xizong,rajas,caxton,downbeat,resurfacing,rudders,miscegenation,deathmatch,foregoing,arthropod,attestation,karts,reapportionment,harnessing,eastlake,schola,dosing,postcolonial,imtiaz,formula_55,insulators,gunung,accumulations,pampas,llewelyn,bahnhof,cytosol,grosjean,teaneck,briarcliff,arsenio,canara,elaborating,passchendaele,searchlights,holywell,mohandas,preventable,gehry,mestizos,ustinov,cliched,'national,heidfeld,tertullian,jihadist,tourer,miletus,semicircle,outclassed,bouillon,cardinalate,clarifies,dakshina,bilayer,pandyan,unrwa,chandragupta,formula_56,portola,sukumaran,lactation,islamia,heikki,couplers,misappropriation,catshark,montt,ploughs,carib,stator,leaderboard,kenrick,dendrites,scape,tillamook,molesworth,mussorgsky,melanesia,restated,troon,glycoside,truckee,headwater,mashup,sectoral,gangwon,docudrama,skirting,psychopathology,dramatised,ostroleka,infestations,thabo,depolarization,wideroe,eisenbahn,thomond,kumaon,upendra,foreland,acronyms,yaqui,retaking,raphaelite,specie,dupage,villars,lucasarts,chloroplast,werribee,balsa,ascribe,havant,flava,khawaja,tyumen,subtract,interrogators,reshaping,buzzcocks,eesti,campanile,potemkin,apertures,snowboarder,registrars,handbooks,boyar,contaminant,depositors,proximate,jeunesse,zagora,pronouncements,mists,nihilism,deified,margraviate,pietersen,moderators,amalfi,adjectival,copepods,magnetosphere,pallets,clemenceau,castra,perforation,granitic,troilus,grzegorz,luthier,dockyards,antofagasta,ffestiniog,subroutine,afterword,waterwheel,druce,nitin,undifferentiated,emacs,readmitted,barneveld,tapers,hittites,infomercials,infirm,braathens,heligoland,carpark,geomagnetic,musculoskeletal,nigerien,machinima,harmonize,repealing,indecency,muskoka,verite,steubenville,suffixed,cytoskeleton,surpasses,harmonia,imereti,ventricles,heterozygous,envisions,otsego,ecoles,warrnambool,burgenland,seria,rawat,capistrano,welby,kirin,enrollments,caricom,dragonlance,schaffhausen,expanses,photojournalism,brienne,etude,referent,jamtland,schemas,xianbei,cleburne,bicester,maritima,shorelines,diagonals,bjelke,nonpublic,aliasing,m.f.a,ovals,maitreya,skirmishing,grothendieck,sukhothai,angiotensin,bridlington,durgapur,contras,gakuen,skagit,rabbinate,tsunamis,haphazard,tyldesley,microcontroller,discourages,hialeah,compressing,septimus,larvik,condoleezza,psilocybin,protectionism,songbirds,clandestinely,selectmen,wargame,cinemascope,khazars,agronomy,melzer,latifah,cherokees,recesses,assemblymen,basescu,banaras,bioavailability,subchannels,adenine,o'kelly,prabhakar,leonese,dimethyl,testimonials,geoffroy,oxidant,universiti,gheorghiu,bohdan,reversals,zamorin,herbivore,jarre,sebastiao,infanterie,dolmen,teddington,radomsko,spaceships,cuzco,recapitulation,mahoning,bainimarama,myelin,aykroyd,decals,tokelau,nalgonda,rajasthani,121st,quelled,tambov,illyrians,homilies,illuminations,hypertrophy,grodzisk,inundation,incapacity,equilibria,combats,elihu,steinitz,berengar,gowda,canwest,khosrau,maculata,houten,kandinsky,onside,leatherhead,heritable,belvidere,federative,chukchi,serling,eruptive,patan,entitlements,suffragette,evolutions,migrates,demobilisation,athleticism,trope,sarpsborg,kensal,translink,squamish,concertgebouw,energon,timestamp,competences,zalgiris,serviceman,codice_7,spoofing,assange,mahadevan,skien,suceava,augustan,revisionism,unconvincing,hollande,drina,gottlob,lippi,broglie,darkening,tilapia,eagerness,nacht,kolmogorov,photometric,leeuwarden,jrotc,haemorrhage,almanack,cavalli,repudiation,galactose,zwickau,cetinje,houbraken,heavyweights,gabonese,ordinals,noticias,museveni,steric,charaxes,amjad,resection,joinville,leczyca,anastasius,purbeck,subtribe,dalles,leadoff,monoamine,jettisoned,kaori,anthologized,alfreton,indic,bayezid,tottori,colonizing,assassinating,unchanging,eusebian,d'estaing,tsingtao,toshio,transferases,peronist,metrology,equus,mirpur,libertarianism,kovil,indole,'green,abstention,quantitatively,icebreakers,tribals,mainstays,dryandra,eyewear,nilgiri,chrysanthemum,inositol,frenetic,merchantman,hesar,physiotherapist,transceiver,dancefloor,rankine,neisse,marginalization,lengthen,unaided,rework,pageantry,savio,striated,funen,witton,illuminates,frass,hydrolases,akali,bistrita,copywriter,firings,handballer,tachinidae,dmytro,coalesce,neretva,menem,moraines,coatbridge,crossrail,spoofed,drosera,ripen,protour,kikuyu,boleslav,edwardes,troubadours,haplogroups,wrasse,educationalist,sroda,khaneh,dagbladet,apennines,neuroscientist,deplored,terje,maccabees,daventry,spaceport,lessening,ducats,singer/guitarist,chambersburg,yeong,configurable,ceremonially,unrelenting,caffe,graaf,denizens,kingsport,ingush,panhard,synthesised,tumulus,homeschooled,bozorg,idiomatic,thanhouser,queensway,radek,hippolytus,inking,banovina,peacocks,piaui,handsworth,pantomimes,abalone,thera,kurzweil,bandura,augustinians,bocelli,ferrol,jiroft,quadrature,contravention,saussure,rectification,agrippina,angelis,matanzas,nidaros,palestrina,latium,coriolis,clostridium,ordain,uttering,lanchester,proteolytic,ayacucho,merseburg,holbein,sambalpur,algebraically,inchon,ostfold,savoia,calatrava,lahiri,judgeship,ammonite,masaryk,meyerbeer,hemorrhagic,superspeedway,ningxia,panicles,encircles,khmelnytsky,profusion,esher,babol,inflationary,anhydride,gaspe,mossy,periodicity,nacion,meteorologists,mahjong,interventional,sarin,moult,enderby,modell,palgrave,warners,montcalm,siddha,functionalism,rilke,politicized,broadmoor,kunste,orden,brasileira,araneta,eroticism,colquhoun,mamba,blacktown,tubercle,seagrass,manoel,camphor,neoregelia,llandudno,annexe,enplanements,kamien,plovers,statisticians,iturbide,madrasah,nontrivial,publican,landholders,manama,uninhabitable,revivalist,trunkline,friendliness,gurudwara,rocketry,unido,tripos,besant,braque,evolutionarily,abkhazian,staffel,ratzinger,brockville,bohemond,intercut,djurgarden,utilitarianism,deploys,sastri,absolutism,subhas,asghar,fictions,sepinwall,proportionately,titleholders,thereon,foursquare,machinegun,knightsbridge,siauliai,aqaba,gearboxes,castaways,weakens,phallic,strzelce,buoyed,ruthenia,pharynx,intractable,neptunes,koine,leakey,netherlandish,preempted,vinay,terracing,instigating,alluvium,prosthetics,vorarlberg,politiques,joinery,reduplication,nebuchadnezzar,lenticular,banka,seaborne,pattinson,helpline,aleph,beckenham,californians,namgyal,franziska,aphid,branagh,transcribe,appropriateness,surakarta,takings,propagates,juraj,b0d3fb,brera,arrayed,tailback,falsehood,hazleton,prosody,egyptology,pinnate,tableware,ratan,camperdown,ethnologist,tabari,classifiers,biogas,126th,kabila,arbitron,apuestas,membranous,kincardine,oceana,glories,natick,populism,synonymy,ghalib,mobiles,motherboards,stationers,germinal,patronised,formula_58,gaborone,torts,jeezy,interleague,novaya,batticaloa,offshoots,wilbraham,filename,nswrfl,'well,trilobite,pythons,optimally,scientologists,rhesus,pilsen,backdrops,batang,unionville,hermanos,shrikes,fareham,outlawing,discontinuing,boisterous,shamokin,scanty,southwestward,exchangers,unexpired,mewar,h.m.s,saldanha,pawan,condorcet,turbidity,donau,indulgences,coincident,cliques,weeklies,bardhaman,violators,kenai,caspase,xperia,kunal,fistula,epistemic,cammell,nephi,disestablishment,rotator,germaniawerft,pyaar,chequered,jigme,perlis,anisotropic,popstars,kapil,appendices,berat,defecting,shacks,wrangel,panchayath,gorna,suckling,aerosols,sponheim,talal,borehole,encodings,enlai,subduing,agong,nadar,kitsap,syrmia,majumdar,pichilemu,charleville,embryology,booting,literati,abutting,basalts,jussi,repubblica,hertogenbosch,digitization,relents,hillfort,wiesenthal,kirche,bhagwan,bactrian,oases,phyla,neutralizing,helsing,ebooks,spearheading,margarine,'golden,phosphor,picea,stimulants,outliers,timescale,gynaecology,integrator,skyrocketed,bridgnorth,senecio,ramachandra,suffragist,arrowheads,aswan,inadvertent,microelectronics,118th,sofer,kubica,melanesian,tuanku,balkh,vyborg,crystallographic,initiators,metamorphism,ginzburg,looters,unimproved,finistere,newburyport,norges,immunities,franchisees,asterism,kortrijk,camorra,komsomol,fleurs,draughts,patagonian,voracious,artin,collaborationist,revolucion,revitalizing,xaver,purifying,antipsychotic,disjunct,pompeius,dreamwave,juvenal,beinn,adiyaman,antitank,allama,boletus,melanogaster,dumitru,caproni,aligns,athabaskan,stobart,phallus,veikkausliiga,hornsey,buffering,bourbons,dobruja,marga,borax,electrics,gangnam,motorcyclist,whidbey,draconian,lodger,galilean,sanctification,imitates,boldness,underboss,wheatland,cantabrian,terceira,maumee,redefining,uppercase,ostroda,characterise,universalism,equalized,syndicalism,haringey,masovia,deleuze,funkadelic,conceals,thuan,minsky,pluralistic,ludendorff,beekeeping,bonfires,endoscopic,abuts,prebend,jonkoping,amami,tribunes,yup'ik,awadh,gasification,pforzheim,reforma,antiwar,vaishnavism,maryville,inextricably,margrethe,empresa,neutrophils,sanctified,ponca,elachistidae,curiae,quartier,mannar,hyperplasia,wimax,busing,neologism,florins,underrepresented,digitised,nieuw,cooch,howards,frege,hughie,plied,swale,kapellmeister,vajpayee,quadrupled,aeronautique,dushanbe,custos,saltillo,kisan,tigray,manaus,epigrams,shamanic,peppered,frosts,promotion/relegation,concedes,zwingli,charentes,whangarei,hyung,spring/summer,sobre,eretz,initialization,sawai,ephemera,grandfathered,arnaldo,customised,permeated,parapets,growths,visegrad,estudios,altamont,provincia,apologises,stoppard,carburettor,rifts,kinematic,zhengzhou,eschatology,prakrit,folate,yvelines,scapula,stupas,rishon,reconfiguration,flutist,1680s,apostolate,proudhon,lakshman,articulating,stortford,faithfull,bitterns,upwelling,qur'anic,lidar,interferometry,waterlogged,koirala,ditton,wavefunction,fazal,babbage,antioxidants,lemberg,deadlocked,tolled,ramapo,mathematica,leiria,topologies,khali,photonic,balti,1080p,corrects,recommenced,polyglot,friezes,tiebreak,copacabana,cholmondeley,armband,abolishment,sheamus,buttes,glycolysis,cataloged,warrenton,sassari,kishan,foodservice,cryptanalysis,holmenkollen,cosplay,machi,yousuf,mangal,allying,fertiliser,otomi,charlevoix,metallurg,parisians,bottlenose,oakleigh,debug,cidade,accede,ligation,madhava,pillboxes,gatefold,aveyron,sorin,thirsk,immemorial,menelik,mehra,domingos,underpinned,fleshed,harshness,diphthong,crestwood,miskolc,dupri,pyrausta,muskingum,tuoba,prodi,incidences,waynesboro,marquesas,heydar,artesian,calinescu,nucleation,funders,covalently,compaction,derbies,seaters,sodor,tabular,amadou,peckinpah,o'halloran,zechariah,libyans,kartik,daihatsu,chandran,erzhu,heresies,superheated,yarder,dorde,tanjore,abusers,xuanwu,juniperus,moesia,trusteeship,birdwatching,beatz,moorcock,harbhajan,sanga,choreographic,photonics,boylston,amalgamate,prawns,electrifying,sarath,inaccurately,exclaims,powerpoint,chaining,cpusa,adulterous,saccharomyces,glogow,vfl/afl,syncretic,simla,persisting,functors,allosteric,euphorbiaceae,juryo,mlada,moana,gabala,thornycroft,kumanovo,ostrovsky,sitio,tutankhamun,sauropods,kardzhali,reinterpretation,sulpice,rosyth,originators,halesowen,delineation,asesoria,abatement,gardai,elytra,taillights,overlays,monsoons,sandpipers,ingmar,henrico,inaccuracy,irwell,arenabowl,elche,pressburg,signalman,interviewees,sinkhole,pendle,ecommerce,cellos,nebria,organometallic,surrealistic,propagandist,interlaken,canandaigua,aerials,coutinho,pascagoula,tonopah,letterkenny,gropius,carbons,hammocks,childe,polities,hosiery,donitz,suppresses,diaghilev,stroudsburg,bagram,pistoia,regenerating,unitarians,takeaway,offstage,vidin,glorification,bakunin,yavapai,lutzow,sabercats,witney,abrogated,gorlitz,validating,dodecahedron,stubbornly,telenor,glaxosmithkline,solapur,undesired,jellicoe,dramatization,four-and-a-half,seawall,waterpark,artaxerxes,vocalization,typographic,byung,sachsenhausen,shepparton,kissimmee,konnan,belsen,dhawan,khurd,mutagenesis,vejle,perrot,estradiol,formula_60,saros,chiloe,misiones,lamprey,terrains,speke,miasto,eigenvectors,haydock,reservist,corticosteroids,savitri,shinawatra,developmentally,yehudi,berates,janissaries,recapturing,rancheria,subplots,gresley,nikkatsu,oryol,cosmas,boavista,formula_59,playfully,subsections,commentated,kathakali,dorid,vilaine,seepage,hylidae,keiji,kazakhs,triphosphate,1620s,supersede,monarchists,falla,miyako,notching,bhumibol,polarizing,secularized,shingled,bronislaw,lockerbie,soleyman,bundesbahn,latakia,redoubts,boult,inwardly,invents,ondrej,minangkabau,newquay,permanente,alhaji,madhav,malini,ellice,bookmaker,mankiewicz,etihad,o'dea,interrogative,mikawa,wallsend,canisius,bluesy,vitruvius,noord,ratifying,mixtec,gujranwala,subprefecture,keelung,goiania,nyssa,shi'ite,semitone,ch'uan,computerised,pertuan,catapults,nepomuk,shruti,millstones,buskerud,acolytes,tredegar,sarum,armia,dell'arte,devises,custodians,upturned,gallaudet,disembarking,thrashed,sagrada,myeon,undeclared,qumran,gaiden,tepco,janesville,showground,condense,chalon,unstaffed,pasay,undemocratic,hauts,viridis,uninjured,escutcheon,gymkhana,petaling,hammam,dislocations,tallaght,rerum,shias,indios,guaranty,simplicial,benares,benediction,tajiri,prolifically,huawei,onerous,grantee,ferencvaros,otranto,carbonates,conceit,digipak,qadri,masterclasses,swamiji,cradock,plunket,helmsman,119th,salutes,tippecanoe,murshidabad,intelligibility,mittal,diversifying,bidar,asansol,crowdsourcing,rovere,karakoram,grindcore,skylights,tulagi,furrows,ligne,stuka,sumer,subgraph,amata,regionalist,bulkeley,teletext,glorify,readied,lexicographer,sabadell,predictability,quilmes,phenylalanine,bandaranaike,pyrmont,marksmen,quisling,viscountess,sociopolitical,afoul,pediments,swazi,martyrology,nullify,panagiotis,superconductors,veldenz,jujuy,l'isle,hematopoietic,shafi,subsea,hattiesburg,jyvaskyla,kebir,myeloid,landmine,derecho,amerindians,birkenau,scriabin,milhaud,mucosal,nikaya,freikorps,theoretician,proconsul,o'hanlon,clerked,bactria,houma,macular,topologically,shrubby,aryeh,ghazali,afferent,magalhaes,moduli,ashtabula,vidarbha,securitate,ludwigsburg,adoor,varun,shuja,khatun,chengde,bushels,lascelles,professionnelle,elfman,rangpur,unpowered,citytv,chojnice,quaternion,stokowski,aschaffenburg,commutes,subramaniam,methylene,satrap,gharb,namesakes,rathore,helier,gestational,heraklion,colliers,giannis,pastureland,evocation,krefeld,mahadeva,churchmen,egret,yilmaz,galeazzo,pudukkottai,artigas,generalitat,mudslides,frescoed,enfeoffed,aphorisms,melilla,montaigne,gauliga,parkdale,mauboy,linings,prema,sapir,xylophone,kushan,rockne,sequoyah,vasyl,rectilinear,vidyasagar,microcosm,san'a,carcinogen,thicknesses,aleut,farcical,moderating,detested,hegemonic,instalments,vauban,verwaltungsgemeinschaft,picayune,razorback,magellanic,moluccas,pankhurst,exportation,waldegrave,sufferer,bayswater,1up.com,rearmament,orangutans,varazdin,b.o.b,elucidate,harlingen,erudition,brankovic,lapis,slipway,urraca,shinde,unwell,elwes,euboea,colwyn,srivijaya,grandstands,hortons,generalleutnant,fluxes,peterhead,gandhian,reals,alauddin,maximized,fairhaven,endow,ciechanow,perforations,darters,panellist,manmade,litigants,exhibitor,tirol,caracalla,conformance,hotelier,stabaek,hearths,borac,frisians,ident,veliko,emulators,schoharie,uzbeks,samarra,prestwick,wadia,universita,tanah,bucculatrix,predominates,genotypes,denounces,roadsides,ganassi,keokuk,philatelist,tomic,ingots,conduits,samplers,abdus,johar,allegories,timaru,wolfpacks,secunda,smeaton,sportivo,inverting,contraindications,whisperer,moradabad,calamities,bakufu,soundscape,smallholders,nadeem,crossroad,xenophobic,zakir,nationalliga,glazes,retroflex,schwyz,moroder,rubra,quraysh,theodoros,endemol,infidels,km/hr,repositioned,portraitist,lluis,answerable,arges,mindedness,coarser,eyewall,teleported,scolds,uppland,vibraphone,ricoh,isenburg,bricklayer,cuttlefish,abstentions,communicable,cephalopod,stockyards,balto,kinston,armbar,bandini,elphaba,maxims,bedouins,sachsen,friedkin,tractate,pamir,ivanovo,mohini,kovalainen,nambiar,melvyn,orthonormal,matsuyama,cuernavaca,veloso,overstated,streamer,dravid,informers,analyte,sympathized,streetscape,gosta,thomasville,grigore,futuna,depleting,whelks,kiedis,armadale,earner,wynyard,dothan,animating,tridentine,sabri,immovable,rivoli,ariege,parley,clinker,circulates,junagadh,fraunhofer,congregants,180th,buducnost,formula_62,olmert,dedekind,karnak,bayernliga,mazes,sandpiper,ecclestone,yuvan,smallmouth,decolonization,lemmy,adjudicated,retiro,legia,benue,posit,acidification,wahab,taconic,floatplane,perchlorate,atria,wisbech,divestment,dallara,phrygia,palustris,cybersecurity,rebates,facie,mineralogical,substituent,proteges,fowey,mayenne,smoothbore,cherwell,schwarzschild,junin,murrumbidgee,smalltalk,d'orsay,emirati,calaveras,titusville,theremin,vikramaditya,wampanoag,burra,plaines,onegin,emboldened,whampoa,langa,soderbergh,arnaz,sowerby,arendal,godunov,pathanamthitta,damselfly,bestowing,eurosport,iconoclasm,outfitters,acquiesced,badawi,hypotension,ebbsfleet,annulus,sohrab,thenceforth,chagatai,necessitates,aulus,oddities,toynbee,uniontown,innervation,populaire,indivisible,rossellini,minuet,cyrene,gyeongju,chania,cichlids,harrods,1690s,plunges,abdullahi,gurkhas,homebuilt,sortable,bangui,rediff,incrementally,demetrios,medaille,sportif,svend,guttenberg,tubules,carthusian,pleiades,torii,hoppus,phenyl,hanno,conyngham,teschen,cronenberg,wordless,melatonin,distinctiveness,autos,freising,xuanzang,dunwich,satanism,sweyn,predrag,contractually,pavlovic,malaysians,micrometres,expertly,pannonian,abstaining,capensis,southwesterly,catchphrases,commercialize,frankivsk,normanton,hibernate,verso,deportees,dubliners,codice_8,condors,zagros,glosses,leadville,conscript,morrisons,usury,ossian,oulton,vaccinium,civet,ayman,codrington,hadron,nanometers,geochemistry,extractor,grigori,tyrrhenian,neocollyris,drooping,falsification,werft,courtauld,brigantine,orhan,chapultepec,supercopa,federalized,praga,havering,encampments,infallibility,sardis,pawar,undirected,reconstructionist,ardrossan,varuna,pastimes,archdiocesan,fledging,shenhua,molise,secondarily,stagnated,replicates,ciencias,duryodhana,marauding,ruislip,ilyich,intermixed,ravenswood,shimazu,mycorrhizal,icosahedral,consents,dunblane,follicular,pekin,suffield,muromachi,kinsale,gauche,businesspeople,thereto,watauga,exaltation,chelmno,gorse,proliferate,drainages,burdwan,kangra,transducers,inductor,duvalier,maguindanao,moslem,uncaf,givenchy,plantarum,liturgics,telegraphs,lukashenko,chenango,andante,novae,ironwood,faubourg,torme,chinensis,ambala,pietermaritzburg,virginians,landform,bottlenecks,o'driscoll,darbhanga,baptistery,ameer,needlework,naperville,auditoriums,mullingar,starrer,animatronic,topsoil,madura,cannock,vernet,santurce,catocala,ozeki,pontevedra,multichannel,sundsvall,strategists,medio,135th,halil,afridi,trelawny,caloric,ghraib,allendale,hameed,ludwigshafen,spurned,pavlo,palmar,strafed,catamarca,aveiro,harmonization,surah,predictors,solvay,mande,omnipresent,parenthesis,echolocation,equaling,experimenters,acyclic,lithographic,sepoys,katarzyna,sridevi,impoundment,khosrow,caesarean,nacogdoches,rockdale,lawmaker,caucasians,bahman,miyan,rubric,exuberance,bombastic,ductile,snowdonia,inlays,pinyon,anemones,hurries,hospitallers,tayyip,pulleys,treme,photovoltaics,testbed,polonium,ryszard,osgoode,profiting,ironwork,unsurpassed,nepticulidae,makai,lumbini,preclassic,clarksburg,egremont,videography,rehabilitating,ponty,sardonic,geotechnical,khurasan,solzhenitsyn,henna,phoenicia,rhyolite,chateaux,retorted,tomar,deflections,repressions,harborough,renan,brumbies,vandross,storia,vodou,clerkenwell,decking,universo,salon.com,imprisoning,sudwest,ghaziabad,subscribing,pisgah,sukhumi,econometric,clearest,pindar,yildirim,iulia,atlases,cements,remaster,dugouts,collapsible,resurrecting,batik,unreliability,thiers,conjunctions,colophon,marcher,placeholder,flagella,wolds,kibaki,viviparous,twelver,screenshots,aroostook,khadr,iconographic,itasca,jaume,basti,propounded,varro,be'er,jeevan,exacted,shrublands,creditable,brocade,boras,bittern,oneonta,attentional,herzliya,comprehensible,lakeville,discards,caxias,frankland,camerata,satoru,matlab,commutator,interprovincial,yorkville,benefices,nizami,edwardsville,amigaos,cannabinoid,indianola,amateurliga,pernicious,ubiquity,anarchic,novelties,precondition,zardari,symington,sargodha,headphone,thermopylae,mashonaland,zindagi,thalberg,loewe,surfactants,dobro,crocodilians,samhita,diatoms,haileybury,berwickshire,supercritical,sofie,snorna,slatina,intramolecular,agung,osteoarthritis,obstetric,teochew,vakhtang,connemara,deformations,diadem,ferruccio,mainichi,qualitatively,refrigerant,rerecorded,methylated,karmapa,krasinski,restatement,rouvas,cubitt,seacoast,schwarzkopf,homonymous,shipowner,thiamine,approachable,xiahou,160th,ecumenism,polistes,internazionali,fouad,berar,biogeography,texting,inadequately,'when,4kids,hymenoptera,emplaced,cognomen,bellefonte,supplant,michaelmas,uriel,tafsir,morazan,schweinfurt,chorister,ps400,nscaa,petipa,resolutely,ouagadougou,mascarene,supercell,konstanz,bagrat,harmonix,bergson,shrimps,resonators,veneta,camas,mynydd,rumford,generalmajor,khayyam,web.com,pappus,halfdan,tanana,suomen,yutaka,bibliographical,traian,silat,noailles,contrapuntal,agaricus,'special,minibuses,1670s,obadiah,deepa,rorschach,malolos,lymington,valuations,imperials,caballeros,ambroise,judicature,elegiac,sedaka,shewa,checksum,gosforth,legionaries,corneille,microregion,friedrichshafen,antonis,surnamed,mycelium,cantus,educations,topmost,outfitting,ivica,nankai,gouda,anthemic,iosif,supercontinent,antifungal,belarusians,mudaliar,mohawks,caversham,glaciated,basemen,stevan,clonmel,loughton,deventer,positivist,manipuri,tensors,panipat,changeup,impermeable,dubbo,elfsborg,maritimo,regimens,bikram,bromeliad,substratum,norodom,gaultier,queanbeyan,pompeo,redacted,eurocopter,mothballed,centaurs,borno,copra,bemidji,'home,sopron,neuquen,passo,cineplex,alexandrov,wysokie,mammoths,yossi,sarcophagi,congreve,petkovic,extraneous,waterbirds,slurs,indias,phaeton,discontented,prefaced,abhay,prescot,interoperable,nordisk,bicyclists,validly,sejong,litovsk,zanesville,kapitanleutnant,kerch,changeable,mcclatchy,celebi,attesting,maccoll,sepahan,wayans,veined,gaudens,markt,dansk,soane,quantized,petersham,forebears,nayarit,frenzied,queuing,bygone,viggo,ludwik,tanka,hanssen,brythonic,cornhill,primorsky,stockpiles,conceptualization,lampeter,hinsdale,mesoderm,bielsk,rosenheim,ultron,joffrey,stanwyck,khagan,tiraspol,pavelic,ascendant,empoli,metatarsal,descentralizado,masada,ligier,huseyin,ramadi,waratah,tampines,ruthenium,statoil,mladost,liger,grecian,multiparty,digraph,maglev,reconsideration,radiography,cartilaginous,taizu,wintered,anabaptist,peterhouse,shoghi,assessors,numerator,paulet,painstakingly,halakhic,rocroi,motorcycling,gimel,kryptonian,emmeline,cheeked,drawdown,lelouch,dacians,brahmana,reminiscence,disinfection,optimizations,golders,extensor,tsugaru,tolling,liman,gulzar,unconvinced,crataegus,oppositional,dvina,pyrolysis,mandan,alexius,prion,stressors,loomed,moated,dhivehi,recyclable,relict,nestlings,sarandon,kosovar,solvers,czeslaw,kenta,maneuverable,middens,berkhamsted,comilla,folkways,loxton,beziers,batumi,petrochemicals,optimised,sirjan,rabindra,musicality,rationalisation,drillers,subspaces,'live,bbwaa,outfielders,tsung,danske,vandalised,norristown,striae,kanata,gastroenterology,steadfastly,equalising,bootlegging,mannerheim,notodontidae,lagoa,commentating,peninsulas,chishti,seismology,modigliani,preceptor,canonically,awardee,boyaca,hsinchu,stiffened,nacelle,bogor,dryness,unobstructed,yaqub,scindia,peeters,irritant,ammonites,ferromagnetic,speechwriter,oxygenated,walesa,millais,canarian,faience,calvinistic,discriminant,rasht,inker,annexes,howth,allocates,conditionally,roused,regionalism,regionalbahn,functionary,nitrates,bicentenary,recreates,saboteurs,koshi,plasmids,thinned,124th,plainview,kardashian,neuville,victorians,radiates,127th,vieques,schoolmates,petru,tokusatsu,keying,sunaina,flamethrower,'bout,demersal,hosokawa,corelli,omniscient,o'doherty,niksic,reflectivity,transdev,cavour,metronome,temporally,gabba,nsaids,geert,mayport,hematite,boeotia,vaudreuil,torshavn,sailplane,mineralogist,eskisehir,practises,gallifrey,takumi,unease,slipstream,hedmark,paulinus,ailsa,wielkopolska,filmworks,adamantly,vinaya,facelifted,franchisee,augustana,toppling,velvety,crispa,stonington,histological,genealogist,tactician,tebow,betjeman,nyingma,overwinter,oberoi,rampal,overwinters,petaluma,lactarius,stanmore,balikpapan,vasant,inclines,laminate,munshi,sociedade,rabbah,septal,boyband,ingrained,faltering,inhumans,nhtsa,affix,l'ordre,kazuki,rossendale,mysims,latvians,slaveholders,basilicata,neuburg,assize,manzanillo,scrobipalpa,formula_61,belgique,pterosaurs,privateering,vaasa,veria,northport,pressurised,hobbyist,austerlitz,sahih,bhadra,siliguri,bistrica,bursaries,wynton,corot,lepidus,lully,libor,libera,olusegun,choline,mannerism,lymphocyte,chagos,duxbury,parasitism,ecowas,morotai,cancion,coniston,aggrieved,sputnikmusic,parle,ammonian,civilisations,malformation,cattaraugus,skyhawks,d'arc,demerara,bronfman,midwinter,piscataway,jogaila,threonine,matins,kohlberg,hubli,pentatonic,camillus,nigam,potro,unchained,chauvel,orangeville,cistercians,redeployment,xanthi,manju,carabinieri,pakeha,nikolaevich,kantakouzenos,sesquicentennial,gunships,symbolised,teramo,ballo,crusading,l'oeil,bharatpur,lazier,gabrovo,hysteresis,rothbard,chaumont,roundel,ma'mun,sudhir,queried,newts,shimane,presynaptic,playfield,taxonomists,sensitivities,freleng,burkinabe,orfeo,autovia,proselytizing,bhangra,pasok,jujutsu,heung,pivoting,hominid,commending,formula_64,epworth,christianized,oresund,hantuchova,rajputana,hilversum,masoretic,dayak,bakri,assen,magog,macromolecules,waheed,qaida,spassky,rumped,protrudes,preminger,misogyny,glencairn,salafi,lacunae,grilles,racemes,areva,alighieri,inari,epitomized,photoshoot,one-of-a-kind,tring,muralist,tincture,backwaters,weaned,yeasts,analytically,smaland,caltrans,vysocina,jamuna,mauthausen,175th,nouvelles,censoring,reggina,christology,gilad,amplifying,mehmood,johnsons,redirects,eastgate,sacrum,meteoric,riverbanks,guidebooks,ascribes,scoparia,iconoclastic,telegraphic,chine,merah,mistico,lectern,sheung,aethelstan,capablanca,anant,uspto,albatrosses,mymensingh,antiretroviral,clonal,coorg,vaillant,liquidator,gigas,yokai,eradicating,motorcyclists,waitakere,tandon,nears,montenegrins,250th,tatsuya,yassin,atheistic,syncretism,nahum,berisha,transcended,owensboro,lakshmana,abteilung,unadorned,nyack,overflows,harrisonburg,complainant,uematsu,frictional,worsens,sangguniang,abutment,bulwer,sarma,apollinaire,shippers,lycia,alentejo,porpoises,optus,trawling,augustow,blackwall,workbench,westmount,leaped,sikandar,conveniences,stornoway,culverts,zoroastrians,hristo,ansgar,assistive,reassert,fanned,compasses,delgada,maisons,arima,plonsk,verlaine,starstruck,rakhine,befell,spirally,wyclef,expend,colloquium,formula_63,albertus,bellarmine,handedness,holon,introns,movimiento,profitably,lohengrin,discoverers,awash,erste,pharisees,dwarka,oghuz,hashing,heterodox,uloom,vladikavkaz,linesman,rehired,nucleophile,germanicus,gulshan,songz,bayerische,paralympian,crumlin,enjoined,khanum,prahran,penitent,amersfoort,saranac,semisimple,vagrants,compositing,tualatin,oxalate,lavra,ironi,ilkeston,umpqua,calum,stretford,zakat,guelders,hydrazine,birkin,spurring,modularity,aspartate,sodermanland,hopital,bellary,legazpi,clasico,cadfael,hypersonic,volleys,pharmacokinetics,carotene,orientale,pausini,bataille,lunga,retailed,m.phil,mazowieckie,vijayan,rawal,sublimation,promissory,estimators,ploughed,conflagration,penda,segregationist,otley,amputee,coauthor,sopra,pellew,wreckers,tollywood,circumscription,permittivity,strabane,landward,articulates,beaverbrook,rutherglen,coterminous,whistleblowers,colloidal,surbiton,atlante,oswiecim,bhasa,lampooned,chanter,saarc,landkreis,tribulation,tolerates,daiichi,hatun,cowries,dyschirius,abercromby,attock,aldwych,inflows,absolutist,l'histoire,committeeman,vanbrugh,headstock,westbourne,appenzell,hoxton,oculus,westfalen,roundabouts,nickelback,trovatore,quenching,summarises,conservators,transmutation,talleyrand,barzani,unwillingly,axonal,'blue,opining,enveloping,fidesz,rafah,colborne,flickr,lozenge,dulcimer,ndebele,swaraj,oxidize,gonville,resonated,gilani,superiore,endeared,janakpur,shepperton,solidifying,memoranda,sochaux,kurnool,rewari,emirs,kooning,bruford,unavailability,kayseri,judicious,negating,pterosaur,cytosolic,chernihiv,variational,sabretooth,seawolves,devalued,nanded,adverb,volunteerism,sealers,nemours,smederevo,kashubian,bartin,animax,vicomte,polotsk,polder,archiepiscopal,acceptability,quidditch,tussock,seminaire,immolation,belge,coves,wellingborough,khaganate,mckellen,nayaka,brega,kabhi,pontoons,bascule,newsreels,injectors,cobol,weblog,diplo,biggar,wheatbelt,erythrocytes,pedra,showgrounds,bogdanovich,eclecticism,toluene,elegies,formalize,andromedae,airworthiness,springville,mainframes,overexpression,magadha,bijelo,emlyn,glutamine,accenture,uhuru,metairie,arabidopsis,patanjali,peruvians,berezovsky,accion,astrolabe,jayanti,earnestly,sausalito,recurved,1500s,ramla,incineration,galleons,laplacian,shiki,smethwick,isomerase,dordevic,janow,jeffersonville,internationalism,penciled,styrene,ashur,nucleoside,peristome,horsemanship,sedges,bachata,medes,kristallnacht,schneerson,reflectance,invalided,strutt,draupadi,destino,partridges,tejas,quadrennial,aurel,halych,ethnomusicology,autonomist,radyo,rifting,shi'ar,crvena,telefilm,zawahiri,plana,sultanates,theodorus,subcontractors,pavle,seneschal,teleports,chernivtsi,buccal,brattleboro,stankovic,safar,dunhuang,electrocution,chastised,ergonomic,midsomer,130th,zomba,nongovernmental,escapist,localize,xuzhou,kyrie,carinthian,karlovac,nisan,kramnik,pilipino,digitisation,khasi,andronicus,highwayman,maior,misspelling,sebastopol,socon,rhaetian,archimandrite,partway,positivity,otaku,dingoes,tarski,geopolitics,disciplinarian,zulfikar,kenzo,globose,electrophilic,modele,storekeeper,pohang,wheldon,washers,interconnecting,digraphs,intrastate,campy,helvetic,frontispiece,ferrocarril,anambra,petraeus,midrib,endometrial,dwarfism,mauryan,endocytosis,brigs,percussionists,furtherance,synergistic,apocynaceae,krona,berthier,circumvented,casal,siltstone,precast,ethnikos,realists,geodesy,zarzuela,greenback,tripathi,persevered,interments,neutralization,olbermann,departements,supercomputing,demobilised,cassavetes,dunder,ministering,veszprem,barbarism,'world,pieve,apologist,frentzen,sulfides,firewalls,pronotum,staatsoper,hachette,makhachkala,oberland,phonon,yoshihiro,instars,purnima,winslet,mutsu,ergative,sajid,nizamuddin,paraphrased,ardeidae,kodagu,monooxygenase,skirmishers,sportiva,o'byrne,mykolaiv,ophir,prieta,gyllenhaal,kantian,leche,copan,herero,ps250,gelsenkirchen,shalit,sammarinese,chetwynd,wftda,travertine,warta,sigmaringen,concerti,namespace,ostergotland,biomarker,universals,collegio,embarcadero,wimborne,fiddlers,likening,ransomed,stifled,unabated,kalakaua,khanty,gongs,goodrem,countermeasure,publicizing,geomorphology,swedenborg,undefended,catastrophes,diverts,storyboards,amesbury,contactless,placentia,festivity,authorise,terrane,thallium,stradivarius,antonine,consortia,estimations,consecrate,supergiant,belichick,pendants,butyl,groza,univac,afire,kavala,studi,teletoon,paucity,gonbad,koninklijke,128th,stoichiometric,multimodal,facundo,anatomic,melamine,creuse,altan,brigands,mcguinty,blomfield,tsvangirai,protrusion,lurgan,warminster,tenzin,russellville,discursive,definable,scotrail,lignin,reincorporated,o'dell,outperform,redland,multicolored,evaporates,dimitrie,limbic,patapsco,interlingua,surrogacy,cutty,potrero,masud,cahiers,jintao,ardashir,centaurus,plagiarized,minehead,musings,statuettes,logarithms,seaview,prohibitively,downforce,rivington,tomorrowland,microbiologist,ferric,morag,capsid,kucinich,clairvaux,demotic,seamanship,cicada,painterly,cromarty,carbonic,tupou,oconee,tehuantepec,typecast,anstruther,internalized,underwriters,tetrahedra,flagrant,quakes,pathologies,ulrik,nahal,tarquini,dongguan,parnassus,ryoko,senussi,seleucia,airasia,einer,sashes,d'amico,matriculating,arabesque,honved,biophysical,hardinge,kherson,mommsen,diels,icbms,reshape,brasiliensis,palmach,netaji,oblate,functionalities,grigor,blacksburg,recoilless,melanchthon,reales,astrodome,handcrafted,memes,theorizes,isma'il,aarti,pirin,maatschappij,stabilizes,honiara,ashbury,copts,rootes,defensed,queiroz,mantegna,galesburg,coraciiformesfamily,cabrillo,tokio,antipsychotics,kanon,173rd,apollonia,finial,lydian,hadamard,rangi,dowlatabad,monolingual,platformer,subclasses,chiranjeevi,mirabeau,newsgroup,idmanyurdu,kambojas,walkover,zamoyski,generalist,khedive,flanges,knowle,bande,157th,alleyn,reaffirm,pininfarina,zuckerberg,hakodate,131st,aditi,bellinzona,vaulter,planking,boscombe,colombians,lysis,toppers,metered,nahyan,queensryche,minho,nagercoil,firebrand,foundress,bycatch,mendota,freeform,antena,capitalisation,martinus,overijssel,purists,interventionist,zgierz,burgundians,hippolyta,trompe,umatilla,moroccans,dictionnaire,hydrography,changers,chota,rimouski,aniline,bylaw,grandnephew,neamt,lemnos,connoisseurs,tractive,rearrangements,fetishism,finnic,apalachicola,landowning,calligraphic,circumpolar,mansfeld,legible,orientalism,tannhauser,blamey,maximization,noinclude,blackbirds,angara,ostersund,pancreatitis,glabra,acleris,juried,jungian,triumphantly,singlet,plasmas,synesthesia,yellowhead,unleashes,choiseul,quanzhong,brookville,kaskaskia,igcse,skatepark,jatin,jewellers,scaritinae,techcrunch,tellurium,lachaise,azuma,codeshare,dimensionality,unidirectional,scolaire,macdill,camshafts,unassisted,verband,kahlo,eliya,prelature,chiefdoms,saddleback,sockers,iommi,coloratura,llangollen,biosciences,harshest,maithili,k'iche,plical,multifunctional,andreu,tuskers,confounding,sambre,quarterdeck,ascetics,berdych,transversal,tuolumne,sagami,petrobras,brecker,menxia,instilling,stipulating,korra,oscillate,deadpan,v/line,pyrotechnic,stoneware,prelims,intracoastal,retraining,ilija,berwyn,encrypt,achievers,zulfiqar,glycoproteins,khatib,farmsteads,occultist,saman,fionn,derulo,khilji,obrenovic,argosy,toowong,dementieva,sociocultural,iconostasis,craigslist,festschrift,taifa,intercalated,tanjong,penticton,sharad,marxian,extrapolation,guises,wettin,prabang,exclaiming,kosta,famas,conakry,wanderings,'aliabad,macleay,exoplanet,bancorp,besiegers,surmounting,checkerboard,rajab,vliet,tarek,operable,wargaming,haldimand,fukuyama,uesugi,aggregations,erbil,brachiopods,tokyu,anglais,unfavorably,ujpest,escorial,armagnac,nagara,funafuti,ridgeline,cocking,o'gorman,compactness,retardant,krajowa,barua,coking,bestows,thampi,chicagoland,variably,o'loughlin,minnows,schwa,shaukat,polycarbonate,chlorinated,godalming,gramercy,delved,banqueting,enlil,sarada,prasanna,domhnall,decadal,regressive,lipoprotein,collectable,surendra,zaporizhia,cycliste,suchet,offsetting,formula_65,pudong,d'arte,blyton,quonset,osmania,tientsin,manorama,proteomics,bille,jalpaiguri,pertwee,barnegat,inventiveness,gollancz,euthanized,henricus,shortfalls,wuxia,chlorides,cerrado,polyvinyl,folktale,straddled,bioengineering,eschewing,greendale,recharged,olave,ceylonese,autocephalous,peacebuilding,wrights,guyed,rosamund,abitibi,bannockburn,gerontology,scutari,souness,seagram,codice_9,'open,xhtml,taguig,purposed,darbar,orthopedics,unpopulated,kisumu,tarrytown,feodor,polyhedral,monadnock,gottorp,priam,redesigning,gasworks,elfin,urquiza,homologation,filipovic,bohun,manningham,gornik,soundness,shorea,lanus,gelder,darke,sandgate,criticality,paranaense,153rd,vieja,lithograph,trapezoid,tiebreakers,convalescence,yan'an,actuaries,balad,altimeter,thermoelectric,trailblazer,previn,tenryu,ancaster,endoscopy,nicolet,discloses,fracking,plaine,salado,americanism,placards,absurdist,propylene,breccia,jirga,documenta,ismailis,161st,brentano,dallas/fort,embellishment,calipers,subscribes,mahavidyalaya,wednesbury,barnstormers,miwok,schembechler,minigame,unterberger,dopaminergic,inacio,nizamabad,overridden,monotype,cavernous,stichting,sassafras,sotho,argentinean,myrrh,rapidity,flatts,gowrie,dejected,kasaragod,cyprinidae,interlinked,arcseconds,degeneracy,infamously,incubate,substructure,trigeminal,sectarianism,marshlands,hooliganism,hurlers,isolationist,urania,burrard,switchover,lecco,wilts,interrogator,strived,ballooning,volterra,raciborz,relegating,gilding,cybele,dolomites,parachutist,lochaber,orators,raeburn,backend,benaud,rallycross,facings,banga,nuclides,defencemen,futurity,emitters,yadkin,eudonia,zambales,manasseh,sirte,meshes,peculiarly,mcminnville,roundly,boban,decrypt,icelanders,sanam,chelan,jovian,grudgingly,penalised,subscript,gambrinus,poaceae,infringements,maleficent,runciman,148th,supersymmetry,granites,liskeard,eliciting,involution,hallstatt,kitzbuhel,shankly,sandhills,inefficiencies,yishuv,psychotropic,nightjars,wavell,sangamon,vaikundar,choshu,retrospectives,pitesti,gigantea,hashemi,bosna,gakuin,siochana,arrangers,baronetcies,narayani,temecula,creston,koscierzyna,autochthonous,wyandot,anniston,igreja,mobilise,buzau,dunster,musselburgh,wenzhou,khattak,detoxification,decarboxylase,manlius,campbells,coleoptera,copyist,sympathisers,suisun,eminescu,defensor,transshipment,thurgau,somerton,fluctuates,ambika,weierstrass,lukow,giambattista,volcanics,romanticized,innovated,matabeleland,scotiabank,garwolin,purine,d'auvergne,borderland,maozhen,pricewaterhousecoopers,testator,pallium,scout.com,mv/pi,nazca,curacies,upjohn,sarasvati,monegasque,ketrzyn,malory,spikelets,biomechanics,haciendas,rapped,dwarfed,stews,nijinsky,subjection,matsu,perceptible,schwarzburg,midsection,entertains,circuitous,epiphytic,wonsan,alpini,bluefield,sloths,transportable,braunfels,dictum,szczecinek,jukka,wielun,wejherowo,hucknall,grameen,duodenum,ribose,deshpande,shahar,nexstar,injurious,dereham,lithographer,dhoni,structuralist,progreso,deschutes,christus,pulteney,quoins,yitzchak,gyeongsang,breviary,makkah,chiyoda,jutting,vineland,angiosperms,necrotic,novelisation,redistribute,tirumala,140th,featureless,mafic,rivaling,toyline,2/1st,martius,saalfeld,monthan,texian,kathak,melodramas,mithila,regierungsbezirk,509th,fermenting,schoolmate,virtuosic,briain,kokoda,heliocentric,handpicked,kilwinning,sonically,dinars,kasim,parkways,bogdanov,luxembourgian,halland,avesta,bardic,daugavpils,excavator,qwest,frustrate,physiographic,majoris,'ndrangheta,unrestrained,firmness,montalban,abundances,preservationists,adare,executioners,guardsman,bonnaroo,neglects,nazrul,pro12,hoorn,abercorn,refuting,kabud,cationic,parapsychology,troposphere,venezuelans,malignancy,khoja,unhindered,accordionist,medak,visby,ejercito,laparoscopic,dinas,umayyads,valmiki,o'dowd,saplings,stranding,incisions,illusionist,avocets,buccleuch,amazonia,fourfold,turboprops,roosts,priscus,turnstile,areal,certifies,pocklington,spoofs,viseu,commonalities,dabrowka,annam,homesteaders,daredevils,mondrian,negotiates,fiestas,perennials,maximizes,lubavitch,ravindra,scrapers,finials,kintyre,violas,snoqualmie,wilders,openbsd,mlawa,peritoneal,devarajan,congke,leszno,mercurial,fakir,joannes,bognor,overloading,unbuilt,gurung,scuttle,temperaments,bautzen,jardim,tradesman,visitations,barbet,sagamore,graaff,forecasters,wilsons,assis,l'air,shariah,sochaczew,russa,dirge,biliary,neuve,heartbreakers,strathearn,jacobian,overgrazing,edrich,anticline,parathyroid,petula,lepanto,decius,channelled,parvathi,puppeteers,communicators,francorchamps,kahane,longus,panjang,intron,traite,xxvii,matsuri,amrit,katyn,disheartened,cacak,omonia,alexandrine,partaking,wrangling,adjuvant,haskovo,tendrils,greensand,lammermoor,otherworld,volusia,stabling,one-and-a-half,bresson,zapatista,eotvos,ps150,webisodes,stepchildren,microarray,braganca,quanta,dolne,superoxide,bellona,delineate,ratha,lindenwood,bruhl,cingulate,tallies,bickerton,helgi,bevin,takoma,tsukuba,statuses,changeling,alister,bytom,dibrugarh,magnesia,duplicating,outlier,abated,goncalo,strelitz,shikai,mardan,musculature,ascomycota,springhill,tumuli,gabaa,odenwald,reformatted,autocracy,theresienstadt,suplex,chattopadhyay,mencken,congratulatory,weatherfield,systema,solemnity,projekt,quanzhou,kreuzberg,postbellum,nobuo,mediaworks,finisterre,matchplay,bangladeshis,kothen,oocyte,hovered,aromas,afshar,browed,teases,chorlton,arshad,cesaro,backbencher,iquique,vulcans,padmini,unabridged,cyclase,despotic,kirilenko,achaean,queensberry,debre,octahedron,iphigenia,curbing,karimnagar,sagarmatha,smelters,surrealists,sanada,shrestha,turridae,leasehold,jiedushi,eurythmics,appropriating,correze,thimphu,amery,musicomh,cyborgs,sandwell,pushcart,retorts,ameliorate,deteriorates,stojanovic,spline,entrenchments,bourse,chancellorship,pasolini,lendl,personage,reformulated,pubescens,loiret,metalurh,reinvention,nonhuman,eilema,tarsal,complutense,magne,broadview,metrodome,outtake,stouffville,seinen,bataillon,phosphoric,ostensible,opatow,aristides,beefheart,glorifying,banten,romsey,seamounts,fushimi,prophylaxis,sibylla,ranjith,goslar,balustrades,georgiev,caird,lafitte,peano,canso,bankura,halfpenny,segregate,caisson,bizerte,jamshedpur,euromaidan,philosophie,ridged,cheerfully,reclassification,aemilius,visionaries,samoans,wokingham,chemung,wolof,unbranched,cinerea,bhosle,ourense,immortalised,cornerstones,sourcebook,khufu,archimedean,universitatea,intermolecular,fiscally,suffices,metacomet,adjudicator,stablemate,specks,glace,inowroclaw,patristic,muharram,agitating,ashot,neurologic,didcot,gamla,ilves,putouts,siraj,laski,coaling,diarmuid,ratnagiri,rotulorum,liquefaction,morbihan,harel,aftershock,gruiformesfamily,bonnier,falconiformesfamily,adorns,wikis,maastrichtian,stauffenberg,bishopsgate,fakhr,sevenfold,ponders,quantifying,castiel,opacity,depredations,lenten,gravitated,o'mahony,modulates,inuktitut,paston,kayfabe,vagus,legalised,balked,arianism,tendering,sivas,birthdate,awlaki,khvajeh,shahab,samtgemeinde,bridgeton,amalgamations,biogenesis,recharging,tsukasa,mythbusters,chamfered,enthronement,freelancers,maharana,constantia,sutil,messines,monkton,okanogan,reinvigorated,apoplexy,tanahashi,neues,valiants,harappan,russes,carding,volkoff,funchal,statehouse,imitative,intrepidity,mellotron,samaras,turkana,besting,longitudes,exarch,diarrhoea,transcending,zvonareva,darna,ramblin,disconnection,137th,refocused,diarmait,agricole,ba'athist,turenne,contrabass,communis,daviess,fatimids,frosinone,fittingly,polyphyletic,qanat,theocratic,preclinical,abacha,toorak,marketplaces,conidia,seiya,contraindicated,retford,bundesautobahn,rebuilds,climatology,seaworthy,starfighter,qamar,categoria,malai,hellinsia,newstead,airworthy,catenin,avonmouth,arrhythmias,ayyavazhi,downgrade,ashburnham,ejector,kinematics,petworth,rspca,filmation,accipitridae,chhatrapati,g/mol,bacau,agama,ringtone,yudhoyono,orchestrator,arbitrators,138th,powerplants,cumbernauld,alderley,misamis,hawai`i,cuando,meistriliiga,jermyn,alans,pedigrees,ottavio,approbation,omnium,purulia,prioress,rheinland,lymphoid,lutsk,oscilloscope,ballina,iliac,motorbikes,modernising,uffizi,phylloxera,kalevala,bengalis,amravati,syntheses,interviewers,inflectional,outflank,maryhill,unhurt,profiler,nacelles,heseltine,personalised,guarda,herpetologist,airpark,pigot,margaretha,dinos,peleliu,breakbeat,kastamonu,shaivism,delamere,kingsville,epigram,khlong,phospholipids,journeying,lietuvos,congregated,deviance,celebes,subsoil,stroma,kvitova,lubricating,layoff,alagoas,olafur,doron,interuniversity,raycom,agonopterix,uzice,nanna,springvale,raimundo,wrested,pupal,talat,skinheads,vestige,unpainted,handan,odawara,ammar,attendee,lapped,myotis,gusty,ciconiiformesfamily,traversal,subfield,vitaphone,prensa,hasidism,inwood,carstairs,kropotkin,turgenev,dobra,remittance,purim,tannin,adige,tabulation,lethality,pacha,micronesian,dhruva,defensemen,tibeto,siculus,radioisotope,sodertalje,phitsanulok,euphonium,oxytocin,overhangs,skinks,fabrica,reinterred,emulates,bioscience,paragliding,raekwon,perigee,plausibility,frolunda,erroll,aznar,vyasa,albinus,trevally,confederacion,terse,sixtieth,1530s,kendriya,skateboarders,frontieres,muawiyah,easements,shehu,conservatively,keystones,kasem,brutalist,peekskill,cowry,orcas,syllabary,paltz,elisabetta,denticles,hampering,dolni,eidos,aarau,lermontov,yankton,shahbaz,barrages,kongsvinger,reestablishment,acetyltransferase,zulia,mrnas,slingsby,eucalypt,efficacious,weybridge,gradation,cinematheque,malthus,bampton,coexisted,cisse,hamdi,cupertino,saumarez,chionodes,libertine,formers,sakharov,pseudonymous,vol.1,mcduck,gopalakrishnan,amberley,jorhat,grandmasters,rudiments,dwindle,param,bukidnon,menander,americanus,multipliers,pulawy,homoerotic,pillbox,cd+dvd,epigraph,aleksandrow,extrapolated,horseshoes,contemporain,angiography,hasselt,shawinigan,memorization,legitimized,cyclades,outsold,rodolphe,kelis,powerball,dijkstra,analyzers,incompressible,sambar,orangeburg,osten,reauthorization,adamawa,sphagnum,hypermarket,millipedes,zoroaster,madea,ossuary,murrayfield,pronominal,gautham,resellers,ethers,quarrelled,dolna,stragglers,asami,tangut,passos,educacion,sharaf,texel,berio,bethpage,bezalel,marfa,noronha,36ers,genteel,avram,shilton,compensates,sweetener,reinstalled,disables,noether,1590s,balakrishnan,kotaro,northallerton,cataclysm,gholam,cancellara,schiphol,commends,longinus,albinism,gemayel,hamamatsu,volos,islamism,sidereal,pecuniary,diggings,townsquare,neosho,lushan,chittoor,akhil,disputation,desiccation,cambodians,thwarting,deliberated,ellipsis,bahini,susumu,separators,kohneh,plebeians,kultur,ogaden,pissarro,trypeta,latur,liaodong,vetting,datong,sohail,alchemists,lengthwise,unevenly,masterly,microcontrollers,occupier,deviating,farringdon,baccalaureat,theocracy,chebyshev,archivists,jayaram,ineffectiveness,scandinavians,jacobins,encomienda,nambu,g/cm3,catesby,paavo,heeded,rhodium,idealised,10deg,infective,mecyclothorax,halevy,sheared,minbari,audax,lusatian,rebuffs,hitfix,fastener,subjugate,tarun,binet,compuserve,synthesiser,keisuke,amalric,ligatures,tadashi,ignazio,abramovich,groundnut,otomo,maeve,mortlake,ostrogoths,antillean,todor,recto,millimetre,espousing,inaugurate,paracetamol,galvanic,harpalinae,jedrzejow,reassessment,langlands,civita,mikan,stikine,bijar,imamate,istana,kaiserliche,erastus,federale,cytosine,expansionism,hommes,norrland,smriti,snapdragon,gulab,taleb,lossy,khattab,urbanised,sesto,rekord,diffuser,desam,morganatic,silting,pacts,extender,beauharnais,purley,bouches,halfpipe,discontinuities,houthi,farmville,animism,horni,saadi,interpretative,blockades,symeon,biogeographic,transcaucasian,jetties,landrieu,astrocytes,conjunto,stumpings,weevils,geysers,redux,arching,romanus,tazeh,marcellinus,casein,opava,misrata,anare,sattar,declarer,dreux,oporto,venta,vallis,icosahedron,cortona,lachine,mohammedan,sandnes,zynga,clarin,diomedes,tsuyoshi,pribram,gulbarga,chartist,superettan,boscawen,altus,subang,gating,epistolary,vizianagaram,ogdensburg,panna,thyssen,tarkovsky,dzogchen,biograph,seremban,unscientific,nightjar,legco,deism,n.w.a,sudha,siskel,sassou,flintlock,jovial,montbeliard,pallida,formula_66,tranquillity,nisei,adornment,'people,yamhill,hockeyallsvenskan,adopters,appian,lowicz,haplotypes,succinctly,starogard,presidencies,kheyrabad,sobibor,kinesiology,cowichan,militum,cromwellian,leiningen,ps1.5,concourses,dalarna,goldfield,brzeg,faeces,aquarii,matchless,harvesters,181st,numismatics,korfball,sectioned,transpires,facultative,brandishing,kieron,forages,menai,glutinous,debarge,heathfield,1580s,malang,photoelectric,froome,semiotic,alwar,grammophon,chiaroscuro,mentalist,maramures,flacco,liquors,aleutians,marvell,sutlej,patnaik,qassam,flintoff,bayfield,haeckel,sueno,avicii,exoplanets,hoshi,annibale,vojislav,honeycombs,celebrant,rendsburg,veblen,quails,141st,carronades,savar,narrations,jeeva,ontologies,hedonistic,marinette,godot,munna,bessarabian,outrigger,thame,gravels,hoshino,falsifying,stereochemistry,nacionalista,medially,radula,ejecting,conservatorio,odile,ceiba,jaina,essonne,isometry,allophones,recidivism,iveco,ganda,grammarians,jagan,signposted,uncompressed,facilitators,constancy,ditko,propulsive,impaling,interbank,botolph,amlaib,intergroup,sorbus,cheka,debye,praca,adorning,presbyteries,dormition,strategos,qarase,pentecostals,beehives,hashemite,goldust,euronext,egress,arpanet,soames,jurchens,slovenska,copse,kazim,appraisals,marischal,mineola,sharada,caricaturist,sturluson,galba,faizabad,overwintering,grete,uyezds,didsbury,libreville,ablett,microstructure,anadolu,belenenses,elocution,cloaks,timeslots,halden,rashidun,displaces,sympatric,germanus,tuples,ceska,equalize,disassembly,krautrock,babangida,memel,deild,gopala,hematology,underclass,sangli,wawrinka,assur,toshack,refrains,nicotinic,bhagalpur,badami,racetracks,pocatello,walgreens,nazarbayev,occultation,spinnaker,geneon,josias,hydrolyzed,dzong,corregimiento,waistcoat,thermoplastic,soldered,anticancer,lactobacillus,shafi'i,carabus,adjournment,schlumberger,triceratops,despotate,mendicant,krishnamurti,bahasa,earthworm,lavoisier,noetherian,kalki,fervently,bhawan,saanich,coquille,gannet,motagua,kennels,mineralization,fitzherbert,svein,bifurcated,hairdressing,felis,abounded,dimers,fervour,hebdo,bluffton,aetna,corydon,clevedon,carneiro,subjectively,deutz,gastropoda,overshot,concatenation,varman,carolla,maharshi,mujib,inelastic,riverhead,initialized,safavids,rohini,caguas,bulges,fotbollforbund,hefei,spithead,westville,maronites,lytham,americo,gediminas,stephanus,chalcolithic,hijra,gnu/linux,predilection,rulership,sterility,haidar,scarlatti,saprissa,sviatoslav,pointedly,sunroof,guarantor,thevar,airstrips,pultusk,sture,129th,divinities,daizong,dolichoderus,cobourg,maoists,swordsmanship,uprated,bohme,tashi,largs,chandi,bluebeard,householders,richardsonian,drepanidae,antigonish,elbasan,occultism,marca,hypergeometric,oirat,stiglitz,ignites,dzungar,miquelon,pritam,d'automne,ulidiid,niamey,vallecano,fondo,billiton,incumbencies,raceme,chambery,cadell,barenaked,kagame,summerside,haussmann,hatshepsut,apothecaries,criollo,feint,nasals,timurid,feltham,plotinus,oxygenation,marginata,officinalis,salat,participations,ising,downe,izumo,unguided,pretence,coursed,haruna,viscountcy,mainstage,justicia,powiat,takara,capitoline,implacable,farben,stopford,cosmopterix,tuberous,kronecker,galatians,kweli,dogmas,exhorted,trebinje,skanda,newlyn,ablative,basidia,bhiwani,encroachments,stranglers,regrouping,tubal,shoestring,wawel,anionic,mesenchymal,creationists,pyrophosphate,moshi,despotism,powerbook,fatehpur,rupiah,segre,ternate,jessore,b.i.g,shevardnadze,abounds,gliwice,densest,memoria,suborbital,vietcong,ratepayers,karunanidhi,toolbar,descents,rhymney,exhortation,zahedan,carcinomas,hyperbaric,botvinnik,billets,neuropsychological,tigranes,hoards,chater,biennially,thistles,scotus,wataru,flotillas,hungama,monopolistic,payouts,vetch,generalissimo,caries,naumburg,piran,blizzards,escalates,reactant,shinya,theorize,rizzoli,transitway,ecclesiae,streptomyces,cantal,nisibis,superconductor,unworkable,thallus,roehampton,scheckter,viceroys,makuuchi,ilkley,superseding,takuya,klodzko,borbon,raspberries,operand,w.a.k.o,sarabande,factionalism,egalitarianism,temasek,torbat,unscripted,jorma,westerner,perfective,vrije,underlain,goldfrapp,blaenau,jomon,barthes,drivetime,bassa,bannock,umaga,fengxiang,zulus,sreenivasan,farces,codice_10,freeholder,poddebice,imperialists,deregulated,wingtip,o'hagan,pillared,overtone,hofstadter,149th,kitano,saybrook,standardizing,aldgate,staveley,o'flaherty,hundredths,steerable,soltan,empted,cruyff,intramuros,taluks,cotonou,marae,karur,figueres,barwon,lucullus,niobe,zemlya,lathes,homeported,chaux,amyotrophic,opines,exemplars,bhamo,homomorphisms,gauleiter,ladin,mafiosi,airdrieonians,b/soul,decal,transcaucasia,solti,defecation,deaconess,numidia,sampradaya,normalised,wingless,schwaben,alnus,cinerama,yakutsk,ketchikan,orvieto,unearned,monferrato,rotem,aacsb,loong,decoders,skerries,cardiothoracic,repositioning,pimpernel,yohannan,tenebrionoidea,nargis,nouvel,costliest,interdenominational,noize,redirecting,zither,morcha,radiometric,frequenting,irtysh,gbagbo,chakri,litvinenko,infotainment,ravensbruck,harith,corbels,maegashira,jousting,natan,novus,falcao,minis,railed,decile,rauma,ramaswamy,cavitation,paranaque,berchtesgaden,reanimated,schomberg,polysaccharides,exclusionary,cleon,anurag,ravaging,dhanush,mitchells,granule,contemptuous,keisei,rolleston,atlantean,yorkist,daraa,wapping,micrometer,keeneland,comparably,baranja,oranje,schlafli,yogic,dinajpur,unimpressive,masashi,recreativo,alemannic,petersfield,naoko,vasudeva,autosport,rajat,marella,busko,wethersfield,ssris,soulcalibur,kobani,wildland,rookery,hoffenheim,kauri,aliphatic,balaclava,ferrite,publicise,victorias,theism,quimper,chapbook,functionalist,roadbed,ulyanovsk,cupen,purpurea,calthorpe,teofilo,mousavi,cochlea,linotype,detmold,ellerslie,gakkai,telkom,southsea,subcontractor,inguinal,philatelists,zeebrugge,piave,trochidae,dempo,spoilt,saharanpur,mihrab,parasympathetic,barbarous,chartering,antiqua,katsina,bugis,categorizes,altstadt,kandyan,pambansa,overpasses,miters,assimilating,finlandia,uneconomic,am/fm,harpsichordist,dresdner,luminescence,authentically,overpowers,magmatic,cliftonville,oilfields,skirted,berthe,cuman,oakham,frelimo,glockenspiel,confection,saxophonists,piaseczno,multilevel,antipater,levying,maltreatment,velho,opoczno,harburg,pedophilia,unfunded,palettes,plasterwork,breve,dharmendra,auchinleck,nonesuch,blackmun,libretti,rabbani,145th,hasselbeck,kinnock,malate,vanden,cloverdale,ashgabat,nares,radians,steelworkers,sabor,possums,catterick,hemispheric,ostra,outpaced,dungeness,almshouse,penryn,texians,1000m,franchitti,incumbency,texcoco,newar,tramcars,toroidal,meitetsu,spellbound,agronomist,vinifera,riata,bunko,pinas,ba'al,github,vasilyevich,obsolescent,geodesics,ancestries,tujue,capitalised,unassigned,throng,unpaired,psychometric,skegness,exothermic,buffered,kristiansund,tongued,berenger,basho,alitalia,prolongation,archaeologically,fractionation,cyprinid,echinoderms,agriculturally,justiciar,sonam,ilium,baits,danceable,grazer,ardahan,grassed,preemption,glassworks,hasina,ugric,umbra,wahhabi,vannes,tinnitus,capitaine,tikrit,lisieux,scree,hormuz,despenser,jagiellon,maisonneuve,gandaki,santarem,basilicas,lancing,landskrona,weilburg,fireside,elysian,isleworth,krishnamurthy,filton,cynon,tecmo,subcostal,scalars,triglycerides,hyperplane,farmingdale,unione,meydan,pilings,mercosur,reactivate,akiba,fecundity,jatra,natsume,zarqawi,preta,masao,presbyter,oakenfold,rhodri,ferran,ruizong,cloyne,nelvana,epiphanius,borde,scutes,strictures,troughton,whitestone,sholom,toyah,shingon,kutuzov,abelard,passant,lipno,cafeterias,residuals,anabaptists,paratransit,criollos,pleven,radiata,destabilizing,hadiths,bazaars,mannose,taiyo,crookes,welbeck,baoding,archelaus,nguesso,alberni,wingtips,herts,viasat,lankans,evreux,wigram,fassbinder,ryuichi,storting,reducible,olesnica,znojmo,hyannis,theophanes,flatiron,mustering,rajahmundry,kadir,wayang,prome,lethargy,zubin,illegality,conall,dramedy,beerbohm,hipparchus,ziarat,ryuji,shugo,glenorchy,microarchitecture,morne,lewinsky,cauvery,battenberg,hyksos,wayanad,hamilcar,buhari,brazo,bratianu,solms,aksaray,elamite,chilcotin,bloodstock,sagara,dolny,reunified,umlaut,proteaceae,camborne,calabrian,dhanbad,vaxjo,cookware,potez,rediffusion,semitones,lamentations,allgau,guernica,suntory,pleated,stationing,urgell,gannets,bertelsmann,entryway,raphitomidae,acetaldehyde,nephrology,categorizing,beiyang,permeate,tourney,geosciences,khana,masayuki,crucis,universitaria,slaskie,khaimah,finno,advani,astonishingly,tubulin,vampiric,jeolla,sociale,cleethorpes,badri,muridae,suzong,debater,decimation,kenyans,mutualism,pontifex,middlemen,insee,halevi,lamentation,psychopathy,brassey,wenders,kavya,parabellum,prolactin,inescapable,apses,malignancies,rinzai,stigmatized,menahem,comox,ateliers,welshpool,setif,centimetre,truthfulness,downfield,drusus,woden,glycosylation,emanated,agulhas,dalkeith,jazira,nucky,unifil,jobim,operon,oryzomys,heroically,seances,supernumerary,backhouse,hashanah,tatler,imago,invert,hayato,clockmaker,kingsmill,swiecie,analogously,golconda,poste,tacitly,decentralised,ge'ez,diplomatically,fossiliferous,linseed,mahavira,pedestals,archpriest,byelection,domiciled,jeffersonian,bombus,winegrowing,waukegan,uncultivated,haverfordwest,saumur,communally,disbursed,cleeve,zeljeznicar,speciosa,vacationers,sigur,vaishali,zlatko,iftikhar,cropland,transkei,incompleteness,bohra,subantarctic,slieve,physiologic,similis,klerk,replanted,'right,chafee,reproducible,bayburt,regicide,muzaffarpur,plurals,hanyu,orthologs,diouf,assailed,kamui,tarik,dodecanese,gorne,on/off,179th,shimoga,granaries,carlists,valar,tripolitania,sherds,simmern,dissociated,isambard,polytechnical,yuvraj,brabazon,antisense,pubmed,glans,minutely,masaaki,raghavendra,savoury,podcasting,tachi,bienville,gongsun,ridgely,deform,yuichi,binders,canna,carcetti,llobregat,implored,berri,njegos,intermingled,offload,athenry,motherhouse,corpora,kakinada,dannebrog,imperio,prefaces,musicologists,aerospatiale,shirai,nagapattinam,servius,cristoforo,pomfret,reviled,entebbe,stane,east/west,thermometers,matriarchal,siglo,bodil,legionnaire,ze'ev,theorizing,sangeetha,horticulturist,uncountable,lookalike,anoxic,ionospheric,genealogists,chicopee,imprinting,popish,crematoria,diamondback,cyathea,hanzhong,cameramen,halogaland,naklo,waclaw,storehouses,flexed,comuni,frits,glauca,nilgiris,compresses,nainital,continuations,albay,hypoxic,samajwadi,dunkerque,nanticoke,sarwar,interchanged,jubal,corba,jalgaon,derleth,deathstroke,magny,vinnytsia,hyphenated,rimfire,sawan,boehner,disrepute,normalize,aromanian,dualistic,approximant,chama,karimabad,barnacles,sanok,stipends,dyfed,rijksmuseum,reverberation,suncorp,fungicides,reverie,spectrograph,stereophonic,niazi,ordos,alcan,karaite,lautrec,tableland,lamellar,rieti,langmuir,russula,webern,tweaks,hawick,southerner,morphy,naturalisation,enantiomer,michinoku,barbettes,relieves,carburettors,redruth,oblates,vocabularies,mogilev,bagmati,galium,reasserted,extolled,symon,eurosceptic,inflections,tirtha,recompense,oruro,roping,gouverneur,pared,yayoi,watermills,retooled,leukocytes,jubilant,mazhar,nicolau,manheim,touraine,bedser,hambledon,kohat,powerhouses,tlemcen,reuven,sympathetically,afrikaners,interes,handcrafts,etcher,baddeley,wodonga,amaury,155th,vulgarity,pompadour,automorphisms,1540s,oppositions,prekmurje,deryni,fortifying,arcuate,mahila,bocage,uther,nozze,slashes,atlantica,hadid,rhizomatous,azeris,'with,osmena,lewisville,innervated,bandmaster,outcropping,parallelogram,dominicana,twang,ingushetia,extensional,ladino,sastry,zinoviev,relatable,nobilis,cbeebies,hitless,eulima,sporangia,synge,longlisted,criminalized,penitential,weyden,tubule,volyn,priestesses,glenbrook,kibbutzim,windshaft,canadair,falange,zsolt,bonheur,meine,archangels,safeguarded,jamaicans,malarial,teasers,badging,merseyrail,operands,pulsars,gauchos,biotin,bambara,necaxa,egmond,tillage,coppi,anxiolytic,preah,mausoleums,plautus,feroz,debunked,187th,belediyespor,mujibur,wantage,carboxyl,chettiar,murnau,vagueness,racemic,backstretch,courtland,municipio,palpatine,dezful,hyperbola,sreekumar,chalons,altay,arapahoe,tudors,sapieha,quilon,burdensome,kanya,xxviii,recension,generis,siphuncle,repressor,bitrate,mandals,midhurst,dioxin,democratique,upholds,rodez,cinematographic,epoque,jinping,rabelais,zhytomyr,glenview,rebooted,khalidi,reticulata,122nd,monnaie,passersby,ghazals,europaea,lippmann,earthbound,tadic,andorran,artvin,angelicum,banksy,epicentre,resemblances,shuttled,rathaus,bernt,stonemasons,balochi,siang,tynemouth,cygni,biosynthetic,precipitates,sharecroppers,d'annunzio,softbank,shiji,apeldoorn,polycyclic,wenceslas,wuchang,samnites,tamarack,silmarillion,madinah,palaeontology,kirchberg,sculpin,rohtak,aquabats,oviparous,thynne,caney,blimps,minimalistic,whatcom,palatalization,bardstown,direct3d,paramagnetic,kamboja,khash,globemaster,lengua,matej,chernigov,swanage,arsenals,cascadia,cundinamarca,tusculum,leavers,organics,warplanes,'three,exertions,arminius,gandharva,inquires,comercio,kuopio,chabahar,plotlines,mersenne,anquetil,paralytic,buckminster,ambit,acrolophus,quantifiers,clacton,ciliary,ansaldo,fergana,egoism,thracians,chicoutimi,northbrook,analgesia,brotherhoods,hunza,adriaen,fluoridation,snowfalls,soundboard,fangoria,cannibalistic,orthogonius,chukotka,dindigul,manzoni,chainz,macromedia,beltline,muruga,schistura,provable,litex,initio,pneumoniae,infosys,cerium,boonton,cannonballs,d'une,solvency,mandurah,houthis,dolmens,apologists,radioisotopes,blaxploitation,poroshenko,stawell,coosa,maximilien,tempelhof,espouse,declaratory,hambro,xalapa,outmoded,mihiel,benefitting,desirous,archeparchy,repopulated,telescoping,captor,mackaye,disparaged,ramanathan,crowne,tumbled,technetium,silted,chedi,nievre,hyeon,cartoonish,interlock,infocom,rediff.com,dioramas,timekeeping,concertina,kutaisi,cesky,lubomirski,unapologetic,epigraphic,stalactites,sneha,biofilm,falconry,miraflores,catena,'outstanding,prospekt,apotheosis,o'odham,pacemakers,arabica,gandhinagar,reminisces,iroquoian,ornette,tilling,neoliberalism,chameleons,pandava,prefontaine,haiyan,gneisenau,utama,bando,reconstitution,azaria,canola,paratroops,ayckbourn,manistee,stourton,manifestos,lympne,denouement,tractatus,rakim,bellflower,nanometer,sassanids,turlough,presbyterianism,varmland,20deg,phool,nyerere,almohad,manipal,vlaanderen,quickness,removals,makow,circumflex,eatery,morane,fondazione,alkylation,unenforceable,galliano,silkworm,junior/senior,abducts,phlox,konskie,lofoten,buuren,glyphosate,faired,naturae,cobbles,taher,skrulls,dostoevsky,walkout,wagnerian,orbited,methodically,denzil,sarat,extraterritorial,kohima,d'armor,brinsley,rostropovich,fengtian,comitatus,aravind,moche,wrangell,giscard,vantaa,viljandi,hakoah,seabees,muscatine,ballade,camanachd,sothern,mullioned,durad,margraves,maven,arete,chandni,garifuna,142nd,reading/literature,thickest,intensifies,trygve,khaldun,perinatal,asana,powerline,acetylation,nureyev,omiya,montesquieu,riverwalk,marly,correlating,intermountain,bulgar,hammerheads,underscores,wiretapping,quatrain,ruisseau,newsagent,tuticorin,polygyny,hemsworth,partisanship,banna,istrian,evaporator".split(","), female_names: "mary,patricia,linda,barbara,elizabeth,jennifer,maria,susan,margaret,dorothy,lisa,nancy,karen,betty,helen,sandra,donna,carol,ruth,sharon,michelle,laura,sarah,kimberly,deborah,jessica,shirley,cynthia,angela,melissa,brenda,amy,anna,rebecca,virginia,kathleen,pamela,martha,debra,amanda,stephanie,carolyn,christine,marie,janet,catherine,frances,ann,joyce,diane,alice,julie,heather,teresa,doris,gloria,evelyn,jean,cheryl,mildred,katherine,joan,ashley,judith,rose,janice,kelly,nicole,judy,christina,kathy,theresa,beverly,denise,tammy,irene,jane,lori,rachel,marilyn,andrea,kathryn,louise,sara,anne,jacqueline,wanda,bonnie,julia,ruby,lois,tina,phyllis,norma,paula,diana,annie,lillian,emily,robin,peggy,crystal,gladys,rita,dawn,connie,florence,tracy,edna,tiffany,carmen,rosa,cindy,grace,wendy,victoria,edith,kim,sherry,sylvia,josephine,thelma,shannon,sheila,ethel,ellen,elaine,marjorie,carrie,charlotte,monica,esther,pauline,emma,juanita,anita,rhonda,hazel,amber,eva,debbie,april,leslie,clara,lucille,jamie,joanne,eleanor,valerie,danielle,megan,alicia,suzanne,michele,gail,bertha,darlene,veronica,jill,erin,geraldine,lauren,cathy,joann,lorraine,lynn,sally,regina,erica,beatrice,dolores,bernice,audrey,yvonne,annette,marion,dana,stacy,ana,renee,ida,vivian,roberta,holly,brittany,melanie,loretta,yolanda,jeanette,laurie,katie,kristen,vanessa,alma,sue,elsie,beth,jeanne,vicki,carla,tara,rosemary,eileen,terri,gertrude,lucy,tonya,ella,stacey,wilma,gina,kristin,jessie,natalie,agnes,vera,charlene,bessie,delores,melinda,pearl,arlene,maureen,colleen,allison,tamara,joy,georgia,constance,lillie,claudia,jackie,marcia,tanya,nellie,minnie,marlene,heidi,glenda,lydia,viola,courtney,marian,stella,caroline,dora,vickie,mattie,maxine,irma,mabel,marsha,myrtle,lena,christy,deanna,patsy,hilda,gwendolyn,jennie,nora,margie,nina,cassandra,leah,penny,kay,priscilla,naomi,carole,olga,billie,dianne,tracey,leona,jenny,felicia,sonia,miriam,velma,becky,bobbie,violet,kristina,toni,misty,mae,shelly,daisy,ramona,sherri,erika,katrina,claire,lindsey,lindsay,geneva,guadalupe,belinda,margarita,sheryl,cora,faye,ada,sabrina,isabel,marguerite,hattie,harriet,molly,cecilia,kristi,brandi,blanche,sandy,rosie,joanna,iris,eunice,angie,inez,lynda,madeline,amelia,alberta,genevieve,monique,jodi,janie,kayla,sonya,jan,kristine,candace,fannie,maryann,opal,alison,yvette,melody,luz,susie,olivia,flora,shelley,kristy,mamie,lula,lola,verna,beulah,antoinette,candice,juana,jeannette,pam,kelli,whitney,bridget,karla,celia,latoya,patty,shelia,gayle,della,vicky,lynne,sheri,marianne,kara,jacquelyn,erma,blanca,myra,leticia,pat,krista,roxanne,angelica,robyn,adrienne,rosalie,alexandra,brooke,bethany,sadie,bernadette,traci,jody,kendra,nichole,rachael,mable,ernestine,muriel,marcella,elena,krystal,angelina,nadine,kari,estelle,dianna,paulette,lora,mona,doreen,rosemarie,desiree,antonia,janis,betsy,christie,freda,meredith,lynette,teri,cristina,eula,leigh,meghan,sophia,eloise,rochelle,gretchen,cecelia,raquel,henrietta,alyssa,jana,gwen,jenna,tricia,laverne,olive,tasha,silvia,elvira,delia,kate,patti,lorena,kellie,sonja,lila,lana,darla,mindy,essie,mandy,lorene,elsa,josefina,jeannie,miranda,dixie,lucia,marta,faith,lela,johanna,shari,camille,tami,shawna,elisa,ebony,melba,ora,nettie,tabitha,ollie,winifred,kristie,alisha,aimee,rena,myrna,marla,tammie,latasha,bonita,patrice,ronda,sherrie,addie,francine,deloris,stacie,adriana,cheri,abigail,celeste,jewel,cara,adele,rebekah,lucinda,dorthy,effie,trina,reba,sallie,aurora,lenora,etta,lottie,kerri,trisha,nikki,estella,francisca,josie,tracie,marissa,karin,brittney,janelle,lourdes,laurel,helene,fern,elva,corinne,kelsey,ina,bettie,elisabeth,aida,caitlin,ingrid,iva,eugenia,christa,goldie,maude,jenifer,therese,dena,lorna,janette,latonya,candy,consuelo,tamika,rosetta,debora,cherie,polly,dina,jewell,fay,jillian,dorothea,nell,trudy,esperanza,patrica,kimberley,shanna,helena,cleo,stefanie,rosario,ola,janine,mollie,lupe,alisa,lou,maribel,susanne,bette,susana,elise,cecile,isabelle,lesley,jocelyn,paige,joni,rachelle,leola,daphne,alta,ester,petra,graciela,imogene,jolene,keisha,lacey,glenna,gabriela,keri,ursula,lizzie,kirsten,shana,adeline,mayra,jayne,jaclyn,gracie,sondra,carmela,marisa,rosalind,charity,tonia,beatriz,marisol,clarice,jeanine,sheena,angeline,frieda,lily,shauna,millie,claudette,cathleen,angelia,gabrielle,autumn,katharine,jodie,staci,lea,christi,justine,elma,luella,margret,dominique,socorro,martina,margo,mavis,callie,bobbi,maritza,lucile,leanne,jeannine,deana,aileen,lorie,ladonna,willa,manuela,gale,selma,dolly,sybil,abby,ivy,dee,winnie,marcy,luisa,jeri,magdalena,ofelia,meagan,audra,matilda,leila,cornelia,bianca,simone,bettye,randi,virgie,latisha,barbra,georgina,eliza,leann,bridgette,rhoda,haley,adela,nola,bernadine,flossie,ila,greta,ruthie,nelda,minerva,lilly,terrie,letha,hilary,estela,valarie,brianna,rosalyn,earline,catalina,ava,mia,clarissa,lidia,corrine,alexandria,concepcion,tia,sharron,rae,dona,ericka,jami,elnora,chandra,lenore,neva,marylou,melisa,tabatha,serena,avis,allie,sofia,jeanie,odessa,nannie,harriett,loraine,penelope,milagros,emilia,benita,allyson,ashlee,tania,esmeralda,eve,pearlie,zelma,malinda,noreen,tameka,saundra,hillary,amie,althea,rosalinda,lilia,alana,clare,alejandra,elinor,lorrie,jerri,darcy,earnestine,carmella,noemi,marcie,liza,annabelle,louisa,earlene,mallory,carlene,nita,selena,tanisha,katy,julianne,lakisha,edwina,maricela,margery,kenya,dollie,roxie,roslyn,kathrine,nanette,charmaine,lavonne,ilene,tammi,suzette,corine,kaye,chrystal,lina,deanne,lilian,juliana,aline,luann,kasey,maryanne,evangeline,colette,melva,lawanda,yesenia,nadia,madge,kathie,ophelia,valeria,nona,mitzi,mari,georgette,claudine,fran,alissa,roseann,lakeisha,susanna,reva,deidre,chasity,sheree,elvia,alyce,deirdre,gena,briana,araceli,katelyn,rosanne,wendi,tessa,berta,marva,imelda,marietta,marci,leonor,arline,sasha,madelyn,janna,juliette,deena,aurelia,josefa,augusta,liliana,lessie,amalia,savannah,anastasia,vilma,natalia,rosella,lynnette,corina,alfreda,leanna,amparo,coleen,tamra,aisha,wilda,karyn,maura,mai,evangelina,rosanna,hallie,erna,enid,mariana,lacy,juliet,jacklyn,freida,madeleine,mara,cathryn,lelia,casandra,bridgett,angelita,jannie,dionne,annmarie,katina,beryl,millicent,katheryn,diann,carissa,maryellen,liz,lauri,helga,gilda,rhea,marquita,hollie,tisha,tamera,angelique,francesca,kaitlin,lolita,florine,rowena,reyna,twila,fanny,janell,ines,concetta,bertie,alba,brigitte,alyson,vonda,pansy,elba,noelle,letitia,deann,brandie,louella,leta,felecia,sharlene,lesa,beverley,isabella,herminia,terra,celina,tori,octavia,jade,denice,germaine,michell,cortney,nelly,doretha,deidra,monika,lashonda,judi,chelsey,antionette,margot,adelaide,leeann,elisha,dessie,libby,kathi,gayla,latanya,mina,mellisa,kimberlee,jasmin,renae,zelda,elda,justina,gussie,emilie,camilla,abbie,rocio,kaitlyn,edythe,ashleigh,selina,lakesha,geri,allene,pamala,michaela,dayna,caryn,rosalia,jacquline,rebeca,marybeth,krystle,iola,dottie,belle,griselda,ernestina,elida,adrianne,demetria,delma,jaqueline,arleen,virgina,retha,fatima,tillie,eleanore,cari,treva,wilhelmina,rosalee,maurine,latrice,jena,taryn,elia,debby,maudie,jeanna,delilah,catrina,shonda,hortencia,theodora,teresita,robbin,danette,delphine,brianne,nilda,danna,cindi,bess,iona,winona,vida,rosita,marianna,racheal,guillermina,eloisa,celestine,caren,malissa,lona,chantel,shellie,marisela,leora,agatha,soledad,migdalia,ivette,christen,athena,janel,veda,pattie,tessie,tera,marilynn,lucretia,karrie,dinah,daniela,alecia,adelina,vernice,shiela,portia,merry,lashawn,dara,tawana,verda,alene,zella,sandi,rafaela,maya,kira,candida,alvina,suzan,shayla,lettie,samatha,oralia,matilde,larissa,vesta,renita,delois,shanda,phillis,lorri,erlinda,cathrine,barb,isabell,ione,gisela,roxanna,mayme,kisha,ellie,mellissa,dorris,dalia,bella,annetta,zoila,reta,reina,lauretta,kylie,christal,pilar,charla,elissa,tiffani,tana,paulina,leota,breanna,jayme,carmel,vernell,tomasa,mandi,dominga,santa,melodie,lura,alexa,tamela,mirna,kerrie,venus,felicita,cristy,carmelita,berniece,annemarie,tiara,roseanne,missy,cori,roxana,pricilla,kristal,jung,elyse,haydee,aletha,bettina,marge,gillian,filomena,zenaida,harriette,caridad,vada,aretha,pearline,marjory,marcela,flor,evette,elouise,alina,damaris,catharine,belva,nakia,marlena,luanne,lorine,karon,dorene,danita,brenna,tatiana,louann,julianna,andria,philomena,lucila,leonora,dovie,romona,mimi,jacquelin,gaye,tonja,misti,chastity,stacia,roxann,micaela,velda,marlys,johnna,aura,ivonne,hayley,nicki,majorie,herlinda,yadira,perla,gregoria,antonette,shelli,mozelle,mariah,joelle,cordelia,josette,chiquita,trista,laquita,georgiana,candi,shanon,hildegard,stephany,magda,karol,gabriella,tiana,roma,richelle,oleta,jacque,idella,alaina,suzanna,jovita,tosha,nereida,marlyn,kyla,delfina,tena,stephenie,sabina,nathalie,marcelle,gertie,darleen,thea,sharonda,shantel,belen,venessa,rosalina,genoveva,clementine,rosalba,renate,renata,georgianna,floy,dorcas,ariana,tyra,theda,mariam,juli,jesica,vikki,verla,roselyn,melvina,jannette,ginny,debrah,corrie,violeta,myrtis,latricia,collette,charleen,anissa,viviana,twyla,nedra,latonia,hellen,fabiola,annamarie,adell,sharyn,chantal,niki,maud,lizette,lindy,kesha,jeana,danelle,charline,chanel,valorie,dortha,cristal,sunny,leone,leilani,gerri,debi,andra,keshia,eulalia,easter,dulce,natividad,linnie,kami,georgie,catina,brook,alda,winnifred,sharla,ruthann,meaghan,magdalene,lissette,adelaida,venita,trena,shirlene,shameka,elizebeth,dian,shanta,latosha,carlotta,windy,rosina,mariann,leisa,jonnie,dawna,cathie,astrid,laureen,janeen,holli,fawn,vickey,teressa,shante,rubye,marcelina,chanda,terese,scarlett,marnie,lulu,lisette,jeniffer,elenor,dorinda,donita,carman,bernita,altagracia,aleta,adrianna,zoraida,lyndsey,janina,starla,phylis,phuong,kyra,charisse,blanch,sanjuanita,rona,nanci,marilee,maranda,brigette,sanjuana,marita,kassandra,joycelyn,felipa,chelsie,bonny,mireya,lorenza,kyong,ileana,candelaria,sherie,lucie,leatrice,lakeshia,gerda,edie,bambi,marylin,lavon,hortense,garnet,evie,tressa,shayna,lavina,kyung,jeanetta,sherrill,shara,phyliss,mittie,anabel,alesia,thuy,tawanda,joanie,tiffanie,lashanda,karissa,enriqueta,daria,daniella,corinna,alanna,abbey,roxane,roseanna,magnolia,lida,joellen,coral,carleen,tresa,peggie,novella,nila,maybelle,jenelle,carina,nova,melina,marquerite,margarette,josephina,evonne,cinthia,albina,toya,tawnya,sherita,myriam,lizabeth,lise,keely,jenni,giselle,cheryle,ardith,ardis,alesha,adriane,shaina,linnea,karolyn,felisha,dori,darci,artie,armida,zola,xiomara,vergie,shamika,nena,nannette,maxie,lovie,jeane,jaimie,inge,farrah,elaina,caitlyn,felicitas,cherly,caryl,yolonda,yasmin,teena,prudence,pennie,nydia,mackenzie,orpha,marvel,lizbeth,laurette,jerrie,hermelinda,carolee,tierra,mirian,meta,melony,kori,jennette,jamila,yoshiko,susannah,salina,rhiannon,joleen,cristine,ashton,aracely,tomeka,shalonda,marti,lacie,kala,jada,ilse,hailey,brittani,zona,syble,sherryl,nidia,marlo,kandice,kandi,alycia,ronna,norene,mercy,ingeborg,giovanna,gemma,christel,audry,zora,vita,trish,stephaine,shirlee,shanika,melonie,mazie,jazmin,inga,hettie,geralyn,fonda,estrella,adella,sarita,rina,milissa,maribeth,golda,evon,ethelyn,enedina,cherise,chana,velva,tawanna,sade,mirta,karie,jacinta,elna,davina,cierra,ashlie,albertha,tanesha,nelle,mindi,lorinda,larue,florene,demetra,dedra,ciara,chantelle,ashly,suzy,rosalva,noelia,lyda,leatha,krystyna,kristan,karri,darline,darcie,cinda,cherrie,awilda,almeda,rolanda,lanette,jerilyn,gisele,evalyn,cyndi,cleta,carin,zina,zena,velia,tanika,charissa,talia,margarete,lavonda,kaylee,kathlene,jonna,irena,ilona,idalia,candis,candance,brandee,anitra,alida,sigrid,nicolette,maryjo,linette,hedwig,christiana,alexia,tressie,modesta,lupita,lita,gladis,evelia,davida,cherri,cecily,ashely,annabel,agustina,wanita,shirly,rosaura,hulda,yetta,verona,thomasina,sibyl,shannan,mechelle,leandra,lani,kylee,kandy,jolynn,ferne,eboni,corene,alysia,zula,nada,moira,lyndsay,lorretta,jammie,hortensia,gaynell,adria,vina,vicenta,tangela,stephine,norine,nella,liana,leslee,kimberely,iliana,glory,felica,emogene,elfriede,eden,eartha,carma,ocie,lennie,kiara,jacalyn,carlota,arielle,otilia,kirstin,kacey,johnetta,joetta,jeraldine,jaunita,elana,dorthea,cami,amada,adelia,vernita,tamar,siobhan,renea,rashida,ouida,nilsa,meryl,kristyn,julieta,danica,breanne,aurea,anglea,sherron,odette,malia,lorelei,leesa,kenna,kathlyn,fiona,charlette,suzie,shantell,sabra,racquel,myong,mira,martine,lucienne,lavada,juliann,elvera,delphia,christiane,charolette,carri,asha,angella,paola,ninfa,leda,stefani,shanell,palma,machelle,lissa,kecia,kathryne,karlene,julissa,jettie,jenniffer,corrina,carolann,alena,rosaria,myrtice,marylee,liane,kenyatta,judie,janey,elmira,eldora,denna,cristi,cathi,zaida,vonnie,viva,vernie,rosaline,mariela,luciana,lesli,karan,felice,deneen,adina,wynona,tarsha,sheron,shanita,shani,shandra,randa,pinkie,nelida,marilou,lyla,laurene,laci,janene,dorotha,daniele,dani,carolynn,carlyn,berenice,ayesha,anneliese,alethea,thersa,tamiko,rufina,oliva,mozell,marylyn,kristian,kathyrn,kasandra,kandace,janae,domenica,debbra,dannielle,chun,arcelia,zenobia,sharen,sharee,lavinia,kacie,jackeline,huong,felisa,emelia,eleanora,cythia,cristin,claribel,anastacia,zulma,zandra,yoko,tenisha,susann,sherilyn,shay,shawanda,romana,mathilda,linsey,keiko,joana,isela,gretta,georgetta,eugenie,desirae,delora,corazon,antonina,anika,willene,tracee,tamatha,nichelle,mickie,maegan,luana,lanita,kelsie,edelmira,bree,afton,teodora,tamie,shena,linh,keli,kaci,danyelle,arlette,albertine,adelle,tiffiny,simona,nicolasa,nichol,nakisha,maira,loreen,kizzy,fallon,christene,bobbye,ying,vincenza,tanja,rubie,roni,queenie,margarett,kimberli,irmgard,idell,hilma,evelina,esta,emilee,dennise,dania,carie,risa,rikki,particia,masako,luvenia,loree,loni,lien,gigi,florencia,denita,billye,tomika,sharita,rana,nikole,neoma,margarite,madalyn,lucina,laila,kali,jenette,gabriele,evelyne,elenora,clementina,alejandrina,zulema,violette,vannessa,thresa,retta,patience,noella,nickie,jonell,chaya,camelia,bethel,anya,suzann,mila,lilla,laverna,keesha,kattie,georgene,eveline,estell,elizbeth,vivienne,vallie,trudie,stephane,magaly,madie,kenyetta,karren,janetta,hermine,drucilla,debbi,celestina,candie,britni,beckie,amina,zita,yolande,vivien,vernetta,trudi,pearle,patrina,ossie,nicolle,loyce,letty,katharina,joselyn,jonelle,jenell,iesha,heide,florinda,florentina,elodia,dorine,brunilda,brigid,ashli,ardella,twana,tarah,shavon,serina,rayna,ramonita,margurite,lucrecia,kourtney,kati,jesenia,crista,ayana,alica,alia,vinnie,suellen,romelia,rachell,olympia,michiko,kathaleen,jolie,jessi,janessa,hana,elease,carletta,britany,shona,salome,rosamond,regena,raina,ngoc,nelia,louvenia,lesia,latrina,laticia,larhonda,jina,jacki,emmy,deeann,coretta,arnetta,thalia,shanice,neta,mikki,micki,lonna,leana,lashunda,kiley,joye,jacqulyn,ignacia,hyun,hiroko,henriette,elayne,delinda,dahlia,coreen,consuela,conchita,babette,ayanna,anette,albertina,shawnee,shaneka,quiana,pamelia,merri,merlene,margit,kiesha,kiera,kaylene,jodee,jenise,erlene,emmie,dalila,daisey,casie,belia,babara,versie,vanesa,shelba,shawnda,nikia,naoma,marna,margeret,madaline,lawana,kindra,jutta,jazmine,janett,hannelore,glendora,gertrud,garnett,freeda,frederica,florance,flavia,carline,beverlee,anjanette,valda,tamala,shonna,sarina,oneida,merilyn,marleen,lurline,lenna,katherin,jeni,gracia,glady,farah,enola,dominque,devona,delana,cecila,caprice,alysha,alethia,vena,theresia,tawny,shakira,samara,sachiko,rachele,pamella,marni,mariel,maren,malisa,ligia,lera,latoria,larae,kimber,kathern,karey,jennefer,janeth,halina,fredia,delisa,debroah,ciera,angelika,andree,altha,vivan,terresa,tanna,sudie,signe,salena,ronni,rebbecca,myrtie,malika,maida,leonarda,kayleigh,ethyl,ellyn,dayle,cammie,brittni,birgit,avelina,asuncion,arianna,akiko,venice,tyesha,tonie,tiesha,takisha,steffanie,sindy,meghann,manda,macie,kellye,kellee,joslyn,inger,indira,glinda,glennis,fernanda,faustina,eneida,elicia,digna,dell,arletta,willia,tammara,tabetha,sherrell,sari,rebbeca,pauletta,natosha,nakita,mammie,kenisha,kazuko,kassie,earlean,daphine,corliss,clotilde,carolyne,bernetta,augustina,audrea,annis,annabell,tennille,tamica,selene,rosana,regenia,qiana,markita,macy,leeanne,laurine,jessenia,janita,georgine,genie,emiko,elvie,deandra,dagmar,corie,collen,cherish,romaine,porsha,pearlene,micheline,merna,margorie,margaretta,lore,jenine,hermina,fredericka,elke,drusilla,dorathy,dione,celena,brigida,allegra,tamekia,synthia,sook,slyvia,rosann,reatha,raye,marquetta,margart,ling,layla,kymberly,kiana,kayleen,katlyn,karmen,joella,emelda,eleni,detra,clemmie,cheryll,chantell,cathey,arnita,arla,angle,angelic,alyse,zofia,thomasine,tennie,sherly,sherley,sharyl,remedios,petrina,nickole,myung,myrle,mozella,louanne,lisha,latia,krysta,julienne,jeanene,jacqualine,isaura,gwenda,earleen,cleopatra,carlie,audie,antonietta,alise,verdell,tomoko,thao,talisha,shemika,savanna,santina,rosia,raeann,odilia,nana,minna,magan,lynelle,karma,joeann,ivana,inell,ilana,gudrun,dreama,crissy,chante,carmelina,arvilla,annamae,alvera,aleida,yanira,vanda,tianna,stefania,shira,nicol,nancie,monserrate,melynda,melany,lovella,laure,kacy,jacquelynn,hyon,gertha,eliana,christena,christeen,charise,caterina,carley,candyce,arlena,ammie,willette,vanita,tuyet,syreeta,penney,nyla,maryam,marya,magen,ludie,loma,livia,lanell,kimberlie,julee,donetta,diedra,denisha,deane,dawne,clarine,cherryl,bronwyn,alla,valery,tonda,sueann,soraya,shoshana,shela,sharleen,shanelle,nerissa,meridith,mellie,maye,maple,magaret,lili,leonila,leonie,leeanna,lavonia,lavera,kristel,kathey,kathe,jann,ilda,hildred,hildegarde,genia,fumiko,evelin,ermelinda,elly,dung,doloris,dionna,danae,berneice,annice,alix,verena,verdie,shawnna,shawana,shaunna,rozella,randee,ranae,milagro,lynell,luise,loida,lisbeth,karleen,junita,jona,isis,hyacinth,hedy,gwenn,ethelene,erline,donya,domonique,delicia,dannette,cicely,branda,blythe,bethann,ashlyn,annalee,alline,yuko,vella,trang,towanda,tesha,sherlyn,narcisa,miguelina,meri,maybell,marlana,marguerita,madlyn,lory,loriann,leonore,leighann,laurice,latesha,laronda,katrice,kasie,kaley,jadwiga,glennie,gearldine,francina,epifania,dyan,dorie,diedre,denese,demetrice,delena,cristie,cleora,catarina,carisa,barbera,almeta,trula,tereasa,solange,sheilah,shavonne,sanora,rochell,mathilde,margareta,maia,lynsey,lawanna,launa,kena,keena,katia,glynda,gaylene,elvina,elanor,danuta,danika,cristen,cordie,coletta,clarita,carmon,brynn,azucena,aundrea,angele,verlie,verlene,tamesha,silvana,sebrina,samira,reda,raylene,penni,norah,noma,mireille,melissia,maryalice,laraine,kimbery,karyl,karine,jolanda,johana,jesusa,jaleesa,jacquelyne,iluminada,hilaria,hanh,gennie,francie,floretta,exie,edda,drema,delpha,barbar,assunta,ardell,annalisa,alisia,yukiko,yolando,wonda,waltraud,veta,temeka,tameika,shirleen,shenita,piedad,ozella,mirtha,marilu,kimiko,juliane,jenice,janay,jacquiline,hilde,elois,echo,devorah,chau,brinda,betsey,arminda,aracelis,apryl,annett,alishia,veola,usha,toshiko,theola,tashia,talitha,shery,renetta,reiko,rasheeda,obdulia,mika,melaine,meggan,marlen,marget,marceline,mana,magdalen,librada,lezlie,latashia,lasandra,kelle,isidra,inocencia,gwyn,francoise,erminia,erinn,dimple,devora,criselda,armanda,arie,ariane,angelena,aliza,adriene,adaline,xochitl,twanna,tomiko,tamisha,taisha,susy,rutha,rhona,noriko,natashia,merrie,marinda,mariko,margert,loris,lizzette,leisha,kaila,joannie,jerrica,jene,jannet,janee,jacinda,herta,elenore,doretta,delaine,daniell,claudie,britta,apolonia,amberly,alease,yuri,waneta,tomi,sharri,sandie,roselle,reynalda,raguel,phylicia,patria,olimpia,odelia,mitzie,minda,mignon,mica,mendy,marivel,maile,lynetta,lavette,lauryn,latrisha,lakiesha,kiersten,kary,josphine,jolyn,jetta,janise,jacquie,ivelisse,glynis,gianna,gaynelle,danyell,danille,dacia,coralee,cher,ceola,arianne,aleshia,yung,williemae,trinh,thora,sherika,shemeka,shaunda,roseline,ricki,melda,mallie,lavonna,latina,laquanda,lala,lachelle,klara,kandis,johna,jeanmarie,jaye,grayce,gertude,emerita,ebonie,clorinda,ching,chery,carola,breann,blossom,bernardine,becki,arletha,argelia,alita,yulanda,yessenia,tobi,tasia,sylvie,shirl,shirely,shella,shantelle,sacha,rebecka,providencia,paulene,misha,miki,marline,marica,lorita,latoyia,lasonya,kerstin,kenda,keitha,kathrin,jaymie,gricelda,ginette,eryn,elina,elfrieda,danyel,cheree,chanelle,barrie,aurore,annamaria,alleen,ailene,aide,yasmine,vashti,treasa,tiffaney,sheryll,sharie,shanae,raisa,neda,mitsuko,mirella,milda,maryanna,maragret,mabelle,luetta,lorina,letisha,latarsha,lanelle,lajuana,krissy,karly,karena,jessika,jerica,jeanelle,jalisa,jacelyn,izola,euna,etha,domitila,dominica,daina,creola,carli,camie,brittny,ashanti,anisha,aleen,adah,yasuko,valrie,tona,tinisha,terisa,taneka,simonne,shalanda,serita,ressie,refugia,olene,margherita,mandie,maire,lyndia,luci,lorriane,loreta,leonia,lavona,lashawnda,lakia,kyoko,krystina,krysten,kenia,kelsi,jeanice,isobel,georgiann,genny,felicidad,eilene,deloise,deedee,conception,clora,cherilyn,calandra,armandina,anisa,tiera,theressa,stephania,sima,shyla,shonta,shera,shaquita,shala,rossana,nohemi,nery,moriah,melita,melida,melani,marylynn,marisha,mariette,malorie,madelene,ludivina,loria,lorette,loralee,lianne,lavenia,laurinda,lashon,kimi,keila,katelynn,jone,joane,jayna,janella,hertha,francene,elinore,despina,delsie,deedra,clemencia,carolin,bulah,brittanie,blondell,bibi,beaulah,beata,annita,agripina,virgen,valene,twanda,tommye,tarra,tari,tammera,shakia,sadye,ruthanne,rochel,rivka,pura,nenita,natisha,ming,merrilee,melodee,marvis,lucilla,leena,laveta,larita,lanie,keren,ileen,georgeann,genna,frida,eufemia,emely,edyth,deonna,deadra,darlena,chanell,cathern,cassondra,cassaundra,bernarda,berna,arlinda,anamaria,vertie,valeri,torri,stasia,sherise,sherill,sanda,ruthe,rosy,robbi,ranee,quyen,pearly,palmira,onita,nisha,niesha,nida,merlyn,mayola,marylouise,marth,margene,madelaine,londa,leontine,leoma,leia,lauralee,lanora,lakita,kiyoko,keturah,katelin,kareen,jonie,johnette,jenee,jeanett,izetta,hiedi,heike,hassie,giuseppina,georgann,fidela,fernande,elwanda,ellamae,eliz,dusti,dotty,cyndy,coralie,celesta,alverta,xenia,wava,vanetta,torrie,tashina,tandy,tambra,tama,stepanie,shila,shaunta,sharan,shaniqua,shae,setsuko,serafina,sandee,rosamaria,priscila,olinda,nadene,muoi,michelina,mercedez,maryrose,marcene,magali,mafalda,lannie,kayce,karoline,kamilah,kamala,justa,joline,jennine,jacquetta,iraida,georgeanna,franchesca,emeline,elane,ehtel,earlie,dulcie,dalene,classie,chere,charis,caroyln,carmina,carita,bethanie,ayako,arica,alysa,alessandra,akilah,adrien,zetta,youlanda,yelena,yahaira,xuan,wendolyn,tijuana,terina,teresia,suzi,sherell,shavonda,shaunte,sharda,shakita,sena,ryann,rubi,riva,reginia,rachal,parthenia,pamula,monnie,monet,michaele,melia,malka,maisha,lisandra,lekisha,lean,lakendra,krystin,kortney,kizzie,kittie,kera,kendal,kemberly,kanisha,julene,jule,johanne,jamee,halley,gidget,fredricka,fleta,fatimah,eusebia,elza,eleonore,dorthey,doria,donella,dinorah,delorse,claretha,christinia,charlyn,bong,belkis,azzie,andera,aiko,adena,yajaira,vania,ulrike,toshia,tifany,stefany,shizue,shenika,shawanna,sharolyn,sharilyn,shaquana,shantay,rozanne,roselee,remona,reanna,raelene,phung,petronila,natacha,nancey,myrl,miyoko,miesha,merideth,marvella,marquitta,marhta,marchelle,lizeth,libbie,lahoma,ladawn,kina,katheleen,katharyn,karisa,kaleigh,junie,julieann,johnsie,janean,jaimee,jackqueline,hisako,herma,helaine,gwyneth,gita,eustolia,emelina,elin,edris,donnette,donnetta,dierdre,denae,darcel,clarisa,cinderella,chia,charlesetta,charita,celsa,cassy,cassi,carlee,bruna,brittaney,brande,billi,antonetta,angla,angelyn,analisa,alane,wenona,wendie,veronique,vannesa,tobie,tempie,sumiko,sulema,somer,sheba,sharice,shanel,shalon,rosio,roselia,renay,rema,reena,ozie,oretha,oralee,ngan,nakesha,milly,marybelle,margrett,maragaret,manie,lurlene,lillia,lieselotte,lavelle,lashaunda,lakeesha,kaycee,kalyn,joya,joette,jenae,janiece,illa,grisel,glayds,genevie,gala,fredda,eleonor,debera,deandrea,corrinne,cordia,contessa,colene,cleotilde,chantay,cecille,beatris,azalee,arlean,ardath,anjelica,anja,alfredia,aleisha,zada,yuonne,xiao,willodean,vennie,vanna,tyisha,tova,torie,tonisha,tilda,tien,sirena,sherril,shanti,shan,senaida,samella,robbyn,renda,reita,phebe,paulita,nobuko,nguyet,neomi,mikaela,melania,maximina,marg,maisie,lynna,lilli,lashaun,lakenya,lael,kirstie,kathline,kasha,karlyn,karima,jovan,josefine,jennell,jacqui,jackelyn,hien,grazyna,florrie,floria,eleonora,dwana,dorla,delmy,deja,dede,dann,crysta,clelia,claris,chieko,cherlyn,cherelle,charmain,chara,cammy,arnette,ardelle,annika,amiee,amee,allena,yvone,yuki,yoshie,yevette,yael,willetta,voncile,venetta,tula,tonette,timika,temika,telma,teisha,taren,stacee,shawnta,saturnina,ricarda,pasty,onie,nubia,marielle,mariella,marianela,mardell,luanna,loise,lisabeth,lindsy,lilliana,lilliam,lelah,leigha,leanora,kristeen,khalilah,keeley,kandra,junko,joaquina,jerlene,jani,jamika,hsiu,hermila,genevive,evia,eugena,emmaline,elfreda,elene,donette,delcie,deeanna,darcey,clarinda,cira,chae,celinda,catheryn,casimira,carmelia,camellia,breana,bobette,bernardina,bebe,basilia,arlyne,amal,alayna,zonia,zenia,yuriko,yaeko,wynell,willena,vernia,tora,terrilyn,terica,tenesha,tawna,tajuana,taina,stephnie,sona,sina,shondra,shizuko,sherlene,sherice,sharika,rossie,rosena,rima,rheba,renna,natalya,nancee,melodi,meda,matha,marketta,maricruz,marcelene,malvina,luba,louetta,leida,lecia,lauran,lashawna,laine,khadijah,katerine,kasi,kallie,julietta,jesusita,jestine,jessia,jeffie,janyce,isadora,georgianne,fidelia,evita,eura,eulah,estefana,elsy,eladia,dodie,denisse,deloras,delila,daysi,crystle,concha,claretta,charlsie,charlena,carylon,bettyann,asley,ashlea,amira,agueda,agnus,yuette,vinita,victorina,tynisha,treena,toccara,tish,thomasena,tegan,soila,shenna,sharmaine,shantae,shandi,saran,sarai,sana,rosette,rolande,regine,otelia,olevia,nicholle,necole,naida,myrta,myesha,mitsue,minta,mertie,margy,mahalia,madalene,loura,lorean,lesha,leonida,lenita,lavone,lashell,lashandra,lamonica,kimbra,katherina,karry,kanesha,jong,jeneva,jaquelyn,gilma,ghislaine,gertrudis,fransisca,fermina,ettie,etsuko,ellan,elidia,edra,dorethea,doreatha,denyse,deetta,daine,cyrstal,corrin,cayla,carlita,camila,burma,bula,buena,barabara,avril,alaine,zana,wilhemina,wanetta,verline,vasiliki,tonita,tisa,teofila,tayna,taunya,tandra,takako,sunni,suanne,sixta,sharell,seema,rosenda,robena,raymonde,pamila,ozell,neida,mistie,micha,merissa,maurita,maryln,maryetta,marcell,malena,makeda,lovetta,lourie,lorrine,lorilee,laurena,lashay,larraine,laree,lacresha,kristle,keva,keira,karole,joie,jinny,jeannetta,jama,heidy,gilberte,gema,faviola,evelynn,enda,elli,ellena,divina,dagny,collene,codi,cindie,chassidy,chasidy,catrice,catherina,cassey,caroll,carlena,candra,calista,bryanna,britteny,beula,bari,audrie,audria,ardelia,annelle,angila,alona,allyn".split(","), surnames: "smith,johnson,williams,jones,brown,davis,miller,wilson,moore,taylor,anderson,jackson,white,harris,martin,thompson,garcia,martinez,robinson,clark,rodriguez,lewis,lee,walker,hall,allen,young,hernandez,king,wright,lopez,hill,green,adams,baker,gonzalez,nelson,carter,mitchell,perez,roberts,turner,phillips,campbell,parker,evans,edwards,collins,stewart,sanchez,morris,rogers,reed,cook,morgan,bell,murphy,bailey,rivera,cooper,richardson,cox,howard,ward,torres,peterson,gray,ramirez,watson,brooks,sanders,price,bennett,wood,barnes,ross,henderson,coleman,jenkins,perry,powell,long,patterson,hughes,flores,washington,butler,simmons,foster,gonzales,bryant,alexander,griffin,diaz,hayes,myers,ford,hamilton,graham,sullivan,wallace,woods,cole,west,owens,reynolds,fisher,ellis,harrison,gibson,mcdonald,cruz,marshall,ortiz,gomez,murray,freeman,wells,webb,simpson,stevens,tucker,porter,hicks,crawford,boyd,mason,morales,kennedy,warren,dixon,ramos,reyes,burns,gordon,shaw,holmes,rice,robertson,hunt,black,daniels,palmer,mills,nichols,grant,knight,ferguson,stone,hawkins,dunn,perkins,hudson,spencer,gardner,stephens,payne,pierce,berry,matthews,arnold,wagner,willis,watkins,olson,carroll,duncan,snyder,hart,cunningham,lane,andrews,ruiz,harper,fox,riley,armstrong,carpenter,weaver,greene,elliott,chavez,sims,peters,kelley,franklin,lawson,fields,gutierrez,schmidt,carr,vasquez,castillo,wheeler,chapman,montgomery,richards,williamson,johnston,banks,meyer,bishop,mccoy,howell,alvarez,morrison,hansen,fernandez,garza,harvey,burton,nguyen,jacobs,reid,fuller,lynch,garrett,romero,welch,larson,frazier,burke,hanson,mendoza,moreno,bowman,medina,fowler,brewer,hoffman,carlson,silva,pearson,holland,fleming,jensen,vargas,byrd,davidson,hopkins,herrera,wade,soto,walters,neal,caldwell,lowe,jennings,barnett,graves,jimenez,horton,shelton,barrett,obrien,castro,sutton,mckinney,lucas,miles,rodriquez,chambers,holt,lambert,fletcher,watts,bates,hale,rhodes,pena,beck,newman,haynes,mcdaniel,mendez,bush,vaughn,parks,dawson,santiago,norris,hardy,steele,curry,powers,schultz,barker,guzman,page,munoz,ball,keller,chandler,weber,walsh,lyons,ramsey,wolfe,schneider,mullins,benson,sharp,bowen,barber,cummings,hines,baldwin,griffith,valdez,hubbard,salazar,reeves,warner,stevenson,burgess,santos,tate,cross,garner,mann,mack,moss,thornton,mcgee,farmer,delgado,aguilar,vega,glover,manning,cohen,harmon,rodgers,robbins,newton,blair,higgins,ingram,reese,cannon,strickland,townsend,potter,goodwin,walton,rowe,hampton,ortega,patton,swanson,goodman,maldonado,yates,becker,erickson,hodges,rios,conner,adkins,webster,malone,hammond,flowers,cobb,moody,quinn,pope,osborne,mccarthy,guerrero,estrada,sandoval,gibbs,gross,fitzgerald,stokes,doyle,saunders,wise,colon,gill,alvarado,greer,padilla,waters,nunez,ballard,schwartz,mcbride,houston,christensen,klein,pratt,briggs,parsons,mclaughlin,zimmerman,buchanan,moran,copeland,pittman,brady,mccormick,holloway,brock,poole,logan,bass,marsh,drake,wong,jefferson,morton,abbott,sparks,norton,huff,massey,figueroa,carson,bowers,roberson,barton,tran,lamb,harrington,boone,cortez,clarke,mathis,singleton,wilkins,cain,underwood,hogan,mckenzie,collier,luna,phelps,mcguire,bridges,wilkerson,nash,summers,atkins,wilcox,pitts,conley,marquez,burnett,cochran,chase,davenport,hood,gates,ayala,sawyer,vazquez,dickerson,hodge,acosta,flynn,espinoza,nicholson,monroe,wolf,morrow,whitaker,oconnor,skinner,ware,molina,kirby,huffman,gilmore,dominguez,oneal,lang,combs,kramer,hancock,gallagher,gaines,shaffer,wiggins,mathews,mcclain,fischer,wall,melton,hensley,bond,dyer,grimes,contreras,wyatt,baxter,snow,mosley,shepherd,larsen,hoover,beasley,petersen,whitehead,meyers,garrison,shields,horn,savage,olsen,schroeder,hartman,woodard,mueller,kemp,deleon,booth,patel,calhoun,wiley,eaton,cline,navarro,harrell,humphrey,parrish,duran,hutchinson,hess,dorsey,bullock,robles,beard,dalton,avila,rich,blackwell,johns,blankenship,trevino,salinas,campos,pruitt,callahan,montoya,hardin,guerra,mcdowell,stafford,gallegos,henson,wilkinson,booker,merritt,atkinson,orr,decker,hobbs,tanner,knox,pacheco,stephenson,glass,rojas,serrano,marks,hickman,sweeney,strong,mcclure,conway,roth,maynard,farrell,lowery,hurst,nixon,weiss,trujillo,ellison,sloan,juarez,winters,mclean,boyer,villarreal,mccall,gentry,carrillo,ayers,lara,sexton,pace,hull,leblanc,browning,velasquez,leach,chang,sellers,herring,noble,foley,bartlett,mercado,landry,durham,walls,barr,mckee,bauer,rivers,bradshaw,pugh,velez,rush,estes,dodson,morse,sheppard,weeks,camacho,bean,barron,livingston,middleton,spears,branch,blevins,chen,kerr,mcconnell,hatfield,harding,solis,frost,giles,blackburn,pennington,woodward,finley,mcintosh,koch,mccullough,blanchard,rivas,brennan,mejia,kane,benton,buckley,valentine,maddox,russo,mcknight,buck,moon,mcmillan,crosby,berg,dotson,mays,roach,chan,richmond,meadows,faulkner,oneill,knapp,kline,ochoa,jacobson,gay,hendricks,horne,shepard,hebert,cardenas,mcintyre,waller,holman,donaldson,cantu,morin,gillespie,fuentes,tillman,bentley,peck,key,salas,rollins,gamble,dickson,santana,cabrera,cervantes,howe,hinton,hurley,spence,zamora,yang,mcneil,suarez,petty,gould,mcfarland,sampson,carver,bray,macdonald,stout,hester,melendez,dillon,farley,hopper,galloway,potts,joyner,stein,aguirre,osborn,mercer,bender,franco,rowland,sykes,pickett,sears,mayo,dunlap,hayden,wilder,mckay,coffey,mccarty,ewing,cooley,vaughan,bonner,cotton,holder,stark,ferrell,cantrell,fulton,lott,calderon,pollard,hooper,burch,mullen,fry,riddle,levy,duke,odonnell,britt,daugherty,berger,dillard,alston,frye,riggs,chaney,odom,duffy,fitzpatrick,valenzuela,mayer,alford,mcpherson,acevedo,barrera,cote,reilly,compton,mooney,mcgowan,craft,clemons,wynn,nielsen,baird,stanton,snider,rosales,bright,witt,hays,holden,rutledge,kinney,clements,castaneda,slater,hahn,burks,delaney,pate,lancaster,sharpe,whitfield,talley,macias,burris,ratliff,mccray,madden,kaufman,beach,goff,cash,bolton,mcfadden,levine,byers,kirkland,kidd,workman,carney,mcleod,holcomb,finch,sosa,haney,franks,sargent,nieves,downs,rasmussen,bird,hewitt,foreman,valencia,oneil,delacruz,vinson,dejesus,hyde,forbes,gilliam,guthrie,wooten,huber,barlow,boyle,mcmahon,buckner,rocha,puckett,langley,knowles,cooke,velazquez,whitley,vang,shea,rouse,hartley,mayfield,elder,rankin,hanna,cowan,lucero,arroyo,slaughter,haas,oconnell,minor,boucher,archer,boggs,dougherty,andersen,newell,crowe,wang,friedman,bland,swain,holley,pearce,childs,yarbrough,galvan,proctor,meeks,lozano,mora,rangel,bacon,villanueva,schaefer,rosado,helms,boyce,goss,stinson,ibarra,hutchins,covington,crowley,hatcher,mackey,bunch,womack,polk,dodd,childress,childers,villa,springer,mahoney,dailey,belcher,lockhart,griggs,costa,brandt,walden,moser,tatum,mccann,akers,lutz,pryor,orozco,mcallister,lugo,davies,shoemaker,rutherford,newsome,magee,chamberlain,blanton,simms,godfrey,flanagan,crum,cordova,escobar,downing,sinclair,donahue,krueger,mcginnis,gore,farris,webber,corbett,andrade,starr,lyon,yoder,hastings,mcgrath,spivey,krause,harden,crabtree,kirkpatrick,arrington,ritter,mcghee,bolden,maloney,gagnon,dunbar,ponce,pike,mayes,beatty,mobley,kimball,butts,montes,eldridge,braun,hamm,gibbons,moyer,manley,herron,plummer,elmore,cramer,rucker,pierson,fontenot,rubio,goldstein,elkins,wills,novak,hickey,worley,gorman,katz,dickinson,broussard,woodruff,crow,britton,nance,lehman,bingham,zuniga,whaley,shafer,coffman,steward,delarosa,neely,mata,davila,mccabe,kessler,hinkle,welsh,pagan,goldberg,goins,crouch,cuevas,quinones,mcdermott,hendrickson,samuels,denton,bergeron,ivey,locke,haines,snell,hoskins,byrne,arias,corbin,beltran,chappell,downey,dooley,tuttle,couch,payton,mcelroy,crockett,groves,cartwright,dickey,mcgill,dubois,muniz,tolbert,dempsey,cisneros,sewell,latham,vigil,tapia,rainey,norwood,stroud,meade,tipton,kuhn,hilliard,bonilla,teague,gunn,greenwood,correa,reece,pineda,phipps,frey,kaiser,ames,gunter,schmitt,milligan,espinosa,bowden,vickers,lowry,pritchard,costello,piper,mcclellan,lovell,sheehan,hatch,dobson,singh,jeffries,hollingsworth,sorensen,meza,fink,donnelly,burrell,tomlinson,colbert,billings,ritchie,helton,sutherland,peoples,mcqueen,thomason,givens,crocker,vogel,robison,dunham,coker,swartz,keys,ladner,richter,hargrove,edmonds,brantley,albright,murdock,boswell,muller,quintero,padgett,kenney,daly,connolly,inman,quintana,lund,barnard,villegas,simons,huggins,tidwell,sanderson,bullard,mcclendon,duarte,draper,marrero,dwyer,abrams,stover,goode,fraser,crews,bernal,godwin,conklin,mcneal,baca,esparza,crowder,bower,brewster,mcneill,rodrigues,leal,coates,raines,mccain,mccord,miner,holbrook,swift,dukes,carlisle,aldridge,ackerman,starks,ricks,holliday,ferris,hairston,sheffield,lange,fountain,doss,betts,kaplan,carmichael,bloom,ruffin,penn,kern,bowles,sizemore,larkin,dupree,seals,metcalf,hutchison,henley,farr,mccauley,hankins,gustafson,curran,waddell,ramey,cates,pollock,cummins,messer,heller,funk,cornett,palacios,galindo,cano,hathaway,pham,enriquez,salgado,pelletier,painter,wiseman,blount,feliciano,houser,doherty,mead,mcgraw,swan,capps,blanco,blackmon,thomson,mcmanus,burkett,gleason,dickens,cormier,voss,rushing,rosenberg,hurd,dumas,benitez,arellano,marin,caudill,bragg,jaramillo,huerta,gipson,colvin,biggs,vela,platt,cassidy,tompkins,mccollum,dolan,daley,crump,sneed,kilgore,grove,grimm,davison,brunson,prater,marcum,devine,dodge,stratton,rosas,choi,tripp,ledbetter,hightower,feldman,epps,yeager,posey,scruggs,cope,stubbs,richey,overton,trotter,sprague,cordero,butcher,stiles,burgos,woodson,horner,bassett,purcell,haskins,akins,ziegler,spaulding,hadley,grubbs,sumner,murillo,zavala,shook,lockwood,driscoll,dahl,thorpe,redmond,putnam,mcwilliams,mcrae,romano,joiner,sadler,hedrick,hager,hagen,fitch,coulter,thacker,mansfield,langston,guidry,ferreira,corley,conn,rossi,lackey,baez,saenz,mcnamara,mcmullen,mckenna,mcdonough,link,engel,browne,roper,peacock,eubanks,drummond,stringer,pritchett,parham,mims,landers,grayson,schafer,egan,timmons,ohara,keen,hamlin,finn,cortes,mcnair,nadeau,moseley,michaud,rosen,oakes,kurtz,jeffers,calloway,beal,bautista,winn,suggs,stern,stapleton,lyles,laird,montano,dawkins,hagan,goldman,bryson,barajas,lovett,segura,metz,lockett,langford,hinson,eastman,hooks,smallwood,shapiro,crowell,whalen,triplett,chatman,aldrich,cahill,youngblood,ybarra,stallings,sheets,reeder,connelly,bateman,abernathy,winkler,wilkes,masters,hackett,granger,gillis,schmitz,sapp,napier,souza,lanier,gomes,weir,otero,ledford,burroughs,babcock,ventura,siegel,dugan,bledsoe,atwood,wray,varner,spangler,anaya,staley,kraft,fournier,belanger,wolff,thorne,bynum,burnette,boykin,swenson,purvis,pina,khan,duvall,darby,xiong,kauffman,healy,engle,benoit,valle,steiner,spicer,shaver,randle,lundy,chin,calvert,staton,neff,kearney,darden,oakley,medeiros,mccracken,crenshaw,perdue,dill,whittaker,tobin,washburn,hogue,goodrich,easley,bravo,dennison,shipley,kerns,jorgensen,crain,villalobos,maurer,longoria,keene,coon,witherspoon,staples,pettit,kincaid,eason,madrid,echols,lusk,stahl,currie,thayer,shultz,mcnally,seay,maher,gagne,barrow,nava,moreland,honeycutt,hearn,diggs,caron,whitten,westbrook,stovall,ragland,munson,meier,looney,kimble,jolly,hobson,goddard,culver,burr,presley,negron,connell,tovar,huddleston,ashby,salter,root,pendleton,oleary,nickerson,myrick,judd,jacobsen,bain,adair,starnes,matos,busby,herndon,hanley,bellamy,doty,bartley,yazzie,rowell,parson,gifford,cullen,christiansen,benavides,barnhart,talbot,mock,crandall,connors,bonds,whitt,gage,bergman,arredondo,addison,lujan,dowdy,jernigan,huynh,bouchard,dutton,rhoades,ouellette,kiser,herrington,hare,blackman,babb,allred,rudd,paulson,ogden,koenig,geiger,begay,parra,lassiter,hawk,esposito,waldron,ransom,prather,chacon,vick,sands,roark,parr,mayberry,greenberg,coley,bruner,whitman,skaggs,shipman,leary,hutton,romo,medrano,ladd,kruse,askew,schulz,alfaro,tabor,mohr,gallo,bermudez,pereira,bliss,reaves,flint,comer,woodall,naquin,guevara,delong,carrier,pickens,tilley,schaffer,knutson,fenton,doran,vogt,vann,prescott,mclain,landis,corcoran,zapata,hyatt,hemphill,faulk,dove,boudreaux,aragon,whitlock,trejo,tackett,shearer,saldana,hanks,mckinnon,koehler,bourgeois,keyes,goodson,foote,lunsford,goldsmith,flood,winslow,sams,reagan,mccloud,hough,esquivel,naylor,loomis,coronado,ludwig,braswell,bearden,huang,fagan,ezell,edmondson,cronin,nunn,lemon,guillory,grier,dubose,traylor,ryder,dobbins,coyle,aponte,whitmore,smalls,rowan,malloy,cardona,braxton,borden,humphries,carrasco,ruff,metzger,huntley,hinojosa,finney,madsen,ernst,dozier,burkhart,bowser,peralta,daigle,whittington,sorenson,saucedo,roche,redding,fugate,avalos,waite,lind,huston,hawthorne,hamby,boyles,boles,regan,faust,crook,beam,barger,hinds,gallardo,willoughby,willingham,eckert,busch,zepeda,worthington,tinsley,hoff,hawley,carmona,varela,rector,newcomb,kinsey,dube,whatley,ragsdale,bernstein,becerra,yost,mattson,felder,cheek,handy,grossman,gauthier,escobedo,braden,beckman,mott,hillman,flaherty,dykes,stockton,stearns,lofton,coats,cavazos,beavers,barrios,tang,mosher,cardwell,coles,burnham,weller,lemons,beebe,aguilera,parnell,harman,couture,alley,schumacher,redd,dobbs,blum,blalock,merchant,ennis,denson,cottrell,brannon,bagley,aviles,watt,sousa,rosenthal,rooney,dietz,blank,paquette,mcclelland,duff,velasco,lentz,grubb,burrows,barbour,ulrich,shockley,rader,beyer,mixon,layton,altman,weathers,stoner,squires,shipp,priest,lipscomb,cutler,caballero,zimmer,willett,thurston,storey,medley,epperson,shah,mcmillian,baggett,torrez,hirsch,dent,poirier,peachey,farrar,creech,barth,trimble,dupre,albrecht,sample,lawler,crisp,conroy,wetzel,nesbitt,murry,jameson,wilhelm,patten,minton,matson,kimbrough,guinn,croft,toth,pulliam,nugent,newby,littlejohn,dias,canales,bernier,baron,singletary,renteria,pruett,mchugh,mabry,landrum,brower,stoddard,cagle,stjohn,scales,kohler,kellogg,hopson,gant,tharp,gann,zeigler,pringle,hammons,fairchild,deaton,chavis,carnes,rowley,matlock,kearns,irizarry,carrington,starkey,lopes,jarrell,craven,baum,littlefield,linn,humphreys,etheridge,cuellar,chastain,bundy,speer,skelton,quiroz,pyle,portillo,ponder,moulton,machado,killian,hutson,hitchcock,dowling,cloud,burdick,spann,pedersen,levin,leggett,hayward,dietrich,beaulieu,barksdale,wakefield,snowden,briscoe,bowie,berman,ogle,mcgregor,laughlin,helm,burden,wheatley,schreiber,pressley,parris,alaniz,agee,swann,snodgrass,schuster,radford,monk,mattingly,harp,girard,cheney,yancey,wagoner,ridley,lombardo,hudgins,gaskins,duckworth,coburn,willey,prado,newberry,magana,hammonds,elam,whipple,slade,serna,ojeda,liles,dorman,diehl,upton,reardon,michaels,goetz,eller,bauman,baer,layne,hummel,brenner,amaya,adamson,ornelas,dowell,cloutier,castellanos,wellman,saylor,orourke,moya,montalvo,kilpatrick,durbin,shell,oldham,kang,garvin,foss,branham,bartholomew,templeton,maguire,holton,rider,monahan,mccormack,beaty,anders,streeter,nieto,nielson,moffett,lankford,keating,heck,gatlin,delatorre,callaway,adcock,worrell,unger,robinette,nowak,jeter,brunner,steen,parrott,overstreet,nobles,montanez,clevenger,brinkley,trahan,quarles,pickering,pederson,jansen,grantham,gilchrist,crespo,aiken,schell,schaeffer,lorenz,leyva,harms,dyson,wallis,pease,leavitt,cheng,cavanaugh,batts,warden,seaman,rockwell,quezada,paxton,linder,houck,fontaine,durant,caruso,adler,pimentel,mize,lytle,cleary,cason,acker,switzer,isaacs,higginbotham,waterman,vandyke,stamper,sisk,shuler,riddick,mcmahan,levesque,hatton,bronson,bollinger,arnett,okeefe,gerber,gannon,farnsworth,baughman,silverman,satterfield,mccrary,kowalski,grigsby,greco,cabral,trout,rinehart,mahon,linton,gooden,curley,baugh,wyman,weiner,schwab,schuler,morrissey,mahan,bunn,thrasher,spear,waggoner,qualls,purdy,mcwhorter,mauldin,gilman,perryman,newsom,menard,martino,graf,billingsley,artis,simpkins,salisbury,quintanilla,gilliland,fraley,foust,crouse,scarborough,grissom,fultz,marlow,markham,madrigal,lawton,barfield,whiting,varney,schwarz,gooch,arce,wheat,truong,poulin,hurtado,selby,gaither,fortner,culpepper,coughlin,brinson,boudreau,bales,stepp,holm,schilling,morrell,kahn,heaton,gamez,causey,turpin,shanks,schrader,meek,isom,hardison,carranza,yanez,scroggins,schofield,runyon,ratcliff,murrell,moeller,irby,currier,butterfield,ralston,pullen,pinson,estep,carbone,hawks,ellington,casillas,spurlock,sikes,motley,mccartney,kruger,isbell,houle,burk,tomlin,quigley,neumann,lovelace,fennell,cheatham,bustamante,skidmore,hidalgo,forman,culp,bowens,betancourt,aquino,robb,milner,martel,gresham,wiles,ricketts,dowd,collazo,bostic,blakely,sherrod,kenyon,gandy,ebert,deloach,allard,sauer,robins,olivares,gillette,chestnut,bourque,paine,hite,hauser,devore,crawley,chapa,talbert,poindexter,meador,mcduffie,mattox,kraus,harkins,choate,wren,sledge,sanborn,kinder,geary,cornwell,barclay,abney,seward,rhoads,howland,fortier,benner,vines,tubbs,troutman,rapp,mccurdy,deluca,westmoreland,havens,guajardo,clary,seal,meehan,herzog,guillen,ashcraft,waugh,renner,milam,elrod,churchill,breaux,bolin,asher,windham,tirado,pemberton,nolen,noland,knott,emmons,cornish,christenson,brownlee,barbee,waldrop,pitt,olvera,lombardi,gruber,gaffney,eggleston,banda,archuleta,slone,prewitt,pfeiffer,nettles,mena,mcadams,henning,gardiner,cromwell,chisholm,burleson,vest,oglesby,mccarter,lumpkin,wofford,vanhorn,thorn,teel,swafford,stclair,stanfield,ocampo,herrmann,hannon,arsenault,roush,mcalister,hiatt,gunderson,forsythe,duggan,delvalle,cintron,wilks,weinstein,uribe,rizzo,noyes,mclendon,gurley,bethea,winstead,maples,guyton,giordano,alderman,valdes,polanco,pappas,lively,grogan,griffiths,bobo,arevalo,whitson,sowell,rendon,fernandes,farrow,benavidez,ayres,alicea,stump,smalley,seitz,schulte,gilley,gallant,canfield,wolford,omalley,mcnutt,mcnulty,mcgovern,hardman,harbin,cowart,chavarria,brink,beckett,bagwell,armstead,anglin,abreu,reynoso,krebs,jett,hoffmann,greenfield,forte,burney,broome,sisson,trammell,partridge,mace,lomax,lemieux,gossett,frantz,fogle,cooney,broughton,pence,paulsen,muncy,mcarthur,hollins,beauchamp,withers,osorio,mulligan,hoyle,dockery,cockrell,begley,amador,roby,rains,lindquist,gentile,everhart,bohannon,wylie,sommers,purnell,fortin,dunning,breeden,vail,phelan,phan,marx,cosby,colburn,boling,biddle,ledesma,gaddis,denney,chow,bueno,berrios,wicker,tolliver,thibodeaux,nagle,lavoie,fisk,crist,barbosa,reedy,locklear,kolb,himes,behrens,beckwith,weems,wahl,shorter,shackelford,rees,muse,cerda,valadez,thibodeau,saavedra,ridgeway,reiter,mchenry,majors,lachance,keaton,ferrara,clemens,blocker,applegate,needham,mojica,kuykendall,hamel,escamilla,doughty,burchett,ainsworth,vidal,upchurch,thigpen,strauss,spruill,sowers,riggins,ricker,mccombs,harlow,buffington,sotelo,olivas,negrete,morey,macon,logsdon,lapointe,bigelow,bello,westfall,stubblefield,lindley,hein,hawes,farrington,breen,birch,wilde,steed,sepulveda,reinhardt,proffitt,minter,messina,mcnabb,maier,keeler,gamboa,donohue,basham,shinn,crooks,cota,borders,bills,bachman,tisdale,tavares,schmid,pickard,gulley,fonseca,delossantos,condon,batista,wicks,wadsworth,martell,littleton,ison,haag,folsom,brumfield,broyles,brito,mireles,mcdonnell,leclair,hamblin,gough,fanning,binder,winfield,whitworth,soriano,palumbo,newkirk,mangum,hutcherson,comstock,carlin,beall,bair,wendt,watters,walling,putman,otoole,morley,mares,lemus,keener,hundley,dial,damico,billups,strother,mcfarlane,lamm,eaves,crutcher,caraballo,canty,atwell,taft,siler,rust,rawls,rawlings,prieto,mcneely,mcafee,hulsey,hackney,galvez,escalante,delagarza,crider,bandy,wilbanks,stowe,steinberg,renfro,masterson,massie,lanham,haskell,hamrick,dehart,burdette,branson,bourne,babin,aleman,worthy,tibbs,smoot,slack,paradis,mull,luce,houghton,gantt,furman,danner,christianson,burge,ashford,arndt,almeida,stallworth,shade,searcy,sager,noonan,mclemore,mcintire,maxey,lavigne,jobe,ferrer,falk,coffin,byrnes,aranda,apodaca,stamps,rounds,peek,olmstead,lewandowski,kaminski,dunaway,bruns,brackett,amato,reich,mcclung,lacroix,koontz,herrick,hardesty,flanders,cousins,cato,cade,vickery,shank,nagel,dupuis,croteau,cotter,stuckey,stine,porterfield,pauley,moffitt,knudsen,hardwick,goforth,dupont,blunt,barrows,barnhill,shull,rash,loftis,lemay,kitchens,horvath,grenier,fuchs,fairbanks,culbertson,calkins,burnside,beattie,ashworth,albertson,wertz,vaught,vallejo,turk,tuck,tijerina,sage,peterman,marroquin,marr,lantz,hoang,demarco,cone,berube,barnette,wharton,stinnett,slocum,scanlon,sander,pinto,mancuso,lima,headley,epstein,counts,clarkson,carnahan,boren,arteaga,adame,zook,whittle,whitehurst,wenzel,saxton,reddick,puente,handley,haggerty,earley,devlin,chaffin,cady,acuna,solano,sigler,pollack,pendergrass,ostrander,janes,francois,crutchfield,chamberlin,brubaker,baptiste,willson,reis,neeley,mullin,mercier,lira,layman,keeling,higdon,espinal,chapin,warfield,toledo,pulido,peebles,nagy,montague,mello,lear,jaeger,hogg,graff,furr,soliz,poore,mendenhall,mclaurin,maestas,gable,barraza,tillery,snead,pond,neill,mcculloch,mccorkle,lightfoot,hutchings,holloman,harness,dorn,bock,zielinski,turley,treadwell,stpierre,starling,somers,oswald,merrick,easterling,bivens,truitt,poston,parry,ontiveros,olivarez,moreau,medlin,lenz,knowlton,fairley,cobbs,chisolm,bannister,woodworth,toler,ocasio,noriega,neuman,moye,milburn,mcclanahan,lilley,hanes,flannery,dellinger,danielson,conti,blodgett,beers,weatherford,strain,karr,hitt,denham,custer,coble,clough,casteel,bolduc,batchelor,ammons,whitlow,tierney,staten,sibley,seifert,schubert,salcedo,mattison,laney,haggard,grooms,dees,cromer,cooks,colson,caswell,zarate,swisher,shin,ragan,pridgen,mcvey,matheny,lafleur,franz,ferraro,dugger,whiteside,rigsby,mcmurray,lehmann,jacoby,hildebrand,hendrick,headrick,goad,fincher,drury,borges,archibald,albers,woodcock,trapp,soares,seaton,monson,luckett,lindberg,kopp,keeton,healey,garvey,gaddy,fain,burchfield,wentworth,strand,stack,spooner,saucier,ricci,plunkett,pannell,ness,leger,freitas,fong,elizondo,duval,beaudoin,urbina,rickard,partin,mcgrew,mcclintock,ledoux,forsyth,faison,devries,bertrand,wasson,tilton,scarbrough,leung,irvine,garber,denning,corral,colley,castleberry,bowlin,bogan,beale,baines,trice,rayburn,parkinson,nunes,mcmillen,leahy,kimmel,higgs,fulmer,carden,bedford,taggart,spearman,prichard,morrill,koonce,heinz,hedges,guenther,grice,findley,dover,creighton,boothe,bayer,arreola,vitale,valles,raney,osgood,hanlon,burley,bounds,worden,weatherly,vetter,tanaka,stiltner,nevarez,mosby,montero,melancon,harter,hamer,goble,gladden,gist,ginn,akin,zaragoza,tarver,sammons,royster,oreilly,muir,morehead,luster,kingsley,kelso,grisham,glynn,baumann,alves,yount,tamayo,paterson,oates,menendez,longo,hargis,gillen,desantis,conover,breedlove,sumpter,scherer,rupp,reichert,heredia,creel,cohn,clemmons,casas,bickford,belton,bach,williford,whitcomb,tennant,sutter,stull,mccallum,langlois,keel,keegan,dangelo,dancy,damron,clapp,clanton,bankston,oliveira,mintz,mcinnis,martens,mabe,laster,jolley,hildreth,hefner,glaser,duckett,demers,brockman,blais,alcorn,agnew,toliver,tice,seeley,najera,musser,mcfall,laplante,galvin,fajardo,doan,coyne,copley,clawson,cheung,barone,wynne,woodley,tremblay,stoll,sparrow,sparkman,schweitzer,sasser,samples,roney,legg,heim,farias,colwell,christman,bratcher,winchester,upshaw,southerland,sorrell,sells,mccloskey,martindale,luttrell,loveless,lovejoy,linares,latimer,embry,coombs,bratton,bostick,venable,tuggle,toro,staggs,sandlin,jefferies,heckman,griffis,crayton,clem,browder,thorton,sturgill,sprouse,royer,rousseau,ridenour,pogue,perales,peeples,metzler,mesa,mccutcheon,mcbee,hornsby,heffner,corrigan,armijo,plante,peyton,paredes,macklin,hussey,hodgson,granados,frias,becnel,batten,almanza,turney,teal,sturgeon,meeker,mcdaniels,limon,keeney,hutto,holguin,gorham,fishman,fierro,blanchette,rodrigue,reddy,osburn,oden,lerma,kirkwood,keefer,haugen,hammett,chalmers,brinkman,baumgartner,zhang,valerio,tellez,steffen,shumate,sauls,ripley,kemper,guffey,evers,craddock,carvalho,blaylock,banuelos,balderas,wheaton,turnbull,shuman,pointer,mosier,mccue,ligon,kozlowski,johansen,ingle,herr,briones,snipes,rickman,pipkin,pantoja,orosco,moniz,lawless,kunkel,hibbard,galarza,enos,bussey,schott,salcido,perreault,mcdougal,mccool,haight,garris,easton,conyers,atherton,wimberly,utley,spellman,smithson,slagle,ritchey,rand,petit,osullivan,oaks,nutt,mcvay,mccreary,mayhew,knoll,jewett,harwood,cardoza,ashe,arriaga,zeller,wirth,whitmire,stauffer,rountree,redden,mccaffrey,martz,larose,langdon,humes,gaskin,faber,devito,cass,almond,wingfield,wingate,villareal,tyner,smothers,severson,reno,pennell,maupin,leighton,janssen,hassell,hallman,halcomb,folse,fitzsimmons,fahey,cranford,bolen,battles,battaglia,wooldridge,trask,rosser,regalado,mcewen,keefe,fuqua,echevarria,caro,boynton,andrus,viera,vanmeter,taber,spradlin,seibert,provost,prentice,oliphant,laporte,hwang,hatchett,hass,greiner,freedman,covert,chilton,byars,wiese,venegas,swank,shrader,roberge,mullis,mortensen,mccune,marlowe,kirchner,keck,isaacson,hostetler,halverson,gunther,griswold,fenner,durden,blackwood,ahrens,sawyers,savoy,nabors,mcswain,mackay,lavender,lash,labbe,jessup,fullerton,cruse,crittenden,correia,centeno,caudle,canady,callender,alarcon,ahern,winfrey,tribble,salley,roden,musgrove,minnick,fortenberry,carrion,bunting,batiste,whited,underhill,stillwell,rauch,pippin,perrin,messenger,mancini,lister,kinard,hartmann,fleck,wilt,treadway,thornhill,spalding,rafferty,pitre,patino,ordonez,linkous,kelleher,homan,galbraith,feeney,curtin,coward,camarillo,buss,bunnell,bolt,beeler,autry,alcala,witte,wentz,stidham,shively,nunley,meacham,martins,lemke,lefebvre,hynes,horowitz,hoppe,holcombe,dunne,derr,cochrane,brittain,bedard,beauregard,torrence,strunk,soria,simonson,shumaker,scoggins,oconner,moriarty,kuntz,ives,hutcheson,horan,hales,garmon,fitts,bohn,atchison,wisniewski,vanwinkle,sturm,sallee,prosser,moen,lundberg,kunz,kohl,keane,jorgenson,jaynes,funderburk,freed,durr,creamer,cosgrove,batson,vanhoose,thomsen,teeter,smyth,redmon,orellana,maness,heflin,goulet,frick,forney,bunker,asbury,aguiar,talbott,southard,mowery,mears,lemmon,krieger,hickson,elston,duong,delgadillo,dayton,dasilva,conaway,catron,bruton,bradbury,bordelon,bivins,bittner,bergstrom,beals,abell,whelan,tejada,pulley,pino,norfleet,nealy,maes,loper,gatewood,frierson,freund,finnegan,cupp,covey,catalano,boehm,bader,yoon,walston,tenney,sipes,rawlins,medlock,mccaskill,mccallister,marcotte,maclean,hughey,henke,harwell,gladney,gilson,chism,caskey,brandenburg,baylor,villasenor,veal,thatcher,stegall,petrie,nowlin,navarrete,lombard,loftin,lemaster,kroll,kovach,kimbrell,kidwell,hershberger,fulcher,cantwell,bustos,boland,bobbitt,binkley,wester,weis,verdin,tong,tiller,sisco,sharkey,seymore,rosenbaum,rohr,quinonez,pinkston,malley,logue,lessard,lerner,lebron,krauss,klinger,halstead,haller,getz,burrow,alger,shores,pfeifer,perron,nelms,munn,mcmaster,mckenney,manns,knudson,hutchens,huskey,goebel,flagg,cushman,click,castellano,carder,bumgarner,wampler,spinks,robson,neel,mcreynolds,mathias,maas,loera,jenson,florez,coons,buckingham,brogan,berryman,wilmoth,wilhite,thrash,shephard,seidel,schulze,roldan,pettis,obryan,maki,mackie,hatley,frazer,fiore,chesser,bottoms,bisson,benefield,allman,wilke,trudeau,timm,shifflett,mundy,milliken,mayers,leake,kohn,huntington,horsley,hermann,guerin,fryer,frizzell,foret,flemming,fife,criswell,carbajal,bozeman,boisvert,angulo,wallen,tapp,silvers,ramsay,oshea,orta,moll,mckeever,mcgehee,linville,kiefer,ketchum,howerton,groce,gass,fusco,corbitt,betz,bartels,amaral,aiello,weddle,sperry,seiler,runyan,raley,overby,osteen,olds,mckeown,matney,lauer,lattimore,hindman,hartwell,fredrickson,fredericks,espino,clegg,carswell,cambell,burkholder,woodbury,welker,totten,thornburg,theriault,stitt,stamm,stackhouse,scholl,saxon,rife,razo,quinlan,pinkerton,olivo,nesmith,nall,mattos,lafferty,justus,giron,geer,fielder,drayton,dortch,conners,conger,boatwright,billiot,barden,armenta,tibbetts,steadman,slattery,rinaldi,raynor,pinckney,pettigrew,milne,matteson,halsey,gonsalves,fellows,durand,desimone,cowley,cowles,brill,barham,barela,barba,ashmore,withrow,valenti,tejeda,spriggs,sayre,salerno,peltier,peel,merriman,matheson,lowman,lindstrom,hyland,giroux,earls,dugas,dabney,collado,briseno,baxley,whyte,wenger,vanover,vanburen,thiel,schindler,schiller,rigby,pomeroy,passmore,marble,manzo,mahaffey,lindgren,laflamme,greathouse,fite,calabrese,bayne,yamamoto,wick,townes,thames,reinhart,peeler,naranjo,montez,mcdade,mast,markley,marchand,leeper,kellum,hudgens,hennessey,hadden,gainey,coppola,borrego,bolling,beane,ault,slaton,pape,null,mulkey,lightner,langer,hillard,ethridge,enright,derosa,baskin,weinberg,turman,somerville,pardo,noll,lashley,ingraham,hiller,hendon,glaze,cothran,cooksey,conte,carrico,abner,wooley,swope,summerlin,sturgis,sturdivant,stott,spurgeon,spillman,speight,roussel,popp,nutter,mckeon,mazza,magnuson,lanning,kozak,jankowski,heyward,forster,corwin,callaghan,bays,wortham,usher,theriot,sayers,sabo,poling,loya,lieberman,laroche,labelle,howes,harr,garay,fogarty,everson,durkin,dominquez,chaves,chambliss,witcher,vieira,vandiver,terrill,stoker,schreiner,moorman,liddell,lawhorn,krug,irons,hylton,hollenbeck,herrin,hembree,goolsby,goodin,gilmer,foltz,dinkins,daughtry,caban,brim,briley,bilodeau,wyant,vergara,tallent,swearingen,stroup,scribner,quillen,pitman,mccants,maxfield,martinson,holtz,flournoy,brookins,brody,baumgardner,straub,sills,roybal,roundtree,oswalt,mcgriff,mcdougall,mccleary,maggard,gragg,gooding,godinez,doolittle,donato,cowell,cassell,bracken,appel,zambrano,reuter,perea,nakamura,monaghan,mickens,mcclinton,mcclary,marler,kish,judkins,gilbreath,freese,flanigan,felts,erdmann,dodds,chew,brownell,boatright,barreto,slayton,sandberg,saldivar,pettway,odum,narvaez,moultrie,montemayor,merrell,lees,keyser,hoke,hardaway,hannan,gilbertson,fogg,dumont,deberry,coggins,buxton,bucher,broadnax,beeson,araujo,appleton,amundson,aguayo,ackley,yocum,worsham,shivers,sanches,sacco,robey,rhoden,pender,ochs,mccurry,madera,luong,knotts,jackman,heinrich,hargrave,gault,comeaux,chitwood,caraway,boettcher,bernhardt,barrientos,zink,wickham,whiteman,thorp,stillman,settles,schoonover,roque,riddell,pilcher,phifer,novotny,macleod,hardee,haase,grider,doucette,clausen,bevins,beamon,badillo,tolley,tindall,soule,snook,seale,pinkney,pellegrino,nowell,nemeth,mondragon,mclane,lundgren,ingalls,hudspeth,hixson,gearhart,furlong,downes,dibble,deyoung,cornejo,camara,brookshire,boyette,wolcott,surratt,sellars,segal,salyer,reeve,rausch,labonte,haro,gower,freeland,fawcett,eads,driggers,donley,collett,bromley,boatman,ballinger,baldridge,volz,trombley,stonge,shanahan,rivard,rhyne,pedroza,matias,jamieson,hedgepeth,hartnett,estevez,eskridge,denman,chiu,chinn,catlett,carmack,buie,bechtel,beardsley,bard,ballou,ulmer,skeen,robledo,rincon,reitz,piazza,munger,moten,mcmichael,loftus,ledet,kersey,groff,fowlkes,crumpton,clouse,bettis,villagomez,timmerman,strom,santoro,roddy,penrod,musselman,macpherson,leboeuf,harless,haddad,guido,golding,fulkerson,fannin,dulaney,dowdell,cottle,ceja,cate,bosley,benge,albritton,voigt,trowbridge,soileau,seely,rohde,pearsall,paulk,orth,nason,mota,mcmullin,marquardt,madigan,hoag,gillum,gabbard,fenwick,danforth,cushing,cress,creed,cazares,bettencourt,barringer,baber,stansberry,schramm,rutter,rivero,oquendo,necaise,mouton,montenegro,miley,mcgough,marra,macmillan,lamontagne,jasso,horst,hetrick,heilman,gaytan,gall,fortney,dingle,desjardins,dabbs,burbank,brigham,breland,beaman,arriola,yarborough,wallin,toscano,stowers,reiss,pichardo,orton,michels,mcnamee,mccrory,leatherman,kell,keister,horning,hargett,guay,ferro,deboer,dagostino,carper,blanks,beaudry,towle,tafoya,stricklin,strader,soper,sonnier,sigmon,schenk,saddler,pedigo,mendes,lunn,lohr,lahr,kingsbury,jarman,hume,holliman,hofmann,haworth,harrelson,hambrick,flick,edmunds,dacosta,crossman,colston,chaplin,carrell,budd,weiler,waits,valentino,trantham,tarr,solorio,roebuck,powe,plank,pettus,pagano,mink,luker,leathers,joslin,hartzell,gambrell,cepeda,carty,caputo,brewington,bedell,ballew,applewhite,warnock,walz,urena,tudor,reel,pigg,parton,mickelson,meagher,mclellan,mcculley,mandel,leech,lavallee,kraemer,kling,kipp,kehoe,hochstetler,harriman,gregoire,grabowski,gosselin,gammon,fancher,edens,desai,brannan,armendariz,woolsey,whitehouse,whetstone,ussery,towne,testa,tallman,studer,strait,steinmetz,sorrells,sauceda,rolfe,paddock,mitchem,mcginn,mccrea,lovato,hazen,gilpin,gaynor,fike,devoe,delrio,curiel,burkhardt,bode,backus,zinn,watanabe,wachter,vanpelt,turnage,shaner,schroder,sato,riordan,quimby,portis,natale,mckoy,mccown,kilmer,hotchkiss,hesse,halbert,gwinn,godsey,delisle,chrisman,canter,arbogast,angell,acree,yancy,woolley,wesson,weatherspoon,trainor,stockman,spiller,sipe,rooks,reavis,propst,porras,neilson,mullens,loucks,llewellyn,kumar,koester,klingensmith,kirsch,kester,honaker,hodson,hennessy,helmick,garrity,garibay,drain,casarez,callis,botello,aycock,avant,wingard,wayman,tully,theisen,szymanski,stansbury,segovia,rainwater,preece,pirtle,padron,mincey,mckelvey,mathes,larrabee,kornegay,klug,ingersoll,hecht,germain,eggers,dykstra,deering,decoteau,deason,dearing,cofield,carrigan,bonham,bahr,aucoin,appleby,almonte,yager,womble,wimmer,weimer,vanderpool,stancil,sprinkle,romine,remington,pfaff,peckham,olivera,meraz,maze,lathrop,koehn,hazelton,halvorson,hallock,haddock,ducharme,dehaven,caruthers,brehm,bosworth,bost,bias,beeman,basile,bane,aikens,wold,walther,tabb,suber,strawn,stocker,shirey,schlosser,riedel,rembert,reimer,pyles,peele,merriweather,letourneau,latta,kidder,hixon,hillis,hight,herbst,henriquez,haygood,hamill,gabel,fritts,eubank,dawes,correll,bushey,buchholz,brotherton,botts,barnwell,auger,atchley,westphal,veilleux,ulloa,stutzman,shriver,ryals,pilkington,moyers,marrs,mangrum,maddux,lockard,laing,kuhl,harney,hammock,hamlett,felker,doerr,depriest,carrasquillo,carothers,bogle,bischoff,bergen,albanese,wyckoff,vermillion,vansickle,thibault,tetreault,stickney,shoemake,ruggiero,rawson,racine,philpot,paschal,mcelhaney,mathison,legrand,lapierre,kwan,kremer,jiles,hilbert,geyer,faircloth,ehlers,egbert,desrosiers,dalrymple,cotten,cashman,cadena,boardman,alcaraz,wyrick,therrien,tankersley,strickler,puryear,plourde,pattison,pardue,mcginty,mcevoy,landreth,kuhns,koon,hewett,giddens,emerick,eades,deangelis,cosme,ceballos,birdsong,benham,bemis,armour,anguiano,welborn,tsosie,storms,shoup,sessoms,samaniego,rood,rojo,rhinehart,raby,northcutt,myer,munguia,morehouse,mcdevitt,mallett,lozada,lemoine,kuehn,hallett,grim,gillard,gaylor,garman,gallaher,feaster,faris,darrow,dardar,coney,carreon,braithwaite,boylan,boyett,bixler,bigham,benford,barragan,barnum,zuber,wyche,westcott,vining,stoltzfus,simonds,shupe,sabin,ruble,rittenhouse,richman,perrone,mulholland,millan,lomeli,kite,jemison,hulett,holler,hickerson,herold,hazelwood,griffen,gause,forde,eisenberg,dilworth,charron,chaisson,bristow,breunig,brace,boutwell,bentz,belk,bayless,batchelder,baran,baeza,zimmermann,weathersby,volk,toole,theis,tedesco,searle,schenck,satterwhite,ruelas,rankins,partida,nesbit,morel,menchaca,levasseur,kaylor,johnstone,hulse,hollar,hersey,harrigan,harbison,guyer,gish,giese,gerlach,geller,geisler,falcone,elwell,doucet,deese,darr,corder,chafin,byler,bussell,burdett,brasher,bowe,bellinger,bastian,barner,alleyne,wilborn,weil,wegner,tatro,spitzer,smithers,schoen,resendez,parisi,overman,obrian,mudd,mahler,maggio,lindner,lalonde,lacasse,laboy,killion,kahl,jessen,jamerson,houk,henshaw,gustin,graber,durst,duenas,davey,cundiff,conlon,colunga,coakley,chiles,capers,buell,bricker,bissonnette,bartz,bagby,zayas,volpe,treece,toombs,thom,terrazas,swinney,skiles,silveira,shouse,senn,ramage,moua,langham,kyles,holston,hoagland,herd,feller,denison,carraway,burford,bickel,ambriz,abercrombie,yamada,weidner,waddle,verduzco,thurmond,swindle,schrock,sanabria,rosenberger,probst,peabody,olinger,nazario,mccafferty,mcbroom,mcabee,mazur,matherne,mapes,leverett,killingsworth,heisler,griego,gosnell,frankel,franke,ferrante,fenn,ehrlich,christopherso,chasse,caton,brunelle,bloomfield,babbitt,azevedo,abramson,ables,abeyta,youmans,wozniak,wainwright,stowell,smitherman,samuelson,runge,rothman,rosenfeld,peake,owings,olmos,munro,moreira,leatherwood,larkins,krantz,kovacs,kizer,kindred,karnes,jaffe,hubbell,hosey,hauck,goodell,erdman,dvorak,doane,cureton,cofer,buehler,bierman,berndt,banta,abdullah,warwick,waltz,turcotte,torrey,stith,seger,sachs,quesada,pinder,peppers,pascual,paschall,parkhurst,ozuna,oster,nicholls,lheureux,lavalley,kimura,jablonski,haun,gourley,gilligan,croy,cotto,cargill,burwell,burgett,buckman,booher,adorno,wrenn,whittemore,urias,szabo,sayles,saiz,rutland,rael,pharr,pelkey,ogrady,nickell,musick,moats,mather,massa,kirschner,kieffer,kellar,hendershot,gott,godoy,gadson,furtado,fiedler,erskine,dutcher,dever,daggett,chevalier,brake,ballesteros,amerson,wingo,waldon,trott,silvey,showers,schlegel,ritz,pepin,pelayo,parsley,palermo,moorehead,mchale,lett,kocher,kilburn,iglesias,humble,hulbert,huckaby,hartford,hardiman,gurney,grigg,grasso,goings,fillmore,farber,depew,dandrea,cowen,covarrubias,burrus,bracy,ardoin,thompkins,standley,radcliffe,pohl,persaud,parenteau,pabon,newson,newhouse,napolitano,mulcahy,malave,keim,hooten,hernandes,heffernan,hearne,greenleaf,glick,fuhrman,fetter,faria,dishman,dickenson,crites,criss,clapper,chenault,castor,casto,bugg,bove,bonney,anderton,allgood,alderson,woodman,warrick,toomey,tooley,tarrant,summerville,stebbins,sokol,searles,schutz,schumann,scheer,remillard,raper,proulx,palmore,monroy,messier,melo,melanson,mashburn,manzano,lussier,jenks,huneycutt,hartwig,grimsley,fulk,fielding,fidler,engstrom,eldred,dantzler,crandell,calder,brumley,breton,brann,bramlett,boykins,bianco,bancroft,almaraz,alcantar,whitmer,whitener,welton,vineyard,rahn,paquin,mizell,mcmillin,mckean,marston,maciel,lundquist,liggins,lampkin,kranz,koski,kirkham,jiminez,hazzard,harrod,graziano,grammer,gendron,garrido,fordham,englert,dryden,demoss,deluna,crabb,comeau,brummett,blume,benally,wessel,vanbuskirk,thorson,stumpf,stockwell,reams,radtke,rackley,pelton,niemi,newland,nelsen,morrissette,miramontes,mcginley,mccluskey,marchant,luevano,lampe,lail,jeffcoat,infante,hinman,gaona,eady,desmarais,decosta,dansby,cisco,choe,breckenridge,bostwick,borg,bianchi,alberts,wilkie,whorton,vargo,tait,soucy,schuman,ousley,mumford,lippert,leath,lavergne,laliberte,kirksey,kenner,johnsen,izzo,hiles,gullett,greenwell,gaspar,galbreath,gaitan,ericson,delapaz,croom,cottingham,clift,bushnell,bice,beason,arrowood,waring,voorhees,truax,shreve,shockey,schatz,sandifer,rubino,rozier,roseberry,pieper,peden,nester,nave,murphey,malinowski,macgregor,lafrance,kunkle,kirkman,hipp,hasty,haddix,gervais,gerdes,gamache,fouts,fitzwater,dillingham,deming,deanda,cedeno,cannady,burson,bouldin,arceneaux,woodhouse,whitford,wescott,welty,weigel,torgerson,toms,surber,sunderland,sterner,setzer,riojas,pumphrey,puga,metts,mcgarry,mccandless,magill,lupo,loveland,llamas,leclerc,koons,kahler,huss,holbert,heintz,haupt,grimmett,gaskill,ellingson,dorr,dingess,deweese,desilva,crossley,cordeiro,converse,conde,caldera,cairns,burmeister,burkhalter,brawner,bott,youngs,vierra,valladares,shrum,shropshire,sevilla,rusk,rodarte,pedraza,nino,merino,mcminn,markle,mapp,lajoie,koerner,kittrell,kato,hyder,hollifield,heiser,hazlett,greenwald,fant,eldredge,dreher,delafuente,cravens,claypool,beecher,aronson,alanis,worthen,wojcik,winger,whitacre,valverde,valdivia,troupe,thrower,swindell,suttles,stroman,spires,slate,shealy,sarver,sartin,sadowski,rondeau,rolon,rascon,priddy,paulino,nolte,munroe,molloy,mciver,lykins,loggins,lenoir,klotz,kempf,hupp,hollowell,hollander,haynie,harkness,harker,gottlieb,frith,eddins,driskell,doggett,densmore,charette,cassady,byrum,burcham,buggs,benn,whitted,warrington,vandusen,vaillancourt,steger,siebert,scofield,quirk,purser,plumb,orcutt,nordstrom,mosely,michalski,mcphail,mcdavid,mccraw,marchese,mannino,lefevre,largent,lanza,kress,isham,hunsaker,hoch,hildebrandt,guarino,grijalva,graybill,fick,ewell,ewald,cusick,crumley,coston,cathcart,carruthers,bullington,bowes,blain,blackford,barboza,yingling,wert,weiland,varga,silverstein,sievers,shuster,shumway,runnels,rumsey,renfroe,provencher,polley,mohler,middlebrooks,kutz,koster,groth,glidden,fazio,deen,chipman,chenoweth,champlin,cedillo,carrero,carmody,buckles,brien,boutin,bosch,berkowitz,altamirano,wilfong,wiegand,waites,truesdale,toussaint,tobey,tedder,steelman,sirois,schnell,robichaud,richburg,plumley,pizarro,piercy,ortego,oberg,neace,mertz,mcnew,matta,lapp,lair,kibler,howlett,hollister,hofer,hatten,hagler,falgoust,engelhardt,eberle,dombrowski,dinsmore,daye,casares,braud,balch,autrey,wendel,tyndall,strobel,stoltz,spinelli,serrato,reber,rathbone,palomino,nickels,mayle,mathers,mach,loeffler,littrell,levinson,leong,lemire,lejeune,lazo,lasley,koller,kennard,hoelscher,hintz,hagerman,greaves,fore,eudy,engler,corrales,cordes,brunet,bidwell,bennet,tyrrell,tharpe,swinton,stribling,southworth,sisneros,savoie,samons,ruvalcaba,ries,ramer,omara,mosqueda,millar,mcpeak,macomber,luckey,litton,lehr,lavin,hubbs,hoard,hibbs,hagans,futrell,exum,evenson,culler,carbaugh,callen,brashear,bloomer,blakeney,bigler,addington,woodford,unruh,tolentino,sumrall,stgermain,smock,sherer,rayner,pooler,oquinn,nero,mcglothlin,linden,kowal,kerrigan,ibrahim,harvell,hanrahan,goodall,geist,fussell,fung,ferebee,eley,eggert,dorsett,dingman,destefano,colucci,clemmer,burnell,brumbaugh,boddie,berryhill,avelar,alcantara,winder,winchell,vandenberg,trotman,thurber,thibeault,stlouis,stilwell,sperling,shattuck,sarmiento,ruppert,rumph,renaud,randazzo,rademacher,quiles,pearman,palomo,mercurio,lowrey,lindeman,lawlor,larosa,lander,labrecque,hovis,holifield,henninger,hawkes,hartfield,hann,hague,genovese,garrick,fudge,frink,eddings,dinh,cribbs,calvillo,bunton,brodeur,bolding,blanding,agosto,zahn,wiener,trussell,tello,teixeira,speck,sharma,shanklin,sealy,scanlan,santamaria,roundy,robichaux,ringer,rigney,prevost,polson,nord,moxley,medford,mccaslin,mcardle,macarthur,lewin,lasher,ketcham,keiser,heine,hackworth,grose,grizzle,gillman,gartner,frazee,fleury,edson,edmonson,derry,cronk,conant,burress,burgin,broom,brockington,bolick,boger,birchfield,billington,baily,bahena,armbruster,anson,yoho,wilcher,tinney,timberlake,thielen,sutphin,stultz,sikora,serra,schulman,scheffler,santillan,rego,preciado,pinkham,mickle,lomas,lizotte,lent,kellerman,keil,johanson,hernadez,hartsfield,haber,gorski,farkas,eberhardt,duquette,delano,cropper,cozart,cockerham,chamblee,cartagena,cahoon,buzzell,brister,brewton,blackshear,benfield,aston,ashburn,arruda,wetmore,weise,vaccaro,tucci,sudduth,stromberg,stoops,showalter,shears,runion,rowden,rosenblum,riffle,renfrow,peres,obryant,leftwich,lark,landeros,kistler,killough,kerley,kastner,hoggard,hartung,guertin,govan,gatling,gailey,fullmer,fulford,flatt,esquibel,endicott,edmiston,edelstein,dufresne,dressler,dickman,chee,busse,bonnett,berard,yoshida,velarde,veach,vanhouten,vachon,tolson,tolman,tennyson,stites,soler,shutt,ruggles,rhone,pegues,neese,muro,moncrief,mefford,mcphee,mcmorris,mceachern,mcclurg,mansour,mader,leija,lecompte,lafountain,labrie,jaquez,heald,hash,hartle,gainer,frisby,farina,eidson,edgerton,dyke,durrett,duhon,cuomo,cobos,cervantez,bybee,brockway,borowski,binion,beery,arguello,amaro,acton,yuen,winton,wigfall,weekley,vidrine,vannoy,tardiff,shoop,shilling,schick,safford,prendergast,pilgrim,pellerin,osuna,nissen,nalley,moller,messner,messick,merrifield,mcguinness,matherly,marcano,mahone,lemos,lebrun,jara,hoffer,herren,hecker,haws,haug,gwin,gober,gilliard,fredette,favela,echeverria,downer,donofrio,desrochers,crozier,corson,bechtold,argueta,aparicio,zamudio,westover,westerman,utter,troyer,thies,tapley,slavin,shirk,sandler,roop,rimmer,raymer,radcliff,otten,moorer,millet,mckibben,mccutchen,mcavoy,mcadoo,mayorga,mastin,martineau,marek,madore,leflore,kroeger,kennon,jimerson,hostetter,hornback,hendley,hance,guardado,granado,gowen,goodale,flinn,fleetwood,fitz,durkee,duprey,dipietro,dilley,clyburn,brawley,beckley,arana,weatherby,vollmer,vestal,tunnell,trigg,tingle,takahashi,sweatt,storer,snapp,shiver,rooker,rathbun,poisson,perrine,perri,parmer,parke,pare,papa,palmieri,midkiff,mecham,mccomas,mcalpine,lovelady,lillard,lally,knopp,kile,kiger,haile,gupta,goldsberry,gilreath,fulks,friesen,franzen,flack,findlay,ferland,dreyer,dore,dennard,deckard,debose,crim,coulombe,chancey,cantor,branton,bissell,barns,woolard,witham,wasserman,spiegel,shoffner,scholz,ruch,rossman,petry,palacio,paez,neary,mortenson,millsap,miele,menke,mckim,mcanally,martines,lemley,larochelle,klaus,klatt,kaufmann,kapp,helmer,hedge,halloran,glisson,frechette,fontana,eagan,distefano,danley,creekmore,chartier,chaffee,carillo,burg,bolinger,berkley,benz,basso,bash,zelaya,woodring,witkowski,wilmot,wilkens,wieland,verdugo,urquhart,tsai,timms,swiger,swaim,sussman,pires,molnar,mcatee,lowder,loos,linker,landes,kingery,hufford,higa,hendren,hammack,hamann,gillam,gerhardt,edelman,delk,deans,curl,constantine,cleaver,claar,casiano,carruth,carlyle,brophy,bolanos,bibbs,bessette,beggs,baugher,bartel,averill,andresen,amin,adames,valente,turnbow,swink,sublett,stroh,stringfellow,ridgway,pugliese,poteat,ohare,neubauer,murchison,mingo,lemmons,kwon,kellam,kean,jarmon,hyden,hudak,hollinger,henkel,hemingway,hasson,hansel,halter,haire,ginsberg,gillispie,fogel,flory,etter,elledge,eckman,deas,currin,crafton,coomer,colter,claxton,bulter,braddock,bowyer,binns,bellows,baskerville,barros,ansley,woolf,wight,waldman,wadley,tull,trull,tesch,stouffer,stadler,slay,shubert,sedillo,santacruz,reinke,poynter,neri,neale,mowry,moralez,monger,mitchum,merryman,manion,macdougall,litchfield,levitt,lepage,lasalle,khoury,kavanagh,karns,ivie,huebner,hodgkins,halpin,garica,eversole,dutra,dunagan,duffey,dillman,dillion,deville,dearborn,damato,courson,coulson,burdine,bousquet,bonin,bish,atencio,westbrooks,wages,vaca,toner,tillis,swett,struble,stanfill,solorzano,slusher,sipple,silvas,shults,schexnayder,saez,rodas,rager,pulver,penton,paniagua,meneses,mcfarlin,mcauley,matz,maloy,magruder,lohman,landa,lacombe,jaimes,holzer,holst,heil,hackler,grundy,gilkey,farnham,durfee,dunton,dunston,duda,dews,craver,corriveau,conwell,colella,chambless,bremer,boutte,bourassa,blaisdell,backman,babineaux,audette,alleman,towner,taveras,tarango,sullins,suiter,stallard,solberg,schlueter,poulos,pimental,owsley,okelley,moffatt,metcalfe,meekins,medellin,mcglynn,mccowan,marriott,marable,lennox,lamoureux,koss,kerby,karp,isenberg,howze,hockenberry,highsmith,hallmark,gusman,greeley,giddings,gaudet,gallup,fleenor,eicher,edington,dimaggio,dement,demello,decastro,bushman,brundage,brooker,bourg,blackstock,bergmann,beaton,banister,argo,appling,wortman,watterson,villalpando,tillotson,tighe,sundberg,sternberg,stamey,shipe,seeger,scarberry,sattler,sain,rothstein,poteet,plowman,pettiford,penland,partain,pankey,oyler,ogletree,ogburn,moton,merkel,lucier,lakey,kratz,kinser,kershaw,josephson,imhoff,hendry,hammon,frisbie,frawley,fraga,forester,eskew,emmert,drennan,doyon,dandridge,cawley,carvajal,bracey,belisle,batey,ahner,wysocki,weiser,veliz,tincher,sansone,sankey,sandstrom,rohrer,risner,pridemore,pfeffer,persinger,peery,oubre,nowicki,musgrave,murdoch,mullinax,mccary,mathieu,livengood,kyser,klink,kimes,kellner,kavanaugh,kasten,imes,hoey,hinshaw,hake,gurule,grube,grillo,geter,gatto,garver,garretson,farwell,eiland,dunford,decarlo,corso,colman,collard,cleghorn,chasteen,cavender,carlile,calvo,byerly,brogdon,broadwater,breault,bono,bergin,behr,ballenger,amick,tamez,stiffler,steinke,simmon,shankle,schaller,salmons,sackett,saad,rideout,ratcliffe,ranson,plascencia,petterson,olszewski,olney,olguin,nilsson,nevels,morelli,montiel,monge,michaelson,mertens,mcchesney,mcalpin,mathewson,loudermilk,lineberry,liggett,kinlaw,kight,jost,hereford,hardeman,halpern,halliday,hafer,gaul,friel,freitag,forsberg,evangelista,doering,dicarlo,dendy,delp,deguzman,dameron,curtiss,cosper,cauthen,bradberry,bouton,bonnell,bixby,bieber,beveridge,bedwell,barhorst,bannon,baltazar,baier,ayotte,attaway,arenas,abrego,turgeon,tunstall,thaxton,tenorio,stotts,sthilaire,shedd,seabolt,scalf,salyers,ruhl,rowlett,robinett,pfister,perlman,pepe,parkman,nunnally,norvell,napper,modlin,mckellar,mcclean,mascarenas,leibowitz,ledezma,kuhlman,kobayashi,hunley,holmquist,hinkley,hazard,hartsell,gribble,gravely,fifield,eliason,doak,crossland,carleton,bridgeman,bojorquez,boggess,auten,woosley,whiteley,wexler,twomey,tullis,townley,standridge,santoyo,rueda,riendeau,revell,pless,ottinger,nigro,nickles,mulvey,menefee,mcshane,mcloughlin,mckinzie,markey,lockridge,lipsey,knisley,knepper,kitts,kiel,jinks,hathcock,godin,gallego,fikes,fecteau,estabrook,ellinger,dunlop,dudek,countryman,chauvin,chatham,bullins,brownfield,boughton,bloodworth,bibb,baucom,barbieri,aubin,armitage,alessi,absher,abbate,zito,woolery,wiggs,wacker,tynes,tolle,telles,tarter,swarey,strode,stockdale,stalnaker,spina,schiff,saari,risley,rameriz,rakes,pettaway,penner,paulus,palladino,omeara,montelongo,melnick,mehta,mcgary,mccourt,mccollough,marchetti,manzanares,lowther,leiva,lauderdale,lafontaine,kowalczyk,knighton,joubert,jaworski,huth,hurdle,housley,hackman,gulick,gordy,gilstrap,gehrke,gebhart,gaudette,foxworth,endres,dunkle,cimino,caddell,brauer,braley,bodine,blackmore,belden,backer,ayer,andress,wisner,vuong,valliere,twigg,tavarez,strahan,steib,staub,sowder,seiber,schutt,scharf,schade,rodriques,risinger,renshaw,rahman,presnell,piatt,nieman,nevins,mcilwain,mcgaha,mccully,mccomb,massengale,macedo,lesher,kearse,jauregui,husted,hudnall,holmberg,hertel,hardie,glidewell,frausto,fassett,dalessandro,dahlgren,corum,constantino,conlin,colquitt,colombo,claycomb,cardin,buller,boney,bocanegra,biggers,benedetto,araiza,andino,albin,zorn,werth,weisman,walley,vanegas,ulibarri,towe,tedford,teasley,suttle,steffens,stcyr,squire,singley,sifuentes,shuck,schram,sass,rieger,ridenhour,rickert,richerson,rayborn,rabe,raab,pendley,pastore,ordway,moynihan,mellott,mckissick,mcgann,mccready,mauney,marrufo,lenhart,lazar,lafave,keele,kautz,jardine,jahnke,jacobo,hord,hardcastle,hageman,giglio,gehring,fortson,duque,duplessis,dicken,derosier,deitz,dalessio,cram,castleman,candelario,callison,caceres,bozarth,biles,bejarano,bashaw,avina,armentrout,alverez,acord,waterhouse,vereen,vanlandingham,strawser,shotwell,severance,seltzer,schoonmaker,schock,schaub,schaffner,roeder,rodrigez,riffe,rasberry,rancourt,railey,quade,pursley,prouty,perdomo,oxley,osterman,nickens,murphree,mounts,merida,maus,mattern,masse,martinelli,mangan,lutes,ludwick,loney,laureano,lasater,knighten,kissinger,kimsey,kessinger,honea,hollingshead,hockett,heyer,heron,gurrola,gove,glasscock,gillett,galan,featherstone,eckhardt,duron,dunson,dasher,culbreth,cowden,cowans,claypoole,churchwell,chabot,caviness,cater,caston,callan,byington,burkey,boden,beckford,atwater,archambault,alvey,alsup,whisenant,weese,voyles,verret,tsang,tessier,sweitzer,sherwin,shaughnessy,revis,remy,prine,philpott,peavy,paynter,parmenter,ovalle,offutt,nightingale,newlin,nakano,myatt,muth,mohan,mcmillon,mccarley,mccaleb,maxson,marinelli,maley,liston,letendre,kain,huntsman,hirst,hagerty,gulledge,greenway,grajeda,gorton,goines,gittens,frederickson,fanelli,embree,eichelberger,dunkin,dixson,dillow,defelice,chumley,burleigh,borkowski,binette,biggerstaff,berglund,beller,audet,arbuckle,allain,alfano,youngman,wittman,weintraub,vanzant,vaden,twitty,stollings,standifer,sines,shope,scalise,saville,posada,pisano,otte,nolasco,mier,merkle,mendiola,melcher,mejias,mcmurry,mccalla,markowitz,manis,mallette,macfarlane,lough,looper,landin,kittle,kinsella,kinnard,hobart,helman,hellman,hartsock,halford,hage,gordan,glasser,gayton,gattis,gastelum,gaspard,frisch,fitzhugh,eckstein,eberly,dowden,despain,crumpler,crotty,cornelison,chouinard,chamness,catlin,cann,bumgardner,budde,branum,bradfield,braddy,borst,birdwell,bazan,banas,bade,arango,ahearn,addis,zumwalt,wurth,wilk,widener,wagstaff,urrutia,terwilliger,tart,steinman,staats,sloat,rives,riggle,revels,reichard,prickett,poff,pitzer,petro,pell,northrup,nicks,moline,mielke,maynor,mallon,magness,lingle,lindell,lieb,lesko,lebeau,lammers,lafond,kiernan,ketron,jurado,holmgren,hilburn,hayashi,hashimoto,harbaugh,guillot,gard,froehlich,feinberg,falco,dufour,drees,doney,diep,delao,daves,dail,crowson,coss,congdon,carner,camarena,butterworth,burlingame,bouffard,bloch,bilyeu,barta,bakke,baillargeon,avent,aquilar,zeringue,yarber,wolfson,vogler,voelker,truss,troxell,thrift,strouse,spielman,sistrunk,sevigny,schuller,schaaf,ruffner,routh,roseman,ricciardi,peraza,pegram,overturf,olander,odaniel,millner,melchor,maroney,machuca,macaluso,livesay,layfield,laskowski,kwiatkowski,kilby,hovey,heywood,hayman,havard,harville,haigh,hagood,grieco,glassman,gebhardt,fleischer,fann,elson,eccles,cunha,crumb,blakley,bardwell,abshire,woodham,wines,welter,wargo,varnado,tutt,traynor,swaney,stricker,stoffel,stambaugh,sickler,shackleford,selman,seaver,sansom,sanmiguel,royston,rourke,rockett,rioux,puleo,pitchford,nardi,mulvaney,middaugh,malek,leos,lathan,kujawa,kimbro,killebrew,houlihan,hinckley,herod,hepler,hamner,hammel,hallowell,gonsalez,gingerich,gambill,funkhouser,fricke,fewell,falkner,endsley,dulin,drennen,deaver,dambrosio,chadwell,castanon,burkes,brune,brisco,brinker,bowker,boldt,berner,beaumont,beaird,bazemore,barrick,albano,younts,wunderlich,weidman,vanness,toland,theobald,stickler,steiger,stanger,spies,spector,sollars,smedley,seibel,scoville,saito,rummel,rowles,rouleau,roos,rogan,roemer,ream,raya,purkey,priester,perreira,penick,paulin,parkins,overcash,oleson,neves,muldrow,minard,midgett,michalak,melgar,mcentire,mcauliffe,marte,lydon,lindholm,leyba,langevin,lagasse,lafayette,kesler,kelton,kaminsky,jaggers,humbert,huck,howarth,hinrichs,higley,gupton,guimond,gravois,giguere,fretwell,fontes,feeley,faucher,eichhorn,ecker,earp,dole,dinger,derryberry,demars,deel,copenhaver,collinsworth,colangelo,cloyd,claiborne,caulfield,carlsen,calzada,caffey,broadus,brenneman,bouie,bodnar,blaney,blanc,beltz,behling,barahona,yockey,winkle,windom,wimer,villatoro,trexler,teran,taliaferro,sydnor,swinson,snelling,smtih,simonton,simoneaux,simoneau,sherrer,seavey,scheel,rushton,rupe,ruano,rippy,reiner,reiff,rabinowitz,quach,penley,odle,nock,minnich,mckown,mccarver,mcandrew,longley,laux,lamothe,lafreniere,kropp,krick,kates,jepson,huie,howse,howie,henriques,haydon,haught,hatter,hartzog,harkey,grimaldo,goshorn,gormley,gluck,gilroy,gillenwater,giffin,fluker,feder,eyre,eshelman,eakins,detwiler,delrosario,davisson,catalan,canning,calton,brammer,botelho,blakney,bartell,averett,askins,aker,witmer,winkelman,widmer,whittier,weitzel,wardell,wagers,ullman,tupper,tingley,tilghman,talton,simard,seda,scheller,sala,rundell,rost,ribeiro,rabideau,primm,pinon,peart,ostrom,ober,nystrom,nussbaum,naughton,murr,moorhead,monti,monteiro,melson,meissner,mclin,mcgruder,marotta,makowski,majewski,madewell,lunt,lukens,leininger,lebel,lakin,kepler,jaques,hunnicutt,hungerford,hoopes,hertz,heins,halliburton,grosso,gravitt,glasper,gallman,gallaway,funke,fulbright,falgout,eakin,dostie,dorado,dewberry,derose,cutshall,crampton,costanzo,colletti,cloninger,claytor,chiang,campagna,burd,brokaw,broaddus,bretz,brainard,binford,bilbrey,alpert,aitken,ahlers,zajac,woolfolk,witten,windle,wayland,tramel,tittle,talavera,suter,straley,specht,sommerville,soloman,skeens,sigman,sibert,shavers,schuck,schmit,sartain,sabol,rosenblatt,rollo,rashid,rabb,polston,nyberg,northrop,navarra,muldoon,mikesell,mcdougald,mcburney,mariscal,lozier,lingerfelt,legere,latour,lagunas,lacour,kurth,killen,kiely,kayser,kahle,isley,huertas,hower,hinz,haugh,gumm,galicia,fortunato,flake,dunleavy,duggins,doby,digiovanni,devaney,deltoro,cribb,corpuz,coronel,coen,charbonneau,caine,burchette,blakey,blakemore,bergquist,beene,beaudette,bayles,ballance,bakker,bailes,asberry,arwood,zucker,willman,whitesell,wald,walcott,vancleave,trump,strasser,simas,shick,schleicher,schaal,saleh,rotz,resnick,rainer,partee,ollis,oller,oday,noles,munday,mong,millican,merwin,mazzola,mansell,magallanes,llanes,lewellen,lepore,kisner,keesee,jeanlouis,ingham,hornbeck,hawn,hartz,harber,haffner,gutshall,guth,grays,gowan,finlay,finkelstein,eyler,enloe,dungan,diez,dearman,cull,crosson,chronister,cassity,campion,callihan,butz,breazeale,blumenthal,berkey,batty,batton,arvizu,alderete,aldana,albaugh,abernethy,wolter,wille,tweed,tollefson,thomasson,teter,testerman,sproul,spates,southwick,soukup,skelly,senter,sealey,sawicki,sargeant,rossiter,rosemond,repp,pifer,ormsby,nickelson,naumann,morabito,monzon,millsaps,millen,mcelrath,marcoux,mantooth,madson,macneil,mackinnon,louque,leister,lampley,kushner,krouse,kirwan,jessee,janson,jahn,jacquez,islas,hutt,holladay,hillyer,hepburn,hensel,harrold,gingrich,geis,gales,fults,finnell,ferri,featherston,epley,ebersole,eames,dunigan,drye,dismuke,devaughn,delorenzo,damiano,confer,collum,clower,clow,claussen,clack,caylor,cawthon,casias,carreno,bluhm,bingaman,bewley,belew,beckner,auld,amey,wolfenbarger,wilkey,wicklund,waltman,villalba,valero,valdovinos,ullrich,tyus,twyman,trost,tardif,tanguay,stripling,steinbach,shumpert,sasaki,sappington,sandusky,reinhold,reinert,quijano,placencia,pinkard,phinney,perrotta,pernell,parrett,oxendine,owensby,orman,nuno,mori,mcroberts,mcneese,mckamey,mccullum,markel,mardis,maines,lueck,lubin,lefler,leffler,larios,labarbera,kershner,josey,jeanbaptiste,izaguirre,hermosillo,haviland,hartshorn,hafner,ginter,getty,franck,fiske,dufrene,doody,davie,dangerfield,dahlberg,cuthbertson,crone,coffelt,chidester,chesson,cauley,caudell,cantara,campo,caines,bullis,bucci,brochu,bogard,bickerstaff,benning,arzola,antonelli,adkinson,zellers,wulf,worsley,woolridge,whitton,westerfield,walczak,vassar,truett,trueblood,trawick,townsley,topping,tobar,telford,steverson,stagg,sitton,sill,sergent,schoenfeld,sarabia,rutkowski,rubenstein,rigdon,prentiss,pomerleau,plumlee,philbrick,patnode,oloughlin,obregon,nuss,morell,mikell,mele,mcinerney,mcguigan,mcbrayer,lollar,kuehl,kinzer,kamp,joplin,jacobi,howells,holstein,hedden,hassler,harty,halle,greig,gouge,goodrum,gerhart,geier,geddes,gast,forehand,ferree,fendley,feltner,esqueda,encarnacion,eichler,egger,edmundson,eatmon,doud,donohoe,donelson,dilorenzo,digiacomo,diggins,delozier,dejong,danford,crippen,coppage,cogswell,clardy,cioffi,cabe,brunette,bresnahan,blomquist,blackstone,biller,bevis,bevan,bethune,benbow,baty,basinger,balcom,andes,aman,aguero,adkisson,yandell,wilds,whisenhunt,weigand,weeden,voight,villar,trottier,tillett,suazo,setser,scurry,schuh,schreck,schauer,samora,roane,rinker,reimers,ratchford,popovich,parkin,natal,melville,mcbryde,magdaleno,loehr,lockman,lingo,leduc,larocca,lamere,laclair,krall,korte,koger,jalbert,hughs,higbee,henton,heaney,haith,gump,greeson,goodloe,gholston,gasper,gagliardi,fregoso,farthing,fabrizio,ensor,elswick,elgin,eklund,eaddy,drouin,dorton,dizon,derouen,deherrera,davy,dampier,cullum,culley,cowgill,cardoso,cardinale,brodsky,broadbent,brimmer,briceno,branscum,bolyard,boley,bennington,beadle,baur,ballentine,azure,aultman,arciniega,aguila,aceves,yepez,woodrum,wethington,weissman,veloz,trusty,troup,trammel,tarpley,stivers,steck,sprayberry,spraggins,spitler,spiers,sohn,seagraves,schiffman,rudnick,rizo,riccio,rennie,quackenbush,puma,plott,pearcy,parada,paiz,munford,moskowitz,mease,mcnary,mccusker,lozoya,longmire,loesch,lasky,kuhlmann,krieg,koziol,kowalewski,konrad,kindle,jowers,jolin,jaco,horgan,hine,hileman,hepner,heise,heady,hawkinson,hannigan,haberman,guilford,grimaldi,garton,gagliano,fruge,follett,fiscus,ferretti,ebner,easterday,eanes,dirks,dimarco,depalma,deforest,cruce,craighead,christner,candler,cadwell,burchell,buettner,brinton,brazier,brannen,brame,bova,bomar,blakeslee,belknap,bangs,balzer,athey,armes,alvis,alverson,alvardo,yeung,wheelock,westlund,wessels,volkman,threadgill,thelen,tague,symons,swinford,sturtevant,straka,stier,stagner,segarra,seawright,rutan,roux,ringler,riker,ramsdell,quattlebaum,purifoy,poulson,permenter,peloquin,pasley,pagel,osman,obannon,nygaard,newcomer,munos,motta,meadors,mcquiston,mcniel,mcmann,mccrae,mayne,matte,legault,lechner,kucera,krohn,kratzer,koopman,jeske,horrocks,hock,hibbler,hesson,hersh,harvin,halvorsen,griner,grindle,gladstone,garofalo,frampton,forbis,eddington,diorio,dingus,dewar,desalvo,curcio,creasy,cortese,cordoba,connally,cluff,cascio,capuano,canaday,calabro,bussard,brayton,borja,bigley,arnone,arguelles,acuff,zamarripa,wooton,widner,wideman,threatt,thiele,templin,teeters,synder,swint,swick,sturges,stogner,stedman,spratt,siegfried,shetler,scull,savino,sather,rothwell,rook,rone,rhee,quevedo,privett,pouliot,poche,pickel,petrillo,pellegrini,peaslee,partlow,otey,nunnery,morelock,morello,meunier,messinger,mckie,mccubbin,mccarron,lerch,lavine,laverty,lariviere,lamkin,kugler,krol,kissel,keeter,hubble,hickox,hetzel,hayner,hagy,hadlock,groh,gottschalk,goodsell,gassaway,garrard,galligan,firth,fenderson,feinstein,etienne,engleman,emrick,ellender,drews,doiron,degraw,deegan,dart,crissman,corr,cookson,coil,cleaves,charest,chapple,chaparro,castano,carpio,byer,bufford,bridgewater,bridgers,brandes,borrero,bonanno,aube,ancheta,abarca,abad,wooster,wimbush,willhite,willams,wigley,weisberg,wardlaw,vigue,vanhook,unknow,torre,tasker,tarbox,strachan,slover,shamblin,semple,schuyler,schrimsher,sayer,salzman,rubalcava,riles,reneau,reichel,rayfield,rabon,pyatt,prindle,poss,polito,plemmons,pesce,perrault,pereyra,ostrowski,nilsen,niemeyer,munsey,mundell,moncada,miceli,meader,mcmasters,mckeehan,matsumoto,marron,marden,lizarraga,lingenfelter,lewallen,langan,lamanna,kovac,kinsler,kephart,keown,kass,kammerer,jeffreys,hysell,hosmer,hardnett,hanner,guyette,greening,glazer,ginder,fromm,fluellen,finkle,fessler,essary,eisele,duren,dittmer,crochet,cosentino,cogan,coelho,cavin,carrizales,campuzano,brough,bopp,bookman,bobb,blouin,beesley,battista,bascom,bakken,badgett,arneson,anselmo,albino,ahumada,woodyard,wolters,wireman,willison,warman,waldrup,vowell,vantassel,twombly,toomer,tennison,teets,tedeschi,swanner,stutz,stelly,sheehy,schermerhorn,scala,sandidge,salters,salo,saechao,roseboro,rolle,ressler,renz,renn,redford,raposa,rainbolt,pelfrey,orndorff,oney,nolin,nimmons,nardone,myhre,morman,menjivar,mcglone,mccammon,maxon,marciano,manus,lowrance,lorenzen,lonergan,lollis,littles,lindahl,lamas,lach,kuster,krawczyk,knuth,knecht,kirkendall,keitt,keever,kantor,jarboe,hoye,houchens,holter,holsinger,hickok,helwig,helgeson,hassett,harner,hamman,hames,hadfield,goree,goldfarb,gaughan,gaudreau,gantz,gallion,frady,foti,flesher,ferrin,faught,engram,donegan,desouza,degroot,cutright,crowl,criner,coan,clinkscales,chewning,chavira,catchings,carlock,bulger,buenrostro,bramblett,brack,boulware,bookout,bitner,birt,baranowski,baisden,allmon,acklin,yoakum,wilbourn,whisler,weinberger,washer,vasques,vanzandt,vanatta,troxler,tomes,tindle,tims,throckmorton,thach,stpeter,stlaurent,stenson,spry,spitz,songer,snavely,shroyer,shortridge,shenk,sevier,seabrook,scrivner,saltzman,rosenberry,rockwood,robeson,roan,reiser,ramires,raber,posner,popham,piotrowski,pinard,peterkin,pelham,peiffer,peay,nadler,musso,millett,mestas,mcgowen,marques,marasco,manriquez,manos,mair,lipps,leiker,krumm,knorr,kinslow,kessel,kendricks,kelm,irick,ickes,hurlburt,horta,hoekstra,heuer,helmuth,heatherly,hampson,hagar,haga,greenlaw,grau,godbey,gingras,gillies,gibb,gayden,gauvin,garrow,fontanez,florio,finke,fasano,ezzell,ewers,eveland,eckenrode,duclos,drumm,dimmick,delancey,defazio,dashiell,cusack,crowther,crigger,cray,coolidge,coldiron,cleland,chalfant,cassel,camire,cabrales,broomfield,brittingham,brisson,brickey,braziel,brazell,bragdon,boulanger,boman,bohannan,beem,barre,azar,ashbaugh,armistead,almazan,adamski,zendejas,winburn,willaims,wilhoit,westberry,wentzel,wendling,visser,vanscoy,vankirk,vallee,tweedy,thornberry,sweeny,spradling,spano,smelser,shim,sechrist,schall,scaife,rugg,rothrock,roesler,riehl,ridings,render,ransdell,radke,pinero,petree,pendergast,peluso,pecoraro,pascoe,panek,oshiro,navarrette,murguia,moores,moberg,michaelis,mcwhirter,mcsweeney,mcquade,mccay,mauk,mariani,marceau,mandeville,maeda,lunde,ludlow,loeb,lindo,linderman,leveille,leith,larock,lambrecht,kulp,kinsley,kimberlin,kesterson,hoyos,helfrich,hanke,grisby,goyette,gouveia,glazier,gile,gerena,gelinas,gasaway,funches,fujimoto,flynt,fenske,fellers,fehr,eslinger,escalera,enciso,duley,dittman,dineen,diller,devault,collings,clymer,clowers,chavers,charland,castorena,castello,camargo,bunce,bullen,boyes,borchers,borchardt,birnbaum,birdsall,billman,benites,bankhead,ange,ammerman,adkison,winegar,wickman,warr,warnke,villeneuve,veasey,vassallo,vannatta,vadnais,twilley,towery,tomblin,tippett,theiss,talkington,talamantes,swart,swanger,streit,stines,stabler,spurling,sobel,sine,simmers,shippy,shiflett,shearin,sauter,sanderlin,rusch,runkle,ruckman,rorie,roesch,richert,rehm,randel,ragin,quesenberry,puentes,plyler,plotkin,paugh,oshaughnessy,ohalloran,norsworthy,niemann,nader,moorefield,mooneyham,modica,miyamoto,mickel,mebane,mckinnie,mazurek,mancilla,lukas,lovins,loughlin,lotz,lindsley,liddle,levan,lederman,leclaire,lasseter,lapoint,lamoreaux,lafollette,kubiak,kirtley,keffer,kaczmarek,housman,hiers,hibbert,herrod,hegarty,hathorn,greenhaw,grafton,govea,futch,furst,franko,forcier,foran,flickinger,fairfield,eure,emrich,embrey,edgington,ecklund,eckard,durante,deyo,delvecchio,dade,currey,creswell,cottrill,casavant,cartier,cargile,capel,cammack,calfee,burse,burruss,brust,brousseau,bridwell,braaten,borkholder,bloomquist,bjork,bartelt,amburgey,yeary,whitefield,vinyard,vanvalkenburg,twitchell,timmins,tapper,stringham,starcher,spotts,slaugh,simonsen,sheffer,sequeira,rosati,rhymes,quint,pollak,peirce,patillo,parkerson,paiva,nilson,nevin,narcisse,mitton,merriam,merced,meiners,mckain,mcelveen,mcbeth,marsden,marez,manke,mahurin,mabrey,luper,krull,hunsicker,hornbuckle,holtzclaw,hinnant,heston,hering,hemenway,hegwood,hearns,halterman,guiterrez,grote,granillo,grainger,glasco,gilder,garren,garlock,garey,fryar,fredricks,fraizer,foshee,ferrel,felty,everitt,evens,esser,elkin,eberhart,durso,duguay,driskill,doster,dewall,deveau,demps,demaio,delreal,deleo,darrah,cumberbatch,culberson,cranmer,cordle,colgan,chesley,cavallo,castellon,castelli,carreras,carnell,carlucci,bontrager,blumberg,blasingame,becton,artrip,andujar,alkire,alder,zukowski,zuckerman,wroblewski,wrigley,woodside,wigginton,westman,westgate,werts,washam,wardlow,walser,waiters,tadlock,stringfield,stimpson,stickley,standish,spurlin,spindler,speller,spaeth,sotomayor,sluder,shryock,shepardson,shatley,scannell,santistevan,rosner,resto,reinhard,rathburn,prisco,poulsen,pinney,phares,pennock,pastrana,oviedo,ostler,nauman,mulford,moise,moberly,mirabal,metoyer,metheny,mentzer,meldrum,mcinturff,mcelyea,mcdougle,massaro,lumpkins,loveday,lofgren,lirette,lesperance,lefkowitz,ledger,lauzon,lachapelle,klassen,keough,kempton,kaelin,jeffords,hsieh,hoyer,horwitz,hoeft,hennig,haskin,gourdine,golightly,girouard,fulgham,fritsch,freer,frasher,foulk,firestone,fiorentino,fedor,ensley,englehart,eells,dunphy,donahoe,dileo,dibenedetto,dabrowski,crick,coonrod,conder,coddington,chunn,chaput,cerna,carreiro,calahan,braggs,bourdon,bollman,bittle,bauder,barreras,aubuchon,anzalone,adamo,zerbe,willcox,westberg,weikel,waymire,vroman,vinci,vallejos,truesdell,troutt,trotta,tollison,toles,tichenor,symonds,surles,strayer,stgeorge,sroka,sorrentino,solares,snelson,silvestri,sikorski,shawver,schumaker,schorr,schooley,scates,satterlee,satchell,rymer,roselli,robitaille,riegel,regis,reames,provenzano,priestley,plaisance,pettey,palomares,nowakowski,monette,minyard,mclamb,mchone,mccarroll,masson,magoon,maddy,lundin,licata,leonhardt,landwehr,kircher,kinch,karpinski,johannsen,hussain,houghtaling,hoskinson,hollaway,holeman,hobgood,hiebert,goggin,geissler,gadbois,gabaldon,fleshman,flannigan,fairman,eilers,dycus,dunmire,duffield,dowler,deloatch,dehaan,deemer,clayborn,christofferso,chilson,chesney,chatfield,carron,canale,brigman,branstetter,bosse,borton,bonar,biron,barroso,arispe,zacharias,zabel,yaeger,woolford,whetzel,weakley,veatch,vandeusen,tufts,troxel,troche,traver,townsel,talarico,swilley,sterrett,stenger,speakman,sowards,sours,souders,souder,soles,sobers,snoddy,smither,shute,shoaf,shahan,schuetz,scaggs,santini,rosson,rolen,robidoux,rentas,recio,pixley,pawlowski,pawlak,paull,overbey,orear,oliveri,oldenburg,nutting,naugle,mossman,misner,milazzo,michelson,mcentee,mccullar,mccree,mcaleer,mazzone,mandell,manahan,malott,maisonet,mailloux,lumley,lowrie,louviere,lipinski,lindemann,leppert,leasure,labarge,kubik,knisely,knepp,kenworthy,kennelly,kelch,kanter,houchin,hosley,hosler,hollon,holleman,heitman,haggins,gwaltney,goulding,gorden,geraci,gathers,frison,feagin,falconer,espada,erving,erikson,eisenhauer,ebeling,durgin,dowdle,dinwiddie,delcastillo,dedrick,crimmins,covell,cournoyer,coria,cohan,cataldo,carpentier,canas,campa,brode,brashears,blaser,bicknell,bednar,barwick,ascencio,althoff,almodovar,alamo,zirkle,zabala,wolverton,winebrenner,wetherell,westlake,wegener,weddington,tuten,trosclair,tressler,theroux,teske,swinehart,swensen,sundquist,southall,socha,sizer,silverberg,shortt,shimizu,sherrard,shaeffer,scheid,scheetz,saravia,sanner,rubinstein,rozell,romer,rheaume,reisinger,randles,pullum,petrella,payan,nordin,norcross,nicoletti,nicholes,newbold,nakagawa,monteith,milstead,milliner,mellen,mccardle,liptak,leitch,latimore,larrison,landau,laborde,koval,izquierdo,hymel,hoskin,holte,hoefer,hayworth,hausman,harrill,harrel,hardt,gully,groover,grinnell,greenspan,graver,grandberry,gorrell,goldenberg,goguen,gilleland,fuson,feldmann,everly,dyess,dunnigan,downie,dolby,deatherage,cosey,cheever,celaya,caver,cashion,caplinger,cansler,byrge,bruder,breuer,breslin,brazelton,botkin,bonneau,bondurant,bohanan,bogue,bodner,boatner,blatt,bickley,belliveau,beiler,beier,beckstead,bachmann,atkin,altizer,alloway,allaire,albro,abron,zellmer,yetter,yelverton,wiens,whidden,viramontes,vanwormer,tarantino,tanksley,sumlin,strauch,strang,stice,spahn,sosebee,sigala,shrout,seamon,schrum,schneck,schantz,ruddy,romig,roehl,renninger,reding,polak,pohlman,pasillas,oldfield,oldaker,ohanlon,ogilvie,norberg,nolette,neufeld,nellis,mummert,mulvihill,mullaney,monteleone,mendonca,meisner,mcmullan,mccluney,mattis,massengill,manfredi,luedtke,lounsbury,liberatore,lamphere,laforge,jourdan,iorio,iniguez,ikeda,hubler,hodgdon,hocking,heacock,haslam,haralson,hanshaw,hannum,hallam,haden,garnes,garces,gammage,gambino,finkel,faucett,ehrhardt,eggen,dusek,durrant,dubay,dones,depasquale,delucia,degraff,decamp,davalos,cullins,conard,clouser,clontz,cifuentes,chappel,chaffins,celis,carwile,byram,bruggeman,bressler,brathwaite,brasfield,bradburn,boose,bodie,blosser,bertsch,bernardi,bernabe,bengtson,barrette,astorga,alday,albee,abrahamson,yarnell,wiltse,wiebe,waguespack,vasser,upham,turek,traxler,torain,tomaszewski,tinnin,tiner,tindell,styron,stahlman,staab,skiba,sheperd,seidl,secor,schutte,sanfilippo,ruder,rondon,rearick,procter,prochaska,pettengill,pauly,neilsen,nally,mullenax,morano,meads,mcnaughton,mcmurtry,mcmath,mckinsey,matthes,massenburg,marlar,margolis,malin,magallon,mackin,lovette,loughran,loring,longstreet,loiselle,lenihan,kunze,koepke,kerwin,kalinowski,kagan,innis,innes,holtzman,heinemann,harshman,haider,haack,grondin,grissett,greenawalt,goudy,goodlett,goldston,gokey,gardea,galaviz,gafford,gabrielson,furlow,fritch,fordyce,folger,elizalde,ehlert,eckhoff,eccleston,ealey,dubin,diemer,deschamps,delapena,decicco,debolt,cullinan,crittendon,crase,cossey,coppock,coots,colyer,cluck,chamberland,burkhead,bumpus,buchan,borman,birkholz,berardi,benda,behnke,barter,amezquita,wotring,wirtz,wingert,wiesner,whitesides,weyant,wainscott,venezia,varnell,tussey,thurlow,tabares,stiver,stell,starke,stanhope,stanek,sisler,sinnott,siciliano,shehan,selph,seager,scurlock,scranton,santucci,santangelo,saltsman,rogge,rettig,renwick,reidy,reider,redfield,premo,parente,paolucci,palmquist,ohler,netherton,mutchler,morita,mistretta,minnis,middendorf,menzel,mendosa,mendelson,meaux,mcspadden,mcquaid,mcnatt,manigault,maney,mager,lukes,lopresti,liriano,letson,lechuga,lazenby,lauria,larimore,krupp,krupa,kopec,kinchen,kifer,kerney,kerner,kennison,kegley,karcher,justis,johson,jellison,janke,huskins,holzman,hinojos,hefley,hatmaker,harte,halloway,hallenbeck,goodwyn,glaspie,geise,fullwood,fryman,frakes,fraire,farrer,enlow,engen,ellzey,eckles,earles,dunkley,drinkard,dreiling,draeger,dinardo,dills,desroches,desantiago,curlee,crumbley,critchlow,coury,courtright,coffield,cleek,charpentier,cardone,caples,cantin,buntin,bugbee,brinkerhoff,brackin,bourland,blassingame,beacham,banning,auguste,andreasen,amann,almon,alejo,adelman,abston,yerger,wymer,woodberry,windley,whiteaker,westfield,weibel,wanner,waldrep,villani,vanarsdale,utterback,updike,triggs,topete,tolar,tigner,thoms,tauber,tarvin,tally,swiney,sweatman,studebaker,stennett,starrett,stannard,stalvey,sonnenberg,smithey,sieber,sickles,shinault,segars,sanger,salmeron,rothe,rizzi,restrepo,ralls,ragusa,quiroga,papenfuss,oropeza,okane,mudge,mozingo,molinaro,mcvicker,mcgarvey,mcfalls,mccraney,matus,magers,llanos,livermore,linehan,leitner,laymon,lawing,lacourse,kwong,kollar,kneeland,kennett,kellett,kangas,janzen,hutter,huling,hofmeister,hewes,harjo,habib,guice,grullon,greggs,grayer,granier,grable,gowdy,giannini,getchell,gartman,garnica,ganey,gallimore,fetters,fergerson,farlow,fagundes,exley,esteves,enders,edenfield,easterwood,drakeford,dipasquale,desousa,deshields,deeter,dedmon,debord,daughtery,cutts,courtemanche,coursey,copple,coomes,collis,cogburn,clopton,choquette,chaidez,castrejon,calhoon,burbach,bulloch,buchman,bruhn,bohon,blough,baynes,barstow,zeman,zackery,yardley,yamashita,wulff,wilken,wiliams,wickersham,wible,whipkey,wedgeworth,walmsley,walkup,vreeland,verrill,umana,traub,swingle,summey,stroupe,stockstill,steffey,stefanski,statler,stapp,speights,solari,soderberg,shunk,shorey,shewmaker,sheilds,schiffer,schank,schaff,sagers,rochon,riser,rickett,reale,raglin,polen,plata,pitcock,percival,palen,orona,oberle,nocera,navas,nault,mullings,montejano,monreal,minick,middlebrook,meece,mcmillion,mccullen,mauck,marshburn,maillet,mahaney,magner,maclin,lucey,litteral,lippincott,leite,leaks,lamarre,jurgens,jerkins,jager,hurwitz,hughley,hotaling,horstman,hohman,hocker,hively,hipps,hessler,hermanson,hepworth,helland,hedlund,harkless,haigler,gutierez,grindstaff,glantz,giardina,gerken,gadsden,finnerty,farnum,encinas,drakes,dennie,cutlip,curtsinger,couto,cortinas,corby,chiasson,carle,carballo,brindle,borum,bober,blagg,berthiaume,beahm,batres,basnight,backes,axtell,atterberry,alvares,alegria,woodell,wojciechowski,winfree,winbush,wiest,wesner,wamsley,wakeman,verner,truex,trafton,toman,thorsen,theus,tellier,tallant,szeto,strope,stills,simkins,shuey,shaul,servin,serio,serafin,salguero,ryerson,rudder,ruark,rother,rohrbaugh,rohrbach,rohan,rogerson,risher,reeser,pryce,prokop,prins,priebe,prejean,pinheiro,petrone,petri,penson,pearlman,parikh,natoli,murakami,mullikin,mullane,motes,morningstar,mcveigh,mcgrady,mcgaughey,mccurley,marchan,manske,lusby,linde,likens,licon,leroux,lemaire,legette,laskey,laprade,laplant,kolar,kittredge,kinley,kerber,kanagy,jetton,janik,ippolito,inouye,hunsinger,howley,howery,horrell,holthaus,hiner,hilson,hilderbrand,hartzler,harnish,harada,hansford,halligan,hagedorn,gwynn,gudino,greenstein,greear,gracey,goudeau,goodner,ginsburg,gerth,gerner,fujii,frier,frenette,folmar,fleisher,fleischmann,fetzer,eisenman,earhart,dupuy,dunkelberger,drexler,dillinger,dilbeck,dewald,demby,deford,craine,chesnut,casady,carstens,carrick,carino,carignan,canchola,bushong,burman,buono,brownlow,broach,britten,brickhouse,boyden,boulton,borland,bohrer,blubaugh,bever,berggren,benevides,arocho,arends,amezcua,almendarez,zalewski,witzel,winkfield,wilhoite,vangundy,vanfleet,vanetten,vandergriff,urbanski,troiano,thibodaux,straus,stoneking,stjean,stillings,stange,speicher,speegle,smeltzer,slawson,simmonds,shuttleworth,serpa,senger,seidman,schweiger,schloss,schimmel,schechter,sayler,sabatini,ronan,rodiguez,riggleman,richins,reamer,prunty,porath,plunk,piland,philbrook,pettitt,perna,peralez,pascale,padula,oboyle,nivens,nickols,mundt,munden,montijo,mcmanis,mcgrane,mccrimmon,manzi,mangold,malick,mahar,maddock,losey,litten,leedy,leavell,ladue,krahn,kluge,junker,iversen,imler,hurtt,huizar,hubbert,howington,hollomon,holdren,hoisington,heiden,hauge,hartigan,gutirrez,griffie,greenhill,gratton,granata,gottfried,gertz,gautreaux,furry,furey,funderburg,flippen,fitzgibbon,drucker,donoghue,dildy,devers,detweiler,despres,denby,degeorge,cueto,cranston,courville,clukey,cirillo,chivers,caudillo,butera,bulluck,buckmaster,braunstein,bracamonte,bourdeau,bonnette".split(","), us_tv_and_film: "you,i,to,that,it,me,what,this,know,i'm,no,have,my,don't,just,not,do,be,your,we,it's,so,but,all,well,oh,about,right,you're,get,here,out,going,like,yeah,if,can,up,want,think,that's,now,go,him,how,got,did,why,see,come,good,really,look,will,okay,back,can't,mean,tell,i'll,hey,he's,could,didn't,yes,something,because,say,take,way,little,make,need,gonna,never,we're,too,she's,i've,sure,our,sorry,what's,let,thing,maybe,down,man,very,there's,should,anything,said,much,any,even,off,please,doing,thank,give,thought,help,talk,god,still,wait,find,nothing,again,things,let's,doesn't,call,told,great,better,ever,night,away,believe,feel,everything,you've,fine,last,keep,does,put,around,stop,they're,i'd,guy,isn't,always,listen,wanted,guys,huh,those,big,lot,happened,thanks,won't,trying,kind,wrong,talking,guess,care,bad,mom,remember,getting,we'll,together,dad,leave,understand,wouldn't,actually,hear,baby,nice,father,else,stay,done,wasn't,course,might,mind,every,enough,try,hell,came,someone,you'll,whole,yourself,idea,ask,must,coming,looking,woman,room,knew,tonight,real,son,hope,went,hmm,happy,pretty,saw,girl,sir,friend,already,saying,next,job,problem,minute,thinking,haven't,heard,honey,matter,myself,couldn't,exactly,having,probably,happen,we've,hurt,boy,dead,gotta,alone,excuse,start,kill,hard,you'd,today,car,ready,without,wants,hold,wanna,yet,seen,deal,once,gone,morning,supposed,friends,head,stuff,worry,live,truth,face,forget,true,cause,soon,knows,telling,wife,who's,chance,run,move,anyone,person,bye,somebody,heart,miss,making,meet,anyway,phone,reason,damn,lost,looks,bring,case,turn,wish,tomorrow,kids,trust,check,change,anymore,least,aren't,working,makes,taking,means,brother,hate,ago,says,beautiful,gave,fact,crazy,sit,afraid,important,rest,fun,kid,word,watch,glad,everyone,sister,minutes,everybody,bit,couple,whoa,either,mrs,feeling,daughter,wow,gets,asked,break,promise,door,close,hand,easy,question,tried,far,walk,needs,mine,killed,hospital,anybody,alright,wedding,shut,able,die,perfect,stand,comes,hit,waiting,dinner,funny,husband,almost,pay,answer,cool,eyes,news,child,shouldn't,yours,moment,sleep,read,where's,sounds,sonny,pick,sometimes,bed,date,plan,hours,lose,hands,serious,shit,behind,inside,ahead,week,wonderful,fight,past,cut,quite,he'll,sick,it'll,eat,nobody,goes,save,seems,finally,lives,worried,upset,carly,met,brought,seem,sort,safe,weren't,leaving,front,shot,loved,asking,running,clear,figure,hot,felt,parents,drink,absolutely,how's,daddy,sweet,alive,sense,meant,happens,bet,blood,ain't,kidding,lie,meeting,dear,seeing,sound,fault,ten,buy,hour,speak,lady,jen,thinks,christmas,outside,hang,possible,worse,mistake,ooh,handle,spend,totally,giving,here's,marriage,realize,unless,sex,send,needed,scared,picture,talked,ass,hundred,changed,completely,explain,certainly,sign,boys,relationship,loves,hair,lying,choice,anywhere,future,weird,luck,she'll,turned,touch,kiss,crane,questions,obviously,wonder,pain,calling,somewhere,throw,straight,cold,fast,words,food,none,drive,feelings,they'll,marry,drop,cannot,dream,protect,twenty,surprise,sweetheart,poor,looked,mad,except,gun,y'know,dance,takes,appreciate,especially,situation,besides,pull,hasn't,worth,sheridan,amazing,expect,swear,piece,busy,happening,movie,we'd,catch,perhaps,step,fall,watching,kept,darling,dog,honor,moving,till,admit,problems,murder,he'd,evil,definitely,feels,honest,eye,broke,missed,longer,dollars,tired,evening,starting,entire,trip,niles,suppose,calm,imagine,fair,caught,blame,sitting,favor,apartment,terrible,clean,learn,frasier,relax,accident,wake,prove,smart,message,missing,forgot,interested,table,nbsp,mouth,pregnant,ring,careful,shall,dude,ride,figured,wear,shoot,stick,follow,angry,write,stopped,ran,standing,forgive,jail,wearing,ladies,kinda,lunch,cristian,greenlee,gotten,hoping,phoebe,thousand,ridge,paper,tough,tape,count,boyfriend,proud,agree,birthday,they've,share,offer,hurry,feet,wondering,decision,ones,finish,voice,herself,would've,mess,deserve,evidence,cute,dress,interesting,hotel,enjoy,quiet,concerned,staying,beat,sweetie,mention,clothes,fell,neither,mmm,fix,respect,prison,attention,holding,calls,surprised,bar,keeping,gift,hadn't,putting,dark,owe,ice,helping,normal,aunt,lawyer,apart,plans,jax,girlfriend,floor,whether,everything's,box,judge,upstairs,sake,mommy,possibly,worst,acting,accept,blow,strange,saved,conversation,plane,mama,yesterday,lied,quick,lately,stuck,difference,store,she'd,bought,doubt,listening,walking,cops,deep,dangerous,buffy,sleeping,chloe,rafe,join,card,crime,gentlemen,willing,window,walked,guilty,likes,fighting,difficult,soul,joke,favorite,uncle,promised,bother,seriously,cell,knowing,broken,advice,somehow,paid,losing,push,helped,killing,boss,liked,innocent,rules,learned,thirty,risk,letting,speaking,ridiculous,afternoon,apologize,nervous,charge,patient,boat,how'd,hide,detective,planning,huge,breakfast,horrible,awful,pleasure,driving,hanging,picked,sell,quit,apparently,dying,notice,congratulations,visit,could've,c'mon,letter,decide,forward,fool,showed,smell,seemed,spell,memory,pictures,slow,seconds,hungry,hearing,kitchen,ma'am,should've,realized,kick,grab,discuss,fifty,reading,idiot,suddenly,agent,destroy,bucks,shoes,peace,arms,demon,livvie,consider,papers,incredible,witch,drunk,attorney,tells,knock,ways,gives,nose,skye,turns,keeps,jealous,drug,sooner,cares,plenty,extra,outta,weekend,matters,gosh,opportunity,impossible,waste,pretend,jump,eating,proof,slept,arrest,breathe,perfectly,warm,pulled,twice,easier,goin,dating,suit,romantic,drugs,comfortable,finds,checked,divorce,begin,ourselves,closer,ruin,smile,laugh,treat,fear,what'd,otherwise,excited,mail,hiding,stole,pacey,noticed,fired,excellent,bringing,bottom,note,sudden,bathroom,honestly,sing,foot,remind,charges,witness,finding,tree,dare,hardly,that'll,steal,silly,contact,teach,shop,plus,colonel,fresh,trial,invited,roll,reach,dirty,choose,emergency,dropped,butt,credit,obvious,locked,loving,nuts,agreed,prue,goodbye,condition,guard,fuckin,grow,cake,mood,crap,crying,belong,partner,trick,pressure,dressed,taste,neck,nurse,raise,lots,carry,whoever,drinking,they'd,breaking,file,lock,wine,spot,paying,assume,asleep,turning,viki,bedroom,shower,nikolas,camera,fill,reasons,forty,bigger,nope,breath,doctors,pants,freak,movies,folks,cream,wild,truly,desk,convince,client,threw,hurts,spending,answers,shirt,chair,rough,doin,sees,ought,empty,wind,aware,dealing,pack,tight,hurting,guest,arrested,salem,confused,surgery,expecting,deacon,unfortunately,goddamn,bottle,beyond,whenever,pool,opinion,starts,jerk,secrets,falling,necessary,barely,dancing,tests,copy,cousin,ahem,twelve,tess,skin,fifteen,speech,orders,complicated,nowhere,escape,biggest,restaurant,grateful,usual,burn,address,someplace,screw,everywhere,regret,goodness,mistakes,details,responsibility,suspect,corner,hero,dumb,terrific,whoo,hole,memories,o'clock,teeth,ruined,bite,stenbeck,liar,showing,cards,desperate,search,pathetic,spoke,scare,marah,afford,settle,stayed,checking,hired,heads,concern,blew,alcazar,champagne,connection,tickets,happiness,saving,kissing,hated,personally,suggest,prepared,onto,downstairs,ticket,it'd,loose,holy,duty,convinced,throwing,kissed,legs,loud,saturday,babies,where'd,warning,miracle,carrying,blind,ugly,shopping,hates,sight,bride,coat,clearly,celebrate,brilliant,wanting,forrester,lips,custody,screwed,buying,toast,thoughts,reality,lexie,attitude,advantage,grandfather,sami,grandma,someday,roof,marrying,powerful,grown,grandmother,fake,must've,ideas,exciting,familiar,bomb,bout,harmony,schedule,capable,practically,correct,clue,forgotten,appointment,deserves,threat,bloody,lonely,shame,jacket,hook,scary,investigation,invite,shooting,lesson,criminal,victim,funeral,considering,burning,strength,harder,sisters,pushed,shock,pushing,heat,chocolate,miserable,corinthos,nightmare,brings,zander,crash,chances,sending,recognize,healthy,boring,feed,engaged,headed,treated,knife,drag,badly,hire,paint,pardon,behavior,closet,warn,gorgeous,milk,survive,ends,dump,rent,remembered,thanksgiving,rain,revenge,prefer,spare,pray,disappeared,aside,statement,sometime,meat,fantastic,breathing,laughing,stood,affair,ours,depends,protecting,jury,brave,fingers,murdered,explanation,picking,blah,stronger,handsome,unbelievable,anytime,shake,oakdale,wherever,pulling,facts,waited,lousy,circumstances,disappointed,weak,trusted,license,nothin,trash,understanding,slip,sounded,awake,friendship,stomach,weapon,threatened,mystery,vegas,understood,basically,switch,frankly,cheap,lifetime,deny,clock,garbage,why'd,tear,ears,indeed,changing,singing,tiny,decent,avoid,messed,filled,touched,disappear,exact,pills,kicked,harm,fortune,pretending,insurance,fancy,drove,cared,belongs,nights,lorelai,lift,timing,guarantee,chest,woke,burned,watched,heading,selfish,drinks,doll,committed,elevator,freeze,noise,wasting,ceremony,uncomfortable,staring,files,bike,stress,permission,thrown,possibility,borrow,fabulous,doors,screaming,bone,xander,what're,meal,apology,anger,honeymoon,bail,parking,fixed,wash,stolen,sensitive,stealing,photo,chose,lets,comfort,worrying,pocket,mateo,bleeding,shoulder,ignore,talent,tied,garage,dies,demons,dumped,witches,rude,crack,bothering,radar,soft,meantime,gimme,kinds,fate,concentrate,throat,prom,messages,intend,ashamed,somethin,manage,guilt,interrupt,guts,tongue,shoe,basement,sentence,purse,glasses,cabin,universe,repeat,mirror,wound,travers,tall,engagement,therapy,emotional,jeez,decisions,soup,thrilled,stake,chef,moves,extremely,moments,expensive,counting,shots,kidnapped,cleaning,shift,plate,impressed,smells,trapped,aidan,knocked,charming,attractive,argue,puts,whip,embarrassed,package,hitting,bust,stairs,alarm,pure,nail,nerve,incredibly,walks,dirt,stamp,terribly,friendly,damned,jobs,suffering,disgusting,stopping,deliver,riding,helps,disaster,bars,crossed,trap,talks,eggs,chick,threatening,spoken,introduce,confession,embarrassing,bags,impression,gate,reputation,presents,chat,suffer,argument,talkin,crowd,homework,coincidence,cancel,pride,solve,hopefully,pounds,pine,mate,illegal,generous,outfit,maid,bath,punch,freaked,begging,recall,enjoying,prepare,wheel,defend,signs,painful,yourselves,maris,that'd,suspicious,cooking,button,warned,sixty,pity,yelling,awhile,confidence,offering,pleased,panic,hers,gettin,refuse,grandpa,testify,choices,cruel,mental,gentleman,coma,cutting,proteus,guests,expert,benefit,faces,jumped,toilet,sneak,halloween,privacy,smoking,reminds,twins,swing,solid,options,commitment,crush,ambulance,wallet,gang,eleven,option,laundry,assure,stays,skip,fail,discussion,clinic,betrayed,sticking,bored,mansion,soda,sheriff,suite,handled,busted,load,happier,studying,romance,procedure,commit,assignment,suicide,minds,swim,yell,llanview,chasing,proper,believes,humor,hopes,lawyers,giant,latest,escaped,parent,tricks,insist,dropping,cheer,medication,flesh,routine,sandwich,handed,false,beating,warrant,awfully,odds,treating,thin,suggesting,fever,sweat,silent,clever,sweater,mall,sharing,assuming,judgment,goodnight,divorced,surely,steps,confess,math,listened,comin,answered,vulnerable,bless,dreaming,chip,zero,pissed,nate,kills,tears,knees,chill,brains,unusual,packed,dreamed,cure,lookin,grave,cheating,breaks,locker,gifts,awkward,thursday,joking,reasonable,dozen,curse,quartermaine,millions,dessert,rolling,detail,alien,delicious,closing,vampires,wore,tail,secure,salad,murderer,spit,offense,dust,conscience,bread,answering,lame,invitation,grief,smiling,pregnancy,prisoner,delivery,guards,virus,shrink,freezing,wreck,massimo,wire,technically,blown,anxious,cave,holidays,cleared,wishes,caring,candles,bound,charm,pulse,jumping,jokes,boom,occasion,silence,nonsense,frightened,slipped,dimera,blowing,relationships,kidnapping,spin,tool,roxy,packing,blaming,wrap,obsessed,fruit,torture,personality,there'll,fairy,necessarily,seventy,print,motel,underwear,grams,exhausted,believing,freaking,carefully,trace,touching,messing,recovery,intention,consequences,belt,sacrifice,courage,enjoyed,attracted,remove,testimony,intense,heal,defending,unfair,relieved,loyal,slowly,buzz,alcohol,surprises,psychiatrist,plain,attic,who'd,uniform,terrified,cleaned,zach,threaten,fella,enemies,satisfied,imagination,hooked,headache,forgetting,counselor,andie,acted,badge,naturally,frozen,sakes,appropriate,trunk,dunno,costume,sixteen,impressive,kicking,junk,grabbed,understands,describe,clients,owns,affect,witnesses,starving,instincts,happily,discussing,deserved,strangers,surveillance,admire,questioning,dragged,barn,deeply,wrapped,wasted,tense,hoped,fellas,roommate,mortal,fascinating,stops,arrangements,agenda,literally,propose,honesty,underneath,sauce,promises,lecture,eighty,torn,shocked,backup,differently,ninety,deck,biological,pheebs,ease,creep,waitress,telephone,ripped,raising,scratch,rings,prints,thee,arguing,ephram,asks,oops,diner,annoying,taggert,sergeant,blast,towel,clown,habit,creature,bermuda,snap,react,paranoid,handling,eaten,therapist,comment,sink,reporter,nurses,beats,priority,interrupting,warehouse,loyalty,inspector,pleasant,excuses,threats,guessing,tend,praying,motive,unconscious,mysterious,unhappy,tone,switched,rappaport,sookie,neighbor,loaded,swore,piss,balance,toss,misery,thief,squeeze,lobby,goa'uld,geez,exercise,forth,booked,sandburg,poker,eighteen,d'you,bury,everyday,digging,creepy,wondered,liver,hmmm,magical,fits,discussed,moral,helpful,searching,flew,depressed,aisle,cris,amen,vows,neighbors,darn,cents,arrange,annulment,useless,adventure,resist,fourteen,celebrating,inch,debt,violent,sand,teal'c,celebration,reminded,phones,paperwork,emotions,stubborn,pound,tension,stroke,steady,overnight,chips,beef,suits,boxes,cassadine,collect,tragedy,spoil,realm,wipe,surgeon,stretch,stepped,nephew,neat,limo,confident,perspective,climb,punishment,finest,springfield,hint,furniture,blanket,twist,proceed,fries,worries,niece,gloves,soap,signature,disappoint,crawl,convicted,flip,counsel,doubts,crimes,accusing,shaking,remembering,hallway,halfway,bothered,madam,gather,cameras,blackmail,symptoms,rope,ordinary,imagined,cigarette,supportive,explosion,trauma,ouch,furious,cheat,avoiding,whew,thick,oooh,boarding,approve,urgent,shhh,misunderstanding,drawer,phony,interfere,catching,bargain,tragic,respond,punish,penthouse,thou,rach,ohhh,insult,bugs,beside,begged,absolute,strictly,socks,senses,sneaking,reward,polite,checks,tale,physically,instructions,fooled,blows,tabby,bitter,adorable,y'all,tested,suggestion,jewelry,alike,jacks,distracted,shelter,lessons,constable,circus,audition,tune,shoulders,mask,helpless,feeding,explains,sucked,robbery,objection,behave,valuable,shadows,courtroom,confusing,talented,smarter,mistaken,customer,bizarre,scaring,motherfucker,alert,vecchio,reverend,foolish,compliment,bastards,worker,wheelchair,protective,gentle,reverse,picnic,knee,cage,wives,wednesday,voices,toes,stink,scares,pour,cheated,slide,ruining,filling,exit,cottage,upside,proves,parked,diary,complaining,confessed,pipe,merely,massage,chop,spill,prayer,betray,waiter,scam,rats,fraud,brush,tables,sympathy,pill,filthy,seventeen,employee,bracelet,pays,fairly,deeper,arrive,tracking,spite,shed,recommend,oughta,nanny,menu,diet,corn,roses,patch,dime,devastated,subtle,bullets,beans,pile,confirm,strings,parade,borrowed,toys,straighten,steak,premonition,planted,honored,exam,convenient,traveling,laying,insisted,dish,aitoro,kindly,grandson,donor,temper,teenager,proven,mothers,denial,backwards,tent,swell,noon,happiest,drives,thinkin,spirits,potion,holes,fence,whatsoever,rehearsal,overheard,lemme,hostage,bench,tryin,taxi,shove,moron,impress,needle,intelligent,instant,disagree,stinks,rianna,recover,groom,gesture,constantly,bartender,suspects,sealed,legally,hears,dresses,sheet,psychic,teenage,knocking,judging,accidentally,waking,rumor,manners,homeless,hollow,desperately,tapes,referring,item,genoa,gear,majesty,cried,tons,spells,instinct,quote,motorcycle,convincing,fashioned,aids,accomplished,grip,bump,upsetting,needing,invisible,forgiveness,feds,compare,bothers,tooth,inviting,earn,compromise,cocktail,tramp,jabot,intimate,dignity,dealt,souls,informed,gods,dressing,cigarettes,alistair,leak,fond,corky,seduce,liquor,fingerprints,enchantment,butters,stuffed,stavros,emotionally,transplant,tips,oxygen,nicely,lunatic,drill,complain,announcement,unfortunate,slap,prayers,plug,opens,oath,o'neill,mutual,yacht,remembers,fried,extraordinary,bait,warton,sworn,stare,safely,reunion,burst,might've,dive,aboard,expose,buddies,trusting,booze,sweep,sore,scudder,properly,parole,ditch,canceled,speaks,glow,wears,thirsty,skull,ringing,dorm,dining,bend,unexpected,pancakes,harsh,flattered,ahhh,troubles,fights,favourite,eats,rage,undercover,spoiled,sloane,shine,destroying,deliberately,conspiracy,thoughtful,sandwiches,plates,nails,miracles,fridge,drank,contrary,beloved,allergic,washed,stalking,solved,sack,misses,forgiven,bent,maciver,involve,dragging,cooked,pointing,foul,dull,beneath,heels,faking,deaf,stunt,jealousy,hopeless,fears,cuts,scenario,necklace,crashed,accuse,restraining,homicide,helicopter,firing,safer,auction,videotape,tore,reservations,pops,appetite,wounds,vanquish,ironic,fathers,excitement,anyhow,tearing,sends,rape,laughed,belly,dealer,cooperate,accomplish,wakes,spotted,sorts,reservation,ashes,tastes,supposedly,loft,intentions,integrity,wished,towels,suspected,investigating,inappropriate,lipstick,lawn,compassion,cafeteria,scarf,precisely,obsession,loses,lighten,infection,granddaughter,explode,balcony,this'll,spying,publicity,depend,cracked,conscious,ally,absurd,vicious,invented,forbid,directions,defendant,bare,announce,screwing,salesman,robbed,leap,lakeview,insanity,reveal,possibilities,kidnap,gown,chairs,wishing,setup,punished,criminals,regrets,raped,quarters,lamp,dentist,anyways,anonymous,semester,risks,owes,lungs,explaining,delicate,tricked,eager,doomed,adoption,stab,sickness,scum,floating,envelope,vault,sorel,pretended,potatoes,plea,photograph,payback,misunderstood,kiddo,healing,cascade,capeside,stabbed,remarkable,brat,privilege,passionate,nerves,lawsuit,kidney,disturbed,cozy,tire,shirts,oven,ordering,delay,risky,monsters,honorable,grounded,closest,breakdown,bald,abandon,scar,collar,worthless,sucking,enormous,disturbing,disturb,distract,deals,conclusions,vodka,dishes,crawling,briefcase,wiped,whistle,sits,roast,rented,pigs,flirting,deposit,bottles,topic,riot,overreacting,logical,hostile,embarrass,casual,beacon,amusing,altar,claus,survival,skirt,shave,porch,ghosts,favors,drops,dizzy,chili,advise,strikes,rehab,photographer,peaceful,leery,heavens,fortunately,fooling,expectations,cigar,weakness,ranch,practicing,examine,cranes,bribe,sail,prescription,hush,fragile,forensics,expense,drugged,cows,bells,visitor,suitcase,sorta,scan,manticore,insecure,imagining,hardest,clerk,wrist,what'll,starters,silk,pump,pale,nicer,haul,flies,boot,thumb,there'd,how're,elders,quietly,pulls,idiots,erase,denying,ankle,amnesia,accepting,heartbeat,devane,confront,minus,legitimate,fixing,arrogant,tuna,supper,slightest,sins,sayin,recipe,pier,paternity,humiliating,genuine,snack,rational,minded,guessed,weddings,tumor,humiliated,aspirin,spray,picks,eyed,drowning,contacts,ritual,perfume,hiring,hating,docks,creatures,visions,thanking,thankful,sock,nineteen,fork,throws,teenagers,stressed,slice,rolls,plead,ladder,kicks,detectives,assured,tellin,shallow,responsibilities,repay,howdy,girlfriends,deadly,comforting,ceiling,verdict,insensitive,spilled,respected,messy,interrupted,halliwell,blond,bleed,wardrobe,takin,murders,backs,underestimate,justify,harmless,frustrated,fold,enzo,communicate,bugging,arson,whack,salary,rumors,obligation,liking,dearest,congratulate,vengeance,rack,puzzle,fires,courtesy,caller,blamed,tops,quiz,prep,curiosity,circles,barbecue,sunnydale,spinning,psychotic,cough,accusations,resent,laughs,freshman,envy,drown,bartlet,asses,sofa,poster,highness,dock,apologies,theirs,stat,stall,realizes,psych,mmmm,fools,understandable,treats,succeed,stir,relaxed,makin,gratitude,faithful,accent,witter,wandering,locate,inevitable,gretel,deed,crushed,controlling,smelled,robe,gossip,gambling,cosmetics,accidents,surprising,stiff,sincere,rushed,refrigerator,preparing,nightmares,mijo,ignoring,hunch,fireworks,drowned,brass,whispering,sophisticated,luggage,hike,explore,emotion,crashing,contacted,complications,shining,rolled,righteous,reconsider,goody,geek,frightening,ethics,creeps,courthouse,camping,affection,smythe,haircut,essay,baked,apologized,vibe,respects,receipt,mami,hats,destructive,adore,adopt,tracked,shorts,reminding,dough,creations,cabot,barrel,snuck,slight,reporters,pressing,magnificent,madame,lazy,glorious,fiancee,bits,visitation,sane,kindness,shoulda,rescued,mattress,lounge,lifted,importantly,glove,enterprises,disappointment,condo,beings,admitting,yelled,waving,spoon,screech,satisfaction,reads,nailed,worm,tick,resting,marvelous,fuss,cortlandt,chased,pockets,luckily,lilith,filing,conversations,consideration,consciousness,worlds,innocence,forehead,aggressive,trailer,slam,quitting,inform,delighted,daylight,danced,confidential,aunts,washing,tossed,spectra,marrow,lined,implying,hatred,grill,corpse,clues,sober,offended,morgue,infected,humanity,distraction,cart,wired,violation,promising,harassment,glue,d'angelo,cursed,brutal,warlocks,wagon,unpleasant,proving,priorities,mustn't,lease,flame,disappearance,depressing,thrill,sitter,ribs,flush,earrings,deadline,corporal,collapsed,update,snapped,smack,melt,figuring,delusional,coulda,burnt,tender,sperm,realise,pork,popped,interrogation,esteem,choosing,undo,pres,prayed,plague,manipulate,insulting,detention,delightful,coffeehouse,betrayal,apologizing,adjust,wrecked,wont,whipped,rides,reminder,monsieur,faint,bake,distress,correctly,complaint,blocked,tortured,risking,pointless,handing,dumping,cups,alibi,struggling,shiny,risked,mummy,mint,hose,hobby,fortunate,fleischman,fitting,curtain,counseling,rode,puppet,modeling,memo,irresponsible,humiliation,hiya,freakin,felony,choke,blackmailing,appreciated,tabloid,suspicion,recovering,pledge,panicked,nursery,louder,jeans,investigator,homecoming,frustrating,buys,busting,buff,sleeve,irony,dope,declare,autopsy,workin,torch,prick,limb,hysterical,goddamnit,fetch,dimension,crowded,clip,climbing,bonding,woah,trusts,negotiate,lethal,iced,fantasies,deeds,bore,babysitter,questioned,outrageous,kiriakis,insulted,grudge,driveway,deserted,definite,beep,wires,suggestions,searched,owed,lend,drunken,demanding,costanza,conviction,bumped,weigh,touches,tempted,shout,resolve,relate,poisoned,meals,invitations,haunted,bogus,autograph,affects,tolerate,stepping,spontaneous,sleeps,probation,manny,fist,spectacular,hostages,heroin,havin,habits,encouraging,consult,burgers,boyfriends,bailed,baggage,watches,troubled,torturing,teasing,sweetest,qualities,postpone,overwhelmed,malkovich,impulse,classy,charging,amazed,policeman,hypocrite,humiliate,hideous,d'ya,costumes,bluffing,betting,bein,bedtime,alcoholic,vegetable,tray,suspicions,spreading,splendid,shrimp,shouting,pressed,nooo,grieving,gladly,fling,eliminate,cereal,aaah,sonofabitch,paralyzed,lotta,locks,guaranteed,dummy,despise,dental,briefing,bluff,batteries,whatta,sounding,servants,presume,handwriting,fainted,dried,allright,acknowledge,whacked,toxic,reliable,quicker,overwhelming,lining,harassing,fatal,endless,dolls,convict,whatcha,unlikely,shutting,positively,overcome,goddam,essence,dose,diagnosis,cured,bully,ahold,yearbook,tempting,shelf,prosecution,pouring,possessed,greedy,wonders,thorough,spine,rath,psychiatric,meaningless,latte,jammed,ignored,fiance,evidently,contempt,compromised,cans,weekends,urge,theft,suing,shipment,scissors,responding,proposition,noises,matching,hormones,hail,grandchildren,gently,smashed,sexually,sentimental,nicest,manipulated,intern,handcuffs,framed,errands,entertaining,crib,carriage,barge,spends,slipping,seated,rubbing,rely,reject,recommendation,reckon,headaches,float,embrace,corners,whining,sweating,skipped,mountie,motives,listens,cristobel,cleaner,cheerleader,balsom,unnecessary,stunning,scent,quartermaines,pose,montega,loosen,info,hottest,haunt,gracious,forgiving,errand,cakes,blames,abortion,sketch,shifts,plotting,perimeter,pals,mere,mattered,lonigan,interference,eyewitness,enthusiasm,diapers,strongest,shaken,punched,portal,catches,backyard,terrorists,sabotage,organs,needy,cuff,civilization,woof,who'll,prank,obnoxious,mates,hereby,gabby,faked,cellar,whitelighter,void,strangle,sour,muffins,interfering,demonic,clearing,boutique,barrington,terrace,smoked,righty,quack,petey,pact,knot,ketchup,disappearing,cordy,uptight,ticking,terrifying,tease,swamp,secretly,rejection,reflection,realizing,rays,mentally,marone,doubted,deception,congressman,cheesy,toto,stalling,scoop,ribbon,immune,expects,destined,bets,bathing,appreciation,accomplice,wander,shoved,sewer,scroll,retire,lasts,fugitive,freezer,discount,cranky,crank,clearance,bodyguard,anxiety,accountant,whoops,volunteered,talents,stinking,remotely,garlic,decency,cord,beds,altogether,uniforms,tremendous,popping,outa,observe,lung,hangs,feelin,dudes,donation,disguise,curb,bites,antique,toothbrush,realistic,predict,landlord,hourglass,hesitate,consolation,babbling,tipped,stranded,smartest,repeating,puke,psst,paycheck,overreacted,macho,juvenile,grocery,freshen,disposal,cuffs,caffeine,vanished,unfinished,ripping,pinch,flattering,expenses,dinners,colleague,ciao,belthazor,attorneys,woulda,whereabouts,waitin,truce,tripped,tasted,steer,poisoning,manipulative,immature,husbands,heel,granddad,delivering,condoms,addict,trashed,raining,pasta,needles,leaning,detector,coolest,batch,appointments,almighty,vegetables,spark,perfection,pains,momma,mole,meow,hairs,getaway,cracking,compliments,behold,verge,tougher,timer,tapped,taped,specialty,snooping,shoots,rendezvous,pentagon,leverage,jeopardize,janitor,grandparents,forbidden,clueless,bidding,ungrateful,unacceptable,tutor,serum,scuse,pajamas,mouths,lure,irrational,doom,cries,beautifully,arresting,approaching,traitor,sympathetic,smug,smash,rental,prostitute,premonitions,jumps,inventory,darlin,committing,banging,asap,worms,violated,vent,traumatic,traced,sweaty,shaft,overboard,insight,healed,grasp,experiencing,crappy,crab,chunk,awww,stain,shack,reacted,pronounce,poured,moms,marriages,jabez,handful,flipped,fireplace,embarrassment,disappears,concussion,bruises,brakes,twisting,swept,summon,splitting,sloppy,settling,reschedule,notch,hooray,grabbing,exquisite,disrespect,thornhart,straw,slapped,shipped,shattered,ruthless,refill,payroll,numb,mourning,manly,hunk,entertain,drift,dreadful,doorstep,confirmation,chops,appreciates,vague,tires,stressful,stashed,stash,sensed,preoccupied,predictable,noticing,madly,gunshot,dozens,dork,confuse,cleaners,charade,chalk,cappuccino,bouquet,amulet,addiction,who've,warming,unlock,satisfy,sacrificed,relaxing,lone,blocking,blend,blankets,addicted,yuck,hunger,hamburger,greeting,greet,gravy,gram,dreamt,dice,caution,backpack,agreeing,whale,taller,supervisor,sacrifices,phew,ounce,irrelevant,gran,felon,favorites,farther,fade,erased,easiest,convenience,compassionate,cane,backstage,agony,adores,veins,tweek,thieves,surgical,strangely,stetson,recital,proposing,productive,meaningful,immunity,hassle,goddamned,frighten,dearly,cease,ambition,wage,unstable,salvage,richer,refusing,raging,pumping,pressuring,mortals,lowlife,intimidated,intentionally,inspire,forgave,devotion,despicable,deciding,dash,comfy,breach,bark,aaaah,switching,swallowed,stove,screamed,scars,russians,pounding,poof,pipes,pawn,legit,invest,farewell,curtains,civilized,caviar,boost,token,superstition,supernatural,sadness,recorder,psyched,motivated,microwave,hallelujah,fraternity,dryer,cocoa,chewing,acceptable,unbelievably,smiled,smelling,simpler,respectable,remarks,khasinau,indication,gutter,grabs,fulfill,flashlight,ellenor,blooded,blink,blessings,beware,uhhh,turf,swings,slips,shovel,shocking,puff,mirrors,locking,heartless,fras,childish,cardiac,utterly,tuscany,ticked,stunned,statesville,sadly,purely,kiddin,jerks,hitch,flirt,fare,equals,dismiss,christening,casket,c'mere,breakup,biting,antibiotics,accusation,abducted,witchcraft,thread,runnin,punching,paramedics,newest,murdering,masks,lawndale,initials,grampa,choking,charms,careless,bushes,buns,bummed,shred,saves,saddle,rethink,regards,precinct,persuade,meds,manipulating,llanfair,leash,hearted,guarantees,fucks,disgrace,deposition,bookstore,boil,vitals,veil,trespassing,sidewalk,sensible,punishing,overtime,optimistic,obsessing,notify,mornin,jeopardy,jaffa,injection,hilarious,desires,confide,cautious,yada,where're,vindictive,vial,teeny,stroll,sittin,scrub,rebuild,posters,ordeal,nuns,intimacy,inheritance,exploded,donate,distracting,despair,crackers,wildwind,virtue,thoroughly,tails,spicy,sketches,sights,sheer,shaving,seize,scarecrow,refreshing,prosecute,platter,napkin,misplaced,merchandise,loony,jinx,heroic,frankenstein,ambitious,syrup,solitary,resemblance,reacting,premature,lavery,flashes,cheque,awright,acquainted,wrapping,untie,salute,realised,priceless,partying,lightly,lifting,kasnoff,insisting,glowing,generator,explosives,cutie,confronted,buts,blouse,ballistic,antidote,analyze,allowance,adjourned,unto,understatement,tucked,touchy,subconscious,screws,sarge,roommates,rambaldi,offend,nerd,knives,irresistible,incapable,hostility,goddammit,fuse,frat,curfew,blackmailed,walkin,starve,sleigh,sarcastic,recess,rebound,pinned,parlor,outfits,livin,heartache,haired,fundraiser,doorman,discreet,dilucca,cracks,considerate,climbed,catering,apophis,zoey,urine,strung,stitches,sordid,sark,protector,phoned,pets,hostess,flaw,flavor,deveraux,consumed,confidentiality,bourbon,straightened,specials,spaghetti,prettier,powerless,playin,playground,paranoia,instantly,havoc,exaggerating,eavesdropping,doughnuts,diversion,deepest,cutest,comb,bela,behaving,anyplace,accessory,workout,translate,stuffing,speeding,slime,royalty,polls,marital,lurking,lottery,imaginary,greetings,fairwinds,elegant,elbow,credibility,credentials,claws,chopped,bridal,bedside,babysitting,witty,unforgivable,underworld,tempt,tabs,sophomore,selfless,secrecy,restless,okey,movin,metaphor,messes,meltdown,lecter,incoming,gasoline,diefenbaker,buckle,admired,adjustment,warmth,throats,seduced,queer,parenting,noses,luckiest,graveyard,gifted,footsteps,dimeras,cynical,wedded,verbal,unpredictable,tuned,stoop,slides,sinking,rigged,plumbing,lingerie,hankey,greed,everwood,elope,dresser,chauffeur,bulletin,bugged,bouncing,temptation,strangest,slammed,sarcasm,pending,packages,orderly,obsessive,murderers,meteor,inconvenience,glimpse,froze,execute,courageous,consulate,closes,bosses,bees,amends,wuss,wolfram,wacky,unemployed,testifying,syringe,stew,startled,sorrow,sleazy,shaky,screams,rsquo,remark,poke,nutty,mentioning,mend,inspiring,impulsive,housekeeper,foam,fingernails,conditioning,baking,whine,thug,starved,sniffing,sedative,programmed,picket,paged,hound,homosexual,homo,hips,forgets,flipping,flea,flatter,dwell,dumpster,choo,assignments,ants,vile,unreasonable,tossing,thanked,steals,souvenir,scratched,psychopath,outs,obstruction,obey,lump,insists,harass,gloat,filth,edgy,didn,coroner,confessing,bruise,betraying,bailing,appealing,adebisi,wrath,wandered,waist,vain,traps,stepfather,poking,obligated,heavenly,dilemma,crazed,contagious,coaster,cheering,bundle,vomit,thingy,speeches,robbing,raft,pumped,pillows,peep,packs,neglected,m'kay,loneliness,intrude,helluva,gardener,forresters,drooling,betcha,vase,supermarket,squat,spitting,rhyme,relieve,receipts,racket,pictured,pause,overdue,motivation,morgendorffer,kidnapper,insect,horns,feminine,eyeballs,dumps,disappointing,crock,convertible,claw,clamp,canned,cambias,bathtub,avanya,artery,weep,warmer,suspense,summoned,spiders,reiber,raving,pushy,postponed,ohhhh,noooo,mold,laughter,incompetent,hugging,groceries,drip,communicating,auntie,adios,wraps,wiser,willingly,weirdest,timmih,thinner,swelling,swat,steroids,sensitivity,scrape,rehearse,prophecy,ledge,justified,insults,hateful,handles,doorway,chatting,buyer,buckaroo,bedrooms,askin,ammo,tutoring,subpoena,scratching,privileges,pager,mart,intriguing,idiotic,grape,enlighten,corrupt,brunch,bridesmaid,barking,applause,acquaintance,wretched,superficial,soak,smoothly,sensing,restraint,posing,pleading,payoff,oprah,nemo,morals,loaf,jumpy,ignorant,herbal,hangin,germs,generosity,flashing,doughnut,clumsy,chocolates,captive,behaved,apologise,vanity,stumbled,preview,poisonous,perjury,parental,onboard,mugged,minding,linen,knots,interviewing,humour,grind,greasy,goons,drastic,coop,comparing,cocky,clearer,bruised,brag,bind,worthwhile,whoop,vanquishing,tabloids,sprung,spotlight,sentencing,racist,provoke,pining,overly,locket,imply,impatient,hovering,hotter,fest,endure,dots,doren,debts,crawled,chained,brit,breaths,weirdo,warmed,wand,troubling,tok'ra,strapped,soaked,skipping,scrambled,rattle,profound,musta,mocking,misunderstand,limousine,kacl,hustle,forensic,enthusiastic,duct,drawers,devastating,conquer,clarify,chores,cheerleaders,cheaper,callin,blushing,barging,abused,yoga,wrecking,wits,waffles,virginity,vibes,uninvited,unfaithful,teller,strangled,scheming,ropes,rescuing,rave,postcard,o'reily,morphine,lotion,lads,kidneys,judgement,itch,indefinitely,grenade,glamorous,genetically,freud,discretion,delusions,crate,competent,bakery,argh,ahhhh,wedge,wager,unfit,tripping,torment,superhero,stirring,spinal,sorority,seminar,scenery,rabble,pneumonia,perks,override,ooooh,mija,manslaughter,mailed,lime,lettuce,intimidate,guarded,grieve,grad,frustration,doorbell,chinatown,authentic,arraignment,annulled,allergies,wanta,verify,vegetarian,tighter,telegram,stalk,spared,shoo,satisfying,saddam,requesting,pens,overprotective,obstacles,notified,nasedo,grandchild,genuinely,flushed,fluids,floss,escaping,ditched,cramp,corny,bunk,bitten,billions,bankrupt,yikes,wrists,ultrasound,ultimatum,thirst,sniff,shakes,salsa,retrieve,reassuring,pumps,neurotic,negotiating,needn't,monitors,millionaire,lydecker,limp,incriminating,hatchet,gracias,gordie,fills,feeds,doubting,decaf,biopsy,whiz,voluntarily,ventilator,unpack,unload,toad,spooked,snitch,schillinger,reassure,persuasive,mystical,mysteries,matrimony,mails,jock,headline,explanations,dispatch,curly,cupid,condolences,comrade,cassadines,bulb,bragging,awaits,assaulted,ambush,adolescent,abort,yank,whit,vaguely,undermine,tying,swamped,stabbing,slippers,slash,sincerely,sigh,setback,secondly,rotting,precaution,pcpd,melting,liaison,hots,hooking,headlines,haha,ganz,fury,felicity,fangs,encouragement,earring,dreidel,dory,donut,dictate,decorating,cocktails,bumps,blueberry,believable,backfired,backfire,apron,adjusting,vous,vouch,vitamins,ummm,tattoos,slimy,sibling,shhhh,renting,peculiar,parasite,paddington,marries,mailbox,magically,lovebirds,knocks,informant,exits,drazen,distractions,disconnected,dinosaurs,dashwood,crooked,conveniently,wink,warped,underestimated,tacky,shoving,seizure,reset,pushes,opener,mornings,mash,invent,indulge,horribly,hallucinating,festive,eyebrows,enjoys,desperation,dealers,darkest,daph,boragora,belts,bagel,authorization,auditions,agitated,wishful,wimp,vanish,unbearable,tonic,suffice,suction,slaying,safest,rocking,relive,puttin,prettiest,noisy,newlyweds,nauseous,misguided,mildly,midst,liable,judgmental,indy,hunted,givin,fascinated,elephants,dislike,deluded,decorate,crummy,contractions,carve,bottled,bonded,bahamas,unavailable,twenties,trustworthy,surgeons,stupidity,skies,remorse,preferably,pies,nausea,napkins,mule,mourn,melted,mashed,inherit,greatness,golly,excused,dumbo,drifting,delirious,damaging,cubicle,compelled,comm,chooses,checkup,boredom,bandages,alarms,windshield,who're,whaddya,transparent,surprisingly,sunglasses,slit,roar,reade,prognosis,probe,pitiful,persistent,peas,nosy,nagging,morons,masterpiece,martinis,limbo,liars,irritating,inclined,hump,hoynes,fiasco,eatin,cubans,concentrating,colorful,clam,cider,brochure,barto,bargaining,wiggle,welcoming,weighing,vanquished,stains,sooo,snacks,smear,sire,resentment,psychologist,pint,overhear,morality,landingham,kisser,hoot,holling,handshake,grilled,formality,elevators,depths,confirms,boathouse,accidental,westbridge,wacko,ulterior,thugs,thighs,tangled,stirred,snag,sling,sleaze,rumour,ripe,remarried,puddle,pins,perceptive,miraculous,longing,lockup,librarian,impressions,immoral,hypothetically,guarding,gourmet,gabe,faxed,extortion,downright,digest,cranberry,bygones,buzzing,burying,bikes,weary,taping,takeout,sweeping,stepmother,stale,senor,seaborn,pros,pepperoni,newborn,ludicrous,injected,geeks,forged,faults,drue,dire,dief,desi,deceiving,caterer,calmed,budge,ankles,vending,typing,tribbiani,there're,squared,snowing,shades,sexist,rewrite,regretted,raises,picky,orphan,mural,misjudged,miscarriage,memorize,leaking,jitters,invade,interruption,illegally,handicapped,glitch,gittes,finer,distraught,dispose,dishonest,digs,dads,cruelty,circling,canceling,butterflies,belongings,barbrady,amusement,alias,zombies,where've,unborn,swearing,stables,squeezed,sensational,resisting,radioactive,questionable,privileged,portofino,owning,overlook,orson,oddly,interrogate,imperative,impeccable,hurtful,hors,heap,graders,glance,disgust,devious,destruct,crazier,countdown,chump,cheeseburger,burglar,berries,ballroom,assumptions,annoyed,allergy,admirer,admirable,activate,underpants,twit,tack,strokes,stool,sham,scrap,retarded,resourceful,remarkably,refresh,pressured,precautions,pointy,nightclub,mustache,maui,lace,hunh,hubby,flare,dont,dokey,dangerously,crushing,clinging,choked,chem,cheerleading,checkbook,cashmere,calmly,blush,believer,amazingly,alas,what've,toilets,tacos,stairwell,spirited,sewing,rubbed,punches,protects,nuisance,motherfuckers,mingle,kynaston,knack,kinkle,impose,gullible,godmother,funniest,friggin,folding,fashions,eater,dysfunctional,drool,dripping,ditto,cruising,criticize,conceive,clone,cedars,caliber,brighter,blinded,birthdays,banquet,anticipate,annoy,whim,whichever,volatile,veto,vested,shroud,rests,reindeer,quarantine,pleases,painless,orphans,orphanage,offence,obliged,negotiation,narcotics,mistletoe,meddling,manifest,lookit,lilah,intrigued,injustice,homicidal,gigantic,exposing,elves,disturbance,disastrous,depended,demented,correction,cooped,cheerful,buyers,brownies,beverage,basics,arvin,weighs,upsets,unethical,swollen,sweaters,stupidest,sensation,scalpel,props,prescribed,pompous,objections,mushrooms,mulwray,manipulation,lured,internship,insignificant,inmate,incentive,fulfilled,disagreement,crypt,cornered,copied,brightest,beethoven,attendant,amaze,yogurt,wyndemere,vocabulary,tulsa,tactic,stuffy,respirator,pretends,polygraph,pennies,ordinarily,olives,necks,morally,martyr,leftovers,joints,hopping,homey,hints,heartbroken,forge,florist,firsthand,fiend,dandy,crippled,corrected,conniving,conditioner,clears,chemo,bubbly,bladder,beeper,baptism,wiring,wench,weaknesses,volunteering,violating,unlocked,tummy,surrogate,subid,stray,startle,specifics,slowing,scoot,robbers,rightful,richest,qfxmjrie,puffs,pierced,pencils,paralysis,makeover,luncheon,linksynergy,jerky,jacuzzi,hitched,hangover,fracture,flock,firemen,disgusted,darned,clams,borrowing,banged,wildest,weirder,unauthorized,stunts,sleeves,sixties,shush,shalt,retro,quits,pegged,painfully,paging,omelet,memorized,lawfully,jackets,intercept,ingredient,grownup,glued,fulfilling,enchanted,delusion,daring,compelling,carton,bridesmaids,bribed,boiling,bathrooms,bandage,awaiting,assign,arrogance,antiques,ainsley,turkeys,trashing,stockings,stalked,stabilized,skates,sedated,robes,respecting,psyche,presumptuous,prejudice,paragraph,mocha,mints,mating,mantan,lorne,loads,listener,itinerary,hepatitis,heave,guesses,fading,examining,dumbest,dishwasher,deceive,cunning,cripple,convictions,confided,compulsive,compromising,burglary,bumpy,brainwashed,benes,arnie,affirmative,adrenaline,adamant,watchin,waitresses,transgenic,toughest,tainted,surround,stormed,spree,spilling,spectacle,soaking,shreds,sewers,severed,scarce,scamming,scalp,rewind,rehearsing,pretentious,potions,overrated,obstacle,nerds,meems,mcmurphy,maternity,maneuver,loathe,fertility,eloping,ecstatic,ecstasy,divorcing,dignan,costing,clubhouse,clocks,candid,bursting,breather,braces,bending,arsonist,adored,absorb,valiant,uphold,unarmed,topolsky,thrilling,thigh,terminate,sustain,spaceship,snore,sneeze,smuggling,salty,quaint,patronize,patio,morbid,mamma,kettle,joyous,invincible,interpret,insecurities,impulses,illusions,holed,exploit,drivin,defenseless,dedicate,cradle,coupon,countless,conjure,cardboard,booking,backseat,accomplishment,wordsworth,wisely,valet,vaccine,urges,unnatural,unlucky,truths,traumatized,tasting,swears,strawberries,steaks,stats,skank,seducing,secretive,scumbag,screwdriver,schedules,rooting,rightfully,rattled,qualifies,puppets,prospects,pronto,posse,polling,pedestal,palms,muddy,morty,microscope,merci,lecturing,inject,incriminate,hygiene,grapefruit,gazebo,funnier,cuter,bossy,booby,aides,zende,winthrop,warrants,valentines,undressed,underage,truthfully,tampered,suffers,speechless,sparkling,sidelines,shrek,railing,puberty,pesky,outrage,outdoors,motions,moods,lunches,litter,kidnappers,itching,intuition,imitation,humility,hassling,gallons,drugstore,dosage,disrupt,dipping,deranged,debating,cuckoo,cremated,craziness,cooperating,circumstantial,chimney,blinking,biscuits,admiring,weeping,triad,trashy,soothing,slumber,slayers,skirts,siren,shindig,sentiment,rosco,riddance,quaid,purity,proceeding,pretzels,panicking,mckechnie,lovin,leaked,intruding,impersonating,ignorance,hamburgers,footprints,fluke,fleas,festivities,fences,feisty,evacuate,emergencies,deceived,creeping,craziest,corpses,conned,coincidences,bounced,bodyguards,blasted,bitterness,baloney,ashtray,apocalypse,zillion,watergate,wallpaper,telesave,sympathize,sweeter,startin,spades,sodas,snowed,sleepover,signor,seein,retainer,restroom,rested,repercussions,reliving,reconcile,prevail,preaching,overreact,o'neil,noose,moustache,manicure,maids,landlady,hypothetical,hopped,homesick,hives,hesitation,herbs,hectic,heartbreak,haunting,gangs,frown,fingerprint,exhausting,everytime,disregard,cling,chevron,chaperone,blinding,bitty,beads,battling,badgering,anticipation,upstanding,unprofessional,unhealthy,turmoil,truthful,toothpaste,tippin,thoughtless,tagataya,shooters,senseless,rewarding,propane,preposterous,pigeons,pastry,overhearing,obscene,negotiable,loner,jogging,itchy,insinuating,insides,hospitality,hormone,hearst,forthcoming,fists,fifties,etiquette,endings,destroys,despises,deprived,cuddy,crust,cloak,circumstance,chewed,casserole,bidder,bearer,artoo,applaud,appalling,vowed,virgins,vigilante,undone,throttle,testosterone,tailor,symptom,swoop,suitcases,stomp,sticker,stakeout,spoiling,snatched,smoochy,smitten,shameless,restraints,researching,renew,refund,reclaim,raoul,puzzles,purposely,punks,prosecuted,plaid,picturing,pickin,parasites,mysteriously,multiply,mascara,jukebox,interruptions,gunfire,furnace,elbows,duplicate,drapes,deliberate,decoy,cryptic,coupla,condemn,complicate,colossal,clerks,clarity,brushed,banished,argon,alarmed,worships,versa,uncanny,technicality,sundae,stumble,stripping,shuts,schmuck,satin,saliva,robber,relentless,reconnect,recipes,rearrange,rainy,psychiatrists,policemen,plunge,plugged,patched,overload,o'malley,mindless,menus,lullaby,lotte,leavin,killin,karinsky,invalid,hides,grownups,griff,flaws,flashy,flaming,fettes,evicted,dread,degrassi,dealings,dangers,cushion,bowel,barged,abide,abandoning,wonderfully,wait'll,violate,suicidal,stayin,sorted,slamming,sketchy,shoplifting,raiser,quizmaster,prefers,needless,motherhood,momentarily,migraine,lifts,leukemia,leftover,keepin,hinks,hellhole,gowns,goodies,gallon,futures,entertained,eighties,conspiring,cheery,benign,apiece,adjustments,abusive,abduction,wiping,whipping,welles,unspeakable,unidentified,trivial,transcripts,textbook,supervise,superstitious,stricken,stimulating,spielberg,slices,shelves,scratches,sabotaged,retrieval,repressed,rejecting,quickie,ponies,peeking,outraged,o'connell,moping,moaning,mausoleum,licked,kovich,klutz,interrogating,interfered,insulin,infested,incompetence,hyper,horrified,handedly,gekko,fraid,fractured,examiner,eloped,disoriented,dashing,crashdown,courier,cockroach,chipped,brushing,bombed,bolts,baths,baptized,astronaut,assurance,anemia,abuela,abiding,withholding,weave,wearin,weaker,suffocating,straws,straightforward,stench,steamed,starboard,sideways,shrinks,shortcut,scram,roasted,roaming,riviera,respectfully,repulsive,psychiatry,provoked,penitentiary,painkillers,ninotchka,mitzvah,milligrams,midge,marshmallows,looky,lapse,kubelik,intellect,improvise,implant,goa'ulds,giddy,geniuses,fruitcake,footing,fightin,drinkin,doork,detour,cuddle,crashes,combo,colonnade,cheats,cetera,bailiff,auditioning,assed,amused,alienate,aiding,aching,unwanted,topless,tongues,tiniest,superiors,soften,sheldrake,rawley,raisins,presses,plaster,nessa,narrowed,minions,merciful,lawsuits,intimidating,infirmary,inconvenient,imposter,hugged,honoring,holdin,hades,godforsaken,fumes,forgery,foolproof,folder,flattery,fingertips,exterminator,explodes,eccentric,dodging,disguised,crave,constructive,concealed,compartment,chute,chinpokomon,bodily,astronauts,alimony,accustomed,abdominal,wrinkle,wallow,valium,untrue,uncover,trembling,treasures,torched,toenails,timed,termites,telly,taunting,taransky,talker,succubus,smarts,sliding,sighting,semen,seizures,scarred,savvy,sauna,saddest,sacrificing,rubbish,riled,ratted,rationally,provenance,phonse,perky,pedal,overdose,nasal,nanites,mushy,movers,missus,midterm,merits,melodramatic,manure,knitting,invading,interpol,incapacitated,hotline,hauling,gunpoint,grail,ganza,framing,flannel,faded,eavesdrop,desserts,calories,breathtaking,bleak,blacked,batter,aggravated,yanked,wigand,whoah,unwind,undoubtedly,unattractive,twitch,trimester,torrance,timetable,taxpayers,strained,stared,slapping,sincerity,siding,shenanigans,shacking,sappy,samaritan,poorer,politely,paste,oysters,overruled,nightcap,mosquito,millimeter,merrier,manhood,lucked,kilos,ignition,hauled,harmed,goodwill,freshmen,fenmore,fasten,farce,exploding,erratic,drunks,ditching,d'artagnan,cramped,contacting,closets,clientele,chimp,bargained,arranging,anesthesia,amuse,altering,afternoons,accountable,abetting,wolek,waved,uneasy,toddy,tattooed,spauldings,sliced,sirens,schibetta,scatter,rinse,remedy,redemption,pleasures,optimism,oblige,mmmmm,masked,malicious,mailing,kosher,kiddies,judas,isolate,insecurity,incidentally,heals,headlights,growl,grilling,glazed,flunk,floats,fiery,fairness,exercising,excellency,disclosure,cupboard,counterfeit,condescending,conclusive,clicked,cleans,cholesterol,cashed,broccoli,brats,blueprints,blindfold,billing,attach,appalled,alrighty,wynant,unsolved,unreliable,toots,tighten,sweatshirt,steinbrenner,steamy,spouse,sonogram,slots,sleepless,shines,retaliate,rephrase,redeem,rambling,quilt,quarrel,prying,proverbial,priced,prescribe,prepped,pranks,possessive,plaintiff,pediatrics,overlooked,outcast,nightgown,mumbo,mediocre,mademoiselle,lunchtime,lifesaver,leaned,lambs,interns,hounding,hellmouth,hahaha,goner,ghoul,gardening,frenzy,foyer,extras,exaggerate,everlasting,enlightened,dialed,devote,deceitful,d'oeuvres,cosmetic,contaminated,conspired,conning,cavern,carving,butting,boiled,blurry,babysit,ascension,aaaaah,wildly,whoopee,whiny,weiskopf,walkie,vultures,vacations,upfront,unresolved,tampering,stockholders,snaps,sleepwalking,shrunk,sermon,seduction,scams,revolve,phenomenal,patrolling,paranormal,ounces,omigod,nightfall,lashing,innocents,infierno,incision,humming,haunts,gloss,gloating,frannie,fetal,feeny,entrapment,discomfort,detonator,dependable,concede,complication,commotion,commence,chulak,caucasian,casually,brainer,bolie,ballpark,anwar,analyzing,accommodations,youse,wring,wallowing,transgenics,thrive,tedious,stylish,strippers,sterile,squeezing,squeaky,sprained,solemn,snoring,shattering,shabby,seams,scrawny,revoked,residue,reeks,recite,ranting,quoting,predicament,plugs,pinpoint,petrified,pathological,passports,oughtta,nighter,navigate,kippie,intrigue,intentional,insufferable,hunky,how've,horrifying,hearty,hamptons,grazie,funerals,forks,fetched,excruciating,enjoyable,endanger,dumber,drying,diabolical,crossword,corry,comprehend,clipped,classmates,candlelight,brutally,brutality,boarded,bathrobe,authorize,assemble,aerobics,wholesome,whiff,vermin,trophies,trait,tragically,toying,testy,tasteful,stocked,spinach,sipping,sidetracked,scrubbing,scraping,sanctity,robberies,ridin,retribution,refrain,realities,radiant,protesting,projector,plutonium,payin,parting,o'reilly,nooooo,motherfucking,measly,manic,lalita,juggling,jerking,intro,inevitably,hypnosis,huddle,horrendous,hobbies,heartfelt,harlin,hairdresser,gonorrhea,fussing,furtwangler,fleeting,flawless,flashed,fetus,eulogy,distinctly,disrespectful,denies,crossbow,cregg,crabs,cowardly,contraction,contingency,confirming,condone,coffins,cleansing,cheesecake,certainty,cages,c'est,briefed,bravest,bosom,boils,binoculars,bachelorette,appetizer,ambushed,alerted,woozy,withhold,vulgar,utmost,unleashed,unholy,unhappiness,unconditional,typewriter,typed,twists,supermodel,subpoenaed,stringing,skeptical,schoolgirl,romantically,rocked,revoir,reopen,puncture,preach,polished,planetarium,penicillin,peacefully,nurturing,more'n,mmhmm,midgets,marklar,lodged,lifeline,jellyfish,infiltrate,hutch,horseback,heist,gents,frickin,freezes,forfeit,flakes,flair,fathered,eternally,epiphany,disgruntled,discouraged,delinquent,decipher,danvers,cubes,credible,coping,chills,cherished,catastrophe,bombshell,birthright,billionaire,ample,affections,admiration,abbotts,whatnot,watering,vinegar,unthinkable,unseen,unprepared,unorthodox,underhanded,uncool,timeless,thump,thermometer,theoretically,tapping,tagged,swung,stares,spiked,solves,smuggle,scarier,saucer,quitter,prudent,powdered,poked,pointers,peril,penetrate,penance,opium,nudge,nostrils,neurological,mockery,mobster,medically,loudly,insights,implicate,hypocritical,humanly,holiness,healthier,hammered,haldeman,gunman,gloom,freshly,francs,flunked,flawed,emptiness,drugging,dozer,derevko,deprive,deodorant,cryin,crocodile,coloring,colder,cognac,clocked,clippings,charades,chanting,certifiable,caterers,brute,brochures,botched,blinders,bitchin,banter,woken,ulcer,tread,thankfully,swine,swimsuit,swans,stressing,steaming,stamped,stabilize,squirm,snooze,shuffle,shredded,seafood,scratchy,savor,sadistic,rhetorical,revlon,realist,prosecuting,prophecies,polyester,petals,persuasion,paddles,o'leary,nuthin,neighbour,negroes,muster,meningitis,matron,lockers,letterman,legged,indictment,hypnotized,housekeeping,hopelessly,hallucinations,grader,goldilocks,girly,flask,envelopes,downside,doves,dissolve,discourage,disapprove,diabetic,deliveries,decorator,crossfire,criminally,containment,comrades,complimentary,chatter,catchy,cashier,cartel,caribou,cardiologist,brawl,booted,barbershop,aryan,angst,administer,zellie,wreak,whistles,vandalism,vamps,uterus,upstate,unstoppable,understudy,tristin,transcript,tranquilizer,toxins,tonsils,stempel,spotting,spectator,spatula,softer,snotty,slinging,showered,sexiest,sensual,sadder,rimbaud,restrain,resilient,remission,reinstate,rehash,recollection,rabies,popsicle,plausible,pediatric,patronizing,ostrich,ortolani,oooooh,omelette,mistrial,marseilles,loophole,laughin,kevvy,irritated,infidelity,hypothermia,horrific,groupie,grinding,graceful,goodspeed,gestures,frantic,extradition,echelon,disks,dawnie,dared,damsel,curled,collateral,collage,chant,calculating,bumping,bribes,boardwalk,blinds,blindly,bleeds,bickering,beasts,backside,avenge,apprehended,anguish,abusing,youthful,yells,yanking,whomever,when'd,vomiting,vengeful,unpacking,unfamiliar,undying,tumble,trolls,treacherous,tipping,tantrum,tanked,summons,straps,stomped,stinkin,stings,staked,squirrels,sprinkles,speculate,sorting,skinned,sicko,sicker,shootin,shatter,seeya,schnapps,s'posed,ronee,respectful,regroup,regretting,reeling,reckoned,ramifications,puddy,projections,preschool,plissken,platonic,permalash,outdone,outburst,mutants,mugging,misfortune,miserably,miraculously,medications,margaritas,manpower,lovemaking,logically,leeches,latrine,kneel,inflict,impostor,hypocrisy,hippies,heterosexual,heightened,hecuba,healer,gunned,grooming,groin,gooey,gloomy,frying,friendships,fredo,firepower,fathom,exhaustion,evils,endeavor,eggnog,dreaded,d'arcy,crotch,coughing,coronary,cookin,consummate,congrats,companionship,caved,caspar,bulletproof,brilliance,breakin,brash,blasting,aloud,airtight,advising,advertise,adultery,aches,wronged,upbeat,trillion,thingies,tending,tarts,surreal,specs,specialize,spade,shrew,shaping,selves,schoolwork,roomie,recuperating,rabid,quart,provocative,proudly,pretenses,prenatal,pharmaceuticals,pacing,overworked,originals,nicotine,murderous,mileage,mayonnaise,massages,losin,interrogated,injunction,impartial,homing,heartbreaker,hacks,glands,giver,fraizh,flips,flaunt,englishman,electrocuted,dusting,ducking,drifted,donating,cylon,crutches,crates,cowards,comfortably,chummy,chitchat,childbirth,businesswoman,brood,blatant,bethy,barring,bagged,awakened,asbestos,airplanes,worshipped,winnings,why're,visualize,unprotected,unleash,trays,thicker,therapists,takeoff,streisand,storeroom,stethoscope,stacked,spiteful,sneaks,snapping,slaughtered,slashed,simplest,silverware,shits,secluded,scruples,scrubs,scraps,ruptured,roaring,receptionist,recap,raditch,radiator,pushover,plastered,pharmacist,perverse,perpetrator,ornament,ointment,nineties,napping,nannies,mousse,moors,momentary,misunderstandings,manipulator,malfunction,laced,kivar,kickin,infuriating,impressionable,holdup,hires,hesitated,headphones,hammering,groundwork,grotesque,graces,gauze,gangsters,frivolous,freeing,fours,forwarding,ferrars,faulty,fantasizing,extracurricular,empathy,divorces,detonate,depraved,demeaning,deadlines,dalai,cursing,cufflink,crows,coupons,comforted,claustrophobic,casinos,camped,busboy,bluth,bennetts,baskets,attacker,aplastic,angrier,affectionate,zapped,wormhole,weaken,unrealistic,unravel,unimportant,unforgettable,twain,suspend,superbowl,stutter,stewardess,stepson,standin,spandex,souvenirs,sociopath,skeletons,shivering,sexier,selfishness,scrapbook,ritalin,ribbons,reunite,remarry,relaxation,rattling,rapist,psychosis,prepping,poses,pleasing,pisses,piling,persecuted,padded,operatives,negotiator,natty,menopause,mennihan,martimmys,loyalties,laynie,lando,justifies,intimately,inexperienced,impotent,immortality,horrors,hooky,hinges,heartbreaking,handcuffed,gypsies,guacamole,grovel,graziella,goggles,gestapo,fussy,ferragamo,feeble,eyesight,explosions,experimenting,enchanting,doubtful,dizziness,dismantle,detectors,deserving,defective,dangling,dancin,crumble,creamed,cramping,conceal,clockwork,chrissakes,chrissake,chopping,cabinets,brooding,bonfire,blurt,bloated,blackmailer,beforehand,bathed,bathe,barcode,banish,badges,babble,await,attentive,aroused,antibodies,animosity,ya'll,wrinkled,wonderland,willed,whisk,waltzing,waitressing,vigilant,upbringing,unselfish,uncles,trendy,trajectory,striped,stamina,stalled,staking,stacks,spoils,snuff,snooty,snide,shrinking,senora,secretaries,scoundrel,saline,salads,rundown,riddles,relapse,recommending,raspberry,plight,pecan,pantry,overslept,ornaments,niner,negligent,negligence,nailing,mucho,mouthed,monstrous,malpractice,lowly,loitering,logged,lingering,lettin,lattes,kamal,juror,jillefsky,jacked,irritate,intrusion,insatiable,infect,impromptu,icing,hmmmm,hefty,gasket,frightens,flapping,firstborn,faucet,estranged,envious,dopey,doesn,disposition,disposable,disappointments,dipped,dignified,deceit,dealership,deadbeat,curses,coven,counselors,concierge,clutches,casbah,callous,cahoots,brotherly,britches,brides,bethie,beige,autographed,attendants,attaboy,astonishing,appreciative,antibiotic,aneurysm,afterlife,affidavit,zoning,whats,whaddaya,vasectomy,unsuspecting,toula,topanga,tonio,toasted,tiring,terrorized,tenderness,tailing,sweats,suffocated,sucky,subconsciously,starvin,sprouts,spineless,sorrows,snowstorm,smirk,slicery,sledding,slander,simmer,signora,sigmund,seventies,sedate,scented,sandals,rollers,retraction,resigning,recuperate,receptive,racketeering,queasy,provoking,priors,prerogative,premed,pinched,pendant,outsiders,orbing,opportunist,olanov,neurologist,nanobot,mommies,molested,misread,mannered,laundromat,intercom,inspect,insanely,infatuation,indulgent,indiscretion,inconsiderate,hurrah,howling,herpes,hasta,harassed,hanukkah,groveling,groosalug,gander,galactica,futile,fridays,flier,fixes,exploiting,exorcism,evasive,endorse,emptied,dreary,dreamy,downloaded,dodged,doctored,disobeyed,disneyland,disable,dehydrated,contemplating,coconuts,cockroaches,clogged,chilling,chaperon,cameraman,bulbs,bucklands,bribing,brava,bracelets,bowels,bluepoint,appetizers,appendix,antics,anointed,analogy,almonds,yammering,winch,weirdness,wangler,vibrations,vendor,unmarked,unannounced,twerp,trespass,travesty,transfusion,trainee,towelie,tiresome,straightening,staggering,sonar,socializing,sinus,sinners,shambles,serene,scraped,scones,scepter,sarris,saberhagen,ridiculously,ridicule,rents,reconciled,radios,publicist,pubes,prune,prude,precrime,postponing,pluck,perish,peppermint,peeled,overdo,nutshell,nostalgic,mulan,mouthing,mistook,meddle,maybourne,martimmy,lobotomy,livelihood,lippman,likeness,kindest,kaffee,jocks,jerked,jeopardizing,jazzed,insured,inquisition,inhale,ingenious,holier,helmets,heirloom,heinous,haste,harmsway,hardship,hanky,gutters,gruesome,groping,goofing,godson,glare,finesse,figuratively,ferrie,endangerment,dreading,dozed,dorky,dmitri,divert,discredit,dialing,cufflinks,crutch,craps,corrupted,cocoon,cleavage,cannery,bystander,brushes,bruising,bribery,brainstorm,bolted,binge,ballistics,astute,arroway,adventurous,adoptive,addicts,addictive,yadda,whitelighters,wematanye,weeds,wedlock,wallets,vulnerability,vroom,vents,upped,unsettling,unharmed,trippin,trifle,tracing,tormenting,thats,syphilis,subtext,stickin,spices,sores,smacked,slumming,sinks,signore,shitting,shameful,shacked,septic,seedy,righteousness,relish,rectify,ravishing,quickest,phoebs,perverted,peeing,pedicure,pastrami,passionately,ozone,outnumbered,oregano,offender,nukes,nosed,nighty,nifty,mounties,motivate,moons,misinterpreted,mercenary,mentality,marsellus,lupus,lumbar,lovesick,lobsters,leaky,laundering,latch,jafar,instinctively,inspires,indoors,incarcerated,hundredth,handkerchief,gynecologist,guittierez,groundhog,grinning,goodbyes,geese,fullest,eyelashes,eyelash,enquirer,endlessly,elusive,disarm,detest,deluding,dangle,cotillion,corsage,conjugal,confessional,cones,commandment,coded,coals,chuckle,christmastime,cheeseburgers,chardonnay,celery,campfire,calming,burritos,brundle,broflovski,brighten,borderline,blinked,bling,beauties,bauers,battered,articulate,alienated,ahhhhh,agamemnon,accountants,y'see,wrongful,wrapper,workaholic,winnebago,whispered,warts,vacate,unworthy,unanswered,tonane,tolerated,throwin,throbbing,thrills,thorns,thereof,there've,tarot,sunscreen,stretcher,stereotype,soggy,sobbing,sizable,sightings,shucks,shrapnel,sever,senile,seaboard,scorned,saver,rebellious,rained,putty,prenup,pores,pinching,pertinent,peeping,paints,ovulating,opposites,occult,nutcracker,nutcase,newsstand,newfound,mocked,midterms,marshmallow,marbury,maclaren,leans,krudski,knowingly,keycard,junkies,juilliard,jolinar,irritable,invaluable,inuit,intoxicating,instruct,insolent,inexcusable,incubator,illustrious,hunsecker,houseguest,homosexuals,homeroom,hernia,harming,handgun,hallways,hallucination,gunshots,groupies,groggy,goiter,gingerbread,giggling,frigging,fledged,fedex,fairies,exchanging,exaggeration,esteemed,enlist,drags,dispense,disloyal,disconnect,desks,dentists,delacroix,degenerate,daydreaming,cushions,cuddly,corroborate,complexion,compensated,cobbler,closeness,chilled,checkmate,channing,carousel,calms,bylaws,benefactor,ballgame,baiting,backstabbing,artifact,airspace,adversary,actin,accuses,accelerant,abundantly,abstinence,zissou,zandt,yapping,witchy,willows,whadaya,vilandra,veiled,undress,undivided,underestimating,ultimatums,twirl,truckload,tremble,toasting,tingling,tents,tempered,sulking,stunk,sponges,spills,softly,snipers,scourge,rooftop,riana,revolting,revisit,refreshments,redecorating,recapture,raysy,pretense,prejudiced,precogs,pouting,poofs,pimple,piles,pediatrician,padre,packets,paces,orvelle,oblivious,objectivity,nighttime,nervosa,mexicans,meurice,melts,matchmaker,maeby,lugosi,lipnik,leprechaun,kissy,kafka,introductions,intestines,inspirational,insightful,inseparable,injections,inadvertently,hussy,huckabees,hittin,hemorrhaging,headin,haystack,hallowed,grudges,granilith,grandkids,grading,gracefully,godsend,gobbles,fragrance,fliers,finchley,farts,eyewitnesses,expendable,existential,dorms,delaying,degrading,deduction,darlings,danes,cylons,counsellor,contraire,consciously,conjuring,congratulating,cokes,buffay,brooch,bitching,bistro,bijou,bewitched,benevolent,bends,bearings,barren,aptitude,amish,amazes,abomination,worldly,whispers,whadda,wayward,wailing,vanishing,upscale,untouchable,unspoken,uncontrollable,unavoidable,unattended,trite,transvestite,toupee,timid,timers,terrorizing,swana,stumped,strolling,storybook,storming,stomachs,stoked,stationery,springtime,spontaneity,spits,spins,soaps,sentiments,scramble,scone,rooftops,retract,reflexes,rawdon,ragged,quirky,quantico,psychologically,prodigal,pounce,potty,pleasantries,pints,petting,perceive,onstage,notwithstanding,nibble,newmans,neutralize,mutilated,millionaires,mayflower,masquerade,mangy,macreedy,lunatics,lovable,locating,limping,lasagna,kwang,keepers,juvie,jaded,ironing,intuitive,intensely,insure,incantation,hysteria,hypnotize,humping,happenin,griet,grasping,glorified,ganging,g'night,focker,flunking,flimsy,flaunting,fixated,fitzwallace,fainting,eyebrow,exonerated,ether,electrician,egotistical,earthly,dusted,dignify,detonation,debrief,dazzling,dan'l,damnedest,daisies,crushes,crucify,contraband,confronting,collapsing,cocked,clicks,cliche,circled,chandelier,carburetor,callers,broads,breathes,bloodshed,blindsided,blabbing,bialystock,bashing,ballerina,aviva,arteries,anomaly,airstrip,agonizing,adjourn,aaaaa,yearning,wrecker,witnessing,whence,warhead,unsure,unheard,unfreeze,unfold,unbalanced,ugliest,troublemaker,toddler,tiptoe,threesome,thirties,thermostat,swipe,surgically,subtlety,stung,stumbling,stubs,stride,strangling,sprayed,socket,smuggled,showering,shhhhh,sabotaging,rumson,rounding,risotto,repairman,rehearsed,ratty,ragging,radiology,racquetball,racking,quieter,quicksand,prowl,prompt,premeditated,prematurely,prancing,porcupine,plated,pinocchio,peeked,peddle,panting,overweight,overrun,outing,outgrown,obsess,nursed,nodding,negativity,negatives,musketeers,mugger,motorcade,merrily,matured,masquerading,marvellous,maniacs,lovey,louse,linger,lilies,lawful,kudos,knuckle,juices,judgments,itches,intolerable,intermission,inept,incarceration,implication,imaginative,huckleberry,holster,heartburn,gunna,groomed,graciously,fulfillment,fugitives,forsaking,forgives,foreseeable,flavors,flares,fixation,fickle,fantasize,famished,fades,expiration,exclamation,erasing,eiffel,eerie,earful,duped,dulles,dissing,dissect,dispenser,dilated,detergent,desdemona,debriefing,damper,curing,crispina,crackpot,courting,cordial,conflicted,comprehension,commie,cleanup,chiropractor,charmer,chariot,cauldron,catatonic,bullied,buckets,brilliantly,breathed,booths,boardroom,blowout,blindness,blazing,biologically,bibles,biased,beseech,barbaric,balraj,audacity,anticipating,alcoholics,airhead,agendas,admittedly,absolution,youre,yippee,wittlesey,withheld,willful,whammy,weakest,washes,virtuous,videotapes,vials,unplugged,unpacked,unfairly,turbulence,tumbling,tricking,tremendously,traitors,torches,tinga,thyroid,teased,tawdry,taker,sympathies,swiped,sundaes,suave,strut,stepdad,spewing,spasm,socialize,slither,simulator,shutters,shrewd,shocks,semantics,schizophrenic,scans,savages,rya'c,runny,ruckus,royally,roadblocks,rewriting,revoke,repent,redecorate,recovers,recourse,ratched,ramali,racquet,quince,quiche,puppeteer,puking,puffed,problemo,praises,pouch,postcards,pooped,poised,piled,phoney,phobia,patching,parenthood,pardner,oozing,ohhhhh,numbing,nostril,nosey,neatly,nappa,nameless,mortuary,moronic,modesty,midwife,mcclane,matuka,maitre,lumps,lucid,loosened,loins,lawnmower,lamotta,kroehner,jinxy,jessep,jamming,jailhouse,jacking,intruders,inhuman,infatuated,indigestion,implore,implanted,hormonal,hoboken,hillbilly,heartwarming,headway,hatched,hartmans,harping,grapevine,gnome,forties,flyin,flirted,fingernail,exhilarating,enjoyment,embark,dumper,dubious,drell,docking,disillusioned,dishonor,disbarred,dicey,custodial,counterproductive,corned,cords,contemplate,concur,conceivable,cobblepot,chickened,checkout,carpe,cap'n,campers,buyin,bullies,braid,boxed,bouncy,blueberries,blubbering,bloodstream,bigamy,beeped,bearable,autographs,alarming,wretch,wimps,widower,whirlwind,whirl,warms,vandelay,unveiling,undoing,unbecoming,turnaround,touche,togetherness,tickles,ticker,teensy,taunt,sweethearts,stitched,standpoint,staffers,spotless,soothe,smothered,sickening,shouted,shepherds,shawl,seriousness,schooled,schoolboy,s'mores,roped,reminders,raggedy,preemptive,plucked,pheromones,particulars,pardoned,overpriced,overbearing,outrun,ohmigod,nosing,nicked,neanderthal,mosquitoes,mortified,milky,messin,mecha,markinson,marivellas,mannequin,manderley,madder,macready,lookie,locusts,lifetimes,lanna,lakhi,kholi,impersonate,hyperdrive,horrid,hopin,hogging,hearsay,harpy,harboring,hairdo,hafta,grasshopper,gobble,gatehouse,foosball,floozy,fished,firewood,finalize,felons,euphemism,entourage,elitist,elegance,drokken,drier,dredge,dossier,diseased,diarrhea,diagnose,despised,defuse,d'amour,contesting,conserve,conscientious,conjured,collars,clogs,chenille,chatty,chamomile,casing,calculator,brittle,breached,blurted,birthing,bikinis,astounding,assaulting,aroma,appliance,antsy,amnio,alienating,aliases,adolescence,xerox,wrongs,workload,willona,whistling,werewolves,wallaby,unwelcome,unseemly,unplug,undermining,ugliness,tyranny,tuesdays,trumpets,transference,ticks,tangible,tagging,swallowing,superheroes,studs,strep,stowed,stomping,steffy,sprain,spouting,sponsoring,sneezing,smeared,slink,shakin,sewed,seatbelt,scariest,scammed,sanctimonious,roasting,rightly,retinal,rethinking,resented,reruns,remover,racks,purest,progressing,presidente,preeclampsia,postponement,portals,poppa,pliers,pinning,pelvic,pampered,padding,overjoyed,ooooo,one'll,octavius,nonono,nicknames,neurosurgeon,narrows,misled,mislead,mishap,milltown,milking,meticulous,mediocrity,meatballs,machete,lurch,layin,knockin,khruschev,jurors,jumpin,jugular,jeweler,intellectually,inquiries,indulging,indestructible,indebted,imitate,ignores,hyperventilating,hyenas,hurrying,hermano,hellish,heheh,harshly,handout,grunemann,glances,giveaway,getup,gerome,furthest,frosting,frail,forwarded,forceful,flavored,flammable,flaky,fingered,fatherly,ethic,embezzlement,duffel,dotted,distressed,disobey,disappearances,dinky,diminish,diaphragm,deuces,creme,courteous,comforts,coerced,clots,clarification,chunks,chickie,chases,chaperoning,cartons,caper,calves,caged,bustin,bulging,bringin,boomhauer,blowin,blindfolded,biscotti,ballplayer,bagging,auster,assurances,aschen,arraigned,anonymity,alters,albatross,agreeable,adoring,abduct,wolfi,weirded,watchers,washroom,warheads,vincennes,urgency,understandably,uncomplicated,uhhhh,twitching,treadmill,thermos,tenorman,tangle,talkative,swarm,surrendering,summoning,strive,stilts,stickers,squashed,spraying,sparring,soaring,snort,sneezed,slaps,skanky,singin,sidle,shreck,shortness,shorthand,sharper,shamed,sadist,rydell,rusik,roulette,resumes,respiration,recount,reacts,purgatory,princesses,presentable,ponytail,plotted,pinot,pigtails,phillippe,peddling,paroled,orbed,offends,o'hara,moonlit,minefield,metaphors,malignant,mainframe,magicks,maggots,maclaine,loathing,leper,leaps,leaping,lashed,larch,larceny,lapses,ladyship,juncture,jiffy,jakov,invoke,infantile,inadmissible,horoscope,hinting,hideaway,hesitating,heddy,heckles,hairline,gripe,gratifying,governess,goebbels,freddo,foresee,fascination,exemplary,executioner,etcetera,escorts,endearing,eaters,earplugs,draped,disrupting,disagrees,dimes,devastate,detain,depositions,delicacy,darklighter,cynicism,cyanide,cutters,cronus,continuance,conquering,confiding,compartments,combing,cofell,clingy,cleanse,christmases,cheered,cheekbones,buttle,burdened,bruenell,broomstick,brained,bozos,bontecou,bluntman,blazes,blameless,bizarro,bellboy,beaucoup,barkeep,awaken,astray,assailant,appease,aphrodisiac,alleys,yesss,wrecks,woodpecker,wondrous,wimpy,willpower,wheeling,weepy,waxing,waive,videotaped,veritable,untouched,unlisted,unfounded,unforeseen,twinge,triggers,traipsing,toxin,tombstone,thumping,therein,testicles,telephones,tarmac,talby,tackled,swirling,suicides,suckered,subtitles,sturdy,strangler,stockbroker,stitching,steered,standup,squeal,sprinkler,spontaneously,splendor,spiking,spender,snipe,snagged,skimming,siddown,showroom,shovels,shotguns,shoelaces,shitload,shellfish,sharpest,shadowy,seizing,scrounge,scapegoat,sayonara,saddled,rummaging,roomful,renounce,reconsidered,recharge,realistically,radioed,quirks,quadrant,punctual,practising,pours,poolhouse,poltergeist,pocketbook,plainly,picnics,pesto,pawing,passageway,partied,oneself,numero,nostalgia,nitwit,neuro,mixer,meanest,mcbeal,matinee,margate,marce,manipulations,manhunt,manger,magicians,loafers,litvack,lightheaded,lifeguard,lawns,laughingstock,ingested,indignation,inconceivable,imposition,impersonal,imbecile,huddled,housewarming,horizons,homicides,hiccups,hearse,hardened,gushing,gushie,greased,goddamit,freelancer,forging,fondue,flustered,flung,flinch,flicker,fixin,festivus,fertilizer,farted,faggots,exonerate,evict,enormously,encrypted,emdash,embracing,duress,dupres,dowser,doormat,disfigured,disciplined,dibbs,depository,deathbed,dazzled,cuttin,cures,crowding,crepe,crammed,copycat,contradict,confidant,condemning,conceited,commute,comatose,clapping,circumference,chuppah,chore,choksondik,chestnuts,briault,bottomless,bonnet,blokes,berluti,beret,beggars,bankroll,bania,athos,arsenic,apperantly,ahhhhhh,afloat,accents,zipped,zeros,zeroes,zamir,yuppie,youngsters,yorkers,wisest,wipes,wield,whyn't,weirdos,wednesdays,vicksburg,upchuck,untraceable,unsupervised,unpleasantness,unhook,unconscionable,uncalled,trappings,tragedies,townie,thurgood,things'll,thine,tetanus,terrorize,temptations,tanning,tampons,swarming,straitjacket,steroid,startling,starry,squander,speculating,sollozzo,sneaked,slugs,skedaddle,sinker,silky,shortcomings,sellin,seasoned,scrubbed,screwup,scrapes,scarves,sandbox,salesmen,rooming,romances,revere,reproach,reprieve,rearranging,ravine,rationalize,raffle,punchy,psychobabble,provocation,profoundly,prescriptions,preferable,polishing,poached,pledges,pirelli,perverts,oversized,overdressed,outdid,nuptials,nefarious,mouthpiece,motels,mopping,mongrel,missin,metaphorically,mertin,memos,melodrama,melancholy,measles,meaner,mantel,maneuvering,mailroom,luring,listenin,lifeless,licks,levon,legwork,kneecaps,kippur,kiddie,kaput,justifiable,insistent,insidious,innuendo,innit,indecent,imaginable,horseshit,hemorrhoid,hella,healthiest,haywire,hamsters,hairbrush,grouchy,grisly,gratuitous,glutton,glimmer,gibberish,ghastly,gentler,generously,geeky,fuhrer,fronting,foolin,faxes,faceless,extinguisher,expel,etched,endangering,ducked,dodgeball,dives,dislocated,discrepancy,devour,derail,dementia,daycare,cynic,crumbling,cowardice,covet,cornwallis,corkscrew,cookbook,commandments,coincidental,cobwebs,clouded,clogging,clicking,clasp,chopsticks,chefs,chaps,cashing,carat,calmer,brazen,brainwashing,bradys,bowing,boned,bloodsucking,bleachers,bleached,bedpan,bearded,barrenger,bachelors,awwww,assures,assigning,asparagus,apprehend,anecdote,amoral,aggravation,afoot,acquaintances,accommodating,yakking,worshipping,wladek,willya,willies,wigged,whoosh,whisked,watered,warpath,volts,violates,valuables,uphill,unwise,untimely,unsavory,unresponsive,unpunished,unexplained,tubby,trolling,toxicology,tormented,toothache,tingly,timmiihh,thursdays,thoreau,terrifies,temperamental,telegrams,talkie,takers,symbiote,swirl,suffocate,stupider,strapping,steckler,springing,someway,sleepyhead,sledgehammer,slant,slams,showgirl,shoveling,shmoopy,sharkbait,shan't,scrambling,schematics,sandeman,sabbatical,rummy,reykjavik,revert,responsive,rescheduled,requisition,relinquish,rejoice,reckoning,recant,rebadow,reassurance,rattlesnake,ramble,primed,pricey,prance,pothole,pocus,persist,perpetrated,pekar,peeling,pastime,parmesan,pacemaker,overdrive,ominous,observant,nothings,noooooo,nonexistent,nodded,nieces,neglecting,nauseating,mutated,musket,mumbling,mowing,mouthful,mooseport,monologue,mistrust,meetin,masseuse,mantini,mailer,madre,lowlifes,locksmith,livid,liven,limos,liberating,lhasa,leniency,leering,laughable,lashes,lasagne,laceration,korben,katan,kalen,jittery,jammies,irreplaceable,intubate,intolerant,inhaler,inhaled,indifferent,indifference,impound,impolite,humbly,heroics,heigh,guillotine,guesthouse,grounding,grips,gossiping,goatee,gnomes,gellar,frutt,frobisher,freudian,foolishness,flagged,femme,fatso,fatherhood,fantasized,fairest,faintest,eyelids,extravagant,extraterrestrial,extraordinarily,escalator,elevate,drivel,dissed,dismal,disarray,dinnertime,devastation,dermatologist,delicately,defrost,debutante,debacle,damone,dainty,cuvee,culpa,crucified,creeped,crayons,courtship,convene,congresswoman,concocted,compromises,comprende,comma,coleslaw,clothed,clinically,chickenshit,checkin,cesspool,caskets,calzone,brothel,boomerang,bodega,blasphemy,bitsy,bicentennial,berlini,beatin,beards,barbas,barbarians,backpacking,arrhythmia,arousing,arbitrator,antagonize,angling,anesthetic,altercation,aggressor,adversity,acathla,aaahhh,wreaking,workup,wonderin,wither,wielding,what'm,what'cha,waxed,vibrating,veterinarian,venting,vasey,valor,validate,upholstery,untied,unscathed,uninterrupted,unforgiving,undies,uncut,twinkies,tucking,treatable,treasured,tranquility,townspeople,torso,tomei,tipsy,tinsel,tidings,thirtieth,tantrums,tamper,talky,swayed,swapping,suitor,stylist,stirs,standoff,sprinklers,sparkly,snobby,snatcher,smoother,sleepin,shrug,shoebox,sheesh,shackles,setbacks,sedatives,screeching,scorched,scanned,satyr,roadblock,riverbank,ridiculed,resentful,repellent,recreate,reconvene,rebuttal,realmedia,quizzes,questionnaire,punctured,pucker,prolong,professionalism,pleasantly,pigsty,penniless,paychecks,patiently,parading,overactive,ovaries,orderlies,oracles,oiled,offending,nudie,neonatal,neighborly,moops,moonlighting,mobilize,mmmmmm,milkshake,menial,meats,mayan,maxed,mangled,magua,lunacy,luckier,liters,lansbury,kooky,knowin,jeopardized,inkling,inhalation,inflated,infecting,incense,inbound,impractical,impenetrable,idealistic,i'mma,hypocrites,hurtin,humbled,hologram,hokey,hocus,hitchhiking,hemorrhoids,headhunter,hassled,harts,hardworking,haircuts,hacksaw,genitals,gazillion,gammy,gamesphere,fugue,footwear,folly,flashlights,fives,filet,extenuating,estrogen,entails,embezzled,eloquent,egomaniac,ducts,drowsy,drones,doree,donovon,disguises,diggin,deserting,depriving,defying,deductible,decorum,decked,daylights,daybreak,dashboard,damnation,cuddling,crunching,crickets,crazies,councilman,coughed,conundrum,complimented,cohaagen,clutching,clued,clader,cheques,checkpoint,chats,channeling,ceases,carasco,capisce,cantaloupe,cancelling,campsite,burglars,breakfasts,bra'tac,blueprint,bleedin,blabbed,beneficiary,basing,avert,atone,arlyn,approves,apothecary,antiseptic,aleikuum,advisement,zadir,wobbly,withnail,whattaya,whacking,wedged,wanders,vaginal,unimaginable,undeniable,unconditionally,uncharted,unbridled,tweezers,tvmegasite,trumped,triumphant,trimming,treading,tranquilizers,toontown,thunk,suture,suppressing,strays,stonewall,stogie,stepdaughter,stace,squint,spouses,splashed,speakin,sounder,sorrier,sorrel,sombrero,solemnly,softened,snobs,snippy,snare,smoothing,slump,slimeball,slaving,silently,shiller,shakedown,sensations,scrying,scrumptious,screamin,saucy,santoses,roundup,roughed,rosary,robechaux,retrospect,rescind,reprehensible,repel,remodeling,reconsidering,reciprocate,railroaded,psychics,promos,prob'ly,pristine,printout,priestess,prenuptial,precedes,pouty,phoning,peppy,pariah,parched,panes,overloaded,overdoing,nymphs,nother,notebooks,nearing,nearer,monstrosity,milady,mieke,mephesto,medicated,marshals,manilow,mammogram,m'lady,lotsa,loopy,lesion,lenient,learner,laszlo,kross,kinks,jinxed,involuntary,insubordination,ingrate,inflatable,incarnate,inane,hypoglycemia,huntin,humongous,hoodlum,honking,hemorrhage,helpin,hathor,hatching,grotto,grandmama,gorillas,godless,girlish,ghouls,gershwin,frosted,flutter,flagpole,fetching,fatter,faithfully,exert,evasion,escalate,enticing,enchantress,elopement,drills,downtime,downloading,dorks,doorways,divulge,dissociative,disgraceful,disconcerting,deteriorate,destinies,depressive,dented,denim,decruz,decidedly,deactivate,daydreams,curls,culprit,cruelest,crippling,cranberries,corvis,copped,commend,coastguard,cloning,cirque,churning,chock,chivalry,catalogues,cartwheels,carols,canister,buttered,bundt,buljanoff,bubbling,brokers,broaden,brimstone,brainless,bores,badmouthing,autopilot,ascertain,aorta,ampata,allenby,accosted,absolve,aborted,aaagh,aaaaaah,yonder,yellin,wyndham,wrongdoing,woodsboro,wigging,wasteland,warranty,waltzed,walnuts,vividly,veggie,unnecessarily,unloaded,unicorns,understated,unclean,umbrellas,twirling,turpentine,tupperware,triage,treehouse,tidbit,tickled,threes,thousandth,thingie,terminally,teething,tassel,talkies,swoon,switchboard,swerved,suspiciously,subsequentlyne,subscribe,strudel,stroking,strictest,stensland,starin,stannart,squirming,squealing,sorely,softie,snookums,sniveling,smidge,sloth,skulking,simian,sightseeing,siamese,shudder,shoppers,sharpen,shannen,semtex,secondhand,seance,scowl,scorn,safekeeping,russe,rummage,roshman,roomies,roaches,rinds,retrace,retires,resuscitate,rerun,reputations,rekall,refreshment,reenactment,recluse,ravioli,raves,raking,purses,punishable,punchline,puked,prosky,previews,poughkeepsie,poppins,polluted,placenta,pissy,petulant,perseverance,pears,pawns,pastries,partake,panky,palate,overzealous,orchids,obstructing,objectively,obituaries,obedient,nothingness,musty,motherly,mooning,momentous,mistaking,minutemen,milos,microchip,meself,merciless,menelaus,mazel,masturbate,mahogany,lysistrata,lillienfield,likable,liberate,leveled,letdown,larynx,lardass,lainey,lagged,klorel,kidnappings,keyed,karmic,jeebies,irate,invulnerable,intrusive,insemination,inquire,injecting,informative,informants,impure,impasse,imbalance,illiterate,hurled,hunts,hematoma,headstrong,handmade,handiwork,growling,gorky,getcha,gesundheit,gazing,galley,foolishly,fondness,floris,ferocious,feathered,fateful,fancies,fakes,faker,expire,ever'body,essentials,eskimos,enlightening,enchilada,emissary,embolism,elsinore,ecklie,drenched,drazi,doped,dogging,doable,dislikes,dishonesty,disengage,discouraging,derailed,deformed,deflect,defer,deactivated,crips,constellations,congressmen,complimenting,clubbing,clawing,chromium,chimes,chews,cheatin,chaste,cellblock,caving,catered,catacombs,calamari,bucking,brulee,brits,brisk,breezes,bounces,boudoir,binks,better'n,bellied,behrani,behaves,bedding,balmy,badmouth,backers,avenging,aromatherapy,armpit,armoire,anythin,anonymously,anniversaries,aftershave,affliction,adrift,admissible,adieu,acquittal,yucky,yearn,whitter,whirlpool,wendigo,watchdog,wannabes,wakey,vomited,voicemail,valedictorian,uttered,unwed,unrequited,unnoticed,unnerving,unkind,unjust,uniformed,unconfirmed,unadulterated,unaccounted,uglier,turnoff,trampled,tramell,toads,timbuktu,throwback,thimble,tasteless,tarantula,tamale,takeovers,swish,supposing,streaking,stargher,stanzi,stabs,squeamish,splattered,spiritually,spilt,speciality,smacking,skywire,skips,skaara,simpatico,shredding,showin,shortcuts,shite,shielding,shamelessly,serafine,sentimentality,seasick,schemer,scandalous,sainted,riedenschneider,rhyming,revel,retractor,retards,resurrect,remiss,reminiscing,remanded,reiben,regains,refuel,refresher,redoing,redheaded,reassured,rearranged,rapport,qumar,prowling,prejudices,precarious,powwow,pondering,plunger,plunged,pleasantville,playpen,phlegm,perfected,pancreas,paley,ovary,outbursts,oppressed,ooohhh,omoroca,offed,o'toole,nurture,nursemaid,nosebleed,necktie,muttering,munchies,mucking,mogul,mitosis,misdemeanor,miscarried,millionth,migraines,midler,manicurist,mandelbaum,manageable,malfunctioned,magnanimous,loudmouth,longed,lifestyles,liddy,lickety,leprechauns,komako,klute,kennel,justifying,irreversible,inventing,intergalactic,insinuate,inquiring,ingenuity,inconclusive,incessant,improv,impersonation,hyena,humperdinck,hubba,housework,hoffa,hither,hissy,hippy,hijacked,heparin,hellooo,hearth,hassles,hairstyle,hahahaha,hadda,guys'll,gutted,gulls,gritty,grievous,graft,gossamer,gooder,gambled,gadgets,fundamentals,frustrations,frolicking,frock,frilly,foreseen,footloose,fondly,flirtation,flinched,flatten,farthest,exposer,evading,escrow,empathize,embryos,embodiment,ellsberg,ebola,dulcinea,dreamin,drawbacks,doting,doose,doofy,disturbs,disorderly,disgusts,detox,denominator,demeanor,deliriously,decode,debauchery,croissant,cravings,cranked,coworkers,councilor,confuses,confiscate,confines,conduit,compress,combed,clouding,clamps,cinch,chinnery,celebratory,catalogs,carpenters,carnal,canin,bundys,bulldozer,buggers,bueller,brainy,booming,bookstores,bloodbath,bittersweet,bellhop,beeping,beanstalk,beady,baudelaire,bartenders,bargains,averted,armadillo,appreciating,appraised,antlers,aloof,allowances,alleyway,affleck,abject,zilch,youore,xanax,wrenching,wouldn,witted,wicca,whorehouse,whooo,whips,vouchers,victimized,vicodin,untested,unsolicited,unfocused,unfettered,unfeeling,unexplainable,understaffed,underbelly,tutorial,tryst,trampoline,towering,tirade,thieving,thang,swimmin,swayzak,suspecting,superstitions,stubbornness,streamers,strattman,stonewalling,stiffs,stacking,spout,splice,sonrisa,smarmy,slows,slicing,sisterly,shrill,shined,seeming,sedley,seatbelts,scour,scold,schoolyard,scarring,salieri,rustling,roxbury,rewire,revved,retriever,reputable,remodel,reins,reincarnation,rance,rafters,rackets,quail,pumbaa,proclaim,probing,privates,pried,prewedding,premeditation,posturing,posterity,pleasurable,pizzeria,pimps,penmanship,penchant,pelvis,overturn,overstepped,overcoat,ovens,outsmart,outed,ooohh,oncologist,omission,offhand,odour,nyazian,notarized,nobody'll,nightie,navel,nabbed,mystique,mover,mortician,morose,moratorium,mockingbird,mobsters,mingling,methinks,messengered,merde,masochist,martouf,martians,marinara,manray,majorly,magnifying,mackerel,lurid,lugging,lonnegan,loathsome,llantano,liberace,leprosy,latinos,lanterns,lamest,laferette,kraut,intestine,innocencia,inhibitions,ineffectual,indisposed,incurable,inconvenienced,inanimate,improbable,implode,hydrant,hustling,hustled,huevos,how'm,hooey,hoods,honcho,hinge,hijack,heimlich,hamunaptra,haladki,haiku,haggle,gutsy,grunting,grueling,gribbs,greevy,grandstanding,godparents,glows,glistening,gimmick,gaping,fraiser,formalities,foreigner,folders,foggy,fitty,fiends,fe'nos,favours,eyeing,extort,expedite,escalating,epinephrine,entitles,entice,eminence,eights,earthlings,eagerly,dunville,dugout,doublemeat,doling,dispensing,dispatcher,discoloration,diners,diddly,dictates,diazepam,derogatory,delights,defies,decoder,dealio,danson,cutthroat,crumbles,croissants,crematorium,craftsmanship,could'a,cordless,cools,conked,confine,concealing,complicates,communique,cockamamie,coasters,clobbered,clipping,clipboard,clemenza,cleanser,circumcision,chanukah,certainaly,cellmate,cancels,cadmium,buzzed,bumstead,bucko,browsing,broth,braver,boggling,bobbing,blurred,birkhead,benet,belvedere,bellies,begrudge,beckworth,banky,baldness,baggy,babysitters,aversion,astonished,assorted,appetites,angina,amiss,ambulances,alibis,airway,admires,adhesive,yoyou,xxxxxx,wreaked,wracking,woooo,wooing,wised,wilshire,wedgie,waging,violets,vincey,uplifting,untrustworthy,unmitigated,uneventful,undressing,underprivileged,unburden,umbilical,tweaking,turquoise,treachery,tosses,torching,toothpick,toasts,thickens,tereza,tenacious,teldar,taint,swill,sweatin,subtly,subdural,streep,stopwatch,stockholder,stillwater,stalkers,squished,squeegee,splinters,spliced,splat,spied,spackle,sophistication,snapshots,smite,sluggish,slithered,skeeters,sidewalks,sickly,shrugs,shrubbery,shrieking,shitless,settin,sentinels,selfishly,scarcely,sangria,sanctum,sahjhan,rustle,roving,rousing,rosomorf,riddled,responsibly,renoir,remoray,remedial,refundable,redirect,recheck,ravenwood,rationalizing,ramus,ramelle,quivering,pyjamas,psychos,provocations,prouder,protestors,prodded,proctologist,primordial,pricks,prickly,precedents,pentangeli,pathetically,parka,parakeet,panicky,overthruster,outsmarted,orthopedic,oncoming,offing,nutritious,nuthouse,nourishment,nibbling,newlywed,narcissist,mutilation,mundane,mummies,mumble,mowed,morvern,mortem,mopes,molasses,misplace,miscommunication,miney,midlife,menacing,memorizing,massaging,masking,magnets,luxuries,lounging,lothario,liposuction,lidocaine,libbets,levitate,leeway,launcelot,larek,lackeys,kumbaya,kryptonite,knapsack,keyhole,katarangura,juiced,jakey,ironclad,invoice,intertwined,interlude,interferes,injure,infernal,indeedy,incur,incorrigible,incantations,impediment,igloo,hysterectomy,hounded,hollering,hindsight,heebie,havesham,hasenfuss,hankering,hangers,hakuna,gutless,gusto,grubbing,grrrr,grazed,gratification,grandeur,gorak,godammit,gnawing,glanced,frostbite,frees,frazzled,fraulein,fraternizing,fortuneteller,formaldehyde,followup,foggiest,flunky,flickering,firecrackers,figger,fetuses,fates,eyeliner,extremities,extradited,expires,exceedingly,evaporate,erupt,epileptic,entrails,emporium,egregious,eggshells,easing,duwayne,droll,dreyfuss,dovey,doubly,doozy,donkeys,donde,distrust,distressing,disintegrate,discreetly,decapitated,dealin,deader,dashed,darkroom,dares,daddies,dabble,cushy,cupcakes,cuffed,croupier,croak,crapped,coursing,coolers,contaminate,consummated,construed,condos,concoction,compulsion,commish,coercion,clemency,clairvoyant,circulate,chesterton,checkered,charlatan,chaperones,categorically,cataracts,carano,capsules,capitalize,burdon,bullshitting,brewed,breathless,breasted,brainstorming,bossing,borealis,bonsoir,bobka,boast,blimp,bleep,bleeder,blackouts,bisque,billboards,beatings,bayberry,bashed,bamboozled,balding,baklava,baffled,backfires,babak,awkwardness,attest,attachments,apologizes,anyhoo,antiquated,alcante,advisable,aahhh,aaahh,zatarc,yearbooks,wuddya,wringing,womanhood,witless,winging,whatsa,wetting,waterproof,wastin,vogelman,vocation,vindicated,vigilance,vicariously,venza,vacuuming,utensils,uplink,unveil,unloved,unloading,uninhibited,unattached,tweaked,turnips,trinkets,toughen,toting,topside,terrors,terrify,technologically,tarnish,tagliati,szpilman,surly,supple,summation,suckin,stepmom,squeaking,splashmore,souffle,solitaire,solicitation,solarium,smokers,slugged,slobbering,skylight,skimpy,sinuses,silenced,sideburns,shrinkage,shoddy,shhhhhh,shelled,shareef,shangri,seuss,serenade,scuffle,scoff,scanners,sauerkraut,sardines,sarcophagus,salvy,rusted,russells,rowboat,rolfsky,ringside,respectability,reparations,renegotiate,reminisce,reimburse,regimen,raincoat,quibble,puzzled,purposefully,pubic,proofing,prescribing,prelim,poisons,poaching,personalized,personable,peroxide,pentonville,payphone,payoffs,paleontology,overflowing,oompa,oddest,objecting,o'hare,o'daniel,notches,nobody'd,nightstand,neutralized,nervousness,nerdy,needlessly,naquadah,nappy,nantucket,nambla,mountaineer,motherfuckin,morrie,monopolizing,mohel,mistreated,misreading,misbehave,miramax,minivan,milligram,milkshakes,metamorphosis,medics,mattresses,mathesar,matchbook,matata,marys,malucci,magilla,lymphoma,lowers,lordy,linens,lindenmeyer,limelight,leapt,laxative,lather,lapel,lamppost,laguardia,kindling,kegger,kawalsky,juries,jokin,jesminder,interning,innermost,injun,infallible,industrious,indulgence,incinerator,impossibility,impart,illuminate,iguanas,hypnotic,hyped,hospitable,hoses,homemaker,hirschmuller,helpers,headset,guardianship,guapo,grubby,granola,granddaddy,goren,goblet,gluttony,globes,giorno,getter,geritol,gassed,gaggle,foxhole,fouled,foretold,floorboards,flippers,flaked,fireflies,feedings,fashionably,farragut,fallback,facials,exterminate,excites,everything'll,evenin,ethically,ensue,enema,empath,eluded,eloquently,eject,edema,dumpling,droppings,dolled,distasteful,disputing,displeasure,disdain,deterrent,dehydration,defied,decomposing,dawned,dailies,custodian,crusts,crucifix,crowning,crier,crept,craze,crawls,couldn,correcting,corkmaster,copperfield,cooties,contraption,consumes,conspire,consenting,consented,conquers,congeniality,complains,communicator,commendable,collide,coladas,colada,clout,clooney,classifieds,clammy,civility,cirrhosis,chink,catskills,carvers,carpool,carelessness,cardio,carbs,capades,butabi,busmalis,burping,burdens,bunks,buncha,bulldozers,browse,brockovich,breakthroughs,bravado,boogety,blossoms,blooming,bloodsucker,blight,betterton,betrayer,belittle,beeps,bawling,barts,bartending,bankbooks,babish,atropine,assertive,armbrust,anyanka,annoyance,anemic,anago,airwaves,aimlessly,aaargh,aaand,yoghurt,writhing,workable,winking,winded,widen,whooping,whiter,whatya,wazoo,voila,virile,vests,vestibule,versed,vanishes,urkel,uproot,unwarranted,unscheduled,unparalleled,undergrad,tweedle,turtleneck,turban,trickery,transponder,toyed,townhouse,thyself,thunderstorm,thinning,thawed,tether,technicalities,tau'ri,tarnished,taffeta,tacked,systolic,swerve,sweepstakes,swabs,suspenders,superwoman,sunsets,succulent,subpoenas,stumper,stosh,stomachache,stewed,steppin,stepatech,stateside,spicoli,sparing,soulless,sonnets,sockets,snatching,smothering,slush,sloman,slashing,sitters,simpleton,sighs,sidra,sickens,shunned,shrunken,showbiz,shopped,shimmering,shagging,semblance,segue,sedation,scuzzlebutt,scumbags,screwin,scoundrels,scarsdale,scabs,saucers,saintly,saddened,runaways,runaround,rheya,resenting,rehashing,rehabilitated,regrettable,refreshed,redial,reconnecting,ravenous,raping,rafting,quandary,pylea,putrid,puffing,psychopathic,prunes,probate,prayin,pomegranate,plummeting,planing,plagues,pinata,pithy,perversion,personals,perched,peeps,peckish,pavarotti,pajama,packin,pacifier,overstepping,okama,obstetrician,nutso,nuance,normalcy,nonnegotiable,nomak,ninny,nines,nicey,newsflash,neutered,nether,negligee,necrosis,navigating,narcissistic,mylie,muses,momento,moisturizer,moderation,misinformed,misconception,minnifield,mikkos,methodical,mebbe,meager,maybes,matchmaking,masry,markovic,malakai,luzhin,lusting,lumberjack,loopholes,loaning,lightening,leotard,launder,lamaze,kubla,kneeling,kibosh,jumpsuit,joliet,jogger,janover,jakovasaurs,irreparable,innocently,inigo,infomercial,inexplicable,indispensable,impregnated,impossibly,imitating,hunches,hummus,houmfort,hothead,hostiles,hooves,hooligans,homos,homie,hisself,heyyy,hesitant,hangout,handsomest,handouts,hairless,gwennie,guzzling,guinevere,grungy,goading,glaring,gavel,gardino,gangrene,fruitful,friendlier,freckle,freakish,forthright,forearm,footnote,flops,fixer,firecracker,finito,figgered,fezzik,fastened,farfetched,fanciful,familiarize,faire,fahrenheit,extravaganza,exploratory,explanatory,everglades,eunuch,estas,escapade,erasers,emptying,embarassing,dweeb,dutiful,dumplings,dries,drafty,dollhouse,dismissing,disgraced,discrepancies,disbelief,disagreeing,digestion,didnt,deviled,deviated,demerol,delectable,decaying,decadent,dears,dateless,d'algout,cultivating,cryto,crumpled,crumbled,cronies,crease,craves,cozying,corduroy,congratulated,confidante,compressions,complicating,compadre,coerce,classier,chums,chumash,chivalrous,chinpoko,charred,chafing,celibacy,carted,carryin,carpeting,carotid,cannibals,candor,butterscotch,busts,busier,bullcrap,buggin,brookside,brodski,brassiere,brainwash,brainiac,botrelle,bonbon,boatload,blimey,blaring,blackness,bipartisan,bimbos,bigamist,biebe,biding,betrayals,bestow,bellerophon,bedpans,bassinet,basking,barzini,barnyard,barfed,backups,audited,asinine,asalaam,arouse,applejack,annoys,anchovies,ampule,alameida,aggravate,adage,accomplices,yokel,y'ever,wringer,witwer,withdrawals,windward,willfully,whorfin,whimsical,whimpering,weddin,weathered,warmest,wanton,volant,visceral,vindication,veggies,urinate,uproar,unwritten,unwrap,unsung,unsubstantiated,unspeakably,unscrupulous,unraveling,unquote,unqualified,unfulfilled,undetectable,underlined,unattainable,unappreciated,ummmm,ulcers,tylenol,tweak,turnin,tuatha,tropez,trellis,toppings,tootin,toodle,tinkering,thrives,thespis,theatrics,thatherton,tempers,tavington,tartar,tampon,swelled,sutures,sustenance,sunflowers,sublet,stubbins,strutting,strewn,stowaway,stoic,sternin,stabilizing,spiraling,spinster,speedometer,speakeasy,soooo,soiled,sneakin,smithereens,smelt,smacks,slaughterhouse,slacks,skids,sketching,skateboards,sizzling,sixes,sirree,simplistic,shouts,shorted,shoelace,sheeit,shards,shackled,sequestered,selmak,seduces,seclusion,seamstress,seabeas,scoops,scooped,scavenger,satch,s'more,rudeness,romancing,rioja,rifkin,rieper,revise,reunions,repugnant,replicating,repaid,renewing,relaxes,rekindle,regrettably,regenerate,reels,reciting,reappear,readin,ratting,rapes,rancher,rammed,rainstorm,railroading,queers,punxsutawney,punishes,pssst,prudy,proudest,protectors,procrastinating,proactive,priss,postmortem,pompoms,poise,pickings,perfectionist,peretti,people'll,pecking,patrolman,paralegal,paragraphs,paparazzi,pankot,pampering,overstep,overpower,outweigh,omnipotent,odious,nuwanda,nurtured,newsroom,neeson,needlepoint,necklaces,neato,muggers,muffler,mousy,mourned,mosey,mopey,mongolians,moldy,misinterpret,minibar,microfilm,mendola,mended,melissande,masturbating,masbath,manipulates,maimed,mailboxes,magnetism,m'lord,m'honey,lymph,lunge,lovelier,lefferts,leezak,ledgers,larraby,laloosh,kundun,kozinski,knockoff,kissin,kiosk,kennedys,kellman,karlo,kaleidoscope,jeffy,jaywalking,instructing,infraction,informer,infarction,impulsively,impressing,impersonated,impeach,idiocy,hyperbole,hurray,humped,huhuh,hsing,hordes,hoodlums,honky,hitchhiker,hideously,heaving,heathcliff,headgear,headboard,hazing,harem,handprint,hairspray,gutiurrez,goosebumps,gondola,glitches,gasping,frolic,freeways,frayed,fortitude,forgetful,forefathers,fonder,foiled,foaming,flossing,flailing,fitzgeralds,firehouse,finders,fiftieth,fellah,fawning,farquaad,faraway,fancied,extremists,exorcist,exhale,ethros,entrust,ennui,energized,encephalitis,embezzling,elster,elixir,electrolytes,duplex,dryers,drexl,dredging,drawback,don'ts,dobisch,divorcee,disrespected,disprove,disobeying,disinfectant,dingy,digress,dieting,dictating,devoured,devise,detonators,desist,deserter,derriere,deron,deceptive,debilitating,deathwok,daffodils,curtsy,cursory,cuppa,cumin,cronkite,cremation,credence,cranking,coverup,courted,countin,counselling,cornball,contentment,consensual,compost,cluett,cleverly,cleansed,cleanliness,chopec,chomp,chins,chime,cheswick,chessler,cheapest,chatted,cauliflower,catharsis,catchin,caress,camcorder,calorie,cackling,bystanders,buttoned,buttering,butted,buries,burgel,buffoon,brogna,bragged,boutros,bogeyman,blurting,blurb,blowup,bloodhound,blissful,birthmark,bigot,bestest,belted,belligerent,beggin,befall,beeswax,beatnik,beaming,barricade,baggoli,badness,awoke,artsy,artful,aroun,armpits,arming,annihilate,anise,angiogram,anaesthetic,amorous,ambiance,alligators,adoration,admittance,adama,abydos,zonked,zhivago,yorkin,wrongfully,writin,wrappers,worrywart,woops,wonderfalls,womanly,wickedness,whoopie,wholeheartedly,whimper,which'll,wheelchairs,what'ya,warranted,wallop,wading,wacked,virginal,vermouth,vermeil,verger,ventriss,veneer,vampira,utero,ushers,urgently,untoward,unshakable,unsettled,unruly,unlocks,ungodly,undue,uncooperative,uncontrollably,unbeatable,twitchy,tumbler,truest,triumphs,triplicate,tribbey,tortures,tongaree,tightening,thorazine,theres,testifies,teenaged,tearful,taxing,taldor,syllabus,swoops,swingin,suspending,sunburn,stuttering,stupor,strides,strategize,strangulation,stooped,stipulation,stingy,stapled,squeaks,squawking,spoilsport,splicing,spiel,spencers,spasms,spaniard,softener,sodding,soapbox,smoldering,smithbauer,skittish,sifting,sickest,sicilians,shuffling,shrivel,segretti,seeping,securely,scurrying,scrunch,scrote,screwups,schenkman,sawing,savin,satine,sapiens,salvaging,salmonella,sacrilege,rumpus,ruffle,roughing,rotted,rondall,ridding,rickshaw,rialto,rhinestone,restrooms,reroute,requisite,repress,rednecks,redeeming,rayed,ravell,raked,raincheck,raffi,racked,pushin,profess,prodding,procure,presuming,preppy,prednisone,potted,posttraumatic,poorhouse,podiatrist,plowed,pledging,playroom,plait,placate,pinback,picketing,photographing,pharoah,petrak,petal,persecuting,perchance,pellets,peeved,peerless,payable,pauses,pathologist,pagliacci,overwrought,overreaction,overqualified,overheated,outcasts,otherworldly,opinionated,oodles,oftentimes,occured,obstinate,nutritionist,numbness,nubile,nooooooo,nobodies,nepotism,neanderthals,mushu,mucus,mothering,mothballs,monogrammed,molesting,misspoke,misspelled,misconstrued,miscalculated,minimums,mince,mildew,mighta,middleman,mementos,mellowed,mayol,mauled,massaged,marmalade,mardi,makings,lundegaard,lovingly,loudest,lotto,loosing,loompa,looming,longs,loathes,littlest,littering,lifelike,legalities,laundered,lapdog,lacerations,kopalski,knobs,knitted,kittridge,kidnaps,kerosene,karras,jungles,jockeys,iranoff,invoices,invigorating,insolence,insincere,insectopia,inhumane,inhaling,ingrates,infestation,individuality,indeterminate,incomprehensible,inadequacy,impropriety,importer,imaginations,illuminating,ignite,hysterics,hypodermic,hyperventilate,hyperactive,humoring,honeymooning,honed,hoist,hoarding,hitching,hiker,hightail,hemoglobin,hell'd,heinie,growin,grasped,grandparent,granddaughters,gouged,goblins,gleam,glades,gigantor,get'em,geriatric,gatekeeper,gargoyles,gardenias,garcon,garbo,gallows,gabbing,futon,fulla,frightful,freshener,fortuitous,forceps,fogged,fodder,foamy,flogging,flaun,flared,fireplaces,feverish,favell,fattest,fattening,fallow,extraordinaire,evacuating,errant,envied,enchant,enamored,egocentric,dussander,dunwitty,dullest,dropout,dredged,dorsia,doornail,donot,dongs,dogged,dodgy,ditty,dishonorable,discriminating,discontinue,dings,dilly,dictation,dialysis,delly,delightfully,daryll,dandruff,cruddy,croquet,cringe,crimp,credo,crackling,courtside,counteroffer,counterfeiting,corrupting,copping,conveyor,contusions,contusion,conspirator,consoling,connoisseur,confetti,composure,compel,colic,coddle,cocksuckers,coattails,cloned,claustrophobia,clamoring,churn,chugga,chirping,chasin,chapped,chalkboard,centimeter,caymans,catheter,casings,caprica,capelli,cannolis,cannoli,camogli,camembert,butchers,butchered,busboys,bureaucrats,buckled,bubbe,brownstone,bravely,brackley,bouquets,botox,boozing,boosters,bodhi,blunders,blunder,blockage,biocyte,betrays,bested,beryllium,beheading,beggar,begbie,beamed,bastille,barstool,barricades,barbecues,barbecued,bandwagon,backfiring,bacarra,avenged,autopsies,aunties,associating,artichoke,arrowhead,appendage,apostrophe,antacid,ansel,annul,amuses,amped,amicable,amberg,alluring,adversaries,admirers,adlai,acupuncture,abnormality,aaaahhhh,zooming,zippity,zipping,zeroed,yuletide,yoyodyne,yengeese,yeahhh,wrinkly,wracked,withered,winks,windmills,whopping,wendle,weigart,waterworks,waterbed,watchful,wantin,wagging,waaah,vying,ventricle,varnish,vacuumed,unreachable,unprovoked,unmistakable,unfriendly,unfolding,underpaid,uncuff,unappealing,unabomber,typhoid,tuxedos,tushie,turds,tumnus,troubadour,trinium,treaters,treads,transpired,transgression,tought,thready,thins,thinners,techs,teary,tattaglia,tassels,tarzana,tanking,tablecloths,synchronize,symptomatic,sycophant,swimmingly,sweatshop,surfboard,superpowers,sunroom,sunblock,sugarplum,stupidly,strumpet,strapless,stooping,stools,stealthy,stalks,stairmaster,staffer,sshhh,squatting,squatters,spectacularly,sorbet,socked,sociable,snubbed,snorting,sniffles,snazzy,snakebite,smuggler,smorgasbord,smooching,slurping,slouch,slingshot,slaved,skimmed,sisterhood,silliest,sidarthur,sheraton,shebang,sharpening,shanghaied,shakers,sendoff,scurvy,scoliosis,scaredy,scagnetti,sawchuk,saugus,sasquatch,sandbag,saltines,s'pose,roston,rostle,riveting,ristle,rifling,revulsion,reverently,retrograde,restful,resents,reptilian,reorganize,renovating,reiterate,reinvent,reinmar,reibers,reechard,recuse,reconciling,recognizance,reclaiming,recitation,recieved,rebate,reacquainted,rascals,railly,quintuplets,quahog,pygmies,puzzling,punctuality,prosthetic,proms,probie,preys,preserver,preppie,poachers,plummet,plumbers,plannin,pitying,pitfalls,piqued,pinecrest,pinches,pillage,pigheaded,physique,pessimistic,persecute,perjure,percentile,pentothal,pensky,penises,peini,pazzi,pastels,parlour,paperweight,pamper,pained,overwhelm,overalls,outrank,outpouring,outhouse,outage,ouija,obstructed,obsessions,obeying,obese,o'riley,o'higgins,nosebleeds,norad,noooooooo,nononono,nonchalant,nippy,neurosis,nekhorvich,necronomicon,naquada,n'est,mystik,mystified,mumps,muddle,mothership,moped,monumentally,monogamous,mondesi,misogynistic,misinterpreting,mindlock,mending,megaphone,meeny,medicating,meanie,masseur,markstrom,marklars,margueritas,manifesting,maharajah,lukewarm,loveliest,loran,lizardo,liquored,lipped,lingers,limey,lemkin,leisurely,lathe,latched,lapping,ladle,krevlorneswath,kosygin,khakis,kenaru,keats,kaitlan,julliard,jollies,jaundice,jargon,jackals,invisibility,insipid,inflamed,inferiority,inexperience,incinerated,incinerate,incendiary,incan,inbred,implicating,impersonator,hunks,horsing,hooded,hippopotamus,hiked,hetson,hetero,hessian,henslowe,hendler,hellstrom,headstone,hayloft,harbucks,handguns,hallucinate,haldol,haggling,gynaecologist,gulag,guilder,guaranteeing,groundskeeper,grindstone,grimoir,grievance,griddle,gribbit,greystone,graceland,gooders,goeth,gentlemanly,gelatin,gawking,ganged,fukes,fromby,frenchmen,foursome,forsley,forbids,footwork,foothold,floater,flinging,flicking,fittest,fistfight,fireballs,fillings,fiddling,fennyman,felonious,felonies,feces,favoritism,fatten,fanatics,faceman,excusing,excepted,entwined,entree,ensconced,eladio,ehrlichman,easterland,dueling,dribbling,drape,downtrodden,doused,dosed,dorleen,dokie,distort,displeased,disown,dismount,disinherited,disarmed,disapproves,diperna,dined,diligent,dicaprio,depress,decoded,debatable,dealey,darsh,damsels,damning,dad'll,d'oeuvre,curlers,curie,cubed,crikey,crepes,countrymen,cornfield,coppers,copilot,copier,cooing,conspiracies,consigliere,condoning,commoner,commies,combust,comas,colds,clawed,clamped,choosy,chomping,chimps,chigorin,chianti,cheep,checkups,cheaters,celibate,cautiously,cautionary,castell,carpentry,caroling,carjacking,caritas,caregiver,cardiology,candlesticks,canasta,cain't,burro,burnin,bunking,bumming,bullwinkle,brummel,brooms,brews,breathin,braslow,bracing,botulism,boorish,bloodless,blayne,blatantly,blankie,bedbugs,becuase,barmaid,bared,baracus,banal,bakes,backpacks,attentions,atrocious,ativan,athame,asunder,astound,assuring,aspirins,asphyxiation,ashtrays,aryans,arnon,apprehension,applauding,anvil,antiquing,antidepressants,annoyingly,amputate,altruistic,alotta,alerting,afterthought,affront,affirm,actuality,abysmal,absentee,yeller,yakushova,wuzzy,wriggle,worrier,woogyman,womanizer,windpipe,windbag,willin,whisking,whimsy,wendall,weeny,weensy,weasels,watery,watcha,wasteful,waski,washcloth,waaay,vouched,viznick,ventriloquist,vendettas,veils,vayhue,vamanos,vadimus,upstage,uppity,unsaid,unlocking,unintentionally,undetected,undecided,uncaring,unbearably,tween,tryout,trotting,trini,trimmings,trickier,treatin,treadstone,trashcan,transcendent,tramps,townsfolk,torturous,torrid,toothpicks,tolerable,tireless,tiptoeing,timmay,tillinghouse,tidying,tibia,thumbing,thrusters,thrashing,these'll,thatos,testicular,teriyaki,tenors,tenacity,tellers,telemetry,tarragon,switchblade,swicker,swells,sweatshirts,swatches,surging,supremely,sump'n,succumb,subsidize,stumbles,stuffs,stoppin,stipulate,stenographer,steamroll,stasis,stagger,squandered,splint,splendidly,splashy,splashing,specter,sorcerers,somewheres,somber,snuggled,snowmobile,sniffed,snags,smugglers,smudged,smirking,smearing,slings,sleet,sleepovers,sleek,slackers,siree,siphoning,singed,sincerest,sickened,shuffled,shriveled,shorthanded,shittin,shish,shipwrecked,shins,sheetrock,shawshank,shamu,sha're,servitude,sequins,seascape,scrapings,scoured,scorching,sandpaper,saluting,salud,ruffled,roughnecks,rougher,rosslyn,rosses,roost,roomy,romping,revolutionize,reprimanded,refute,refrigerated,reeled,redundancies,rectal,recklessly,receding,reassignment,reapers,readout,ration,raring,ramblings,raccoons,quarantined,purging,punters,psychically,premarital,pregnancies,predisposed,precautionary,pollute,podunk,plums,plaything,pixilated,pitting,piranhas,pieced,piddles,pickled,photogenic,phosphorous,pffft,pestilence,pessimist,perspiration,perps,penticoff,passageways,pardons,panics,pancamo,paleontologist,overwhelms,overstating,overpaid,overdid,outlive,orthodontist,orgies,oreos,ordover,ordinates,ooooooh,oooohhh,omelettes,officiate,obtuse,obits,nymph,novocaine,noooooooooo,nipping,nilly,nightstick,negate,neatness,natured,narcotic,narcissism,namun,nakatomi,murky,muchacho,mouthwash,motzah,morsel,morph,morlocks,mooch,moloch,molest,mohra,modus,modicum,mockolate,misdemeanors,miscalculation,middies,meringue,mercilessly,meditating,mayakovsky,maximillian,marlee,markovski,maniacal,maneuvered,magnificence,maddening,lutze,lunged,lovelies,lorry,loosening,lookee,littered,lilac,lightened,laces,kurzon,kurtzweil,kind've,kimono,kenji,kembu,keanu,kazuo,jonesing,jilted,jiggling,jewelers,jewbilee,jacqnoud,jacksons,ivories,insurmountable,innocuous,innkeeper,infantery,indulged,indescribable,incoherent,impervious,impertinent,imperfections,hunnert,huffy,horsies,horseradish,hollowed,hogwash,hockley,hissing,hiromitsu,hidin,hereafter,helpmann,hehehe,haughty,happenings,hankie,handsomely,halliwells,haklar,haise,gunsights,grossly,grope,grocer,grits,gripping,grabby,glorificus,gizzard,gilardi,gibarian,geminon,gasses,garnish,galloping,gairwyn,futterman,futility,fumigated,fruitless,friendless,freon,foregone,forego,floored,flighty,flapjacks,fizzled,ficus,festering,farbman,fabricate,eyghon,extricate,exalted,eventful,esophagus,enterprising,entail,endor,emphatically,embarrasses,electroshock,easel,duffle,drumsticks,dissection,dissected,disposing,disparaging,disorientation,disintegrated,disarming,devoting,dessaline,deprecating,deplorable,delve,degenerative,deduct,decomposed,deathly,dearie,daunting,dankova,cyclotron,cyberspace,cutbacks,culpable,cuddled,crumpets,cruelly,crouching,cranium,cramming,cowering,couric,cordesh,conversational,conclusively,clung,clotting,cleanest,chipping,chimpanzee,chests,cheapen,chainsaws,censure,catapult,caravaggio,carats,captivating,calrissian,butlers,busybody,bussing,bunion,bulimic,budging,brung,browbeat,brokenhearted,brecher,breakdowns,bracebridge,boning,blowhard,blisters,blackboard,bigotry,bialy,bhamra,bended,begat,battering,baste,basquiat,barricaded,barometer,balled,baited,badenweiler,backhand,ascenscion,argumentative,appendicitis,apparition,anxiously,antagonistic,angora,anacott,amniotic,ambience,alonna,aleck,akashic,ageless,abouts,aawwww,aaaaarrrrrrggghhh,aaaaaa,zendi,yuppies,yodel,y'hear,wrangle,wombosi,wittle,withstanding,wisecracks,wiggling,wierd,whittlesley,whipper,whattya,whatsamatter,whatchamacallit,whassup,whad'ya,weakling,warfarin,waponis,wampum,wadn't,vorash,vizzini,virtucon,viridiana,veracity,ventilated,varicose,varcon,vandalized,vamos,vamoose,vaccinated,vacationing,usted,urinal,uppers,unwittingly,unsealed,unplanned,unhinged,unhand,unfathomable,unequivocally,unbreakable,unadvisedly,udall,tynacorp,tuxes,tussle,turati,tunic,tsavo,trussed,troublemakers,trollop,tremors,transsexual,transfusions,toothbrushes,toned,toddlers,tinted,tightened,thundering,thorpey,this'd,thespian,thaddius,tenuous,tenths,tenement,telethon,teleprompter,teaspoon,taunted,tattle,tardiness,taraka,tappy,tapioca,tapeworm,talcum,tacks,swivel,swaying,superpower,summarize,sumbitch,sultry,suburbia,styrofoam,stylings,strolls,strobe,stockpile,stewardesses,sterilized,sterilize,stealin,stakeouts,squawk,squalor,squabble,sprinkled,sportsmanship,spokes,spiritus,sparklers,spareribs,sowing,sororities,sonovabitch,solicit,softy,softness,softening,snuggling,snatchers,snarling,snarky,snacking,smears,slumped,slowest,slithering,sleazebag,slayed,slaughtering,skidded,skated,sivapathasundaram,sissies,silliness,silences,sidecar,sicced,shylock,shtick,shrugged,shriek,shoves,should'a,shortcake,shockingly,shirking,shaves,shatner,sharpener,shapely,shafted,sexless,septum,selflessness,seabea,scuff,screwball,scoping,scooch,scolding,schnitzel,schemed,scalper,santy,sankara,sanest,salesperson,sakulos,safehouse,sabers,runes,rumblings,rumbling,ruijven,ringers,righto,rhinestones,retrieving,reneging,remodelling,relentlessly,regurgitate,refills,reeking,reclusive,recklessness,recanted,ranchers,rafer,quaking,quacks,prophesied,propensity,profusely,problema,prided,prays,postmark,popsicles,poodles,pollyanna,polaroids,pokes,poconos,pocketful,plunging,plugging,pleeease,platters,pitied,pinetti,piercings,phooey,phonies,pestering,periscope,pentagram,pelts,patronized,paramour,paralyze,parachutes,pales,paella,paducci,owatta,overdone,overcrowded,overcompensating,ostracized,ordinate,optometrist,operandi,omens,okayed,oedipal,nuttier,nuptial,nunheim,noxious,nourish,notepad,nitroglycerin,nibblet,neuroses,nanosecond,nabbit,mythic,munchkins,multimillion,mulroney,mucous,muchas,mountaintop,morlin,mongorians,moneybags,mom'll,molto,mixup,misgivings,mindset,michalchuk,mesmerized,merman,mensa,meaty,mbwun,materialize,materialistic,masterminded,marginally,mapuhe,malfunctioning,magnify,macnamara,macinerney,machinations,macadamia,lysol,lurks,lovelorn,lopsided,locator,litback,litany,linea,limousines,limes,lighters,liebkind,levity,levelheaded,letterhead,lesabre,leron,lepers,lefts,leftenant,laziness,layaway,laughlan,lascivious,laryngitis,lapsed,landok,laminated,kurten,kobol,knucklehead,knowed,knotted,kirkeby,kinsa,karnovsky,jolla,jimson,jettison,jeric,jawed,jankis,janitors,jango,jalopy,jailbreak,jackers,jackasses,invalidate,intercepting,intercede,insinuations,infertile,impetuous,impaled,immerse,immaterial,imbeciles,imagines,idyllic,idolized,icebox,i'd've,hypochondriac,hyphen,hurtling,hurried,hunchback,hullo,horsting,hoooo,homeboys,hollandaise,hoity,hijinks,hesitates,herrero,herndorff,helplessly,heeyy,heathen,hearin,headband,harrassment,harpies,halstrom,hahahahaha,hacer,grumbling,grimlocks,grift,greets,grandmothers,grander,grafts,gordievsky,gondorff,godorsky,glscripts,gaudy,gardeners,gainful,fuses,fukienese,frizzy,freshness,freshening,fraught,frantically,foxbooks,fortieth,forked,foibles,flunkies,fleece,flatbed,fisted,firefight,fingerpaint,filibuster,fhloston,fenceline,femur,fatigues,fanucci,fantastically,familiars,falafel,fabulously,eyesore,expedient,ewwww,eviscerated,erogenous,epidural,enchante,embarassed,embarass,embalming,elude,elspeth,electrocute,eigth,eggshell,echinacea,eases,earpiece,earlobe,dumpsters,dumbshit,dumbasses,duloc,duisberg,drummed,drinkers,dressy,dorma,doily,divvy,diverting,dissuade,disrespecting,displace,disorganized,disgustingly,discord,disapproving,diligence,didja,diced,devouring,detach,destructing,desolate,demerits,delude,delirium,degrade,deevak,deemesa,deductions,deduce,debriefed,deadbeats,dateline,darndest,damnable,dalliance,daiquiri,d'agosta,cussing,cryss,cripes,cretins,crackerjack,cower,coveting,couriers,countermission,cotswolds,convertibles,conversationalist,consorting,consoled,consarn,confides,confidentially,commited,commiserate,comme,comforter,comeuppance,combative,comanches,colosseum,colling,coexist,coaxing,cliffside,chutes,chucked,chokes,childlike,childhoods,chickening,chenowith,charmingly,changin,catsup,captioning,capsize,cappucino,capiche,candlewell,cakewalk,cagey,caddie,buxley,bumbling,bulky,buggered,brussel,brunettes,brumby,brotha,bronck,brisket,bridegroom,braided,bovary,bookkeeper,bluster,bloodline,blissfully,blase,billionaires,bicker,berrisford,bereft,berating,berate,bendy,belive,belated,beikoku,beens,bedspread,bawdy,barreling,baptize,banya,balthazar,balmoral,bakshi,bails,badgered,backstreet,awkwardly,auras,attuned,atheists,astaire,assuredly,arrivederci,appetit,appendectomy,apologetic,antihistamine,anesthesiologist,amulets,albie,alarmist,aiight,adstream,admirably,acquaint,abound,abominable,aaaaaaah,zekes,zatunica,wussy,worded,wooed,woodrell,wiretap,windowsill,windjammer,windfall,whisker,whims,whatiya,whadya,weirdly,weenies,waunt,washout,wanto,waning,victimless,verdad,veranda,vandaley,vancomycin,valise,vaguest,upshot,unzip,unwashed,untrained,unstuck,unprincipled,unmentionables,unjustly,unfolds,unemployable,uneducated,unduly,undercut,uncovering,unconsciousness,unconsciously,tyndareus,turncoat,turlock,tulle,tryouts,trouper,triplette,trepkos,tremor,treeger,trapeze,traipse,tradeoff,trach,torin,tommorow,tollan,toity,timpani,thumbprint,thankless,tell'em,telepathy,telemarketing,telekinesis,teevee,teeming,tarred,tambourine,talentless,swooped,switcheroo,swirly,sweatpants,sunstroke,suitors,sugarcoat,subways,subterfuge,subservient,subletting,stunningly,strongbox,striptease,stravanavitch,stradling,stoolie,stodgy,stocky,stifle,stealer,squeezes,squatter,squarely,sprouted,spool,spindly,speedos,soups,soundly,soulmates,somebody'll,soliciting,solenoid,sobering,snowflakes,snowballs,snores,slung,slimming,skulk,skivvies,skewered,skewer,sizing,sistine,sidebar,sickos,shushing,shunt,shugga,shone,shol'va,sharpened,shapeshifter,shadowing,shadoe,selectman,sefelt,seared,scrounging,scribbling,scooping,scintillating,schmoozing,scallops,sapphires,sanitarium,sanded,safes,rudely,roust,rosebush,rosasharn,rondell,roadhouse,riveted,rewrote,revamp,retaliatory,reprimand,replicators,replaceable,remedied,relinquishing,rejoicing,reincarnated,reimbursed,reevaluate,redid,redefine,recreating,reconnected,rebelling,reassign,rearview,rayne,ravings,ratso,rambunctious,radiologist,quiver,quiero,queef,qualms,pyrotechnics,pulsating,psychosomatic,proverb,promiscuous,profanity,prioritize,preying,predisposition,precocious,precludes,prattling,prankster,povich,potting,postpartum,porridge,polluting,plowing,pistachio,pissin,pickpocket,physicals,peruse,pertains,personified,personalize,perjured,perfecting,pepys,pepperdine,pembry,peering,peels,pedophile,patties,passkey,paratrooper,paraphernalia,paralyzing,pandering,paltry,palpable,pagers,pachyderm,overstay,overestimated,overbite,outwit,outgrow,outbid,ooops,oomph,oohhh,oldie,obliterate,objectionable,nygma,notting,noches,nitty,nighters,newsstands,newborns,neurosurgery,nauseated,nastiest,narcolepsy,mutilate,muscled,murmur,mulva,mulling,mukada,muffled,morgues,moonbeams,monogamy,molester,molestation,molars,moans,misprint,mismatched,mirth,mindful,mimosas,millander,mescaline,menstrual,menage,mellowing,medevac,meddlesome,matey,manicures,malevolent,madmen,macaroons,lydell,lycra,lunchroom,lunching,lozenges,looped,litigious,liquidate,linoleum,lingk,limitless,limber,lilacs,ligature,liftoff,lemmiwinks,leggo,learnin,lazarre,lawyered,lactose,knelt,kenosha,kemosabe,jussy,junky,jordy,jimmies,jeriko,jakovasaur,issacs,isabela,irresponsibility,ironed,intoxication,insinuated,inherits,ingest,ingenue,inflexible,inflame,inevitability,inedible,inducement,indignant,indictments,indefensible,incomparable,incommunicado,improvising,impounded,illogical,ignoramus,hydrochloric,hydrate,hungover,humorless,humiliations,hugest,hoverdrone,hovel,hmmph,hitchhike,hibernating,henchman,helloooo,heirlooms,heartsick,headdress,hatches,harebrained,hapless,hanen,handsomer,hallows,habitual,guten,gummy,guiltier,guidebook,gstaad,gruff,griss,grieved,grata,gorignak,goosed,goofed,glowed,glitz,glimpses,glancing,gilmores,gianelli,geraniums,garroway,gangbusters,gamblers,galls,fuddy,frumpy,frowning,frothy,fro'tak,frere,fragrances,forgettin,follicles,flowery,flophouse,floatin,flirts,flings,flatfoot,fingerprinting,fingerprinted,fingering,finald,fillet,fianc,femoral,federales,fawkes,fascinates,farfel,fambly,falsified,fabricating,exterminators,expectant,excusez,excrement,excercises,evian,etins,esophageal,equivalency,equate,equalizer,entrees,enquire,endearment,empathetic,emailed,eggroll,earmuffs,dyslexic,duper,duesouth,drunker,druggie,dreadfully,dramatics,dragline,downplay,downers,dominatrix,doers,docket,docile,diversify,distracts,disloyalty,disinterested,discharging,disagreeable,dirtier,dinghy,dimwitted,dimoxinil,dimmy,diatribe,devising,deviate,detriment,desertion,depressants,depravity,deniability,delinquents,defiled,deepcore,deductive,decimate,deadbolt,dauthuille,dastardly,daiquiris,daggers,dachau,curiouser,curdled,cucamonga,cruller,cruces,crosswalk,crinkle,crescendo,cremate,counseled,couches,cornea,corday,copernicus,contrition,contemptible,constipated,conjoined,confounded,condescend,concoct,conch,compensating,committment,commandeered,comely,coddled,cockfight,cluttered,clunky,clownfish,cloaked,clenched,cleanin,civilised,circumcised,cimmeria,cilantro,chutzpah,chucking,chiseled,chicka,chattering,cervix,carrey,carpal,carnations,cappuccinos,candied,calluses,calisthenics,bushy,burners,budington,buchanans,brimming,braids,boycotting,bouncers,botticelli,botherin,bookkeeping,bogyman,bogged,bloodthirsty,blintzes,blanky,binturong,billable,bigboote,bewildered,betas,bequeath,behoove,befriend,bedpost,bedded,baudelaires,barreled,barboni,barbeque,bangin,baltus,bailout,backstabber,baccarat,awning,augie,arguillo,archway,apricots,apologising,annyong,anchorman,amenable,amazement,allspice,alannis,airfare,airbags,ahhhhhhhhh,ahhhhhhhh,ahhhhhhh,agitator,adrenal,acidosis,achoo,accessorizing,accentuate,abrasions,abductor,aaaahhh,aaaaaaaa,aaaaaaa,zeroing,zelner,zeldy,yevgeny,yeska,yellows,yeesh,yeahh,yamuri,wouldn't've,workmanship,woodsman,winnin,winked,wildness,whoring,whitewash,whiney,when're,wheezer,wheelman,wheelbarrow,westerburg,weeding,watermelons,washboard,waltzes,wafting,voulez,voluptuous,vitone,vigilantes,videotaping,viciously,vices,veruca,vermeer,verifying,vasculitis,valets,upholstered,unwavering,untold,unsympathetic,unromantic,unrecognizable,unpredictability,unmask,unleashing,unintentional,unglued,unequivocal,underrated,underfoot,unchecked,unbutton,unbind,unbiased,unagi,uhhhhh,tugging,triads,trespasses,treehorn,traviata,trappers,transplants,trannie,tramping,tracheotomy,tourniquet,tooty,toothless,tomarrow,toasters,thruster,thoughtfulness,thornwood,tengo,tenfold,telltale,telephoto,telephoned,telemarketer,tearin,tastic,tastefully,tasking,taser,tamed,tallow,taketh,taillight,tadpoles,tachibana,syringes,sweated,swarthy,swagger,surges,supermodels,superhighway,sunup,sun'll,sulfa,sugarless,sufficed,subside,strolled,stringy,strengthens,straightest,straightens,storefront,stopper,stockpiling,stimulant,stiffed,steyne,sternum,stepladder,stepbrother,steers,steelheads,steakhouse,stathis,stankylecartmankennymr,standoffish,stalwart,squirted,spritz,sprig,sprawl,spousal,sphincter,spenders,spearmint,spatter,spangled,southey,soured,sonuvabitch,somethng,snuffed,sniffs,smokescreen,smilin,slobs,sleepwalker,sleds,slays,slayage,skydiving,sketched,skanks,sixed,siphoned,siphon,simpering,sigfried,sidearm,siddons,sickie,shuteye,shuffleboard,shrubberies,shrouded,showmanship,shouldn't've,shoplift,shiatsu,sentries,sentance,sensuality,seething,secretions,searing,scuttlebutt,sculpt,scowling,scouring,scorecard,schoolers,schmucks,scepters,scaly,scalps,scaffolding,sauces,sartorius,santen,salivating,sainthood,saget,saddens,rygalski,rusting,ruination,rueland,rudabaga,rottweiler,roofies,romantics,rollerblading,roldy,roadshow,rickets,rible,rheza,revisiting,retentive,resurface,restores,respite,resounding,resorting,resists,repulse,repressing,repaying,reneged,refunds,rediscover,redecorated,reconstructive,recommitted,recollect,receptacle,reassess,reanimation,realtors,razinin,rationalization,ratatouille,rashum,rasczak,rancheros,rampler,quizzing,quips,quartered,purring,pummeling,puede,proximo,prospectus,pronouncing,prolonging,procreation,proclamations,principled,prides,preoccupation,prego,precog,prattle,pounced,potshots,potpourri,porque,pomegranates,polenta,plying,pluie,plesac,playmates,plantains,pillowcase,piddle,pickers,photocopied,philistine,perpetuate,perpetually,perilous,pawned,pausing,pauper,parter,parlez,parlay,pally,ovulation,overtake,overstate,overpowering,overpowered,overconfident,overbooked,ovaltine,outweighs,outings,ottos,orrin,orifice,orangutan,oopsy,ooooooooh,oooooo,ooohhhh,ocular,obstruct,obscenely,o'dwyer,nutjob,nunur,notifying,nostrand,nonny,nonfat,noblest,nimble,nikes,nicht,newsworthy,nestled,nearsighted,ne'er,nastier,narco,nakedness,muted,mummified,mudda,mozzarella,moxica,motivator,motility,mothafucka,mortmain,mortgaged,mores,mongers,mobbed,mitigating,mistah,misrepresented,mishke,misfortunes,misdirection,mischievous,mineshaft,millaney,microwaves,metzenbaum,mccovey,masterful,masochistic,marliston,marijawana,manya,mantumbi,malarkey,magnifique,madrona,madox,machida,m'hidi,lullabies,loveliness,lotions,looka,lompoc,litterbug,litigator,lithe,liquorice,linds,limericks,lightbulb,lewises,letch,lemec,layover,lavatory,laurels,lateness,laparotomy,laboring,kuato,kroff,krispy,krauts,knuckleheads,kitschy,kippers,kimbrow,keypad,keepsake,kebab,karloff,junket,judgemental,jointed,jezzie,jetting,jeeze,jeeter,jeesus,jeebs,janeane,jails,jackhammer,ixnay,irritates,irritability,irrevocable,irrefutable,irked,invoking,intricacies,interferon,intents,insubordinate,instructive,instinctive,inquisitive,inlay,injuns,inebriated,indignity,indecisive,incisors,incacha,inalienable,impresses,impregnate,impregnable,implosion,idolizes,hypothyroidism,hypoglycemic,huseni,humvee,huddling,honing,hobnobbing,hobnob,histrionics,histamine,hirohito,hippocratic,hindquarters,hikita,hikes,hightailed,hieroglyphics,heretofore,herbalist,hehey,hedriks,heartstrings,headmistress,headlight,hardheaded,happend,handlebars,hagitha,habla,gyroscope,guys'd,guy'd,guttersnipe,grump,growed,grovelling,groan,greenbacks,gravedigger,grating,grasshoppers,grandiose,grandest,grafted,gooood,goood,gooks,godsakes,goaded,glamorama,giveth,gingham,ghostbusters,germane,georgy,gazzo,gazelles,gargle,garbled,galgenstein,gaffe,g'day,fyarl,furnish,furies,fulfills,frowns,frowned,frighteningly,freebies,freakishly,forewarned,foreclose,forearms,fordson,fonics,flushes,flitting,flemmer,flabby,fishbowl,fidgeting,fevers,feigning,faxing,fatigued,fathoms,fatherless,fancier,fanatical,factored,eyelid,eyeglasses,expresso,expletive,expectin,excruciatingly,evidentiary,ever'thing,eurotrash,eubie,estrangement,erlich,epitome,entrap,enclose,emphysema,embers,emasculating,eighths,eardrum,dyslexia,duplicitous,dumpty,dumbledore,dufus,duddy,duchamp,drunkenness,drumlin,drowns,droid,drinky,drifts,drawbridge,dramamine,douggie,douchebag,dostoyevsky,doodling,don'tcha,domineering,doings,dogcatcher,doctoring,ditzy,dissimilar,dissecting,disparage,disliking,disintegrating,dishwalla,dishonored,dishing,disengaged,disavowed,dippy,diorama,dimmed,dilate,digitalis,diggory,dicing,diagnosing,devola,desolation,dennings,denials,deliverance,deliciously,delicacies,degenerates,degas,deflector,defile,deference,decrepit,deciphered,dawdle,dauphine,daresay,dangles,dampen,damndest,cucumbers,cucaracha,cryogenically,croaks,croaked,criticise,crisper,creepiest,creams,crackle,crackin,covertly,counterintelligence,corrosive,cordially,cops'll,convulsions,convoluted,conversing,conga,confrontational,confab,condolence,condiments,complicit,compiegne,commodus,comings,cometh,collusion,collared,cockeyed,clobber,clemonds,clarithromycin,cienega,christmasy,christmassy,chloroform,chippie,chested,cheeco,checklist,chauvinist,chandlers,chambermaid,chakras,cellophane,caveat,cataloguing,cartmanland,carples,carny,carded,caramels,cappy,caped,canvassing,callback,calibrated,calamine,buttermilk,butterfingers,bunsen,bulimia,bukatari,buildin,budged,brobich,bringer,brendell,brawling,bratty,braised,boyish,boundless,botch,boosh,bookies,bonbons,bodes,bobunk,bluntly,blossoming,bloomers,bloodstains,bloodhounds,blech,biter,biometric,bioethics,bijan,bigoted,bicep,bereaved,bellowing,belching,beholden,beached,batmobile,barcodes,barch,barbecuing,bandanna,backwater,backtrack,backdraft,augustino,atrophy,atrocity,atley,atchoo,asthmatic,assoc,armchair,arachnids,aptly,appetizing,antisocial,antagonizing,anorexia,anini,andersons,anagram,amputation,alleluia,airlock,aimless,agonized,agitate,aggravating,aerosol,acing,accomplishing,accidently,abuser,abstain,abnormally,aberration,aaaaahh,zlotys,zesty,zerzura,zapruder,zantopia,yelburton,yeess,y'knowwhati'msayin,wwhat,wussies,wrenched,would'a,worryin,wormser,wooooo,wookiee,wolchek,wishin,wiseguys,windbreaker,wiggy,wieners,wiedersehen,whoopin,whittled,wherefore,wharvey,welts,wellstone,wedges,wavered,watchit,wastebasket,wango,waken,waitressed,wacquiem,vrykolaka,voula,vitally,visualizing,viciousness,vespers,vertes,verily,vegetarians,vater,vaporize,vannacutt,vallens,ussher,urinating,upping,unwitting,untangle,untamed,unsanitary,unraveled,unopened,unisex,uninvolved,uninteresting,unintelligible,unimaginative,undeserving,undermines,undergarments,unconcerned,tyrants,typist,tykes,tybalt,twosome,twits,tutti,turndown,tularemia,tuberculoma,tsimshian,truffaut,truer,truant,trove,triumphed,tripe,trigonometry,trifled,trifecta,tribulations,tremont,tremoille,transcends,trafficker,touchin,tomfoolery,tinkered,tinfoil,tightrope,thousan,thoracotomy,thesaurus,thawing,thatta,tessio,temps,taxidermist,tator,tachycardia,t'akaya,swelco,sweetbreads,swatting,supercollider,sunbathing,summarily,suffocation,sueleen,succinct,subsided,submissive,subjecting,subbing,subatomic,stupendous,stunted,stubble,stubbed,streetwalker,strategizing,straining,straightaway,stoli,stiffer,stickup,stens,steamroller,steadwell,steadfast,stateroom,stans,sshhhh,squishing,squinting,squealed,sprouting,sprimp,spreadsheets,sprawled,spotlights,spooning,spirals,speedboat,spectacles,speakerphone,southglen,souse,soundproof,soothsayer,sommes,somethings,solidify,soars,snorted,snorkeling,snitches,sniping,snifter,sniffin,snickering,sneer,snarl,smila,slinking,slanted,slanderous,slammin,skimp,skilosh,siteid,sirloin,singe,sighing,sidekicks,sicken,showstopper,shoplifter,shimokawa,sherborne,shavadai,sharpshooters,sharking,shagged,shaddup,senorita,sesterces,sensuous,seahaven,scullery,scorcher,schotzie,schnoz,schmooze,schlep,schizo,scents,scalping,scalped,scallop,scalding,sayeth,saybrooke,sawed,savoring,sardine,sandstorm,sandalwood,salutations,sagman,s'okay,rsvp'd,rousted,rootin,romper,romanovs,rollercoaster,rolfie,robinsons,ritzy,ritualistic,ringwald,rhymed,rheingold,rewrites,revoking,reverts,retrofit,retort,retinas,respirations,reprobate,replaying,repaint,renquist,renege,relapsing,rekindled,rejuvenating,rejuvenated,reinstating,recriminations,rechecked,reassemble,rears,reamed,reacquaint,rayanne,ravish,rathole,raspail,rarest,rapists,rants,racketeer,quittin,quitters,quintessential,queremos,quellek,quelle,quasimodo,pyromaniac,puttanesca,puritanical,purer,puree,pungent,pummel,puedo,psychotherapist,prosecutorial,prosciutto,propositioning,procrastination,probationary,primping,preventative,prevails,preservatives,preachy,praetorians,practicality,powders,potus,postop,positives,poser,portolano,portokalos,poolside,poltergeists,pocketed,poach,plummeted,plucking,plimpton,playthings,plastique,plainclothes,pinpointed,pinkus,pinks,pigskin,piffle,pictionary,piccata,photocopy,phobias,perignon,perfumes,pecks,pecked,patently,passable,parasailing,paramus,papier,paintbrush,pacer,paaiint,overtures,overthink,overstayed,overrule,overestimate,overcooked,outlandish,outgrew,outdoorsy,outdo,orchestrate,oppress,opposable,oooohh,oomupwah,okeydokey,okaaay,ohashi,of'em,obscenities,oakie,o'gar,nurection,nostradamus,norther,norcom,nooch,nonsensical,nipped,nimbala,nervously,neckline,nebbleman,narwhal,nametag,n'n't,mycenae,muzak,muumuu,mumbled,mulvehill,muggings,muffet,mouthy,motivates,motaba,moocher,mongi,moley,moisturize,mohair,mocky,mmkay,mistuh,missis,misdeeds,mincemeat,miggs,miffed,methadone,messieur,menopausal,menagerie,mcgillicuddy,mayflowers,matrimonial,matick,masai,marzipan,maplewood,manzelle,mannequins,manhole,manhandle,malfunctions,madwoman,machiavelli,lynley,lynched,lurconis,lujack,lubricant,looove,loons,loofah,lonelyhearts,lollipops,lineswoman,lifers,lexter,lepner,lemony,leggy,leafy,leadeth,lazerus,lazare,lawford,languishing,lagoda,ladman,kundera,krinkle,krendler,kreigel,kowolski,knockdown,knifed,kneed,kneecap,kids'll,kennie,kenmore,keeled,kazootie,katzenmoyer,kasdan,karak,kapowski,kakistos,julyan,jockstrap,jobless,jiggly,jaunt,jarring,jabbering,irrigate,irrevocably,irrationally,ironies,invitro,intimated,intently,intentioned,intelligently,instill,instigator,instep,inopportune,innuendoes,inflate,infects,infamy,indiscretions,indiscreet,indio,indignities,indict,indecision,inconspicuous,inappropriately,impunity,impudent,impotence,implicates,implausible,imperfection,impatience,immutable,immobilize,idealist,iambic,hysterically,hyperspace,hygienist,hydraulics,hydrated,huzzah,husks,hunched,huffed,hubris,hubbub,hovercraft,houngan,hosed,horoscopes,hopelessness,hoodwinked,honorably,honeysuckle,homegirl,holiest,hippity,hildie,hieroglyphs,hexton,herein,heckle,heaping,healthilizer,headfirst,hatsue,harlot,hardwired,halothane,hairstyles,haagen,haaaaa,gutting,gummi,groundless,groaning,gristle,grills,graynamore,grabbin,goodes,goggle,glittering,glint,gleaming,glassy,girth,gimbal,giblets,gellers,geezers,geeze,garshaw,gargantuan,garfunkel,gangway,gandarium,gamut,galoshes,gallivanting,gainfully,gachnar,fusionlips,fusilli,furiously,frugal,fricking,frederika,freckling,frauds,fountainhead,forthwith,forgo,forgettable,foresight,foresaw,fondling,fondled,fondle,folksy,fluttering,fluffing,floundering,flirtatious,flexing,flatterer,flaring,fixating,finchy,figurehead,fiendish,fertilize,ferment,fending,fellahs,feelers,fascinate,fantabulous,falsify,fallopian,faithless,fairer,fainter,failings,facetious,eyepatch,exxon,extraterrestrials,extradite,extracurriculars,extinguish,expunged,expelling,exorbitant,exhilarated,exertion,exerting,excercise,everbody,evaporated,escargot,escapee,erases,epizootics,epithelials,ephrum,entanglements,enslave,engrossed,emphatic,emeralds,ember,emancipated,elevates,ejaculate,effeminate,eccentricities,easygoing,earshot,dunks,dullness,dulli,dulled,drumstick,dropper,driftwood,dregs,dreck,dreamboat,draggin,downsizing,donowitz,dominoes,diversions,distended,dissipate,disraeli,disqualify,disowned,dishwashing,disciplining,discerning,disappoints,dinged,digested,dicking,detonating,despising,depressor,depose,deport,dents,defused,deflecting,decryption,decoys,decoupage,decompress,decibel,decadence,deafening,dawning,dater,darkened,dappy,dallying,dagon,czechoslovakians,cuticles,cuteness,cupboards,culottes,cruisin,crosshairs,cronyn,criminalistics,creatively,creaming,crapping,cranny,cowed,contradicting,constipation,confining,confidences,conceiving,conceivably,concealment,compulsively,complainin,complacent,compels,communing,commode,comming,commensurate,columnists,colonoscopy,colchicine,coddling,clump,clubbed,clowning,cliffhanger,clang,cissy,choosers,choker,chiffon,channeled,chalet,cellmates,cathartic,caseload,carjack,canvass,canisters,candlestick,candlelit,camry,calzones,calitri,caldy,byline,butterball,bustier,burlap,bureaucrat,buffoons,buenas,brookline,bronzed,broiled,broda,briss,brioche,briar,breathable,brays,brassieres,boysenberry,bowline,boooo,boonies,booklets,bookish,boogeyman,boogey,bogas,boardinghouse,bluuch,blundering,bluer,blowed,blotchy,blossomed,bloodwork,bloodied,blithering,blinks,blathering,blasphemous,blacking,birdson,bings,bfmid,bfast,bettin,berkshires,benjamins,benevolence,benched,benatar,bellybutton,belabor,behooves,beddy,beaujolais,beattle,baxworth,baseless,barfing,bannish,bankrolled,banek,ballsy,ballpoint,baffling,badder,badda,bactine,backgammon,baako,aztreonam,authoritah,auctioning,arachtoids,apropos,aprons,apprised,apprehensive,anythng,antivenin,antichrist,anorexic,anoint,anguished,angioplasty,angio,amply,ampicillin,amphetamines,alternator,alcove,alabaster,airlifted,agrabah,affidavits,admonished,admonish,addled,addendum,accuser,accompli,absurdity,absolved,abrusso,abreast,aboot,abductions,abducting,aback,ababwa,aaahhhh,zorin,zinthar,zinfandel,zillions,zephyrs,zatarcs,zacks,youuu,yokels,yardstick,yammer,y'understand,wynette,wrung,wreaths,wowed,wouldn'ta,worming,wormed,workday,woodsy,woodshed,woodchuck,wojadubakowski,withering,witching,wiseass,wiretaps,wining,willoby,wiccaning,whupped,whoopi,whoomp,wholesaler,whiteness,whiner,whatchya,wharves,wenus,weirdoes,weaning,watusi,waponi,waistband,wackos,vouching,votre,vivica,viveca,vivant,vivacious,visor,visitin,visage,vicrum,vetted,ventriloquism,venison,varnsen,vaporized,vapid,vanstock,uuuuh,ushering,urologist,urination,upstart,uprooted,unsubtitled,unspoiled,unseat,unseasonably,unseal,unsatisfying,unnerve,unlikable,unleaded,uninsured,uninspired,unicycle,unhooked,unfunny,unfreezing,unflattering,unfairness,unexpressed,unending,unencumbered,unearth,undiscovered,undisciplined,understan,undershirt,underlings,underline,undercurrent,uncivilized,uncharacteristic,umpteenth,uglies,tuney,trumps,truckasaurus,trubshaw,trouser,tringle,trifling,trickster,trespassers,trespasser,traumas,trattoria,trashes,transgressions,trampling,tp'ed,toxoplasmosis,tounge,tortillas,topsy,topple,topnotch,tonsil,tions,timmuh,timithious,tilney,tighty,tightness,tightens,tidbits,ticketed,thyme,threepio,thoughtfully,thorkel,thommo,thing'll,thefts,that've,thanksgivings,tetherball,testikov,terraforming,tepid,tendonitis,tenboom,telex,teenybopper,tattered,tattaglias,tanneke,tailspin,tablecloth,swooping,swizzle,swiping,swindled,swilling,swerving,sweatshops,swaddling,swackhammer,svetkoff,supossed,superdad,sumptuous,sugary,sugai,subvert,substantiate,submersible,sublimating,subjugation,stymied,strychnine,streetlights,strassmans,stranglehold,strangeness,straddling,straddle,stowaways,stotch,stockbrokers,stifling,stepford,steerage,steena,statuary,starlets,staggeringly,ssshhh,squaw,spurt,spungeon,spritzer,sprightly,sprays,sportswear,spoonful,splittin,splitsville,speedily,specialise,spastic,sparrin,souvlaki,southie,sourpuss,soupy,soundstage,soothes,somebody'd,softest,sociopathic,socialized,snyders,snowmobiles,snowballed,snatches,smugness,smoothest,smashes,sloshed,sleight,skyrocket,skied,skewed,sixpence,sipowicz,singling,simulates,shyness,shuvanis,showoff,shortsighted,shopkeeper,shoehorn,shithouse,shirtless,shipshape,shifu,shelve,shelbyville,sheepskin,sharpens,shaquille,shanshu,servings,sequined,seizes,seashells,scrambler,scopes,schnauzer,schmo,schizoid,scampered,savagely,saudis,santas,sandovals,sanding,saleswoman,sagging,s'cuse,rutting,ruthlessly,runneth,ruffians,rubes,rosalita,rollerblades,rohypnol,roasts,roadies,ritten,rippling,ripples,rigoletto,richardo,rethought,reshoot,reserving,reseda,rescuer,reread,requisitions,repute,reprogram,replenish,repetitious,reorganizing,reinventing,reinvented,reheat,refrigerators,reenter,recruiter,recliner,rawdy,rashes,rajeski,raison,raisers,rages,quinine,questscape,queller,pygmalion,pushers,pusan,purview,pumpin,pubescent,prudes,provolone,propriety,propped,procrastinate,processional,preyed,pretrial,portent,pooling,poofy,polloi,policia,poacher,pluses,pleasuring,platitudes,plateaued,plaguing,pittance,pinheads,pincushion,pimply,pimped,piggyback,piecing,phillipe,philipse,philby,pharaohs,petyr,petitioner,peshtigo,pesaram,persnickety,perpetrate,percolating,pepto,penne,penell,pemmican,peeks,pedaling,peacemaker,pawnshop,patting,pathologically,patchouli,pasts,pasties,passin,parlors,paltrow,palamon,padlock,paddling,oversleep,overheating,overdosed,overcharge,overblown,outrageously,ornery,opportune,oooooooooh,oohhhh,ohhhhhh,ogres,odorless,obliterated,nyong,nymphomaniac,ntozake,novocain,nough,nonnie,nonissue,nodules,nightmarish,nightline,niceties,newsman,needra,nedry,necking,navour,nauseam,nauls,narim,namath,nagged,naboo,n'sync,myslexia,mutator,mustafi,musketeer,murtaugh,murderess,munching,mumsy,muley,mouseville,mortifying,morgendorffers,moola,montel,mongoloid,molestered,moldings,mocarbies,mo'ss,mixers,misrell,misnomer,misheard,mishandled,miscreant,misconceptions,miniscule,millgate,mettle,metricconverter,meteors,menorah,mengele,melding,meanness,mcgruff,mcarnold,matzoh,matted,mastectomy,massager,marveling,marooned,marmaduke,marick,manhandled,manatees,man'll,maltin,maliciously,malfeasance,malahide,maketh,makeovers,maiming,machismo,lumpectomy,lumbering,lucci,lording,lorca,lookouts,loogie,loners,loathed,lissen,lighthearted,lifer,lickin,lewen,levitation,lestercorp,lessee,lentils,legislate,legalizing,lederhosen,lawmen,lasskopf,lardner,lambeau,lamagra,ladonn,lactic,lacquer,labatier,krabappel,kooks,knickknacks,klutzy,kleynach,klendathu,kinross,kinkaid,kind'a,ketch,kesher,karikos,karenina,kanamits,junshi,jumbled,joust,jotted,jobson,jingling,jigalong,jerries,jellies,jeeps,javna,irresistable,internist,intercranial,inseminated,inquisitor,infuriate,inflating,infidelities,incessantly,incensed,incase,incapacitate,inasmuch,inaccuracies,imploding,impeding,impediments,immaturity,illegible,iditarod,icicles,ibuprofen,i'i'm,hymie,hydrolase,hunker,humps,humons,humidor,humdinger,humbling,huggin,huffing,housecleaning,hothouse,hotcakes,hosty,hootenanny,hootchie,hoosegow,honks,honeymooners,homily,homeopathic,hitchhikers,hissed,hillnigger,hexavalent,hewwo,hershe,hermey,hergott,henny,hennigans,henhouse,hemolytic,helipad,heifer,hebrews,hebbing,heaved,headlock,harrowing,harnessed,hangovers,handi,handbasket,halfrek,hacene,gyges,guys're,gundersons,gumption,gruntmaster,grubs,grossie,groped,grins,greaseball,gravesite,gratuity,granma,grandfathers,grandbaby,gradski,gracing,gossips,gooble,goners,golitsyn,gofer,godsake,goddaughter,gnats,gluing,glares,givers,ginza,gimmie,gimmee,gennero,gemme,gazpacho,gazed,gassy,gargling,gandhiji,galvanized,gallbladder,gaaah,furtive,fumigation,fucka,fronkonsteen,frills,freezin,freewald,freeloader,frailty,forger,foolhardy,fondest,fomin,followin,follicle,flotation,flopping,floodgates,flogged,flicked,flenders,fleabag,fixings,fixable,fistful,firewater,firelight,fingerbang,finalizing,fillin,filipov,fiderer,felling,feldberg,feign,faunia,fatale,farkus,fallible,faithfulness,factoring,eyeful,extramarital,exterminated,exhume,exasperated,eviscerate,estoy,esmerelda,escapades,epoxy,enticed,enthused,entendre,engrossing,endorphins,emptive,emmys,eminently,embezzler,embarressed,embarrassingly,embalmed,eludes,eling,elated,eirie,egotitis,effecting,eerily,eecom,eczema,earthy,earlobes,eally,dyeing,dwells,duvet,duncans,dulcet,droves,droppin,drools,drey'auc,downriver,domesticity,dollop,doesnt,dobler,divulged,diversionary,distancing,dispensers,disorienting,disneyworld,dismissive,disingenuous,disheveled,disfiguring,dinning,dimming,diligently,dilettante,dilation,dickensian,diaphragms,devastatingly,destabilize,desecrate,deposing,deniece,demony,delving,delicates,deigned,defraud,deflower,defibrillator,defiantly,defenceless,defacing,deconstruction,decompose,deciphering,decibels,deceptively,deceptions,decapitation,debutantes,debonair,deadlier,dawdling,davic,darwinism,darnit,darks,danke,danieljackson,dangled,cytoxan,cutout,cutlery,curveball,curfews,cummerbund,crunches,crouched,crisps,cripples,crilly,cribs,crewman,creepin,creeds,credenza,creak,crawly,crawlin,crawlers,crated,crackheads,coworker,couldn't've,corwins,coriander,copiously,convenes,contraceptives,contingencies,contaminating,conniption,condiment,concocting,comprehending,complacency,commendatore,comebacks,com'on,collarbone,colitis,coldly,coiffure,coffers,coeds,codependent,cocksucking,cockney,cockles,clutched,closeted,cloistered,cleve,cleats,clarifying,clapped,cinnabar,chunnel,chumps,cholinesterase,choirboy,chocolatey,chlamydia,chigliak,cheesie,chauvinistic,chasm,chartreuse,charo,charnier,chapil,chalked,chadway,certifiably,cellulite,celled,cavalcade,cataloging,castrated,cassio,cashews,cartouche,carnivore,carcinogens,capulet,captivated,capt'n,cancellations,campin,callate,callar,caffeinated,cadavers,cacophony,cackle,buzzes,buttoning,busload,burglaries,burbs,buona,bunions,bullheaded,buffs,bucyk,buckling,bruschetta,browbeating,broomsticks,broody,bromly,brolin,briefings,brewskies,breathalyzer,breakups,bratwurst,brania,braiding,brags,braggin,bradywood,bottomed,bossa,bordello,bookshelf,boogida,bondsman,bolder,boggles,bludgeoned,blowtorch,blotter,blips,blemish,bleaching,blainetologists,blading,blabbermouth,birdseed,bimmel,biloxi,biggly,bianchinni,betadine,berenson,belus,belloq,begets,befitting,beepers,beelzebub,beefed,bedridden,bedevere,beckons,beaded,baubles,bauble,battleground,bathrobes,basketballs,basements,barroom,barnacle,barkin,barked,baretta,bangles,bangler,banality,bambang,baltar,ballplayers,bagman,baffles,backroom,babysat,baboons,averse,audiotape,auctioneer,atten,atcha,astonishment,arugula,arroz,antihistamines,annoyances,anesthesiology,anatomically,anachronism,amiable,amaretto,allahu,alight,aimin,ailment,afterglow,affronte,advil,adrenals,actualization,acrost,ached,accursed,accoutrements,absconded,aboveboard,abetted,aargh,aaaahh,zuwicky,zolda,ziploc,zakamatak,youve,yippie,yesterdays,yella,yearns,yearnings,yearned,yawning,yalta,yahtzee,y'mean,y'are,wuthering,wreaks,worrisome,workiiing,wooooooo,wonky,womanizing,wolodarsky,wiwith,withdraws,wishy,wisht,wipers,wiper,winos,windthorne,windsurfing,windermere,wiggled,wiggen,whwhat,whodunit,whoaaa,whittling,whitesnake,whereof,wheezing,wheeze,whatd'ya,whataya,whammo,whackin,wellll,weightless,weevil,wedgies,webbing,weasly,wayside,waxes,waturi,washy,washrooms,wandell,waitaminute,waddya,waaaah,vornac,vishnoor,virulent,vindictiveness,vinceres,villier,vigeous,vestigial,ventilate,vented,venereal,veering,veered,veddy,vaslova,valosky,vailsburg,vaginas,vagas,urethra,upstaged,uploading,unwrapping,unwieldy,untapped,unsatisfied,unquenchable,unnerved,unmentionable,unlovable,unknowns,uninformed,unimpressed,unhappily,unguarded,unexplored,undergarment,undeniably,unclench,unclaimed,uncharacteristically,unbuttoned,unblemished,ululd,uhhhm,tweeze,tutsami,tushy,tuscarora,turkle,turghan,turbinium,tubers,trucoat,troxa,tropicana,triquetra,trimmers,triceps,trespassed,traya,traumatizing,transvestites,trainors,tradin,trackers,townies,tourelles,toucha,tossin,tortious,topshop,topes,tonics,tongs,tomsk,tomorrows,toiling,toddle,tizzy,tippers,timmi,thwap,thusly,ththe,thrusts,throwers,throwed,throughway,thickening,thermonuclear,thelwall,thataway,terrifically,tendons,teleportation,telepathically,telekinetic,teetering,teaspoons,tarantulas,tapas,tanned,tangling,tamales,tailors,tahitian,tactful,tachy,tablespoon,syrah,synchronicity,synch,synapses,swooning,switchman,swimsuits,sweltering,sweetly,suvolte,suslov,surfed,supposition,suppertime,supervillains,superfluous,superego,sunspots,sunning,sunless,sundress,suckah,succotash,sublevel,subbasement,studious,striping,strenuously,straights,stonewalled,stillness,stilettos,stevesy,steno,steenwyck,stargates,stammering,staedert,squiggly,squiggle,squashing,squaring,spreadsheet,spramp,spotters,sporto,spooking,splendido,spittin,spirulina,spiky,spate,spartacus,spacerun,soonest,something'll,someth,somepin,someone'll,sofas,soberly,sobered,snowmen,snowbank,snowballing,snivelling,sniffling,snakeskin,snagging,smush,smooter,smidgen,smackers,slumlord,slossum,slimmer,slighted,sleepwalk,sleazeball,skokie,skeptic,sitarides,sistah,sipped,sindell,simpletons,simony,silkwood,silks,silken,sightless,sideboard,shuttles,shrugging,shrouds,showy,shoveled,shouldn'ta,shoplifters,shitstorm,sheeny,shapetype,shaming,shallows,shackle,shabbily,shabbas,seppuku,senility,semite,semiautomatic,selznick,secretarial,sebacio,scuzzy,scummy,scrutinized,scrunchie,scribbled,scotches,scolded,scissor,schlub,scavenging,scarin,scarfing,scallions,scald,savour,savored,saute,sarcoidosis,sandbar,saluted,salish,saith,sailboats,sagittarius,sacre,saccharine,sacamano,rushdie,rumpled,rumba,rulebook,rubbers,roughage,rotisserie,rootie,roofy,roofie,romanticize,rittle,ristorante,rippin,rinsing,ringin,rincess,rickety,reveling,retest,retaliating,restorative,reston,restaurateur,reshoots,resetting,resentments,reprogramming,repossess,repartee,renzo,remore,remitting,remeber,relaxants,rejuvenate,rejections,regenerated,refocus,referrals,reeno,recycles,recrimination,reclining,recanting,reattach,reassigning,razgul,raved,rattlesnakes,rattles,rashly,raquetball,ransack,raisinettes,raheem,radisson,radishes,raban,quoth,qumari,quints,quilts,quilting,quien,quarreled,purty,purblind,punchbowl,publically,psychotics,psychopaths,psychoanalyze,pruning,provasik,protectin,propping,proportioned,prophylactic,proofed,prompter,procreate,proclivities,prioritizing,prinze,pricked,press'll,presets,prescribes,preocupe,prejudicial,prefex,preconceived,precipice,pralines,pragmatist,powerbar,pottie,pottersville,potsie,potholes,posses,posies,portkey,porterhouse,pornographers,poring,poppycock,poppers,pomponi,pokin,poitier,podiatry,pleeze,pleadings,playbook,platelets,plane'arium,placebos,place'll,pistachios,pirated,pinochle,pineapples,pinafore,pimples,piggly,piddling,picon,pickpockets,picchu,physiologically,physic,phobic,philandering,phenomenally,pheasants,pewter,petticoat,petronis,petitioning,perturbed,perpetuating,permutat,perishable,perimeters,perfumed,percocet,per'sus,pepperjack,penalize,pelting,pellet,peignoir,pedicures,peckers,pecans,pawning,paulsson,pattycake,patrolmen,patois,pathos,pasted,parishioner,parcheesi,parachuting,papayas,pantaloons,palpitations,palantine,paintballing,overtired,overstress,oversensitive,overnights,overexcited,overanxious,overachiever,outwitted,outvoted,outnumber,outlast,outlander,out've,orphey,orchestrating,openers,ooooooo,okies,ohhhhhhhhh,ohhhhhhhh,ogling,offbeat,obsessively,obeyed,o'hana,o'bannon,o'bannion,numpce,nummy,nuked,nuances,nourishing,nosedive,norbu,nomlies,nomine,nixed,nihilist,nightshift,newmeat,neglectful,neediness,needin,naphthalene,nanocytes,nanite,naivete,n'yeah,mystifying,myhnegon,mutating,musing,mulled,muggy,muerto,muckraker,muchachos,mountainside,motherless,mosquitos,morphed,mopped,moodoo,moncho,mollem,moisturiser,mohicans,mocks,mistresses,misspent,misinterpretation,miscarry,minuses,mindee,mimes,millisecond,milked,mightn't,mightier,mierzwiak,microchips,meyerling,mesmerizing,mershaw,meecrob,medicate,meddled,mckinnons,mcgewan,mcdunnough,mcats,mbien,matzah,matriarch,masturbated,masselin,martialed,marlboros,marksmanship,marinate,marchin,manicured,malnourished,malign,majorek,magnon,magnificently,macking,machiavellian,macdougal,macchiato,macaws,macanaw,m'self,lydells,lusts,lucite,lubricants,lopper,lopped,loneliest,lonelier,lomez,lojack,loath,liquefy,lippy,limps,likin,lightness,liesl,liebchen,licious,libris,libation,lhamo,leotards,leanin,laxatives,lavished,latka,lanyard,lanky,landmines,lameness,laddies,lacerated,labored,l'amour,kreskin,kovitch,kournikova,kootchy,konoss,knknow,knickety,knackety,kmart,klicks,kiwanis,kissable,kindergartners,kilter,kidnet,kid'll,kicky,kickbacks,kickback,kholokov,kewpie,kendo,katra,kareoke,kafelnikov,kabob,junjun,jumba,julep,jordie,jondy,jolson,jenoff,jawbone,janitorial,janiro,ipecac,invigorated,intruded,intros,intravenously,interruptus,interrogations,interject,interfacing,interestin,insuring,instilled,insensitivity,inscrutable,inroads,innards,inlaid,injector,ingratitude,infuriates,infra,infliction,indelicate,incubators,incrimination,inconveniencing,inconsolable,incestuous,incas,incarcerate,inbreeding,impudence,impressionists,impeached,impassioned,imipenem,idling,idiosyncrasies,icebergs,hypotensive,hydrochloride,hushed,humus,humph,hummm,hulking,hubcaps,hubald,howya,howbout,how'll,housebroken,hotwire,hotspots,hotheaded,horrace,hopsfield,honto,honkin,honeymoons,homewrecker,hombres,hollers,hollerin,hoedown,hoboes,hobbling,hobble,hoarse,hinky,highlighters,hexes,heru'ur,hernias,heppleman,hell're,heighten,heheheheheh,heheheh,hedging,heckling,heckled,heavyset,heatshield,heathens,heartthrob,headpiece,hayseed,haveo,hauls,hasten,harridan,harpoons,hardens,harcesis,harbouring,hangouts,halkein,haleh,halberstam,hairnet,hairdressers,hacky,haaaa,h'yah,gusta,gushy,gurgling,guilted,gruel,grudging,grrrrrr,grosses,groomsmen,griping,gravest,gratified,grated,goulash,goopy,goona,goodly,godliness,godawful,godamn,glycerin,glutes,glowy,globetrotters,glimpsed,glenville,glaucoma,girlscout,giraffes,gilbey,gigglepuss,ghora,gestating,gelato,geishas,gearshift,gayness,gasped,gaslighting,garretts,garba,gablyczyck,g'head,fumigating,fumbling,fudged,fuckwad,fuck're,fuchsia,fretting,freshest,frenchies,freezers,fredrica,fraziers,fraidy,foxholes,fourty,fossilized,forsake,forfeits,foreclosed,foreal,footsies,florists,flopped,floorshow,floorboard,flinching,flecks,flaubert,flatware,flatulence,flatlined,flashdance,flail,flagging,fiver,fitzy,fishsticks,finetti,finelli,finagle,filko,fieldstone,fibber,ferrini,feedin,feasting,favore,fathering,farrouhk,farmin,fairytale,fairservice,factoid,facedown,fabled,eyeballin,extortionist,exquisitely,expedited,exorcise,existentialist,execs,exculpatory,exacerbate,everthing,eventuality,evander,euphoric,euphemisms,estamos,erred,entitle,enquiries,enormity,enfants,endive,encyclopedias,emulating,embittered,effortless,ectopic,ecirc,easely,earphones,earmarks,dweller,durslar,durned,dunois,dunking,dunked,dumdum,dullard,dudleys,druthers,druggist,drossos,drooled,driveways,drippy,dreamless,drawstring,drang,drainpipe,dozing,dotes,dorkface,doorknobs,doohickey,donnatella,doncha,domicile,dokos,dobermans,dizzying,divola,ditsy,distaste,disservice,dislodged,dislodge,disinherit,disinformation,discounting,dinka,dimly,digesting,diello,diddling,dictatorships,dictators,diagnostician,devours,devilishly,detract,detoxing,detours,detente,destructs,desecrated,derris,deplore,deplete,demure,demolitions,demean,delish,delbruck,delaford,degaulle,deftly,deformity,deflate,definatly,defector,decrypted,decontamination,decapitate,decanter,dardis,dampener,damme,daddy'll,dabbling,dabbled,d'etre,d'argent,d'alene,d'agnasti,czechoslovakian,cymbal,cyberdyne,cutoffs,cuticle,curvaceous,curiousity,crowing,crowed,croutons,cropped,criminy,crescentis,crashers,cranwell,coverin,courtrooms,countenance,cosmically,cosign,corroboration,coroners,cornflakes,copperpot,copperhead,copacetic,coordsize,convulsing,consults,conjures,congenial,concealer,compactor,commercialism,cokey,cognizant,clunkers,clumsily,clucking,cloves,cloven,cloths,clothe,clods,clocking,clings,clavicle,classless,clashing,clanking,clanging,clamping,civvies,citywide,circulatory,circuited,chronisters,chromic,choos,chloroformed,chillun,cheesed,chatterbox,chaperoned,channukah,cerebellum,centerpieces,centerfold,ceecee,ccedil,cavorting,cavemen,cauterized,cauldwell,catting,caterine,cassiopeia,carves,cartwheel,carpeted,carob,caressing,carelessly,careening,capricious,capitalistic,capillaries,candidly,camaraderie,callously,calfskin,caddies,buttholes,busywork,busses,burps,burgomeister,bunkhouse,bungchow,bugler,buffets,buffed,brutish,brusque,bronchitis,bromden,brolly,broached,brewskis,brewin,brean,breadwinner,brana,bountiful,bouncin,bosoms,borgnine,bopping,bootlegs,booing,bombosity,bolting,boilerplate,bluey,blowback,blouses,bloodsuckers,bloodstained,bloat,bleeth,blackface,blackest,blackened,blacken,blackballed,blabs,blabbering,birdbrain,bipartisanship,biodegradable,biltmore,bilked,big'uns,bidet,besotted,bernheim,benegas,bendiga,belushi,bellboys,belittling,behinds,begone,bedsheets,beckoning,beaute,beaudine,beastly,beachfront,bathes,batak,baser,baseballs,barbella,bankrolling,bandaged,baerly,backlog,backin,babying,azkaban,awwwww,aviary,authorizes,austero,aunty,attics,atreus,astounded,astonish,artemus,arses,arintero,appraiser,apathetic,anybody'd,anxieties,anticlimactic,antar,anglos,angleman,anesthetist,androscoggin,andolini,andale,amway,amuck,amniocentesis,amnesiac,americano,amara,alvah,altruism,alternapalooza,alphabetize,alpaca,allus,allergist,alexandros,alaikum,akimbo,agoraphobia,agides,aggrhh,aftertaste,adoptions,adjuster,addictions,adamantium,activator,accomplishes,aberrant,aaaaargh,aaaaaaaaaaaaa,a'ight,zzzzzzz,zucchini,zookeeper,zirconia,zippers,zequiel,zellary,zeitgeist,zanuck,zagat,you'n,ylang,yes'm,yenta,yecchh,yecch,yawns,yankin,yahdah,yaaah,y'got,xeroxed,wwooww,wristwatch,wrangled,wouldst,worthiness,worshiping,wormy,wormtail,wormholes,woosh,wollsten,wolfing,woefully,wobbling,wintry,wingding,windstorm,windowtext,wiluna,wilting,wilted,willick,willenholly,wildflowers,wildebeest,whyyy,whoppers,whoaa,whizzing,whizz,whitest,whistled,whist,whinny,wheelies,whazzup,whatwhatwhaaat,whato,whatdya,what'dya,whacks,wewell,wetsuit,welluh,weeps,waylander,wavin,wassail,wasnt,warneford,warbucks,waltons,wallbanger,waiving,waitwait,vowing,voucher,vornoff,vorhees,voldemort,vivre,vittles,vindaloo,videogames,vichyssoise,vicarious,vesuvius,verguenza,ven't,velveteen,velour,velociraptor,vastness,vasectomies,vapors,vanderhof,valmont,validates,valiantly,vacuums,usurp,usernum,us'll,urinals,unyielding,unvarnished,unturned,untouchables,untangled,unsecured,unscramble,unreturned,unremarkable,unpretentious,unnerstand,unmade,unimpeachable,unfashionable,underwrite,underlining,underling,underestimates,underappreciated,uncouth,uncork,uncommonly,unclog,uncircumcised,unchallenged,uncas,unbuttoning,unapproved,unamerican,unafraid,umpteen,umhmm,uhwhy,ughuh,typewriters,twitches,twitched,twirly,twinkling,twinges,twiddling,turners,turnabout,tumblin,tryed,trowel,trousseau,trivialize,trifles,tribianni,trenchcoat,trembled,traumatize,transitory,transients,transfuse,transcribing,tranq,trampy,traipsed,trainin,trachea,traceable,touristy,toughie,toscanini,tortola,tortilla,torreon,toreador,tommorrow,tollbooth,tollans,toidy,togas,tofurkey,toddling,toddies,toasties,toadstool,to've,tingles,timin,timey,timetables,tightest,thuggee,thrusting,thrombus,throes,thrifty,thornharts,thinnest,thicket,thetas,thesulac,tethered,testaburger,tersenadine,terrif,terdlington,tepui,temping,tector,taxidermy,tastebuds,tartlets,tartabull,tar'd,tantamount,tangy,tangles,tamer,tabula,tabletops,tabithia,szechwan,synthedyne,svenjolly,svengali,survivalists,surmise,surfboards,surefire,suprise,supremacists,suppositories,superstore,supercilious,suntac,sunburned,summercliff,sullied,sugared,suckle,subtleties,substantiated,subsides,subliminal,subhuman,strowman,stroked,stroganoff,streetlight,straying,strainer,straighter,straightener,stoplight,stirrups,stewing,stereotyping,stepmommy,stephano,stashing,starshine,stairwells,squatsie,squandering,squalid,squabbling,squab,sprinkling,spreader,spongy,spokesmen,splintered,spittle,spitter,spiced,spews,spendin,spect,spearchucker,spatulas,southtown,soused,soshi,sorter,sorrowful,sooth,some'in,soliloquy,soiree,sodomized,sobriki,soaping,snows,snowcone,snitching,snitched,sneering,snausages,snaking,smoothed,smoochies,smarten,smallish,slushy,slurring,sluman,slithers,slippin,sleuthing,sleeveless,skinless,skillfully,sketchbook,skagnetti,sista,sinning,singularly,sinewy,silverlake,siguto,signorina,sieve,sidearms,shying,shunning,shtud,shrieks,shorting,shortbread,shopkeepers,shmancy,shizzit,shitheads,shitfaced,shipmates,shiftless,shelving,shedlow,shavings,shatters,sharifa,shampoos,shallots,shafter,sha'nauc,sextant,serviceable,sepsis,senores,sendin,semis,semanski,selflessly,seinfelds,seers,seeps,seductress,secaucus,sealant,scuttling,scusa,scrunched,scissorhands,schreber,schmancy,scamps,scalloped,savoir,savagery,sarong,sarnia,santangel,samool,sallow,salino,safecracker,sadism,sacrilegious,sabrini,sabath,s'aright,ruttheimer,rudest,rubbery,rousting,rotarian,roslin,roomed,romari,romanica,rolltop,rolfski,rockettes,roared,ringleader,riffing,ribcage,rewired,retrial,reting,resuscitated,restock,resale,reprogrammed,replicant,repentant,repellant,repays,repainting,renegotiating,rendez,remem,relived,relinquishes,relearn,relaxant,rekindling,rehydrate,refueled,refreshingly,refilling,reexamine,reeseman,redness,redeemable,redcoats,rectangles,recoup,reciprocated,reassessing,realy,realer,reachin,re'kali,rawlston,ravages,rappaports,ramoray,ramming,raindrops,rahesh,radials,racists,rabartu,quiches,quench,quarreling,quaintly,quadrants,putumayo,put'em,purifier,pureed,punitis,pullout,pukin,pudgy,puddings,puckering,pterodactyl,psychodrama,psats,protestations,protectee,prosaic,propositioned,proclivity,probed,printouts,prevision,pressers,preset,preposition,preempt,preemie,preconceptions,prancan,powerpuff,potties,potpie,poseur,porthole,poops,pooping,pomade,polyps,polymerized,politeness,polisher,polack,pocketknife,poatia,plebeian,playgroup,platonically,platitude,plastering,plasmapheresis,plaids,placemats,pizzazz,pintauro,pinstripes,pinpoints,pinkner,pincer,pimento,pileup,pilates,pigmen,pieeee,phrased,photocopies,phoebes,philistines,philanderer,pheromone,phasers,pfeffernuesse,pervs,perspire,personify,perservere,perplexed,perpetrating,perkiness,perjurer,periodontist,perfunctory,perdido,percodan,pentameter,pentacle,pensive,pensione,pennybaker,pennbrooke,penhall,pengin,penetti,penetrates,pegnoir,peeve,peephole,pectorals,peckin,peaky,peaksville,paxcow,paused,patted,parkishoff,parkers,pardoning,paraplegic,paraphrasing,paperers,papered,pangs,paneling,palooza,palmed,palmdale,palatable,pacify,pacified,owwwww,oversexed,overrides,overpaying,overdrawn,overcompensate,overcomes,overcharged,outmaneuver,outfoxed,oughtn't,ostentatious,oshun,orthopedist,or'derves,ophthalmologist,operagirl,oozes,oooooooh,onesie,omnis,omelets,oktoberfest,okeydoke,ofthe,ofher,obstetrical,obeys,obeah,o'henry,nyquil,nyanyanyanyah,nuttin,nutsy,nutball,nurhachi,numbskull,nullifies,nullification,nucking,nubbin,nourished,nonspecific,noing,noinch,nohoho,nobler,nitwits,newsprint,newspaperman,newscaster,neuropathy,netherworld,neediest,navasky,narcissists,napped,nafta,mache,mykonos,mutilating,mutherfucker,mutha,mutates,mutate,musn't,murchy,multitasking,mujeeb,mudslinging,muckraking,mousetrap,mourns,mournful,motherf,mostro,morphing,morphate,moralistic,moochy,mooching,monotonous,monopolize,monocle,molehill,moland,mofet,mockup,mobilizing,mmmmmmm,mitzvahs,mistreating,misstep,misjudge,misinformation,misdirected,miscarriages,miniskirt,mindwarped,minced,milquetoast,miguelito,mightily,midstream,midriff,mideast,microbe,methuselah,mesdames,mescal,men'll,memma,megaton,megara,megalomaniac,meeee,medulla,medivac,meaninglessness,mcnuggets,mccarthyism,maypole,may've,mauve,mateys,marshack,markles,marketable,mansiere,manservant,manse,manhandling,mallomars,malcontent,malaise,majesties,mainsail,mailmen,mahandra,magnolias,magnified,magev,maelstrom,machu,macado,m'boy,m'appelle,lustrous,lureen,lunges,lumped,lumberyard,lulled,luego,lucks,lubricated,loveseat,loused,lounger,loski,lorre,loora,looong,loonies,loincloth,lofts,lodgers,lobbing,loaner,livered,liqueur,ligourin,lifesaving,lifeguards,lifeblood,liaisons,let'em,lesbianism,lence,lemonlyman,legitimize,leadin,lazars,lazarro,lawyering,laugher,laudanum,latrines,lations,laters,lapels,lakefront,lahit,lafortunata,lachrymose,l'italien,kwaini,kruczynski,kramerica,kowtow,kovinsky,korsekov,kopek,knowakowski,knievel,knacks,kiowas,killington,kickball,keyworth,keymaster,kevie,keveral,kenyons,keggers,keepsakes,kechner,keaty,kavorka,karajan,kamerev,kaggs,jujyfruit,jostled,jonestown,jokey,joists,jocko,jimmied,jiggled,jests,jenzen,jenko,jellyman,jedediah,jealitosis,jaunty,jarmel,jankle,jagoff,jagielski,jackrabbits,jabbing,jabberjaw,izzat,irresponsibly,irrepressible,irregularity,irredeemable,inuvik,intuitions,intubated,intimates,interminable,interloper,intercostal,instyle,instigate,instantaneously,ining,ingrown,ingesting,infusing,infringe,infinitum,infact,inequities,indubitably,indisputable,indescribably,indentation,indefinable,incontrovertible,inconsequential,incompletes,incoherently,inclement,incidentals,inarticulate,inadequacies,imprudent,improprieties,imprison,imprinted,impressively,impostors,importante,imperious,impale,immodest,immobile,imbedded,imbecilic,illegals,idn't,hysteric,hypotenuse,hygienic,hyeah,hushpuppies,hunhh,humpback,humored,hummed,humiliates,humidifier,huggy,huggers,huckster,hotbed,hosing,hosers,horsehair,homebody,homebake,holing,holies,hoisting,hogwallop,hocks,hobbits,hoaxes,hmmmmm,hisses,hippest,hillbillies,hilarity,heurh,herniated,hermaphrodite,hennifer,hemlines,hemline,hemery,helplessness,helmsley,hellhound,heheheheh,heeey,hedda,heartbeats,heaped,healers,headstart,headsets,headlong,hawkland,havta,haulin,harvey'll,hanta,hansom,hangnail,handstand,handrail,handoff,hallucinogen,hallor,halitosis,haberdashery,gypped,guy'll,gumbel,guerillas,guava,guardrail,grunther,grunick,groppi,groomer,grodin,gripes,grinds,grifters,gretch,greevey,greasing,graveyards,grandkid,grainy,gouging,gooney,googly,goldmuff,goldenrod,goingo,godly,gobbledygook,gobbledegook,glues,gloriously,glengarry,glassware,glamor,gimmicks,giggly,giambetti,ghoulish,ghettos,ghali,gether,geriatrics,gerbils,geosynchronous,georgio,gente,gendarme,gelbman,gazillionth,gayest,gauging,gastro,gaslight,gasbag,garters,garish,garas,gantu,gangy,gangly,gangland,galling,gadda,furrowed,funnies,funkytown,fugimotto,fudging,fuckeen,frustrates,froufrou,froot,fromberge,frizzies,fritters,frightfully,friendliest,freeloading,freelancing,freakazoid,fraternization,framers,fornication,fornicating,forethought,footstool,foisting,focussing,focking,flurries,fluffed,flintstones,fledermaus,flayed,flawlessly,flatters,flashbang,flapped,fishies,firmer,fireproof,firebug,fingerpainting,finessed,findin,financials,finality,fillets,fiercest,fiefdom,fibbing,fervor,fentanyl,fenelon,fedorchuk,feckless,feathering,faucets,farewells,fantasyland,fanaticism,faltered,faggy,faberge,extorting,extorted,exterminating,exhumation,exhilaration,exhausts,exfoliate,excels,exasperating,exacting,everybody'd,evasions,espressos,esmail,errrr,erratically,eroding,ernswiler,epcot,enthralled,ensenada,enriching,enrage,enhancer,endear,encrusted,encino,empathic,embezzle,emanates,electricians,eking,egomaniacal,egging,effacing,ectoplasm,eavesdropped,dummkopf,dugray,duchaisne,drunkard,drudge,droop,droids,drips,dripped,dribbles,drazens,downy,downsize,downpour,dosages,doppelganger,dopes,doohicky,dontcha,doneghy,divining,divest,diuretics,diuretic,distrustful,disrupts,dismemberment,dismember,disinfect,disillusionment,disheartening,discourteous,discotheque,discolored,dirtiest,diphtheria,dinks,dimpled,didya,dickwad,diatribes,diathesis,diabetics,deviants,detonates,detests,detestable,detaining,despondent,desecration,derision,derailing,deputized,depressors,dependant,dentures,denominators,demur,demonology,delts,dellarte,delacour,deflated,defib,defaced,decorators,deaqon,davola,datin,darwinian,darklighters,dandelions,dampened,damaskinos,dalrimple,d'peshu,d'hoffryn,d'astier,cynics,cutesy,cutaway,curmudgeon,curdle,culpability,cuisinart,cuffing,crypts,cryptid,crunched,crumblers,crudely,crosscheck,croon,crissake,crevasse,creswood,creepo,creases,creased,creaky,cranks,crabgrass,coveralls,couple'a,coughs,coslaw,corporeal,cornucopia,cornering,corks,cordoned,coolly,coolin,cookbooks,contrite,contented,constrictor,confound,confit,confiscating,condoned,conditioners,concussions,comprendo,comers,combustible,combusted,collingswood,coldness,coitus,codicil,coasting,clydesdale,cluttering,clunker,clunk,clumsiness,clotted,clothesline,clinches,clincher,cleverness,clench,clein,cleanses,claymores,clammed,chugging,chronically,christsakes,choque,chompers,chiseling,chirpy,chirp,chinks,chingachgook,chickenpox,chickadee,chewin,chessboard,chargin,chanteuse,chandeliers,chamdo,chagrined,chaff,certs,certainties,cerreno,cerebrum,censured,cemetary,caterwauling,cataclysmic,casitas,cased,carvel,carting,carrear,carolling,carolers,carnie,cardiogram,carbuncle,capulets,canines,candaules,canape,caldecott,calamitous,cadillacs,cachet,cabeza,cabdriver,buzzards,butai,businesswomen,bungled,bumpkins,bummers,bulldoze,buffybot,bubut,bubbies,brrrrr,brownout,brouhaha,bronzing,bronchial,broiler,briskly,briefcases,bricked,breezing,breeher,breakable,breadstick,bravenet,braved,brandies,brainwaves,brainiest,braggart,bradlee,boys're,boys'll,boys'd,boutonniere,bossed,bosomy,borans,boosts,bookshelves,bookends,boneless,bombarding,bollo,boinked,boink,bluest,bluebells,bloodshot,blockhead,blockbusters,blithely,blather,blankly,bladders,blackbeard,bitte,bippy,biogenetics,bilge,bigglesworth,bicuspids,beususe,betaseron,besmirch,bernece,bereavement,bentonville,benchley,benching,bembe,bellyaching,bellhops,belie,beleaguered,behrle,beginnin,begining,beenie,beefs,beechwood,becau,beaverhausen,beakers,bazillion,baudouin,barrytown,barringtons,barneys,barbs,barbers,barbatus,bankrupted,bailiffs,backslide,baby'd,baaad,b'fore,awwwk,aways,awakes,automatics,authenticate,aught,aubyn,attired,attagirl,atrophied,asystole,astroturf,assertiveness,artichokes,arquillians,aright,archenemy,appraise,appeased,antin,anspaugh,anesthetics,anaphylactic,amscray,ambivalence,amalio,alriiight,alphabetized,alpena,alouette,allora,alliteration,allenwood,allegiances,algerians,alcerro,alastor,ahaha,agitators,aforethought,advertises,admonition,adirondacks,adenoids,acupuncturist,acula,actuarial,activators,actionable,achingly,accusers,acclimated,acclimate,absurdly,absorbent,absolvo,absolutes,absences,abdomenizer,aaaaaaaaah,aaaaaaaaaa,a'right".split(","), male_names: "james,john,robert,michael,william,david,richard,charles,joseph,thomas,christopher,daniel,paul,mark,donald,george,kenneth,steven,edward,brian,ronald,anthony,kevin,jason,matthew,gary,timothy,jose,larry,jeffrey,frank,scott,eric,stephen,andrew,raymond,gregory,joshua,jerry,dennis,walter,patrick,peter,harold,douglas,henry,carl,arthur,ryan,roger,joe,juan,jack,albert,jonathan,justin,terry,gerald,keith,samuel,willie,ralph,lawrence,nicholas,roy,benjamin,bruce,brandon,adam,harry,fred,wayne,billy,steve,louis,jeremy,aaron,randy,eugene,carlos,russell,bobby,victor,ernest,phillip,todd,jesse,craig,alan,shawn,clarence,sean,philip,chris,johnny,earl,jimmy,antonio,danny,bryan,tony,luis,mike,stanley,leonard,nathan,dale,manuel,rodney,curtis,norman,marvin,vincent,glenn,jeffery,travis,jeff,chad,jacob,melvin,alfred,kyle,francis,bradley,jesus,herbert,frederick,ray,joel,edwin,don,eddie,ricky,troy,randall,barry,bernard,mario,leroy,francisco,marcus,micheal,theodore,clifford,miguel,oscar,jay,jim,tom,calvin,alex,jon,ronnie,bill,lloyd,tommy,leon,derek,darrell,jerome,floyd,leo,alvin,tim,wesley,dean,greg,jorge,dustin,pedro,derrick,dan,zachary,corey,herman,maurice,vernon,roberto,clyde,glen,hector,shane,ricardo,sam,rick,lester,brent,ramon,tyler,gilbert,gene,marc,reginald,ruben,brett,nathaniel,rafael,edgar,milton,raul,ben,cecil,duane,andre,elmer,brad,gabriel,ron,roland,jared,adrian,karl,cory,claude,erik,darryl,neil,christian,javier,fernando,clinton,ted,mathew,tyrone,darren,lonnie,lance,cody,julio,kurt,allan,clayton,hugh,max,dwayne,dwight,armando,felix,jimmie,everett,ian,ken,bob,jaime,casey,alfredo,alberto,dave,ivan,johnnie,sidney,byron,julian,isaac,clifton,willard,daryl,virgil,andy,salvador,kirk,sergio,seth,kent,terrance,rene,eduardo,terrence,enrique,freddie,stuart,fredrick,arturo,alejandro,joey,nick,luther,wendell,jeremiah,evan,julius,donnie,otis,trevor,luke,homer,gerard,doug,kenny,hubert,angelo,shaun,lyle,matt,alfonso,orlando,rex,carlton,ernesto,pablo,lorenzo,omar,wilbur,blake,horace,roderick,kerry,abraham,rickey,ira,andres,cesar,johnathan,malcolm,rudolph,damon,kelvin,rudy,preston,alton,archie,marco,pete,randolph,garry,geoffrey,jonathon,felipe,bennie,gerardo,dominic,loren,delbert,colin,guillermo,earnest,benny,noel,rodolfo,myron,edmund,salvatore,cedric,lowell,gregg,sherman,devin,sylvester,roosevelt,israel,jermaine,forrest,wilbert,leland,simon,irving,owen,rufus,woodrow,sammy,kristopher,levi,marcos,gustavo,jake,lionel,marty,gilberto,clint,nicolas,laurence,ismael,orville,drew,ervin,dewey,wilfred,josh,hugo,ignacio,caleb,tomas,sheldon,erick,frankie,darrel,rogelio,terence,alonzo,elias,bert,elbert,ramiro,conrad,noah,grady,phil,cornelius,lamar,rolando,clay,percy,bradford,merle,darin,amos,terrell,moses,irvin,saul,roman,darnell,randal,tommie,timmy,darrin,brendan,toby,van,abel,dominick,emilio,elijah,cary,domingo,aubrey,emmett,marlon,emanuel,jerald,edmond,emil,dewayne,otto,teddy,reynaldo,bret,jess,trent,humberto,emmanuel,stephan,louie,vicente,lamont,garland,micah,efrain,heath,rodger,demetrius,ethan,eldon,rocky,pierre,eli,bryce,antoine,robbie,kendall,royce,sterling,grover,elton,cleveland,dylan,chuck,damian,reuben,stan,leonardo,russel,erwin,benito,hans,monte,blaine,ernie,curt,quentin,agustin,jamal,devon,adolfo,tyson,wilfredo,bart,jarrod,vance,denis,damien,joaquin,harlan,desmond,elliot,darwin,gregorio,kermit,roscoe,esteban,anton,solomon,norbert,elvin,nolan,carey,rod,quinton,hal,brain,rob,elwood,kendrick,darius,moises,marlin,fidel,thaddeus,cliff,marcel,ali,raphael,bryon,armand,alvaro,jeffry,dane,joesph,thurman,ned,sammie,rusty,michel,monty,rory,fabian,reggie,kris,isaiah,gus,avery,loyd,diego,adolph,millard,rocco,gonzalo,derick,rodrigo,gerry,rigoberto,alphonso,rickie,noe,vern,elvis,bernardo,mauricio,hiram,donovan,basil,nickolas,scot,vince,quincy,eddy,sebastian,federico,ulysses,heriberto,donnell,denny,gavin,emery,romeo,jayson,dion,dante,clement,coy,odell,jarvis,bruno,issac,dudley,sanford,colby,carmelo,nestor,hollis,stefan,donny,linwood,beau,weldon,galen,isidro,truman,delmar,johnathon,silas,frederic,irwin,merrill,charley,marcelino,carlo,trenton,kurtis,aurelio,winfred,vito,collin,denver,leonel,emory,pasquale,mohammad,mariano,danial,landon,dirk,branden,adan,numbers,clair,buford,bernie,wilmer,emerson,zachery,jacques,errol,josue,edwardo,wilford,theron,raymundo,daren,tristan,robby,lincoln,jame,genaro,octavio,cornell,hung,arron,antony,herschel,alva,giovanni,garth,cyrus,cyril,ronny,stevie,lon,kennith,carmine,augustine,erich,chadwick,wilburn,russ,myles,jonas,mitchel,mervin,zane,jamel,lazaro,alphonse,randell,johnie,jarrett,ariel,abdul,dusty,luciano,seymour,scottie,eugenio,mohammed,arnulfo,lucien,ferdinand,thad,ezra,aldo,rubin,mitch,earle,abe,marquis,lanny,kareem,jamar,boris,isiah,emile,elmo,aron,leopoldo,everette,josef,eloy,dorian,rodrick,reinaldo,lucio,jerrod,weston,hershel,lemuel,lavern,burt,jules,gil,eliseo,ahmad,nigel,efren,antwan,alden,margarito,refugio,dino,osvaldo,les,deandre,normand,kieth,ivory,trey,norberto,napoleon,jerold,fritz,rosendo,milford,sang,deon,christoper,alfonzo,lyman,josiah,brant,wilton,rico,jamaal,dewitt,brenton,yong,olin,faustino,claudio,judson,gino,edgardo,alec,jarred,donn,trinidad,tad,porfirio,odis,lenard,chauncey,tod,mel,marcelo,kory,augustus,keven,hilario,bud,sal,orval,mauro,dannie,zachariah,olen,anibal,milo,jed,thanh,amado,lenny,tory,richie,horacio,brice,mohamed,delmer,dario,mac,jonah,jerrold,robt,hank,sung,rupert,rolland,kenton,damion,chi,antone,waldo,fredric,bradly,kip,burl,tyree,jefferey,ahmed,willy,stanford,oren,moshe,mikel,enoch,brendon,quintin,jamison,florencio,darrick,tobias,minh,hassan,giuseppe,demarcus,cletus,tyrell,lyndon,keenan,werner,theo,geraldo,columbus,chet,bertram,markus,huey,hilton,dwain,donte,tyron,omer,isaias,hipolito,fermin,chung,adalberto,jamey,teodoro,mckinley,maximo,raleigh,lawerence,abram,rashad,emmitt,daron,chong,samual,otha,miquel,eusebio,dong,domenic,darron,wilber,renato,hoyt,haywood,ezekiel,chas,florentino,elroy,clemente,arden,neville,edison,deshawn,carrol,shayne,nathanial,jordon,danilo,claud,sherwood,raymon,rayford,cristobal,ambrose,titus,hyman,felton,ezequiel,erasmo,lonny,milan,lino,jarod,herb,andreas,rhett,jude,douglass,cordell,oswaldo,ellsworth,virgilio,toney,nathanael,benedict,mose,hong,isreal,garret,fausto,arlen,zack,modesto,francesco,manual,gaylord,gaston,filiberto,deangelo,michale,granville,malik,zackary,tuan,nicky,cristopher,antione,malcom,korey,jospeh,colton,waylon,hosea,shad,santo,rudolf,rolf,renaldo,marcellus,lucius,kristofer,harland,arnoldo,rueben,leandro,kraig,jerrell,jeromy,hobert,cedrick,arlie,winford,wally,luigi,keneth,jacinto,graig,franklyn,edmundo,leif,jeramy,willian,vincenzo,shon,michal,lynwood,jere,elden,darell,broderick,alonso".split(",") }, adjacency_graphs_1 = { qwerty: { "!": ["`~", null, null, "2@", "qQ", null], '"': [";:", "[{", "]}", null, null, "/?"], "#": ["2@", null, null, "4$", "eE", "wW"], $: ["3#", null, null, "5%", "rR", "eE"], "%": ["4$", null, null, "6^", "tT", "rR"], "&": ["6^", null, null, "8*", "uU", "yY"], "'": [";:", "[{", "]}", null, null, "/?"], "(": ["8*", null, null, "0)", "oO", "iI"], ")": ["9(", null, null, "-_", "pP", "oO"], "*": ["7&", null, null, "9(", "iI", "uU"], "+": ["-_", null, null, null, "]}", "[{"], ",": ["mM", "kK", "lL", ".>", null, null], "-": ["0)", null, null, "=+", "[{", "pP"], ".": [",<", "lL", ";:", "/?", null, null], "/": [".>", ";:", `'"`, null, null, null], 0: ["9(", null, null, "-_", "pP", "oO"], 1: ["`~", null, null, "2@", "qQ", null], 2: ["1!", null, null, "3#", "wW", "qQ"], 3: ["2@", null, null, "4$", "eE", "wW"], 4: ["3#", null, null, "5%", "rR", "eE"], 5: ["4$", null, null, "6^", "tT", "rR"], 6: ["5%", null, null, "7&", "yY", "tT"], 7: ["6^", null, null, "8*", "uU", "yY"], 8: ["7&", null, null, "9(", "iI", "uU"], 9: ["8*", null, null, "0)", "oO", "iI"], ":": ["lL", "pP", "[{", `'"`, "/?", ".>"], ";": ["lL", "pP", "[{", `'"`, "/?", ".>"], "<": ["mM", "kK", "lL", ".>", null, null], "=": ["-_", null, null, null, "]}", "[{"], ">": [",<", "lL", ";:", "/?", null, null], "?": [".>", ";:", `'"`, null, null, null], "@": ["1!", null, null, "3#", "wW", "qQ"], A: [null, "qQ", "wW", "sS", "zZ", null], B: ["vV", "gG", "hH", "nN", null, null], C: ["xX", "dD", "fF", "vV", null, null], D: ["sS", "eE", "rR", "fF", "cC", "xX"], E: ["wW", "3#", "4$", "rR", "dD", "sS"], F: ["dD", "rR", "tT", "gG", "vV", "cC"], G: ["fF", "tT", "yY", "hH", "bB", "vV"], H: ["gG", "yY", "uU", "jJ", "nN", "bB"], I: ["uU", "8*", "9(", "oO", "kK", "jJ"], J: ["hH", "uU", "iI", "kK", "mM", "nN"], K: ["jJ", "iI", "oO", "lL", ",<", "mM"], L: ["kK", "oO", "pP", ";:", ".>", ",<"], M: ["nN", "jJ", "kK", ",<", null, null], N: ["bB", "hH", "jJ", "mM", null, null], O: ["iI", "9(", "0)", "pP", "lL", "kK"], P: ["oO", "0)", "-_", "[{", ";:", "lL"], Q: [null, "1!", "2@", "wW", "aA", null], R: ["eE", "4$", "5%", "tT", "fF", "dD"], S: ["aA", "wW", "eE", "dD", "xX", "zZ"], T: ["rR", "5%", "6^", "yY", "gG", "fF"], U: ["yY", "7&", "8*", "iI", "jJ", "hH"], V: ["cC", "fF", "gG", "bB", null, null], W: ["qQ", "2@", "3#", "eE", "sS", "aA"], X: ["zZ", "sS", "dD", "cC", null, null], Y: ["tT", "6^", "7&", "uU", "hH", "gG"], Z: [null, "aA", "sS", "xX", null, null], "[": ["pP", "-_", "=+", "]}", `'"`, ";:"], "\\": ["]}", null, null, null, null, null], "]": ["[{", "=+", null, "\\|", null, `'"`], "^": ["5%", null, null, "7&", "yY", "tT"], _: ["0)", null, null, "=+", "[{", "pP"], "`": [null, null, null, "1!", null, null], a: [null, "qQ", "wW", "sS", "zZ", null], b: ["vV", "gG", "hH", "nN", null, null], c: ["xX", "dD", "fF", "vV", null, null], d: ["sS", "eE", "rR", "fF", "cC", "xX"], e: ["wW", "3#", "4$", "rR", "dD", "sS"], f: ["dD", "rR", "tT", "gG", "vV", "cC"], g: ["fF", "tT", "yY", "hH", "bB", "vV"], h: ["gG", "yY", "uU", "jJ", "nN", "bB"], i: ["uU", "8*", "9(", "oO", "kK", "jJ"], j: ["hH", "uU", "iI", "kK", "mM", "nN"], k: ["jJ", "iI", "oO", "lL", ",<", "mM"], l: ["kK", "oO", "pP", ";:", ".>", ",<"], m: ["nN", "jJ", "kK", ",<", null, null], n: ["bB", "hH", "jJ", "mM", null, null], o: ["iI", "9(", "0)", "pP", "lL", "kK"], p: ["oO", "0)", "-_", "[{", ";:", "lL"], q: [null, "1!", "2@", "wW", "aA", null], r: ["eE", "4$", "5%", "tT", "fF", "dD"], s: ["aA", "wW", "eE", "dD", "xX", "zZ"], t: ["rR", "5%", "6^", "yY", "gG", "fF"], u: ["yY", "7&", "8*", "iI", "jJ", "hH"], v: ["cC", "fF", "gG", "bB", null, null], w: ["qQ", "2@", "3#", "eE", "sS", "aA"], x: ["zZ", "sS", "dD", "cC", null, null], y: ["tT", "6^", "7&", "uU", "hH", "gG"], z: [null, "aA", "sS", "xX", null, null], "{": ["pP", "-_", "=+", "]}", `'"`, ";:"], "|": ["]}", null, null, null, null, null], "}": ["[{", "=+", null, "\\|", null, `'"`], "~": [null, null, null, "1!", null, null] }, dvorak: { "!": ["`~", null, null, "2@", `'"`, null], '"': [null, "1!", "2@", ",<", "aA", null], "#": ["2@", null, null, "4$", ".>", ",<"], $: ["3#", null, null, "5%", "pP", ".>"], "%": ["4$", null, null, "6^", "yY", "pP"], "&": ["6^", null, null, "8*", "gG", "fF"], "'": [null, "1!", "2@", ",<", "aA", null], "(": ["8*", null, null, "0)", "rR", "cC"], ")": ["9(", null, null, "[{", "lL", "rR"], "*": ["7&", null, null, "9(", "cC", "gG"], "+": ["/?", "]}", null, "\\|", null, "-_"], ",": [`'"`, "2@", "3#", ".>", "oO", "aA"], "-": ["sS", "/?", "=+", null, null, "zZ"], ".": [",<", "3#", "4$", "pP", "eE", "oO"], "/": ["lL", "[{", "]}", "=+", "-_", "sS"], 0: ["9(", null, null, "[{", "lL", "rR"], 1: ["`~", null, null, "2@", `'"`, null], 2: ["1!", null, null, "3#", ",<", `'"`], 3: ["2@", null, null, "4$", ".>", ",<"], 4: ["3#", null, null, "5%", "pP", ".>"], 5: ["4$", null, null, "6^", "yY", "pP"], 6: ["5%", null, null, "7&", "fF", "yY"], 7: ["6^", null, null, "8*", "gG", "fF"], 8: ["7&", null, null, "9(", "cC", "gG"], 9: ["8*", null, null, "0)", "rR", "cC"], ":": [null, "aA", "oO", "qQ", null, null], ";": [null, "aA", "oO", "qQ", null, null], "<": [`'"`, "2@", "3#", ".>", "oO", "aA"], "=": ["/?", "]}", null, "\\|", null, "-_"], ">": [",<", "3#", "4$", "pP", "eE", "oO"], "?": ["lL", "[{", "]}", "=+", "-_", "sS"], "@": ["1!", null, null, "3#", ",<", `'"`], A: [null, `'"`, ",<", "oO", ";:", null], B: ["xX", "dD", "hH", "mM", null, null], C: ["gG", "8*", "9(", "rR", "tT", "hH"], D: ["iI", "fF", "gG", "hH", "bB", "xX"], E: ["oO", ".>", "pP", "uU", "jJ", "qQ"], F: ["yY", "6^", "7&", "gG", "dD", "iI"], G: ["fF", "7&", "8*", "cC", "hH", "dD"], H: ["dD", "gG", "cC", "tT", "mM", "bB"], I: ["uU", "yY", "fF", "dD", "xX", "kK"], J: ["qQ", "eE", "uU", "kK", null, null], K: ["jJ", "uU", "iI", "xX", null, null], L: ["rR", "0)", "[{", "/?", "sS", "nN"], M: ["bB", "hH", "tT", "wW", null, null], N: ["tT", "rR", "lL", "sS", "vV", "wW"], O: ["aA", ",<", ".>", "eE", "qQ", ";:"], P: [".>", "4$", "5%", "yY", "uU", "eE"], Q: [";:", "oO", "eE", "jJ", null, null], R: ["cC", "9(", "0)", "lL", "nN", "tT"], S: ["nN", "lL", "/?", "-_", "zZ", "vV"], T: ["hH", "cC", "rR", "nN", "wW", "mM"], U: ["eE", "pP", "yY", "iI", "kK", "jJ"], V: ["wW", "nN", "sS", "zZ", null, null], W: ["mM", "tT", "nN", "vV", null, null], X: ["kK", "iI", "dD", "bB", null, null], Y: ["pP", "5%", "6^", "fF", "iI", "uU"], Z: ["vV", "sS", "-_", null, null, null], "[": ["0)", null, null, "]}", "/?", "lL"], "\\": ["=+", null, null, null, null, null], "]": ["[{", null, null, null, "=+", "/?"], "^": ["5%", null, null, "7&", "fF", "yY"], _: ["sS", "/?", "=+", null, null, "zZ"], "`": [null, null, null, "1!", null, null], a: [null, `'"`, ",<", "oO", ";:", null], b: ["xX", "dD", "hH", "mM", null, null], c: ["gG", "8*", "9(", "rR", "tT", "hH"], d: ["iI", "fF", "gG", "hH", "bB", "xX"], e: ["oO", ".>", "pP", "uU", "jJ", "qQ"], f: ["yY", "6^", "7&", "gG", "dD", "iI"], g: ["fF", "7&", "8*", "cC", "hH", "dD"], h: ["dD", "gG", "cC", "tT", "mM", "bB"], i: ["uU", "yY", "fF", "dD", "xX", "kK"], j: ["qQ", "eE", "uU", "kK", null, null], k: ["jJ", "uU", "iI", "xX", null, null], l: ["rR", "0)", "[{", "/?", "sS", "nN"], m: ["bB", "hH", "tT", "wW", null, null], n: ["tT", "rR", "lL", "sS", "vV", "wW"], o: ["aA", ",<", ".>", "eE", "qQ", ";:"], p: [".>", "4$", "5%", "yY", "uU", "eE"], q: [";:", "oO", "eE", "jJ", null, null], r: ["cC", "9(", "0)", "lL", "nN", "tT"], s: ["nN", "lL", "/?", "-_", "zZ", "vV"], t: ["hH", "cC", "rR", "nN", "wW", "mM"], u: ["eE", "pP", "yY", "iI", "kK", "jJ"], v: ["wW", "nN", "sS", "zZ", null, null], w: ["mM", "tT", "nN", "vV", null, null], x: ["kK", "iI", "dD", "bB", null, null], y: ["pP", "5%", "6^", "fF", "iI", "uU"], z: ["vV", "sS", "-_", null, null, null], "{": ["0)", null, null, "]}", "/?", "lL"], "|": ["=+", null, null, null, null, null], "}": ["[{", null, null, null, "=+", "/?"], "~": [null, null, null, "1!", null, null] }, keypad: { "*": ["/", null, null, null, "-", "+", "9", "8"], "+": ["9", "*", "-", null, null, null, null, "6"], "-": ["*", null, null, null, null, null, "+", "9"], ".": ["0", "2", "3", null, null, null, null, null], "/": [null, null, null, null, "*", "9", "8", "7"], 0: [null, "1", "2", "3", ".", null, null, null], 1: [null, null, "4", "5", "2", "0", null, null], 2: ["1", "4", "5", "6", "3", ".", "0", null], 3: ["2", "5", "6", null, null, null, ".", "0"], 4: [null, null, "7", "8", "5", "2", "1", null], 5: ["4", "7", "8", "9", "6", "3", "2", "1"], 6: ["5", "8", "9", "+", null, null, "3", "2"], 7: [null, null, null, "/", "8", "5", "4", null], 8: ["7", null, "/", "*", "9", "6", "5", "4"], 9: ["8", "/", "*", "-", "+", null, "6", "5"] }, mac_keypad: { "*": ["/", null, null, null, null, null, "-", "9"], "+": ["6", "9", "-", null, null, null, null, "3"], "-": ["9", "/", "*", null, null, null, "+", "6"], ".": ["0", "2", "3", null, null, null, null, null], "/": ["=", null, null, null, "*", "-", "9", "8"], 0: [null, "1", "2", "3", ".", null, null, null], 1: [null, null, "4", "5", "2", "0", null, null], 2: ["1", "4", "5", "6", "3", ".", "0", null], 3: ["2", "5", "6", "+", null, null, ".", "0"], 4: [null, null, "7", "8", "5", "2", "1", null], 5: ["4", "7", "8", "9", "6", "3", "2", "1"], 6: ["5", "8", "9", "-", "+", null, "3", "2"], 7: [null, null, null, "=", "8", "5", "4", null], 8: ["7", null, "=", "/", "9", "6", "5", "4"], 9: ["8", "=", "/", "*", "-", "+", "6", "5"], "=": [null, null, null, null, "/", "9", "8", "7"] } };
adjacency_graphs$1 = adjacency_graphs_1, calc_average_degree = function(a) {
  var e2, i2, r2, n2, s2;
  for (r2 in e2 = 0, a)
    s2 = a[r2], e2 += function() {
      var e3, a2, i3;
      for (i3 = [], a2 = 0, e3 = s2.length; a2 < e3; a2++)
        (n2 = s2[a2]) && i3.push(n2);
      return i3;
    }().length;
  return e2 /= function() {
    var e3;
    for (i2 in e3 = [], a)
      a[i2], e3.push(i2);
    return e3;
  }().length;
}, MIN_GUESSES_BEFORE_GROWING_SEQUENCE = 1e4, MIN_SUBMATCH_GUESSES_SINGLE_CHAR = BRUTEFORCE_CARDINALITY = 10, MIN_SUBMATCH_GUESSES_MULTI_CHAR = 50;
var DATE_MAX_YEAR, DATE_MIN_YEAR, DATE_SPLITS, GRAPHS, L33T_TABLE, RANKED_DICTIONARIES, REGEXEN, adjacency_graphs$2, build_ranked_dict, frequency_lists$1, lst, name$1, scoring$1, scoring_1 = { nCk: function(e2, a) {
  var i2, r2, n2, s2;
  if (e2 < a)
    return 0;
  if (a === 0)
    return 1;
  for (i2 = r2 = n2 = 1, s2 = a; 1 <= s2 ? r2 <= s2 : s2 <= r2; i2 = 1 <= s2 ? ++r2 : --r2)
    n2 *= e2, n2 /= i2, e2 -= 1;
  return n2;
}, log10: function(e2) {
  return Math.log(e2) / Math.log(10);
}, log2: function(e2) {
  return Math.log(e2) / Math.log(2);
}, factorial: function(e2) {
  var a, i2, r2, n2;
  if (e2 < 2)
    return 1;
  for (a = 1, i2 = r2 = 2, n2 = e2; 2 <= n2 ? r2 <= n2 : n2 <= r2; i2 = 2 <= n2 ? ++r2 : --r2)
    a *= i2;
  return a;
}, most_guessable_match_sequence: function(l2, e2, c2) {
  var a, i2, r2, n2, s2, o2, t2, d2, m2, u2, h2, g2, p2, b2, y2, k2, f2, v2, w2, z2, j2, x, q2;
  for (c2 == null && (c2 = false), h2 = l2.length, u2 = function() {
    var e3, a2, i3;
    for (i3 = [], e3 = 0, a2 = h2; 0 <= a2 ? e3 < a2 : a2 < e3; 0 <= a2 ? ++e3 : --e3)
      i3.push([]);
    return i3;
  }(), g2 = 0, s2 = e2.length; g2 < s2; g2++)
    u2[(d2 = e2[g2]).j].push(d2);
  for (k2 = 0, o2 = u2.length; k2 < o2; k2++)
    u2[k2].sort(function(e3, a2) {
      return e3.i - a2.i;
    });
  for (p2 = { m: function() {
    var e3, a2, i3;
    for (a2 = [], i3 = 0, e3 = h2; 0 <= e3 ? i3 < e3 : e3 < i3; 0 <= e3 ? ++i3 : --i3)
      a2.push({});
    return a2;
  }(), pi: function() {
    var e3, a2, i3;
    for (a2 = [], i3 = 0, e3 = h2; 0 <= e3 ? i3 < e3 : e3 < i3; 0 <= e3 ? ++i3 : --i3)
      a2.push({});
    return a2;
  }(), g: function() {
    var e3, a2, i3;
    for (a2 = [], i3 = 0, e3 = h2; 0 <= e3 ? i3 < e3 : e3 < i3; 0 <= e3 ? ++i3 : --i3)
      a2.push({});
    return a2;
  }() }, q2 = this, j2 = function(e3, a2) {
    var i3, r3, n3, s3, o3, t3;
    for (r3 in s3 = e3.j, o3 = q2.estimate_guesses(e3, l2), 1 < a2 && (o3 *= p2.pi[e3.i - 1][a2 - 1]), n3 = q2.factorial(a2) * o3, c2 || (n3 += Math.pow(MIN_GUESSES_BEFORE_GROWING_SEQUENCE, a2 - 1)), t3 = p2.g[s3])
      if (i3 = t3[r3], !(a2 < r3) && i3 <= n3)
        return;
    return p2.g[s3][a2] = n3, p2.m[s3][a2] = e3, p2.pi[s3][a2] = o3;
  }, a = function(e3) {
    var i3, r3, n3, a2, s3, o3;
    for (d2 = m2(0, e3), j2(d2, 1), s3 = [], i3 = o3 = 1, a2 = e3; 1 <= a2 ? o3 <= a2 : a2 <= o3; i3 = 1 <= a2 ? ++o3 : --o3)
      d2 = m2(i3, e3), s3.push(function() {
        var e4, a3;
        for (r3 in a3 = [], e4 = p2.m[i3 - 1])
          n3 = e4[r3], r3 = parseInt(r3), n3.pattern !== "bruteforce" && a3.push(j2(d2, r3 + 1));
        return a3;
      }());
    return s3;
  }, m2 = function(e3, a2) {
    return { pattern: "bruteforce", token: l2.slice(e3, +a2 + 1 || 9e9), i: e3, j: a2 };
  }, z2 = function(e3) {
    var a2, i3, r3, n3, s3, o3, t3;
    for (i3 in o3 = [], n3 = e3 - 1, s3 = void 0, r3 = 1 / 0, t3 = p2.g[n3])
      (a2 = t3[i3]) < r3 && (s3 = i3, r3 = a2);
    for (; 0 <= n3; )
      d2 = p2.m[n3][s3], o3.unshift(d2), n3 = d2.i - 1, s3--;
    return o3;
  }, r2 = w2 = 0, f2 = h2; 0 <= f2 ? w2 < f2 : f2 < w2; r2 = 0 <= f2 ? ++w2 : --w2) {
    for (x = 0, t2 = (v2 = u2[r2]).length; x < t2; x++)
      if (0 < (d2 = v2[x]).i)
        for (n2 in p2.m[d2.i - 1])
          n2 = parseInt(n2), j2(d2, n2 + 1);
      else
        j2(d2, 1);
    a(r2);
  }
  return b2 = (y2 = z2(h2)).length, i2 = l2.length === 0 ? 1 : p2.g[h2 - 1][b2], { password: l2, guesses: i2, guesses_log10: this.log10(i2), sequence: y2 };
}, estimate_guesses: function(e2, a) {
  var i2, r2;
  return e2.guesses != null || (r2 = 1, e2.token.length < a.length && (r2 = e2.token.length === 1 ? MIN_SUBMATCH_GUESSES_SINGLE_CHAR : MIN_SUBMATCH_GUESSES_MULTI_CHAR), i2 = { bruteforce: this.bruteforce_guesses, dictionary: this.dictionary_guesses, spatial: this.spatial_guesses, repeat: this.repeat_guesses, sequence: this.sequence_guesses, regex: this.regex_guesses, date: this.date_guesses }[e2.pattern].call(this, e2), e2.guesses = Math.max(i2, r2), e2.guesses_log10 = this.log10(e2.guesses)), e2.guesses;
}, bruteforce_guesses: function(e2) {
  var a, i2;
  return (a = Math.pow(BRUTEFORCE_CARDINALITY, e2.token.length)) === Number.POSITIVE_INFINITY && (a = Number.MAX_VALUE), i2 = e2.token.length === 1 ? MIN_SUBMATCH_GUESSES_SINGLE_CHAR + 1 : MIN_SUBMATCH_GUESSES_MULTI_CHAR + 1, Math.max(a, i2);
}, repeat_guesses: function(e2) {
  return e2.base_guesses * e2.repeat_count;
}, sequence_guesses: function(e2) {
  var a, i2;
  return a = (i2 = e2.token.charAt(0)) === "a" || i2 === "A" || i2 === "z" || i2 === "Z" || i2 === "0" || i2 === "1" || i2 === "9" ? 4 : i2.match(/\d/) ? 10 : 26, e2.ascending || (a *= 2), a * e2.token.length;
}, MIN_YEAR_SPACE: 20, REFERENCE_YEAR: new Date().getFullYear(), regex_guesses: function(e2) {
  var a, i2;
  if (a = { alpha_lower: 26, alpha_upper: 26, alpha: 52, alphanumeric: 62, digits: 10, symbols: 33 }, e2.regex_name in a)
    return Math.pow(a[e2.regex_name], e2.token.length);
  switch (e2.regex_name) {
    case "recent_year":
      return i2 = Math.abs(parseInt(e2.regex_match[0]) - this.REFERENCE_YEAR), i2 = Math.max(i2, this.MIN_YEAR_SPACE);
  }
}, date_guesses: function(e2) {
  var a;
  return a = 365 * Math.max(Math.abs(e2.year - this.REFERENCE_YEAR), this.MIN_YEAR_SPACE), e2.separator && (a *= 4), a;
}, KEYBOARD_AVERAGE_DEGREE: calc_average_degree(adjacency_graphs$1.qwerty), KEYPAD_AVERAGE_DEGREE: calc_average_degree(adjacency_graphs$1.keypad), KEYBOARD_STARTING_POSITIONS: function() {
  var a;
  for (k$1 in a = [], adjacency_graphs$1.qwerty)
    a.push(k$1);
  return a;
}().length, KEYPAD_STARTING_POSITIONS: function() {
  var a;
  for (k$1 in a = [], adjacency_graphs$1.keypad)
    a.push(k$1);
  return a;
}().length, spatial_guesses: function(e2) {
  var a, i2, r2, n2, s2, o2, t2, l2, c2, d2, m2, u2, h2, g2, p2, b2, y2;
  for (n2 = (d2 = e2.graph) === "qwerty" || d2 === "dvorak" ? (g2 = this.KEYBOARD_STARTING_POSITIONS, this.KEYBOARD_AVERAGE_DEGREE) : (g2 = this.KEYPAD_STARTING_POSITIONS, this.KEYPAD_AVERAGE_DEGREE), s2 = 0, a = e2.token.length, b2 = e2.turns, o2 = l2 = 2, m2 = a; 2 <= m2 ? l2 <= m2 : m2 <= l2; o2 = 2 <= m2 ? ++l2 : --l2)
    for (t2 = c2 = 1, u2 = Math.min(b2, o2 - 1); 1 <= u2 ? c2 <= u2 : u2 <= c2; t2 = 1 <= u2 ? ++c2 : --c2)
      s2 += this.nCk(o2 - 1, t2 - 1) * g2 * Math.pow(n2, t2);
  if (e2.shifted_count)
    if (i2 = e2.shifted_count, r2 = e2.token.length - e2.shifted_count, i2 === 0 || r2 == 0)
      s2 *= 2;
    else {
      for (p2 = 0, o2 = y2 = 1, h2 = Math.min(i2, r2); 1 <= h2 ? y2 <= h2 : h2 <= y2; o2 = 1 <= h2 ? ++y2 : --y2)
        p2 += this.nCk(i2 + r2, o2);
      s2 *= p2;
    }
  return s2;
}, dictionary_guesses: function(e2) {
  var a;
  return e2.base_guesses = e2.rank, e2.uppercase_variations = this.uppercase_variations(e2), e2.l33t_variations = this.l33t_variations(e2), a = e2.reversed ? 2 : 1, e2.base_guesses * e2.uppercase_variations * e2.l33t_variations * a;
}, START_UPPER: /^[A-Z][^A-Z]+$/, END_UPPER: /^[^A-Z]+[A-Z]$/, ALL_UPPER: /^[^a-z]+$/, ALL_LOWER: /^[^A-Z]+$/, uppercase_variations: function(e2) {
  var a, i2, n2, r2, s2, o2, t2, l2, c2, d2, m2, u2;
  if ((u2 = e2.token).match(this.ALL_LOWER) || u2.toLowerCase() === u2)
    return 1;
  for (o2 = 0, s2 = (l2 = [this.START_UPPER, this.END_UPPER, this.ALL_UPPER]).length; o2 < s2; o2++)
    if (d2 = l2[o2], u2.match(d2))
      return 2;
  for (i2 = function() {
    var e3, a2, i3, r3;
    for (r3 = [], a2 = 0, e3 = (i3 = u2.split("")).length; a2 < e3; a2++)
      (n2 = i3[a2]).match(/[A-Z]/) && r3.push(n2);
    return r3;
  }().length, a = function() {
    var e3, a2, i3, r3;
    for (r3 = [], a2 = 0, e3 = (i3 = u2.split("")).length; a2 < e3; a2++)
      (n2 = i3[a2]).match(/[a-z]/) && r3.push(n2);
    return r3;
  }().length, m2 = 0, r2 = t2 = 1, c2 = Math.min(i2, a); 1 <= c2 ? t2 <= c2 : c2 <= t2; r2 = 1 <= c2 ? ++t2 : --t2)
    m2 += this.nCk(i2 + a, r2);
  return m2;
}, l33t_variations: function(e2) {
  var a, i2, r2, n2, s2, o2, t2, l2, c2, d2, m2, u2;
  if (!e2.l33t)
    return 1;
  for (d2 in u2 = 1, l2 = e2.sub)
    if (m2 = l2[d2], n2 = e2.token.toLowerCase().split(""), a = function() {
      var e3, a2, i3;
      for (i3 = [], a2 = 0, e3 = n2.length; a2 < e3; a2++)
        (r2 = n2[a2]) === d2 && i3.push(r2);
      return i3;
    }().length, i2 = function() {
      var e3, a2, i3;
      for (i3 = [], a2 = 0, e3 = n2.length; a2 < e3; a2++)
        (r2 = n2[a2]) === m2 && i3.push(r2);
      return i3;
    }().length, a === 0 || i2 === 0)
      u2 *= 2;
    else {
      for (t2 = 0, s2 = o2 = 1, c2 = Math.min(i2, a); 1 <= c2 ? o2 <= c2 : c2 <= o2; s2 = 1 <= c2 ? ++o2 : --o2)
        t2 += this.nCk(i2 + a, s2);
      u2 *= t2;
    }
  return u2;
} };
for (name$1 in adjacency_graphs$2 = adjacency_graphs_1, scoring$1 = scoring_1, build_ranked_dict = function(e2) {
  var a, i2, r2, n2;
  for (n2 = {}, a = 1, r2 = 0, i2 = e2.length; r2 < i2; r2++)
    n2[e2[r2]] = a, a += 1;
  return n2;
}, RANKED_DICTIONARIES = {}, frequency_lists$1 = frequency_lists_1)
  lst = frequency_lists$1[name$1], RANKED_DICTIONARIES[name$1] = build_ranked_dict(lst);
GRAPHS = { qwerty: adjacency_graphs$2.qwerty, dvorak: adjacency_graphs$2.dvorak, keypad: adjacency_graphs$2.keypad, mac_keypad: adjacency_graphs$2.mac_keypad }, L33T_TABLE = { a: ["4", "@"], b: ["8"], c: ["(", "{", "[", "<"], e: ["3"], g: ["6", "9"], i: ["1", "!", "|"], l: ["1", "|", "7"], o: ["0"], s: ["$", "5"], t: ["+", "7"], x: ["%"], z: ["2"] }, REGEXEN = { recent_year: /19\d\d|200\d|201\d/g }, DATE_MAX_YEAR = 2050, DATE_MIN_YEAR = 1e3, DATE_SPLITS = { 4: [[1, 2], [2, 3]], 5: [[1, 3], [2, 3]], 6: [[1, 2], [2, 4], [4, 5]], 7: [[1, 3], [2, 3], [4, 5], [4, 6]], 8: [[2, 4], [4, 6]] };
var feedback, scoring$2, feedback$1, matching$1, scoring$3, time, time_estimates$1, matching_1 = { empty: function(a) {
  var i2;
  return function() {
    var e2;
    for (i2 in e2 = [], a)
      e2.push(i2);
    return e2;
  }().length === 0;
}, extend: function(e2, a) {
  return e2.push.apply(e2, a);
}, translate: function(n2, s2) {
  var o2;
  return function() {
    var e2, a, i2, r2;
    for (r2 = [], a = 0, e2 = (i2 = n2.split("")).length; a < e2; a++)
      o2 = i2[a], r2.push(s2[o2] || o2);
    return r2;
  }().join("");
}, mod: function(e2, a) {
  return (e2 % a + a) % a;
}, sorted: function(e2) {
  return e2.sort(function(e3, a) {
    return e3.i - a.i || e3.j - a.j;
  });
}, omnimatch: function(e2) {
  var a, i2, r2, n2, s2;
  for (n2 = [], s2 = 0, a = (r2 = [this.dictionary_match, this.reverse_dictionary_match, this.l33t_match, this.spatial_match, this.repeat_match, this.sequence_match, this.regex_match, this.date_match]).length; s2 < a; s2++)
    i2 = r2[s2], this.extend(n2, i2.call(this, e2));
  return this.sorted(n2);
}, dictionary_match: function(e2, a) {
  var i2, r2, n2, s2, o2, t2, l2, c2, d2, m2, u2, h2, g2, p2;
  for (i2 in a == null && (a = RANKED_DICTIONARIES), o2 = [], s2 = e2.length, c2 = e2.toLowerCase(), a)
    for (m2 = a[i2], r2 = t2 = 0, u2 = s2; 0 <= u2 ? t2 < u2 : u2 < t2; r2 = 0 <= u2 ? ++t2 : --t2)
      for (n2 = l2 = h2 = r2, g2 = s2; h2 <= g2 ? l2 < g2 : g2 < l2; n2 = h2 <= g2 ? ++l2 : --l2)
        c2.slice(r2, +n2 + 1 || 9e9) in m2 && (d2 = m2[p2 = c2.slice(r2, +n2 + 1 || 9e9)], o2.push({ pattern: "dictionary", i: r2, j: n2, token: e2.slice(r2, +n2 + 1 || 9e9), matched_word: p2, rank: d2, dictionary_name: i2, reversed: false, l33t: false }));
  return this.sorted(o2);
}, reverse_dictionary_match: function(e2, a) {
  var i2, r2, n2, s2, o2, t2;
  for (a == null && (a = RANKED_DICTIONARIES), t2 = e2.split("").reverse().join(""), s2 = 0, i2 = (n2 = this.dictionary_match(t2, a)).length; s2 < i2; s2++)
    (r2 = n2[s2]).token = r2.token.split("").reverse().join(""), r2.reversed = true, o2 = [e2.length - 1 - r2.j, e2.length - 1 - r2.i], r2.i = o2[0], r2.j = o2[1];
  return this.sorted(n2);
}, set_user_input_dictionary: function(e2) {
  return RANKED_DICTIONARIES.user_inputs = build_ranked_dict(e2.slice());
}, relevant_l33t_subtable: function(e2, a) {
  var i2, r2, n2, s2, o2, t2, l2, c2, d2, m2;
  for (o2 = {}, s2 = 0, r2 = (t2 = e2.split("")).length; s2 < r2; s2++)
    i2 = t2[s2], o2[i2] = true;
  for (n2 in m2 = {}, a)
    d2 = a[n2], 0 < (l2 = function() {
      var e3, a2, i3;
      for (i3 = [], a2 = 0, e3 = d2.length; a2 < e3; a2++)
        (c2 = d2[a2]) in o2 && i3.push(c2);
      return i3;
    }()).length && (m2[n2] = l2);
  return m2;
}, enumerate_l33t_subs: function(y2) {
  var e2, k2, f2, c2, a, i2, r2, n2, s2, o2, t2, l2, d2, m2, v2;
  for (a = function() {
    var e3;
    for (c2 in e3 = [], y2)
      e3.push(c2);
    return e3;
  }(), v2 = [[]], k2 = function(e3) {
    var r3, a2, i3, n3, s3, o3, t3, l3;
    for (a2 = [], s3 = {}, o3 = 0, n3 = e3.length; o3 < n3; o3++)
      t3 = e3[o3], (r3 = function() {
        var e4, a3, i4;
        for (i4 = [], l3 = a3 = 0, e4 = t3.length; a3 < e4; l3 = ++a3)
          c2 = t3[l3], i4.push([c2, l3]);
        return i4;
      }()).sort(), (i3 = function() {
        var e4, a3, i4;
        for (i4 = [], l3 = a3 = 0, e4 = r3.length; a3 < e4; l3 = ++a3)
          c2 = r3[l3], i4.push(c2 + "," + l3);
        return i4;
      }().join("-")) in s3 || (s3[i3] = true, a2.push(t3));
    return a2;
  }, (f2 = function(e3) {
    var a2, i3, r3, n3, s3, o3, t3, l3, c3, d3, m3, u2, h2, g2, p2, b2;
    if (e3.length) {
      for (i3 = e3[0], h2 = e3.slice(1), t3 = [], l3 = 0, s3 = (m3 = y2[i3]).length; l3 < s3; l3++)
        for (n3 = m3[l3], c3 = 0, o3 = v2.length; c3 < o3; c3++) {
          for (a2 = -1, r3 = d3 = 0, u2 = (g2 = v2[c3]).length; 0 <= u2 ? d3 < u2 : u2 < d3; r3 = 0 <= u2 ? ++d3 : --d3)
            if (g2[r3][0] === n3) {
              a2 = r3;
              break;
            }
          a2 === -1 ? (b2 = g2.concat([[n3, i3]]), t3.push(b2)) : ((p2 = g2.slice(0)).splice(a2, 1), p2.push([n3, i3]), t3.push(g2), t3.push(p2));
        }
      return v2 = k2(t3), f2(h2);
    }
  })(a), m2 = [], s2 = 0, r2 = v2.length; s2 < r2; s2++) {
    for (d2 = {}, o2 = 0, n2 = (l2 = v2[s2]).length; o2 < n2; o2++)
      i2 = (t2 = l2[o2])[0], e2 = t2[1], d2[i2] = e2;
    m2.push(d2);
  }
  return m2;
}, l33t_match: function(e2, a, i2) {
  var r2, n2, s2, o2, t2, l2, c2, d2, m2, u2, h2, g2, p2, b2, y2, k2;
  for (a == null && (a = RANKED_DICTIONARIES), i2 == null && (i2 = L33T_TABLE), c2 = [], d2 = 0, s2 = (u2 = this.enumerate_l33t_subs(this.relevant_l33t_subtable(e2, i2))).length; d2 < s2 && (g2 = u2[d2], !this.empty(g2)); d2++)
    for (b2 = this.translate(e2, g2), m2 = 0, o2 = (h2 = this.dictionary_match(b2, a)).length; m2 < o2; m2++)
      if (t2 = h2[m2], (y2 = e2.slice(t2.i, +t2.j + 1 || 9e9)).toLowerCase() !== t2.matched_word) {
        for (p2 in l2 = {}, g2)
          r2 = g2[p2], y2.indexOf(p2) !== -1 && (l2[p2] = r2);
        t2.l33t = true, t2.token = y2, t2.sub = l2, t2.sub_display = function() {
          var e3;
          for (n2 in e3 = [], l2)
            k2 = l2[n2], e3.push(n2 + " -> " + k2);
          return e3;
        }().join(", "), c2.push(t2);
      }
  return this.sorted(c2.filter(function(e3) {
    return 1 < e3.token.length;
  }));
}, spatial_match: function(e2, a) {
  var i2, r2, n2;
  for (r2 in a == null && (a = GRAPHS), n2 = [], a)
    i2 = a[r2], this.extend(n2, this.spatial_match_helper(e2, i2, r2));
  return this.sorted(n2);
}, SHIFTED_RX: /[~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:"ZXCVBNM<>?]/, spatial_match_helper: function(e2, a, i2) {
  var r2, n2, s2, o2, t2, l2, c2, d2, m2, u2, h2, g2, p2, b2;
  for (h2 = [], c2 = 0; c2 < e2.length - 1; )
    for (d2 = c2 + 1, m2 = null, b2 = 0, p2 = i2 !== "qwerty" && i2 !== "dvorak" || !this.SHIFTED_RX.exec(e2.charAt(c2)) ? 0 : 1; ; ) {
      if (t2 = false, o2 = l2 = -1, n2 = a[e2.charAt(d2 - 1)] || [], d2 < e2.length) {
        for (s2 = e2.charAt(d2), g2 = 0, u2 = n2.length; g2 < u2; g2++)
          if (o2 += 1, (r2 = n2[g2]) && r2.indexOf(s2) !== -1) {
            t2 = true, l2 = o2, r2.indexOf(s2) === 1 && (p2 += 1), m2 !== l2 && (b2 += 1, m2 = l2);
            break;
          }
      }
      if (!t2) {
        2 < d2 - c2 && h2.push({ pattern: "spatial", i: c2, j: d2 - 1, token: e2.slice(c2, d2), graph: i2, turns: b2, shifted_count: p2 }), c2 = d2;
        break;
      }
      d2 += 1;
    }
  return h2;
}, repeat_match: function(e2) {
  var a, i2, r2, n2, s2, o2, t2, l2, c2, d2, m2, u2, h2, g2, p2;
  for (g2 = [], s2 = /(.+)\1+/g, d2 = /(.+?)\1+/g, m2 = /^(.+?)\1+$/, c2 = 0; c2 < e2.length && (s2.lastIndex = d2.lastIndex = c2, o2 = s2.exec(e2), u2 = d2.exec(e2), o2 != null); )
    n2 = o2[0].length > u2[0].length ? (h2 = o2, m2.exec(h2[0])[1]) : (h2 = u2)[1], t2 = (p2 = [h2.index, h2.index + h2[0].length - 1])[0], l2 = p2[1], r2 = (a = scoring$1.most_guessable_match_sequence(n2, this.omnimatch(n2))).sequence, i2 = a.guesses, g2.push({ pattern: "repeat", i: t2, j: l2, token: h2[0], base_token: n2, base_guesses: i2, base_matches: r2, repeat_count: h2[0].length / n2.length }), c2 = l2 + 1;
  return g2;
}, MAX_DELTA: 5, sequence_match: function(t2) {
  var e2, a, i2, r2, n2, s2, o2, l2, c2, d2;
  if (t2.length === 1)
    return [];
  for (d2 = this, c2 = function(e3, a2, i3) {
    var r3, n3, s3, o3;
    if ((1 < a2 - e3 || Math.abs(i3) === 1) && 0 < (r3 = Math.abs(i3)) && r3 <= d2.MAX_DELTA)
      return o3 = t2.slice(e3, +a2 + 1 || 9e9), s3 = /^[a-z]+$/.test(o3) ? (n3 = "lower", 26) : /^[A-Z]+$/.test(o3) ? (n3 = "upper", 26) : /^\d+$/.test(o3) ? (n3 = "digits", 10) : (n3 = "unicode", 26), l2.push({ pattern: "sequence", i: e3, j: a2, token: t2.slice(e3, +a2 + 1 || 9e9), sequence_name: n3, sequence_space: s3, ascending: 0 < i3 });
  }, l2 = [], a = 0, n2 = null, r2 = s2 = 1, o2 = t2.length; 1 <= o2 ? s2 < o2 : o2 < s2; r2 = 1 <= o2 ? ++s2 : --s2)
    e2 = t2.charCodeAt(r2) - t2.charCodeAt(r2 - 1), n2 == null && (n2 = e2), e2 !== n2 && (c2(a, i2 = r2 - 1, n2), a = i2, n2 = e2);
  return c2(a, t2.length - 1, n2), l2;
}, regex_match: function(e2, a) {
  var i2, r2, n2, s2;
  for (name$1 in a == null && (a = REGEXEN), i2 = [], a)
    for ((r2 = a[name$1]).lastIndex = 0; n2 = r2.exec(e2); )
      s2 = n2[0], i2.push({ pattern: "regex", token: s2, i: n2.index, j: n2.index + n2[0].length - 1, regex_name: name$1, regex_match: n2 });
  return this.sorted(i2);
}, date_match: function(e2) {
  var a, i2, r2, n2, s2, o2, t2, l2, c2, d2, m2, u2, h2, g2, p2, b2, y2, k2, f2, v2, w2, z2, j2, x, q2, _, E2, A2, S, R2, I2, T2, N2, C2;
  for (u2 = [], h2 = /^\d{4,8}$/, g2 = /^(\d{1,4})([\s\/\\_.-])(\d{1,2})\2(\d{1,4})$/, o2 = y2 = 0, w2 = e2.length - 4; 0 <= w2 ? y2 <= w2 : w2 <= y2; o2 = 0 <= w2 ? ++y2 : --y2)
    for (t2 = k2 = z2 = o2 + 3, j2 = o2 + 7; (z2 <= j2 ? k2 <= j2 : j2 <= k2) && !(t2 >= e2.length); t2 = z2 <= j2 ? ++k2 : --k2)
      if (C2 = e2.slice(o2, +t2 + 1 || 9e9), h2.exec(C2)) {
        for (r2 = [], f2 = 0, d2 = (x = DATE_SPLITS[C2.length]).length; f2 < d2; f2++)
          l2 = (q2 = x[f2])[0], c2 = q2[1], (s2 = this.map_ints_to_dmy([parseInt(C2.slice(0, l2)), parseInt(C2.slice(l2, c2)), parseInt(C2.slice(c2))])) != null && r2.push(s2);
        if (0 < r2.length) {
          for (a = r2[0], b2 = (p2 = function(e3) {
            return Math.abs(e3.year - scoring$1.REFERENCE_YEAR);
          })(r2[0]), v2 = 0, m2 = (_ = r2.slice(1)).length; v2 < m2; v2++)
            (n2 = p2(i2 = _[v2])) < b2 && (a = (E2 = [i2, n2])[0], b2 = E2[1]);
          u2.push({ pattern: "date", token: C2, i: o2, j: t2, separator: "", year: a.year, month: a.month, day: a.day });
        }
      }
  for (o2 = T2 = 0, A2 = e2.length - 6; 0 <= A2 ? T2 <= A2 : A2 <= T2; o2 = 0 <= A2 ? ++T2 : --T2)
    for (t2 = N2 = S = o2 + 5, R2 = o2 + 9; (S <= R2 ? N2 <= R2 : R2 <= N2) && !(t2 >= e2.length); t2 = S <= R2 ? ++N2 : --N2)
      C2 = e2.slice(o2, +t2 + 1 || 9e9), (I2 = g2.exec(C2)) != null && (s2 = this.map_ints_to_dmy([parseInt(I2[1]), parseInt(I2[3]), parseInt(I2[4])])) != null && u2.push({ pattern: "date", token: C2, i: o2, j: t2, separator: I2[2], year: s2.year, month: s2.month, day: s2.day });
  return this.sorted(u2.filter(function(e3) {
    var a2, i3, r3, n3;
    for (a2 = false, n3 = 0, i3 = u2.length; n3 < i3; n3++)
      if (e3 !== (r3 = u2[n3]) && r3.i <= e3.i && r3.j >= e3.j) {
        a2 = true;
        break;
      }
    return !a2;
  }));
}, map_ints_to_dmy: function(e2) {
  var a, i2, r2, n2, s2, o2, t2, l2, c2, d2, m2, u2, h2, g2, p2, b2;
  if (!(31 < e2[1] || e2[1] <= 0)) {
    for (o2 = p2 = l2 = t2 = 0, r2 = e2.length; o2 < r2; o2++) {
      if (99 < (i2 = e2[o2]) && i2 < DATE_MIN_YEAR || DATE_MAX_YEAR < i2)
        return;
      31 < i2 && (l2 += 1), 12 < i2 && (t2 += 1), i2 <= 0 && (p2 += 1);
    }
    if (!(2 <= l2 || t2 === 3 || 2 <= p2)) {
      for (c2 = 0, n2 = (d2 = [[e2[2], e2.slice(0, 2)], [e2[0], e2.slice(1, 3)]]).length; c2 < n2; c2++)
        if (b2 = (u2 = d2[c2])[0], g2 = u2[1], DATE_MIN_YEAR <= b2 && b2 <= DATE_MAX_YEAR)
          return (a = this.map_ints_to_dm(g2)) != null ? { year: b2, month: a.month, day: a.day } : void 0;
      for (m2 = 0, s2 = d2.length; m2 < s2; m2++)
        if (b2 = (h2 = d2[m2])[0], g2 = h2[1], (a = this.map_ints_to_dm(g2)) != null)
          return { year: b2 = this.two_to_four_digit_year(b2), month: a.month, day: a.day };
    }
  }
}, map_ints_to_dm: function(e2) {
  var a, i2, r2, n2, s2, o2;
  for (n2 = 0, i2 = (s2 = [e2, e2.slice().reverse()]).length; n2 < i2; n2++)
    if (a = (o2 = s2[n2])[0], r2 = o2[1], 1 <= a && a <= 31 && 1 <= r2 && r2 <= 12)
      return { day: a, month: r2 };
}, two_to_four_digit_year: function(e2) {
  return 99 < e2 ? e2 : 50 < e2 ? e2 + 1900 : e2 + 2e3;
} }, time_estimates_1 = { estimate_attack_times: function(e2) {
  var a, i2, r2, n2;
  for (r2 in a = {}, i2 = { online_throttling_100_per_hour: e2 / (100 / 3600), online_no_throttling_10_per_second: e2 / 10, offline_slow_hashing_1e4_per_second: e2 / 1e4, offline_fast_hashing_1e10_per_second: e2 / 1e10 })
    n2 = i2[r2], a[r2] = this.display_time(n2);
  return { crack_times_seconds: i2, crack_times_display: a, score: this.guesses_to_score(e2) };
}, guesses_to_score: function(e2) {
  return e2 < 1005 ? 0 : e2 < 1e6 + 5 ? 1 : e2 < 1e8 + 5 ? 2 : e2 < 1e10 + 5 ? 3 : 4;
}, display_time: function(e2) {
  var a, i2, r2, n2, s2, o2;
  return 100 * (o2 = 12 * (n2 = 2678400)), r2 = (s2 = e2 < 1 ? [null, "less than a second"] : e2 < 60 ? [a = Math.round(e2), a + " second"] : e2 < 3600 ? [a = Math.round(e2 / 60), a + " minute"] : e2 < 86400 ? [a = Math.round(e2 / 3600), a + " hour"] : e2 < n2 ? [a = Math.round(e2 / 86400), a + " day"] : e2 < o2 ? [a = Math.round(e2 / n2), a + " month"] : e2 < 321408e4 ? [a = Math.round(e2 / o2), a + " year"] : [null, "centuries"])[1], (i2 = s2[0]) != null && i2 !== 1 && (r2 += "s"), r2;
} }, feedback_1 = feedback = { default_feedback: { warning: "", suggestions: ["Use a few words, avoid common phrases", "No need for symbols, digits, or uppercase letters"] }, get_feedback: function(e2, a) {
  var i2, r2, n2, s2, o2, t2;
  if (a.length === 0)
    return this.default_feedback;
  if (2 < e2)
    return { warning: "", suggestions: [] };
  for (s2 = a[0], r2 = 0, n2 = (t2 = a.slice(1)).length; r2 < n2; r2++)
    (o2 = t2[r2]).token.length > s2.token.length && (s2 = o2);
  return i2 = "Add another word or two. Uncommon words are better.", (feedback = this.get_match_feedback(s2, a.length === 1)) != null ? (feedback.suggestions.unshift(i2), feedback.warning == null && (feedback.warning = "")) : feedback = { warning: "", suggestions: [i2] }, feedback;
}, get_match_feedback: function(e2, a) {
  switch (e2.pattern) {
    case "dictionary":
      return this.get_dictionary_match_feedback(e2, a);
    case "spatial":
      return e2.graph.toUpperCase(), { warning: e2.turns === 1 ? "Straight rows of keys are easy to guess" : "Short keyboard patterns are easy to guess", suggestions: ["Use a longer keyboard pattern with more turns"] };
    case "repeat":
      return { warning: e2.base_token.length === 1 ? 'Repeats like "aaa" are easy to guess' : 'Repeats like "abcabcabc" are only slightly harder to guess than "abc"', suggestions: ["Avoid repeated words and characters"] };
    case "sequence":
      return { warning: "Sequences like abc or 6543 are easy to guess", suggestions: ["Avoid sequences"] };
    case "regex":
      if (e2.regex_name === "recent_year")
        return { warning: "Recent years are easy to guess", suggestions: ["Avoid recent years", "Avoid years that are associated with you"] };
      break;
    case "date":
      return { warning: "Dates are often easy to guess", suggestions: ["Avoid dates and years that are associated with you"] };
  }
}, get_dictionary_match_feedback: function(e2, a) {
  var i2, r2, n2, s2;
  return n2 = e2.dictionary_name === "passwords" ? !a || e2.l33t || e2.reversed ? e2.guesses_log10 <= 4 ? "This is similar to a commonly used password" : void 0 : e2.rank <= 10 ? "This is a top-10 common password" : e2.rank <= 100 ? "This is a top-100 common password" : "This is a very common password" : e2.dictionary_name === "english_wikipedia" ? a ? "A word by itself is easy to guess" : void 0 : (i2 = e2.dictionary_name) === "surnames" || i2 === "male_names" || i2 === "female_names" ? a ? "Names and surnames by themselves are easy to guess" : "Common names and surnames are easy to guess" : "", r2 = [], (s2 = e2.token).match(scoring$2.START_UPPER) ? r2.push("Capitalization doesn't help very much") : s2.match(scoring$2.ALL_UPPER) && s2.toLowerCase() !== s2 && r2.push("All-uppercase is almost as easy to guess as all-lowercase"), e2.reversed && 4 <= e2.token.length && r2.push("Reversed words aren't much harder to guess"), e2.l33t && r2.push("Predictable substitutions like '@' instead of 'a' don't help very much"), { warning: n2, suggestions: r2 };
} };
matching$1 = matching_1, scoring$3 = scoring$2 = scoring_1, time_estimates$1 = time_estimates_1, feedback$1 = feedback_1, time = function() {
  return new Date().getTime();
};
var main = function(e2, a) {
  var i2, r2, n2, s2, o2, t2, l2, c2, d2, m2, u2;
  for (a == null && (a = []), m2 = time(), d2 = [], n2 = 0, s2 = a.length; n2 < s2; n2++)
    (l2 = typeof (i2 = a[n2])) != "string" && l2 != "number" && l2 != "boolean" || d2.push(i2.toString().toLowerCase());
  for (t2 in matching$1.set_user_input_dictionary(d2), o2 = matching$1.omnimatch(e2), (c2 = scoring$3.most_guessable_match_sequence(e2, o2)).calc_time = time() - m2, r2 = time_estimates$1.estimate_attack_times(c2.guesses))
    u2 = r2[t2], c2[t2] = u2;
  return c2.feedback = feedback$1.get_feedback(c2.score, c2.sequence), c2;
}, itemStyle = { flexBasis: 0, flexGrow: 1, position: "relative", maxWidth: "100%", width: "100%", height: 2 }, Item = function(e2) {
  var a = e2.score, i2 = e2.itemNum, r2 = e2.barColors, n2 = r2[0];
  return i2 <= a && (n2 = r2[a]), React__default.createElement("div", { style: __assign(__assign({}, itemStyle), { backgroundColor: n2 }) });
}, rootStyle = { position: "relative" }, wrapStyle = { display: "flex", alignItems: "center", margin: "5px 0 0" }, spaceStyle = { width: 4 }, descStyle = { margin: "5px 0 0", color: "#898792", fontSize: 14, textAlign: "right" }, PasswordStrengthBar = function(e2) {
  function a() {
    var l2 = e2 !== null && e2.apply(this, arguments) || this;
    return l2.state = { score: 0 }, l2.setScore = function() {
      var e3 = l2.props, a2 = e3.password, i2 = e3.minLength, r2 = e3.userInputs, n2 = e3.onChangeScore, s2 = null, o2 = 0, t2 = {};
      a2.length >= i2 && (s2 = main(a2, r2), o2 = s2.score, t2 = s2.feedback), l2.setState({ score: o2 }, function() {
        n2 && n2(o2, t2);
      });
    }, l2;
  }
  return __extends(a, e2), a.prototype.componentDidMount = function() {
    this.setScore();
  }, a.prototype.componentDidUpdate = function(e3) {
    var a2 = this.props.password;
    e3.password !== a2 && this.setScore();
  }, a.prototype.render = function() {
    var e3 = this.props, a2 = e3.className, i2 = e3.style, r2 = e3.scoreWordClassName, n2 = e3.scoreWordStyle, s2 = e3.password, o2 = e3.barColors, t2 = e3.scoreWords, l2 = e3.minLength, c2 = e3.shortScoreWord, d2 = this.state.score, m2 = s2.length >= l2 ? t2[d2] : c2;
    return React__default.createElement("div", { className: a2, style: __assign(__assign({}, rootStyle), i2) }, React__default.createElement("div", { style: wrapStyle }, [1, 2, 3, 4].map(function(e4) {
      return React__default.createElement(React.Fragment, { key: "password-strength-bar-item-" + e4 }, 1 < e4 && React__default.createElement("div", { style: spaceStyle }), React__default.createElement(Item, { score: d2, itemNum: e4, barColors: o2 }));
    })), React__default.createElement("p", { className: r2, style: __assign(__assign({}, descStyle), n2) }, m2));
  }, a.defaultProps = { className: void 0, style: void 0, scoreWordClassName: void 0, scoreWordStyle: void 0, password: "", userInputs: [], barColors: ["#ddd", "#ef4836", "#f6b44d", "#2b90ef", "#25c281"], scoreWords: ["weak", "weak", "okay", "good", "strong"], minLength: 4, shortScoreWord: "too short", onChangeScore: void 0 }, a;
}(React__default.Component);
var _default = dist.default = PasswordStrengthBar;
const PasswordInput = memo((_va) => {
  var _wa = _va, {
    autoComplete = AutoComplete.CurrentPassword,
    confirmPasswordLabel = "Confirm password",
    events = {},
    label = "Password",
    name: name2,
    showConfirmPassword = false,
    showPasswordStrength = false,
    validation = {}
  } = _wa, props = __objRest(_wa, [
    "autoComplete",
    "confirmPasswordLabel",
    "events",
    "label",
    "name",
    "showConfirmPassword",
    "showPasswordStrength",
    "validation"
  ]);
  const [password, setPassword] = useState();
  const [confirmPassword, setConfirmPassword] = useState();
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [showPasswordStrength && /* @__PURE__ */ jsx$2(_default, {
      className: "password-strength-label",
      password
    }), /* @__PURE__ */ jsx$2(TextInput, __spreadValues({
      autoComplete: showConfirmPassword ? AutoComplete.NewPassword : AutoComplete.CurrentPassword,
      events: __spreadValues({
        input: {
          onValueChange: ({
            validation: validation2,
            value: value2
          }) => {
            setPassword(value2);
          }
        }
      }, events),
      label,
      name: name2,
      type: InputType.Password,
      validation: __spreadProps(__spreadValues({}, validation), {
        conditions: __spreadValues({
          [x$4.IsRequired]: true,
          [x$4.HasLetterCount]: 2,
          [x$4.HasNumberCount]: 1,
          [x$4.HasSymbolCount]: 1,
          [x$4.HasUppercaseCount]: 1,
          [x$4.HasLowercaseCount]: 1,
          [x$4.IsLengthGreaterThanOrEqual]: 8,
          [x$4.IsLengthLessThanOrEqual]: 99
        }, validation.conditions)
      })
    }, props)), showConfirmPassword && /* @__PURE__ */ jsxs$1(InputRow, {
      margin: {
        top: Amount.More
      },
      children: [/* @__PURE__ */ jsx$2(InputLabel, {
        children: confirmPasswordLabel
      }), /* @__PURE__ */ jsx$2(TextInput, {
        autoComplete,
        events: {
          input: {
            onValueChange: ({
              validation: validation2,
              value: value2
            }) => {
              setConfirmPassword(value2);
            }
          }
        },
        type: InputType.Password,
        name: "confirmPassword",
        validation: {
          conditions: {
            [x$4.IsEqual]: password
          }
        }
      })]
    })]
  });
});
function getInputElementByFieldType(field) {
  if (field.system)
    return null;
  switch (field.type) {
    case na$1.Boolean:
      return /* @__PURE__ */ jsx$2(ToggleInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.CountryCode:
      return /* @__PURE__ */ jsx$2(CountryInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.CurrencyAmount:
      return /* @__PURE__ */ jsx$2(CurrencyAmountInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.CurrencyCode:
      return /* @__PURE__ */ jsx$2(CurrencyInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.Date:
      return /* @__PURE__ */ jsx$2(DateInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.DateTime:
      return /* @__PURE__ */ jsx$2(DateTimeInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.EmailAddress:
      return /* @__PURE__ */ jsx$2(EmailAddressInput, __spreadValues({
        autoComplete: field.autoComplete,
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.Image:
      return /* @__PURE__ */ jsx$2(ImageInput, __spreadValues(__spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field.properties), field));
    case na$1.JSON:
      return /* @__PURE__ */ jsx$2(PropertyEditor, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.LanguageCode:
      return /* @__PURE__ */ jsx$2(LanguageInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.LongText:
      return /* @__PURE__ */ jsx$2(LongTextInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.Menu:
      return /* @__PURE__ */ jsx$2(DropdownInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.Number:
      return /* @__PURE__ */ jsx$2(NumberInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.Password:
      return /* @__PURE__ */ jsx$2(PasswordInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.PhoneNumber:
      return /* @__PURE__ */ jsx$2(PhoneNumberInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.SSN:
      return /* @__PURE__ */ jsx$2(SSNInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.String:
      return /* @__PURE__ */ jsx$2(TextInput, __spreadValues({
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    case na$1.UUID:
      return /* @__PURE__ */ jsx$2(TextInput, __spreadValues({
        defaultValue: field.value,
        hidden: true,
        onChange: field.onChange
      }, field));
    case na$1.VerificationCode:
      return /* @__PURE__ */ jsx$2(VerificationCodeInput, __spreadValues({
        autoComplete: AutoComplete.OneTimeCode,
        defaultValue: field.value,
        onChange: field.onChange
      }, field));
    default:
      return /* @__PURE__ */ jsxs$1(Fragment, {
        children: [field.type, " is not supported at this time."]
      });
  }
}
const FormFields = memo((_xa) => {
  var _ya = _xa, {
    entity,
    fields,
    onChange
  } = _ya, props = __objRest(_ya, [
    "entity",
    "fields",
    "onChange"
  ]);
  var _a2;
  const [fieldValues, setFieldValues] = useState(Object.fromEntries(fields.map((field) => {
    var _a3, _b;
    return [field.name, __spreadProps(__spreadValues({}, field), {
      value: (_b = (_a3 = entity == null ? void 0 : entity[field.name]) != null ? _a3 : field.value) != null ? _b : field.defaultValue
    })];
  })));
  useEffect(() => {
    setFieldValues(Object.fromEntries(fields.map((field) => [field.name, __spreadValues(__spreadValues({}, field), fieldValues[field.name])])));
  }, [entity, fields]);
  useEffect(() => {
    if (onChange)
      onChange(fieldValues);
  }, [fieldValues]);
  useEffect(() => {
    setFieldValues(Object.fromEntries(fields.map((field) => {
      var _a3, _b;
      return [field.name, __spreadProps(__spreadValues({}, field), {
        value: (_b = (_a3 = entity == null ? void 0 : entity[field.name]) != null ? _a3 : field.value) != null ? _b : field.defaultValue
      })];
    })));
  }, [entity]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    className: "form-fields",
    borderRadius: {
      all: Amount.More
    }
  }, props), {
    children: (_a2 = Object.entries(fieldValues)) == null ? void 0 : _a2.map(([fieldName, field]) => {
      if (field.name === "created_date" || field.name === "updated_date")
        return null;
      return /* @__PURE__ */ jsx$2(InputRow, {
        style: {
          height: field.type === na$1.UUID ? 0 : void 0,
          marginBottom: field.type === na$1.UUID ? 0 : void 0,
          visibility: field.type === na$1.UUID ? "hidden" : "visible"
        },
        children: getInputElementByFieldType(__spreadProps(__spreadValues({}, field), {
          events: __spreadValues({
            input: {
              onValueChange: ({
                validation,
                value: value2
              }) => {
                setFieldValues(__spreadProps(__spreadValues({}, fieldValues), {
                  [field.name]: __spreadProps(__spreadValues({}, field), {
                    validation,
                    value: value2
                  })
                }));
              }
            }
          }, field.events)
        }))
      }, field.name);
    })
  }));
});
const Form = memo((_za) => {
  var _Aa = _za, {
    borderRadius = {},
    className = "",
    entity,
    events = {},
    fields,
    inProgress = false,
    model,
    name: name2,
    padding = Amount.None,
    submitButton
  } = _Aa, props = __objRest(_Aa, [
    "borderRadius",
    "className",
    "entity",
    "events",
    "fields",
    "inProgress",
    "model",
    "name",
    "padding",
    "submitButton"
  ]);
  const [fieldValues, setFieldValues] = useState({});
  const [validationProblems, setValidationProblems] = useState();
  const [isValidated, setValidated] = useState(false);
  const [requiresValidation, setRequiresValidation] = useState(false);
  const fieldValuesRef = useRef(fieldValues);
  const requiresValidationRef = useRef(requiresValidation);
  const validationProblemsRef = useRef(validationProblems);
  const isValidatedRef = useRef(isValidated);
  const submitButtonProps = __spreadValues({
    label: "Submit",
    type: ButtonType.Primary
  }, submitButton);
  const checkValidation = () => {
    var _a2, _b;
    let problems = [];
    let validationRequired = false;
    for (const field of Object.entries(fieldValues)) {
      if (field[1].validation) {
        validationRequired = true;
      }
      if ((_a2 = field[1].validation) == null ? void 0 : _a2.problems) {
        problems = [...problems, ...(_b = field[1].validation) == null ? void 0 : _b.problems];
      }
    }
    requiresValidationRef.current = validationRequired;
    setRequiresValidation(validationRequired);
    validationProblemsRef.current = problems;
    setValidationProblems(problems);
    const validated = Object.values(fieldValues).filter((field) => {
      var _a3;
      return field.validation && !((_a3 = field.validation) == null ? void 0 : _a3.validated);
    }).length === 0;
    isValidatedRef.current = validated;
    setValidated(validated);
  };
  useEffect(() => {
    checkValidation();
  }, [fieldValues]);
  const submitForm = (event) => {
    var _a2, _b;
    if (requiresValidationRef.current) {
      if ((_a2 = events.form) == null ? void 0 : _a2.onSubmitted)
        events.form.onSubmitted({
          fields: fieldValuesRef.current,
          validation: {
            problems: validationProblemsRef.current,
            validated: isValidatedRef.current
          }
        });
    } else {
      if ((_b = events.form) == null ? void 0 : _b.onSubmitted)
        events.form.onSubmitted({
          fields: fieldValuesRef.current
        });
    }
    event.preventDefault();
  };
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    as: "form",
    borderRadius,
    className: `${className} form`,
    events: {
      form: {
        onSubmit: submitForm
      }
    },
    id: name2,
    name: name2,
    padding
  }, props), {
    children: [fields && /* @__PURE__ */ jsx$2(FormFields, {
      entity,
      fields,
      onChange: (ff) => {
        fieldValuesRef.current = ff;
        setFieldValues(ff);
      }
    }), submitButton && /* @__PURE__ */ jsx$2(FormActions, {
      children: /* @__PURE__ */ jsx$2(Button$1, __spreadProps(__spreadValues({
        form: name2,
        states: {
          state: {
            disabled: requiresValidation && !isValidated || inProgress
          }
        }
      }, submitButtonProps), {
        children: submitButton.label
      }))
    })]
  }));
});
const ForgotPasswordForm = memo((_Ba) => {
  var _Ca = _Ba, {
    background = {},
    borderRadius = {},
    size = {},
    title = "Forgot your password?",
    showSignupLink,
    signUpLinkLabel,
    signInButtonLabel,
    forgotPasswordLinkLabel
  } = _Ca, props = __objRest(_Ca, [
    "background",
    "borderRadius",
    "size",
    "title",
    "showSignupLink",
    "signUpLinkLabel",
    "signInButtonLabel",
    "forgotPasswordLinkLabel"
  ]);
  const inProgress = useSelector((state) => {
    var _a2;
    return (_a2 = state.authentication) == null ? void 0 : _a2.in_progress;
  });
  const authError = useSelector((state) => {
    var _a2;
    return (_a2 = state.authentication) == null ? void 0 : _a2.error;
  });
  const startPasswordReset = async (email) => {
  };
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    className: "forgot-password-form",
    background: __spreadValues({
      color: BackgroundColors.Lighter
    }, background),
    borderRadius: __spreadValues({
      all: Amount.More
    }, borderRadius),
    padding: {
      all: Amount.Most
    },
    shadow: DepthShadow.Highest,
    size: __spreadValues({
      width: 420
    }, size)
  }, props), {
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      borderRadius: __spreadValues({
        all: Amount.More
      }, borderRadius),
      states: {
        state: {
          visible: inProgress != null ? inProgress : false
        }
      }
    }), /* @__PURE__ */ jsx$2(Title, {
      alignment: {
        horizontal: AlignHorizontal.Center
      },
      children: title
    }), /* @__PURE__ */ jsx$2(Paragraph, {
      alignment: {
        horizontal: AlignHorizontal.Center
      },
      lineHeight: Sizes.Small,
      padding: {
        all: Amount.More,
        bottom: Amount.Most
      },
      textAlign: TextAlign.Center,
      children: "Enter the email address associated with your account and we'll send instructions on how to reset your password."
    }), authError && /* @__PURE__ */ jsx$2(ErrorNotification, {
      label: authError.userFriendlyMessage
    }), /* @__PURE__ */ jsx$2(Form, {
      events: {
        form: {
          onSubmitted: ({
            fields,
            validation
          }) => {
            var _a2;
            if (validation && validation.validated || !validation) {
              startPasswordReset((_a2 = fields.emailAddress) == null ? void 0 : _a2.value);
            }
          }
        }
      },
      fields: [{
        autoComplete: AutoComplete.Username,
        label: "Email address",
        name: "emailAddress",
        type: na$1.EmailAddress,
        validation: {
          conditions: {
            [x$4.IsRequired]: true,
            [x$4.IsEmailAddress]: true
          }
        }
      }],
      name: "forgot-password-form",
      states: {
        state: {
          loading: inProgress
        }
      },
      submitButton: {
        alignment: {
          horizontal: AlignHorizontal.Center
        },
        borderRadius: {
          all: Amount.Least
        },
        label: "Send instructions",
        lineHeight: Sizes.Large,
        size: {
          fill: Fill.Both
        }
      }
    })]
  }));
});
const Link = memo((_Da) => {
  var _Ea = _Da, {
    children,
    textColor = TextColors.Link,
    textDecoration = {
      line: [TextDecorationLine.Underline],
      style: TextDecorationStyle.Solid
    },
    textSize = TextSize.Small,
    textWeight = TextWeight.Default,
    to
  } = _Ea, props = __objRest(_Ea, [
    "children",
    "textColor",
    "textDecoration",
    "textSize",
    "textWeight",
    "to"
  ]);
  return /* @__PURE__ */ jsx$2(Link$2, {
    to,
    style: {
      outline: "none"
    },
    children: /* @__PURE__ */ jsx$2(Text, __spreadProps(__spreadValues({
      textDecoration,
      textColor,
      textWeight
    }, props), {
      children
    }))
  });
});
const Small = memo((_Fa) => {
  var _Ga = _Fa, {
    as = "small",
    className = "",
    children,
    lineHeight = Sizes.Small,
    textColor = TextColors.Light,
    textSize = TextSize.Small
  } = _Ga, props = __objRest(_Ga, [
    "as",
    "className",
    "children",
    "lineHeight",
    "textColor",
    "textSize"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    as,
    className: `${className} small`,
    lineHeight,
    lineWrap: true,
    textColor,
    textSize
  }, props), {
    children
  }));
});
const LoginForm = memo((_Ha) => {
  var _Ia = _Ha, {
    background = {},
    borderRadius = {},
    onLoginSuccess,
    size = {},
    title = "Login",
    showSignupLink,
    signUpLinkLabel,
    signInButtonLabel,
    forgotPasswordLinkLabel
  } = _Ia, props = __objRest(_Ia, [
    "background",
    "borderRadius",
    "onLoginSuccess",
    "size",
    "title",
    "showSignupLink",
    "signUpLinkLabel",
    "signInButtonLabel",
    "forgotPasswordLinkLabel"
  ]);
  var _a2;
  const dispatch = useDispatch();
  const loginState = useSelector((s2) => {
    var _a3;
    return (_a3 = s2.user.authentication) == null ? void 0 : _a3.login;
  });
  const {
    error,
    inProgress,
    success
  } = loginState;
  useEffect(() => {
    if (onLoginSuccess && success) {
      onLoginSuccess();
    }
  }, [success]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    className: "login-form",
    background: __spreadValues({
      color: BackgroundColors.Lighter
    }, background),
    borderRadius: __spreadValues({
      all: Amount.More
    }, borderRadius),
    padding: {
      all: Amount.Most,
      bottom: Amount.None
    },
    shadow: DepthShadow.Highest,
    size: __spreadValues({
      width: 420
    }, size)
  }, props), {
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      borderRadius,
      states: {
        state: {
          visible: inProgress
        }
      }
    }), /* @__PURE__ */ jsx$2(Title, {
      alignment: {
        horizontal: AlignHorizontal.Center
      },
      children: title
    }), /* @__PURE__ */ jsx$2(NotificationLabel, {
      alignment: {
        horizontal: AlignHorizontal.Center,
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      },
      margin: {
        bottom: Amount.Default
      },
      showOrb: false,
      textAlign: TextAlign.Center,
      children: /* @__PURE__ */ jsxs$1(Paragraph, {
        lineHeight: Sizes.Small,
        textAlign: TextAlign.Center,
        children: ["Don't have an account yet?", /* @__PURE__ */ jsx$2("br", {}), /* @__PURE__ */ jsx$2(Link, {
          lineHeight: Sizes.Small,
          to: "/signup",
          states: {
            hovered: {
              textDecoration: {
                line: TextDecorationLine.Underline
              }
            }
          },
          textDecoration: {
            line: TextDecorationLine.Underline
          },
          children: "Sign up for free!"
        })]
      })
    }), error && /* @__PURE__ */ jsx$2(ErrorNotification, {
      label: (_a2 = error == null ? void 0 : error.friendlyMessage) != null ? _a2 : "An error occurred unfortunately."
    }), /* @__PURE__ */ jsx$2(Form, {
      events: {
        form: {
          onSubmitted: ({
            fields,
            validation
          }) => {
            var _a3, _b;
            if (validation && validation.validated || !validation) {
              dispatch(login({
                password: (_a3 = fields.password) == null ? void 0 : _a3.value,
                username: (_b = fields.username) == null ? void 0 : _b.value
              }));
            }
          }
        }
      },
      fields: [{
        autoComplete: AutoComplete.Username,
        label: "Email address",
        name: "username",
        type: na$1.EmailAddress,
        validation: {
          conditions: {
            [x$4.IsRequired]: true
          }
        }
      }, {
        autoComplete: AutoComplete.CurrentPassword,
        label: "Password",
        name: "password",
        type: na$1.Password,
        validation: {
          conditions: {
            [x$4.IsRequired]: true,
            [x$4.HasLetterCount]: 2,
            [x$4.HasNumberCount]: 1,
            [x$4.HasSymbolCount]: 1,
            [x$4.HasUppercaseCount]: 1,
            [x$4.HasLowercaseCount]: 1,
            [x$4.IsLengthGreaterThanOrEqual]: 8,
            [x$4.IsLengthLessThanOrEqual]: 99
          }
        }
      }],
      inProgress,
      name: "login-form",
      submitButton: {
        alignment: {
          horizontal: AlignHorizontal.Center
        },
        borderRadius: {
          all: Amount.Least
        },
        label: "Login",
        lineHeight: Sizes.Large,
        size: {
          fill: Fill.Both
        },
        textAlign: TextAlign.Center
      }
    }), /* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Center,
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      },
      padding: {
        all: Amount.Default
      },
      children: /* @__PURE__ */ jsx$2(Small, {
        textAlign: TextAlign.Center,
        children: /* @__PURE__ */ jsx$2(Link, {
          states: {
            hovered: {
              textDecoration: {
                line: TextDecorationLine.Underline
              }
            }
          },
          textDecoration: {
            line: TextDecorationLine.Underline
          },
          to: "/forgot-password",
          children: "Forgot your password?"
        })
      })
    })]
  }));
});
const SignupForm = memo((_Ja) => {
  var _Ka = _Ja, {
    background = {},
    borderRadius = {},
    onSignupSuccess,
    size = {},
    title = "Sign up"
  } = _Ka, props = __objRest(_Ka, [
    "background",
    "borderRadius",
    "onSignupSuccess",
    "size",
    "title"
  ]);
  var _a2;
  const dispatch = useDispatch();
  const signUpState = useSelector((state) => {
    var _a3;
    return (_a3 = state.user.authentication) == null ? void 0 : _a3.signup;
  });
  const {
    error,
    inProgress,
    success
  } = signUpState;
  useEffect(() => {
    if (onSignupSuccess && success) {
      onSignupSuccess({
        userId: signUpState.userId
      });
    }
  }, [success]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    className: "signup-form",
    background: __spreadValues({
      color: BackgroundColors.Lighter
    }, background),
    borderRadius: __spreadValues({
      all: Amount.More
    }, borderRadius),
    padding: {
      all: Amount.Most,
      bottom: Amount.None
    },
    shadow: DepthShadow.Highest,
    size: __spreadValues({
      width: 420
    }, size)
  }, props), {
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      borderRadius,
      states: {
        state: {
          visible: inProgress
        }
      }
    }), /* @__PURE__ */ jsx$2(Title, {
      alignment: {
        horizontal: AlignHorizontal.Center
      },
      textAlign: TextAlign.Center,
      children: title
    }), /* @__PURE__ */ jsx$2(NotificationLabel, {
      alignment: {
        horizontal: AlignHorizontal.Center,
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      },
      margin: {
        all: Amount.Most,
        bottom: Amount.All
      },
      showOrb: false,
      textAlign: TextAlign.Center,
      children: /* @__PURE__ */ jsxs$1(Paragraph, {
        lineHeight: Sizes.Small,
        textAlign: TextAlign.Center,
        children: ["Already have an account?", /* @__PURE__ */ jsx$2("br", {}), /* @__PURE__ */ jsx$2(Link, {
          lineHeight: Sizes.Small,
          states: {
            hovered: {
              textDecoration: {
                line: TextDecorationLine.Underline
              }
            }
          },
          textDecoration: {
            line: TextDecorationLine.Underline
          },
          to: "/login",
          children: "Sign in"
        })]
      })
    }), error && /* @__PURE__ */ jsx$2(ErrorNotification, {
      label: (_a2 = error == null ? void 0 : error.friendlyMessage) != null ? _a2 : "An error occurred unfortunately."
    }), /* @__PURE__ */ jsx$2(Form, {
      events: {
        form: {
          onSubmitted: ({
            fields,
            validation
          }) => {
            var _a3, _b, _c, _d;
            if (validation && validation.validated || !validation)
              dispatch(signUp({
                firstName: (_a3 = fields.firstName) == null ? void 0 : _a3.value,
                lastName: (_b = fields.lastName) == null ? void 0 : _b.value,
                password: (_c = fields.password) == null ? void 0 : _c.value,
                username: (_d = fields.username) == null ? void 0 : _d.value
              }));
          }
        }
      },
      fields: [{
        autoComplete: AutoComplete.GivenName,
        label: "First name",
        name: "firstName",
        type: na$1.String,
        validation: {
          conditions: {
            [x$4.IsRequired]: true
          }
        }
      }, {
        autoComplete: AutoComplete.FamilyName,
        label: "Last name",
        name: "lastName",
        type: na$1.String,
        validation: {
          conditions: {
            [x$4.IsRequired]: true
          }
        }
      }, {
        autoComplete: AutoComplete.Username,
        label: "Email address",
        name: "username",
        type: na$1.EmailAddress,
        validation: {
          conditions: {
            [x$4.IsRequired]: true,
            [x$4.IsEmailAddress]: true
          }
        }
      }, {
        autoComplete: AutoComplete.NewPassword,
        label: "Password",
        name: "password",
        type: na$1.Password,
        validation: {
          conditions: {
            [x$4.IsRequired]: true,
            [x$4.HasLetterCount]: 2,
            [x$4.HasNumberCount]: 1,
            [x$4.HasSymbolCount]: 1,
            [x$4.HasUppercaseCount]: 1,
            [x$4.HasLowercaseCount]: 1,
            [x$4.IsLengthGreaterThanOrEqual]: 8,
            [x$4.IsLengthLessThanOrEqual]: 99
          }
        }
      }],
      inProgress,
      name: "signup-form",
      submitButton: {
        alignment: {
          horizontal: AlignHorizontal.Center
        },
        borderRadius: {
          all: Amount.Least
        },
        label: "Sign up",
        lineHeight: Sizes.Large,
        size: {
          fill: Fill.Both
        }
      }
    }), /* @__PURE__ */ jsx$2(Container$8, {
      padding: {
        all: Amount.Most
      },
      children: /* @__PURE__ */ jsxs$1(Small, {
        textAlign: TextAlign.Center,
        children: ['By clicking the "Sign up" button you agree to the', " ", /* @__PURE__ */ jsx$2(Link, {
          states: {
            hovered: {
              textDecoration: {
                line: TextDecorationLine.Underline
              }
            }
          },
          textDecoration: {
            line: TextDecorationLine.Underline
          },
          to: "/privacy",
          children: "Privacy Policy"
        }), "."]
      })
    })]
  }));
});
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
function _defineProperty$1(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function ownKeys$2(object2, enumerableOnly) {
  var keys2 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread2(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    if (i2 % 2) {
      ownKeys$2(Object(source), true).forEach(function(key) {
        _defineProperty$1(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
var usePrevious = function usePrevious2(value2) {
  var ref = e$3.useRef(value2);
  e$3.useEffect(function() {
    ref.current = value2;
  }, [value2]);
  return ref.current;
};
var isUnknownObject = function isUnknownObject2(raw) {
  return raw !== null && _typeof(raw) === "object";
};
var PLAIN_OBJECT_STR = "[object Object]";
var isEqual = function isEqual2(left, right) {
  if (!isUnknownObject(left) || !isUnknownObject(right)) {
    return left === right;
  }
  var leftArray = Array.isArray(left);
  var rightArray = Array.isArray(right);
  if (leftArray !== rightArray)
    return false;
  var leftPlainObject = Object.prototype.toString.call(left) === PLAIN_OBJECT_STR;
  var rightPlainObject = Object.prototype.toString.call(right) === PLAIN_OBJECT_STR;
  if (leftPlainObject !== rightPlainObject)
    return false;
  if (!leftPlainObject && !leftArray)
    return left === right;
  var leftKeys = Object.keys(left);
  var rightKeys = Object.keys(right);
  if (leftKeys.length !== rightKeys.length)
    return false;
  var keySet = {};
  for (var i2 = 0; i2 < leftKeys.length; i2 += 1) {
    keySet[leftKeys[i2]] = true;
  }
  for (var _i2 = 0; _i2 < rightKeys.length; _i2 += 1) {
    keySet[rightKeys[_i2]] = true;
  }
  var allKeys = Object.keys(keySet);
  if (allKeys.length !== leftKeys.length) {
    return false;
  }
  var l2 = left;
  var r2 = right;
  var pred = function pred2(key) {
    return isEqual2(l2[key], r2[key]);
  };
  return allKeys.every(pred);
};
var extractAllowedOptionsUpdates = function extractAllowedOptionsUpdates2(options, prevOptions, immutableKeys) {
  if (!isUnknownObject(options)) {
    return null;
  }
  return Object.keys(options).reduce(function(newOptions, key) {
    var isUpdated = !isUnknownObject(prevOptions) || !isEqual(options[key], prevOptions[key]);
    if (immutableKeys.includes(key)) {
      if (isUpdated) {
        console.warn("Unsupported prop change: options.".concat(key, " is not a mutable property."));
      }
      return newOptions;
    }
    if (!isUpdated) {
      return newOptions;
    }
    return _objectSpread2(_objectSpread2({}, newOptions || {}), {}, _defineProperty$1({}, key, options[key]));
  }, null);
};
var ElementsContext = /* @__PURE__ */ e$3.createContext(null);
ElementsContext.displayName = "ElementsContext";
var parseElementsContext = function parseElementsContext2(ctx2, useCase) {
  if (!ctx2) {
    throw new Error("Could not find Elements context; You need to wrap the part of your app that ".concat(useCase, " in an <Elements> provider."));
  }
  return ctx2;
};
({
  stripe: PropTypes.any,
  options: PropTypes.object
});
var useElementsContextWithUseCase = function useElementsContextWithUseCase2(useCaseMessage) {
  var ctx2 = e$3.useContext(ElementsContext);
  return parseElementsContext(ctx2, useCaseMessage);
};
var useElements = function useElements2() {
  var _useElementsContextWi = useElementsContextWithUseCase("calls useElements()"), elements = _useElementsContextWi.elements;
  return elements;
};
var useStripe = function useStripe2() {
  var _useElementsContextWi2 = useElementsContextWithUseCase("calls useStripe()"), stripe = _useElementsContextWi2.stripe;
  return stripe;
};
({
  children: PropTypes.func.isRequired
});
var useCallbackReference = function useCallbackReference2(cb) {
  var ref = e$3.useRef(cb);
  e$3.useEffect(function() {
    ref.current = cb;
  }, [cb]);
  return function() {
    if (ref.current) {
      ref.current.apply(ref, arguments);
    }
  };
};
var noop$2 = function noop() {
};
var capitalized = function capitalized2(str2) {
  return str2.charAt(0).toUpperCase() + str2.slice(1);
};
var createElementComponent = function createElementComponent2(type, isServer2) {
  var displayName = "".concat(capitalized(type), "Element");
  var ClientElement = function ClientElement2(_ref) {
    var id2 = _ref.id, className = _ref.className, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options, _ref$onBlur = _ref.onBlur, onBlur = _ref$onBlur === void 0 ? noop$2 : _ref$onBlur, _ref$onFocus = _ref.onFocus, onFocus = _ref$onFocus === void 0 ? noop$2 : _ref$onFocus, _ref$onReady = _ref.onReady, onReady = _ref$onReady === void 0 ? noop$2 : _ref$onReady, _ref$onChange = _ref.onChange, onChange = _ref$onChange === void 0 ? noop$2 : _ref$onChange, _ref$onEscape = _ref.onEscape, onEscape = _ref$onEscape === void 0 ? noop$2 : _ref$onEscape, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? noop$2 : _ref$onClick;
    var _useElementsContextWi = useElementsContextWithUseCase("mounts <".concat(displayName, ">")), elements = _useElementsContextWi.elements;
    var elementRef = e$3.useRef(null);
    var domNode = e$3.useRef(null);
    var callOnReady = useCallbackReference(onReady);
    var callOnBlur = useCallbackReference(onBlur);
    var callOnFocus = useCallbackReference(onFocus);
    var callOnClick = useCallbackReference(onClick);
    var callOnChange = useCallbackReference(onChange);
    var callOnEscape = useCallbackReference(onEscape);
    e$3.useLayoutEffect(function() {
      if (elementRef.current == null && elements && domNode.current != null) {
        var element = elements.create(type, options);
        elementRef.current = element;
        element.mount(domNode.current);
        element.on("ready", function() {
          return callOnReady(element);
        });
        element.on("change", callOnChange);
        element.on("blur", callOnBlur);
        element.on("focus", callOnFocus);
        element.on("escape", callOnEscape);
        element.on("click", callOnClick);
      }
    });
    var prevOptions = usePrevious(options);
    e$3.useEffect(function() {
      if (!elementRef.current) {
        return;
      }
      var updates = extractAllowedOptionsUpdates(options, prevOptions, ["paymentRequest"]);
      if (updates) {
        elementRef.current.update(updates);
      }
    }, [options, prevOptions]);
    e$3.useLayoutEffect(function() {
      return function() {
        if (elementRef.current) {
          elementRef.current.destroy();
        }
      };
    }, []);
    return /* @__PURE__ */ e$3.createElement("div", {
      id: id2,
      className,
      ref: domNode
    });
  };
  var ServerElement = function ServerElement2(props) {
    useElementsContextWithUseCase("mounts <".concat(displayName, ">"));
    var id2 = props.id, className = props.className;
    return /* @__PURE__ */ e$3.createElement("div", {
      id: id2,
      className
    });
  };
  var Element = isServer2 ? ServerElement : ClientElement;
  Element.propTypes = {
    id: PropTypes.string,
    className: PropTypes.string,
    onChange: PropTypes.func,
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onReady: PropTypes.func,
    onClick: PropTypes.func,
    options: PropTypes.object
  };
  Element.displayName = displayName;
  Element.__elementType = type;
  return Element;
};
var isServer = typeof window === "undefined";
createElementComponent("auBankAccount", isServer);
var CardElement = createElementComponent("card", isServer);
createElementComponent("cardNumber", isServer);
createElementComponent("cardExpiry", isServer);
createElementComponent("cardCvc", isServer);
createElementComponent("fpxBank", isServer);
createElementComponent("iban", isServer);
createElementComponent("idealBank", isServer);
createElementComponent("p24Bank", isServer);
createElementComponent("epsBank", isServer);
createElementComponent("payment", isServer);
createElementComponent("paymentRequestButton", isServer);
createElementComponent("linkAuthentication", isServer);
createElementComponent("shippingAddress", isServer);
createElementComponent("affirmMessage", isServer);
createElementComponent("afterpayClearpayMessage", isServer);
const AddPaymentMethodForm = memo(({
  cancel,
  paymentMethodsCount
}) => {
  const dispatch = useDispatch();
  const [hasError, setHasError] = useState(false);
  const [inProgress, setInProgress] = useState(false);
  const [errorMessage, setErrorMessage] = useState("");
  const stripe = useStripe();
  const elements = useElements();
  const handleFormSubmit = async (e2) => {
    setInProgress(true);
    e2.preventDefault();
    if (!stripe || !elements) {
      return;
    }
    const cardElement = elements.getElement(CardElement);
    const result = await stripe.createPaymentMethod({
      card: cardElement,
      type: "card"
    });
    const {
      error,
      paymentMethod
    } = result;
    if (error) {
      setHasError(true);
      setErrorMessage(error == null ? void 0 : error.message);
    } else if (paymentMethod && paymentMethod.id) {
      dispatch(getPaymentMethods());
      cancel();
    }
    setInProgress(false);
  };
  return /* @__PURE__ */ jsxs$1("form", {
    onSubmit: handleFormSubmit,
    children: [hasError && /* @__PURE__ */ jsx$2(Error$1, {
      children: errorMessage
    }), /* @__PURE__ */ jsx$2(CardInput, {
      disabled: inProgress,
      children: /* @__PURE__ */ jsx$2(CardElement, {
        onChange: () => {
          setHasError(false);
          setInProgress(false);
          setErrorMessage("");
        },
        options: {
          iconStyle: "solid",
          style: {
            base: {
              "::placeholder": {
                color: "#aab7c4"
              },
              color: "#424770",
              fontSize: "16px"
            },
            invalid: {
              color: "#9e2146"
            }
          }
        }
      })
    }), inProgress && /* @__PURE__ */ jsx$2(Progress$1, {
      children: /* @__PURE__ */ jsx$2(ProgressSpinner, {})
    }), paymentMethodsCount > 0 && /* @__PURE__ */ jsx$2(GoBack, {
      children: /* @__PURE__ */ jsx$2(Button$1, {
        events: {
          mouse: {
            onClick: cancel
          }
        },
        states: {
          state: {
            disabled: inProgress
          }
        },
        children: "Cancel"
      })
    })]
  });
});
const Error$1 = styled.div.withConfig({
  displayName: "Error",
  componentId: "sc-3ujpxx-0"
})(["background:rgba(255,65,54,0.1);border-radius:8px;color:rgba(255,65,54,1);font-size:13px;font-weight:600;margin:0 0 25px 0;padding:15px 20px;"]);
const CardInput = styled.div.withConfig({
  displayName: "CardInput",
  componentId: "sc-3ujpxx-1"
})(["background:white;box-shadow:0 0 0 transparent;border:1px solid #ddd;border-radius:4px;color:#5b5b5b;font-size:13px;font-weight:600;outline:none;margin:0 0 25px 0;padding:9px;transition:border 0.2s ease-in-out;width:100%;&:hover{border:1px solid #bbb;}&:focus{border:1px solid #0074d9 !important;}&::placeholder{color:#9b9b9b;}", ";"], (props) => props.disabled && css$2(["pointer-events:none;"]));
const Progress$1 = styled.div.withConfig({
  displayName: "Progress",
  componentId: "sc-3ujpxx-2"
})(["float:right;padding:0;"]);
const GoBack = styled.div.withConfig({
  displayName: "GoBack",
  componentId: "sc-3ujpxx-3"
})(["float:right;"]);
const PaymentMethodModal = memo(({
  paymentMethods,
  premium,
  visible
}) => {
  const dispatch = useDispatch();
  const [inProgress, setInProgress] = useState(false);
  const [showAddPaymentForm, setShowAddPaymentForm] = useState(false);
  const [reviewOrder, setReviewOrder] = useState(false);
  const [paymentMethod, setPaymentMethod] = useState(null);
  const [paymentSuccess, setPaymentSuccess] = useState(false);
  useEffect(() => {
    dispatch(getPaymentMethods());
  }, []);
  const confirmPurchase = async () => {
    if (paymentMethod) {
      setInProgress(true);
      setPaymentSuccess(true);
      dispatch(getSubscriptions());
      setInProgress(false);
    }
  };
  return /* @__PURE__ */ jsx$2(Container$7, {
    visible,
    children: /* @__PURE__ */ jsxs$1(Content$3, {
      visible,
      children: [/* @__PURE__ */ jsx$2(Close$2, {
        children: /* @__PURE__ */ jsx$2(CloseButton, {
          events: {
            mouse: {
              onClick: () => {
                setReviewOrder(false);
                setPaymentSuccess(false);
                setPaymentMethod(null);
              }
            }
          }
        })
      }), paymentSuccess && /* @__PURE__ */ jsxs$1(PaymentSuccess, {
        children: [/* @__PURE__ */ jsx$2("h3", {
          children: "Payment Success"
        }), /* @__PURE__ */ jsx$2("p", {
          children: /* @__PURE__ */ jsxs$1("b", {
            children: ["Thank you for subscribing to", " "]
          })
        }), /* @__PURE__ */ jsx$2(Button$1, {
          events: {
            mouse: {
              onClick: () => {
                setReviewOrder(false);
                setPaymentSuccess(false);
                setPaymentMethod(null);
              }
            }
          },
          children: "Close"
        })]
      }), reviewOrder && paymentMethod && !paymentSuccess ? /* @__PURE__ */ jsxs$1(Fragment, {
        children: [/* @__PURE__ */ jsx$2("h3", {
          children: "Review order"
        }), /* @__PURE__ */ jsxs$1(ReviewOrder, {
          children: [premium && /* @__PURE__ */ jsxs$1(Summary, {
            children: [/* @__PURE__ */ jsx$2("b", {
              children: "$14.99/a month"
            }), " will be billed now and every month on", " ", /* @__PURE__ */ jsx$2("b", {
              children: "???"
            }), " using your", " ", /* @__PURE__ */ jsx$2("b", {
              className: "capitalize",
              children: paymentMethod == null ? void 0 : paymentMethod.brand
            }), " ending in ", /* @__PURE__ */ jsx$2("b", {
              children: paymentMethod.last_four_digits
            }), "."]
          }), inProgress && /* @__PURE__ */ jsx$2(Progress, {
            children: /* @__PURE__ */ jsx$2(ProgressSpinner, {})
          }), /* @__PURE__ */ jsxs$1(Actions, {
            children: [/* @__PURE__ */ jsx$2(Button$1, {
              events: {
                mouse: {
                  onClick: () => {
                    setReviewOrder(false);
                    setPaymentMethod(null);
                  }
                }
              },
              id: "cancel",
              states: {
                state: {
                  disabled: inProgress
                }
              },
              children: "Cancel"
            }), /* @__PURE__ */ jsx$2(Button$1, {
              events: {
                mouse: {
                  onClick: confirmPurchase
                }
              },
              id: "confirm",
              children: "Confirm order"
            })]
          })]
        })]
      }) : /* @__PURE__ */ jsx$2(Fragment, {
        children: paymentMethods.length === 0 || showAddPaymentForm || premium === null && !paymentSuccess ? /* @__PURE__ */ jsxs$1(Fragment, {
          children: [/* @__PURE__ */ jsx$2("h3", {
            children: "Payment"
          }), /* @__PURE__ */ jsx$2(PaymentForm, {
            children: /* @__PURE__ */ jsx$2("h4", {
              children: "Add a Credit Card"
            })
          })]
        }) : !paymentSuccess && !paymentMethod ? /* @__PURE__ */ jsxs$1(PaymentMethods, {
          children: [/* @__PURE__ */ jsx$2("h4", {
            children: "Select a payment method"
          }), paymentMethods.map((paymentMethod2) => {
            return /* @__PURE__ */ jsxs$1(PaymentMethodItem, {
              children: [/* @__PURE__ */ jsx$2(UseCard, {
                children: /* @__PURE__ */ jsx$2(Button$1, {
                  events: {
                    mouse: {
                      onClick: () => {
                        setPaymentMethod(paymentMethod2);
                        setReviewOrder(true);
                      }
                    }
                  },
                  children: "Use this card"
                })
              }), /* @__PURE__ */ jsxs$1(Brand, {
                children: [/* @__PURE__ */ jsx$2("img", {
                  alt: paymentMethod2.brand,
                  src: `/stripe_networks/${paymentMethod2.brand}.svg`
                }), /* @__PURE__ */ jsxs$1("span", {
                  children: [paymentMethod2.brand, " ending in", " ", paymentMethod2.last_four_digits]
                })]
              }), /* @__PURE__ */ jsxs$1(Expiry, {
                children: ["Expires", " ", /* @__PURE__ */ jsxs$1("span", {
                  children: [paymentMethod2.exp_month, "/", paymentMethod2.exp_year]
                })]
              })]
            }, paymentMethod2.id);
          }), !showAddPaymentForm && /* @__PURE__ */ jsx$2(Button$1, {
            events: {
              mouse: {
                onClick: () => {
                  setShowAddPaymentForm(true);
                }
              }
            },
            id: "show-add-form",
            children: "Add new card"
          })]
        }) : null
      })]
    })
  });
});
const Container$7 = styled.div.withConfig({
  displayName: "Container",
  componentId: "sc-1cgis25-0"
})(["background:rgba(0,0,0,0.5);bottom:0;left:0;opacity:0;pointer-events:none;position:fixed;right:0;top:0;transition:opacity 0.2s ease-out;z-index:500000;", ";"], (props) => props.visible && css$2(["opacity:1;pointer-events:auto;"]));
const Close$2 = styled.div.withConfig({
  displayName: "Close",
  componentId: "sc-1cgis25-1"
})(["position:absolute;right:16px;top:16px;z-index:1000;"]);
const Content$3 = styled.div.withConfig({
  displayName: "Content",
  componentId: "sc-1cgis25-2"
})(["background:white;border-radius:15px 15px 0 0;bottom:0;box-shadow:0 25px 50px -12px rgba(0,0,0,0.25);left:0;padding:20px;position:absolute;right:0;top:15%;transform:translate(0,1900px);transition:transform 0.3s ease-in-out;z-index:1;h3{margin:0 0 25px 0;}", ";"], (props) => props.visible && css$2(["transform:translate(0,0);@media (min-width:992px){transform:translate(-50%,-50%);}"]));
const PaymentForm = styled.div.withConfig({
  displayName: "PaymentForm",
  componentId: "sc-1cgis25-3"
})(["background:#f2f2f2;border-radius:15px;padding:25px;h4{margin:0 0 25px 0;}"]);
const PaymentMethods = styled.div.withConfig({
  displayName: "PaymentMethods",
  componentId: "sc-1cgis25-4"
})(["h4{margin:0 0 25px 0;}button#show-add-form{margin:20px 0 0 0;}"]);
const PaymentMethodItem = styled.div.withConfig({
  displayName: "PaymentMethodItem",
  componentId: "sc-1cgis25-5"
})(["background:white;border:1px solid #ddd;line-height:26px;margin-bottom:6px;padding:15px;&:after{clear:both;content:'';display:block;}"]);
const UseCard = styled.div.withConfig({
  displayName: "UseCard",
  componentId: "sc-1cgis25-6"
})(["float:right;"]);
const Brand = styled.div.withConfig({
  displayName: "Brand",
  componentId: "sc-1cgis25-7"
})(["float:left;text-transform:capitalize;img{height:16px;margin:0 6px 0 0;position:relative;top:3px;}span{color:#3b3b3b;font-size:14px;font-weight:600;}"]);
const Expiry = styled.div.withConfig({
  displayName: "Expiry",
  componentId: "sc-1cgis25-8"
})(["color:#9b9b9b;font-size:14px;font-weight:600;float:left;line-height:27px;margin:0 25px;"]);
const ReviewOrder = styled.div.withConfig({
  displayName: "ReviewOrder",
  componentId: "sc-1cgis25-9"
})(["padding:25px 0 0 0;button#confirm{margin:0 0 0 0;}button#cancel{margin:0 15px 0 0;}"]);
const Summary = styled.div.withConfig({
  displayName: "Summary",
  componentId: "sc-1cgis25-10"
})(["color:#8b8b8b;font-size:18px;font-weight:600;line-height:28px;margin:0 0 50px 0;b{color:#1b1b1b;&.capitalize{text-transform:capitalize;}}"]);
const PaymentSuccess = styled.div.withConfig({
  displayName: "PaymentSuccess",
  componentId: "sc-1cgis25-11"
})(["p{line-height:26px;margin:0 0 15px 0;}button{margin:35px 15px 0 0;}"]);
const Actions = styled.div.withConfig({
  displayName: "Actions",
  componentId: "sc-1cgis25-12"
})(["float:left;"]);
const Progress = styled.div.withConfig({
  displayName: "Progress",
  componentId: "sc-1cgis25-13"
})(["float:right;padding:0;"]);
function formatCurrency({ amount, currency }) {
  switch (currency) {
    case D$2.UnitedStatesDollar:
      return `$${amount.toFixed(amount % 1 !== 0 ? 2 : 0).replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`;
    default:
      return `$${amount.toFixed(amount % 1 !== 0 ? 2 : 0).replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`;
  }
}
const ProgressMeter = memo((_La) => {
  var _Ma = _La, {
    amount,
    background = {},
    borderRadius = {},
    children,
    label,
    size = {
      height: Sizes.Default
    },
    total
  } = _Ma, props = __objRest(_Ma, [
    "amount",
    "background",
    "borderRadius",
    "children",
    "label",
    "size",
    "total"
  ]);
  const progressPercent = amount === 0 ? 0 : Number.parseInt(((amount != null ? amount : 0) / (total != null ? total : 0) * 100).toFixed(0));
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.Primary
    }, background),
    borderRadius: __spreadValues({
      all: Amount.Less
    }, borderRadius)
  }, props), {
    children: /* @__PURE__ */ jsxs$1(Container$8, {
      background: __spreadValues({
        color: BackgroundColors.Primary
      }, background),
      borderRadius: __spreadValues({
        all: Amount.Less
      }, borderRadius),
      size: {
        width: `${progressPercent}%`
      },
      children: [children, label && /* @__PURE__ */ jsx$2(Label, {
        textAlign: TextAlign.Center,
        textSize: TextSize.Larger,
        textColor: TextColors.Darkest,
        textWeight: TextWeight.More,
        children: label
      })]
    })
  }));
});
var Formatter$1 = /* @__PURE__ */ ((Formatter2) => {
  Formatter2["Currency"] = "currency";
  return Formatter2;
})(Formatter$1 || {});
function formatValue(value2, {
  formatter,
  options
}) {
  var _a2;
  switch (formatter) {
    case "currency":
      return formatCurrency({
        amount: value2,
        currency: (_a2 = options == null ? void 0 : options.currency) != null ? _a2 : D$2.UnitedStatesDollar
      });
    default:
      return value2;
  }
}
const LinearGauge = memo(({
  amount,
  formatter,
  showTicks = true,
  showTickLabels = true,
  showValue = true,
  tickCount = 5,
  total
}) => {
  const progressPercent = amount === 0 ? 0 : Number.parseInt((amount / total * 100).toFixed(0));
  const tickPercent = total / tickCount;
  return /* @__PURE__ */ jsxs$1(Container$8, {
    children: [showTicks && /* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal
      },
      children: [showValue && /* @__PURE__ */ jsx$2(Container$8, {
        size: {
          height: Sizes.Small
        },
        style: {
          left: `calc(${progressPercent}% - 3px)`,
          position: "absolute",
          top: "-3px"
        },
        children: /* @__PURE__ */ jsx$2(Label, {
          lineHeight: Amount.None,
          textAlign: TextAlign.Center,
          textSize: TextSize.Small,
          textWeight: TextWeight.More,
          style: {
            background: `linear-gradient(45deg, transparent 20%, rgba(var(--bg-color-darker-rgb), 0.5) 80%, transparent 20%)`,
            position: "absolute",
            top: 19,
            transform: "translateX(-50%)",
            zIndex: 5
          },
          children: formatter ? formatValue(amount, formatter) : amount
        })
      }), new Array(tickCount).fill(0).map((_, index) => {
        const tickValue = tickPercent * index;
        const tickValueFormatted = formatter ? formatValue(tickValue, formatter) : tickValue;
        return /* @__PURE__ */ jsx$2(Container$8, {
          size: {
            height: 6
          },
          children: showTickLabels && /* @__PURE__ */ jsx$2(Label, {
            textAlign: TextAlign.Left,
            textSize: TextSize.Smallest,
            textWeight: TextWeight.More,
            style: {
              position: "absolute",
              transform: "translateX(calc(100% / 2 - 100%))"
            },
            children: tickValueFormatted
          })
        }, index);
      }), /* @__PURE__ */ jsx$2(Container$8, {
        size: {
          height: 6
        },
        style: {
          position: "absolute",
          right: 0
        },
        children: showTickLabels && /* @__PURE__ */ jsx$2(Label, {
          textAlign: TextAlign.Right,
          textColor: TextColors.Dark,
          textSize: TextSize.Small,
          textWeight: TextWeight.More,
          children: formatter ? formatValue(total, formatter) : total
        })
      })]
    }), /* @__PURE__ */ jsx$2(Container$8, {
      background: {
        color: BackgroundColors.Lightest
      },
      size: {
        height: 1
      },
      children: /* @__PURE__ */ jsx$2(Container$8, {
        size: {
          height: 1,
          width: `${progressPercent}%`
        }
      })
    })]
  });
});
const ProgressivePaymentStatus = memo(({
  amountPaid = 0,
  currency = D$2.UnitedStatesDollar,
  totalDue = 0
}) => {
  amountPaid >= totalDue ? BackgroundColors.Success : BackgroundColors.Warning;
  return /* @__PURE__ */ jsxs$1(Container$8, {
    padding: {
      bottom: Amount.Default
    },
    children: [/* @__PURE__ */ jsx$2(ProgressMeter, {
      alignment: {
        horizontal: AlignHorizontal.Center,
        vertical: AlignVertical.Center
      },
      amount: amountPaid,
      borderRadius: {
        all: Amount.Default
      },
      label: formatCurrency({
        amount: amountPaid,
        currency
      }),
      margin: {
        bottom: Amount.Less
      },
      total: totalDue
    }), /* @__PURE__ */ jsx$2(LinearGauge, {
      amount: amountPaid,
      formatter: {
        formatter: Formatter$1.Currency,
        options: {
          currency
        }
      },
      total: totalDue
    })]
  });
});
const SubscriptionModal = memo(() => {
  const visible = useSelector((state) => state.app.subscriptionBillingModalVisible);
  return /* @__PURE__ */ jsx$2(Container$6, {
    visible,
    children: /* @__PURE__ */ jsxs$1(Content$2, {
      visible,
      children: [/* @__PURE__ */ jsx$2(Close$1, {}), /* @__PURE__ */ jsx$2("h3", {
        children: "Subscription Options"
      }), /* @__PURE__ */ jsxs$1(Options, {
        children: [/* @__PURE__ */ jsx$2(Option, {
          onClick: () => {
          },
          children: /* @__PURE__ */ jsxs$1(BottomActions, {
            children: [/* @__PURE__ */ jsxs$1(Price, {
              children: ["$1.49 ", /* @__PURE__ */ jsx$2("span", {
                children: "/a month per account"
              })]
            }), /* @__PURE__ */ jsx$2(ActionButton, {
              size: "large",
              secondary: true,
              children: "Turn on"
            })]
          })
        }), /* @__PURE__ */ jsxs$1(Option, {
          className: "premium",
          onClick: () => {
          },
          children: [/* @__PURE__ */ jsx$2("h4", {
            children: "Premium"
          }), /* @__PURE__ */ jsx$2("p", {
            children: "Account Sync available on all of your accounts, and access to additional premium features."
          }), /* @__PURE__ */ jsxs$1("ul", {
            children: [/* @__PURE__ */ jsx$2("li", {
              children: "Sync all of your financial accounts"
            }), /* @__PURE__ */ jsx$2("li", {
              children: "All future Premium features included"
            })]
          }), /* @__PURE__ */ jsxs$1(BottomActions, {
            children: [/* @__PURE__ */ jsxs$1(Price, {
              children: ["$14.99 ", /* @__PURE__ */ jsx$2("span", {
                children: "a/ month"
              })]
            }), /* @__PURE__ */ jsx$2(ActionButton, {
              size: "large",
              children: "Upgrade"
            })]
          })]
        })]
      })]
    })
  });
});
const Container$6 = styled.div.withConfig({
  displayName: "Container",
  componentId: "sc-1gc8te9-0"
})(["background:rgba(0,0,0,0.7);bottom:0;left:0;opacity:0;pointer-events:none;position:fixed;right:0;top:0;transition:opacity 0.2s ease-out;z-index:500000;", ";"], (props) => props.visible && css$2(["opacity:1;pointer-events:auto;"]));
const Close$1 = styled.div.withConfig({
  displayName: "Close",
  componentId: "sc-1gc8te9-1"
})(["position:absolute;right:16px;top:16px;"]);
const Content$2 = styled.div.withConfig({
  displayName: "Content",
  componentId: "sc-1gc8te9-2"
})(["background:white;border-radius:15px 15px 0 0;bottom:0;box-shadow:0 25px 50px -12px rgba(0,0,0,0.25);left:0;padding:20px;position:absolute;right:0;top:15%;transform:translate(0,1900px);transition:transform 0.3s ease-in-out;z-index:1;", ";h3{margin:0 0 25px 0;}@media (min-width:480px){}@media (min-width:768px){}@media (min-width:992px){border-radius:15px;bottom:auto;left:50%;right:auto;top:50%;transform:translate(-50%,-50%);width:600px;}@media (min-width:1200px){}"], (props) => props.visible && css$2(["transform:translate(0px,0px);@media (min-width:992px){transform:translate(-50%,-50%);}"]));
const Options = styled.div.withConfig({
  displayName: "Options",
  componentId: "sc-1gc8te9-3"
})(["&:after{clear:both;content:'';display:block;}"]);
const Option = styled.div.withConfig({
  displayName: "Option",
  componentId: "sc-1gc8te9-4"
})(["border:2px solid #ddd;border-radius:15px;cursor:pointer;margin:0 0 15px 0;padding:15px;position:relative;text-align:left;transition:background 0.2s ease-in-out,border 0.2s ease-in-out;width:100%;&:first-child{margin-right:10px;}&:hover{background:#fafafa;border:2px solid #7b7b7b;}&.premium{border:2px solid rgba(65,145,64,1);&:hover{background:rgba(65,145,64,0.1);}}h4{font-size:18px;margin:0 0 25px 0;}p{color:#7b7b7b;display:none;font-size:14px;margin:0 0 15px 0;line-height:20px;}ul{padding:0 25px;li{color:#3b3b3b;font-size:13px;line-height:18px;margin:0 0 8px 0;}}@media (min-width:480px){}@media (min-width:768px){}@media (min-width:992px){float:left;height:400px;margin:0;width:calc(100% / 2 - 5px);h4{margin:0 0 25px 0;}p{display:block;margin:0 0 25px 0;}}@media (min-width:1200px){}"]);
const BottomActions = styled.div.withConfig({
  displayName: "BottomActions",
  componentId: "sc-1gc8te9-5"
})(["bottom:0;left:0;margin:50px 0 0 0;right:0;&:after{clear:both;content:'';display:block;}@media (min-width:480px){}@media (min-width:768px){}@media (min-width:992px){padding:15px;position:absolute;}@media (min-width:1200px){}"]);
const Price = styled.div.withConfig({
  displayName: "Price",
  componentId: "sc-1gc8te9-6"
})(["color:#3b3b3b;float:left;font-size:32px;font-weight:700;line-height:26px;padding:0 0 0 5px;span{color:#aaa;display:block;font-size:12px;font-weight:500;}"]);
const ActionButton = styled.div.withConfig({
  displayName: "ActionButton",
  componentId: "sc-1gc8te9-7"
})(["background:rgba(60,60,60,1);border:2px solid transparent;border-radius:50px;color:white;cursor:pointer;float:right;font-size:13px;font-weight:600;padding:10px 17px;transition:background 0.2s ease-in-out;&:hover{background:rgba(0,0,0,0.9);}&:active{background:rgba(0,0,0,1);}", ";", ";", ";", ";", ";@media (min-width:480px){}@media (min-width:768px){}@media (min-width:992px){}@media (min-width:1200px){}"], (props) => props.disabled && css$2(["pointer-events:none;opacity:0.8;"]), (props) => props.secondary && css$2(["background:white;border:2px solid rgba(220,220,220,1);color:rgba(120,120,120,1);font-weight:600;&:hover{background:transparent;border:2px solid rgba(160,160,160,1);color:rgba(100,100,100,1);}&:active{background:transparent;border:2px solid rgba(130,130,130,1);color:rgba(80,80,80,1);}"]), (props) => props.size === "small" && css$2(["font-size:11px;padding:7px 12px;@media (min-width:992px){font-size:12px;padding:10px 17px;}"]), (props) => props.size === "large" && css$2(["font-size:13px;padding:10px 17px;@media (min-width:992px){font-size:15px;padding:15px 22px;}"]), (props) => props.darkMode && props.secondary && css$2(["background:transparent !important;border:2px solid rgba(143,231,0,0.7) !important;color:rgba(143,231,0,1) !important;&:hover{background:rgba(143,231,0,0.1) !important;border:2px solid rgba(143,231,0,0.7) !important;color:#1b1b1b;}&:active{background:rgba(143,231,0,0.6) !important;}"]));
var r$2 = class {
  analytics(o2) {
  }
  critical(o2) {
  }
  debug(o2) {
  }
  async exception(o2) {
    console.log(o2);
  }
  http(o2) {
  }
  async info(o2) {
    console.log(o2);
  }
  warning(o2) {
  }
  constructor(o2) {
  }
}, p$3 = r$2;
class ErrorBoundary extends Component {
  constructor(props) {
    super(props);
    this.state = {
      exception: void 0,
      hasError: false
    };
  }
  static getDerivedStateFromError(err) {
    const logger = new p$3();
    const exception = new d$d(err.name + ": " + err.message, {
      cause: err
    });
    logger.exception(exception.toJSON());
    return {
      exception,
      hasError: true
    };
  }
  componentDidCatch(err) {
  }
  render() {
    var _a2;
    return this.state.hasError ? /* @__PURE__ */ jsx$2(Fragment, {
      children: (_a2 = this.state.exception) == null ? void 0 : _a2.message
    }) : /* @__PURE__ */ jsx$2(Fragment, {
      children: this.props.children
    });
  }
}
const Card = memo((_Na) => {
  var _Oa = _Na, {
    background = {},
    borderRadius = {},
    children,
    draggable = false,
    id: id2,
    linkTo,
    shadow = DepthShadow.Higher,
    title
  } = _Oa, props = __objRest(_Oa, [
    "background",
    "borderRadius",
    "children",
    "draggable",
    "id",
    "linkTo",
    "shadow",
    "title"
  ]);
  const content = /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.Card
    }, background),
    borderRadius: __spreadValues({
      all: Amount.Less
    }, borderRadius),
    className: `card${id2 ? `-${id2}` : ""}`,
    shadow
  }, props), {
    children: [title && /* @__PURE__ */ jsx$2("h4", {
      children: title
    }), /* @__PURE__ */ jsx$2(ErrorBoundary, {
      children
    })]
  }));
  if (draggable) {
    return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
      className: "draggable-card"
    }, props), {
      children: content
    }));
  }
  if (linkTo) {
    return /* @__PURE__ */ jsx$2(NavigationLink, {
      className: "link-card",
      to: linkTo,
      children: content
    });
  }
  return content;
});
const TitleCard = memo((_Pa) => {
  var _Qa = _Pa, {
    alignment = {},
    background = {},
    borderRadius = {},
    className = "",
    label,
    loading = false,
    padding = {},
    value: value2,
    icon: icon2,
    shadow = DepthShadow.High,
    size = {}
  } = _Qa, props = __objRest(_Qa, [
    "alignment",
    "background",
    "borderRadius",
    "className",
    "label",
    "loading",
    "padding",
    "value",
    "icon",
    "shadow",
    "size"
  ]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      orientation: Orientation.Horizontal
    }, alignment),
    background: __spreadValues({
      color: BackgroundColors.Card
    }, background),
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    className: `${className} title-card`,
    padding: __spreadValues({
      all: Amount.Default
    }, padding),
    shadow,
    size: __spreadValues({
      width: 260
    }, size)
  }, props), {
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      spinnerSize: {
        height: Sizes.Small,
        width: Sizes.Small
      },
      states: {
        state: {
          visible: loading
        }
      }
    }), icon2 && /* @__PURE__ */ jsx$2(Icon, __spreadValues({
      margin: {
        right: Amount.Default
      },
      size: {
        height: Sizes.Large,
        width: Sizes.Large
      }
    }, icon2)), !loading && /* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Vertical,
        vertical: AlignVertical.Center
      },
      children: [/* @__PURE__ */ jsx$2(Small, {
        children: label
      }), /* @__PURE__ */ jsx$2(Title, {
        lineHeight: Sizes.Default,
        children: value2
      })]
    })]
  }));
});
const PieChart = memo((_Ra) => {
  var props = __objRest(_Ra, []);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadValues({}, props));
});
const RadialChart = memo((_Sa) => {
  var _Ta = _Sa, {
    data: data2
  } = _Ta, props = __objRest(_Ta, [
    "data"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadValues({}, props));
});
const RadialGauge = memo(({
  color,
  size,
  value: value2
}) => {
  const getGaugePercent = () => {
    const normalized = 198 - value2 * 1.98;
    return normalized >= 0 ? normalized : 0;
  };
  const gaugePercent = getGaugePercent();
  return /* @__PURE__ */ jsx$2(Container$5, {
    size,
    value: gaugePercent,
    children: /* @__PURE__ */ jsxs$1("svg", {
      viewBox: "0 0 105 105",
      children: [/* @__PURE__ */ jsx$2("path", {
        className: "grey",
        d: "M30,90 A40,40 0 1,1 80,90",
        fill: "none"
      }), /* @__PURE__ */ jsx$2("path", {
        id: "value",
        fill: "none",
        className: "value",
        d: "M30,90 A40,40 0 1,1 80,90"
      })]
    })
  });
});
const Container$5 = styled.div.withConfig({
  displayName: "Container",
  componentId: "sc-1yzhota-0"
})(["margin:0 auto;position:relative;width:", "px;svg{display:inline-block;height:", "px;position:relative;top:-4px;width:", "px;}path{stroke-linecap:round;stroke-width:12;}path.grey{stroke:#eee;}path.value{stroke:rgba(162,192,80,1);stroke:rgba(", ");stroke-dasharray:198;stroke-dashoffset:", ";transition:all 0.3s ease-out;}"], (props) => props.size + 9, (props) => props.size, (props) => props.size, (props) => props.color, (props) => props.value);
function useTitle(title) {
  useEffect(() => {
    document.title = title;
  }, []);
}
const Page = memo((_Ua) => {
  var _Va = _Ua, {
    alignment = {},
    background = {},
    children,
    className = "",
    layout: Layout2,
    loading = false,
    size = {},
    title
  } = _Va, props = __objRest(_Va, [
    "alignment",
    "background",
    "children",
    "className",
    "layout",
    "loading",
    "size",
    "title"
  ]);
  useTitle(title);
  const PageComp = () => /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      overflow: Overflow.ScrollVertical,
      vertical: AlignVertical.Top
    }, alignment),
    background: __spreadValues({
      color: BackgroundColors.Page
    }, background),
    className: `${className} page`,
    size: __spreadValues({
      fill: Fill.Both
    }, size)
  }, props), {
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      states: {
        state: {
          visible: loading
        }
      }
    }), children]
  }));
  const Child = () => Layout2 ? cloneElement(/* @__PURE__ */ jsx$2(Layout2, __spreadValues({}, props)), props, /* @__PURE__ */ jsx$2(PageComp, {})) : /* @__PURE__ */ jsx$2(PageComp, {});
  return /* @__PURE__ */ jsx$2(Child, {});
});
var styles$1 = "html,\nbody,\n#root {\n  background-color: var(--bg-color-default);\n\n  /* Proportions */\n  --amount-none: 0px;\n  --amount-least: 5.5px;\n  --amount-less: 11px;\n  --amount-default: 16.5px;\n  --amount-more: 22px;\n  --amount-most: 27.5px;\n  --amount-all: 33px;\n\n  --size-smallest: 10px;\n  --size-smaller: 14px;\n  --size-small: 24px;\n  --size-default: 32px;\n  --size-large: 42px;\n  --size-larger: 52px;\n  --size-largest: 56px;\n\n  /* Colors */\n  --color-primary-rgb: 76, 62, 196;\n  --color-primary: rgb(var(--color-primary-rgb));\n  --color-primary-contrast-rgb: 255, 255, 255;\n  --color-primary-contrast: rgb(var(--color-primary-contrast-rgb));\n  --color-default-rgb: var(--color-black-rgb);\n  --color-default: rgb(var(--color-default-rgb));\n  --color-default-contrast-rgb: var(--color-default-rgb);\n  --color-default-contrast: var(--color-default-rgb);\n  --color-secondary-rgb: 230, 232, 235;\n  --color-secondary: rgb(var(--color-secondary-rgb));\n  --color-secondary-contrast-rgb: 35, 37, 40;\n  --color-secondary-contrast: rgb(var(--color-secondary-contrast-rgb));\n  --color-black-rgb: 50, 52, 55;\n  --color-black: rgb(var(--color-black-rgb));\n  --color-black-contrast-rgb: var(--color-white-rgb);\n  --color-black-contrast: rgb(var(--color-black-contrast-rgb));\n  --color-white-rgb: 238, 240, 243;\n  --color-white: rgb(var(--color-white-rgb));\n  --color-white-contrast-rgb: var(--color-white-rgb);\n  --color-white-contrast: rgb(var(--color-white-contrast-rgb));\n  --color-error-rgb: 236, 79, 79;\n  --color-error: rgb(var(--color-error-rgb));\n  --color-error-contrast-rgb: var(--color-white-rgb);\n  --color-error-contrast: rgb(var(--color-error-contrast-rgb));\n  --color-info-rgb: 15, 193, 223;\n  --color-info: rgb(var(--color-info-rgb));\n  --color-info-contrast-rgb: var(--color-white-rgb);\n  --color-info-contrast: rgb(var(--color-info-contrast-rgb));\n  --color-success-rgb: 131, 210, 126;\n  --color-success: rgb(var(--color-success-rgb));\n  --color-success-contrast-rgb: var(--color-white-rgb);\n  --color-success-contrast: rgb(var(--color-success-contrast-rgb));\n  --color-warning-rgb: 255, 209, 0;\n  --color-warning: rgb(var(--color-warning-rgb));\n  --color-warning-contrast-rgb: var(--color-white-rgb);\n  --color-warning-contrast: rgb(var(--color-warning-contrast-rgb));\n\n  --bg-color-lightest-rgb: 245, 245, 245;\n  --bg-color-lightest: rgb(var(--bg-color-lightest-rgb));\n  --bg-color-lighter-rgb: 235, 235, 235;\n  --bg-color-lighter: rgb(var(--bg-color-lighter-rgb));\n  --bg-color-light-rgb: 225, 225, 225;\n  --bg-color-light: rgb(var(--bg-color-light-rgb));\n  --bg-color-default-rgb: 220, 220, 220;\n  --bg-color-default: rgb(var(--bg-color-default-rgb));\n  --bg-color-dark-rgb: 200, 200, 200;\n  --bg-color-dark: rgb(var(--bg-color-dark-rgb));\n  --bg-color-darker-rgb: 190, 190, 190;\n  --bg-color-darker: rgb(var(--bg-color-darker-rgb));\n  --bg-color-darkest-rgb: 180, 180, 180;\n  --bg-color-darkest: rgb(var(--bg-color-darkest-rgb));\n\n  --border-color-lightest-rgb: 240, 243, 247;\n  --border-color-lightest: rgb(var(--border-color-lightest-rgb));\n  --border-color-lighter-rgb: 230, 233, 237;\n  --border-color-lighter: rgb(var(--border-color-lighter-rgb));\n  --border-color-light-rgb: 220, 223, 227;\n  --border-color-light: rgb(var(--border-color-light-rgb));\n  --border-color-default-rgb: 210, 213, 217;\n  --border-color-default: rgb(var(--border-color-default-rgb));\n  --border-color-dark-rgb: 200, 203, 207;\n  --border-color-dark: rgb(var(--border-color-dark-rgb));\n  --border-color-darker-rgb: 190, 193, 197;\n  --border-color-darker: rgb(var(--border-color-darker-rgb));\n  --border-color-darkest-rgb: 180, 183, 187;\n  --border-color-darkest: rgb(var(--border-color-darkest-rgb));\n\n  --fg-color-lightest-rgb: 210, 212, 215;\n  --fg-color-lightest: rgb(var(--fg-color-lightest-rgb));\n  --fg-color-lighter-rgb: 190, 192, 195;\n  --fg-color-lighter: rgb(var(--fg-color-lighter-rgb));\n  --fg-color-light-rgb: 160, 162, 165;\n  --fg-color-light: rgb(var(--fg-color-light-rgb));\n  --fg-color-default-rgb: 130, 132, 135;\n  --fg-color-default: rgb(var(--fg-color-default-rgb));\n  --fg-color-dark-rgb: 100, 102, 105;\n  --fg-color-dark: rgb(var(--fg-color-dark-rgb));\n  --fg-color-darker-rgb: 60, 62, 65;\n  --fg-color-darker: rgb(var(--fg-color-darker-rgb));\n  --fg-color-darkest-rgb: var(--color-black-rgb);\n  --fg-color-darkest: rgb(var(--fg-color-darkest-rgb));\n\n  /* Text */\n  --text-color-lightest-rgb: var(--color-white-rgb);\n  --text-color-lightest: rgb(var(--text-color-lightest-rgb));\n  --text-color-lighter-rgb: 170, 172, 175;\n  --text-color-lighter: rgb(var(--text-color-lighter-rgb));\n  --text-color-light-rgb: 140, 142, 145;\n  --text-color-light: rgb(var(--text-color-light-rgb));\n  --text-color-default-rgb: 90, 92, 95;\n  --text-color-default: rgb(var(--text-color-default-rgb));\n  --text-color-dark-rgb: 70, 72, 75;\n  --text-color-dark: rgb(var(--text-color-dark-rgb));\n  --text-color-darker-rgb: 50, 52, 55;\n  --text-color-darker: rgb(var(--text-color-darker-rgb));\n  --text-color-darkest-rgb: var(--color-black-rgb);\n  --text-color-darkest: rgb(var(--text-color-darkest-rgb));\n\n  --text-font-button: 'Helvetica Neue', -apple-system, blinkmacsystemfont,\n    'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n    'Droid Sans', sans-serif;\n  --text-font-text: 'Helvetica Neue', -apple-system, blinkmacsystemfont,\n    'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n    'Droid Sans', sans-serif;\n\n  /* Text sizes */\n  --text-size-smallest: 9px;\n  --text-size-smaller: 11px;\n  --text-size-small: 12px;\n  --text-size-default: 13px;\n  --text-size-large: 18px;\n  --text-size-larger: 20px;\n  --text-size-largest: 24px;\n\n  --text-weight-least: 300;\n  --text-weight-less: 400;\n  --text-weight-default: 500;\n  --text-weight-more: 600;\n  --text-weight-most: 700;\n\n  /* Shadows */\n  --shadow-depth-lowest: inset 0 -20px 60px rgba(0, 0, 0, 0.1);\n  --shadow-depth-lower: inset 0 2px 5px rgba(0, 0, 0, 0.1);\n  --shadow-depth-low: inset 0 1px 3px rgba(0, 0, 0, 0.1);\n  --shadow-depth-surface: none;\n  --shadow-depth-high: 0 1px 3px rgba(0, 0, 0, 0.05);\n  --shadow-depth-higher: 0 4px 27px rgba(0, 0, 0, 0.16);\n  --shadow-depth-highest: 0 10px 62px rgba(0, 0, 0, 0.1);\n\n  /* Layout */\n  --z-index-depth-lowest: -300;\n  --z-index-depth-lower: -200;\n  --z-index-depth-low: -100;\n  --z-index-depth-surface: 0;\n  --z-index-depth-high: 100;\n  --z-index-depth-higher: 200;\n  --z-index-depth-highest: 300;\n\n  /* Element styles */\n  --bg-color-card-rgb: var(--bg-color-lightest-rgb);\n  --bg-color-close-button-rgb: var(--bg-color-default-rgb);\n  --bg-color-data-grid-rgb: var(--bg-color-default-rgb);\n  --bg-color-data-grid-header-rgb: var(--bg-color-default-rgb);\n  --bg-color-data-grid-column-headers-rgb: var(--bg-color-lighter-rgb);\n  --bg-color-data-grid-cell-rgb: var(--bg-color-lightest-rgb);\n  --bg-color-data-grid-row-rgb: var(--bg-color-lighter-rgb);\n  --bg-color-dropdown-menu-rgb: var(--bg-color-lightest-rgb);\n  --bg-color-input-control-rgb: var(--bg-color-lightest-rgb);\n  --bg-color-menu-button-rgb: var(--bg-color-lightest-rgb);\n  --bg-color-more-menu-rgb: var(--bg-color-default-rgb);\n  --bg-color-navigation-bar-rgb: var(--bg-color-lightest-rgb);\n  --bg-color-navigation-menu-rgb: var(--bg-color-lightest-rgb);\n  --bg-color-page-rgb: var(--bg-color-lighter-rgb);\n  --bg-color-slide-panel-rgb: var(--bg-color-lightest-rgb);\n  --bg-color-workspace-rgb: var(--bg-color-lighter-rgb);\n\n  --border-color-input-control-rgb: var(--border-color-default-rgb);\n\n  --fg-color-close-button-rgb: var(--fg-color-dark-rgb);\n  --fg-color-more-menu-rgb: var(--fg-color-dark-rgb);\n\n  --text-color-data-grid-column-headers-rgb: var(--text-color-lighter-rgb);\n  --text-color-data-grid-cell-rgb: var(--text-color-light-rgb);\n  --text-color-dropdown-menu-rgb: var(--text-color-light-rgb);\n  --text-color-input-control-rgb: var(--text-color-default-rgb);\n  --text-color-input-label-rgb: var(--text-color-light-rgb);\n  --text-color-input-placeholder-rgb: var(--text-color-lighter-rgb);\n  --text-color-link-rgb: var(--color-primary-rgb);\n  --text-color-menu-button-rgb: var(--text-color-light-rgb);\n  --text-color-paragraph-rgb: var(--text-color-lighter-rgb);\n  --text-color-text-rgb: var(--text-color-default-rgb);\n  --text-color-title-rgb: var(--text-color-dark-rgb);\n  --text-color-sub-title-rgb: var(--text-color-default-rgb);\n}\n";
const AppLabLightTheme = {
  css: styles$1,
  description: "Default AppLab Light theme",
  id: "applab-light",
  name: "AppLab Light"
};
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty$4 = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i2 = 0; i2 < 10; i2++) {
      test2["_" + String.fromCharCode(i2)] = i2;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
shouldUseNative() ? Object.assign : function(target, source) {
  var from2;
  var to = toObject(target);
  var symbols;
  for (var s2 = 1; s2 < arguments.length; s2++) {
    from2 = Object(arguments[s2]);
    for (var key in from2) {
      if (hasOwnProperty$4.call(from2, key)) {
        to[key] = from2[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from2);
      for (var i2 = 0; i2 < symbols.length; i2++) {
        if (propIsEnumerable.call(from2, symbols[i2])) {
          to[symbols[i2]] = from2[symbols[i2]];
        }
      }
    }
  }
  return to;
};
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$2 = e$3, g$2 = 60103;
reactJsxRuntime_production_min.Fragment = 60107;
if (typeof Symbol === "function" && Symbol.for) {
  var h$3 = Symbol.for;
  g$2 = h$3("react.element");
  reactJsxRuntime_production_min.Fragment = h$3("react.fragment");
}
var m$2 = f$2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, n$2 = Object.prototype.hasOwnProperty, p$2 = { key: true, ref: true, __self: true, __source: true };
function q$3(c2, a, k2) {
  var b2, d2 = {}, e2 = null, l2 = null;
  k2 !== void 0 && (e2 = "" + k2);
  a.key !== void 0 && (e2 = "" + a.key);
  a.ref !== void 0 && (l2 = a.ref);
  for (b2 in a)
    n$2.call(a, b2) && !p$2.hasOwnProperty(b2) && (d2[b2] = a[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a = c2.defaultProps, a)
      d2[b2] === void 0 && (d2[b2] = a[b2]);
  return { $$typeof: g$2, type: c2, key: e2, ref: l2, props: d2, _owner: m$2.current };
}
reactJsxRuntime_production_min.jsx = q$3;
reactJsxRuntime_production_min.jsxs = q$3;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
const jsx$1 = jsxRuntime.exports.jsx;
const jsxs = jsxRuntime.exports.jsxs;
const ThemeProvider = memo(({
  className = "",
  children,
  theme,
  themes
}) => {
  var _a2;
  const [currentTheme, setTheme2] = useState((_a2 = themes == null ? void 0 : themes.find((t2) => t2.id === theme)) != null ? _a2 : AppLabLightTheme);
  useEffect(() => {
    if (theme && themes) {
      const match2 = themes.find((t2) => t2.id === theme);
      if (match2) {
        setTheme2(match2);
      } else {
        setTheme2(AppLabLightTheme);
      }
    } else {
      setTheme2(AppLabLightTheme);
    }
  }, [theme]);
  return /* @__PURE__ */ jsxs("div", {
    className: `${currentTheme.id} ${className} theme-provider`,
    style: {
      display: "flex",
      flexGrow: 1,
      overflow: "hidden"
    },
    children: [/* @__PURE__ */ jsx$1(GlobalStyle, {
      theme: currentTheme
    }), children]
  });
});
const GlobalStyle = createGlobalStyle(["", ";"], (props) => props.theme.css);
function lowerCase(str2) {
  return str2.toLowerCase();
}
var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];
var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
function noCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  var _a2 = options.splitRegexp, splitRegexp = _a2 === void 0 ? DEFAULT_SPLIT_REGEXP : _a2, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;
  var result = replace(replace(input, splitRegexp, "$1\0$2"), stripRegexp, "\0");
  var start = 0;
  var end = result.length;
  while (result.charAt(start) === "\0")
    start++;
  while (result.charAt(end - 1) === "\0")
    end--;
  return result.slice(start, end).split("\0").map(transform).join(delimiter);
}
function replace(input, re2, value2) {
  if (re2 instanceof RegExp)
    return input.replace(re2, value2);
  return re2.reduce(function(input2, re3) {
    return input2.replace(re3, value2);
  }, input);
}
function pascalCaseTransform(input, index) {
  var firstChar = input.charAt(0);
  var lowerChars = input.substr(1).toLowerCase();
  if (index > 0 && firstChar >= "0" && firstChar <= "9") {
    return "_" + firstChar + lowerChars;
  }
  return "" + firstChar.toUpperCase() + lowerChars;
}
function pascalCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  return noCase(input, __assign$1({ delimiter: "", transform: pascalCaseTransform }, options));
}
function camelCaseTransform(input, index) {
  if (index === 0)
    return input.toLowerCase();
  return pascalCaseTransform(input, index);
}
function camelCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  return pascalCase(input, __assign$1({ transform: camelCaseTransform }, options));
}
function upperCaseFirst(input) {
  return input.charAt(0).toUpperCase() + input.substr(1);
}
function capitalCaseTransform(input) {
  return upperCaseFirst(input.toLowerCase());
}
function capitalCase(input, options) {
  if (options === void 0) {
    options = {};
  }
  return noCase(input, __assign$1({ delimiter: " ", transform: capitalCaseTransform }, options));
}
var pluralize$1 = { exports: {} };
(function(module, exports) {
  (function(root, pluralize2) {
    if (typeof commonjsRequire === "function" && true && true) {
      module.exports = pluralize2();
    } else {
      root.pluralize = pluralize2();
    }
  })(commonjsGlobal, function() {
    var pluralRules = [];
    var singularRules = [];
    var uncountables = {};
    var irregularPlurals = {};
    var irregularSingles = {};
    function sanitizeRule(rule) {
      if (typeof rule === "string") {
        return new RegExp("^" + rule + "$", "i");
      }
      return rule;
    }
    function restoreCase(word, token2) {
      if (word === token2)
        return token2;
      if (word === word.toLowerCase())
        return token2.toLowerCase();
      if (word === word.toUpperCase())
        return token2.toUpperCase();
      if (word[0] === word[0].toUpperCase()) {
        return token2.charAt(0).toUpperCase() + token2.substr(1).toLowerCase();
      }
      return token2.toLowerCase();
    }
    function interpolate(str2, args) {
      return str2.replace(/\$(\d{1,2})/g, function(match2, index) {
        return args[index] || "";
      });
    }
    function replace2(word, rule) {
      return word.replace(rule[0], function(match2, index) {
        var result = interpolate(rule[1], arguments);
        if (match2 === "") {
          return restoreCase(word[index - 1], result);
        }
        return restoreCase(match2, result);
      });
    }
    function sanitizeWord(token2, word, rules) {
      if (!token2.length || uncountables.hasOwnProperty(token2)) {
        return word;
      }
      var len = rules.length;
      while (len--) {
        var rule = rules[len];
        if (rule[0].test(word))
          return replace2(word, rule);
      }
      return word;
    }
    function replaceWord(replaceMap, keepMap, rules) {
      return function(word) {
        var token2 = word.toLowerCase();
        if (keepMap.hasOwnProperty(token2)) {
          return restoreCase(word, token2);
        }
        if (replaceMap.hasOwnProperty(token2)) {
          return restoreCase(word, replaceMap[token2]);
        }
        return sanitizeWord(token2, word, rules);
      };
    }
    function checkWord(replaceMap, keepMap, rules, bool) {
      return function(word) {
        var token2 = word.toLowerCase();
        if (keepMap.hasOwnProperty(token2))
          return true;
        if (replaceMap.hasOwnProperty(token2))
          return false;
        return sanitizeWord(token2, token2, rules) === token2;
      };
    }
    function pluralize2(word, count, inclusive) {
      var pluralized = count === 1 ? pluralize2.singular(word) : pluralize2.plural(word);
      return (inclusive ? count + " " : "") + pluralized;
    }
    pluralize2.plural = replaceWord(irregularSingles, irregularPlurals, pluralRules);
    pluralize2.isPlural = checkWord(irregularSingles, irregularPlurals, pluralRules);
    pluralize2.singular = replaceWord(irregularPlurals, irregularSingles, singularRules);
    pluralize2.isSingular = checkWord(irregularPlurals, irregularSingles, singularRules);
    pluralize2.addPluralRule = function(rule, replacement) {
      pluralRules.push([sanitizeRule(rule), replacement]);
    };
    pluralize2.addSingularRule = function(rule, replacement) {
      singularRules.push([sanitizeRule(rule), replacement]);
    };
    pluralize2.addUncountableRule = function(word) {
      if (typeof word === "string") {
        uncountables[word.toLowerCase()] = true;
        return;
      }
      pluralize2.addPluralRule(word, "$0");
      pluralize2.addSingularRule(word, "$0");
    };
    pluralize2.addIrregularRule = function(single, plural) {
      plural = plural.toLowerCase();
      single = single.toLowerCase();
      irregularSingles[single] = plural;
      irregularPlurals[plural] = single;
    };
    [
      ["I", "we"],
      ["me", "us"],
      ["he", "they"],
      ["she", "they"],
      ["them", "them"],
      ["myself", "ourselves"],
      ["yourself", "yourselves"],
      ["itself", "themselves"],
      ["herself", "themselves"],
      ["himself", "themselves"],
      ["themself", "themselves"],
      ["is", "are"],
      ["was", "were"],
      ["has", "have"],
      ["this", "these"],
      ["that", "those"],
      ["echo", "echoes"],
      ["dingo", "dingoes"],
      ["volcano", "volcanoes"],
      ["tornado", "tornadoes"],
      ["torpedo", "torpedoes"],
      ["genus", "genera"],
      ["viscus", "viscera"],
      ["stigma", "stigmata"],
      ["stoma", "stomata"],
      ["dogma", "dogmata"],
      ["lemma", "lemmata"],
      ["schema", "schemata"],
      ["anathema", "anathemata"],
      ["ox", "oxen"],
      ["axe", "axes"],
      ["die", "dice"],
      ["yes", "yeses"],
      ["foot", "feet"],
      ["eave", "eaves"],
      ["goose", "geese"],
      ["tooth", "teeth"],
      ["quiz", "quizzes"],
      ["human", "humans"],
      ["proof", "proofs"],
      ["carve", "carves"],
      ["valve", "valves"],
      ["looey", "looies"],
      ["thief", "thieves"],
      ["groove", "grooves"],
      ["pickaxe", "pickaxes"],
      ["passerby", "passersby"]
    ].forEach(function(rule) {
      return pluralize2.addIrregularRule(rule[0], rule[1]);
    });
    [
      [/s?$/i, "s"],
      [/[^\u0000-\u007F]$/i, "$0"],
      [/([^aeiou]ese)$/i, "$1"],
      [/(ax|test)is$/i, "$1es"],
      [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, "$1es"],
      [/(e[mn]u)s?$/i, "$1s"],
      [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, "$1"],
      [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, "$1i"],
      [/(alumn|alg|vertebr)(?:a|ae)$/i, "$1ae"],
      [/(seraph|cherub)(?:im)?$/i, "$1im"],
      [/(her|at|gr)o$/i, "$1oes"],
      [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, "$1a"],
      [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, "$1a"],
      [/sis$/i, "ses"],
      [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, "$1$2ves"],
      [/([^aeiouy]|qu)y$/i, "$1ies"],
      [/([^ch][ieo][ln])ey$/i, "$1ies"],
      [/(x|ch|ss|sh|zz)$/i, "$1es"],
      [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, "$1ices"],
      [/\b((?:tit)?m|l)(?:ice|ouse)$/i, "$1ice"],
      [/(pe)(?:rson|ople)$/i, "$1ople"],
      [/(child)(?:ren)?$/i, "$1ren"],
      [/eaux$/i, "$0"],
      [/m[ae]n$/i, "men"],
      ["thou", "you"]
    ].forEach(function(rule) {
      return pluralize2.addPluralRule(rule[0], rule[1]);
    });
    [
      [/s$/i, ""],
      [/(ss)$/i, "$1"],
      [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\w]|^)li)ves$/i, "$1fe"],
      [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, "$1f"],
      [/ies$/i, "y"],
      [/\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, "$1ie"],
      [/\b(mon|smil)ies$/i, "$1ey"],
      [/\b((?:tit)?m|l)ice$/i, "$1ouse"],
      [/(seraph|cherub)im$/i, "$1"],
      [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, "$1"],
      [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, "$1sis"],
      [/(movie|twelve|abuse|e[mn]u)s$/i, "$1"],
      [/(test)(?:is|es)$/i, "$1is"],
      [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, "$1us"],
      [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, "$1um"],
      [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, "$1on"],
      [/(alumn|alg|vertebr)ae$/i, "$1a"],
      [/(cod|mur|sil|vert|ind)ices$/i, "$1ex"],
      [/(matr|append)ices$/i, "$1ix"],
      [/(pe)(rson|ople)$/i, "$1rson"],
      [/(child)ren$/i, "$1"],
      [/(eau)x?$/i, "$1"],
      [/men$/i, "man"]
    ].forEach(function(rule) {
      return pluralize2.addSingularRule(rule[0], rule[1]);
    });
    [
      "adulthood",
      "advice",
      "agenda",
      "aid",
      "aircraft",
      "alcohol",
      "ammo",
      "analytics",
      "anime",
      "athletics",
      "audio",
      "bison",
      "blood",
      "bream",
      "buffalo",
      "butter",
      "carp",
      "cash",
      "chassis",
      "chess",
      "clothing",
      "cod",
      "commerce",
      "cooperation",
      "corps",
      "debris",
      "diabetes",
      "digestion",
      "elk",
      "energy",
      "equipment",
      "excretion",
      "expertise",
      "firmware",
      "flounder",
      "fun",
      "gallows",
      "garbage",
      "graffiti",
      "hardware",
      "headquarters",
      "health",
      "herpes",
      "highjinks",
      "homework",
      "housework",
      "information",
      "jeans",
      "justice",
      "kudos",
      "labour",
      "literature",
      "machinery",
      "mackerel",
      "mail",
      "media",
      "mews",
      "moose",
      "music",
      "mud",
      "manga",
      "news",
      "only",
      "personnel",
      "pike",
      "plankton",
      "pliers",
      "police",
      "pollution",
      "premises",
      "rain",
      "research",
      "rice",
      "salmon",
      "scissors",
      "series",
      "sewage",
      "shambles",
      "shrimp",
      "software",
      "species",
      "staff",
      "swine",
      "tennis",
      "traffic",
      "transportation",
      "trout",
      "tuna",
      "wealth",
      "welfare",
      "whiting",
      "wildebeest",
      "wildlife",
      "you",
      /pok[eé]mon$/i,
      /[^aeiou]ese$/i,
      /deer$/i,
      /fish$/i,
      /measles$/i,
      /o[iu]s$/i,
      /pox$/i,
      /sheep$/i
    ].forEach(pluralize2.addUncountableRule);
    return pluralize2;
  });
})(pluralize$1);
var pluralize = pluralize$1.exports;
var queryString = {};
var strictUriEncode = (str2) => encodeURIComponent(str2).replace(/[!'()*]/g, (x) => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);
var token = "%[a-f0-9]{2}";
var singleMatcher = new RegExp(token, "gi");
var multiMatcher = new RegExp("(" + token + ")+", "gi");
function decodeComponents(components, split) {
  try {
    return decodeURIComponent(components.join(""));
  } catch (err) {
  }
  if (components.length === 1) {
    return components;
  }
  split = split || 1;
  var left = components.slice(0, split);
  var right = components.slice(split);
  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
}
function decode$1(input) {
  try {
    return decodeURIComponent(input);
  } catch (err) {
    var tokens = input.match(singleMatcher);
    for (var i2 = 1; i2 < tokens.length; i2++) {
      input = decodeComponents(tokens, i2).join("");
      tokens = input.match(singleMatcher);
    }
    return input;
  }
}
function customDecodeURIComponent(input) {
  var replaceMap = {
    "%FE%FF": "\uFFFD\uFFFD",
    "%FF%FE": "\uFFFD\uFFFD"
  };
  var match2 = multiMatcher.exec(input);
  while (match2) {
    try {
      replaceMap[match2[0]] = decodeURIComponent(match2[0]);
    } catch (err) {
      var result = decode$1(match2[0]);
      if (result !== match2[0]) {
        replaceMap[match2[0]] = result;
      }
    }
    match2 = multiMatcher.exec(input);
  }
  replaceMap["%C2"] = "\uFFFD";
  var entries = Object.keys(replaceMap);
  for (var i2 = 0; i2 < entries.length; i2++) {
    var key = entries[i2];
    input = input.replace(new RegExp(key, "g"), replaceMap[key]);
  }
  return input;
}
var decodeUriComponent = function(encodedURI) {
  if (typeof encodedURI !== "string") {
    throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
  }
  try {
    encodedURI = encodedURI.replace(/\+/g, " ");
    return decodeURIComponent(encodedURI);
  } catch (err) {
    return customDecodeURIComponent(encodedURI);
  }
};
var splitOnFirst = (string2, separator) => {
  if (!(typeof string2 === "string" && typeof separator === "string")) {
    throw new TypeError("Expected the arguments to be of type `string`");
  }
  if (separator === "") {
    return [string2];
  }
  const separatorIndex = string2.indexOf(separator);
  if (separatorIndex === -1) {
    return [string2];
  }
  return [
    string2.slice(0, separatorIndex),
    string2.slice(separatorIndex + separator.length)
  ];
};
var filterObj = function(obj, predicate) {
  var ret = {};
  var keys2 = Object.keys(obj);
  var isArr = Array.isArray(predicate);
  for (var i2 = 0; i2 < keys2.length; i2++) {
    var key = keys2[i2];
    var val = obj[key];
    if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
      ret[key] = val;
    }
  }
  return ret;
};
(function(exports) {
  const strictUriEncode$1 = strictUriEncode;
  const decodeComponent = decodeUriComponent;
  const splitOnFirst$1 = splitOnFirst;
  const filterObject = filterObj;
  const isNullOrUndefined = (value2) => value2 === null || value2 === void 0;
  const encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
  function encoderForArrayFormat(options) {
    switch (options.arrayFormat) {
      case "index":
        return (key) => (result, value2) => {
          const index = result.length;
          if (value2 === void 0 || options.skipNull && value2 === null || options.skipEmptyString && value2 === "") {
            return result;
          }
          if (value2 === null) {
            return [...result, [encode2(key, options), "[", index, "]"].join("")];
          }
          return [
            ...result,
            [encode2(key, options), "[", encode2(index, options), "]=", encode2(value2, options)].join("")
          ];
        };
      case "bracket":
        return (key) => (result, value2) => {
          if (value2 === void 0 || options.skipNull && value2 === null || options.skipEmptyString && value2 === "") {
            return result;
          }
          if (value2 === null) {
            return [...result, [encode2(key, options), "[]"].join("")];
          }
          return [...result, [encode2(key, options), "[]=", encode2(value2, options)].join("")];
        };
      case "colon-list-separator":
        return (key) => (result, value2) => {
          if (value2 === void 0 || options.skipNull && value2 === null || options.skipEmptyString && value2 === "") {
            return result;
          }
          if (value2 === null) {
            return [...result, [encode2(key, options), ":list="].join("")];
          }
          return [...result, [encode2(key, options), ":list=", encode2(value2, options)].join("")];
        };
      case "comma":
      case "separator":
      case "bracket-separator": {
        const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
        return (key) => (result, value2) => {
          if (value2 === void 0 || options.skipNull && value2 === null || options.skipEmptyString && value2 === "") {
            return result;
          }
          value2 = value2 === null ? "" : value2;
          if (result.length === 0) {
            return [[encode2(key, options), keyValueSep, encode2(value2, options)].join("")];
          }
          return [[result, encode2(value2, options)].join(options.arrayFormatSeparator)];
        };
      }
      default:
        return (key) => (result, value2) => {
          if (value2 === void 0 || options.skipNull && value2 === null || options.skipEmptyString && value2 === "") {
            return result;
          }
          if (value2 === null) {
            return [...result, encode2(key, options)];
          }
          return [...result, [encode2(key, options), "=", encode2(value2, options)].join("")];
        };
    }
  }
  function parserForArrayFormat(options) {
    let result;
    switch (options.arrayFormat) {
      case "index":
        return (key, value2, accumulator) => {
          result = /\[(\d*)\]$/.exec(key);
          key = key.replace(/\[\d*\]$/, "");
          if (!result) {
            accumulator[key] = value2;
            return;
          }
          if (accumulator[key] === void 0) {
            accumulator[key] = {};
          }
          accumulator[key][result[1]] = value2;
        };
      case "bracket":
        return (key, value2, accumulator) => {
          result = /(\[\])$/.exec(key);
          key = key.replace(/\[\]$/, "");
          if (!result) {
            accumulator[key] = value2;
            return;
          }
          if (accumulator[key] === void 0) {
            accumulator[key] = [value2];
            return;
          }
          accumulator[key] = [].concat(accumulator[key], value2);
        };
      case "colon-list-separator":
        return (key, value2, accumulator) => {
          result = /(:list)$/.exec(key);
          key = key.replace(/:list$/, "");
          if (!result) {
            accumulator[key] = value2;
            return;
          }
          if (accumulator[key] === void 0) {
            accumulator[key] = [value2];
            return;
          }
          accumulator[key] = [].concat(accumulator[key], value2);
        };
      case "comma":
      case "separator":
        return (key, value2, accumulator) => {
          const isArray2 = typeof value2 === "string" && value2.includes(options.arrayFormatSeparator);
          const isEncodedArray = typeof value2 === "string" && !isArray2 && decode2(value2, options).includes(options.arrayFormatSeparator);
          value2 = isEncodedArray ? decode2(value2, options) : value2;
          const newValue = isArray2 || isEncodedArray ? value2.split(options.arrayFormatSeparator).map((item) => decode2(item, options)) : value2 === null ? value2 : decode2(value2, options);
          accumulator[key] = newValue;
        };
      case "bracket-separator":
        return (key, value2, accumulator) => {
          const isArray2 = /(\[\])$/.test(key);
          key = key.replace(/\[\]$/, "");
          if (!isArray2) {
            accumulator[key] = value2 ? decode2(value2, options) : value2;
            return;
          }
          const arrayValue = value2 === null ? [] : value2.split(options.arrayFormatSeparator).map((item) => decode2(item, options));
          if (accumulator[key] === void 0) {
            accumulator[key] = arrayValue;
            return;
          }
          accumulator[key] = [].concat(accumulator[key], arrayValue);
        };
      default:
        return (key, value2, accumulator) => {
          if (accumulator[key] === void 0) {
            accumulator[key] = value2;
            return;
          }
          accumulator[key] = [].concat(accumulator[key], value2);
        };
    }
  }
  function validateArrayFormatSeparator(value2) {
    if (typeof value2 !== "string" || value2.length !== 1) {
      throw new TypeError("arrayFormatSeparator must be single character string");
    }
  }
  function encode2(value2, options) {
    if (options.encode) {
      return options.strict ? strictUriEncode$1(value2) : encodeURIComponent(value2);
    }
    return value2;
  }
  function decode2(value2, options) {
    if (options.decode) {
      return decodeComponent(value2);
    }
    return value2;
  }
  function keysSorter(input) {
    if (Array.isArray(input)) {
      return input.sort();
    }
    if (typeof input === "object") {
      return keysSorter(Object.keys(input)).sort((a, b2) => Number(a) - Number(b2)).map((key) => input[key]);
    }
    return input;
  }
  function removeHash(input) {
    const hashStart = input.indexOf("#");
    if (hashStart !== -1) {
      input = input.slice(0, hashStart);
    }
    return input;
  }
  function getHash(url) {
    let hash = "";
    const hashStart = url.indexOf("#");
    if (hashStart !== -1) {
      hash = url.slice(hashStart);
    }
    return hash;
  }
  function extract(input) {
    input = removeHash(input);
    const queryStart = input.indexOf("?");
    if (queryStart === -1) {
      return "";
    }
    return input.slice(queryStart + 1);
  }
  function parseValue(value2, options) {
    if (options.parseNumbers && !Number.isNaN(Number(value2)) && (typeof value2 === "string" && value2.trim() !== "")) {
      value2 = Number(value2);
    } else if (options.parseBooleans && value2 !== null && (value2.toLowerCase() === "true" || value2.toLowerCase() === "false")) {
      value2 = value2.toLowerCase() === "true";
    }
    return value2;
  }
  function parse2(query, options) {
    options = Object.assign({
      decode: true,
      sort: true,
      arrayFormat: "none",
      arrayFormatSeparator: ",",
      parseNumbers: false,
      parseBooleans: false
    }, options);
    validateArrayFormatSeparator(options.arrayFormatSeparator);
    const formatter = parserForArrayFormat(options);
    const ret = /* @__PURE__ */ Object.create(null);
    if (typeof query !== "string") {
      return ret;
    }
    query = query.trim().replace(/^[?#&]/, "");
    if (!query) {
      return ret;
    }
    for (const param of query.split("&")) {
      if (param === "") {
        continue;
      }
      let [key, value2] = splitOnFirst$1(options.decode ? param.replace(/\+/g, " ") : param, "=");
      value2 = value2 === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value2 : decode2(value2, options);
      formatter(decode2(key, options), value2, ret);
    }
    for (const key of Object.keys(ret)) {
      const value2 = ret[key];
      if (typeof value2 === "object" && value2 !== null) {
        for (const k2 of Object.keys(value2)) {
          value2[k2] = parseValue(value2[k2], options);
        }
      } else {
        ret[key] = parseValue(value2, options);
      }
    }
    if (options.sort === false) {
      return ret;
    }
    return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
      const value2 = ret[key];
      if (Boolean(value2) && typeof value2 === "object" && !Array.isArray(value2)) {
        result[key] = keysSorter(value2);
      } else {
        result[key] = value2;
      }
      return result;
    }, /* @__PURE__ */ Object.create(null));
  }
  exports.extract = extract;
  exports.parse = parse2;
  exports.stringify = (object2, options) => {
    if (!object2) {
      return "";
    }
    options = Object.assign({
      encode: true,
      strict: true,
      arrayFormat: "none",
      arrayFormatSeparator: ","
    }, options);
    validateArrayFormatSeparator(options.arrayFormatSeparator);
    const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object2[key]) || options.skipEmptyString && object2[key] === "";
    const formatter = encoderForArrayFormat(options);
    const objectCopy = {};
    for (const key of Object.keys(object2)) {
      if (!shouldFilter(key)) {
        objectCopy[key] = object2[key];
      }
    }
    const keys2 = Object.keys(objectCopy);
    if (options.sort !== false) {
      keys2.sort(options.sort);
    }
    return keys2.map((key) => {
      const value2 = object2[key];
      if (value2 === void 0) {
        return "";
      }
      if (value2 === null) {
        return encode2(key, options);
      }
      if (Array.isArray(value2)) {
        if (value2.length === 0 && options.arrayFormat === "bracket-separator") {
          return encode2(key, options) + "[]";
        }
        return value2.reduce(formatter(key), []).join("&");
      }
      return encode2(key, options) + "=" + encode2(value2, options);
    }).filter((x) => x.length > 0).join("&");
  };
  exports.parseUrl = (url, options) => {
    options = Object.assign({
      decode: true
    }, options);
    const [url_, hash] = splitOnFirst$1(url, "#");
    return Object.assign({
      url: url_.split("?")[0] || "",
      query: parse2(extract(url), options)
    }, options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode2(hash, options) } : {});
  };
  exports.stringifyUrl = (object2, options) => {
    options = Object.assign({
      encode: true,
      strict: true,
      [encodeFragmentIdentifier]: true
    }, options);
    const url = removeHash(object2.url).split("?")[0] || "";
    const queryFromUrl = exports.extract(object2.url);
    const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
    const query = Object.assign(parsedQueryFromUrl, object2.query);
    let queryString2 = exports.stringify(query, options);
    if (queryString2) {
      queryString2 = `?${queryString2}`;
    }
    let hash = getHash(object2.url);
    if (object2.fragmentIdentifier) {
      hash = `#${options[encodeFragmentIdentifier] ? encode2(object2.fragmentIdentifier, options) : object2.fragmentIdentifier}`;
    }
    return `${url}${queryString2}${hash}`;
  };
  exports.pick = (input, filter, options) => {
    options = Object.assign({
      parseFragmentIdentifier: true,
      [encodeFragmentIdentifier]: false
    }, options);
    const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
    return exports.stringifyUrl({
      url,
      query: filterObject(query, filter),
      fragmentIdentifier
    }, options);
  };
  exports.exclude = (input, filter, options) => {
    const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value2) => !filter(key, value2);
    return exports.pick(input, exclusionFilter, options);
  };
})(queryString);
function useEntityEditor() {
  const location = useLocation();
  const [searchParams, setSearchParams] = useSearchParams();
  const [modelName, setModelName] = useState(null);
  const [entity, setEntity] = useState();
  const [mode, setMode] = useState({
    edit: false,
    new: false,
    view: false
  });
  const [modelDef, setModelDef] = useState(null);
  const models = useSelector((state) => state.models.models);
  useEffect(() => {
    const new_ = searchParams.get("new");
    const edit = searchParams.get("edit");
    const view = searchParams.get("view");
    if (new_) {
      setMode({
        edit: false,
        new: true,
        view: false
      });
      setModelName(new_);
      const params = queryString.parse(location.search);
      const _a2 = params, {
        new: _new
      } = _a2, props = __objRest(_a2, [
        "new"
      ]);
      setEntity(props);
    } else if (edit) {
      const id2 = searchParams.get("id");
      setModelName(edit);
      if (id2) {
        setEntity({
          id: id2
        });
      }
      setMode({
        edit: true,
        new: false,
        view: false
      });
    } else if (view) {
      const id2 = searchParams.get("id");
      setModelName(view);
      if (id2) {
        setEntity({
          id: id2
        });
      }
      setMode({
        edit: false,
        new: false,
        view: true
      });
    }
    return () => {
      setMode({
        edit: false,
        new: false,
        view: false
      });
      setModelName(null);
      setEntity(void 0);
    };
  }, [location.search]);
  useEffect(() => {
    if (models && modelName) {
      const model = models[modelName];
      if (model) {
        setModelDef(model);
      }
    } else {
      setModelDef(null);
    }
    return () => {
      setModelDef(null);
    };
  }, [models, modelName]);
  const showEntityEditor = ({
    edit,
    new: new_,
    set = {},
    view,
    id: id2
  }) => {
    if (id2 && edit) {
      setSearchParams({
        edit,
        id: id2
      });
    } else if (id2 && view) {
      setSearchParams({
        id: id2,
        view
      });
    } else if (new_) {
      setSearchParams(__spreadValues({
        new: new_
      }, set));
    }
  };
  const hideEntityEditor = () => {
    setSearchParams({});
  };
  return {
    entity,
    hideEntityEditor,
    mode,
    model: modelDef,
    showEntityEditor
  };
}
const Spacer = memo((_Wa) => {
  var _Xa = _Wa, {
    alignment = {},
    as = "div",
    children,
    size = {}
  } = _Xa, props = __objRest(_Xa, [
    "alignment",
    "as",
    "children",
    "size"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({}, alignment),
    as,
    size: __spreadValues({
      fill: Fill.Both
    }, size)
  }, props), {
    children
  }));
});
const HoverPanel = memo((_Ya) => {
  var _Za = _Ya, {
    background = {},
    border = {},
    borderRadius = {},
    children,
    className = "",
    depth = Depth.Higher,
    size = {},
    states = {}
  } = _Za, props = __objRest(_Za, [
    "background",
    "border",
    "borderRadius",
    "children",
    "className",
    "depth",
    "size",
    "states"
  ]);
  var _a2;
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.Lightest
    }, background),
    border: __spreadValues({
      all: {
        color: BorderColors.Transparent,
        style: BorderStyle.Solid,
        width: 1
      }
    }, border),
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    className: `${className} hover-panel`,
    depth,
    position: {
      behavior: PositionBehavior.Absolute,
      right: -6,
      top: `calc(100% - 6px)`
    },
    shadow: ((_a2 = states.state) == null ? void 0 : _a2.visible) ? DepthShadow.Higher : DepthShadow.Surface,
    size: __spreadValues({
      minWidth: 140
    }, size),
    states
  }, props), {
    children
  }));
});
const MoreMenu = memo((__a) => {
  var _$a = __a, {
    alignment = {},
    background = {},
    className = "",
    dotColor = ForegroundColors.MoreMenu,
    size = {},
    states = {},
    menu
  } = _$a, props = __objRest(_$a, [
    "alignment",
    "background",
    "className",
    "dotColor",
    "size",
    "states",
    "menu"
  ]);
  const [menuVisible, setMenuVisible] = useState(false);
  const [focused, setFocused] = useState(false);
  const [hovered, setHovered] = useState(false);
  const menuVisibleRef = useRef(menuVisible);
  const dotFillColor = menuVisible || hovered ? ForegroundColors.PrimaryContrast : dotColor;
  return /* @__PURE__ */ jsxs$1(Container$8, {
    className: `${className} more-menu`,
    events: {
      mouse: {
        onMouseLeave: () => {
          menuVisibleRef.current = false;
          setMenuVisible(false);
        }
      }
    },
    children: [/* @__PURE__ */ jsx$2(Button$1, __spreadProps(__spreadValues({
      alignment: __spreadValues({
        horizontal: AlignHorizontal.Center,
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      }, alignment),
      as: "button",
      cursor: Cursor.Pointer,
      background: __spreadValues({
        color: menuVisibleRef.current ? BackgroundColors.Primary : BackgroundColors.MoreMenu,
        opacity: menuVisibleRef.current ? 70 : 100
      }, background),
      borderRadius: {
        all: Amount.All
      },
      depth: Depth.Surface,
      events: {
        focus: {
          onBlur: () => setFocused(false),
          onFocus: () => setFocused(true)
        },
        mouse: {
          onClick: (e2) => {
            e2.stopPropagation();
            e2.preventDefault();
            menuVisibleRef.current = !menuVisibleRef.current;
            setMenuVisible(menuVisibleRef.current);
          },
          onMouseEnter: () => setHovered(true),
          onMouseLeave: () => setHovered(false)
        }
      },
      size: __spreadValues({
        height: Sizes.Default,
        width: Sizes.Default
      }, size),
      states: __spreadValues({
        hovered: {
          background: {
            color: BackgroundColors.Primary
          }
        },
        state: {
          focused
        }
      }, states)
    }, props), {
      children: new Array(3).fill(0).map((color, i2) => /* @__PURE__ */ jsx$2(Dot, {
        borderRadius: {
          all: Amount.All
        },
        background: {
          color: dotFillColor
        },
        margin: {
          left: 1,
          right: 1
        },
        size: {
          height: 5,
          width: 5
        }
      }, i2))
    })), /* @__PURE__ */ jsx$2(HoverPanel, {
      states: {
        state: {
          visible: menuVisibleRef.current
        }
      },
      children: /* @__PURE__ */ jsx$2(Menu, {
        menu,
        events: {
          mouse: {
            onClick: () => {
              menuVisibleRef.current = false;
              setMenuVisible(false);
            }
          }
        }
      })
    })]
  });
});
const Dot = styled.span.withConfig({
  displayName: "Dot",
  componentId: "sc-ycayhd-0"
})(["", ";", ";", ";", ";display:inline-block;"], BackgroundStyles, BorderRadiusStyles, MarginStyles, SizeStyles);
const ModalHeader = memo((_ab) => {
  var _bb = _ab, {
    alignment = {},
    className = "",
    onCloseClick,
    moreMenu,
    padding = {},
    title
  } = _bb, props = __objRest(_bb, [
    "alignment",
    "className",
    "onCloseClick",
    "moreMenu",
    "padding",
    "title"
  ]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      horizontal: AlignHorizontal.Stretch,
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    }, alignment),
    className: `${className} modal-header`,
    padding: __spreadValues({
      all: Amount.Default
    }, padding)
  }, props), {
    children: [title && /* @__PURE__ */ jsx$2(Title, {
      children: title
    }), /* @__PURE__ */ jsx$2(Spacer, {}), moreMenu && /* @__PURE__ */ jsx$2(MoreMenu, __spreadValues({
      alignment: {
        horizontal: AlignHorizontal.Right
      }
    }, moreMenu)), /* @__PURE__ */ jsx$2(CloseButton, {
      events: {
        mouse: {
          onClick: onCloseClick
        }
      },
      margin: {
        left: Amount.Less
      }
    })]
  }));
});
const SlidePanel = memo((_cb) => {
  var _db = _cb, {
    background = {},
    borderRadius = {},
    children,
    className = "",
    depth = Depth.Highest,
    origin = 500,
    padding = {},
    position = {},
    shadow = DepthShadow.Highest,
    size = {},
    states = {}
  } = _db, props = __objRest(_db, [
    "background",
    "borderRadius",
    "children",
    "className",
    "depth",
    "origin",
    "padding",
    "position",
    "shadow",
    "size",
    "states"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.SlidePanel
    }, background),
    borderRadius: __spreadValues({
      all: Amount.Most
    }, borderRadius),
    className: `${className} slide-panel`,
    depth,
    padding: __spreadValues({
      all: Amount.Less
    }, padding),
    position: __spreadValues({
      behavior: PositionBehavior.Fixed,
      bottom: Amount.Default,
      right: Amount.Default,
      top: Amount.Default
    }, position),
    shadow,
    size: __spreadValues({
      width: 380
    }, size),
    states: __spreadValues({
      visible: {
        transform: {
          translate: {
            x: 0
          }
        }
      }
    }, states),
    transform: {
      translate: {
        x: origin
      }
    }
  }, props), {
    children
  }));
});
function getFormFieldsFromModel({
  entity,
  model
}) {
  let fields = [];
  for (const [fieldName, field] of Object.entries(model.fields)) {
    if (fieldName !== "created_date" && fieldName !== "updated_date") {
      fields = [
        ...fields,
        __spreadProps(__spreadValues({}, field), {
          name: fieldName,
          type: field.type,
          validation: Boolean(field.required) ? {
            conditions: {
              [x$4.IsRequired]: Boolean(field.required)
            }
          } : void 0
        })
      ];
    }
  }
  return fields;
}
const EntityEditor = memo(({
  actions,
  className = "",
  id: id2,
  model
}) => {
  var _a2, _b;
  const dispatch = useDispatch();
  const {
    entity: entityFields,
    hideEntityEditor
  } = useEntityEditor();
  const [dispatched, setDispatched] = useState(false);
  const inProgress = useSelector((state) => state[`${model == null ? void 0 : model.name}.inProgress`]);
  const pluralizedCamel = pluralize(((_b = (_a2 = model == null ? void 0 : model.name) == null ? void 0 : _a2[0]) == null ? void 0 : _b.toLowerCase()) + (model == null ? void 0 : model.name.slice(1)));
  const entity = useSelector((state) => state[pluralizedCamel].entities[id2 != null ? id2 : ""]);
  useEffect(() => {
    var _a3;
    if (actions && id2 && !entity && !dispatched) {
      const action = (_a3 = actions[`get${model.name}`]) == null ? void 0 : _a3.call(actions, id2);
      setDispatched(true);
      dispatch(action);
    }
  }, [id2, entity]);
  if (id2 && !entity && !inProgress) {
    return /* @__PURE__ */ jsx$2(Container$8, {
      className: `${className} entity-editor`,
      padding: {
        all: Amount.More
      },
      children: /* @__PURE__ */ jsx$2(ErrorLabel, {
        children: "Entity not found"
      })
    });
  }
  return /* @__PURE__ */ jsx$2(Container$8, {
    className: `${className} entity-editor`,
    children: /* @__PURE__ */ jsx$2(Form, {
      fields: getFormFieldsFromModel({
        model
      }),
      entity: __spreadValues(__spreadValues({}, entity), entityFields),
      events: {
        form: {
          onSubmitted: async ({
            fields,
            validation
          }) => {
            let fieldData = {};
            for (const [key, props] of Object.entries(fields)) {
              fieldData = __spreadProps(__spreadValues({}, fieldData), {
                [key]: props.value
              });
            }
            if (id2) {
              const editFunction = actions == null ? void 0 : actions[`update${model.name}`];
              if (editFunction)
                await dispatch(editFunction(__spreadValues({
                  id: id2
                }, fieldData)));
              hideEntityEditor();
            } else {
              const createFunction = actions == null ? void 0 : actions[`create${model.name}`];
              if (createFunction)
                await dispatch(createFunction(fieldData));
              hideEntityEditor();
            }
          }
        }
      },
      inProgress,
      model,
      name: "entity-editor",
      submitButton: {
        label: id2 ? "Update" : "Create"
      }
    })
  });
});
const EntityPreview = memo(({
  id: id2,
  model
}) => {
  return /* @__PURE__ */ jsx$2(Container$8, {
    "data-testid": "account-pane",
    children: /* @__PURE__ */ jsx$2(LoadingOverlay, {
      states: {
        state: {
          visible: false
        }
      }
    })
  });
});
const EntityPanel = memo((_eb) => {
  var _fb = _eb, {
    actions
  } = _fb, props = __objRest(_fb, [
    "actions"
  ]);
  const dispatch = useDispatch();
  const [visible, setVisible] = useState(false);
  const {
    entity,
    model,
    mode,
    hideEntityEditor
  } = useEntityEditor();
  const entityState = useSelector((state) => {
    var _a2;
    return state[`${camelCase(pluralize((_a2 = model == null ? void 0 : model.name) != null ? _a2 : ""))}`];
  });
  const inProgress = (entityState == null ? void 0 : entityState.action[`create${model == null ? void 0 : model.name}`].inProgress) || (entityState == null ? void 0 : entityState.action[`delete${model == null ? void 0 : model.name}`].inProgress) || (entityState == null ? void 0 : entityState.action[`get${model == null ? void 0 : model.name}`].inProgress) || (entityState == null ? void 0 : entityState.action[`update${model == null ? void 0 : model.name}`].inProgress);
  useEffect(() => {
    if (model) {
      setVisible(true);
    } else {
      setVisible(false);
    }
  }, [model]);
  const getContent = () => {
    if (model && (entity == null ? void 0 : entity.id) && mode.edit) {
      return /* @__PURE__ */ jsx$2(EntityEditor, {
        actions,
        model,
        id: entity.id
      });
    }
    if (model && (entity == null ? void 0 : entity.id) && mode.view) {
      return /* @__PURE__ */ jsx$2(EntityPreview, {
        model,
        id: entity.id
      });
    }
    if (model && !(entity == null ? void 0 : entity.id)) {
      return /* @__PURE__ */ jsx$2(EntityEditor, {
        actions,
        model
      });
    }
    return null;
  };
  const getHeaderTitle = () => {
    if (model && (entity == null ? void 0 : entity.id) && mode.edit) {
      return `Edit ${capitalCase(model.name)}`;
    }
    if (model && (entity == null ? void 0 : entity.id)) {
      return `${capitalCase(model.name)} Preview`;
    }
    if (model && !(entity == null ? void 0 : entity.id)) {
      return `New ${capitalCase(model.name)}`;
    }
    return "";
  };
  return /* @__PURE__ */ jsx$2(SlidePanel, {
    states: {
      state: {
        visible
      }
    },
    children: /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
      borderRadius: {
        all: Amount.Default
      }
    }, props), {
      children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
        states: {
          state: {
            visible: inProgress
          }
        }
      }), /* @__PURE__ */ jsx$2(ModalHeader, {
        onCloseClick: () => hideEntityEditor(),
        moreMenu: (entity == null ? void 0 : entity.id) ? {
          menu: [{
            events: {
              mouse: {
                onClick: () => {
                  if (model && (entity == null ? void 0 : entity.id)) {
                    const deleteFunction = actions == null ? void 0 : actions[`delete${model.name}`];
                    if (deleteFunction)
                      dispatch(deleteFunction(entity.id));
                  }
                }
              }
            },
            icon: {
              color: Colors.Error,
              name: BasicIcons.TrashCan
            },
            label: "Delete",
            textColor: TextColors.Error
          }]
        } : void 0,
        title: getHeaderTitle()
      }), /* @__PURE__ */ jsx$2(Container$8, {
        padding: {
          all: Amount.Default
        },
        style: {
          top: "60px !important"
        },
        children: getContent()
      })]
    }))
  });
});
const Backdrop = memo((_gb) => {
  var _hb = _gb, {
    as = "div",
    background = {},
    children,
    className = "",
    position = {},
    states = {}
  } = _hb, props = __objRest(_hb, [
    "as",
    "background",
    "children",
    "className",
    "position",
    "states"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    as,
    background: __spreadValues({
      color: BackgroundColors.Darker
    }, background),
    className: `${className} backdrop`,
    position: __spreadValues({
      behavior: PositionBehavior.Absolute,
      bottom: 0,
      left: 0,
      right: 0,
      top: 0
    }, position),
    states: __spreadValues({
      state: __spreadValues({
        visible: false
      }, states.state)
    }, states)
  }, props), {
    children
  }));
});
const WebApplication = memo((_ib) => {
  var _jb = _ib, {
    actions,
    authentication = false,
    background = {},
    children,
    className = "",
    httpClient,
    size = {}
  } = _jb, props = __objRest(_jb, [
    "actions",
    "authentication",
    "background",
    "children",
    "className",
    "httpClient",
    "size"
  ]);
  var _a2, _b, _c, _d;
  const [loginRequired, setLoginRequired] = useState(true);
  const location = useLocation();
  const navigate = useNavigate();
  const inProgress = useSelector((state) => state.user.authentication.login.inProgress);
  const loggedIn = useSelector((state) => state.user.authentication.state.loggedIn);
  const routes = useSelector((state) => state.app.routes.list);
  const indexPagePath = (_b = (_a2 = routes.find((r2) => r2.role === Q$1.Index)) == null ? void 0 : _a2.path) != null ? _b : "/";
  const loginPagePath = (_d = (_c = routes.find((r2) => r2.role === Q$1.Login)) == null ? void 0 : _c.path) != null ? _d : "login";
  const checkAuth = () => {
    routes.forEach((route) => {
      var _a3, _b2, _c2;
      const routePath = (_a3 = route == null ? void 0 : route.path) != null ? _a3 : "";
      const match2 = matchPath((_b2 = route == null ? void 0 : route.path) != null ? _b2 : "", location.pathname);
      if (match2) {
        setLoginRequired((_c2 = route == null ? void 0 : route.loginRequired) != null ? _c2 : false);
      }
      if (loginPagePath && match2 && routePath === loginPagePath && loggedIn && !inProgress) {
        navigate(indexPagePath);
      } else if (loginPagePath && routePath !== loginPagePath && match2 && route.loginRequired && !loggedIn && !inProgress) {
        navigate(loginPagePath);
      }
    });
  };
  useEffect(() => {
    if (authentication)
      checkAuth();
  }, [location.pathname]);
  useEffect(() => {
    if (authentication)
      checkAuth();
  }, [loggedIn]);
  useEffect(() => {
    if (authentication)
      checkAuth();
  }, [inProgress]);
  useEffect(() => {
    if (authentication)
      checkAuth();
  }, []);
  const {
    current,
    list
  } = useSelector((state) => state.ui.themes);
  const loginCondition = authentication ? loggedIn && (loginRequired || !loginRequired) || !loggedIn && !loginRequired : true;
  const showOutlet = !inProgress && loginCondition;
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.Lightest
    }, background),
    className: `${className} web-application`,
    position: {
      behavior: PositionBehavior.Absolute,
      bottom: 0,
      left: 0,
      right: 0,
      top: 0
    },
    size: __spreadValues({
      fill: Fill.Both
    }, size)
  }, props), {
    children: /* @__PURE__ */ jsxs$1(ThemeProvider, {
      theme: current,
      themes: list,
      children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
        states: {
          state: {
            visible: !showOutlet
          }
        }
      }), /* @__PURE__ */ jsx$2(Backdrop, {
        states: {
          state: {
            visible: !showOutlet
          }
        }
      }), showOutlet && /* @__PURE__ */ jsx$2(Outlet, {}), /* @__PURE__ */ jsx$2(EntityPanel, {
        actions,
        httpClient
      })]
    })
  }));
});
const SubTitle = memo((_kb) => {
  var _lb = _kb, {
    as = "h2",
    children,
    className = "",
    lineHeight = Sizes.Small,
    textSize = TextSize.Large,
    textColor = TextColors.SubTitle,
    textWeight = TextWeight.More
  } = _lb, props = __objRest(_lb, [
    "as",
    "children",
    "className",
    "lineHeight",
    "textSize",
    "textColor",
    "textWeight"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    as,
    className: `${className} title`,
    lineHeight,
    lineWrap: false,
    textWeight,
    textColor,
    textSize
  }, props), {
    children: children != null ? children : ""
  }));
});
const Workspace = memo((_mb) => {
  var _nb = _mb, {
    alignment = {},
    background = {},
    className = "",
    children,
    header,
    layout: Layout2,
    loading = false,
    loginRequired = false,
    padding = {},
    size = {},
    title
  } = _nb, props = __objRest(_nb, [
    "alignment",
    "background",
    "className",
    "children",
    "header",
    "layout",
    "loading",
    "loginRequired",
    "padding",
    "size",
    "title"
  ]);
  useTitle(title);
  const WorkspaceComp = (props2) => /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues(__spreadValues({
    alignment: __spreadValues({
      overflow: Overflow.ScrollVertical,
      vertical: AlignVertical.Top
    }, alignment),
    background: __spreadValues({
      color: BackgroundColors.Workspace
    }, background),
    className: `${className} workspace`,
    padding: __spreadValues({
      all: Amount.Most
    }, padding),
    size: __spreadValues({
      fill: Fill.Both
    }, size)
  }, props), props2), {
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      states: {
        state: {
          visible: loading
        }
      }
    }), ((header == null ? void 0 : header.title) || (header == null ? void 0 : header.actions)) && /* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      },
      className: "workspace-header",
      margin: {
        bottom: Amount.All
      },
      children: [/* @__PURE__ */ jsxs$1(Container$8, {
        children: [(header == null ? void 0 : header.title) && /* @__PURE__ */ jsx$2(Container$8, {
          alignment: {
            orientation: Orientation.Horizontal,
            vertical: AlignVertical.Center
          },
          className: "workspace-title",
          children: typeof header.title === "string" ? /* @__PURE__ */ jsx$2(Title, {
            children: header.title
          }) : header.title
        }), (header == null ? void 0 : header.subTitle) && /* @__PURE__ */ jsx$2(Container$8, {
          className: "workspace-sub-title",
          alignment: {
            orientation: Orientation.Horizontal,
            vertical: AlignVertical.Center
          },
          children: /* @__PURE__ */ jsx$2(SubTitle, {
            children: header.subTitle
          })
        })]
      }), (header == null ? void 0 : header.actions) && /* @__PURE__ */ jsx$2(Container$8, {
        alignment: {
          horizontal: AlignHorizontal.Right
        },
        className: "workspace-actions",
        children: header.actions
      })]
    }), children]
  }));
  const Child = () => Layout2 ? cloneElement(/* @__PURE__ */ jsx$2(Layout2, __spreadValues({
    scrollable: true
  }, props)), props, /* @__PURE__ */ jsx$2(WorkspaceComp, __spreadValues({}, props))) : /* @__PURE__ */ jsx$2(WorkspaceComp, __spreadValues({}, props));
  return /* @__PURE__ */ jsx$2(Child, {});
});
var fileDownload = function(data2, filename, mime, bom) {
  var blobData = typeof bom !== "undefined" ? [bom, data2] : [data2];
  var blob = new Blob(blobData, { type: mime || "application/octet-stream" });
  if (typeof window.navigator.msSaveBlob !== "undefined") {
    window.navigator.msSaveBlob(blob, filename);
  } else {
    var blobURL = window.URL && window.URL.createObjectURL ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);
    var tempLink = document.createElement("a");
    tempLink.style.display = "none";
    tempLink.href = blobURL;
    tempLink.setAttribute("download", filename);
    if (typeof tempLink.download === "undefined") {
      tempLink.setAttribute("target", "_blank");
    }
    document.body.appendChild(tempLink);
    tempLink.click();
    setTimeout(function() {
      document.body.removeChild(tempLink);
      window.URL.revokeObjectURL(blobURL);
    }, 200);
  }
};
function downloadDataAsFile({
  data: data2,
  fileName
}) {
  fileDownload(data2, `${fileName}.csv`);
}
function formatObjectToCSVData({
  objectType
}) {
  switch (objectType) {
    case "something":
      return "";
    default:
      return "";
  }
}
function fetchFromObject(obj, prop) {
  if (typeof obj === "undefined") {
    return false;
  }
  var _index = prop.indexOf(".");
  if (_index > -1) {
    return fetchFromObject(obj[prop.substring(0, _index)], prop.substr(_index + 1));
  }
  return obj[prop];
}
const StringLabel = memo((_ob) => {
  var _pb = _ob, {
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _pb, props = __objRest(_pb, [
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: value2
  }));
});
const NumberLabel = memo((_qb) => {
  var _rb = _qb, {
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _rb, props = __objRest(_rb, [
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: value2
  }));
});
const CurrencyAmountLabel = memo((_sb) => {
  var _tb = _sb, {
    amount,
    currency
  } = _tb, props = __objRest(_tb, [
    "amount",
    "currency"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({}, props), {
    children: amount === 0 ? "$0" : amount ? `$${amount.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",")}` : ""
  }));
});
const PercentLabel = memo((_ub) => {
  var _vb = _ub, {
    value: value2
  } = _vb, props = __objRest(_vb, [
    "value"
  ]);
  return /* @__PURE__ */ jsxs$1(Label, __spreadProps(__spreadValues({}, props), {
    children: [value2, "%"]
  }));
});
class LuxonError extends Error {
}
class InvalidDateTimeError extends LuxonError {
  constructor(reason2) {
    super(`Invalid DateTime: ${reason2.toMessage()}`);
  }
}
class InvalidIntervalError extends LuxonError {
  constructor(reason2) {
    super(`Invalid Interval: ${reason2.toMessage()}`);
  }
}
class InvalidDurationError extends LuxonError {
  constructor(reason2) {
    super(`Invalid Duration: ${reason2.toMessage()}`);
  }
}
class ConflictingSpecificationError extends LuxonError {
}
class InvalidUnitError extends LuxonError {
  constructor(unit) {
    super(`Invalid unit ${unit}`);
  }
}
class InvalidArgumentError extends LuxonError {
}
class ZoneIsAbstractError extends LuxonError {
  constructor() {
    super("Zone is an abstract class");
  }
}
const n$1 = "numeric", s$1 = "short", l$1 = "long";
const DATE_SHORT = {
  year: n$1,
  month: n$1,
  day: n$1
};
const DATE_MED = {
  year: n$1,
  month: s$1,
  day: n$1
};
const DATE_MED_WITH_WEEKDAY = {
  year: n$1,
  month: s$1,
  day: n$1,
  weekday: s$1
};
const DATE_FULL = {
  year: n$1,
  month: l$1,
  day: n$1
};
const DATE_HUGE = {
  year: n$1,
  month: l$1,
  day: n$1,
  weekday: l$1
};
const TIME_SIMPLE = {
  hour: n$1,
  minute: n$1
};
const TIME_WITH_SECONDS = {
  hour: n$1,
  minute: n$1,
  second: n$1
};
const TIME_WITH_SHORT_OFFSET = {
  hour: n$1,
  minute: n$1,
  second: n$1,
  timeZoneName: s$1
};
const TIME_WITH_LONG_OFFSET = {
  hour: n$1,
  minute: n$1,
  second: n$1,
  timeZoneName: l$1
};
const TIME_24_SIMPLE = {
  hour: n$1,
  minute: n$1,
  hourCycle: "h23"
};
const TIME_24_WITH_SECONDS = {
  hour: n$1,
  minute: n$1,
  second: n$1,
  hourCycle: "h23"
};
const TIME_24_WITH_SHORT_OFFSET = {
  hour: n$1,
  minute: n$1,
  second: n$1,
  hourCycle: "h23",
  timeZoneName: s$1
};
const TIME_24_WITH_LONG_OFFSET = {
  hour: n$1,
  minute: n$1,
  second: n$1,
  hourCycle: "h23",
  timeZoneName: l$1
};
const DATETIME_SHORT = {
  year: n$1,
  month: n$1,
  day: n$1,
  hour: n$1,
  minute: n$1
};
const DATETIME_SHORT_WITH_SECONDS = {
  year: n$1,
  month: n$1,
  day: n$1,
  hour: n$1,
  minute: n$1,
  second: n$1
};
const DATETIME_MED = {
  year: n$1,
  month: s$1,
  day: n$1,
  hour: n$1,
  minute: n$1
};
const DATETIME_MED_WITH_SECONDS = {
  year: n$1,
  month: s$1,
  day: n$1,
  hour: n$1,
  minute: n$1,
  second: n$1
};
const DATETIME_MED_WITH_WEEKDAY = {
  year: n$1,
  month: s$1,
  day: n$1,
  weekday: s$1,
  hour: n$1,
  minute: n$1
};
const DATETIME_FULL = {
  year: n$1,
  month: l$1,
  day: n$1,
  hour: n$1,
  minute: n$1,
  timeZoneName: s$1
};
const DATETIME_FULL_WITH_SECONDS = {
  year: n$1,
  month: l$1,
  day: n$1,
  hour: n$1,
  minute: n$1,
  second: n$1,
  timeZoneName: s$1
};
const DATETIME_HUGE = {
  year: n$1,
  month: l$1,
  day: n$1,
  weekday: l$1,
  hour: n$1,
  minute: n$1,
  timeZoneName: l$1
};
const DATETIME_HUGE_WITH_SECONDS = {
  year: n$1,
  month: l$1,
  day: n$1,
  weekday: l$1,
  hour: n$1,
  minute: n$1,
  second: n$1,
  timeZoneName: l$1
};
function isUndefined(o2) {
  return typeof o2 === "undefined";
}
function isNumber(o2) {
  return typeof o2 === "number";
}
function isInteger(o2) {
  return typeof o2 === "number" && o2 % 1 === 0;
}
function isString$5(o2) {
  return typeof o2 === "string";
}
function isDate(o2) {
  return Object.prototype.toString.call(o2) === "[object Date]";
}
function hasRelative() {
  try {
    return typeof Intl !== "undefined" && !!Intl.RelativeTimeFormat;
  } catch (e2) {
    return false;
  }
}
function maybeArray(thing) {
  return Array.isArray(thing) ? thing : [thing];
}
function bestBy(arr, by, compare) {
  if (arr.length === 0) {
    return void 0;
  }
  return arr.reduce((best, next) => {
    const pair = [by(next), next];
    if (!best) {
      return pair;
    } else if (compare(best[0], pair[0]) === best[0]) {
      return best;
    } else {
      return pair;
    }
  }, null)[1];
}
function pick(obj, keys2) {
  return keys2.reduce((a, k2) => {
    a[k2] = obj[k2];
    return a;
  }, {});
}
function hasOwnProperty$3(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}
function integerBetween(thing, bottom, top) {
  return isInteger(thing) && thing >= bottom && thing <= top;
}
function floorMod(x, n2) {
  return x - n2 * Math.floor(x / n2);
}
function padStart(input, n2 = 2) {
  const isNeg = input < 0;
  let padded;
  if (isNeg) {
    padded = "-" + ("" + -input).padStart(n2, "0");
  } else {
    padded = ("" + input).padStart(n2, "0");
  }
  return padded;
}
function parseInteger(string2) {
  if (isUndefined(string2) || string2 === null || string2 === "") {
    return void 0;
  } else {
    return parseInt(string2, 10);
  }
}
function parseFloating(string2) {
  if (isUndefined(string2) || string2 === null || string2 === "") {
    return void 0;
  } else {
    return parseFloat(string2);
  }
}
function parseMillis(fraction) {
  if (isUndefined(fraction) || fraction === null || fraction === "") {
    return void 0;
  } else {
    const f2 = parseFloat("0." + fraction) * 1e3;
    return Math.floor(f2);
  }
}
function roundTo(number2, digits, towardZero = false) {
  const factor2 = 10 ** digits, rounder = towardZero ? Math.trunc : Math.round;
  return rounder(number2 * factor2) / factor2;
}
function isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
function daysInMonth(year, month) {
  const modMonth = floorMod(month - 1, 12) + 1, modYear = year + (month - modMonth) / 12;
  if (modMonth === 2) {
    return isLeapYear(modYear) ? 29 : 28;
  } else {
    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];
  }
}
function objToLocalTS(obj) {
  let d2 = Date.UTC(obj.year, obj.month - 1, obj.day, obj.hour, obj.minute, obj.second, obj.millisecond);
  if (obj.year < 100 && obj.year >= 0) {
    d2 = new Date(d2);
    d2.setUTCFullYear(d2.getUTCFullYear() - 1900);
  }
  return +d2;
}
function weeksInWeekYear(weekYear) {
  const p1 = (weekYear + Math.floor(weekYear / 4) - Math.floor(weekYear / 100) + Math.floor(weekYear / 400)) % 7, last = weekYear - 1, p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;
  return p1 === 4 || p2 === 3 ? 53 : 52;
}
function untruncateYear(year) {
  if (year > 99) {
    return year;
  } else
    return year > 60 ? 1900 + year : 2e3 + year;
}
function parseZoneInfo(ts, offsetFormat, locale2, timeZone = null) {
  const date = new Date(ts), intlOpts = {
    hourCycle: "h23",
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit"
  };
  if (timeZone) {
    intlOpts.timeZone = timeZone;
  }
  const modified = __spreadValues({ timeZoneName: offsetFormat }, intlOpts);
  const parsed = new Intl.DateTimeFormat(locale2, modified).formatToParts(date).find((m2) => m2.type.toLowerCase() === "timezonename");
  return parsed ? parsed.value : null;
}
function signedOffset(offHourStr, offMinuteStr) {
  let offHour = parseInt(offHourStr, 10);
  if (Number.isNaN(offHour)) {
    offHour = 0;
  }
  const offMin = parseInt(offMinuteStr, 10) || 0, offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;
  return offHour * 60 + offMinSigned;
}
function asNumber(value2) {
  const numericValue = Number(value2);
  if (typeof value2 === "boolean" || value2 === "" || Number.isNaN(numericValue))
    throw new InvalidArgumentError(`Invalid unit value ${value2}`);
  return numericValue;
}
function normalizeObject(obj, normalizer) {
  const normalized = {};
  for (const u2 in obj) {
    if (hasOwnProperty$3(obj, u2)) {
      const v2 = obj[u2];
      if (v2 === void 0 || v2 === null)
        continue;
      normalized[normalizer(u2)] = asNumber(v2);
    }
  }
  return normalized;
}
function formatOffset(offset2, format) {
  const hours = Math.trunc(Math.abs(offset2 / 60)), minutes = Math.trunc(Math.abs(offset2 % 60)), sign2 = offset2 >= 0 ? "+" : "-";
  switch (format) {
    case "short":
      return `${sign2}${padStart(hours, 2)}:${padStart(minutes, 2)}`;
    case "narrow":
      return `${sign2}${hours}${minutes > 0 ? `:${minutes}` : ""}`;
    case "techie":
      return `${sign2}${padStart(hours, 2)}${padStart(minutes, 2)}`;
    default:
      throw new RangeError(`Value format ${format} is out of range for property format`);
  }
}
function timeObject(obj) {
  return pick(obj, ["hour", "minute", "second", "millisecond"]);
}
const ianaRegex = /[A-Za-z_+-]{1,256}(:?\/[A-Za-z0-9_+-]{1,256}(\/[A-Za-z0-9_+-]{1,256})?)?/;
const monthsLong = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December"
];
const monthsShort = [
  "Jan",
  "Feb",
  "Mar",
  "Apr",
  "May",
  "Jun",
  "Jul",
  "Aug",
  "Sep",
  "Oct",
  "Nov",
  "Dec"
];
const monthsNarrow = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];
function months(length) {
  switch (length) {
    case "narrow":
      return [...monthsNarrow];
    case "short":
      return [...monthsShort];
    case "long":
      return [...monthsLong];
    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];
    case "2-digit":
      return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];
    default:
      return null;
  }
}
const weekdaysLong = [
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday",
  "Sunday"
];
const weekdaysShort = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
const weekdaysNarrow = ["M", "T", "W", "T", "F", "S", "S"];
function weekdays(length) {
  switch (length) {
    case "narrow":
      return [...weekdaysNarrow];
    case "short":
      return [...weekdaysShort];
    case "long":
      return [...weekdaysLong];
    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7"];
    default:
      return null;
  }
}
const meridiems = ["AM", "PM"];
const erasLong = ["Before Christ", "Anno Domini"];
const erasShort = ["BC", "AD"];
const erasNarrow = ["B", "A"];
function eras(length) {
  switch (length) {
    case "narrow":
      return [...erasNarrow];
    case "short":
      return [...erasShort];
    case "long":
      return [...erasLong];
    default:
      return null;
  }
}
function meridiemForDateTime(dt) {
  return meridiems[dt.hour < 12 ? 0 : 1];
}
function weekdayForDateTime(dt, length) {
  return weekdays(length)[dt.weekday - 1];
}
function monthForDateTime(dt, length) {
  return months(length)[dt.month - 1];
}
function eraForDateTime(dt, length) {
  return eras(length)[dt.year < 0 ? 0 : 1];
}
function formatRelativeTime(unit, count, numeric = "always", narrow = false) {
  const units = {
    years: ["year", "yr."],
    quarters: ["quarter", "qtr."],
    months: ["month", "mo."],
    weeks: ["week", "wk."],
    days: ["day", "day", "days"],
    hours: ["hour", "hr."],
    minutes: ["minute", "min."],
    seconds: ["second", "sec."]
  };
  const lastable = ["hours", "minutes", "seconds"].indexOf(unit) === -1;
  if (numeric === "auto" && lastable) {
    const isDay = unit === "days";
    switch (count) {
      case 1:
        return isDay ? "tomorrow" : `next ${units[unit][0]}`;
      case -1:
        return isDay ? "yesterday" : `last ${units[unit][0]}`;
      case 0:
        return isDay ? "today" : `this ${units[unit][0]}`;
    }
  }
  const isInPast = Object.is(count, -0) || count < 0, fmtValue = Math.abs(count), singular = fmtValue === 1, lilUnits = units[unit], fmtUnit = narrow ? singular ? lilUnits[1] : lilUnits[2] || lilUnits[1] : singular ? units[unit][0] : unit;
  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;
}
function stringifyTokens(splits, tokenToString) {
  let s2 = "";
  for (const token2 of splits) {
    if (token2.literal) {
      s2 += token2.val;
    } else {
      s2 += tokenToString(token2.val);
    }
  }
  return s2;
}
const macroTokenToFormatOpts = {
  D: DATE_SHORT,
  DD: DATE_MED,
  DDD: DATE_FULL,
  DDDD: DATE_HUGE,
  t: TIME_SIMPLE,
  tt: TIME_WITH_SECONDS,
  ttt: TIME_WITH_SHORT_OFFSET,
  tttt: TIME_WITH_LONG_OFFSET,
  T: TIME_24_SIMPLE,
  TT: TIME_24_WITH_SECONDS,
  TTT: TIME_24_WITH_SHORT_OFFSET,
  TTTT: TIME_24_WITH_LONG_OFFSET,
  f: DATETIME_SHORT,
  ff: DATETIME_MED,
  fff: DATETIME_FULL,
  ffff: DATETIME_HUGE,
  F: DATETIME_SHORT_WITH_SECONDS,
  FF: DATETIME_MED_WITH_SECONDS,
  FFF: DATETIME_FULL_WITH_SECONDS,
  FFFF: DATETIME_HUGE_WITH_SECONDS
};
class Formatter {
  static create(locale2, opts = {}) {
    return new Formatter(locale2, opts);
  }
  static parseFormat(fmt) {
    let current = null, currentFull = "", bracketed = false;
    const splits = [];
    for (let i2 = 0; i2 < fmt.length; i2++) {
      const c2 = fmt.charAt(i2);
      if (c2 === "'") {
        if (currentFull.length > 0) {
          splits.push({ literal: bracketed, val: currentFull });
        }
        current = null;
        currentFull = "";
        bracketed = !bracketed;
      } else if (bracketed) {
        currentFull += c2;
      } else if (c2 === current) {
        currentFull += c2;
      } else {
        if (currentFull.length > 0) {
          splits.push({ literal: false, val: currentFull });
        }
        currentFull = c2;
        current = c2;
      }
    }
    if (currentFull.length > 0) {
      splits.push({ literal: bracketed, val: currentFull });
    }
    return splits;
  }
  static macroTokenToFormatOpts(token2) {
    return macroTokenToFormatOpts[token2];
  }
  constructor(locale2, formatOpts) {
    this.opts = formatOpts;
    this.loc = locale2;
    this.systemLoc = null;
  }
  formatWithSystemDefault(dt, opts) {
    if (this.systemLoc === null) {
      this.systemLoc = this.loc.redefaultToSystem();
    }
    const df = this.systemLoc.dtFormatter(dt, __spreadValues(__spreadValues({}, this.opts), opts));
    return df.format();
  }
  formatDateTime(dt, opts = {}) {
    const df = this.loc.dtFormatter(dt, __spreadValues(__spreadValues({}, this.opts), opts));
    return df.format();
  }
  formatDateTimeParts(dt, opts = {}) {
    const df = this.loc.dtFormatter(dt, __spreadValues(__spreadValues({}, this.opts), opts));
    return df.formatToParts();
  }
  resolvedOptions(dt, opts = {}) {
    const df = this.loc.dtFormatter(dt, __spreadValues(__spreadValues({}, this.opts), opts));
    return df.resolvedOptions();
  }
  num(n2, p2 = 0) {
    if (this.opts.forceSimple) {
      return padStart(n2, p2);
    }
    const opts = __spreadValues({}, this.opts);
    if (p2 > 0) {
      opts.padTo = p2;
    }
    return this.loc.numberFormatter(opts).format(n2);
  }
  formatDateTimeFromString(dt, fmt) {
    const knownEnglish = this.loc.listingMode() === "en", useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== "gregory", string2 = (opts, extract) => this.loc.extract(dt, opts, extract), formatOffset2 = (opts) => {
      if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {
        return "Z";
      }
      return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : "";
    }, meridiem = () => knownEnglish ? meridiemForDateTime(dt) : string2({ hour: "numeric", hourCycle: "h12" }, "dayperiod"), month = (length, standalone) => knownEnglish ? monthForDateTime(dt, length) : string2(standalone ? { month: length } : { month: length, day: "numeric" }, "month"), weekday = (length, standalone) => knownEnglish ? weekdayForDateTime(dt, length) : string2(standalone ? { weekday: length } : { weekday: length, month: "long", day: "numeric" }, "weekday"), maybeMacro = (token2) => {
      const formatOpts = Formatter.macroTokenToFormatOpts(token2);
      if (formatOpts) {
        return this.formatWithSystemDefault(dt, formatOpts);
      } else {
        return token2;
      }
    }, era = (length) => knownEnglish ? eraForDateTime(dt, length) : string2({ era: length }, "era"), tokenToString = (token2) => {
      switch (token2) {
        case "S":
          return this.num(dt.millisecond);
        case "u":
        case "SSS":
          return this.num(dt.millisecond, 3);
        case "s":
          return this.num(dt.second);
        case "ss":
          return this.num(dt.second, 2);
        case "uu":
          return this.num(Math.floor(dt.millisecond / 10), 2);
        case "uuu":
          return this.num(Math.floor(dt.millisecond / 100));
        case "m":
          return this.num(dt.minute);
        case "mm":
          return this.num(dt.minute, 2);
        case "h":
          return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);
        case "hh":
          return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);
        case "H":
          return this.num(dt.hour);
        case "HH":
          return this.num(dt.hour, 2);
        case "Z":
          return formatOffset2({ format: "narrow", allowZ: this.opts.allowZ });
        case "ZZ":
          return formatOffset2({ format: "short", allowZ: this.opts.allowZ });
        case "ZZZ":
          return formatOffset2({ format: "techie", allowZ: this.opts.allowZ });
        case "ZZZZ":
          return dt.zone.offsetName(dt.ts, { format: "short", locale: this.loc.locale });
        case "ZZZZZ":
          return dt.zone.offsetName(dt.ts, { format: "long", locale: this.loc.locale });
        case "z":
          return dt.zoneName;
        case "a":
          return meridiem();
        case "d":
          return useDateTimeFormatter ? string2({ day: "numeric" }, "day") : this.num(dt.day);
        case "dd":
          return useDateTimeFormatter ? string2({ day: "2-digit" }, "day") : this.num(dt.day, 2);
        case "c":
          return this.num(dt.weekday);
        case "ccc":
          return weekday("short", true);
        case "cccc":
          return weekday("long", true);
        case "ccccc":
          return weekday("narrow", true);
        case "E":
          return this.num(dt.weekday);
        case "EEE":
          return weekday("short", false);
        case "EEEE":
          return weekday("long", false);
        case "EEEEE":
          return weekday("narrow", false);
        case "L":
          return useDateTimeFormatter ? string2({ month: "numeric", day: "numeric" }, "month") : this.num(dt.month);
        case "LL":
          return useDateTimeFormatter ? string2({ month: "2-digit", day: "numeric" }, "month") : this.num(dt.month, 2);
        case "LLL":
          return month("short", true);
        case "LLLL":
          return month("long", true);
        case "LLLLL":
          return month("narrow", true);
        case "M":
          return useDateTimeFormatter ? string2({ month: "numeric" }, "month") : this.num(dt.month);
        case "MM":
          return useDateTimeFormatter ? string2({ month: "2-digit" }, "month") : this.num(dt.month, 2);
        case "MMM":
          return month("short", false);
        case "MMMM":
          return month("long", false);
        case "MMMMM":
          return month("narrow", false);
        case "y":
          return useDateTimeFormatter ? string2({ year: "numeric" }, "year") : this.num(dt.year);
        case "yy":
          return useDateTimeFormatter ? string2({ year: "2-digit" }, "year") : this.num(dt.year.toString().slice(-2), 2);
        case "yyyy":
          return useDateTimeFormatter ? string2({ year: "numeric" }, "year") : this.num(dt.year, 4);
        case "yyyyyy":
          return useDateTimeFormatter ? string2({ year: "numeric" }, "year") : this.num(dt.year, 6);
        case "G":
          return era("short");
        case "GG":
          return era("long");
        case "GGGGG":
          return era("narrow");
        case "kk":
          return this.num(dt.weekYear.toString().slice(-2), 2);
        case "kkkk":
          return this.num(dt.weekYear, 4);
        case "W":
          return this.num(dt.weekNumber);
        case "WW":
          return this.num(dt.weekNumber, 2);
        case "o":
          return this.num(dt.ordinal);
        case "ooo":
          return this.num(dt.ordinal, 3);
        case "q":
          return this.num(dt.quarter);
        case "qq":
          return this.num(dt.quarter, 2);
        case "X":
          return this.num(Math.floor(dt.ts / 1e3));
        case "x":
          return this.num(dt.ts);
        default:
          return maybeMacro(token2);
      }
    };
    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);
  }
  formatDurationFromString(dur, fmt) {
    const tokenToField = (token2) => {
      switch (token2[0]) {
        case "S":
          return "millisecond";
        case "s":
          return "second";
        case "m":
          return "minute";
        case "h":
          return "hour";
        case "d":
          return "day";
        case "M":
          return "month";
        case "y":
          return "year";
        default:
          return null;
      }
    }, tokenToString = (lildur) => (token2) => {
      const mapped = tokenToField(token2);
      if (mapped) {
        return this.num(lildur.get(mapped), token2.length);
      } else {
        return token2;
      }
    }, tokens = Formatter.parseFormat(fmt), realTokens = tokens.reduce((found, { literal, val }) => literal ? found : found.concat(val), []), collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter((t2) => t2));
    return stringifyTokens(tokens, tokenToString(collapsed));
  }
}
class Invalid {
  constructor(reason2, explanation) {
    this.reason = reason2;
    this.explanation = explanation;
  }
  toMessage() {
    if (this.explanation) {
      return `${this.reason}: ${this.explanation}`;
    } else {
      return this.reason;
    }
  }
}
class Zone {
  get type() {
    throw new ZoneIsAbstractError();
  }
  get name() {
    throw new ZoneIsAbstractError();
  }
  get isUniversal() {
    throw new ZoneIsAbstractError();
  }
  offsetName(ts, opts) {
    throw new ZoneIsAbstractError();
  }
  formatOffset(ts, format) {
    throw new ZoneIsAbstractError();
  }
  offset(ts) {
    throw new ZoneIsAbstractError();
  }
  equals(otherZone) {
    throw new ZoneIsAbstractError();
  }
  get isValid() {
    throw new ZoneIsAbstractError();
  }
}
let singleton$1 = null;
class SystemZone extends Zone {
  static get instance() {
    if (singleton$1 === null) {
      singleton$1 = new SystemZone();
    }
    return singleton$1;
  }
  get type() {
    return "system";
  }
  get name() {
    return new Intl.DateTimeFormat().resolvedOptions().timeZone;
  }
  get isUniversal() {
    return false;
  }
  offsetName(ts, { format, locale: locale2 }) {
    return parseZoneInfo(ts, format, locale2);
  }
  formatOffset(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  offset(ts) {
    return -new Date(ts).getTimezoneOffset();
  }
  equals(otherZone) {
    return otherZone.type === "system";
  }
  get isValid() {
    return true;
  }
}
let dtfCache = {};
function makeDTF(zone) {
  if (!dtfCache[zone]) {
    dtfCache[zone] = new Intl.DateTimeFormat("en-US", {
      hour12: false,
      timeZone: zone,
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return dtfCache[zone];
}
const typeToPos = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function hackyOffset(dtf, date) {
  const formatted = dtf.format(date).replace(/\u200E/g, ""), parsed = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(formatted), [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed;
  return [fYear, fMonth, fDay, fHour, fMinute, fSecond];
}
function partsOffset(dtf, date) {
  const formatted = dtf.formatToParts(date), filled = [];
  for (let i2 = 0; i2 < formatted.length; i2++) {
    const { type, value: value2 } = formatted[i2], pos = typeToPos[type];
    if (!isUndefined(pos)) {
      filled[pos] = parseInt(value2, 10);
    }
  }
  return filled;
}
let ianaZoneCache = {};
class IANAZone extends Zone {
  static create(name2) {
    if (!ianaZoneCache[name2]) {
      ianaZoneCache[name2] = new IANAZone(name2);
    }
    return ianaZoneCache[name2];
  }
  static resetCache() {
    ianaZoneCache = {};
    dtfCache = {};
  }
  static isValidSpecifier(s2) {
    return this.isValidZone(s2);
  }
  static isValidZone(zone) {
    if (!zone) {
      return false;
    }
    try {
      new Intl.DateTimeFormat("en-US", { timeZone: zone }).format();
      return true;
    } catch (e2) {
      return false;
    }
  }
  constructor(name2) {
    super();
    this.zoneName = name2;
    this.valid = IANAZone.isValidZone(name2);
  }
  get type() {
    return "iana";
  }
  get name() {
    return this.zoneName;
  }
  get isUniversal() {
    return false;
  }
  offsetName(ts, { format, locale: locale2 }) {
    return parseZoneInfo(ts, format, locale2, this.name);
  }
  formatOffset(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  offset(ts) {
    const date = new Date(ts);
    if (isNaN(date))
      return NaN;
    const dtf = makeDTF(this.name), [year, month, day, hour, minute, second] = dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date);
    const adjustedHour = hour === 24 ? 0 : hour;
    const asUTC = objToLocalTS({
      year,
      month,
      day,
      hour: adjustedHour,
      minute,
      second,
      millisecond: 0
    });
    let asTS = +date;
    const over = asTS % 1e3;
    asTS -= over >= 0 ? over : 1e3 + over;
    return (asUTC - asTS) / (60 * 1e3);
  }
  equals(otherZone) {
    return otherZone.type === "iana" && otherZone.name === this.name;
  }
  get isValid() {
    return this.valid;
  }
}
let singleton = null;
class FixedOffsetZone extends Zone {
  static get utcInstance() {
    if (singleton === null) {
      singleton = new FixedOffsetZone(0);
    }
    return singleton;
  }
  static instance(offset2) {
    return offset2 === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset2);
  }
  static parseSpecifier(s2) {
    if (s2) {
      const r2 = s2.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);
      if (r2) {
        return new FixedOffsetZone(signedOffset(r2[1], r2[2]));
      }
    }
    return null;
  }
  constructor(offset2) {
    super();
    this.fixed = offset2;
  }
  get type() {
    return "fixed";
  }
  get name() {
    return this.fixed === 0 ? "UTC" : `UTC${formatOffset(this.fixed, "narrow")}`;
  }
  offsetName() {
    return this.name;
  }
  formatOffset(ts, format) {
    return formatOffset(this.fixed, format);
  }
  get isUniversal() {
    return true;
  }
  offset() {
    return this.fixed;
  }
  equals(otherZone) {
    return otherZone.type === "fixed" && otherZone.fixed === this.fixed;
  }
  get isValid() {
    return true;
  }
}
class InvalidZone extends Zone {
  constructor(zoneName) {
    super();
    this.zoneName = zoneName;
  }
  get type() {
    return "invalid";
  }
  get name() {
    return this.zoneName;
  }
  get isUniversal() {
    return false;
  }
  offsetName() {
    return null;
  }
  formatOffset() {
    return "";
  }
  offset() {
    return NaN;
  }
  equals() {
    return false;
  }
  get isValid() {
    return false;
  }
}
function normalizeZone(input, defaultZone2) {
  if (isUndefined(input) || input === null) {
    return defaultZone2;
  } else if (input instanceof Zone) {
    return input;
  } else if (isString$5(input)) {
    const lowered = input.toLowerCase();
    if (lowered === "local" || lowered === "system")
      return defaultZone2;
    else if (lowered === "utc" || lowered === "gmt")
      return FixedOffsetZone.utcInstance;
    else
      return FixedOffsetZone.parseSpecifier(lowered) || IANAZone.create(input);
  } else if (isNumber(input)) {
    return FixedOffsetZone.instance(input);
  } else if (typeof input === "object" && input.offset && typeof input.offset === "number") {
    return input;
  } else {
    return new InvalidZone(input);
  }
}
let now = () => Date.now(), defaultZone = "system", defaultLocale = null, defaultNumberingSystem = null, defaultOutputCalendar = null, throwOnInvalid;
class Settings {
  static get now() {
    return now;
  }
  static set now(n2) {
    now = n2;
  }
  static set defaultZone(zone) {
    defaultZone = zone;
  }
  static get defaultZone() {
    return normalizeZone(defaultZone, SystemZone.instance);
  }
  static get defaultLocale() {
    return defaultLocale;
  }
  static set defaultLocale(locale2) {
    defaultLocale = locale2;
  }
  static get defaultNumberingSystem() {
    return defaultNumberingSystem;
  }
  static set defaultNumberingSystem(numberingSystem) {
    defaultNumberingSystem = numberingSystem;
  }
  static get defaultOutputCalendar() {
    return defaultOutputCalendar;
  }
  static set defaultOutputCalendar(outputCalendar) {
    defaultOutputCalendar = outputCalendar;
  }
  static get throwOnInvalid() {
    return throwOnInvalid;
  }
  static set throwOnInvalid(t2) {
    throwOnInvalid = t2;
  }
  static resetCaches() {
    Locale.resetCache();
    IANAZone.resetCache();
  }
}
let intlLFCache = {};
function getCachedLF(locString, opts = {}) {
  const key = JSON.stringify([locString, opts]);
  let dtf = intlLFCache[key];
  if (!dtf) {
    dtf = new Intl.ListFormat(locString, opts);
    intlLFCache[key] = dtf;
  }
  return dtf;
}
let intlDTCache = {};
function getCachedDTF(locString, opts = {}) {
  const key = JSON.stringify([locString, opts]);
  let dtf = intlDTCache[key];
  if (!dtf) {
    dtf = new Intl.DateTimeFormat(locString, opts);
    intlDTCache[key] = dtf;
  }
  return dtf;
}
let intlNumCache = {};
function getCachedINF(locString, opts = {}) {
  const key = JSON.stringify([locString, opts]);
  let inf = intlNumCache[key];
  if (!inf) {
    inf = new Intl.NumberFormat(locString, opts);
    intlNumCache[key] = inf;
  }
  return inf;
}
let intlRelCache = {};
function getCachedRTF(locString, opts = {}) {
  const _a2 = opts, { base } = _a2, cacheKeyOpts = __objRest(_a2, ["base"]);
  const key = JSON.stringify([locString, cacheKeyOpts]);
  let inf = intlRelCache[key];
  if (!inf) {
    inf = new Intl.RelativeTimeFormat(locString, opts);
    intlRelCache[key] = inf;
  }
  return inf;
}
let sysLocaleCache = null;
function systemLocale() {
  if (sysLocaleCache) {
    return sysLocaleCache;
  } else {
    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;
    return sysLocaleCache;
  }
}
function parseLocaleString(localeStr) {
  const uIndex = localeStr.indexOf("-u-");
  if (uIndex === -1) {
    return [localeStr];
  } else {
    let options;
    const smaller = localeStr.substring(0, uIndex);
    try {
      options = getCachedDTF(localeStr).resolvedOptions();
    } catch (e2) {
      options = getCachedDTF(smaller).resolvedOptions();
    }
    const { numberingSystem, calendar } = options;
    return [smaller, numberingSystem, calendar];
  }
}
function intlConfigString(localeStr, numberingSystem, outputCalendar) {
  if (outputCalendar || numberingSystem) {
    localeStr += "-u";
    if (outputCalendar) {
      localeStr += `-ca-${outputCalendar}`;
    }
    if (numberingSystem) {
      localeStr += `-nu-${numberingSystem}`;
    }
    return localeStr;
  } else {
    return localeStr;
  }
}
function mapMonths(f2) {
  const ms = [];
  for (let i2 = 1; i2 <= 12; i2++) {
    const dt = DateTime.utc(2016, i2, 1);
    ms.push(f2(dt));
  }
  return ms;
}
function mapWeekdays(f2) {
  const ms = [];
  for (let i2 = 1; i2 <= 7; i2++) {
    const dt = DateTime.utc(2016, 11, 13 + i2);
    ms.push(f2(dt));
  }
  return ms;
}
function listStuff(loc, length, defaultOK, englishFn, intlFn) {
  const mode = loc.listingMode(defaultOK);
  if (mode === "error") {
    return null;
  } else if (mode === "en") {
    return englishFn(length);
  } else {
    return intlFn(length);
  }
}
function supportsFastNumbers(loc) {
  if (loc.numberingSystem && loc.numberingSystem !== "latn") {
    return false;
  } else {
    return loc.numberingSystem === "latn" || !loc.locale || loc.locale.startsWith("en") || new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === "latn";
  }
}
class PolyNumberFormatter {
  constructor(intl, forceSimple, opts) {
    this.padTo = opts.padTo || 0;
    this.floor = opts.floor || false;
    const _a2 = opts, { padTo, floor: floor2 } = _a2, otherOpts = __objRest(_a2, ["padTo", "floor"]);
    if (!forceSimple || Object.keys(otherOpts).length > 0) {
      const intlOpts = __spreadValues({ useGrouping: false }, opts);
      if (opts.padTo > 0)
        intlOpts.minimumIntegerDigits = opts.padTo;
      this.inf = getCachedINF(intl, intlOpts);
    }
  }
  format(i2) {
    if (this.inf) {
      const fixed = this.floor ? Math.floor(i2) : i2;
      return this.inf.format(fixed);
    } else {
      const fixed = this.floor ? Math.floor(i2) : roundTo(i2, 3);
      return padStart(fixed, this.padTo);
    }
  }
}
class PolyDateFormatter {
  constructor(dt, intl, opts) {
    this.opts = opts;
    let z2;
    if (dt.zone.isUniversal) {
      const gmtOffset = -1 * (dt.offset / 60);
      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;
      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {
        z2 = offsetZ;
        this.dt = dt;
      } else {
        z2 = "UTC";
        if (opts.timeZoneName) {
          this.dt = dt;
        } else {
          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1e3);
        }
      }
    } else if (dt.zone.type === "system") {
      this.dt = dt;
    } else {
      this.dt = dt;
      z2 = dt.zone.name;
    }
    const intlOpts = __spreadValues({}, this.opts);
    if (z2) {
      intlOpts.timeZone = z2;
    }
    this.dtf = getCachedDTF(intl, intlOpts);
  }
  format() {
    return this.dtf.format(this.dt.toJSDate());
  }
  formatToParts() {
    return this.dtf.formatToParts(this.dt.toJSDate());
  }
  resolvedOptions() {
    return this.dtf.resolvedOptions();
  }
}
class PolyRelFormatter {
  constructor(intl, isEnglish, opts) {
    this.opts = __spreadValues({ style: "long" }, opts);
    if (!isEnglish && hasRelative()) {
      this.rtf = getCachedRTF(intl, opts);
    }
  }
  format(count, unit) {
    if (this.rtf) {
      return this.rtf.format(count, unit);
    } else {
      return formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== "long");
    }
  }
  formatToParts(count, unit) {
    if (this.rtf) {
      return this.rtf.formatToParts(count, unit);
    } else {
      return [];
    }
  }
}
class Locale {
  static fromOpts(opts) {
    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);
  }
  static create(locale2, numberingSystem, outputCalendar, defaultToEN = false) {
    const specifiedLocale = locale2 || Settings.defaultLocale;
    const localeR = specifiedLocale || (defaultToEN ? "en-US" : systemLocale());
    const numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;
    const outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;
    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);
  }
  static resetCache() {
    sysLocaleCache = null;
    intlDTCache = {};
    intlNumCache = {};
    intlRelCache = {};
  }
  static fromObject({ locale: locale2, numberingSystem, outputCalendar } = {}) {
    return Locale.create(locale2, numberingSystem, outputCalendar);
  }
  constructor(locale2, numbering, outputCalendar, specifiedLocale) {
    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale2);
    this.locale = parsedLocale;
    this.numberingSystem = numbering || parsedNumberingSystem || null;
    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;
    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);
    this.weekdaysCache = { format: {}, standalone: {} };
    this.monthsCache = { format: {}, standalone: {} };
    this.meridiemCache = null;
    this.eraCache = {};
    this.specifiedLocale = specifiedLocale;
    this.fastNumbersCached = null;
  }
  get fastNumbers() {
    if (this.fastNumbersCached == null) {
      this.fastNumbersCached = supportsFastNumbers(this);
    }
    return this.fastNumbersCached;
  }
  listingMode() {
    const isActuallyEn = this.isEnglish();
    const hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === "latn") && (this.outputCalendar === null || this.outputCalendar === "gregory");
    return isActuallyEn && hasNoWeirdness ? "en" : "intl";
  }
  clone(alts) {
    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {
      return this;
    } else {
      return Locale.create(alts.locale || this.specifiedLocale, alts.numberingSystem || this.numberingSystem, alts.outputCalendar || this.outputCalendar, alts.defaultToEN || false);
    }
  }
  redefaultToEN(alts = {}) {
    return this.clone(__spreadProps(__spreadValues({}, alts), { defaultToEN: true }));
  }
  redefaultToSystem(alts = {}) {
    return this.clone(__spreadProps(__spreadValues({}, alts), { defaultToEN: false }));
  }
  months(length, format = false, defaultOK = true) {
    return listStuff(this, length, defaultOK, months, () => {
      const intl = format ? { month: length, day: "numeric" } : { month: length }, formatStr = format ? "format" : "standalone";
      if (!this.monthsCache[formatStr][length]) {
        this.monthsCache[formatStr][length] = mapMonths((dt) => this.extract(dt, intl, "month"));
      }
      return this.monthsCache[formatStr][length];
    });
  }
  weekdays(length, format = false, defaultOK = true) {
    return listStuff(this, length, defaultOK, weekdays, () => {
      const intl = format ? { weekday: length, year: "numeric", month: "long", day: "numeric" } : { weekday: length }, formatStr = format ? "format" : "standalone";
      if (!this.weekdaysCache[formatStr][length]) {
        this.weekdaysCache[formatStr][length] = mapWeekdays((dt) => this.extract(dt, intl, "weekday"));
      }
      return this.weekdaysCache[formatStr][length];
    });
  }
  meridiems(defaultOK = true) {
    return listStuff(this, void 0, defaultOK, () => meridiems, () => {
      if (!this.meridiemCache) {
        const intl = { hour: "numeric", hourCycle: "h12" };
        this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map((dt) => this.extract(dt, intl, "dayperiod"));
      }
      return this.meridiemCache;
    });
  }
  eras(length, defaultOK = true) {
    return listStuff(this, length, defaultOK, eras, () => {
      const intl = { era: length };
      if (!this.eraCache[length]) {
        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map((dt) => this.extract(dt, intl, "era"));
      }
      return this.eraCache[length];
    });
  }
  extract(dt, intlOpts, field) {
    const df = this.dtFormatter(dt, intlOpts), results = df.formatToParts(), matching = results.find((m2) => m2.type.toLowerCase() === field);
    return matching ? matching.value : null;
  }
  numberFormatter(opts = {}) {
    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);
  }
  dtFormatter(dt, intlOpts = {}) {
    return new PolyDateFormatter(dt, this.intl, intlOpts);
  }
  relFormatter(opts = {}) {
    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);
  }
  listFormatter(opts = {}) {
    return getCachedLF(this.intl, opts);
  }
  isEnglish() {
    return this.locale === "en" || this.locale.toLowerCase() === "en-us" || new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us");
  }
  equals(other) {
    return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;
  }
}
function combineRegexes(...regexes) {
  const full = regexes.reduce((f2, r2) => f2 + r2.source, "");
  return RegExp(`^${full}$`);
}
function combineExtractors(...extractors) {
  return (m2) => extractors.reduce(([mergedVals, mergedZone, cursor], ex) => {
    const [val, zone, next] = ex(m2, cursor);
    return [__spreadValues(__spreadValues({}, mergedVals), val), mergedZone || zone, next];
  }, [{}, null, 1]).slice(0, 2);
}
function parse$4(s2, ...patterns) {
  if (s2 == null) {
    return [null, null];
  }
  for (const [regex2, extractor] of patterns) {
    const m2 = regex2.exec(s2);
    if (m2) {
      return extractor(m2);
    }
  }
  return [null, null];
}
function simpleParse(...keys2) {
  return (match2, cursor) => {
    const ret = {};
    let i2;
    for (i2 = 0; i2 < keys2.length; i2++) {
      ret[keys2[i2]] = parseInteger(match2[cursor + i2]);
    }
    return [ret, null, cursor + i2];
  };
}
const offsetRegex = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/, isoTimeBaseRegex = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/, isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${offsetRegex.source}?`), isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`), isoYmdRegex = /([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/, isoWeekRegex = /(\d{4})-?W(\d\d)(?:-?(\d))?/, isoOrdinalRegex = /(\d{4})-?(\d{3})/, extractISOWeekData = simpleParse("weekYear", "weekNumber", "weekDay"), extractISOOrdinalData = simpleParse("year", "ordinal"), sqlYmdRegex = /(\d{4})-(\d\d)-(\d\d)/, sqlTimeRegex = RegExp(`${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`), sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);
function int(match2, pos, fallback) {
  const m2 = match2[pos];
  return isUndefined(m2) ? fallback : parseInteger(m2);
}
function extractISOYmd(match2, cursor) {
  const item = {
    year: int(match2, cursor),
    month: int(match2, cursor + 1, 1),
    day: int(match2, cursor + 2, 1)
  };
  return [item, null, cursor + 3];
}
function extractISOTime(match2, cursor) {
  const item = {
    hours: int(match2, cursor, 0),
    minutes: int(match2, cursor + 1, 0),
    seconds: int(match2, cursor + 2, 0),
    milliseconds: parseMillis(match2[cursor + 3])
  };
  return [item, null, cursor + 4];
}
function extractISOOffset(match2, cursor) {
  const local = !match2[cursor] && !match2[cursor + 1], fullOffset = signedOffset(match2[cursor + 1], match2[cursor + 2]), zone = local ? null : FixedOffsetZone.instance(fullOffset);
  return [{}, zone, cursor + 3];
}
function extractIANAZone(match2, cursor) {
  const zone = match2[cursor] ? IANAZone.create(match2[cursor]) : null;
  return [{}, zone, cursor + 1];
}
const isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);
const isoDuration = /^-?P(?:(?:(-?\d{1,9}(?:\.\d{1,9})?)Y)?(?:(-?\d{1,9}(?:\.\d{1,9})?)M)?(?:(-?\d{1,9}(?:\.\d{1,9})?)W)?(?:(-?\d{1,9}(?:\.\d{1,9})?)D)?(?:T(?:(-?\d{1,9}(?:\.\d{1,9})?)H)?(?:(-?\d{1,9}(?:\.\d{1,9})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,9}))?S)?)?)$/;
function extractISODuration(match2) {
  const [s2, yearStr, monthStr, weekStr, dayStr, hourStr, minuteStr, secondStr, millisecondsStr] = match2;
  const hasNegativePrefix = s2[0] === "-";
  const negativeSeconds = secondStr && secondStr[0] === "-";
  const maybeNegate = (num, force = false) => num !== void 0 && (force || num && hasNegativePrefix) ? -num : num;
  return [
    {
      years: maybeNegate(parseFloating(yearStr)),
      months: maybeNegate(parseFloating(monthStr)),
      weeks: maybeNegate(parseFloating(weekStr)),
      days: maybeNegate(parseFloating(dayStr)),
      hours: maybeNegate(parseFloating(hourStr)),
      minutes: maybeNegate(parseFloating(minuteStr)),
      seconds: maybeNegate(parseFloating(secondStr), secondStr === "-0"),
      milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds)
    }
  ];
}
const obsOffsets = {
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  const result = {
    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),
    month: monthsShort.indexOf(monthStr) + 1,
    day: parseInteger(dayStr),
    hour: parseInteger(hourStr),
    minute: parseInteger(minuteStr)
  };
  if (secondStr)
    result.second = parseInteger(secondStr);
  if (weekdayStr) {
    result.weekday = weekdayStr.length > 3 ? weekdaysLong.indexOf(weekdayStr) + 1 : weekdaysShort.indexOf(weekdayStr) + 1;
  }
  return result;
}
const rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;
function extractRFC2822(match2) {
  const [
    ,
    weekdayStr,
    dayStr,
    monthStr,
    yearStr,
    hourStr,
    minuteStr,
    secondStr,
    obsOffset,
    milOffset,
    offHourStr,
    offMinuteStr
  ] = match2, result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  let offset2;
  if (obsOffset) {
    offset2 = obsOffsets[obsOffset];
  } else if (milOffset) {
    offset2 = 0;
  } else {
    offset2 = signedOffset(offHourStr, offMinuteStr);
  }
  return [result, new FixedOffsetZone(offset2)];
}
function preprocessRFC2822(s2) {
  return s2.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim();
}
const rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/, rfc850 = /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/, ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;
function extractRFC1123Or850(match2) {
  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match2, result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}
function extractASCII(match2) {
  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match2, result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}
const isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);
const isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);
const isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);
const isoTimeCombinedRegex = combineRegexes(isoTimeRegex);
const extractISOYmdTimeAndOffset = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset);
const extractISOWeekTimeAndOffset = combineExtractors(extractISOWeekData, extractISOTime, extractISOOffset);
const extractISOOrdinalDateAndTime = combineExtractors(extractISOOrdinalData, extractISOTime, extractISOOffset);
const extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset);
function parseISODate(s2) {
  return parse$4(s2, [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset], [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime], [isoTimeCombinedRegex, extractISOTimeAndOffset]);
}
function parseRFC2822Date(s2) {
  return parse$4(preprocessRFC2822(s2), [rfc2822, extractRFC2822]);
}
function parseHTTPDate(s2) {
  return parse$4(s2, [rfc1123, extractRFC1123Or850], [rfc850, extractRFC1123Or850], [ascii, extractASCII]);
}
function parseISODuration(s2) {
  return parse$4(s2, [isoDuration, extractISODuration]);
}
const extractISOTimeOnly = combineExtractors(extractISOTime);
function parseISOTimeOnly(s2) {
  return parse$4(s2, [isoTimeOnly, extractISOTimeOnly]);
}
const sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);
const sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);
const extractISOYmdTimeOffsetAndIANAZone = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset, extractIANAZone);
const extractISOTimeOffsetAndIANAZone = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);
function parseSQL(s2) {
  return parse$4(s2, [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeOffsetAndIANAZone], [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]);
}
const INVALID$2 = "Invalid Duration";
const lowOrderMatrix = {
  weeks: {
    days: 7,
    hours: 7 * 24,
    minutes: 7 * 24 * 60,
    seconds: 7 * 24 * 60 * 60,
    milliseconds: 7 * 24 * 60 * 60 * 1e3
  },
  days: {
    hours: 24,
    minutes: 24 * 60,
    seconds: 24 * 60 * 60,
    milliseconds: 24 * 60 * 60 * 1e3
  },
  hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1e3 },
  minutes: { seconds: 60, milliseconds: 60 * 1e3 },
  seconds: { milliseconds: 1e3 }
}, casualMatrix = __spreadValues({
  years: {
    quarters: 4,
    months: 12,
    weeks: 52,
    days: 365,
    hours: 365 * 24,
    minutes: 365 * 24 * 60,
    seconds: 365 * 24 * 60 * 60,
    milliseconds: 365 * 24 * 60 * 60 * 1e3
  },
  quarters: {
    months: 3,
    weeks: 13,
    days: 91,
    hours: 91 * 24,
    minutes: 91 * 24 * 60,
    seconds: 91 * 24 * 60 * 60,
    milliseconds: 91 * 24 * 60 * 60 * 1e3
  },
  months: {
    weeks: 4,
    days: 30,
    hours: 30 * 24,
    minutes: 30 * 24 * 60,
    seconds: 30 * 24 * 60 * 60,
    milliseconds: 30 * 24 * 60 * 60 * 1e3
  }
}, lowOrderMatrix), daysInYearAccurate = 146097 / 400, daysInMonthAccurate = 146097 / 4800, accurateMatrix = __spreadValues({
  years: {
    quarters: 4,
    months: 12,
    weeks: daysInYearAccurate / 7,
    days: daysInYearAccurate,
    hours: daysInYearAccurate * 24,
    minutes: daysInYearAccurate * 24 * 60,
    seconds: daysInYearAccurate * 24 * 60 * 60,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1e3
  },
  quarters: {
    months: 3,
    weeks: daysInYearAccurate / 28,
    days: daysInYearAccurate / 4,
    hours: daysInYearAccurate * 24 / 4,
    minutes: daysInYearAccurate * 24 * 60 / 4,
    seconds: daysInYearAccurate * 24 * 60 * 60 / 4,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1e3 / 4
  },
  months: {
    weeks: daysInMonthAccurate / 7,
    days: daysInMonthAccurate,
    hours: daysInMonthAccurate * 24,
    minutes: daysInMonthAccurate * 24 * 60,
    seconds: daysInMonthAccurate * 24 * 60 * 60,
    milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1e3
  }
}, lowOrderMatrix);
const orderedUnits$1 = [
  "years",
  "quarters",
  "months",
  "weeks",
  "days",
  "hours",
  "minutes",
  "seconds",
  "milliseconds"
];
const reverseUnits = orderedUnits$1.slice(0).reverse();
function clone$1(dur, alts, clear2 = false) {
  const conf = {
    values: clear2 ? alts.values : __spreadValues(__spreadValues({}, dur.values), alts.values || {}),
    loc: dur.loc.clone(alts.loc),
    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy
  };
  return new Duration(conf);
}
function antiTrunc(n2) {
  return n2 < 0 ? Math.floor(n2) : Math.ceil(n2);
}
function convert(matrix, fromMap, fromUnit, toMap, toUnit) {
  const conv = matrix[toUnit][fromUnit], raw = fromMap[fromUnit] / conv, sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]), added = !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);
  toMap[toUnit] += added;
  fromMap[fromUnit] -= added * conv;
}
function normalizeValues(matrix, vals) {
  reverseUnits.reduce((previous, current) => {
    if (!isUndefined(vals[current])) {
      if (previous) {
        convert(matrix, vals, previous, vals, current);
      }
      return current;
    } else {
      return previous;
    }
  }, null);
}
class Duration {
  constructor(config) {
    const accurate = config.conversionAccuracy === "longterm" || false;
    this.values = config.values;
    this.loc = config.loc || Locale.create();
    this.conversionAccuracy = accurate ? "longterm" : "casual";
    this.invalid = config.invalid || null;
    this.matrix = accurate ? accurateMatrix : casualMatrix;
    this.isLuxonDuration = true;
  }
  static fromMillis(count, opts) {
    return Duration.fromObject({ milliseconds: count }, opts);
  }
  static fromObject(obj, opts = {}) {
    if (obj == null || typeof obj !== "object") {
      throw new InvalidArgumentError(`Duration.fromObject: argument expected to be an object, got ${obj === null ? "null" : typeof obj}`);
    }
    return new Duration({
      values: normalizeObject(obj, Duration.normalizeUnit),
      loc: Locale.fromObject(opts),
      conversionAccuracy: opts.conversionAccuracy
    });
  }
  static fromDurationLike(durationLike) {
    if (isNumber(durationLike)) {
      return Duration.fromMillis(durationLike);
    } else if (Duration.isDuration(durationLike)) {
      return durationLike;
    } else if (typeof durationLike === "object") {
      return Duration.fromObject(durationLike);
    } else {
      throw new InvalidArgumentError(`Unknown duration argument ${durationLike} of type ${typeof durationLike}`);
    }
  }
  static fromISO(text, opts) {
    const [parsed] = parseISODuration(text);
    if (parsed) {
      return Duration.fromObject(parsed, opts);
    } else {
      return Duration.invalid("unparsable", `the input "${text}" can't be parsed as ISO 8601`);
    }
  }
  static fromISOTime(text, opts) {
    const [parsed] = parseISOTimeOnly(text);
    if (parsed) {
      return Duration.fromObject(parsed, opts);
    } else {
      return Duration.invalid("unparsable", `the input "${text}" can't be parsed as ISO 8601`);
    }
  }
  static invalid(reason2, explanation = null) {
    if (!reason2) {
      throw new InvalidArgumentError("need to specify a reason the Duration is invalid");
    }
    const invalid2 = reason2 instanceof Invalid ? reason2 : new Invalid(reason2, explanation);
    if (Settings.throwOnInvalid) {
      throw new InvalidDurationError(invalid2);
    } else {
      return new Duration({ invalid: invalid2 });
    }
  }
  static normalizeUnit(unit) {
    const normalized = {
      year: "years",
      years: "years",
      quarter: "quarters",
      quarters: "quarters",
      month: "months",
      months: "months",
      week: "weeks",
      weeks: "weeks",
      day: "days",
      days: "days",
      hour: "hours",
      hours: "hours",
      minute: "minutes",
      minutes: "minutes",
      second: "seconds",
      seconds: "seconds",
      millisecond: "milliseconds",
      milliseconds: "milliseconds"
    }[unit ? unit.toLowerCase() : unit];
    if (!normalized)
      throw new InvalidUnitError(unit);
    return normalized;
  }
  static isDuration(o2) {
    return o2 && o2.isLuxonDuration || false;
  }
  get locale() {
    return this.isValid ? this.loc.locale : null;
  }
  get numberingSystem() {
    return this.isValid ? this.loc.numberingSystem : null;
  }
  toFormat(fmt, opts = {}) {
    const fmtOpts = __spreadProps(__spreadValues({}, opts), {
      floor: opts.round !== false && opts.floor !== false
    });
    return this.isValid ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt) : INVALID$2;
  }
  toHuman(opts = {}) {
    const l2 = orderedUnits$1.map((unit) => {
      const val = this.values[unit];
      if (isUndefined(val)) {
        return null;
      }
      return this.loc.numberFormatter(__spreadProps(__spreadValues({ style: "unit", unitDisplay: "long" }, opts), { unit: unit.slice(0, -1) })).format(val);
    }).filter((n2) => n2);
    return this.loc.listFormatter(__spreadValues({ type: "conjunction", style: opts.listStyle || "narrow" }, opts)).format(l2);
  }
  toObject() {
    if (!this.isValid)
      return {};
    return __spreadValues({}, this.values);
  }
  toISO() {
    if (!this.isValid)
      return null;
    let s2 = "P";
    if (this.years !== 0)
      s2 += this.years + "Y";
    if (this.months !== 0 || this.quarters !== 0)
      s2 += this.months + this.quarters * 3 + "M";
    if (this.weeks !== 0)
      s2 += this.weeks + "W";
    if (this.days !== 0)
      s2 += this.days + "D";
    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0)
      s2 += "T";
    if (this.hours !== 0)
      s2 += this.hours + "H";
    if (this.minutes !== 0)
      s2 += this.minutes + "M";
    if (this.seconds !== 0 || this.milliseconds !== 0)
      s2 += roundTo(this.seconds + this.milliseconds / 1e3, 3) + "S";
    if (s2 === "P")
      s2 += "T0S";
    return s2;
  }
  toISOTime(opts = {}) {
    if (!this.isValid)
      return null;
    const millis = this.toMillis();
    if (millis < 0 || millis >= 864e5)
      return null;
    opts = __spreadValues({
      suppressMilliseconds: false,
      suppressSeconds: false,
      includePrefix: false,
      format: "extended"
    }, opts);
    const value2 = this.shiftTo("hours", "minutes", "seconds", "milliseconds");
    let fmt = opts.format === "basic" ? "hhmm" : "hh:mm";
    if (!opts.suppressSeconds || value2.seconds !== 0 || value2.milliseconds !== 0) {
      fmt += opts.format === "basic" ? "ss" : ":ss";
      if (!opts.suppressMilliseconds || value2.milliseconds !== 0) {
        fmt += ".SSS";
      }
    }
    let str2 = value2.toFormat(fmt);
    if (opts.includePrefix) {
      str2 = "T" + str2;
    }
    return str2;
  }
  toJSON() {
    return this.toISO();
  }
  toString() {
    return this.toISO();
  }
  toMillis() {
    return this.as("milliseconds");
  }
  valueOf() {
    return this.toMillis();
  }
  plus(duration) {
    if (!this.isValid)
      return this;
    const dur = Duration.fromDurationLike(duration), result = {};
    for (const k2 of orderedUnits$1) {
      if (hasOwnProperty$3(dur.values, k2) || hasOwnProperty$3(this.values, k2)) {
        result[k2] = dur.get(k2) + this.get(k2);
      }
    }
    return clone$1(this, { values: result }, true);
  }
  minus(duration) {
    if (!this.isValid)
      return this;
    const dur = Duration.fromDurationLike(duration);
    return this.plus(dur.negate());
  }
  mapUnits(fn2) {
    if (!this.isValid)
      return this;
    const result = {};
    for (const k2 of Object.keys(this.values)) {
      result[k2] = asNumber(fn2(this.values[k2], k2));
    }
    return clone$1(this, { values: result }, true);
  }
  get(unit) {
    return this[Duration.normalizeUnit(unit)];
  }
  set(values) {
    if (!this.isValid)
      return this;
    const mixed = __spreadValues(__spreadValues({}, this.values), normalizeObject(values, Duration.normalizeUnit));
    return clone$1(this, { values: mixed });
  }
  reconfigure({ locale: locale2, numberingSystem, conversionAccuracy } = {}) {
    const loc = this.loc.clone({ locale: locale2, numberingSystem }), opts = { loc };
    if (conversionAccuracy) {
      opts.conversionAccuracy = conversionAccuracy;
    }
    return clone$1(this, opts);
  }
  as(unit) {
    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;
  }
  normalize() {
    if (!this.isValid)
      return this;
    const vals = this.toObject();
    normalizeValues(this.matrix, vals);
    return clone$1(this, { values: vals }, true);
  }
  shiftTo(...units) {
    if (!this.isValid)
      return this;
    if (units.length === 0) {
      return this;
    }
    units = units.map((u2) => Duration.normalizeUnit(u2));
    const built = {}, accumulated = {}, vals = this.toObject();
    let lastUnit;
    for (const k2 of orderedUnits$1) {
      if (units.indexOf(k2) >= 0) {
        lastUnit = k2;
        let own2 = 0;
        for (const ak in accumulated) {
          own2 += this.matrix[ak][k2] * accumulated[ak];
          accumulated[ak] = 0;
        }
        if (isNumber(vals[k2])) {
          own2 += vals[k2];
        }
        const i2 = Math.trunc(own2);
        built[k2] = i2;
        accumulated[k2] = (own2 * 1e3 - i2 * 1e3) / 1e3;
        for (const down in vals) {
          if (orderedUnits$1.indexOf(down) > orderedUnits$1.indexOf(k2)) {
            convert(this.matrix, vals, down, built, k2);
          }
        }
      } else if (isNumber(vals[k2])) {
        accumulated[k2] = vals[k2];
      }
    }
    for (const key in accumulated) {
      if (accumulated[key] !== 0) {
        built[lastUnit] += key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];
      }
    }
    return clone$1(this, { values: built }, true).normalize();
  }
  negate() {
    if (!this.isValid)
      return this;
    const negated = {};
    for (const k2 of Object.keys(this.values)) {
      negated[k2] = this.values[k2] === 0 ? 0 : -this.values[k2];
    }
    return clone$1(this, { values: negated }, true);
  }
  get years() {
    return this.isValid ? this.values.years || 0 : NaN;
  }
  get quarters() {
    return this.isValid ? this.values.quarters || 0 : NaN;
  }
  get months() {
    return this.isValid ? this.values.months || 0 : NaN;
  }
  get weeks() {
    return this.isValid ? this.values.weeks || 0 : NaN;
  }
  get days() {
    return this.isValid ? this.values.days || 0 : NaN;
  }
  get hours() {
    return this.isValid ? this.values.hours || 0 : NaN;
  }
  get minutes() {
    return this.isValid ? this.values.minutes || 0 : NaN;
  }
  get seconds() {
    return this.isValid ? this.values.seconds || 0 : NaN;
  }
  get milliseconds() {
    return this.isValid ? this.values.milliseconds || 0 : NaN;
  }
  get isValid() {
    return this.invalid === null;
  }
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }
    if (!this.loc.equals(other.loc)) {
      return false;
    }
    function eq(v1, v2) {
      if (v1 === void 0 || v1 === 0)
        return v2 === void 0 || v2 === 0;
      return v1 === v2;
    }
    for (const u2 of orderedUnits$1) {
      if (!eq(this.values[u2], other.values[u2])) {
        return false;
      }
    }
    return true;
  }
}
const INVALID$1 = "Invalid Interval";
function validateStartEnd(start, end) {
  if (!start || !start.isValid) {
    return Interval.invalid("missing or invalid start");
  } else if (!end || !end.isValid) {
    return Interval.invalid("missing or invalid end");
  } else if (end < start) {
    return Interval.invalid("end before start", `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`);
  } else {
    return null;
  }
}
class Interval {
  constructor(config) {
    this.s = config.start;
    this.e = config.end;
    this.invalid = config.invalid || null;
    this.isLuxonInterval = true;
  }
  static invalid(reason2, explanation = null) {
    if (!reason2) {
      throw new InvalidArgumentError("need to specify a reason the Interval is invalid");
    }
    const invalid2 = reason2 instanceof Invalid ? reason2 : new Invalid(reason2, explanation);
    if (Settings.throwOnInvalid) {
      throw new InvalidIntervalError(invalid2);
    } else {
      return new Interval({ invalid: invalid2 });
    }
  }
  static fromDateTimes(start, end) {
    const builtStart = friendlyDateTime(start), builtEnd = friendlyDateTime(end);
    const validateError = validateStartEnd(builtStart, builtEnd);
    if (validateError == null) {
      return new Interval({
        start: builtStart,
        end: builtEnd
      });
    } else {
      return validateError;
    }
  }
  static after(start, duration) {
    const dur = Duration.fromDurationLike(duration), dt = friendlyDateTime(start);
    return Interval.fromDateTimes(dt, dt.plus(dur));
  }
  static before(end, duration) {
    const dur = Duration.fromDurationLike(duration), dt = friendlyDateTime(end);
    return Interval.fromDateTimes(dt.minus(dur), dt);
  }
  static fromISO(text, opts) {
    const [s2, e2] = (text || "").split("/", 2);
    if (s2 && e2) {
      let start, startIsValid;
      try {
        start = DateTime.fromISO(s2, opts);
        startIsValid = start.isValid;
      } catch (e3) {
        startIsValid = false;
      }
      let end, endIsValid;
      try {
        end = DateTime.fromISO(e2, opts);
        endIsValid = end.isValid;
      } catch (e3) {
        endIsValid = false;
      }
      if (startIsValid && endIsValid) {
        return Interval.fromDateTimes(start, end);
      }
      if (startIsValid) {
        const dur = Duration.fromISO(e2, opts);
        if (dur.isValid) {
          return Interval.after(start, dur);
        }
      } else if (endIsValid) {
        const dur = Duration.fromISO(s2, opts);
        if (dur.isValid) {
          return Interval.before(end, dur);
        }
      }
    }
    return Interval.invalid("unparsable", `the input "${text}" can't be parsed as ISO 8601`);
  }
  static isInterval(o2) {
    return o2 && o2.isLuxonInterval || false;
  }
  get start() {
    return this.isValid ? this.s : null;
  }
  get end() {
    return this.isValid ? this.e : null;
  }
  get isValid() {
    return this.invalidReason === null;
  }
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  length(unit = "milliseconds") {
    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;
  }
  count(unit = "milliseconds") {
    if (!this.isValid)
      return NaN;
    const start = this.start.startOf(unit), end = this.end.startOf(unit);
    return Math.floor(end.diff(start, unit).get(unit)) + 1;
  }
  hasSame(unit) {
    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;
  }
  isEmpty() {
    return this.s.valueOf() === this.e.valueOf();
  }
  isAfter(dateTime) {
    if (!this.isValid)
      return false;
    return this.s > dateTime;
  }
  isBefore(dateTime) {
    if (!this.isValid)
      return false;
    return this.e <= dateTime;
  }
  contains(dateTime) {
    if (!this.isValid)
      return false;
    return this.s <= dateTime && this.e > dateTime;
  }
  set({ start, end } = {}) {
    if (!this.isValid)
      return this;
    return Interval.fromDateTimes(start || this.s, end || this.e);
  }
  splitAt(...dateTimes) {
    if (!this.isValid)
      return [];
    const sorted = dateTimes.map(friendlyDateTime).filter((d2) => this.contains(d2)).sort(), results = [];
    let { s: s2 } = this, i2 = 0;
    while (s2 < this.e) {
      const added = sorted[i2] || this.e, next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s2, next));
      s2 = next;
      i2 += 1;
    }
    return results;
  }
  splitBy(duration) {
    const dur = Duration.fromDurationLike(duration);
    if (!this.isValid || !dur.isValid || dur.as("milliseconds") === 0) {
      return [];
    }
    let { s: s2 } = this, idx = 1, next;
    const results = [];
    while (s2 < this.e) {
      const added = this.start.plus(dur.mapUnits((x) => x * idx));
      next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s2, next));
      s2 = next;
      idx += 1;
    }
    return results;
  }
  divideEqually(numberOfParts) {
    if (!this.isValid)
      return [];
    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);
  }
  overlaps(other) {
    return this.e > other.s && this.s < other.e;
  }
  abutsStart(other) {
    if (!this.isValid)
      return false;
    return +this.e === +other.s;
  }
  abutsEnd(other) {
    if (!this.isValid)
      return false;
    return +other.e === +this.s;
  }
  engulfs(other) {
    if (!this.isValid)
      return false;
    return this.s <= other.s && this.e >= other.e;
  }
  equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }
    return this.s.equals(other.s) && this.e.equals(other.e);
  }
  intersection(other) {
    if (!this.isValid)
      return this;
    const s2 = this.s > other.s ? this.s : other.s, e2 = this.e < other.e ? this.e : other.e;
    if (s2 >= e2) {
      return null;
    } else {
      return Interval.fromDateTimes(s2, e2);
    }
  }
  union(other) {
    if (!this.isValid)
      return this;
    const s2 = this.s < other.s ? this.s : other.s, e2 = this.e > other.e ? this.e : other.e;
    return Interval.fromDateTimes(s2, e2);
  }
  static merge(intervals) {
    const [found, final] = intervals.sort((a, b2) => a.s - b2.s).reduce(([sofar, current], item) => {
      if (!current) {
        return [sofar, item];
      } else if (current.overlaps(item) || current.abutsStart(item)) {
        return [sofar, current.union(item)];
      } else {
        return [sofar.concat([current]), item];
      }
    }, [[], null]);
    if (final) {
      found.push(final);
    }
    return found;
  }
  static xor(intervals) {
    let start = null, currentCount = 0;
    const results = [], ends = intervals.map((i2) => [
      { time: i2.s, type: "s" },
      { time: i2.e, type: "e" }
    ]), flattened = Array.prototype.concat(...ends), arr = flattened.sort((a, b2) => a.time - b2.time);
    for (const i2 of arr) {
      currentCount += i2.type === "s" ? 1 : -1;
      if (currentCount === 1) {
        start = i2.time;
      } else {
        if (start && +start !== +i2.time) {
          results.push(Interval.fromDateTimes(start, i2.time));
        }
        start = null;
      }
    }
    return Interval.merge(results);
  }
  difference(...intervals) {
    return Interval.xor([this].concat(intervals)).map((i2) => this.intersection(i2)).filter((i2) => i2 && !i2.isEmpty());
  }
  toString() {
    if (!this.isValid)
      return INVALID$1;
    return `[${this.s.toISO()} \u2013 ${this.e.toISO()})`;
  }
  toISO(opts) {
    if (!this.isValid)
      return INVALID$1;
    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;
  }
  toISODate() {
    if (!this.isValid)
      return INVALID$1;
    return `${this.s.toISODate()}/${this.e.toISODate()}`;
  }
  toISOTime(opts) {
    if (!this.isValid)
      return INVALID$1;
    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;
  }
  toFormat(dateFormat, { separator = " \u2013 " } = {}) {
    if (!this.isValid)
      return INVALID$1;
    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;
  }
  toDuration(unit, opts) {
    if (!this.isValid) {
      return Duration.invalid(this.invalidReason);
    }
    return this.e.diff(this.s, unit, opts);
  }
  mapEndpoints(mapFn) {
    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));
  }
}
class Info$3 {
  static hasDST(zone = Settings.defaultZone) {
    const proto2 = DateTime.now().setZone(zone).set({ month: 12 });
    return !zone.isUniversal && proto2.offset !== proto2.set({ month: 6 }).offset;
  }
  static isValidIANAZone(zone) {
    return IANAZone.isValidZone(zone);
  }
  static normalizeZone(input) {
    return normalizeZone(input, Settings.defaultZone);
  }
  static months(length = "long", { locale: locale2 = null, numberingSystem = null, locObj = null, outputCalendar = "gregory" } = {}) {
    return (locObj || Locale.create(locale2, numberingSystem, outputCalendar)).months(length);
  }
  static monthsFormat(length = "long", { locale: locale2 = null, numberingSystem = null, locObj = null, outputCalendar = "gregory" } = {}) {
    return (locObj || Locale.create(locale2, numberingSystem, outputCalendar)).months(length, true);
  }
  static weekdays(length = "long", { locale: locale2 = null, numberingSystem = null, locObj = null } = {}) {
    return (locObj || Locale.create(locale2, numberingSystem, null)).weekdays(length);
  }
  static weekdaysFormat(length = "long", { locale: locale2 = null, numberingSystem = null, locObj = null } = {}) {
    return (locObj || Locale.create(locale2, numberingSystem, null)).weekdays(length, true);
  }
  static meridiems({ locale: locale2 = null } = {}) {
    return Locale.create(locale2).meridiems();
  }
  static eras(length = "short", { locale: locale2 = null } = {}) {
    return Locale.create(locale2, null, "gregory").eras(length);
  }
  static features() {
    return { relative: hasRelative() };
  }
}
function dayDiff(earlier, later) {
  const utcDayStart = (dt) => dt.toUTC(0, { keepLocalTime: true }).startOf("day").valueOf(), ms = utcDayStart(later) - utcDayStart(earlier);
  return Math.floor(Duration.fromMillis(ms).as("days"));
}
function highOrderDiffs(cursor, later, units) {
  const differs = [
    ["years", (a, b2) => b2.year - a.year],
    ["quarters", (a, b2) => b2.quarter - a.quarter],
    ["months", (a, b2) => b2.month - a.month + (b2.year - a.year) * 12],
    [
      "weeks",
      (a, b2) => {
        const days = dayDiff(a, b2);
        return (days - days % 7) / 7;
      }
    ],
    ["days", dayDiff]
  ];
  const results = {};
  let lowestOrder, highWater;
  for (const [unit, differ] of differs) {
    if (units.indexOf(unit) >= 0) {
      lowestOrder = unit;
      let delta = differ(cursor, later);
      highWater = cursor.plus({ [unit]: delta });
      if (highWater > later) {
        cursor = cursor.plus({ [unit]: delta - 1 });
        delta -= 1;
      } else {
        cursor = highWater;
      }
      results[unit] = delta;
    }
  }
  return [cursor, results, highWater, lowestOrder];
}
function diff$1(earlier, later, units, opts) {
  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);
  const remainingMillis = later - cursor;
  const lowerOrderUnits = units.filter((u2) => ["hours", "minutes", "seconds", "milliseconds"].indexOf(u2) >= 0);
  if (lowerOrderUnits.length === 0) {
    if (highWater < later) {
      highWater = cursor.plus({ [lowestOrder]: 1 });
    }
    if (highWater !== cursor) {
      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);
    }
  }
  const duration = Duration.fromObject(results, opts);
  if (lowerOrderUnits.length > 0) {
    return Duration.fromMillis(remainingMillis, opts).shiftTo(...lowerOrderUnits).plus(duration);
  } else {
    return duration;
  }
}
const numberingSystems = {
  arab: "[\u0660-\u0669]",
  arabext: "[\u06F0-\u06F9]",
  bali: "[\u1B50-\u1B59]",
  beng: "[\u09E6-\u09EF]",
  deva: "[\u0966-\u096F]",
  fullwide: "[\uFF10-\uFF19]",
  gujr: "[\u0AE6-\u0AEF]",
  hanidec: "[\u3007|\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D]",
  khmr: "[\u17E0-\u17E9]",
  knda: "[\u0CE6-\u0CEF]",
  laoo: "[\u0ED0-\u0ED9]",
  limb: "[\u1946-\u194F]",
  mlym: "[\u0D66-\u0D6F]",
  mong: "[\u1810-\u1819]",
  mymr: "[\u1040-\u1049]",
  orya: "[\u0B66-\u0B6F]",
  tamldec: "[\u0BE6-\u0BEF]",
  telu: "[\u0C66-\u0C6F]",
  thai: "[\u0E50-\u0E59]",
  tibt: "[\u0F20-\u0F29]",
  latn: "\\d"
};
const numberingSystemsUTF16 = {
  arab: [1632, 1641],
  arabext: [1776, 1785],
  bali: [6992, 7001],
  beng: [2534, 2543],
  deva: [2406, 2415],
  fullwide: [65296, 65303],
  gujr: [2790, 2799],
  khmr: [6112, 6121],
  knda: [3302, 3311],
  laoo: [3792, 3801],
  limb: [6470, 6479],
  mlym: [3430, 3439],
  mong: [6160, 6169],
  mymr: [4160, 4169],
  orya: [2918, 2927],
  tamldec: [3046, 3055],
  telu: [3174, 3183],
  thai: [3664, 3673],
  tibt: [3872, 3881]
};
const hanidecChars = numberingSystems.hanidec.replace(/[\[|\]]/g, "").split("");
function parseDigits(str2) {
  let value2 = parseInt(str2, 10);
  if (isNaN(value2)) {
    value2 = "";
    for (let i2 = 0; i2 < str2.length; i2++) {
      const code = str2.charCodeAt(i2);
      if (str2[i2].search(numberingSystems.hanidec) !== -1) {
        value2 += hanidecChars.indexOf(str2[i2]);
      } else {
        for (const key in numberingSystemsUTF16) {
          const [min, max2] = numberingSystemsUTF16[key];
          if (code >= min && code <= max2) {
            value2 += code - min;
          }
        }
      }
    }
    return parseInt(value2, 10);
  } else {
    return value2;
  }
}
function digitRegex({ numberingSystem }, append = "") {
  return new RegExp(`${numberingSystems[numberingSystem || "latn"]}${append}`);
}
const MISSING_FTP = "missing Intl.DateTimeFormat.formatToParts support";
function intUnit(regex2, post = (i2) => i2) {
  return { regex: regex2, deser: ([s2]) => post(parseDigits(s2)) };
}
const NBSP = String.fromCharCode(160);
const spaceOrNBSP = `( |${NBSP})`;
const spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, "g");
function fixListRegex(s2) {
  return s2.replace(/\./g, "\\.?").replace(spaceOrNBSPRegExp, spaceOrNBSP);
}
function stripInsensitivities(s2) {
  return s2.replace(/\./g, "").replace(spaceOrNBSPRegExp, " ").toLowerCase();
}
function oneOf(strings, startIndex) {
  if (strings === null) {
    return null;
  } else {
    return {
      regex: RegExp(strings.map(fixListRegex).join("|")),
      deser: ([s2]) => strings.findIndex((i2) => stripInsensitivities(s2) === stripInsensitivities(i2)) + startIndex
    };
  }
}
function offset(regex2, groups) {
  return { regex: regex2, deser: ([, h2, m2]) => signedOffset(h2, m2), groups };
}
function simple(regex2) {
  return { regex: regex2, deser: ([s2]) => s2 };
}
function escapeToken(value2) {
  return value2.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
}
function unitForToken(token2, loc) {
  const one = digitRegex(loc), two = digitRegex(loc, "{2}"), three = digitRegex(loc, "{3}"), four = digitRegex(loc, "{4}"), six = digitRegex(loc, "{6}"), oneOrTwo = digitRegex(loc, "{1,2}"), oneToThree = digitRegex(loc, "{1,3}"), oneToSix = digitRegex(loc, "{1,6}"), oneToNine = digitRegex(loc, "{1,9}"), twoToFour = digitRegex(loc, "{2,4}"), fourToSix = digitRegex(loc, "{4,6}"), literal = (t2) => ({ regex: RegExp(escapeToken(t2.val)), deser: ([s2]) => s2, literal: true }), unitate = (t2) => {
    if (token2.literal) {
      return literal(t2);
    }
    switch (t2.val) {
      case "G":
        return oneOf(loc.eras("short", false), 0);
      case "GG":
        return oneOf(loc.eras("long", false), 0);
      case "y":
        return intUnit(oneToSix);
      case "yy":
        return intUnit(twoToFour, untruncateYear);
      case "yyyy":
        return intUnit(four);
      case "yyyyy":
        return intUnit(fourToSix);
      case "yyyyyy":
        return intUnit(six);
      case "M":
        return intUnit(oneOrTwo);
      case "MM":
        return intUnit(two);
      case "MMM":
        return oneOf(loc.months("short", true, false), 1);
      case "MMMM":
        return oneOf(loc.months("long", true, false), 1);
      case "L":
        return intUnit(oneOrTwo);
      case "LL":
        return intUnit(two);
      case "LLL":
        return oneOf(loc.months("short", false, false), 1);
      case "LLLL":
        return oneOf(loc.months("long", false, false), 1);
      case "d":
        return intUnit(oneOrTwo);
      case "dd":
        return intUnit(two);
      case "o":
        return intUnit(oneToThree);
      case "ooo":
        return intUnit(three);
      case "HH":
        return intUnit(two);
      case "H":
        return intUnit(oneOrTwo);
      case "hh":
        return intUnit(two);
      case "h":
        return intUnit(oneOrTwo);
      case "mm":
        return intUnit(two);
      case "m":
        return intUnit(oneOrTwo);
      case "q":
        return intUnit(oneOrTwo);
      case "qq":
        return intUnit(two);
      case "s":
        return intUnit(oneOrTwo);
      case "ss":
        return intUnit(two);
      case "S":
        return intUnit(oneToThree);
      case "SSS":
        return intUnit(three);
      case "u":
        return simple(oneToNine);
      case "uu":
        return simple(oneOrTwo);
      case "uuu":
        return intUnit(one);
      case "a":
        return oneOf(loc.meridiems(), 0);
      case "kkkk":
        return intUnit(four);
      case "kk":
        return intUnit(twoToFour, untruncateYear);
      case "W":
        return intUnit(oneOrTwo);
      case "WW":
        return intUnit(two);
      case "E":
      case "c":
        return intUnit(one);
      case "EEE":
        return oneOf(loc.weekdays("short", false, false), 1);
      case "EEEE":
        return oneOf(loc.weekdays("long", false, false), 1);
      case "ccc":
        return oneOf(loc.weekdays("short", true, false), 1);
      case "cccc":
        return oneOf(loc.weekdays("long", true, false), 1);
      case "Z":
      case "ZZ":
        return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);
      case "ZZZ":
        return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);
      case "z":
        return simple(/[a-z_+-/]{1,256}?/i);
      default:
        return literal(t2);
    }
  };
  const unit = unitate(token2) || {
    invalidReason: MISSING_FTP
  };
  unit.token = token2;
  return unit;
}
const partTypeStyleToTokenVal = {
  year: {
    "2-digit": "yy",
    numeric: "yyyyy"
  },
  month: {
    numeric: "M",
    "2-digit": "MM",
    short: "MMM",
    long: "MMMM"
  },
  day: {
    numeric: "d",
    "2-digit": "dd"
  },
  weekday: {
    short: "EEE",
    long: "EEEE"
  },
  dayperiod: "a",
  dayPeriod: "a",
  hour: {
    numeric: "h",
    "2-digit": "hh"
  },
  minute: {
    numeric: "m",
    "2-digit": "mm"
  },
  second: {
    numeric: "s",
    "2-digit": "ss"
  }
};
function tokenForPart(part, locale2, formatOpts) {
  const { type, value: value2 } = part;
  if (type === "literal") {
    return {
      literal: true,
      val: value2
    };
  }
  const style2 = formatOpts[type];
  let val = partTypeStyleToTokenVal[type];
  if (typeof val === "object") {
    val = val[style2];
  }
  if (val) {
    return {
      literal: false,
      val
    };
  }
  return void 0;
}
function buildRegex(units) {
  const re2 = units.map((u2) => u2.regex).reduce((f2, r2) => `${f2}(${r2.source})`, "");
  return [`^${re2}$`, units];
}
function match(input, regex2, handlers) {
  const matches = input.match(regex2);
  if (matches) {
    const all = {};
    let matchIndex = 1;
    for (const i2 in handlers) {
      if (hasOwnProperty$3(handlers, i2)) {
        const h2 = handlers[i2], groups = h2.groups ? h2.groups + 1 : 1;
        if (!h2.literal && h2.token) {
          all[h2.token.val[0]] = h2.deser(matches.slice(matchIndex, matchIndex + groups));
        }
        matchIndex += groups;
      }
    }
    return [matches, all];
  } else {
    return [matches, {}];
  }
}
function dateTimeFromMatches(matches) {
  const toField = (token2) => {
    switch (token2) {
      case "S":
        return "millisecond";
      case "s":
        return "second";
      case "m":
        return "minute";
      case "h":
      case "H":
        return "hour";
      case "d":
        return "day";
      case "o":
        return "ordinal";
      case "L":
      case "M":
        return "month";
      case "y":
        return "year";
      case "E":
      case "c":
        return "weekday";
      case "W":
        return "weekNumber";
      case "k":
        return "weekYear";
      case "q":
        return "quarter";
      default:
        return null;
    }
  };
  let zone = null;
  let specificOffset;
  if (!isUndefined(matches.z)) {
    zone = IANAZone.create(matches.z);
  }
  if (!isUndefined(matches.Z)) {
    if (!zone) {
      zone = new FixedOffsetZone(matches.Z);
    }
    specificOffset = matches.Z;
  }
  if (!isUndefined(matches.q)) {
    matches.M = (matches.q - 1) * 3 + 1;
  }
  if (!isUndefined(matches.h)) {
    if (matches.h < 12 && matches.a === 1) {
      matches.h += 12;
    } else if (matches.h === 12 && matches.a === 0) {
      matches.h = 0;
    }
  }
  if (matches.G === 0 && matches.y) {
    matches.y = -matches.y;
  }
  if (!isUndefined(matches.u)) {
    matches.S = parseMillis(matches.u);
  }
  const vals = Object.keys(matches).reduce((r2, k2) => {
    const f2 = toField(k2);
    if (f2) {
      r2[f2] = matches[k2];
    }
    return r2;
  }, {});
  return [vals, zone, specificOffset];
}
let dummyDateTimeCache = null;
function getDummyDateTime() {
  if (!dummyDateTimeCache) {
    dummyDateTimeCache = DateTime.fromMillis(1555555555555);
  }
  return dummyDateTimeCache;
}
function maybeExpandMacroToken(token2, locale2) {
  if (token2.literal) {
    return token2;
  }
  const formatOpts = Formatter.macroTokenToFormatOpts(token2.val);
  if (!formatOpts) {
    return token2;
  }
  const formatter = Formatter.create(locale2, formatOpts);
  const parts = formatter.formatDateTimeParts(getDummyDateTime());
  const tokens = parts.map((p2) => tokenForPart(p2, locale2, formatOpts));
  if (tokens.includes(void 0)) {
    return token2;
  }
  return tokens;
}
function expandMacroTokens(tokens, locale2) {
  return Array.prototype.concat(...tokens.map((t2) => maybeExpandMacroToken(t2, locale2)));
}
function explainFromTokens(locale2, input, format) {
  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale2), units = tokens.map((t2) => unitForToken(t2, locale2)), disqualifyingUnit = units.find((t2) => t2.invalidReason);
  if (disqualifyingUnit) {
    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };
  } else {
    const [regexString, handlers] = buildRegex(units), regex2 = RegExp(regexString, "i"), [rawMatches, matches] = match(input, regex2, handlers), [result, zone, specificOffset] = matches ? dateTimeFromMatches(matches) : [null, null, void 0];
    if (hasOwnProperty$3(matches, "a") && hasOwnProperty$3(matches, "H")) {
      throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");
    }
    return { input, tokens, regex: regex2, rawMatches, matches, result, zone, specificOffset };
  }
}
function parseFromTokens(locale2, input, format) {
  const { result, zone, specificOffset, invalidReason } = explainFromTokens(locale2, input, format);
  return [result, zone, specificOffset, invalidReason];
}
const nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334], leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function unitOutOfRange(unit, value2) {
  return new Invalid("unit out of range", `you specified ${value2} (of type ${typeof value2}) as a ${unit}, which is invalid`);
}
function dayOfWeek(year, month, day) {
  const js2 = new Date(Date.UTC(year, month - 1, day)).getUTCDay();
  return js2 === 0 ? 7 : js2;
}
function computeOrdinal(year, month, day) {
  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];
}
function uncomputeOrdinal(year, ordinal) {
  const table = isLeapYear(year) ? leapLadder : nonLeapLadder, month0 = table.findIndex((i2) => i2 < ordinal), day = ordinal - table[month0];
  return { month: month0 + 1, day };
}
function gregorianToWeek(gregObj) {
  const { year, month, day } = gregObj, ordinal = computeOrdinal(year, month, day), weekday = dayOfWeek(year, month, day);
  let weekNumber = Math.floor((ordinal - weekday + 10) / 7), weekYear;
  if (weekNumber < 1) {
    weekYear = year - 1;
    weekNumber = weeksInWeekYear(weekYear);
  } else if (weekNumber > weeksInWeekYear(year)) {
    weekYear = year + 1;
    weekNumber = 1;
  } else {
    weekYear = year;
  }
  return __spreadValues({ weekYear, weekNumber, weekday }, timeObject(gregObj));
}
function weekToGregorian(weekData) {
  const { weekYear, weekNumber, weekday } = weekData, weekdayOfJan4 = dayOfWeek(weekYear, 1, 4), yearInDays = daysInYear(weekYear);
  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3, year;
  if (ordinal < 1) {
    year = weekYear - 1;
    ordinal += daysInYear(year);
  } else if (ordinal > yearInDays) {
    year = weekYear + 1;
    ordinal -= daysInYear(weekYear);
  } else {
    year = weekYear;
  }
  const { month, day } = uncomputeOrdinal(year, ordinal);
  return __spreadValues({ year, month, day }, timeObject(weekData));
}
function gregorianToOrdinal(gregData) {
  const { year, month, day } = gregData;
  const ordinal = computeOrdinal(year, month, day);
  return __spreadValues({ year, ordinal }, timeObject(gregData));
}
function ordinalToGregorian(ordinalData) {
  const { year, ordinal } = ordinalData;
  const { month, day } = uncomputeOrdinal(year, ordinal);
  return __spreadValues({ year, month, day }, timeObject(ordinalData));
}
function hasInvalidWeekData(obj) {
  const validYear = isInteger(obj.weekYear), validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)), validWeekday = integerBetween(obj.weekday, 1, 7);
  if (!validYear) {
    return unitOutOfRange("weekYear", obj.weekYear);
  } else if (!validWeek) {
    return unitOutOfRange("week", obj.week);
  } else if (!validWeekday) {
    return unitOutOfRange("weekday", obj.weekday);
  } else
    return false;
}
function hasInvalidOrdinalData(obj) {
  const validYear = isInteger(obj.year), validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));
  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validOrdinal) {
    return unitOutOfRange("ordinal", obj.ordinal);
  } else
    return false;
}
function hasInvalidGregorianData(obj) {
  const validYear = isInteger(obj.year), validMonth = integerBetween(obj.month, 1, 12), validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));
  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validMonth) {
    return unitOutOfRange("month", obj.month);
  } else if (!validDay) {
    return unitOutOfRange("day", obj.day);
  } else
    return false;
}
function hasInvalidTimeData(obj) {
  const { hour, minute, second, millisecond } = obj;
  const validHour = integerBetween(hour, 0, 23) || hour === 24 && minute === 0 && second === 0 && millisecond === 0, validMinute = integerBetween(minute, 0, 59), validSecond = integerBetween(second, 0, 59), validMillisecond = integerBetween(millisecond, 0, 999);
  if (!validHour) {
    return unitOutOfRange("hour", hour);
  } else if (!validMinute) {
    return unitOutOfRange("minute", minute);
  } else if (!validSecond) {
    return unitOutOfRange("second", second);
  } else if (!validMillisecond) {
    return unitOutOfRange("millisecond", millisecond);
  } else
    return false;
}
const INVALID = "Invalid DateTime";
const MAX_DATE = 864e13;
function unsupportedZone(zone) {
  return new Invalid("unsupported zone", `the zone "${zone.name}" is not supported`);
}
function possiblyCachedWeekData(dt) {
  if (dt.weekData === null) {
    dt.weekData = gregorianToWeek(dt.c);
  }
  return dt.weekData;
}
function clone(inst, alts) {
  const current = {
    ts: inst.ts,
    zone: inst.zone,
    c: inst.c,
    o: inst.o,
    loc: inst.loc,
    invalid: inst.invalid
  };
  return new DateTime(__spreadProps(__spreadValues(__spreadValues({}, current), alts), { old: current }));
}
function fixOffset(localTS, o2, tz) {
  let utcGuess = localTS - o2 * 60 * 1e3;
  const o22 = tz.offset(utcGuess);
  if (o2 === o22) {
    return [utcGuess, o2];
  }
  utcGuess -= (o22 - o2) * 60 * 1e3;
  const o3 = tz.offset(utcGuess);
  if (o22 === o3) {
    return [utcGuess, o22];
  }
  return [localTS - Math.min(o22, o3) * 60 * 1e3, Math.max(o22, o3)];
}
function tsToObj(ts, offset2) {
  ts += offset2 * 60 * 1e3;
  const d2 = new Date(ts);
  return {
    year: d2.getUTCFullYear(),
    month: d2.getUTCMonth() + 1,
    day: d2.getUTCDate(),
    hour: d2.getUTCHours(),
    minute: d2.getUTCMinutes(),
    second: d2.getUTCSeconds(),
    millisecond: d2.getUTCMilliseconds()
  };
}
function objToTS(obj, offset2, zone) {
  return fixOffset(objToLocalTS(obj), offset2, zone);
}
function adjustTime(inst, dur) {
  const oPre = inst.o, year = inst.c.year + Math.trunc(dur.years), month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3, c2 = __spreadProps(__spreadValues({}, inst.c), {
    year,
    month,
    day: Math.min(inst.c.day, daysInMonth(year, month)) + Math.trunc(dur.days) + Math.trunc(dur.weeks) * 7
  }), millisToAdd = Duration.fromObject({
    years: dur.years - Math.trunc(dur.years),
    quarters: dur.quarters - Math.trunc(dur.quarters),
    months: dur.months - Math.trunc(dur.months),
    weeks: dur.weeks - Math.trunc(dur.weeks),
    days: dur.days - Math.trunc(dur.days),
    hours: dur.hours,
    minutes: dur.minutes,
    seconds: dur.seconds,
    milliseconds: dur.milliseconds
  }).as("milliseconds"), localTS = objToLocalTS(c2);
  let [ts, o2] = fixOffset(localTS, oPre, inst.zone);
  if (millisToAdd !== 0) {
    ts += millisToAdd;
    o2 = inst.zone.offset(ts);
  }
  return { ts, o: o2 };
}
function parseDataToDateTime(parsed, parsedZone, opts, format, text, specificOffset) {
  const { setZone, zone } = opts;
  if (parsed && Object.keys(parsed).length !== 0) {
    const interpretationZone = parsedZone || zone, inst = DateTime.fromObject(parsed, __spreadProps(__spreadValues({}, opts), {
      zone: interpretationZone,
      specificOffset
    }));
    return setZone ? inst : inst.setZone(zone);
  } else {
    return DateTime.invalid(new Invalid("unparsable", `the input "${text}" can't be parsed as ${format}`));
  }
}
function toTechFormat(dt, format, allowZ = true) {
  return dt.isValid ? Formatter.create(Locale.create("en-US"), {
    allowZ,
    forceSimple: true
  }).formatDateTimeFromString(dt, format) : null;
}
function toISODate(o2, extended) {
  const longFormat = o2.c.year > 9999 || o2.c.year < 0;
  let c2 = "";
  if (longFormat && o2.c.year >= 0)
    c2 += "+";
  c2 += padStart(o2.c.year, longFormat ? 6 : 4);
  if (extended) {
    c2 += "-";
    c2 += padStart(o2.c.month);
    c2 += "-";
    c2 += padStart(o2.c.day);
  } else {
    c2 += padStart(o2.c.month);
    c2 += padStart(o2.c.day);
  }
  return c2;
}
function toISOTime(o2, extended, suppressSeconds, suppressMilliseconds, includeOffset) {
  let c2 = padStart(o2.c.hour);
  if (extended) {
    c2 += ":";
    c2 += padStart(o2.c.minute);
    if (o2.c.second !== 0 || !suppressSeconds) {
      c2 += ":";
    }
  } else {
    c2 += padStart(o2.c.minute);
  }
  if (o2.c.second !== 0 || !suppressSeconds) {
    c2 += padStart(o2.c.second);
    if (o2.c.millisecond !== 0 || !suppressMilliseconds) {
      c2 += ".";
      c2 += padStart(o2.c.millisecond, 3);
    }
  }
  if (includeOffset) {
    if (o2.isOffsetFixed && o2.offset === 0) {
      c2 += "Z";
    } else if (o2.o < 0) {
      c2 += "-";
      c2 += padStart(Math.trunc(-o2.o / 60));
      c2 += ":";
      c2 += padStart(Math.trunc(-o2.o % 60));
    } else {
      c2 += "+";
      c2 += padStart(Math.trunc(o2.o / 60));
      c2 += ":";
      c2 += padStart(Math.trunc(o2.o % 60));
    }
  }
  return c2;
}
const defaultUnitValues = {
  month: 1,
  day: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}, defaultWeekUnitValues = {
  weekNumber: 1,
  weekday: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}, defaultOrdinalUnitValues = {
  ordinal: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
};
const orderedUnits = ["year", "month", "day", "hour", "minute", "second", "millisecond"], orderedWeekUnits = [
  "weekYear",
  "weekNumber",
  "weekday",
  "hour",
  "minute",
  "second",
  "millisecond"
], orderedOrdinalUnits = ["year", "ordinal", "hour", "minute", "second", "millisecond"];
function normalizeUnit(unit) {
  const normalized = {
    year: "year",
    years: "year",
    month: "month",
    months: "month",
    day: "day",
    days: "day",
    hour: "hour",
    hours: "hour",
    minute: "minute",
    minutes: "minute",
    quarter: "quarter",
    quarters: "quarter",
    second: "second",
    seconds: "second",
    millisecond: "millisecond",
    milliseconds: "millisecond",
    weekday: "weekday",
    weekdays: "weekday",
    weeknumber: "weekNumber",
    weeksnumber: "weekNumber",
    weeknumbers: "weekNumber",
    weekyear: "weekYear",
    weekyears: "weekYear",
    ordinal: "ordinal"
  }[unit.toLowerCase()];
  if (!normalized)
    throw new InvalidUnitError(unit);
  return normalized;
}
function quickDT(obj, opts) {
  const zone = normalizeZone(opts.zone, Settings.defaultZone), loc = Locale.fromObject(opts), tsNow = Settings.now();
  let ts, o2;
  if (!isUndefined(obj.year)) {
    for (const u2 of orderedUnits) {
      if (isUndefined(obj[u2])) {
        obj[u2] = defaultUnitValues[u2];
      }
    }
    const invalid2 = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);
    if (invalid2) {
      return DateTime.invalid(invalid2);
    }
    const offsetProvis = zone.offset(tsNow);
    [ts, o2] = objToTS(obj, offsetProvis, zone);
  } else {
    ts = tsNow;
  }
  return new DateTime({ ts, zone, loc, o: o2 });
}
function diffRelative(start, end, opts) {
  const round = isUndefined(opts.round) ? true : opts.round, format = (c2, unit) => {
    c2 = roundTo(c2, round || opts.calendary ? 0 : 2, true);
    const formatter = end.loc.clone(opts).relFormatter(opts);
    return formatter.format(c2, unit);
  }, differ = (unit) => {
    if (opts.calendary) {
      if (!end.hasSame(start, unit)) {
        return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);
      } else
        return 0;
    } else {
      return end.diff(start, unit).get(unit);
    }
  };
  if (opts.unit) {
    return format(differ(opts.unit), opts.unit);
  }
  for (const unit of opts.units) {
    const count = differ(unit);
    if (Math.abs(count) >= 1) {
      return format(count, unit);
    }
  }
  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);
}
function lastOpts(argList) {
  let opts = {}, args;
  if (argList.length > 0 && typeof argList[argList.length - 1] === "object") {
    opts = argList[argList.length - 1];
    args = Array.from(argList).slice(0, argList.length - 1);
  } else {
    args = Array.from(argList);
  }
  return [opts, args];
}
class DateTime {
  constructor(config) {
    const zone = config.zone || Settings.defaultZone;
    let invalid2 = config.invalid || (Number.isNaN(config.ts) ? new Invalid("invalid input") : null) || (!zone.isValid ? unsupportedZone(zone) : null);
    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;
    let c2 = null, o2 = null;
    if (!invalid2) {
      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);
      if (unchanged) {
        [c2, o2] = [config.old.c, config.old.o];
      } else {
        const ot = zone.offset(this.ts);
        c2 = tsToObj(this.ts, ot);
        invalid2 = Number.isNaN(c2.year) ? new Invalid("invalid input") : null;
        c2 = invalid2 ? null : c2;
        o2 = invalid2 ? null : ot;
      }
    }
    this._zone = zone;
    this.loc = config.loc || Locale.create();
    this.invalid = invalid2;
    this.weekData = null;
    this.c = c2;
    this.o = o2;
    this.isLuxonDateTime = true;
  }
  static now() {
    return new DateTime({});
  }
  static local() {
    const [opts, args] = lastOpts(arguments), [year, month, day, hour, minute, second, millisecond] = args;
    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);
  }
  static utc() {
    const [opts, args] = lastOpts(arguments), [year, month, day, hour, minute, second, millisecond] = args;
    opts.zone = FixedOffsetZone.utcInstance;
    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);
  }
  static fromJSDate(date, options = {}) {
    const ts = isDate(date) ? date.valueOf() : NaN;
    if (Number.isNaN(ts)) {
      return DateTime.invalid("invalid input");
    }
    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);
    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }
    return new DateTime({
      ts,
      zone: zoneToUse,
      loc: Locale.fromObject(options)
    });
  }
  static fromMillis(milliseconds, options = {}) {
    if (!isNumber(milliseconds)) {
      throw new InvalidArgumentError(`fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`);
    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {
      return DateTime.invalid("Timestamp out of range");
    } else {
      return new DateTime({
        ts: milliseconds,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  static fromSeconds(seconds, options = {}) {
    if (!isNumber(seconds)) {
      throw new InvalidArgumentError("fromSeconds requires a numerical input");
    } else {
      return new DateTime({
        ts: seconds * 1e3,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  static fromObject(obj, opts = {}) {
    obj = obj || {};
    const zoneToUse = normalizeZone(opts.zone, Settings.defaultZone);
    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }
    const tsNow = Settings.now(), offsetProvis = !isUndefined(opts.specificOffset) ? opts.specificOffset : zoneToUse.offset(tsNow), normalized = normalizeObject(obj, normalizeUnit), containsOrdinal = !isUndefined(normalized.ordinal), containsGregorYear = !isUndefined(normalized.year), containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day), containsGregor = containsGregorYear || containsGregorMD, definiteWeekDef = normalized.weekYear || normalized.weekNumber, loc = Locale.fromObject(opts);
    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }
    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }
    const useWeekData = definiteWeekDef || normalized.weekday && !containsGregor;
    let units, defaultValues, objNow = tsToObj(tsNow, offsetProvis);
    if (useWeekData) {
      units = orderedWeekUnits;
      defaultValues = defaultWeekUnitValues;
      objNow = gregorianToWeek(objNow);
    } else if (containsOrdinal) {
      units = orderedOrdinalUnits;
      defaultValues = defaultOrdinalUnitValues;
      objNow = gregorianToOrdinal(objNow);
    } else {
      units = orderedUnits;
      defaultValues = defaultUnitValues;
    }
    let foundFirst = false;
    for (const u2 of units) {
      const v2 = normalized[u2];
      if (!isUndefined(v2)) {
        foundFirst = true;
      } else if (foundFirst) {
        normalized[u2] = defaultValues[u2];
      } else {
        normalized[u2] = objNow[u2];
      }
    }
    const higherOrderInvalid = useWeekData ? hasInvalidWeekData(normalized) : containsOrdinal ? hasInvalidOrdinalData(normalized) : hasInvalidGregorianData(normalized), invalid2 = higherOrderInvalid || hasInvalidTimeData(normalized);
    if (invalid2) {
      return DateTime.invalid(invalid2);
    }
    const gregorian = useWeekData ? weekToGregorian(normalized) : containsOrdinal ? ordinalToGregorian(normalized) : normalized, [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse), inst = new DateTime({
      ts: tsFinal,
      zone: zoneToUse,
      o: offsetFinal,
      loc
    });
    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {
      return DateTime.invalid("mismatched weekday", `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`);
    }
    return inst;
  }
  static fromISO(text, opts = {}) {
    const [vals, parsedZone] = parseISODate(text);
    return parseDataToDateTime(vals, parsedZone, opts, "ISO 8601", text);
  }
  static fromRFC2822(text, opts = {}) {
    const [vals, parsedZone] = parseRFC2822Date(text);
    return parseDataToDateTime(vals, parsedZone, opts, "RFC 2822", text);
  }
  static fromHTTP(text, opts = {}) {
    const [vals, parsedZone] = parseHTTPDate(text);
    return parseDataToDateTime(vals, parsedZone, opts, "HTTP", opts);
  }
  static fromFormat(text, fmt, opts = {}) {
    if (isUndefined(text) || isUndefined(fmt)) {
      throw new InvalidArgumentError("fromFormat requires an input string and a format");
    }
    const { locale: locale2 = null, numberingSystem = null } = opts, localeToUse = Locale.fromOpts({
      locale: locale2,
      numberingSystem,
      defaultToEN: true
    }), [vals, parsedZone, specificOffset, invalid2] = parseFromTokens(localeToUse, text, fmt);
    if (invalid2) {
      return DateTime.invalid(invalid2);
    } else {
      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text, specificOffset);
    }
  }
  static fromString(text, fmt, opts = {}) {
    return DateTime.fromFormat(text, fmt, opts);
  }
  static fromSQL(text, opts = {}) {
    const [vals, parsedZone] = parseSQL(text);
    return parseDataToDateTime(vals, parsedZone, opts, "SQL", text);
  }
  static invalid(reason2, explanation = null) {
    if (!reason2) {
      throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");
    }
    const invalid2 = reason2 instanceof Invalid ? reason2 : new Invalid(reason2, explanation);
    if (Settings.throwOnInvalid) {
      throw new InvalidDateTimeError(invalid2);
    } else {
      return new DateTime({ invalid: invalid2 });
    }
  }
  static isDateTime(o2) {
    return o2 && o2.isLuxonDateTime || false;
  }
  get(unit) {
    return this[unit];
  }
  get isValid() {
    return this.invalid === null;
  }
  get invalidReason() {
    return this.invalid ? this.invalid.reason : null;
  }
  get invalidExplanation() {
    return this.invalid ? this.invalid.explanation : null;
  }
  get locale() {
    return this.isValid ? this.loc.locale : null;
  }
  get numberingSystem() {
    return this.isValid ? this.loc.numberingSystem : null;
  }
  get outputCalendar() {
    return this.isValid ? this.loc.outputCalendar : null;
  }
  get zone() {
    return this._zone;
  }
  get zoneName() {
    return this.isValid ? this.zone.name : null;
  }
  get year() {
    return this.isValid ? this.c.year : NaN;
  }
  get quarter() {
    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;
  }
  get month() {
    return this.isValid ? this.c.month : NaN;
  }
  get day() {
    return this.isValid ? this.c.day : NaN;
  }
  get hour() {
    return this.isValid ? this.c.hour : NaN;
  }
  get minute() {
    return this.isValid ? this.c.minute : NaN;
  }
  get second() {
    return this.isValid ? this.c.second : NaN;
  }
  get millisecond() {
    return this.isValid ? this.c.millisecond : NaN;
  }
  get weekYear() {
    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;
  }
  get weekNumber() {
    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;
  }
  get weekday() {
    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;
  }
  get ordinal() {
    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;
  }
  get monthShort() {
    return this.isValid ? Info$3.months("short", { locObj: this.loc })[this.month - 1] : null;
  }
  get monthLong() {
    return this.isValid ? Info$3.months("long", { locObj: this.loc })[this.month - 1] : null;
  }
  get weekdayShort() {
    return this.isValid ? Info$3.weekdays("short", { locObj: this.loc })[this.weekday - 1] : null;
  }
  get weekdayLong() {
    return this.isValid ? Info$3.weekdays("long", { locObj: this.loc })[this.weekday - 1] : null;
  }
  get offset() {
    return this.isValid ? +this.o : NaN;
  }
  get offsetNameShort() {
    if (this.isValid) {
      return this.zone.offsetName(this.ts, {
        format: "short",
        locale: this.locale
      });
    } else {
      return null;
    }
  }
  get offsetNameLong() {
    if (this.isValid) {
      return this.zone.offsetName(this.ts, {
        format: "long",
        locale: this.locale
      });
    } else {
      return null;
    }
  }
  get isOffsetFixed() {
    return this.isValid ? this.zone.isUniversal : null;
  }
  get isInDST() {
    if (this.isOffsetFixed) {
      return false;
    } else {
      return this.offset > this.set({ month: 1 }).offset || this.offset > this.set({ month: 5 }).offset;
    }
  }
  get isInLeapYear() {
    return isLeapYear(this.year);
  }
  get daysInMonth() {
    return daysInMonth(this.year, this.month);
  }
  get daysInYear() {
    return this.isValid ? daysInYear(this.year) : NaN;
  }
  get weeksInWeekYear() {
    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;
  }
  resolvedLocaleOptions(opts = {}) {
    const { locale: locale2, numberingSystem, calendar } = Formatter.create(this.loc.clone(opts), opts).resolvedOptions(this);
    return { locale: locale2, numberingSystem, outputCalendar: calendar };
  }
  toUTC(offset2 = 0, opts = {}) {
    return this.setZone(FixedOffsetZone.instance(offset2), opts);
  }
  toLocal() {
    return this.setZone(Settings.defaultZone);
  }
  setZone(zone, { keepLocalTime = false, keepCalendarTime = false } = {}) {
    zone = normalizeZone(zone, Settings.defaultZone);
    if (zone.equals(this.zone)) {
      return this;
    } else if (!zone.isValid) {
      return DateTime.invalid(unsupportedZone(zone));
    } else {
      let newTS = this.ts;
      if (keepLocalTime || keepCalendarTime) {
        const offsetGuess = zone.offset(this.ts);
        const asObj = this.toObject();
        [newTS] = objToTS(asObj, offsetGuess, zone);
      }
      return clone(this, { ts: newTS, zone });
    }
  }
  reconfigure({ locale: locale2, numberingSystem, outputCalendar } = {}) {
    const loc = this.loc.clone({ locale: locale2, numberingSystem, outputCalendar });
    return clone(this, { loc });
  }
  setLocale(locale2) {
    return this.reconfigure({ locale: locale2 });
  }
  set(values) {
    if (!this.isValid)
      return this;
    const normalized = normalizeObject(values, normalizeUnit), settingWeekStuff = !isUndefined(normalized.weekYear) || !isUndefined(normalized.weekNumber) || !isUndefined(normalized.weekday), containsOrdinal = !isUndefined(normalized.ordinal), containsGregorYear = !isUndefined(normalized.year), containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day), containsGregor = containsGregorYear || containsGregorMD, definiteWeekDef = normalized.weekYear || normalized.weekNumber;
    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }
    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }
    let mixed;
    if (settingWeekStuff) {
      mixed = weekToGregorian(__spreadValues(__spreadValues({}, gregorianToWeek(this.c)), normalized));
    } else if (!isUndefined(normalized.ordinal)) {
      mixed = ordinalToGregorian(__spreadValues(__spreadValues({}, gregorianToOrdinal(this.c)), normalized));
    } else {
      mixed = __spreadValues(__spreadValues({}, this.toObject()), normalized);
      if (isUndefined(normalized.day)) {
        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);
      }
    }
    const [ts, o2] = objToTS(mixed, this.o, this.zone);
    return clone(this, { ts, o: o2 });
  }
  plus(duration) {
    if (!this.isValid)
      return this;
    const dur = Duration.fromDurationLike(duration);
    return clone(this, adjustTime(this, dur));
  }
  minus(duration) {
    if (!this.isValid)
      return this;
    const dur = Duration.fromDurationLike(duration).negate();
    return clone(this, adjustTime(this, dur));
  }
  startOf(unit) {
    if (!this.isValid)
      return this;
    const o2 = {}, normalizedUnit = Duration.normalizeUnit(unit);
    switch (normalizedUnit) {
      case "years":
        o2.month = 1;
      case "quarters":
      case "months":
        o2.day = 1;
      case "weeks":
      case "days":
        o2.hour = 0;
      case "hours":
        o2.minute = 0;
      case "minutes":
        o2.second = 0;
      case "seconds":
        o2.millisecond = 0;
        break;
    }
    if (normalizedUnit === "weeks") {
      o2.weekday = 1;
    }
    if (normalizedUnit === "quarters") {
      const q2 = Math.ceil(this.month / 3);
      o2.month = (q2 - 1) * 3 + 1;
    }
    return this.set(o2);
  }
  endOf(unit) {
    return this.isValid ? this.plus({ [unit]: 1 }).startOf(unit).minus(1) : this;
  }
  toFormat(fmt, opts = {}) {
    return this.isValid ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt) : INVALID;
  }
  toLocaleString(formatOpts = DATE_SHORT, opts = {}) {
    return this.isValid ? Formatter.create(this.loc.clone(opts), formatOpts).formatDateTime(this) : INVALID;
  }
  toLocaleParts(opts = {}) {
    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this) : [];
  }
  toISO({
    format = "extended",
    suppressSeconds = false,
    suppressMilliseconds = false,
    includeOffset = true
  } = {}) {
    if (!this.isValid) {
      return null;
    }
    const ext = format === "extended";
    let c2 = toISODate(this, ext);
    c2 += "T";
    c2 += toISOTime(this, ext, suppressSeconds, suppressMilliseconds, includeOffset);
    return c2;
  }
  toISODate({ format = "extended" } = {}) {
    if (!this.isValid) {
      return null;
    }
    return toISODate(this, format === "extended");
  }
  toISOWeekDate() {
    return toTechFormat(this, "kkkk-'W'WW-c");
  }
  toISOTime({
    suppressMilliseconds = false,
    suppressSeconds = false,
    includeOffset = true,
    includePrefix = false,
    format = "extended"
  } = {}) {
    if (!this.isValid) {
      return null;
    }
    let c2 = includePrefix ? "T" : "";
    return c2 + toISOTime(this, format === "extended", suppressSeconds, suppressMilliseconds, includeOffset);
  }
  toRFC2822() {
    return toTechFormat(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", false);
  }
  toHTTP() {
    return toTechFormat(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'");
  }
  toSQLDate() {
    if (!this.isValid) {
      return null;
    }
    return toISODate(this, true);
  }
  toSQLTime({ includeOffset = true, includeZone = false, includeOffsetSpace = true } = {}) {
    let fmt = "HH:mm:ss.SSS";
    if (includeZone || includeOffset) {
      if (includeOffsetSpace) {
        fmt += " ";
      }
      if (includeZone) {
        fmt += "z";
      } else if (includeOffset) {
        fmt += "ZZ";
      }
    }
    return toTechFormat(this, fmt, true);
  }
  toSQL(opts = {}) {
    if (!this.isValid) {
      return null;
    }
    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;
  }
  toString() {
    return this.isValid ? this.toISO() : INVALID;
  }
  valueOf() {
    return this.toMillis();
  }
  toMillis() {
    return this.isValid ? this.ts : NaN;
  }
  toSeconds() {
    return this.isValid ? this.ts / 1e3 : NaN;
  }
  toUnixInteger() {
    return this.isValid ? Math.floor(this.ts / 1e3) : NaN;
  }
  toJSON() {
    return this.toISO();
  }
  toBSON() {
    return this.toJSDate();
  }
  toObject(opts = {}) {
    if (!this.isValid)
      return {};
    const base = __spreadValues({}, this.c);
    if (opts.includeConfig) {
      base.outputCalendar = this.outputCalendar;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }
    return base;
  }
  toJSDate() {
    return new Date(this.isValid ? this.ts : NaN);
  }
  diff(otherDateTime, unit = "milliseconds", opts = {}) {
    if (!this.isValid || !otherDateTime.isValid) {
      return Duration.invalid("created by diffing an invalid DateTime");
    }
    const durOpts = __spreadValues({ locale: this.locale, numberingSystem: this.numberingSystem }, opts);
    const units = maybeArray(unit).map(Duration.normalizeUnit), otherIsLater = otherDateTime.valueOf() > this.valueOf(), earlier = otherIsLater ? this : otherDateTime, later = otherIsLater ? otherDateTime : this, diffed = diff$1(earlier, later, units, durOpts);
    return otherIsLater ? diffed.negate() : diffed;
  }
  diffNow(unit = "milliseconds", opts = {}) {
    return this.diff(DateTime.now(), unit, opts);
  }
  until(otherDateTime) {
    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;
  }
  hasSame(otherDateTime, unit) {
    if (!this.isValid)
      return false;
    const inputMs = otherDateTime.valueOf();
    const adjustedToZone = this.setZone(otherDateTime.zone, { keepLocalTime: true });
    return adjustedToZone.startOf(unit) <= inputMs && inputMs <= adjustedToZone.endOf(unit);
  }
  equals(other) {
    return this.isValid && other.isValid && this.valueOf() === other.valueOf() && this.zone.equals(other.zone) && this.loc.equals(other.loc);
  }
  toRelative(options = {}) {
    if (!this.isValid)
      return null;
    const base = options.base || DateTime.fromObject({}, { zone: this.zone }), padding = options.padding ? this < base ? -options.padding : options.padding : 0;
    let units = ["years", "months", "days", "hours", "minutes", "seconds"];
    let unit = options.unit;
    if (Array.isArray(options.unit)) {
      units = options.unit;
      unit = void 0;
    }
    return diffRelative(base, this.plus(padding), __spreadProps(__spreadValues({}, options), {
      numeric: "always",
      units,
      unit
    }));
  }
  toRelativeCalendar(options = {}) {
    if (!this.isValid)
      return null;
    return diffRelative(options.base || DateTime.fromObject({}, { zone: this.zone }), this, __spreadProps(__spreadValues({}, options), {
      numeric: "auto",
      units: ["years", "months", "days"],
      calendary: true
    }));
  }
  static min(...dateTimes) {
    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("min requires all arguments be DateTimes");
    }
    return bestBy(dateTimes, (i2) => i2.valueOf(), Math.min);
  }
  static max(...dateTimes) {
    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("max requires all arguments be DateTimes");
    }
    return bestBy(dateTimes, (i2) => i2.valueOf(), Math.max);
  }
  static fromFormatExplain(text, fmt, options = {}) {
    const { locale: locale2 = null, numberingSystem = null } = options, localeToUse = Locale.fromOpts({
      locale: locale2,
      numberingSystem,
      defaultToEN: true
    });
    return explainFromTokens(localeToUse, text, fmt);
  }
  static fromStringExplain(text, fmt, options = {}) {
    return DateTime.fromFormatExplain(text, fmt, options);
  }
  static get DATE_SHORT() {
    return DATE_SHORT;
  }
  static get DATE_MED() {
    return DATE_MED;
  }
  static get DATE_MED_WITH_WEEKDAY() {
    return DATE_MED_WITH_WEEKDAY;
  }
  static get DATE_FULL() {
    return DATE_FULL;
  }
  static get DATE_HUGE() {
    return DATE_HUGE;
  }
  static get TIME_SIMPLE() {
    return TIME_SIMPLE;
  }
  static get TIME_WITH_SECONDS() {
    return TIME_WITH_SECONDS;
  }
  static get TIME_WITH_SHORT_OFFSET() {
    return TIME_WITH_SHORT_OFFSET;
  }
  static get TIME_WITH_LONG_OFFSET() {
    return TIME_WITH_LONG_OFFSET;
  }
  static get TIME_24_SIMPLE() {
    return TIME_24_SIMPLE;
  }
  static get TIME_24_WITH_SECONDS() {
    return TIME_24_WITH_SECONDS;
  }
  static get TIME_24_WITH_SHORT_OFFSET() {
    return TIME_24_WITH_SHORT_OFFSET;
  }
  static get TIME_24_WITH_LONG_OFFSET() {
    return TIME_24_WITH_LONG_OFFSET;
  }
  static get DATETIME_SHORT() {
    return DATETIME_SHORT;
  }
  static get DATETIME_SHORT_WITH_SECONDS() {
    return DATETIME_SHORT_WITH_SECONDS;
  }
  static get DATETIME_MED() {
    return DATETIME_MED;
  }
  static get DATETIME_MED_WITH_SECONDS() {
    return DATETIME_MED_WITH_SECONDS;
  }
  static get DATETIME_MED_WITH_WEEKDAY() {
    return DATETIME_MED_WITH_WEEKDAY;
  }
  static get DATETIME_FULL() {
    return DATETIME_FULL;
  }
  static get DATETIME_FULL_WITH_SECONDS() {
    return DATETIME_FULL_WITH_SECONDS;
  }
  static get DATETIME_HUGE() {
    return DATETIME_HUGE;
  }
  static get DATETIME_HUGE_WITH_SECONDS() {
    return DATETIME_HUGE_WITH_SECONDS;
  }
}
function friendlyDateTime(dateTimeish) {
  if (DateTime.isDateTime(dateTimeish)) {
    return dateTimeish;
  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {
    return DateTime.fromJSDate(dateTimeish);
  } else if (dateTimeish && typeof dateTimeish === "object") {
    return DateTime.fromObject(dateTimeish);
  } else {
    throw new InvalidArgumentError(`Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`);
  }
}
const DateLabel = memo((_wb) => {
  var _xb = _wb, {
    className = "",
    format = DateTime.DATE_MED,
    icon: icon2,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _xb, props = __objRest(_xb, [
    "className",
    "format",
    "icon",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    className: `${className} date-label`,
    icon: icon2,
    textColor,
    textSize
  }, props), {
    children: DateTime.fromISO(value2).toLocaleString(format)
  }));
});
const MenuItemLabel = memo((_yb) => {
  var _zb = _yb, {
    fieldName,
    icon: icon2,
    lineHeight = Sizes.Default,
    model,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _zb, props = __objRest(_zb, [
    "fieldName",
    "icon",
    "lineHeight",
    "model",
    "textColor",
    "textSize",
    "value"
  ]);
  var _a2, _b, _c, _d;
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: !fieldName || !model ? value2 : (_d = (_c = (_b = (_a2 = model.fields[fieldName]) == null ? void 0 : _a2.items) == null ? void 0 : _b.find((i2) => i2.value === value2)) == null ? void 0 : _c.label) != null ? _d : value2
  }));
});
function getLabelByFieldType({
  fieldName,
  model,
  props,
  type,
  value: value2
}) {
  switch (type) {
    case na$1.Boolean:
      return /* @__PURE__ */ jsx$2(BooleanLabel, __spreadValues({
        value: value2
      }, props));
    case na$1.CurrencyAmount:
      return /* @__PURE__ */ jsx$2(CurrencyAmountLabel, __spreadValues({
        amount: value2,
        currency: D$2.UnitedStatesDollar
      }, props));
    case na$1.Date:
      return /* @__PURE__ */ jsx$2(DateLabel, __spreadValues({
        value: value2
      }, props));
    case na$1.Percent:
      return /* @__PURE__ */ jsx$2(PercentLabel, __spreadValues({
        value: value2
      }, props));
    case na$1.Menu:
      return /* @__PURE__ */ jsx$2(MenuItemLabel, __spreadValues({
        fieldName,
        model,
        value: value2
      }, props));
    case na$1.Number:
      return /* @__PURE__ */ jsx$2(NumberLabel, __spreadValues({
        value: value2
      }, props));
    case na$1.String:
      return /* @__PURE__ */ jsx$2(StringLabel, __spreadValues({
        value: value2
      }, props));
    default:
      return /* @__PURE__ */ jsx$2(StringLabel, __spreadValues({
        value: value2
      }, props));
  }
}
const DataGridCell = memo((_Ab) => {
  var _Bb = _Ab, {
    as = "label",
    fieldName,
    model,
    type,
    value: value2
  } = _Bb, props = __objRest(_Bb, [
    "as",
    "fieldName",
    "model",
    "type",
    "value"
  ]);
  const {
    alignment,
    textColor,
    textOverflow,
    textSize,
    textWeight,
    size
  } = props;
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: {
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    },
    as,
    padding: {
      left: Amount.Less,
      right: Amount.Less
    },
    size
  }, props), {
    children: getLabelByFieldType({
      fieldName,
      model,
      props: {
        alignment,
        textColor,
        textOverflow,
        textSize,
        textWeight
      },
      type,
      value: value2
    })
  }));
});
const SearchInput = memo((props) => {
  return /* @__PURE__ */ jsx$2(TextInput, __spreadValues({
    icon: {
      name: BasicIcons.Search,
      size: {
        height: Sizes.Smaller,
        width: Sizes.Smaller
      }
    },
    type: InputType.Search,
    spellCheck: false
  }, props));
});
const MenuButton = memo((_Cb) => {
  var _Db = _Cb, {
    background = {},
    border = {},
    borderRadius = {},
    className = "",
    menu,
    label,
    padding = {},
    size = {},
    states = {},
    textColor = TextColors.MenuButton
  } = _Db, props = __objRest(_Db, [
    "background",
    "border",
    "borderRadius",
    "className",
    "menu",
    "label",
    "padding",
    "size",
    "states",
    "textColor"
  ]);
  var _a2, _b, _c;
  const [focused, setFocused] = useState(false);
  const [menuVisible, setMenuVisible] = useState((_c = (_b = (_a2 = states == null ? void 0 : states.state) == null ? void 0 : _a2.dropdown) == null ? void 0 : _b.visible) != null ? _c : false);
  const menuVisibleRef = useRef(menuVisible);
  useEffect(() => {
    setFocused(menuVisible);
  }, [menuVisible]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    borderRadius: Object.assign({}, __spreadValues({
      all: Amount.Least
    }, borderRadius), menuVisible ? {
      bottomLeft: Amount.None,
      bottomRight: Amount.None
    } : {}),
    className: `${className} dropdown-input`,
    depth: menuVisible ? Depth.Higher : Depth.Surface,
    events: {
      mouse: {
        onMouseLeave: () => {
          menuVisibleRef.current = false;
          setMenuVisible(false);
        }
      }
    },
    size: __spreadValues({
      height: Sizes.Default
    }, size),
    shadow: menuVisible ? DepthShadow.Higher : DepthShadow.Surface
  }, props), {
    children: [/* @__PURE__ */ jsx$2(DropdownControl, {
      background: {
        color: menuVisible ? BackgroundColors.Black : BackgroundColors.MenuButton
      },
      events: {
        focus: {
          onBlur: () => {
            setFocused(false);
          },
          onFocus: () => setFocused(true)
        },
        mouse: {
          onClick: () => {
            menuVisibleRef.current = !menuVisibleRef.current;
            setMenuVisible(menuVisibleRef.current);
          }
        }
      },
      label,
      shadow: DepthShadow.High,
      size: __spreadValues({
        height: Sizes.Default
      }, size),
      states: __spreadValues({
        state: {
          dropdown: {
            visible: menuVisibleRef.current
          },
          focused
        }
      }, states),
      textColor: menuVisible ? TextColors.BlackContrast : textColor
    }), /* @__PURE__ */ jsx$2(DropdownPanel, __spreadProps(__spreadValues({
      background: {
        color: menuVisible ? BackgroundColors.Black : BackgroundColors.MenuButton
      },
      padding: __spreadValues({
        all: Amount.Least
      }, padding),
      position: {
        top: `calc(${Sizes.Default} - 3px)`
      },
      states: __spreadValues({
        state: {
          focused,
          dropdown: {
            visible: menuVisibleRef.current
          }
        }
      }, states)
    }, props), {
      children: /* @__PURE__ */ jsx$2(Menu, {
        background: {
          color: menuVisible ? BackgroundColors.Black : BackgroundColors.MenuButton
        },
        menu,
        onItemClick: (i2) => {
          menuVisibleRef.current = false;
          setMenuVisible(false);
        },
        padding: {
          all: Amount.None
        },
        shadow: DepthShadow.Surface
      })
    }))]
  }));
});
const DataGrid = memo((_Eb) => {
  var _Fb = _Eb, {
    background = {},
    borderRadius = {},
    className = "",
    columns,
    columnCount = 3,
    data: data2,
    depth = Depth.Highest,
    display = "table",
    header,
    hideOnProp,
    loaded,
    model,
    onItemClick,
    shadow = DepthShadow.Highest,
    states = {},
    template
  } = _Fb, props = __objRest(_Fb, [
    "background",
    "borderRadius",
    "className",
    "columns",
    "columnCount",
    "data",
    "depth",
    "display",
    "header",
    "hideOnProp",
    "loaded",
    "model",
    "onItemClick",
    "shadow",
    "states",
    "template"
  ]);
  var _a2, _b, _c;
  const [searchTerm, setSearchTerm] = useState("");
  const [hoveredRow, setHoveredRow] = useState();
  const MIN_COLUMN_WIDTH = 150;
  const MAX_COLUMN_WIDTH = 300;
  if (!columns) {
    return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
      alignment: {
        vertical: AlignVertical.Top
      },
      background: __spreadValues({
        color: BackgroundColors.DataGrid
      }, background),
      borderRadius: __spreadValues({
        all: Amount.Least
      }, borderRadius),
      className: `${className} data-grid`,
      shadow,
      states
    }, props), {
      children: /* @__PURE__ */ jsx$2(Label, {
        children: "No columns defined"
      })
    }));
  }
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    alignment: {
      vertical: AlignVertical.Top
    },
    background,
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    className: `${className} data-grid`,
    shadow,
    states
  }, props), {
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      borderRadius,
      states: {
        state: {
          visible: (_b = (_a2 = states.state) == null ? void 0 : _a2.loading) != null ? _b : false
        }
      }
    }), header && Object.keys(header).length > 0 && /* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal
      },
      background: {
        color: BackgroundColors.DataGridHeader
      },
      borderRadius: {
        topLeft: Amount.Less,
        topRight: Amount.Less
      },
      className: "data-grid-header",
      padding: {
        all: Amount.Less
      },
      children: [header.search && /* @__PURE__ */ jsx$2(Container$8, {
        size: header.search.size,
        children: /* @__PURE__ */ jsx$2(SearchInput, {
          name: "search-input",
          events: {
            input: {
              onValueChange: ({
                value: value2
              }) => {
                setSearchTerm(value2 != null ? value2 : "");
              }
            }
          },
          placeholder: header.search.placeholder,
          size: header.search.size
        })
      }), /* @__PURE__ */ jsx$2(Spacer, {}), header.export && /* @__PURE__ */ jsx$2(Container$8, {
        size: header.export.size,
        children: /* @__PURE__ */ jsx$2(MenuButton, {
          menu: [{
            events: {
              mouse: {
                onClick: () => downloadDataAsFile({
                  data: formatObjectToCSVData({
                    objectType: "EXPENSE"
                  }),
                  fileName: "expenses"
                })
              }
            },
            label: "Export to CSV"
          }],
          label: "Export",
          size: header.export.size
        })
      }), header.create && /* @__PURE__ */ jsx$2(Button$1, {
        events: {
          mouse: {
            onClick: header.create.onClick
          }
        },
        type: ButtonType.Secondary,
        size: header.create.size,
        children: header.create.label
      })]
    }), /* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        overflow: Overflow.ScrollBoth
      },
      borderRadius: !header ? __spreadValues({
        all: Amount.Least
      }, borderRadius) : void 0,
      className: "data-grid-grid",
      events: {
        ui: {
          onScroll: (e2) => e2.preventDefault()
        }
      },
      children: display === "table" ? /* @__PURE__ */ jsxs$1(Fragment, {
        children: [/* @__PURE__ */ jsx$2(Container$8, {
          alignment: {
            horizontal: AlignHorizontal.Left,
            orientation: Orientation.Horizontal
          },
          background: {
            color: BackgroundColors.DataGridColumnHeaders
          },
          className: "data-grid-headers",
          padding: {
            bottom: Amount.Least,
            top: Amount.Least
          },
          children: columns.map((column, key) => {
            var _a3, _b2, _c2, _d, _e2;
            return /* @__PURE__ */ jsx$2(Container$8, {
              alignment: {
                horizontal: column.align,
                orientation: Orientation.Horizontal,
                vertical: AlignVertical.Center
              },
              background: {
                color: BackgroundColors.DataGridColumnHeaders
              },
              border: key !== columns.length - 1 ? {
                right: {
                  color: BorderColors.Default,
                  style: BorderStyle.Solid,
                  width: 1
                }
              } : void 0,
              borderRadius: !header ? {
                topLeft: header ? 0 : Amount.Least,
                topRight: header ? 0 : Amount.Least
              } : void 0,
              className: "data-grid-header-cell",
              padding: {
                left: Amount.Default,
                right: Amount.Default
              },
              size: {
                maxWidth: (_b2 = (_a3 = column.size) == null ? void 0 : _a3.maxWidth) != null ? _b2 : MAX_COLUMN_WIDTH,
                minWidth: (_d = (_c2 = column.size) == null ? void 0 : _c2.minWidth) != null ? _d : MIN_COLUMN_WIDTH,
                width: (_e2 = column.size) == null ? void 0 : _e2.width
              },
              children: /* @__PURE__ */ jsx$2(Label, {
                alignment: {
                  horizontal: column.align,
                  vertical: AlignVertical.Center
                },
                lineHeight: Sizes.Large,
                textColor: TextColors.DataGridColumnHeaders,
                textSize: TextSize.Smaller,
                children: column.label
              })
            }, key);
          })
        }), /* @__PURE__ */ jsx$2(Container$8, {
          background: {
            color: BackgroundColors.DataGridRow
          },
          borderRadius: {
            bottomLeft: Amount.Least,
            bottomRight: Amount.Least
          },
          className: "data-grid-rows",
          children: data2 && data2.map((row, key) => {
            return /* @__PURE__ */ jsx$2(Container$8, {
              alignment: {
                orientation: Orientation.Horizontal
              },
              background: {
                color: BackgroundColors.DataGridCell
              },
              className: "data-grid-row",
              cursor: Cursor.Pointer,
              events: {
                mouse: {
                  onClick: () => {
                    if (onItemClick)
                      onItemClick(row);
                  }
                }
              },
              padding: {
                all: Amount.Least
              },
              states: {
                hovered: {
                  background: {
                    color: BackgroundColors.Primary
                  }
                }
              },
              children: columns.map((column, columnKey) => {
                var _a3, _b2, _c2, _d, _e2;
                return /* @__PURE__ */ jsx$2(DataGridCell, {
                  alignment: {
                    horizontal: column.align,
                    orientation: Orientation.Horizontal,
                    vertical: AlignVertical.Center
                  },
                  fieldName: column.field,
                  lineHeight: Sizes.Large,
                  lineWrap: true,
                  model,
                  textColor: hoveredRow === key ? TextColors.PrimaryContrast : TextColors.DataGridCell,
                  type: column.type,
                  value: fetchFromObject(row, column.field),
                  size: {
                    maxWidth: (_b2 = (_a3 = column.size) == null ? void 0 : _a3.maxWidth) != null ? _b2 : MAX_COLUMN_WIDTH,
                    minWidth: (_d = (_c2 = column.size) == null ? void 0 : _c2.minWidth) != null ? _d : MIN_COLUMN_WIDTH,
                    width: (_e2 = column.size) == null ? void 0 : _e2.width
                  }
                });
              })
            }, key);
          })
        })]
      }) : /* @__PURE__ */ jsx$2(Container$8, {
        children: !((_c = states.state) == null ? void 0 : _c.loading) && data2 && data2.length === 0 ? /* @__PURE__ */ jsx$2(NoResults, {
          as: Container$8,
          children: /* @__PURE__ */ jsx$2(Label, {
            children: "No results"
          })
        }) : data2 && data2.map((row, key) => {
          if (template && template.card) {
            return createElement$1(template.card, {
              key,
              events: {
                mouse: {
                  onClick: () => {
                    if (onItemClick)
                      onItemClick(row);
                  }
                }
              },
              margin: {
                bottom: Amount.Default
              },
              row
            });
          } else {
            return /* @__PURE__ */ jsx$2(Fragment, {
              children: "Need a card template here"
            });
          }
        })
      })
    })]
  }));
});
const NoResults = styled.div.withConfig({
  displayName: "NoResults",
  componentId: "sc-s798s5-0"
})(["color:#9b9b9b;font-size:13px;font-weight:500;padding:50px 0;text-align:center;"]);
const BooleanLabel = memo((_Gb) => {
  var _Hb = _Gb, {
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _Hb, props = __objRest(_Hb, [
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsxs$1(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: [/* @__PURE__ */ jsx$2(Icon, {
      color: value2 ? Colors.Primary : Colors.Error,
      name: value2 ? BasicIcons.Checkmark2 : BasicIcons.Close
    }), value2]
  }));
});
const ColorLabel = memo((_Ib) => {
  var _Jb = _Ib, {
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _Jb, props = __objRest(_Jb, [
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: value2
  }));
});
const EmailAddressLabel = memo((_Kb) => {
  var _Lb = _Kb, {
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _Lb, props = __objRest(_Lb, [
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: value2
  }));
});
const PhoneNumberLabel = memo((_Mb) => {
  var _Nb = _Mb, {
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _Nb, props = __objRest(_Nb, [
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: value2
  }));
});
const ProgressLabel = memo((_Ob) => {
  var _Pb = _Ob, {
    color,
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _Pb, props = __objRest(_Pb, [
    "color",
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  const spent = value2[1];
  const total = value2[2];
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: /* @__PURE__ */ jsx$2(ProgressMeter, {
      amount: spent,
      background: {
        color
      },
      total
    })
  }));
});
const CountryLabel = memo((_Qb) => {
  var _Rb = _Qb, {
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _Rb, props = __objRest(_Rb, [
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: value2
  }));
});
const LanguageLabel = memo((_Sb) => {
  var _Tb = _Sb, {
    icon: icon2,
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = _Tb, props = __objRest(_Tb, [
    "icon",
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    icon: icon2,
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: value2
  }));
});
const PersonLabel = memo((_Ub) => {
  var _Vb = _Ub, {
    image,
    name: name2,
    textSize = TextSize.Large
  } = _Vb, props = __objRest(_Vb, [
    "image",
    "name",
    "textSize"
  ]);
  return /* @__PURE__ */ jsxs$1(Container$8, {
    alignment: {
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    },
    children: [/* @__PURE__ */ jsx$2(Image, {
      borderRadius: {
        all: Amount.All
      },
      path: image == null ? void 0 : image.path,
      url: image == null ? void 0 : image.url
    }), /* @__PURE__ */ jsx$2(Label, {
      textWeight: TextWeight.More,
      textSize,
      children: name2
    })]
  });
});
const UserLabel = memo(({
  events = {},
  className = "",
  to,
  id: id2,
  menu = {},
  messageIcon = {
    name: BasicIcons.BillEnvelope
  },
  name: name2,
  image,
  textSize = TextSize.Default
}) => {
  return /* @__PURE__ */ jsxs$1(NavigationLink, {
    alignment: {
      orientation: Orientation.Horizontal
    },
    borderRadius: {
      all: Amount.All
    },
    className: `${className} user-label`,
    to: to != null ? to : `/people/${id2}`,
    states: {
      active: {
        background: {
          color: BackgroundColors.Primary,
          opacity: 100
        }
      },
      hovered: {
        background: {
          color: BackgroundColors.Primary,
          opacity: 90
        }
      }
    },
    style: {
      position: "relative",
      zIndex: 5
    },
    children: [/* @__PURE__ */ jsx$2(PersonLabel, {
      name: name2,
      image,
      textSize
    }), messageIcon && /* @__PURE__ */ jsx$2(Icon, __spreadValues({}, messageIcon)), menu && /* @__PURE__ */ jsx$2(MoreMenu, {
      menu: [{
        label: "Send message",
        events: {
          mouse: {
            onClick: () => {
              console.log("sendEmail");
            }
          }
        }
      }, {
        label: "View Profile",
        to: `/people/${id2}`
      }]
    })]
  });
});
const MarkdownEditor = memo((_Wb) => {
  var props = __objRest(_Wb, []);
  return /* @__PURE__ */ jsx$2("div", {});
});
const ObjectPropertiesView = memo((_Xb) => {
  var _Yb = _Xb, {
    background = {},
    borderRadius = {},
    className = "",
    lineHeight = Sizes.Default,
    properties: properties2,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default
  } = _Yb, props = __objRest(_Yb, [
    "background",
    "borderRadius",
    "className",
    "lineHeight",
    "properties",
    "textColor",
    "textSize"
  ]);
  const getTypeColors = (type) => {
    switch (type) {
      case "string":
        return {
          backgroundColor: BackgroundColors.Info,
          textColor: TextColors.White
        };
      case "number":
        return {
          backgroundColor: BackgroundColors.Dark,
          textColor: TextColors.Light
        };
      case "boolean":
        return {
          backgroundColor: BackgroundColors.Default,
          textColor: TextColors.Darker
        };
      case "object":
        return {
          backgroundColor: BackgroundColors.Info,
          textColor: TextColors.Info
        };
      case "ReactElement":
        return {
          backgroundColor: BackgroundColors.Warning,
          textColor: TextColors.Darker
        };
      default:
        return {
          backgroundColor: BackgroundColors.Info,
          textColor: TextColors.Info
        };
    }
  };
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.Lightest
    }, background),
    border: {
      all: {
        color: BorderColors.Lighter
      }
    },
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    className: `${className} object-editor`,
    shadow: DepthShadow.High
  }, props), {
    children: /* @__PURE__ */ jsx$2(Container$8, {
      borderRadius: __spreadValues({
        all: Amount.Least,
        topLeft: Amount.None,
        topRight: Amount.None
      }, borderRadius),
      size: {
        fill: Fill.Horizontal
      },
      children: Object.keys(properties2).map((property, key) => {
        var _a2, _b;
        return /* @__PURE__ */ jsxs$1(Container$8, {
          alignment: {
            orientation: Orientation.Horizontal
          },
          border: {
            bottom: {
              color: BorderColors.Lighter
            }
          },
          size: {
            fill: Fill.Horizontal
          },
          children: [/* @__PURE__ */ jsx$2(Container$8, {
            border: {
              right: {
                color: BorderColors.Lighter
              }
            },
            padding: {
              left: Amount.Less,
              right: Amount.Less
            },
            size: {
              width: 140
            },
            children: /* @__PURE__ */ jsx$2(Label, {
              lineHeight: Sizes.Large,
              children: property
            })
          }), /* @__PURE__ */ jsxs$1(Container$8, {
            alignment: {
              orientation: Orientation.Horizontal,
              vertical: AlignVertical.Center
            },
            padding: {
              left: Amount.Less,
              right: Amount.Less
            },
            children: [((_a2 = properties2[property]) == null ? void 0 : _a2.required) && /* @__PURE__ */ jsx$2(Label, {
              background: {
                color: BackgroundColors.Error
              },
              borderRadius: {
                all: 3
              },
              lineHeight: Sizes.Small,
              margin: {
                right: Amount.Less
              },
              padding: {
                left: Amount.Less,
                right: Amount.Less
              },
              size: {
                height: Sizes.Small
              },
              textColor: TextColors.White,
              textSize: TextSize.Small,
              children: "Required"
            }), (_b = properties2[property]) == null ? void 0 : _b.types.map((type, index) => {
              const typeColors = getTypeColors(type);
              return /* @__PURE__ */ jsx$2(Label, {
                background: {
                  color: typeColors.backgroundColor
                },
                borderRadius: {
                  all: 3
                },
                lineHeight: Sizes.Small,
                margin: {
                  right: Amount.Less
                },
                padding: {
                  left: Amount.Less,
                  right: Amount.Less
                },
                size: {
                  height: Sizes.Small
                },
                textColor: typeColors.textColor,
                textSize: TextSize.Small,
                children: type
              }, index);
            })]
          })]
        }, key);
      })
    })
  }));
});
const StaticTypeLabel = memo((_Zb) => {
  var __b = _Zb, {
    lineHeight = Sizes.Default,
    textColor = TextColors.Lighter,
    textSize = TextSize.Default,
    value: value2
  } = __b, props = __objRest(__b, [
    "lineHeight",
    "textColor",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    lineHeight,
    textColor,
    textSize
  }, props), {
    children: value2
  }));
});
function getActivityLabel(activity) {
  switch (activity) {
    case q$6.Comment:
      return "commented";
    case q$6.Create:
      return "created";
    case q$6.Delete:
      return "deleted";
    case q$6.Edit:
      return "edited";
    case q$6.Invoice:
      return "invoiced";
    case q$6.Message:
      return "messaged";
    case q$6.PageView:
      return "viewed";
    case q$6.Paid:
      return "paid";
    case q$6.Payment:
      return "paid";
    case q$6.Purchase:
      return "purchased";
    case q$6.Referral:
      return "referred";
    case q$6.Renewal:
      return "renewed";
    case q$6.Signup:
      return "signed up";
    case q$6.Subscription:
      return "subscribed";
    case q$6.Upgrade:
      return "upgraded";
    default:
      return activity;
  }
}
const ActivityFeedItem = memo(({
  dateFormat = DateTime.DATE_FULL,
  who,
  when,
  what,
  where
}) => {
  return /* @__PURE__ */ jsxs$1(Container$8, {
    alignment: {
      orientation: Orientation.Horizontal
    },
    className: "activity-item",
    children: [who && /* @__PURE__ */ jsx$2(UserLabel, {
      image: who.image,
      menu: null,
      name: who.name,
      to: who.to
    }), what && /* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal
      },
      margin: {
        left: -2
      },
      children: [/* @__PURE__ */ jsx$2(Label, {
        margin: {
          right: 3
        },
        textSize: TextSize.Default,
        children: getActivityLabel(what.name)
      }), what.to ? /* @__PURE__ */ jsx$2(Link, {
        to: what.to,
        states: {
          hovered: {
            textDecoration: {
              line: TextDecorationLine.Underline
            }
          }
        },
        textDecoration: {
          line: TextDecorationLine.None
        },
        children: what.label
      }) : what.label]
    }), where && /* @__PURE__ */ jsx$2(Label, {
      alignment: {
        horizontal: AlignHorizontal.Center
      },
      margin: {
        left: -2
      },
      textSize: TextSize.Default,
      children: where
    }), /* @__PURE__ */ jsx$2(Label, {
      margin: {
        left: 3
      },
      children: "on"
    }), when && /* @__PURE__ */ jsx$2(DateLabel, {
      format: dateFormat,
      margin: {
        left: 3
      },
      textSize: TextSize.Default,
      value: when
    })]
  });
});
const ActivityFeed = memo((_$b) => {
  var _ac = _$b, {
    activities,
    className = "",
    dateFormat = DateTime.DATE_MED
  } = _ac, props = __objRest(_ac, [
    "activities",
    "className",
    "dateFormat"
  ]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    className: `${className} activity-feed`
  }, props), {
    children: [activities.map((activity, key) => {
      return /* @__PURE__ */ jsxs$1(Container$8, {
        children: [key !== 0 && key !== activities.length && /* @__PURE__ */ jsx$2(Container$8, {
          background: {
            color: BackgroundColors.Lighter
          },
          borderRadius: {
            all: Amount.Default
          },
          margin: {
            bottom: 5,
            top: 5
          },
          size: {
            height: 12,
            width: 5
          },
          style: {
            transform: "translateX(-2px)"
          }
        }), /* @__PURE__ */ jsx$2(ActivityFeedItem, __spreadValues({}, activity))]
      }, key);
    }), /* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Center,
        vertical: AlignVertical.Center
      },
      border: {
        top: {
          color: BorderColors.Light,
          style: BorderStyle.Solid,
          width: 1
        }
      },
      margin: {
        top: Amount.Default
      },
      padding: {
        bottom: Amount.None,
        left: Amount.Default,
        right: Amount.Default,
        top: Amount.Default
      },
      children: /* @__PURE__ */ jsx$2(Button$1, {
        type: ButtonType.Primary,
        children: "Load more"
      })
    })]
  }));
});
const HelperButton = memo(({
  content
}) => {
  const [contentVisible, setContentVisible] = useState(false);
  return /* @__PURE__ */ jsxs$1(Container$4, {
    children: [/* @__PURE__ */ jsx$2(Button, {
      onClick: () => {
      },
      secondary: true,
      onMouseEnter: () => setContentVisible(true),
      onMouseLeave: () => setContentVisible(false),
      children: /* @__PURE__ */ jsx$2(Icon, {
        name: BasicIcons.HelpBubble
      })
    }), /* @__PURE__ */ jsx$2(Content$1, {
      visible: contentVisible,
      children: content
    })]
  });
});
const Container$4 = styled.div.withConfig({
  displayName: "Container",
  componentId: "sc-4iqdq5-0"
})(["position:relative;&:hover{z-index:50000;}"]);
const Button = styled.button.withConfig({
  displayName: "Button",
  componentId: "sc-4iqdq5-1"
})(["background:transparent;border:none;line-height:22px;svg{fill:rgba(162,192,80,1);height:24px;vertical-align:middle;width:24px;}"]);
const Content$1 = styled.div.withConfig({
  displayName: "Content",
  componentId: "sc-4iqdq5-2"
})(["background:white;border:10px solid rgba(203,226,90,1);border-radius:25px;bottom:30px;box-shadow:0 15px 25px rgba(65,146,64,0.3);color:rgba(120,120,120,1);font-size:14px;opacity:0;padding:15px;pointer-events:none;position:absolute;transition:all 0.2s ease-in;transform:translateX(-100px);width:220px;b{font-weight:700;}", ""], (props) => props.visible && css$2(["opacity:1;pointer-events:all;"]));
const InputHelper = memo(() => {
  return /* @__PURE__ */ jsx$2(Fragment, {});
});
const Checkbox = memo((_bc) => {
  var _cc = _bc, {
    className = "",
    defaultValue,
    events = {},
    size = {},
    validation = {}
  } = _cc, props = __objRest(_cc, [
    "className",
    "defaultValue",
    "events",
    "size",
    "validation"
  ]);
  const [focused, setFocused] = useState(false);
  const [problems, setProblems] = useState([]);
  const [value2, setValue] = useState(defaultValue);
  const valueRef = useRef(value2);
  useEffect(() => {
    var _a2, _b;
    if (validation == null ? void 0 : validation.conditions) {
      const probs = Si$1(value2, validation.conditions);
      setProblems(probs);
      if ((_a2 = events.input) == null ? void 0 : _a2.onValueChange)
        (_b = events.input) == null ? void 0 : _b.onValueChange({
          validation: {
            problems: probs,
            validated: !probs.length
          },
          value: value2
        });
    }
  }, [value2]);
  return /* @__PURE__ */ jsx$2(InputContainer, __spreadProps(__spreadValues({
    alignment: {
      orientation: Orientation.Horizontal,
      horizontal: AlignHorizontal.Center,
      vertical: AlignVertical.Center
    },
    as: "button",
    className: `${className} checkbox`,
    cursor: Cursor.Pointer,
    events: {
      focus: {
        onBlur: () => setFocused(false),
        onFocus: () => setFocused(true)
      },
      mouse: {
        onClick: () => {
          valueRef.current = !valueRef.current;
          setValue(valueRef.current);
        }
      }
    },
    form: "null",
    states: {
      state: {
        error: problems,
        focused
      }
    },
    size: __spreadValues({
      height: Sizes.Default,
      width: Sizes.Default
    }, size)
  }, props), {
    children: /* @__PURE__ */ jsx$2(Container$8, {
      children: /* @__PURE__ */ jsx$2(Icon, {
        color: valueRef.current ? Colors.Success : Colors.White,
        name: BasicIcons.Checkmark2,
        size: __spreadValues({
          height: Sizes.Smaller,
          width: Sizes.Smaller
        }, size)
      })
    })
  }));
});
var colorNamer$1 = { exports: {} };
var chroma$1 = { exports: {} };
(function(module, exports) {
  /**
   * @license
   *
   * chroma.js - JavaScript library for color conversions
   * 
   * Copyright (c) 2011-2017, Gregor Aisch
   * All rights reserved.
   * 
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions are met:
   * 
   * 1. Redistributions of source code must retain the above copyright notice, this
   *    list of conditions and the following disclaimer.
   * 
   * 2. Redistributions in binary form must reproduce the above copyright notice,
   *    this list of conditions and the following disclaimer in the documentation
   *    and/or other materials provided with the distribution.
   * 
   * 3. The name Gregor Aisch may not be used to endorse or promote products
   *    derived from this software without specific prior written permission.
   * 
   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
   * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
   * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
   * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
   * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   *
   */
  (function() {
    var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs2, atan2, bezier, blend, blend_f, brewer, burn, chroma2, clip_rgb, cmyk2rgb, cos, css2rgb, darken, dodge, each, floor2, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log2, luminance_x, m2, max2, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb, slice = [].slice;
    type = function() {
      var classToType, len, name2, o2, ref;
      classToType = {};
      ref = "Boolean Number String Function Array Date RegExp Undefined Null".split(" ");
      for (o2 = 0, len = ref.length; o2 < len; o2++) {
        name2 = ref[o2];
        classToType["[object " + name2 + "]"] = name2.toLowerCase();
      }
      return function(obj) {
        var strType;
        strType = Object.prototype.toString.call(obj);
        return classToType[strType] || "object";
      };
    }();
    limit = function(x, min, max3) {
      if (min == null) {
        min = 0;
      }
      if (max3 == null) {
        max3 = 1;
      }
      if (x < min) {
        x = min;
      }
      if (x > max3) {
        x = max3;
      }
      return x;
    };
    unpack = function(args) {
      if (args.length >= 3) {
        return Array.prototype.slice.call(args);
      } else {
        return args[0];
      }
    };
    clip_rgb = function(rgb) {
      var i2, o2;
      rgb._clipped = false;
      rgb._unclipped = rgb.slice(0);
      for (i2 = o2 = 0; o2 < 3; i2 = ++o2) {
        if (i2 < 3) {
          if (rgb[i2] < 0 || rgb[i2] > 255) {
            rgb._clipped = true;
          }
          if (rgb[i2] < 0) {
            rgb[i2] = 0;
          }
          if (rgb[i2] > 255) {
            rgb[i2] = 255;
          }
        } else if (i2 === 3) {
          if (rgb[i2] < 0) {
            rgb[i2] = 0;
          }
          if (rgb[i2] > 1) {
            rgb[i2] = 1;
          }
        }
      }
      if (!rgb._clipped) {
        delete rgb._unclipped;
      }
      return rgb;
    };
    PI = Math.PI, round = Math.round, cos = Math.cos, floor2 = Math.floor, pow = Math.pow, log2 = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max2 = Math.max, abs2 = Math.abs;
    TWOPI = PI * 2;
    PITHIRD = PI / 3;
    DEG2RAD = PI / 180;
    RAD2DEG = 180 / PI;
    chroma2 = function() {
      if (arguments[0] instanceof Color) {
        return arguments[0];
      }
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, arguments, function() {
      });
    };
    chroma2["default"] = chroma2;
    _interpolators = [];
    if (module !== null && module.exports != null) {
      module.exports = chroma2;
    }
    {
      root = exports !== null ? exports : this;
      root.chroma = chroma2;
    }
    chroma2.version = "1.4.1";
    _input = {};
    _guess_formats = [];
    _guess_formats_sorted = false;
    Color = function() {
      function Color2() {
        var arg, args, chk, len, len1, me2, mode, o2, w2;
        me2 = this;
        args = [];
        for (o2 = 0, len = arguments.length; o2 < len; o2++) {
          arg = arguments[o2];
          if (arg != null) {
            args.push(arg);
          }
        }
        if (args.length > 1) {
          mode = args[args.length - 1];
        }
        if (_input[mode] != null) {
          me2._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));
        } else {
          if (!_guess_formats_sorted) {
            _guess_formats = _guess_formats.sort(function(a, b2) {
              return b2.p - a.p;
            });
            _guess_formats_sorted = true;
          }
          for (w2 = 0, len1 = _guess_formats.length; w2 < len1; w2++) {
            chk = _guess_formats[w2];
            mode = chk.test.apply(chk, args);
            if (mode) {
              break;
            }
          }
          if (mode) {
            me2._rgb = clip_rgb(_input[mode].apply(_input, args));
          }
        }
        if (me2._rgb == null) {
          console.warn("unknown format: " + args);
        }
        if (me2._rgb == null) {
          me2._rgb = [0, 0, 0];
        }
        if (me2._rgb.length === 3) {
          me2._rgb.push(1);
        }
      }
      Color2.prototype.toString = function() {
        return this.hex();
      };
      return Color2;
    }();
    chroma2._input = _input;
    /**
    	ColorBrewer colors for chroma.js
    
    	Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The 
    	Pennsylvania State University.
    
    	Licensed under the Apache License, Version 2.0 (the "License"); 
    	you may not use this file except in compliance with the License.
    	You may obtain a copy of the License at	
    	http://www.apache.org/licenses/LICENSE-2.0
    
    	Unless required by applicable law or agreed to in writing, software distributed
    	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
    	CONDITIONS OF ANY KIND, either express or implied. See the License for the
    	specific language governing permissions and limitations under the License.
    
        @preserve
     */
    chroma2.brewer = brewer = {
      OrRd: ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#b30000", "#7f0000"],
      PuBu: ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#045a8d", "#023858"],
      BuPu: ["#f7fcfd", "#e0ecf4", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#810f7c", "#4d004b"],
      Oranges: ["#fff5eb", "#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#a63603", "#7f2704"],
      BuGn: ["#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#006d2c", "#00441b"],
      YlOrBr: ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#993404", "#662506"],
      YlGn: ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#006837", "#004529"],
      Reds: ["#fff5f0", "#fee0d2", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#a50f15", "#67000d"],
      RdPu: ["#fff7f3", "#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177", "#49006a"],
      Greens: ["#f7fcf5", "#e5f5e0", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#006d2c", "#00441b"],
      YlGnBu: ["#ffffd9", "#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#253494", "#081d58"],
      Purples: ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#54278f", "#3f007d"],
      GnBu: ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#0868ac", "#084081"],
      Greys: ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525", "#000000"],
      YlOrRd: ["#ffffcc", "#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#bd0026", "#800026"],
      PuRd: ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#980043", "#67001f"],
      Blues: ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"],
      PuBuGn: ["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016c59", "#014636"],
      Viridis: ["#440154", "#482777", "#3f4a8a", "#31678e", "#26838f", "#1f9d8a", "#6cce5a", "#b6de2b", "#fee825"],
      Spectral: ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"],
      RdYlGn: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", "#006837"],
      RdBu: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"],
      PiYG: ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"],
      PRGn: ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", "#00441b"],
      RdYlBu: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", "#313695"],
      BrBG: ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e", "#003c30"],
      RdGy: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"],
      PuOr: ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788", "#2d004b"],
      Set2: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3"],
      Accent: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17", "#666666"],
      Set1: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"],
      Set3: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5", "#ffed6f"],
      Dark2: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#666666"],
      Paired: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99", "#b15928"],
      Pastel2: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc", "#cccccc"],
      Pastel1: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2"]
    };
    (function() {
      var key, results;
      results = [];
      for (key in brewer) {
        results.push(brewer[key.toLowerCase()] = brewer[key]);
      }
      return results;
    })();
    w3cx11 = {
      aliceblue: "#f0f8ff",
      antiquewhite: "#faebd7",
      aqua: "#00ffff",
      aquamarine: "#7fffd4",
      azure: "#f0ffff",
      beige: "#f5f5dc",
      bisque: "#ffe4c4",
      black: "#000000",
      blanchedalmond: "#ffebcd",
      blue: "#0000ff",
      blueviolet: "#8a2be2",
      brown: "#a52a2a",
      burlywood: "#deb887",
      cadetblue: "#5f9ea0",
      chartreuse: "#7fff00",
      chocolate: "#d2691e",
      coral: "#ff7f50",
      cornflower: "#6495ed",
      cornflowerblue: "#6495ed",
      cornsilk: "#fff8dc",
      crimson: "#dc143c",
      cyan: "#00ffff",
      darkblue: "#00008b",
      darkcyan: "#008b8b",
      darkgoldenrod: "#b8860b",
      darkgray: "#a9a9a9",
      darkgreen: "#006400",
      darkgrey: "#a9a9a9",
      darkkhaki: "#bdb76b",
      darkmagenta: "#8b008b",
      darkolivegreen: "#556b2f",
      darkorange: "#ff8c00",
      darkorchid: "#9932cc",
      darkred: "#8b0000",
      darksalmon: "#e9967a",
      darkseagreen: "#8fbc8f",
      darkslateblue: "#483d8b",
      darkslategray: "#2f4f4f",
      darkslategrey: "#2f4f4f",
      darkturquoise: "#00ced1",
      darkviolet: "#9400d3",
      deeppink: "#ff1493",
      deepskyblue: "#00bfff",
      dimgray: "#696969",
      dimgrey: "#696969",
      dodgerblue: "#1e90ff",
      firebrick: "#b22222",
      floralwhite: "#fffaf0",
      forestgreen: "#228b22",
      fuchsia: "#ff00ff",
      gainsboro: "#dcdcdc",
      ghostwhite: "#f8f8ff",
      gold: "#ffd700",
      goldenrod: "#daa520",
      gray: "#808080",
      green: "#008000",
      greenyellow: "#adff2f",
      grey: "#808080",
      honeydew: "#f0fff0",
      hotpink: "#ff69b4",
      indianred: "#cd5c5c",
      indigo: "#4b0082",
      ivory: "#fffff0",
      khaki: "#f0e68c",
      laserlemon: "#ffff54",
      lavender: "#e6e6fa",
      lavenderblush: "#fff0f5",
      lawngreen: "#7cfc00",
      lemonchiffon: "#fffacd",
      lightblue: "#add8e6",
      lightcoral: "#f08080",
      lightcyan: "#e0ffff",
      lightgoldenrod: "#fafad2",
      lightgoldenrodyellow: "#fafad2",
      lightgray: "#d3d3d3",
      lightgreen: "#90ee90",
      lightgrey: "#d3d3d3",
      lightpink: "#ffb6c1",
      lightsalmon: "#ffa07a",
      lightseagreen: "#20b2aa",
      lightskyblue: "#87cefa",
      lightslategray: "#778899",
      lightslategrey: "#778899",
      lightsteelblue: "#b0c4de",
      lightyellow: "#ffffe0",
      lime: "#00ff00",
      limegreen: "#32cd32",
      linen: "#faf0e6",
      magenta: "#ff00ff",
      maroon: "#800000",
      maroon2: "#7f0000",
      maroon3: "#b03060",
      mediumaquamarine: "#66cdaa",
      mediumblue: "#0000cd",
      mediumorchid: "#ba55d3",
      mediumpurple: "#9370db",
      mediumseagreen: "#3cb371",
      mediumslateblue: "#7b68ee",
      mediumspringgreen: "#00fa9a",
      mediumturquoise: "#48d1cc",
      mediumvioletred: "#c71585",
      midnightblue: "#191970",
      mintcream: "#f5fffa",
      mistyrose: "#ffe4e1",
      moccasin: "#ffe4b5",
      navajowhite: "#ffdead",
      navy: "#000080",
      oldlace: "#fdf5e6",
      olive: "#808000",
      olivedrab: "#6b8e23",
      orange: "#ffa500",
      orangered: "#ff4500",
      orchid: "#da70d6",
      palegoldenrod: "#eee8aa",
      palegreen: "#98fb98",
      paleturquoise: "#afeeee",
      palevioletred: "#db7093",
      papayawhip: "#ffefd5",
      peachpuff: "#ffdab9",
      peru: "#cd853f",
      pink: "#ffc0cb",
      plum: "#dda0dd",
      powderblue: "#b0e0e6",
      purple: "#800080",
      purple2: "#7f007f",
      purple3: "#a020f0",
      rebeccapurple: "#663399",
      red: "#ff0000",
      rosybrown: "#bc8f8f",
      royalblue: "#4169e1",
      saddlebrown: "#8b4513",
      salmon: "#fa8072",
      sandybrown: "#f4a460",
      seagreen: "#2e8b57",
      seashell: "#fff5ee",
      sienna: "#a0522d",
      silver: "#c0c0c0",
      skyblue: "#87ceeb",
      slateblue: "#6a5acd",
      slategray: "#708090",
      slategrey: "#708090",
      snow: "#fffafa",
      springgreen: "#00ff7f",
      steelblue: "#4682b4",
      tan: "#d2b48c",
      teal: "#008080",
      thistle: "#d8bfd8",
      tomato: "#ff6347",
      turquoise: "#40e0d0",
      violet: "#ee82ee",
      wheat: "#f5deb3",
      white: "#ffffff",
      whitesmoke: "#f5f5f5",
      yellow: "#ffff00",
      yellowgreen: "#9acd32"
    };
    chroma2.colors = w3cx11;
    lab2rgb = function() {
      var a, args, b2, g2, l2, r2, x, y2, z2;
      args = unpack(arguments);
      l2 = args[0], a = args[1], b2 = args[2];
      y2 = (l2 + 16) / 116;
      x = isNaN(a) ? y2 : y2 + a / 500;
      z2 = isNaN(b2) ? y2 : y2 - b2 / 200;
      y2 = LAB_CONSTANTS.Yn * lab_xyz(y2);
      x = LAB_CONSTANTS.Xn * lab_xyz(x);
      z2 = LAB_CONSTANTS.Zn * lab_xyz(z2);
      r2 = xyz_rgb(3.2404542 * x - 1.5371385 * y2 - 0.4985314 * z2);
      g2 = xyz_rgb(-0.969266 * x + 1.8760108 * y2 + 0.041556 * z2);
      b2 = xyz_rgb(0.0556434 * x - 0.2040259 * y2 + 1.0572252 * z2);
      return [r2, g2, b2, args.length > 3 ? args[3] : 1];
    };
    xyz_rgb = function(r2) {
      return 255 * (r2 <= 304e-5 ? 12.92 * r2 : 1.055 * pow(r2, 1 / 2.4) - 0.055);
    };
    lab_xyz = function(t2) {
      if (t2 > LAB_CONSTANTS.t1) {
        return t2 * t2 * t2;
      } else {
        return LAB_CONSTANTS.t2 * (t2 - LAB_CONSTANTS.t0);
      }
    };
    LAB_CONSTANTS = {
      Kn: 18,
      Xn: 0.95047,
      Yn: 1,
      Zn: 1.08883,
      t0: 0.137931034,
      t1: 0.206896552,
      t2: 0.12841855,
      t3: 8856452e-9
    };
    rgb2lab = function() {
      var b2, g2, r2, ref, ref1, x, y2, z2;
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      ref1 = rgb2xyz(r2, g2, b2), x = ref1[0], y2 = ref1[1], z2 = ref1[2];
      return [116 * y2 - 16, 500 * (x - y2), 200 * (y2 - z2)];
    };
    rgb_xyz = function(r2) {
      if ((r2 /= 255) <= 0.04045) {
        return r2 / 12.92;
      } else {
        return pow((r2 + 0.055) / 1.055, 2.4);
      }
    };
    xyz_lab = function(t2) {
      if (t2 > LAB_CONSTANTS.t3) {
        return pow(t2, 1 / 3);
      } else {
        return t2 / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;
      }
    };
    rgb2xyz = function() {
      var b2, g2, r2, ref, x, y2, z2;
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      r2 = rgb_xyz(r2);
      g2 = rgb_xyz(g2);
      b2 = rgb_xyz(b2);
      x = xyz_lab((0.4124564 * r2 + 0.3575761 * g2 + 0.1804375 * b2) / LAB_CONSTANTS.Xn);
      y2 = xyz_lab((0.2126729 * r2 + 0.7151522 * g2 + 0.072175 * b2) / LAB_CONSTANTS.Yn);
      z2 = xyz_lab((0.0193339 * r2 + 0.119192 * g2 + 0.9503041 * b2) / LAB_CONSTANTS.Zn);
      return [x, y2, z2];
    };
    chroma2.lab = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["lab"]), function() {
      });
    };
    _input.lab = lab2rgb;
    Color.prototype.lab = function() {
      return rgb2lab(this._rgb);
    };
    bezier = function(colors) {
      var I2, I0, I1, c2, lab0, lab1, lab2, lab3, ref, ref1, ref2;
      colors = function() {
        var len, o2, results;
        results = [];
        for (o2 = 0, len = colors.length; o2 < len; o2++) {
          c2 = colors[o2];
          results.push(chroma2(c2));
        }
        return results;
      }();
      if (colors.length === 2) {
        ref = function() {
          var len, o2, results;
          results = [];
          for (o2 = 0, len = colors.length; o2 < len; o2++) {
            c2 = colors[o2];
            results.push(c2.lab());
          }
          return results;
        }(), lab0 = ref[0], lab1 = ref[1];
        I2 = function(t2) {
          var i2, lab;
          lab = function() {
            var o2, results;
            results = [];
            for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
              results.push(lab0[i2] + t2 * (lab1[i2] - lab0[i2]));
            }
            return results;
          }();
          return chroma2.lab.apply(chroma2, lab);
        };
      } else if (colors.length === 3) {
        ref1 = function() {
          var len, o2, results;
          results = [];
          for (o2 = 0, len = colors.length; o2 < len; o2++) {
            c2 = colors[o2];
            results.push(c2.lab());
          }
          return results;
        }(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];
        I2 = function(t2) {
          var i2, lab;
          lab = function() {
            var o2, results;
            results = [];
            for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
              results.push((1 - t2) * (1 - t2) * lab0[i2] + 2 * (1 - t2) * t2 * lab1[i2] + t2 * t2 * lab2[i2]);
            }
            return results;
          }();
          return chroma2.lab.apply(chroma2, lab);
        };
      } else if (colors.length === 4) {
        ref2 = function() {
          var len, o2, results;
          results = [];
          for (o2 = 0, len = colors.length; o2 < len; o2++) {
            c2 = colors[o2];
            results.push(c2.lab());
          }
          return results;
        }(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];
        I2 = function(t2) {
          var i2, lab;
          lab = function() {
            var o2, results;
            results = [];
            for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
              results.push((1 - t2) * (1 - t2) * (1 - t2) * lab0[i2] + 3 * (1 - t2) * (1 - t2) * t2 * lab1[i2] + 3 * (1 - t2) * t2 * t2 * lab2[i2] + t2 * t2 * t2 * lab3[i2]);
            }
            return results;
          }();
          return chroma2.lab.apply(chroma2, lab);
        };
      } else if (colors.length === 5) {
        I0 = bezier(colors.slice(0, 3));
        I1 = bezier(colors.slice(2, 5));
        I2 = function(t2) {
          if (t2 < 0.5) {
            return I0(t2 * 2);
          } else {
            return I1((t2 - 0.5) * 2);
          }
        };
      }
      return I2;
    };
    chroma2.bezier = function(colors) {
      var f2;
      f2 = bezier(colors);
      f2.scale = function() {
        return chroma2.scale(f2);
      };
      return f2;
    };
    chroma2.cubehelix = function(start, rotations, hue, gamma, lightness) {
      var dh, dl, f2;
      if (start == null) {
        start = 300;
      }
      if (rotations == null) {
        rotations = -1.5;
      }
      if (hue == null) {
        hue = 1;
      }
      if (gamma == null) {
        gamma = 1;
      }
      if (lightness == null) {
        lightness = [0, 1];
      }
      dh = 0;
      if (type(lightness) === "array") {
        dl = lightness[1] - lightness[0];
      } else {
        dl = 0;
        lightness = [lightness, lightness];
      }
      f2 = function(fract) {
        var a, amp2, b2, cos_a, g2, h2, l2, r2, sin_a;
        a = TWOPI * ((start + 120) / 360 + rotations * fract);
        l2 = pow(lightness[0] + dl * fract, gamma);
        h2 = dh !== 0 ? hue[0] + fract * dh : hue;
        amp2 = h2 * l2 * (1 - l2) / 2;
        cos_a = cos(a);
        sin_a = sin(a);
        r2 = l2 + amp2 * (-0.14861 * cos_a + 1.78277 * sin_a);
        g2 = l2 + amp2 * (-0.29227 * cos_a - 0.90649 * sin_a);
        b2 = l2 + amp2 * (1.97294 * cos_a);
        return chroma2(clip_rgb([r2 * 255, g2 * 255, b2 * 255, 1]));
      };
      f2.start = function(s2) {
        if (s2 == null) {
          return start;
        }
        start = s2;
        return f2;
      };
      f2.rotations = function(r2) {
        if (r2 == null) {
          return rotations;
        }
        rotations = r2;
        return f2;
      };
      f2.gamma = function(g2) {
        if (g2 == null) {
          return gamma;
        }
        gamma = g2;
        return f2;
      };
      f2.hue = function(h2) {
        if (h2 == null) {
          return hue;
        }
        hue = h2;
        if (type(hue) === "array") {
          dh = hue[1] - hue[0];
          if (dh === 0) {
            hue = hue[1];
          }
        } else {
          dh = 0;
        }
        return f2;
      };
      f2.lightness = function(h2) {
        if (h2 == null) {
          return lightness;
        }
        if (type(h2) === "array") {
          lightness = h2;
          dl = h2[1] - h2[0];
        } else {
          lightness = [h2, h2];
          dl = 0;
        }
        return f2;
      };
      f2.scale = function() {
        return chroma2.scale(f2);
      };
      f2.hue(hue);
      return f2;
    };
    chroma2.random = function() {
      var code, digits, o2;
      digits = "0123456789abcdef";
      code = "#";
      for (o2 = 0; o2 < 6; ++o2) {
        code += digits.charAt(floor2(Math.random() * 16));
      }
      return new Color(code);
    };
    _interpolators = [];
    interpolate = function(col1, col2, f2, m3) {
      var interpol, len, o2, res;
      if (f2 == null) {
        f2 = 0.5;
      }
      if (m3 == null) {
        m3 = "rgb";
      }
      if (type(col1) !== "object") {
        col1 = chroma2(col1);
      }
      if (type(col2) !== "object") {
        col2 = chroma2(col2);
      }
      for (o2 = 0, len = _interpolators.length; o2 < len; o2++) {
        interpol = _interpolators[o2];
        if (m3 === interpol[0]) {
          res = interpol[1](col1, col2, f2, m3);
          break;
        }
      }
      if (res == null) {
        throw "color mode " + m3 + " is not supported";
      }
      return res.alpha(col1.alpha() + f2 * (col2.alpha() - col1.alpha()));
    };
    chroma2.interpolate = interpolate;
    Color.prototype.interpolate = function(col2, f2, m3) {
      return interpolate(this, col2, f2, m3);
    };
    chroma2.mix = interpolate;
    Color.prototype.mix = Color.prototype.interpolate;
    _input.rgb = function() {
      var k2, ref, results, v2;
      ref = unpack(arguments);
      results = [];
      for (k2 in ref) {
        v2 = ref[k2];
        results.push(v2);
      }
      return results;
    };
    chroma2.rgb = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["rgb"]), function() {
      });
    };
    Color.prototype.rgb = function(round2) {
      if (round2 == null) {
        round2 = true;
      }
      if (round2) {
        return this._rgb.map(Math.round).slice(0, 3);
      } else {
        return this._rgb.slice(0, 3);
      }
    };
    Color.prototype.rgba = function(round2) {
      if (round2 == null) {
        round2 = true;
      }
      if (!round2) {
        return this._rgb.slice(0);
      }
      return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];
    };
    _guess_formats.push({
      p: 3,
      test: function(n2) {
        var a;
        a = unpack(arguments);
        if (type(a) === "array" && a.length === 3) {
          return "rgb";
        }
        if (a.length === 4 && type(a[3]) === "number" && a[3] >= 0 && a[3] <= 1) {
          return "rgb";
        }
      }
    });
    _input.lrgb = _input.rgb;
    interpolate_lrgb = function(col1, col2, f2, m3) {
      var xyz0, xyz1;
      xyz0 = col1._rgb;
      xyz1 = col2._rgb;
      return new Color(sqrt(pow(xyz0[0], 2) * (1 - f2) + pow(xyz1[0], 2) * f2), sqrt(pow(xyz0[1], 2) * (1 - f2) + pow(xyz1[1], 2) * f2), sqrt(pow(xyz0[2], 2) * (1 - f2) + pow(xyz1[2], 2) * f2), m3);
    };
    _average_lrgb = function(colors) {
      var col, f2, len, o2, rgb, xyz;
      f2 = 1 / colors.length;
      xyz = [0, 0, 0, 0];
      for (o2 = 0, len = colors.length; o2 < len; o2++) {
        col = colors[o2];
        rgb = col._rgb;
        xyz[0] += pow(rgb[0], 2) * f2;
        xyz[1] += pow(rgb[1], 2) * f2;
        xyz[2] += pow(rgb[2], 2) * f2;
        xyz[3] += rgb[3] * f2;
      }
      xyz[0] = sqrt(xyz[0]);
      xyz[1] = sqrt(xyz[1]);
      xyz[2] = sqrt(xyz[2]);
      if (xyz[3] > 1) {
        xyz[3] = 1;
      }
      return new Color(clip_rgb(xyz));
    };
    _interpolators.push(["lrgb", interpolate_lrgb]);
    chroma2.average = function(colors, mode) {
      var A2, alpha, c2, cnt, dx, dy, first, i2, l2, len, o2, xyz, xyz2;
      if (mode == null) {
        mode = "rgb";
      }
      l2 = colors.length;
      colors = colors.map(function(c3) {
        return chroma2(c3);
      });
      first = colors.splice(0, 1)[0];
      if (mode === "lrgb") {
        return _average_lrgb(colors);
      }
      xyz = first.get(mode);
      cnt = [];
      dx = 0;
      dy = 0;
      for (i2 in xyz) {
        xyz[i2] = xyz[i2] || 0;
        cnt.push(isNaN(xyz[i2]) ? 0 : 1);
        if (mode.charAt(i2) === "h" && !isNaN(xyz[i2])) {
          A2 = xyz[i2] / 180 * PI;
          dx += cos(A2);
          dy += sin(A2);
        }
      }
      alpha = first.alpha();
      for (o2 = 0, len = colors.length; o2 < len; o2++) {
        c2 = colors[o2];
        xyz2 = c2.get(mode);
        alpha += c2.alpha();
        for (i2 in xyz) {
          if (!isNaN(xyz2[i2])) {
            cnt[i2] += 1;
            if (mode.charAt(i2) === "h") {
              A2 = xyz2[i2] / 180 * PI;
              dx += cos(A2);
              dy += sin(A2);
            } else {
              xyz[i2] += xyz2[i2];
            }
          }
        }
      }
      for (i2 in xyz) {
        if (mode.charAt(i2) === "h") {
          A2 = atan2(dy / cnt[i2], dx / cnt[i2]) / PI * 180;
          while (A2 < 0) {
            A2 += 360;
          }
          while (A2 >= 360) {
            A2 -= 360;
          }
          xyz[i2] = A2;
        } else {
          xyz[i2] = xyz[i2] / cnt[i2];
        }
      }
      return chroma2(xyz, mode).alpha(alpha / l2);
    };
    hex2rgb = function(hex) {
      var a, b2, g2, r2, rgb, u2;
      if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {
        if (hex.length === 4 || hex.length === 7) {
          hex = hex.substr(1);
        }
        if (hex.length === 3) {
          hex = hex.split("");
          hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
        }
        u2 = parseInt(hex, 16);
        r2 = u2 >> 16;
        g2 = u2 >> 8 & 255;
        b2 = u2 & 255;
        return [r2, g2, b2, 1];
      }
      if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {
        if (hex.length === 9) {
          hex = hex.substr(1);
        }
        u2 = parseInt(hex, 16);
        r2 = u2 >> 24 & 255;
        g2 = u2 >> 16 & 255;
        b2 = u2 >> 8 & 255;
        a = round((u2 & 255) / 255 * 100) / 100;
        return [r2, g2, b2, a];
      }
      if (_input.css != null && (rgb = _input.css(hex))) {
        return rgb;
      }
      throw "unknown color: " + hex;
    };
    rgb2hex = function(channels, mode) {
      var a, b2, g2, hxa, r2, str2, u2;
      if (mode == null) {
        mode = "auto";
      }
      r2 = channels[0], g2 = channels[1], b2 = channels[2], a = channels[3];
      if (mode === "auto") {
        mode = a < 1 ? "rgba" : "rgb";
      }
      r2 = Math.round(r2);
      g2 = Math.round(g2);
      b2 = Math.round(b2);
      u2 = r2 << 16 | g2 << 8 | b2;
      str2 = "000000" + u2.toString(16);
      str2 = str2.substr(str2.length - 6);
      hxa = "0" + round(a * 255).toString(16);
      hxa = hxa.substr(hxa.length - 2);
      return "#" + function() {
        switch (mode.toLowerCase()) {
          case "rgba":
            return str2 + hxa;
          case "argb":
            return hxa + str2;
          default:
            return str2;
        }
      }();
    };
    _input.hex = function(h2) {
      return hex2rgb(h2);
    };
    chroma2.hex = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["hex"]), function() {
      });
    };
    Color.prototype.hex = function(mode) {
      if (mode == null) {
        mode = "auto";
      }
      return rgb2hex(this._rgb, mode);
    };
    _guess_formats.push({
      p: 4,
      test: function(n2) {
        if (arguments.length === 1 && type(n2) === "string") {
          return "hex";
        }
      }
    });
    hsl2rgb = function() {
      var args, b2, c2, g2, h2, i2, l2, o2, r2, ref, s2, t1, t2, t3;
      args = unpack(arguments);
      h2 = args[0], s2 = args[1], l2 = args[2];
      if (s2 === 0) {
        r2 = g2 = b2 = l2 * 255;
      } else {
        t3 = [0, 0, 0];
        c2 = [0, 0, 0];
        t2 = l2 < 0.5 ? l2 * (1 + s2) : l2 + s2 - l2 * s2;
        t1 = 2 * l2 - t2;
        h2 /= 360;
        t3[0] = h2 + 1 / 3;
        t3[1] = h2;
        t3[2] = h2 - 1 / 3;
        for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
          if (t3[i2] < 0) {
            t3[i2] += 1;
          }
          if (t3[i2] > 1) {
            t3[i2] -= 1;
          }
          if (6 * t3[i2] < 1) {
            c2[i2] = t1 + (t2 - t1) * 6 * t3[i2];
          } else if (2 * t3[i2] < 1) {
            c2[i2] = t2;
          } else if (3 * t3[i2] < 2) {
            c2[i2] = t1 + (t2 - t1) * (2 / 3 - t3[i2]) * 6;
          } else {
            c2[i2] = t1;
          }
        }
        ref = [round(c2[0] * 255), round(c2[1] * 255), round(c2[2] * 255)], r2 = ref[0], g2 = ref[1], b2 = ref[2];
      }
      if (args.length > 3) {
        return [r2, g2, b2, args[3]];
      } else {
        return [r2, g2, b2];
      }
    };
    rgb2hsl = function(r2, g2, b2) {
      var h2, l2, min, ref, s2;
      if (r2 !== void 0 && r2.length >= 3) {
        ref = r2, r2 = ref[0], g2 = ref[1], b2 = ref[2];
      }
      r2 /= 255;
      g2 /= 255;
      b2 /= 255;
      min = Math.min(r2, g2, b2);
      max2 = Math.max(r2, g2, b2);
      l2 = (max2 + min) / 2;
      if (max2 === min) {
        s2 = 0;
        h2 = Number.NaN;
      } else {
        s2 = l2 < 0.5 ? (max2 - min) / (max2 + min) : (max2 - min) / (2 - max2 - min);
      }
      if (r2 === max2) {
        h2 = (g2 - b2) / (max2 - min);
      } else if (g2 === max2) {
        h2 = 2 + (b2 - r2) / (max2 - min);
      } else if (b2 === max2) {
        h2 = 4 + (r2 - g2) / (max2 - min);
      }
      h2 *= 60;
      if (h2 < 0) {
        h2 += 360;
      }
      return [h2, s2, l2];
    };
    chroma2.hsl = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["hsl"]), function() {
      });
    };
    _input.hsl = hsl2rgb;
    Color.prototype.hsl = function() {
      return rgb2hsl(this._rgb);
    };
    hsv2rgb = function() {
      var args, b2, f2, g2, h2, i2, p2, q2, r2, ref, ref1, ref2, ref3, ref4, ref5, s2, t2, v2;
      args = unpack(arguments);
      h2 = args[0], s2 = args[1], v2 = args[2];
      v2 *= 255;
      if (s2 === 0) {
        r2 = g2 = b2 = v2;
      } else {
        if (h2 === 360) {
          h2 = 0;
        }
        if (h2 > 360) {
          h2 -= 360;
        }
        if (h2 < 0) {
          h2 += 360;
        }
        h2 /= 60;
        i2 = floor2(h2);
        f2 = h2 - i2;
        p2 = v2 * (1 - s2);
        q2 = v2 * (1 - s2 * f2);
        t2 = v2 * (1 - s2 * (1 - f2));
        switch (i2) {
          case 0:
            ref = [v2, t2, p2], r2 = ref[0], g2 = ref[1], b2 = ref[2];
            break;
          case 1:
            ref1 = [q2, v2, p2], r2 = ref1[0], g2 = ref1[1], b2 = ref1[2];
            break;
          case 2:
            ref2 = [p2, v2, t2], r2 = ref2[0], g2 = ref2[1], b2 = ref2[2];
            break;
          case 3:
            ref3 = [p2, q2, v2], r2 = ref3[0], g2 = ref3[1], b2 = ref3[2];
            break;
          case 4:
            ref4 = [t2, p2, v2], r2 = ref4[0], g2 = ref4[1], b2 = ref4[2];
            break;
          case 5:
            ref5 = [v2, p2, q2], r2 = ref5[0], g2 = ref5[1], b2 = ref5[2];
        }
      }
      return [r2, g2, b2, args.length > 3 ? args[3] : 1];
    };
    rgb2hsv = function() {
      var b2, delta, g2, h2, min, r2, ref, s2, v2;
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      min = Math.min(r2, g2, b2);
      max2 = Math.max(r2, g2, b2);
      delta = max2 - min;
      v2 = max2 / 255;
      if (max2 === 0) {
        h2 = Number.NaN;
        s2 = 0;
      } else {
        s2 = delta / max2;
        if (r2 === max2) {
          h2 = (g2 - b2) / delta;
        }
        if (g2 === max2) {
          h2 = 2 + (b2 - r2) / delta;
        }
        if (b2 === max2) {
          h2 = 4 + (r2 - g2) / delta;
        }
        h2 *= 60;
        if (h2 < 0) {
          h2 += 360;
        }
      }
      return [h2, s2, v2];
    };
    chroma2.hsv = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["hsv"]), function() {
      });
    };
    _input.hsv = hsv2rgb;
    Color.prototype.hsv = function() {
      return rgb2hsv(this._rgb);
    };
    num2rgb = function(num) {
      var b2, g2, r2;
      if (type(num) === "number" && num >= 0 && num <= 16777215) {
        r2 = num >> 16;
        g2 = num >> 8 & 255;
        b2 = num & 255;
        return [r2, g2, b2, 1];
      }
      console.warn("unknown num color: " + num);
      return [0, 0, 0, 1];
    };
    rgb2num = function() {
      var b2, g2, r2, ref;
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      return (r2 << 16) + (g2 << 8) + b2;
    };
    chroma2.num = function(num) {
      return new Color(num, "num");
    };
    Color.prototype.num = function(mode) {
      if (mode == null) {
        mode = "rgb";
      }
      return rgb2num(this._rgb, mode);
    };
    _input.num = num2rgb;
    _guess_formats.push({
      p: 1,
      test: function(n2) {
        if (arguments.length === 1 && type(n2) === "number" && n2 >= 0 && n2 <= 16777215) {
          return "num";
        }
      }
    });
    hcg2rgb = function() {
      var _c, _g, args, b2, c2, f2, g2, h2, i2, p2, q2, r2, ref, ref1, ref2, ref3, ref4, ref5, t2, v2;
      args = unpack(arguments);
      h2 = args[0], c2 = args[1], _g = args[2];
      c2 = c2 / 100;
      g2 = g2 / 100 * 255;
      _c = c2 * 255;
      if (c2 === 0) {
        r2 = g2 = b2 = _g;
      } else {
        if (h2 === 360) {
          h2 = 0;
        }
        if (h2 > 360) {
          h2 -= 360;
        }
        if (h2 < 0) {
          h2 += 360;
        }
        h2 /= 60;
        i2 = floor2(h2);
        f2 = h2 - i2;
        p2 = _g * (1 - c2);
        q2 = p2 + _c * (1 - f2);
        t2 = p2 + _c * f2;
        v2 = p2 + _c;
        switch (i2) {
          case 0:
            ref = [v2, t2, p2], r2 = ref[0], g2 = ref[1], b2 = ref[2];
            break;
          case 1:
            ref1 = [q2, v2, p2], r2 = ref1[0], g2 = ref1[1], b2 = ref1[2];
            break;
          case 2:
            ref2 = [p2, v2, t2], r2 = ref2[0], g2 = ref2[1], b2 = ref2[2];
            break;
          case 3:
            ref3 = [p2, q2, v2], r2 = ref3[0], g2 = ref3[1], b2 = ref3[2];
            break;
          case 4:
            ref4 = [t2, p2, v2], r2 = ref4[0], g2 = ref4[1], b2 = ref4[2];
            break;
          case 5:
            ref5 = [v2, p2, q2], r2 = ref5[0], g2 = ref5[1], b2 = ref5[2];
        }
      }
      return [r2, g2, b2, args.length > 3 ? args[3] : 1];
    };
    rgb2hcg = function() {
      var _g, b2, c2, delta, g2, h2, min, r2, ref;
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      min = Math.min(r2, g2, b2);
      max2 = Math.max(r2, g2, b2);
      delta = max2 - min;
      c2 = delta * 100 / 255;
      _g = min / (255 - delta) * 100;
      if (delta === 0) {
        h2 = Number.NaN;
      } else {
        if (r2 === max2) {
          h2 = (g2 - b2) / delta;
        }
        if (g2 === max2) {
          h2 = 2 + (b2 - r2) / delta;
        }
        if (b2 === max2) {
          h2 = 4 + (r2 - g2) / delta;
        }
        h2 *= 60;
        if (h2 < 0) {
          h2 += 360;
        }
      }
      return [h2, c2, _g];
    };
    chroma2.hcg = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["hcg"]), function() {
      });
    };
    _input.hcg = hcg2rgb;
    Color.prototype.hcg = function() {
      return rgb2hcg(this._rgb);
    };
    css2rgb = function(css2) {
      var aa2, ab, hsl, i2, m3, o2, rgb, w2;
      css2 = css2.toLowerCase();
      if (chroma2.colors != null && chroma2.colors[css2]) {
        return hex2rgb(chroma2.colors[css2]);
      }
      if (m3 = css2.match(/rgb\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*\)/)) {
        rgb = m3.slice(1, 4);
        for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
          rgb[i2] = +rgb[i2];
        }
        rgb[3] = 1;
      } else if (m3 = css2.match(/rgba\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*,\s*([01]|[01]?\.\d+)\)/)) {
        rgb = m3.slice(1, 5);
        for (i2 = w2 = 0; w2 <= 3; i2 = ++w2) {
          rgb[i2] = +rgb[i2];
        }
      } else if (m3 = css2.match(/rgb\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)) {
        rgb = m3.slice(1, 4);
        for (i2 = aa2 = 0; aa2 <= 2; i2 = ++aa2) {
          rgb[i2] = round(rgb[i2] * 2.55);
        }
        rgb[3] = 1;
      } else if (m3 = css2.match(/rgba\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)) {
        rgb = m3.slice(1, 5);
        for (i2 = ab = 0; ab <= 2; i2 = ++ab) {
          rgb[i2] = round(rgb[i2] * 2.55);
        }
        rgb[3] = +rgb[3];
      } else if (m3 = css2.match(/hsl\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)) {
        hsl = m3.slice(1, 4);
        hsl[1] *= 0.01;
        hsl[2] *= 0.01;
        rgb = hsl2rgb(hsl);
        rgb[3] = 1;
      } else if (m3 = css2.match(/hsla\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)) {
        hsl = m3.slice(1, 4);
        hsl[1] *= 0.01;
        hsl[2] *= 0.01;
        rgb = hsl2rgb(hsl);
        rgb[3] = +m3[4];
      }
      return rgb;
    };
    rgb2css = function(rgba) {
      var mode;
      mode = rgba[3] < 1 ? "rgba" : "rgb";
      if (mode === "rgb") {
        return mode + "(" + rgba.slice(0, 3).map(round).join(",") + ")";
      } else if (mode === "rgba") {
        return mode + "(" + rgba.slice(0, 3).map(round).join(",") + "," + rgba[3] + ")";
      } else
        ;
    };
    rnd = function(a) {
      return round(a * 100) / 100;
    };
    hsl2css = function(hsl, alpha) {
      var mode;
      mode = alpha < 1 ? "hsla" : "hsl";
      hsl[0] = rnd(hsl[0] || 0);
      hsl[1] = rnd(hsl[1] * 100) + "%";
      hsl[2] = rnd(hsl[2] * 100) + "%";
      if (mode === "hsla") {
        hsl[3] = alpha;
      }
      return mode + "(" + hsl.join(",") + ")";
    };
    _input.css = function(h2) {
      return css2rgb(h2);
    };
    chroma2.css = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["css"]), function() {
      });
    };
    Color.prototype.css = function(mode) {
      if (mode == null) {
        mode = "rgb";
      }
      if (mode.slice(0, 3) === "rgb") {
        return rgb2css(this._rgb);
      } else if (mode.slice(0, 3) === "hsl") {
        return hsl2css(this.hsl(), this.alpha());
      }
    };
    _input.named = function(name2) {
      return hex2rgb(w3cx11[name2]);
    };
    _guess_formats.push({
      p: 5,
      test: function(n2) {
        if (arguments.length === 1 && w3cx11[n2] != null) {
          return "named";
        }
      }
    });
    Color.prototype.name = function(n2) {
      var h2, k2;
      if (arguments.length) {
        if (w3cx11[n2]) {
          this._rgb = hex2rgb(w3cx11[n2]);
        }
        this._rgb[3] = 1;
      }
      h2 = this.hex("rgb");
      for (k2 in w3cx11) {
        if (h2 === w3cx11[k2]) {
          return k2;
        }
      }
      return h2;
    };
    lch2lab = function() {
      var c2, h2, l2, ref;
      ref = unpack(arguments), l2 = ref[0], c2 = ref[1], h2 = ref[2];
      h2 = h2 * DEG2RAD;
      return [l2, cos(h2) * c2, sin(h2) * c2];
    };
    lch2rgb = function() {
      var L2, a, args, b2, c2, g2, h2, l2, r2, ref, ref1;
      args = unpack(arguments);
      l2 = args[0], c2 = args[1], h2 = args[2];
      ref = lch2lab(l2, c2, h2), L2 = ref[0], a = ref[1], b2 = ref[2];
      ref1 = lab2rgb(L2, a, b2), r2 = ref1[0], g2 = ref1[1], b2 = ref1[2];
      return [r2, g2, b2, args.length > 3 ? args[3] : 1];
    };
    lab2lch = function() {
      var a, b2, c2, h2, l2, ref;
      ref = unpack(arguments), l2 = ref[0], a = ref[1], b2 = ref[2];
      c2 = sqrt(a * a + b2 * b2);
      h2 = (atan2(b2, a) * RAD2DEG + 360) % 360;
      if (round(c2 * 1e4) === 0) {
        h2 = Number.NaN;
      }
      return [l2, c2, h2];
    };
    rgb2lch = function() {
      var a, b2, g2, l2, r2, ref, ref1;
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      ref1 = rgb2lab(r2, g2, b2), l2 = ref1[0], a = ref1[1], b2 = ref1[2];
      return lab2lch(l2, a, b2);
    };
    chroma2.lch = function() {
      var args;
      args = unpack(arguments);
      return new Color(args, "lch");
    };
    chroma2.hcl = function() {
      var args;
      args = unpack(arguments);
      return new Color(args, "hcl");
    };
    _input.lch = lch2rgb;
    _input.hcl = function() {
      var c2, h2, l2, ref;
      ref = unpack(arguments), h2 = ref[0], c2 = ref[1], l2 = ref[2];
      return lch2rgb([l2, c2, h2]);
    };
    Color.prototype.lch = function() {
      return rgb2lch(this._rgb);
    };
    Color.prototype.hcl = function() {
      return rgb2lch(this._rgb).reverse();
    };
    rgb2cmyk = function(mode) {
      var b2, c2, f2, g2, k2, m3, r2, ref, y2;
      if (mode == null) {
        mode = "rgb";
      }
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      r2 = r2 / 255;
      g2 = g2 / 255;
      b2 = b2 / 255;
      k2 = 1 - Math.max(r2, Math.max(g2, b2));
      f2 = k2 < 1 ? 1 / (1 - k2) : 0;
      c2 = (1 - r2 - k2) * f2;
      m3 = (1 - g2 - k2) * f2;
      y2 = (1 - b2 - k2) * f2;
      return [c2, m3, y2, k2];
    };
    cmyk2rgb = function() {
      var alpha, args, b2, c2, g2, k2, m3, r2, y2;
      args = unpack(arguments);
      c2 = args[0], m3 = args[1], y2 = args[2], k2 = args[3];
      alpha = args.length > 4 ? args[4] : 1;
      if (k2 === 1) {
        return [0, 0, 0, alpha];
      }
      r2 = c2 >= 1 ? 0 : 255 * (1 - c2) * (1 - k2);
      g2 = m3 >= 1 ? 0 : 255 * (1 - m3) * (1 - k2);
      b2 = y2 >= 1 ? 0 : 255 * (1 - y2) * (1 - k2);
      return [r2, g2, b2, alpha];
    };
    _input.cmyk = function() {
      return cmyk2rgb(unpack(arguments));
    };
    chroma2.cmyk = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["cmyk"]), function() {
      });
    };
    Color.prototype.cmyk = function() {
      return rgb2cmyk(this._rgb);
    };
    _input.gl = function() {
      var i2, k2, o2, rgb, v2;
      rgb = function() {
        var ref, results;
        ref = unpack(arguments);
        results = [];
        for (k2 in ref) {
          v2 = ref[k2];
          results.push(v2);
        }
        return results;
      }.apply(this, arguments);
      for (i2 = o2 = 0; o2 <= 2; i2 = ++o2) {
        rgb[i2] *= 255;
      }
      return rgb;
    };
    chroma2.gl = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["gl"]), function() {
      });
    };
    Color.prototype.gl = function() {
      var rgb;
      rgb = this._rgb;
      return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];
    };
    rgb2luminance = function(r2, g2, b2) {
      var ref;
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      r2 = luminance_x(r2);
      g2 = luminance_x(g2);
      b2 = luminance_x(b2);
      return 0.2126 * r2 + 0.7152 * g2 + 0.0722 * b2;
    };
    luminance_x = function(x) {
      x /= 255;
      if (x <= 0.03928) {
        return x / 12.92;
      } else {
        return pow((x + 0.055) / 1.055, 2.4);
      }
    };
    interpolate_rgb = function(col1, col2, f2, m3) {
      var xyz0, xyz1;
      xyz0 = col1._rgb;
      xyz1 = col2._rgb;
      return new Color(xyz0[0] + f2 * (xyz1[0] - xyz0[0]), xyz0[1] + f2 * (xyz1[1] - xyz0[1]), xyz0[2] + f2 * (xyz1[2] - xyz0[2]), m3);
    };
    _interpolators.push(["rgb", interpolate_rgb]);
    Color.prototype.luminance = function(lum, mode) {
      var cur_lum, eps, max_iter, rgba, test;
      if (mode == null) {
        mode = "rgb";
      }
      if (!arguments.length) {
        return rgb2luminance(this._rgb);
      }
      rgba = this._rgb;
      if (lum === 0) {
        rgba = [0, 0, 0, this._rgb[3]];
      } else if (lum === 1) {
        rgba = [255, 255, 255, this[3]];
      } else {
        cur_lum = rgb2luminance(this._rgb);
        eps = 1e-7;
        max_iter = 20;
        test = function(l2, h2) {
          var lm, m3;
          m3 = l2.interpolate(h2, 0.5, mode);
          lm = m3.luminance();
          if (Math.abs(lum - lm) < eps || !max_iter--) {
            return m3;
          }
          if (lm > lum) {
            return test(l2, m3);
          }
          return test(m3, h2);
        };
        if (cur_lum > lum) {
          rgba = test(chroma2("black"), this).rgba();
        } else {
          rgba = test(this, chroma2("white")).rgba();
        }
      }
      return chroma2(rgba).alpha(this.alpha());
    };
    temperature2rgb = function(kelvin) {
      var b2, g2, r2, temp;
      temp = kelvin / 100;
      if (temp < 66) {
        r2 = 255;
        g2 = -155.25485562709179 - 0.44596950469579133 * (g2 = temp - 2) + 104.49216199393888 * log2(g2);
        b2 = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b2 = temp - 10) + 115.67994401066147 * log2(b2);
      } else {
        r2 = 351.97690566805693 + 0.114206453784165 * (r2 = temp - 55) - 40.25366309332127 * log2(r2);
        g2 = 325.4494125711974 + 0.07943456536662342 * (g2 = temp - 50) - 28.0852963507957 * log2(g2);
        b2 = 255;
      }
      return [r2, g2, b2];
    };
    rgb2temperature = function() {
      var b2, eps, maxTemp, minTemp, r2, ref, rgb, temp;
      ref = unpack(arguments), r2 = ref[0], b2 = ref[2];
      minTemp = 1e3;
      maxTemp = 4e4;
      eps = 0.4;
      while (maxTemp - minTemp > eps) {
        temp = (maxTemp + minTemp) * 0.5;
        rgb = temperature2rgb(temp);
        if (rgb[2] / rgb[0] >= b2 / r2) {
          maxTemp = temp;
        } else {
          minTemp = temp;
        }
      }
      return round(temp);
    };
    chroma2.temperature = chroma2.kelvin = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["temperature"]), function() {
      });
    };
    _input.temperature = _input.kelvin = _input.K = temperature2rgb;
    Color.prototype.temperature = function() {
      return rgb2temperature(this._rgb);
    };
    Color.prototype.kelvin = Color.prototype.temperature;
    chroma2.contrast = function(a, b2) {
      var l1, l2, ref, ref1;
      if ((ref = type(a)) === "string" || ref === "number") {
        a = new Color(a);
      }
      if ((ref1 = type(b2)) === "string" || ref1 === "number") {
        b2 = new Color(b2);
      }
      l1 = a.luminance();
      l2 = b2.luminance();
      if (l1 > l2) {
        return (l1 + 0.05) / (l2 + 0.05);
      } else {
        return (l2 + 0.05) / (l1 + 0.05);
      }
    };
    chroma2.distance = function(a, b2, mode) {
      var d2, i2, l1, l2, ref, ref1, sum_sq;
      if (mode == null) {
        mode = "lab";
      }
      if ((ref = type(a)) === "string" || ref === "number") {
        a = new Color(a);
      }
      if ((ref1 = type(b2)) === "string" || ref1 === "number") {
        b2 = new Color(b2);
      }
      l1 = a.get(mode);
      l2 = b2.get(mode);
      sum_sq = 0;
      for (i2 in l1) {
        d2 = (l1[i2] || 0) - (l2[i2] || 0);
        sum_sq += d2 * d2;
      }
      return Math.sqrt(sum_sq);
    };
    chroma2.deltaE = function(a, b2, L2, C2) {
      var L1, L22, a1, a2, b1, b22, c1, c2, c4, dH2, delA, delB, delC, delL, f2, h1, ref, ref1, ref2, ref3, sc, sh, sl, t2, v1, v2, v3;
      if (L2 == null) {
        L2 = 1;
      }
      if (C2 == null) {
        C2 = 1;
      }
      if ((ref = type(a)) === "string" || ref === "number") {
        a = new Color(a);
      }
      if ((ref1 = type(b2)) === "string" || ref1 === "number") {
        b2 = new Color(b2);
      }
      ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];
      ref3 = b2.lab(), L22 = ref3[0], a2 = ref3[1], b22 = ref3[2];
      c1 = sqrt(a1 * a1 + b1 * b1);
      c2 = sqrt(a2 * a2 + b22 * b22);
      sl = L1 < 16 ? 0.511 : 0.040975 * L1 / (1 + 0.01765 * L1);
      sc = 0.0638 * c1 / (1 + 0.0131 * c1) + 0.638;
      h1 = c1 < 1e-6 ? 0 : atan2(b1, a1) * 180 / PI;
      while (h1 < 0) {
        h1 += 360;
      }
      while (h1 >= 360) {
        h1 -= 360;
      }
      t2 = h1 >= 164 && h1 <= 345 ? 0.56 + abs2(0.2 * cos(PI * (h1 + 168) / 180)) : 0.36 + abs2(0.4 * cos(PI * (h1 + 35) / 180));
      c4 = c1 * c1 * c1 * c1;
      f2 = sqrt(c4 / (c4 + 1900));
      sh = sc * (f2 * t2 + 1 - f2);
      delL = L1 - L22;
      delC = c1 - c2;
      delA = a1 - a2;
      delB = b1 - b22;
      dH2 = delA * delA + delB * delB - delC * delC;
      v1 = delL / (L2 * sl);
      v2 = delC / (C2 * sc);
      v3 = sh;
      return sqrt(v1 * v1 + v2 * v2 + dH2 / (v3 * v3));
    };
    Color.prototype.get = function(modechan) {
      var channel, i2, me2, mode, ref, src;
      me2 = this;
      ref = modechan.split("."), mode = ref[0], channel = ref[1];
      src = me2[mode]();
      if (channel) {
        i2 = mode.indexOf(channel);
        if (i2 > -1) {
          return src[i2];
        } else {
          return console.warn("unknown channel " + channel + " in mode " + mode);
        }
      } else {
        return src;
      }
    };
    Color.prototype.set = function(modechan, value2) {
      var channel, i2, me2, mode, ref, src;
      me2 = this;
      ref = modechan.split("."), mode = ref[0], channel = ref[1];
      if (channel) {
        src = me2[mode]();
        i2 = mode.indexOf(channel);
        if (i2 > -1) {
          if (type(value2) === "string") {
            switch (value2.charAt(0)) {
              case "+":
                src[i2] += +value2;
                break;
              case "-":
                src[i2] += +value2;
                break;
              case "*":
                src[i2] *= +value2.substr(1);
                break;
              case "/":
                src[i2] /= +value2.substr(1);
                break;
              default:
                src[i2] = +value2;
            }
          } else {
            src[i2] = value2;
          }
        } else {
          console.warn("unknown channel " + channel + " in mode " + mode);
        }
      } else {
        src = value2;
      }
      return chroma2(src, mode).alpha(me2.alpha());
    };
    Color.prototype.clipped = function() {
      return this._rgb._clipped || false;
    };
    Color.prototype.alpha = function(a) {
      if (arguments.length) {
        return chroma2.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);
      }
      return this._rgb[3];
    };
    Color.prototype.darken = function(amount) {
      var lab, me2;
      if (amount == null) {
        amount = 1;
      }
      me2 = this;
      lab = me2.lab();
      lab[0] -= LAB_CONSTANTS.Kn * amount;
      return chroma2.lab(lab).alpha(me2.alpha());
    };
    Color.prototype.brighten = function(amount) {
      if (amount == null) {
        amount = 1;
      }
      return this.darken(-amount);
    };
    Color.prototype.darker = Color.prototype.darken;
    Color.prototype.brighter = Color.prototype.brighten;
    Color.prototype.saturate = function(amount) {
      var lch, me2;
      if (amount == null) {
        amount = 1;
      }
      me2 = this;
      lch = me2.lch();
      lch[1] += amount * LAB_CONSTANTS.Kn;
      if (lch[1] < 0) {
        lch[1] = 0;
      }
      return chroma2.lch(lch).alpha(me2.alpha());
    };
    Color.prototype.desaturate = function(amount) {
      if (amount == null) {
        amount = 1;
      }
      return this.saturate(-amount);
    };
    Color.prototype.premultiply = function() {
      var a, rgb;
      rgb = this.rgb();
      a = this.alpha();
      return chroma2(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);
    };
    blend = function(bottom, top, mode) {
      if (!blend[mode]) {
        throw "unknown blend mode " + mode;
      }
      return blend[mode](bottom, top);
    };
    blend_f = function(f2) {
      return function(bottom, top) {
        var c0, c1;
        c0 = chroma2(top).rgb();
        c1 = chroma2(bottom).rgb();
        return chroma2(f2(c0, c1), "rgb");
      };
    };
    each = function(f2) {
      return function(c0, c1) {
        var i2, o2, out;
        out = [];
        for (i2 = o2 = 0; o2 <= 3; i2 = ++o2) {
          out[i2] = f2(c0[i2], c1[i2]);
        }
        return out;
      };
    };
    normal = function(a, b2) {
      return a;
    };
    multiply = function(a, b2) {
      return a * b2 / 255;
    };
    darken = function(a, b2) {
      if (a > b2) {
        return b2;
      } else {
        return a;
      }
    };
    lighten = function(a, b2) {
      if (a > b2) {
        return a;
      } else {
        return b2;
      }
    };
    screen = function(a, b2) {
      return 255 * (1 - (1 - a / 255) * (1 - b2 / 255));
    };
    overlay = function(a, b2) {
      if (b2 < 128) {
        return 2 * a * b2 / 255;
      } else {
        return 255 * (1 - 2 * (1 - a / 255) * (1 - b2 / 255));
      }
    };
    burn = function(a, b2) {
      return 255 * (1 - (1 - b2 / 255) / (a / 255));
    };
    dodge = function(a, b2) {
      if (a === 255) {
        return 255;
      }
      a = 255 * (b2 / 255) / (1 - a / 255);
      if (a > 255) {
        return 255;
      } else {
        return a;
      }
    };
    blend.normal = blend_f(each(normal));
    blend.multiply = blend_f(each(multiply));
    blend.screen = blend_f(each(screen));
    blend.overlay = blend_f(each(overlay));
    blend.darken = blend_f(each(darken));
    blend.lighten = blend_f(each(lighten));
    blend.dodge = blend_f(each(dodge));
    blend.burn = blend_f(each(burn));
    chroma2.blend = blend;
    chroma2.analyze = function(data2) {
      var len, o2, r2, val;
      r2 = {
        min: Number.MAX_VALUE,
        max: Number.MAX_VALUE * -1,
        sum: 0,
        values: [],
        count: 0
      };
      for (o2 = 0, len = data2.length; o2 < len; o2++) {
        val = data2[o2];
        if (val != null && !isNaN(val)) {
          r2.values.push(val);
          r2.sum += val;
          if (val < r2.min) {
            r2.min = val;
          }
          if (val > r2.max) {
            r2.max = val;
          }
          r2.count += 1;
        }
      }
      r2.domain = [r2.min, r2.max];
      r2.limits = function(mode, num) {
        return chroma2.limits(r2, mode, num);
      };
      return r2;
    };
    chroma2.scale = function(colors, positions) {
      var _classes, _colorCache, _colors, _correctLightness, _domain, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, f2, getClass, getColor, resetCache, setColors, tmap;
      _mode = "rgb";
      _nacol = chroma2("#ccc");
      _spread = 0;
      _domain = [0, 1];
      _pos = [];
      _padding = [0, 0];
      _classes = false;
      _colors = [];
      _out = false;
      _min = 0;
      _max = 1;
      _correctLightness = false;
      _colorCache = {};
      _useCache = true;
      _gamma = 1;
      setColors = function(colors2) {
        var c2, col, o2, ref, ref1, w2;
        if (colors2 == null) {
          colors2 = ["#fff", "#000"];
        }
        if (colors2 != null && type(colors2) === "string" && chroma2.brewer != null) {
          colors2 = chroma2.brewer[colors2] || chroma2.brewer[colors2.toLowerCase()] || colors2;
        }
        if (type(colors2) === "array") {
          if (colors2.length === 1) {
            colors2 = [colors2[0], colors2[0]];
          }
          colors2 = colors2.slice(0);
          for (c2 = o2 = 0, ref = colors2.length - 1; 0 <= ref ? o2 <= ref : o2 >= ref; c2 = 0 <= ref ? ++o2 : --o2) {
            col = colors2[c2];
            if (type(col) === "string") {
              colors2[c2] = chroma2(col);
            }
          }
          _pos.length = 0;
          for (c2 = w2 = 0, ref1 = colors2.length - 1; 0 <= ref1 ? w2 <= ref1 : w2 >= ref1; c2 = 0 <= ref1 ? ++w2 : --w2) {
            _pos.push(c2 / (colors2.length - 1));
          }
        }
        resetCache();
        return _colors = colors2;
      };
      getClass = function(value2) {
        var i2, n2;
        if (_classes != null) {
          n2 = _classes.length - 1;
          i2 = 0;
          while (i2 < n2 && value2 >= _classes[i2]) {
            i2++;
          }
          return i2 - 1;
        }
        return 0;
      };
      tmap = function(t2) {
        return t2;
      };
      getColor = function(val, bypassMap) {
        var c2, col, i2, k2, o2, p2, ref, t2;
        if (bypassMap == null) {
          bypassMap = false;
        }
        if (isNaN(val) || val === null) {
          return _nacol;
        }
        if (!bypassMap) {
          if (_classes && _classes.length > 2) {
            c2 = getClass(val);
            t2 = c2 / (_classes.length - 2);
          } else if (_max !== _min) {
            t2 = (val - _min) / (_max - _min);
          } else {
            t2 = 1;
          }
        } else {
          t2 = val;
        }
        if (!bypassMap) {
          t2 = tmap(t2);
        }
        if (_gamma !== 1) {
          t2 = pow(t2, _gamma);
        }
        t2 = _padding[0] + t2 * (1 - _padding[0] - _padding[1]);
        t2 = Math.min(1, Math.max(0, t2));
        k2 = Math.floor(t2 * 1e4);
        if (_useCache && _colorCache[k2]) {
          col = _colorCache[k2];
        } else {
          if (type(_colors) === "array") {
            for (i2 = o2 = 0, ref = _pos.length - 1; 0 <= ref ? o2 <= ref : o2 >= ref; i2 = 0 <= ref ? ++o2 : --o2) {
              p2 = _pos[i2];
              if (t2 <= p2) {
                col = _colors[i2];
                break;
              }
              if (t2 >= p2 && i2 === _pos.length - 1) {
                col = _colors[i2];
                break;
              }
              if (t2 > p2 && t2 < _pos[i2 + 1]) {
                t2 = (t2 - p2) / (_pos[i2 + 1] - p2);
                col = chroma2.interpolate(_colors[i2], _colors[i2 + 1], t2, _mode);
                break;
              }
            }
          } else if (type(_colors) === "function") {
            col = _colors(t2);
          }
          if (_useCache) {
            _colorCache[k2] = col;
          }
        }
        return col;
      };
      resetCache = function() {
        return _colorCache = {};
      };
      setColors(colors);
      f2 = function(v2) {
        var c2;
        c2 = chroma2(getColor(v2));
        if (_out && c2[_out]) {
          return c2[_out]();
        } else {
          return c2;
        }
      };
      f2.classes = function(classes) {
        var d2;
        if (classes != null) {
          if (type(classes) === "array") {
            _classes = classes;
            _domain = [classes[0], classes[classes.length - 1]];
          } else {
            d2 = chroma2.analyze(_domain);
            if (classes === 0) {
              _classes = [d2.min, d2.max];
            } else {
              _classes = chroma2.limits(d2, "e", classes);
            }
          }
          return f2;
        }
        return _classes;
      };
      f2.domain = function(domain) {
        var c2, d2, k2, len, o2, ref, w2;
        if (!arguments.length) {
          return _domain;
        }
        _min = domain[0];
        _max = domain[domain.length - 1];
        _pos = [];
        k2 = _colors.length;
        if (domain.length === k2 && _min !== _max) {
          for (o2 = 0, len = domain.length; o2 < len; o2++) {
            d2 = domain[o2];
            _pos.push((d2 - _min) / (_max - _min));
          }
        } else {
          for (c2 = w2 = 0, ref = k2 - 1; 0 <= ref ? w2 <= ref : w2 >= ref; c2 = 0 <= ref ? ++w2 : --w2) {
            _pos.push(c2 / (k2 - 1));
          }
        }
        _domain = [_min, _max];
        return f2;
      };
      f2.mode = function(_m) {
        if (!arguments.length) {
          return _mode;
        }
        _mode = _m;
        resetCache();
        return f2;
      };
      f2.range = function(colors2, _pos2) {
        setColors(colors2, _pos2);
        return f2;
      };
      f2.out = function(_o) {
        _out = _o;
        return f2;
      };
      f2.spread = function(val) {
        if (!arguments.length) {
          return _spread;
        }
        _spread = val;
        return f2;
      };
      f2.correctLightness = function(v2) {
        if (v2 == null) {
          v2 = true;
        }
        _correctLightness = v2;
        resetCache();
        if (_correctLightness) {
          tmap = function(t2) {
            var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;
            L0 = getColor(0, true).lab()[0];
            L1 = getColor(1, true).lab()[0];
            pol = L0 > L1;
            L_actual = getColor(t2, true).lab()[0];
            L_ideal = L0 + (L1 - L0) * t2;
            L_diff = L_actual - L_ideal;
            t0 = 0;
            t1 = 1;
            max_iter = 20;
            while (Math.abs(L_diff) > 0.01 && max_iter-- > 0) {
              (function() {
                if (pol) {
                  L_diff *= -1;
                }
                if (L_diff < 0) {
                  t0 = t2;
                  t2 += (t1 - t2) * 0.5;
                } else {
                  t1 = t2;
                  t2 += (t0 - t2) * 0.5;
                }
                L_actual = getColor(t2, true).lab()[0];
                return L_diff = L_actual - L_ideal;
              })();
            }
            return t2;
          };
        } else {
          tmap = function(t2) {
            return t2;
          };
        }
        return f2;
      };
      f2.padding = function(p2) {
        if (p2 != null) {
          if (type(p2) === "number") {
            p2 = [p2, p2];
          }
          _padding = p2;
          return f2;
        } else {
          return _padding;
        }
      };
      f2.colors = function(numColors, out) {
        var dd, dm, i2, ref, result, results, samples, w2;
        if (arguments.length < 2) {
          out = "hex";
        }
        result = [];
        if (arguments.length === 0) {
          result = _colors.slice(0);
        } else if (numColors === 1) {
          result = [f2(0.5)];
        } else if (numColors > 1) {
          dm = _domain[0];
          dd = _domain[1] - dm;
          result = function() {
            results = [];
            for (var o2 = 0; 0 <= numColors ? o2 < numColors : o2 > numColors; 0 <= numColors ? o2++ : o2--) {
              results.push(o2);
            }
            return results;
          }.apply(this).map(function(i3) {
            return f2(dm + i3 / (numColors - 1) * dd);
          });
        } else {
          colors = [];
          samples = [];
          if (_classes && _classes.length > 2) {
            for (i2 = w2 = 1, ref = _classes.length; 1 <= ref ? w2 < ref : w2 > ref; i2 = 1 <= ref ? ++w2 : --w2) {
              samples.push((_classes[i2 - 1] + _classes[i2]) * 0.5);
            }
          } else {
            samples = _domain;
          }
          result = samples.map(function(v2) {
            return f2(v2);
          });
        }
        if (chroma2[out]) {
          result = result.map(function(c2) {
            return c2[out]();
          });
        }
        return result;
      };
      f2.cache = function(c2) {
        if (c2 != null) {
          _useCache = c2;
          return f2;
        } else {
          return _useCache;
        }
      };
      f2.gamma = function(g2) {
        if (g2 != null) {
          _gamma = g2;
          return f2;
        } else {
          return _gamma;
        }
      };
      f2.nodata = function(d2) {
        if (d2 != null) {
          _nacol = chroma2(d2);
          return f2;
        } else {
          return _nacol;
        }
      };
      return f2;
    };
    if (chroma2.scales == null) {
      chroma2.scales = {};
    }
    chroma2.scales.cool = function() {
      return chroma2.scale([chroma2.hsl(180, 1, 0.9), chroma2.hsl(250, 0.7, 0.4)]);
    };
    chroma2.scales.hot = function() {
      return chroma2.scale(["#000", "#f00", "#ff0", "#fff"], [0, 0.25, 0.75, 1]).mode("rgb");
    };
    chroma2.analyze = function(data2, key, filter) {
      var add, k2, len, o2, r2, val, visit;
      r2 = {
        min: Number.MAX_VALUE,
        max: Number.MAX_VALUE * -1,
        sum: 0,
        values: [],
        count: 0
      };
      if (filter == null) {
        filter = function() {
          return true;
        };
      }
      add = function(val2) {
        if (val2 != null && !isNaN(val2)) {
          r2.values.push(val2);
          r2.sum += val2;
          if (val2 < r2.min) {
            r2.min = val2;
          }
          if (val2 > r2.max) {
            r2.max = val2;
          }
          r2.count += 1;
        }
      };
      visit = function(val2, k3) {
        if (filter(val2, k3)) {
          if (key != null && type(key) === "function") {
            return add(key(val2));
          } else if (key != null && type(key) === "string" || type(key) === "number") {
            return add(val2[key]);
          } else {
            return add(val2);
          }
        }
      };
      if (type(data2) === "array") {
        for (o2 = 0, len = data2.length; o2 < len; o2++) {
          val = data2[o2];
          visit(val);
        }
      } else {
        for (k2 in data2) {
          val = data2[k2];
          visit(val, k2);
        }
      }
      r2.domain = [r2.min, r2.max];
      r2.limits = function(mode, num) {
        return chroma2.limits(r2, mode, num);
      };
      return r2;
    };
    chroma2.limits = function(data2, mode, num) {
      var aa2, ab, ac, ad, ae2, af, ag, ah, ai2, aj, ak, al2, am, assignments, best, centroids, cluster, clusterSizes, dist2, i2, j2, kClusters, limits, max_log, min, min_log, mindist, n2, nb_iters, newCentroids, o2, p2, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, tmpKMeansBreaks, v2, value2, values, w2;
      if (mode == null) {
        mode = "equal";
      }
      if (num == null) {
        num = 7;
      }
      if (type(data2) === "array") {
        data2 = chroma2.analyze(data2);
      }
      min = data2.min;
      max2 = data2.max;
      values = data2.values.sort(function(a, b2) {
        return a - b2;
      });
      if (num === 1) {
        return [min, max2];
      }
      limits = [];
      if (mode.substr(0, 1) === "c") {
        limits.push(min);
        limits.push(max2);
      }
      if (mode.substr(0, 1) === "e") {
        limits.push(min);
        for (i2 = o2 = 1, ref = num - 1; 1 <= ref ? o2 <= ref : o2 >= ref; i2 = 1 <= ref ? ++o2 : --o2) {
          limits.push(min + i2 / num * (max2 - min));
        }
        limits.push(max2);
      } else if (mode.substr(0, 1) === "l") {
        if (min <= 0) {
          throw "Logarithmic scales are only possible for values > 0";
        }
        min_log = Math.LOG10E * log2(min);
        max_log = Math.LOG10E * log2(max2);
        limits.push(min);
        for (i2 = w2 = 1, ref1 = num - 1; 1 <= ref1 ? w2 <= ref1 : w2 >= ref1; i2 = 1 <= ref1 ? ++w2 : --w2) {
          limits.push(pow(10, min_log + i2 / num * (max_log - min_log)));
        }
        limits.push(max2);
      } else if (mode.substr(0, 1) === "q") {
        limits.push(min);
        for (i2 = aa2 = 1, ref2 = num - 1; 1 <= ref2 ? aa2 <= ref2 : aa2 >= ref2; i2 = 1 <= ref2 ? ++aa2 : --aa2) {
          p2 = (values.length - 1) * i2 / num;
          pb = floor2(p2);
          if (pb === p2) {
            limits.push(values[pb]);
          } else {
            pr = p2 - pb;
            limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);
          }
        }
        limits.push(max2);
      } else if (mode.substr(0, 1) === "k") {
        n2 = values.length;
        assignments = new Array(n2);
        clusterSizes = new Array(num);
        repeat = true;
        nb_iters = 0;
        centroids = null;
        centroids = [];
        centroids.push(min);
        for (i2 = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i2 = 1 <= ref3 ? ++ab : --ab) {
          centroids.push(min + i2 / num * (max2 - min));
        }
        centroids.push(max2);
        while (repeat) {
          for (j2 = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j2 = 0 <= ref4 ? ++ac : --ac) {
            clusterSizes[j2] = 0;
          }
          for (i2 = ad = 0, ref5 = n2 - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i2 = 0 <= ref5 ? ++ad : --ad) {
            value2 = values[i2];
            mindist = Number.MAX_VALUE;
            for (j2 = ae2 = 0, ref6 = num - 1; 0 <= ref6 ? ae2 <= ref6 : ae2 >= ref6; j2 = 0 <= ref6 ? ++ae2 : --ae2) {
              dist2 = abs2(centroids[j2] - value2);
              if (dist2 < mindist) {
                mindist = dist2;
                best = j2;
              }
            }
            clusterSizes[best]++;
            assignments[i2] = best;
          }
          newCentroids = new Array(num);
          for (j2 = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j2 = 0 <= ref7 ? ++af : --af) {
            newCentroids[j2] = null;
          }
          for (i2 = ag = 0, ref8 = n2 - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i2 = 0 <= ref8 ? ++ag : --ag) {
            cluster = assignments[i2];
            if (newCentroids[cluster] === null) {
              newCentroids[cluster] = values[i2];
            } else {
              newCentroids[cluster] += values[i2];
            }
          }
          for (j2 = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j2 = 0 <= ref9 ? ++ah : --ah) {
            newCentroids[j2] *= 1 / clusterSizes[j2];
          }
          repeat = false;
          for (j2 = ai2 = 0, ref10 = num - 1; 0 <= ref10 ? ai2 <= ref10 : ai2 >= ref10; j2 = 0 <= ref10 ? ++ai2 : --ai2) {
            if (newCentroids[j2] !== centroids[i2]) {
              repeat = true;
              break;
            }
          }
          centroids = newCentroids;
          nb_iters++;
          if (nb_iters > 200) {
            repeat = false;
          }
        }
        kClusters = {};
        for (j2 = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j2 = 0 <= ref11 ? ++aj : --aj) {
          kClusters[j2] = [];
        }
        for (i2 = ak = 0, ref12 = n2 - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i2 = 0 <= ref12 ? ++ak : --ak) {
          cluster = assignments[i2];
          kClusters[cluster].push(values[i2]);
        }
        tmpKMeansBreaks = [];
        for (j2 = al2 = 0, ref13 = num - 1; 0 <= ref13 ? al2 <= ref13 : al2 >= ref13; j2 = 0 <= ref13 ? ++al2 : --al2) {
          tmpKMeansBreaks.push(kClusters[j2][0]);
          tmpKMeansBreaks.push(kClusters[j2][kClusters[j2].length - 1]);
        }
        tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b2) {
          return a - b2;
        });
        limits.push(tmpKMeansBreaks[0]);
        for (i2 = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i2 = am += 2) {
          v2 = tmpKMeansBreaks[i2];
          if (!isNaN(v2) && limits.indexOf(v2) === -1) {
            limits.push(v2);
          }
        }
      }
      return limits;
    };
    hsi2rgb = function(h2, s2, i2) {
      var args, b2, g2, r2;
      args = unpack(arguments);
      h2 = args[0], s2 = args[1], i2 = args[2];
      if (isNaN(h2)) {
        h2 = 0;
      }
      h2 /= 360;
      if (h2 < 1 / 3) {
        b2 = (1 - s2) / 3;
        r2 = (1 + s2 * cos(TWOPI * h2) / cos(PITHIRD - TWOPI * h2)) / 3;
        g2 = 1 - (b2 + r2);
      } else if (h2 < 2 / 3) {
        h2 -= 1 / 3;
        r2 = (1 - s2) / 3;
        g2 = (1 + s2 * cos(TWOPI * h2) / cos(PITHIRD - TWOPI * h2)) / 3;
        b2 = 1 - (r2 + g2);
      } else {
        h2 -= 2 / 3;
        g2 = (1 - s2) / 3;
        b2 = (1 + s2 * cos(TWOPI * h2) / cos(PITHIRD - TWOPI * h2)) / 3;
        r2 = 1 - (g2 + b2);
      }
      r2 = limit(i2 * r2 * 3);
      g2 = limit(i2 * g2 * 3);
      b2 = limit(i2 * b2 * 3);
      return [r2 * 255, g2 * 255, b2 * 255, args.length > 3 ? args[3] : 1];
    };
    rgb2hsi = function() {
      var b2, g2, h2, i2, min, r2, ref, s2;
      ref = unpack(arguments), r2 = ref[0], g2 = ref[1], b2 = ref[2];
      TWOPI = Math.PI * 2;
      r2 /= 255;
      g2 /= 255;
      b2 /= 255;
      min = Math.min(r2, g2, b2);
      i2 = (r2 + g2 + b2) / 3;
      s2 = 1 - min / i2;
      if (s2 === 0) {
        h2 = 0;
      } else {
        h2 = (r2 - g2 + (r2 - b2)) / 2;
        h2 /= Math.sqrt((r2 - g2) * (r2 - g2) + (r2 - b2) * (g2 - b2));
        h2 = Math.acos(h2);
        if (b2 > g2) {
          h2 = TWOPI - h2;
        }
        h2 /= TWOPI;
      }
      return [h2 * 360, s2, i2];
    };
    chroma2.hsi = function() {
      return function(func, args, ctor) {
        ctor.prototype = func.prototype;
        var child = new ctor(), result = func.apply(child, args);
        return Object(result) === result ? result : child;
      }(Color, slice.call(arguments).concat(["hsi"]), function() {
      });
    };
    _input.hsi = hsi2rgb;
    Color.prototype.hsi = function() {
      return rgb2hsi(this._rgb);
    };
    interpolate_hsx = function(col1, col2, f2, m3) {
      var dh, hue, hue0, hue1, lbv, lbv0, lbv1, sat, sat0, sat1, xyz0, xyz1;
      if (m3 === "hsl") {
        xyz0 = col1.hsl();
        xyz1 = col2.hsl();
      } else if (m3 === "hsv") {
        xyz0 = col1.hsv();
        xyz1 = col2.hsv();
      } else if (m3 === "hcg") {
        xyz0 = col1.hcg();
        xyz1 = col2.hcg();
      } else if (m3 === "hsi") {
        xyz0 = col1.hsi();
        xyz1 = col2.hsi();
      } else if (m3 === "lch" || m3 === "hcl") {
        m3 = "hcl";
        xyz0 = col1.hcl();
        xyz1 = col2.hcl();
      }
      if (m3.substr(0, 1) === "h") {
        hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];
        hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];
      }
      if (!isNaN(hue0) && !isNaN(hue1)) {
        if (hue1 > hue0 && hue1 - hue0 > 180) {
          dh = hue1 - (hue0 + 360);
        } else if (hue1 < hue0 && hue0 - hue1 > 180) {
          dh = hue1 + 360 - hue0;
        } else {
          dh = hue1 - hue0;
        }
        hue = hue0 + f2 * dh;
      } else if (!isNaN(hue0)) {
        hue = hue0;
        if ((lbv1 === 1 || lbv1 === 0) && m3 !== "hsv") {
          sat = sat0;
        }
      } else if (!isNaN(hue1)) {
        hue = hue1;
        if ((lbv0 === 1 || lbv0 === 0) && m3 !== "hsv") {
          sat = sat1;
        }
      } else {
        hue = Number.NaN;
      }
      if (sat == null) {
        sat = sat0 + f2 * (sat1 - sat0);
      }
      lbv = lbv0 + f2 * (lbv1 - lbv0);
      return chroma2[m3](hue, sat, lbv);
    };
    _interpolators = _interpolators.concat(function() {
      var len, o2, ref, results;
      ref = ["hsv", "hsl", "hsi", "hcl", "lch", "hcg"];
      results = [];
      for (o2 = 0, len = ref.length; o2 < len; o2++) {
        m2 = ref[o2];
        results.push([m2, interpolate_hsx]);
      }
      return results;
    }());
    interpolate_num = function(col1, col2, f2, m3) {
      var n1, n2;
      n1 = col1.num();
      n2 = col2.num();
      return chroma2.num(n1 + (n2 - n1) * f2, "num");
    };
    _interpolators.push(["num", interpolate_num]);
    interpolate_lab = function(col1, col2, f2, m3) {
      var xyz0, xyz1;
      xyz0 = col1.lab();
      xyz1 = col2.lab();
      return new Color(xyz0[0] + f2 * (xyz1[0] - xyz0[0]), xyz0[1] + f2 * (xyz1[1] - xyz0[1]), xyz0[2] + f2 * (xyz1[2] - xyz0[2]), m3);
    };
    _interpolators.push(["lab", interpolate_lab]);
  }).call(commonjsGlobal);
})(chroma$1, chroma$1.exports);
var isImplemented$8 = function() {
  var weakMap, obj;
  if (typeof WeakMap !== "function")
    return false;
  try {
    weakMap = new WeakMap([[obj = {}, "one"], [{}, "two"], [{}, "three"]]);
  } catch (e2) {
    return false;
  }
  if (String(weakMap) !== "[object WeakMap]")
    return false;
  if (typeof weakMap.set !== "function")
    return false;
  if (weakMap.set({}, 1) !== weakMap)
    return false;
  if (typeof weakMap.delete !== "function")
    return false;
  if (typeof weakMap.has !== "function")
    return false;
  if (weakMap.get(obj) !== "one")
    return false;
  return true;
};
var noop$1 = function() {
};
var _undefined$1 = noop$1();
var isValue$c = function(val) {
  return val !== _undefined$1 && val !== null;
};
var create$a = Object.create, getPrototypeOf$1 = Object.getPrototypeOf, plainObject = {};
var isImplemented$7 = function() {
  var setPrototypeOf2 = Object.setPrototypeOf, customCreate = arguments[0] || create$a;
  if (typeof setPrototypeOf2 !== "function")
    return false;
  return getPrototypeOf$1(setPrototypeOf2(customCreate(null), plainObject)) === plainObject;
};
var isValue$b = isValue$c;
var map$2 = { function: true, object: true };
var isObject$5 = function(value2) {
  return isValue$b(value2) && map$2[typeof value2] || false;
};
var isValue$a = isValue$c;
var validValue$1 = function(value2) {
  if (!isValue$a(value2))
    throw new TypeError("Cannot use null or undefined");
  return value2;
};
var create$9 = Object.create, shim$6;
if (!isImplemented$7()) {
  shim$6 = shim$5;
}
(function() {
  var nullObject, polyProps, desc2;
  if (!shim$6)
    return create$9;
  if (shim$6.level !== 1)
    return create$9;
  nullObject = {};
  polyProps = {};
  desc2 = { configurable: false, enumerable: false, writable: true, value: void 0 };
  Object.getOwnPropertyNames(Object.prototype).forEach(function(name2) {
    if (name2 === "__proto__") {
      polyProps[name2] = {
        configurable: true,
        enumerable: false,
        writable: true,
        value: void 0
      };
      return;
    }
    polyProps[name2] = desc2;
  });
  Object.defineProperties(nullObject, polyProps);
  Object.defineProperty(shim$6, "nullPolyfill", {
    configurable: false,
    enumerable: false,
    writable: false,
    value: nullObject
  });
  return function(prototype, props) {
    return create$9(prototype === null ? nullObject : prototype, props);
  };
})();
var isObject$4 = isObject$5, value$5 = validValue$1, objIsPrototypeOf = Object.prototype.isPrototypeOf, defineProperty$8 = Object.defineProperty, nullDesc = { configurable: true, enumerable: false, writable: true, value: void 0 }, validate;
validate = function(obj, prototype) {
  value$5(obj);
  if (prototype === null || isObject$4(prototype))
    return obj;
  throw new TypeError("Prototype must be null or an object");
};
var shim$5 = function(status) {
  var fn2, set;
  if (!status)
    return null;
  if (status.level === 2) {
    if (status.set) {
      set = status.set;
      fn2 = function(obj, prototype) {
        set.call(validate(obj, prototype), prototype);
        return obj;
      };
    } else {
      fn2 = function(obj, prototype) {
        validate(obj, prototype).__proto__ = prototype;
        return obj;
      };
    }
  } else {
    fn2 = function self2(obj, prototype) {
      var isNullBase;
      validate(obj, prototype);
      isNullBase = objIsPrototypeOf.call(self2.nullPolyfill, obj);
      if (isNullBase)
        delete self2.nullPolyfill.__proto__;
      if (prototype === null)
        prototype = self2.nullPolyfill;
      obj.__proto__ = prototype;
      if (isNullBase)
        defineProperty$8(self2.nullPolyfill, "__proto__", nullDesc);
      return obj;
    };
  }
  return Object.defineProperty(fn2, "level", {
    configurable: false,
    enumerable: false,
    writable: false,
    value: status.level
  });
}(function() {
  var tmpObj1 = /* @__PURE__ */ Object.create(null), tmpObj2 = {}, set, desc2 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");
  if (desc2) {
    try {
      set = desc2.set;
      set.call(tmpObj1, tmpObj2);
    } catch (ignore2) {
    }
    if (Object.getPrototypeOf(tmpObj1) === tmpObj2)
      return { set, level: 2 };
  }
  tmpObj1.__proto__ = tmpObj2;
  if (Object.getPrototypeOf(tmpObj1) === tmpObj2)
    return { level: 2 };
  tmpObj1 = {};
  tmpObj1.__proto__ = tmpObj2;
  if (Object.getPrototypeOf(tmpObj1) === tmpObj2)
    return { level: 1 };
  return false;
}());
var setPrototypeOf$3 = isImplemented$7() ? Object.setPrototypeOf : shim$5;
var isObject$3 = isObject$5;
var validObject = function(value2) {
  if (!isObject$3(value2))
    throw new TypeError(value2 + " is not an Object");
  return value2;
};
var generated = /* @__PURE__ */ Object.create(null), random = Math.random;
var randomUniq$1 = function() {
  var str2;
  do {
    str2 = random().toString(36).slice(2);
  } while (generated[str2]);
  return str2;
};
var d$c = { exports: {} };
var _undefined = void 0;
var is$6 = function(value2) {
  return value2 !== _undefined && value2 !== null;
};
var isValue$9 = is$6;
var possibleTypes = { "object": true, "function": true, "undefined": true };
var is$5 = function(value2) {
  if (!isValue$9(value2))
    return false;
  return hasOwnProperty.call(possibleTypes, typeof value2);
};
var isObject$2 = is$5;
var is$4 = function(value2) {
  if (!isObject$2(value2))
    return false;
  try {
    if (!value2.constructor)
      return false;
    return value2.constructor.prototype === value2;
  } catch (error) {
    return false;
  }
};
var isPrototype = is$4;
var is$3 = function(value2) {
  if (typeof value2 !== "function")
    return false;
  if (!hasOwnProperty.call(value2, "length"))
    return false;
  try {
    if (typeof value2.length !== "number")
      return false;
    if (typeof value2.call !== "function")
      return false;
    if (typeof value2.apply !== "function")
      return false;
  } catch (error) {
    return false;
  }
  return !isPrototype(value2);
};
var isFunction$2 = is$3;
var classRe = /^\s*class[\s{/}]/, functionToString = Function.prototype.toString;
var is$2 = function(value2) {
  if (!isFunction$2(value2))
    return false;
  if (classRe.test(functionToString.call(value2)))
    return false;
  return true;
};
var isImplemented$6 = function() {
  var assign2 = Object.assign, obj;
  if (typeof assign2 !== "function")
    return false;
  obj = { foo: "raz" };
  assign2(obj, { bar: "dwa" }, { trzy: "trzy" });
  return obj.foo + obj.bar + obj.trzy === "razdwatrzy";
};
var isImplemented$5 = function() {
  try {
    Object.keys("primitive");
    return true;
  } catch (e2) {
    return false;
  }
};
var isValue$8 = isValue$c;
var keys$3 = Object.keys;
var shim$4 = function(object2) {
  return keys$3(isValue$8(object2) ? Object(object2) : object2);
};
var keys$2 = isImplemented$5() ? Object.keys : shim$4;
var keys$1 = keys$2, value$4 = validValue$1, max$1 = Math.max;
var shim$3 = function(dest, src) {
  var error, i2, length = max$1(arguments.length, 2), assign2;
  dest = Object(value$4(dest));
  assign2 = function(key) {
    try {
      dest[key] = src[key];
    } catch (e2) {
      if (!error)
        error = e2;
    }
  };
  for (i2 = 1; i2 < length; ++i2) {
    src = arguments[i2];
    keys$1(src).forEach(assign2);
  }
  if (error !== void 0)
    throw error;
  return dest;
};
var assign$3 = isImplemented$6() ? Object.assign : shim$3;
var isValue$7 = isValue$c;
var forEach$2 = Array.prototype.forEach, create$8 = Object.create;
var process = function(src, obj) {
  var key;
  for (key in src)
    obj[key] = src[key];
};
var normalizeOptions$1 = function(opts1) {
  var result = create$8(null);
  forEach$2.call(arguments, function(options) {
    if (!isValue$7(options))
      return;
    process(Object(options), result);
  });
  return result;
};
var str = "razdwatrzy";
var isImplemented$4 = function() {
  if (typeof str.contains !== "function")
    return false;
  return str.contains("dwa") === true && str.contains("foo") === false;
};
var indexOf = String.prototype.indexOf;
var shim$2 = function(searchString) {
  return indexOf.call(this, searchString, arguments[1]) > -1;
};
var contains$2 = isImplemented$4() ? String.prototype.contains : shim$2;
var isValue$6 = is$6, isPlainFunction = is$2, assign$2 = assign$3, normalizeOpts = normalizeOptions$1, contains$1 = contains$2;
var d$b = d$c.exports = function(dscr, value2) {
  var c2, e2, w2, options, desc2;
  if (arguments.length < 2 || typeof dscr !== "string") {
    options = value2;
    value2 = dscr;
    dscr = null;
  } else {
    options = arguments[2];
  }
  if (isValue$6(dscr)) {
    c2 = contains$1.call(dscr, "c");
    e2 = contains$1.call(dscr, "e");
    w2 = contains$1.call(dscr, "w");
  } else {
    c2 = w2 = true;
    e2 = false;
  }
  desc2 = { value: value2, configurable: c2, enumerable: e2, writable: w2 };
  return !options ? desc2 : assign$2(normalizeOpts(options), desc2);
};
d$b.gs = function(dscr, get2, set) {
  var c2, e2, options, desc2;
  if (typeof dscr !== "string") {
    options = set;
    set = get2;
    get2 = dscr;
    dscr = null;
  } else {
    options = arguments[3];
  }
  if (!isValue$6(get2)) {
    get2 = void 0;
  } else if (!isPlainFunction(get2)) {
    options = get2;
    get2 = set = void 0;
  } else if (!isValue$6(set)) {
    set = void 0;
  } else if (!isPlainFunction(set)) {
    options = set;
    set = void 0;
  }
  if (isValue$6(dscr)) {
    c2 = contains$1.call(dscr, "c");
    e2 = contains$1.call(dscr, "e");
  } else {
    c2 = true;
    e2 = false;
  }
  desc2 = { get: get2, set, configurable: c2, enumerable: e2 };
  return !options ? desc2 : assign$2(normalizeOpts(options), desc2);
};
var objToString$2 = Object.prototype.toString, id$1 = objToString$2.call(function() {
  return arguments;
}());
var isArguments$4 = function(value2) {
  return objToString$2.call(value2) === id$1;
};
var objToString$1 = Object.prototype.toString, id = objToString$1.call("");
var isString$4 = function(value2) {
  return typeof value2 === "string" || value2 && typeof value2 === "object" && (value2 instanceof String || objToString$1.call(value2) === id) || false;
};
var array = { exports: {} };
var isImplemented$3 = function() {
  if (typeof globalThis !== "object")
    return false;
  if (!globalThis)
    return false;
  return globalThis.Array === Array;
};
var naiveFallback = function() {
  if (typeof self === "object" && self)
    return self;
  if (typeof window === "object" && window)
    return window;
  throw new Error("Unable to resolve global `this`");
};
var implementation = function() {
  if (this)
    return this;
  try {
    Object.defineProperty(Object.prototype, "__global__", {
      get: function() {
        return this;
      },
      configurable: true
    });
  } catch (error) {
    return naiveFallback();
  }
  try {
    if (!__global__)
      return naiveFallback();
    return __global__;
  } finally {
    delete Object.prototype.__global__;
  }
}();
var globalThis_1 = isImplemented$3() ? globalThis : implementation;
var global$1 = globalThis_1, validTypes = { object: true, symbol: true };
var isImplemented$2 = function() {
  var Symbol4 = global$1.Symbol;
  var symbol;
  if (typeof Symbol4 !== "function")
    return false;
  symbol = Symbol4("test symbol");
  try {
    String(symbol);
  } catch (e2) {
    return false;
  }
  if (!validTypes[typeof Symbol4.iterator])
    return false;
  if (!validTypes[typeof Symbol4.toPrimitive])
    return false;
  if (!validTypes[typeof Symbol4.toStringTag])
    return false;
  return true;
};
var isSymbol$1 = function(value2) {
  if (!value2)
    return false;
  if (typeof value2 === "symbol")
    return true;
  if (!value2.constructor)
    return false;
  if (value2.constructor.name !== "Symbol")
    return false;
  return value2[value2.constructor.toStringTag] === "Symbol";
};
var isSymbol = isSymbol$1;
var validateSymbol$2 = function(value2) {
  if (!isSymbol(value2))
    throw new TypeError(value2 + " is not a symbol");
  return value2;
};
var d$a = d$c.exports;
var create$7 = Object.create, defineProperty$7 = Object.defineProperty, objPrototype = Object.prototype;
var created = create$7(null);
var generateName$1 = function(desc2) {
  var postfix = 0, name2, ie11BugWorkaround;
  while (created[desc2 + (postfix || "")])
    ++postfix;
  desc2 += postfix || "";
  created[desc2] = true;
  name2 = "@@" + desc2;
  defineProperty$7(objPrototype, name2, d$a.gs(null, function(value2) {
    if (ie11BugWorkaround)
      return;
    ie11BugWorkaround = true;
    defineProperty$7(this, name2, d$a(value2));
    ie11BugWorkaround = false;
  }));
  return name2;
};
var d$9 = d$c.exports, NativeSymbol$1 = globalThis_1.Symbol;
var standardSymbols = function(SymbolPolyfill2) {
  return Object.defineProperties(SymbolPolyfill2, {
    hasInstance: d$9("", NativeSymbol$1 && NativeSymbol$1.hasInstance || SymbolPolyfill2("hasInstance")),
    isConcatSpreadable: d$9("", NativeSymbol$1 && NativeSymbol$1.isConcatSpreadable || SymbolPolyfill2("isConcatSpreadable")),
    iterator: d$9("", NativeSymbol$1 && NativeSymbol$1.iterator || SymbolPolyfill2("iterator")),
    match: d$9("", NativeSymbol$1 && NativeSymbol$1.match || SymbolPolyfill2("match")),
    replace: d$9("", NativeSymbol$1 && NativeSymbol$1.replace || SymbolPolyfill2("replace")),
    search: d$9("", NativeSymbol$1 && NativeSymbol$1.search || SymbolPolyfill2("search")),
    species: d$9("", NativeSymbol$1 && NativeSymbol$1.species || SymbolPolyfill2("species")),
    split: d$9("", NativeSymbol$1 && NativeSymbol$1.split || SymbolPolyfill2("split")),
    toPrimitive: d$9("", NativeSymbol$1 && NativeSymbol$1.toPrimitive || SymbolPolyfill2("toPrimitive")),
    toStringTag: d$9("", NativeSymbol$1 && NativeSymbol$1.toStringTag || SymbolPolyfill2("toStringTag")),
    unscopables: d$9("", NativeSymbol$1 && NativeSymbol$1.unscopables || SymbolPolyfill2("unscopables"))
  });
};
var d$8 = d$c.exports, validateSymbol$1 = validateSymbol$2;
var registry = /* @__PURE__ */ Object.create(null);
var symbolRegistry = function(SymbolPolyfill2) {
  return Object.defineProperties(SymbolPolyfill2, {
    for: d$8(function(key) {
      if (registry[key])
        return registry[key];
      return registry[key] = SymbolPolyfill2(String(key));
    }),
    keyFor: d$8(function(symbol) {
      var key;
      validateSymbol$1(symbol);
      for (key in registry) {
        if (registry[key] === symbol)
          return key;
      }
      return void 0;
    })
  });
};
var d$7 = d$c.exports, validateSymbol = validateSymbol$2, NativeSymbol = globalThis_1.Symbol, generateName = generateName$1, setupStandardSymbols = standardSymbols, setupSymbolRegistry = symbolRegistry;
var create$6 = Object.create, defineProperties$1 = Object.defineProperties, defineProperty$6 = Object.defineProperty;
var SymbolPolyfill, HiddenSymbol, isNativeSafe;
if (typeof NativeSymbol === "function") {
  try {
    String(NativeSymbol());
    isNativeSafe = true;
  } catch (ignore2) {
  }
} else {
  NativeSymbol = null;
}
HiddenSymbol = function Symbol2(description) {
  if (this instanceof HiddenSymbol)
    throw new TypeError("Symbol is not a constructor");
  return SymbolPolyfill(description);
};
var polyfill$1 = SymbolPolyfill = function Symbol3(description) {
  var symbol;
  if (this instanceof Symbol3)
    throw new TypeError("Symbol is not a constructor");
  if (isNativeSafe)
    return NativeSymbol(description);
  symbol = create$6(HiddenSymbol.prototype);
  description = description === void 0 ? "" : String(description);
  return defineProperties$1(symbol, {
    __description__: d$7("", description),
    __name__: d$7("", generateName(description))
  });
};
setupStandardSymbols(SymbolPolyfill);
setupSymbolRegistry(SymbolPolyfill);
defineProperties$1(HiddenSymbol.prototype, {
  constructor: d$7(SymbolPolyfill),
  toString: d$7("", function() {
    return this.__name__;
  })
});
defineProperties$1(SymbolPolyfill.prototype, {
  toString: d$7(function() {
    return "Symbol (" + validateSymbol(this).__description__ + ")";
  }),
  valueOf: d$7(function() {
    return validateSymbol(this);
  })
});
defineProperty$6(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d$7("", function() {
  var symbol = validateSymbol(this);
  if (typeof symbol === "symbol")
    return symbol;
  return symbol.toString();
}));
defineProperty$6(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d$7("c", "Symbol"));
defineProperty$6(HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d$7("c", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));
defineProperty$6(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d$7("c", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));
var es6Symbol = isImplemented$2() ? globalThis_1.Symbol : polyfill$1;
var value$3 = validValue$1;
var clear$1 = function() {
  value$3(this).length = 0;
  return this;
};
var validCallable = function(fn2) {
  if (typeof fn2 !== "function")
    throw new TypeError(fn2 + " is not a function");
  return fn2;
};
var isValue$5 = is$6, isObject$1 = is$5;
var objectToString = Object.prototype.toString;
var coerce = function(value2) {
  if (!isValue$5(value2))
    return null;
  if (isObject$1(value2)) {
    var valueToString = value2.toString;
    if (typeof valueToString !== "function")
      return null;
    if (valueToString === objectToString)
      return null;
  }
  try {
    return "" + value2;
  } catch (error) {
    return null;
  }
};
var safeToString$1 = function(value2) {
  try {
    return value2.toString();
  } catch (error) {
    try {
      return String(value2);
    } catch (error2) {
      return null;
    }
  }
};
var safeToString = safeToString$1;
var reNewLine = /[\n\r\u2028\u2029]/g;
var toShortString$1 = function(value2) {
  var string2 = safeToString(value2);
  if (string2 === null)
    return "<Non-coercible to string value>";
  if (string2.length > 100)
    string2 = string2.slice(0, 99) + "\u2026";
  string2 = string2.replace(reNewLine, function(char) {
    switch (char) {
      case "\n":
        return "\\n";
      case "\r":
        return "\\r";
      case "\u2028":
        return "\\u2028";
      case "\u2029":
        return "\\u2029";
      default:
        throw new Error("Unexpected character");
    }
  });
  return string2;
};
var isValue$4 = is$6, isObject = is$5, stringCoerce = coerce, toShortString = toShortString$1;
var resolveMessage = function(message, value2) {
  return message.replace("%v", toShortString(value2));
};
var resolveException$2 = function(value2, defaultMessage, inputOptions) {
  if (!isObject(inputOptions))
    throw new TypeError(resolveMessage(defaultMessage, value2));
  if (!isValue$4(value2)) {
    if ("default" in inputOptions)
      return inputOptions["default"];
    if (inputOptions.isOptional)
      return null;
  }
  var errorMessage = stringCoerce(inputOptions.errorMessage);
  if (!isValue$4(errorMessage))
    errorMessage = defaultMessage;
  throw new TypeError(resolveMessage(errorMessage, value2));
};
var resolveException$1 = resolveException$2, is$1 = is$6;
var ensure$1 = function(value2) {
  if (is$1(value2))
    return value2;
  return resolveException$1(value2, "Cannot use %v", arguments[1]);
};
var resolveException = resolveException$2, is = is$2;
var ensure = function(value2) {
  if (is(value2))
    return value2;
  return resolveException(value2, "%v is not a plain function", arguments[1]);
};
var isImplemented$1 = function() {
  var from2 = Array.from, arr, result;
  if (typeof from2 !== "function")
    return false;
  arr = ["raz", "dwa"];
  result = from2(arr);
  return Boolean(result && result !== arr && result[1] === "dwa");
};
var objToString = Object.prototype.toString, isFunctionStringTag = RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);
var isFunction$1 = function(value2) {
  return typeof value2 === "function" && isFunctionStringTag(objToString.call(value2));
};
var isImplemented = function() {
  var sign2 = Math.sign;
  if (typeof sign2 !== "function")
    return false;
  return sign2(10) === 1 && sign2(-20) === -1;
};
var shim$1 = function(value2) {
  value2 = Number(value2);
  if (isNaN(value2) || value2 === 0)
    return value2;
  return value2 > 0 ? 1 : -1;
};
var sign$1 = isImplemented() ? Math.sign : shim$1;
var sign = sign$1, abs = Math.abs, floor = Math.floor;
var toInteger$1 = function(value2) {
  if (isNaN(value2))
    return 0;
  value2 = Number(value2);
  if (value2 === 0 || !isFinite(value2))
    return value2;
  return sign(value2) * floor(abs(value2));
};
var toInteger = toInteger$1, max = Math.max;
var toPosInteger = function(value2) {
  return max(0, toInteger(value2));
};
var iteratorSymbol$2 = es6Symbol.iterator, isArguments$3 = isArguments$4, isFunction = isFunction$1, toPosInt = toPosInteger, callable$4 = validCallable, validValue = validValue$1, isValue$3 = isValue$c, isString$3 = isString$4, isArray$3 = Array.isArray, call$3 = Function.prototype.call, desc = { configurable: true, enumerable: true, writable: true, value: null }, defineProperty$5 = Object.defineProperty;
var shim = function(arrayLike) {
  var mapFn = arguments[1], thisArg = arguments[2], Context, i2, j2, arr, length, code, iterator, result, getIterator2, value2;
  arrayLike = Object(validValue(arrayLike));
  if (isValue$3(mapFn))
    callable$4(mapFn);
  if (!this || this === Array || !isFunction(this)) {
    if (!mapFn) {
      if (isArguments$3(arrayLike)) {
        length = arrayLike.length;
        if (length !== 1)
          return Array.apply(null, arrayLike);
        arr = new Array(1);
        arr[0] = arrayLike[0];
        return arr;
      }
      if (isArray$3(arrayLike)) {
        arr = new Array(length = arrayLike.length);
        for (i2 = 0; i2 < length; ++i2)
          arr[i2] = arrayLike[i2];
        return arr;
      }
    }
    arr = [];
  } else {
    Context = this;
  }
  if (!isArray$3(arrayLike)) {
    if ((getIterator2 = arrayLike[iteratorSymbol$2]) !== void 0) {
      iterator = callable$4(getIterator2).call(arrayLike);
      if (Context)
        arr = new Context();
      result = iterator.next();
      i2 = 0;
      while (!result.done) {
        value2 = mapFn ? call$3.call(mapFn, thisArg, result.value, i2) : result.value;
        if (Context) {
          desc.value = value2;
          defineProperty$5(arr, i2, desc);
        } else {
          arr[i2] = value2;
        }
        result = iterator.next();
        ++i2;
      }
      length = i2;
    } else if (isString$3(arrayLike)) {
      length = arrayLike.length;
      if (Context)
        arr = new Context();
      for (i2 = 0, j2 = 0; i2 < length; ++i2) {
        value2 = arrayLike[i2];
        if (i2 + 1 < length) {
          code = value2.charCodeAt(0);
          if (code >= 55296 && code <= 56319)
            value2 += arrayLike[++i2];
        }
        value2 = mapFn ? call$3.call(mapFn, thisArg, value2, j2) : value2;
        if (Context) {
          desc.value = value2;
          defineProperty$5(arr, j2, desc);
        } else {
          arr[j2] = value2;
        }
        ++j2;
      }
      length = j2;
    }
  }
  if (length === void 0) {
    length = toPosInt(arrayLike.length);
    if (Context)
      arr = new Context(length);
    for (i2 = 0; i2 < length; ++i2) {
      value2 = mapFn ? call$3.call(mapFn, thisArg, arrayLike[i2], i2) : arrayLike[i2];
      if (Context) {
        desc.value = value2;
        defineProperty$5(arr, i2, desc);
      } else {
        arr[i2] = value2;
      }
    }
  }
  if (Context) {
    desc.value = null;
    arr.length = length;
  }
  return arr;
};
var from = isImplemented$1() ? Array.from : shim;
var aFrom = from, assign$1 = assign$3, value$2 = validValue$1;
var copy$2 = function(obj) {
  var copy2 = Object(value$2(obj)), propertyNames = arguments[1], options = Object(arguments[2]);
  if (copy2 !== obj && !propertyNames)
    return copy2;
  var result = {};
  if (propertyNames) {
    aFrom(propertyNames, function(propertyName) {
      if (options.ensure || propertyName in obj)
        result[propertyName] = obj[propertyName];
    });
  } else {
    assign$1(result, obj);
  }
  return result;
};
var callable$3 = validCallable, value$1 = validValue$1, bind$1 = Function.prototype.bind, call$2 = Function.prototype.call, keys = Object.keys, objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;
var _iterate = function(method, defVal) {
  return function(obj, cb) {
    var list, thisArg = arguments[2], compareFn = arguments[3];
    obj = Object(value$1(obj));
    callable$3(cb);
    list = keys(obj);
    if (compareFn) {
      list.sort(typeof compareFn === "function" ? bind$1.call(compareFn, obj) : void 0);
    }
    if (typeof method !== "function")
      method = list[method];
    return call$2.call(method, list, function(key, index) {
      if (!objPropertyIsEnumerable.call(obj, key))
        return defVal;
      return call$2.call(cb, thisArg, obj[key], key, obj, index);
    });
  };
};
var forEach$1 = _iterate("forEach");
var callable$2 = validCallable, forEach = forEach$1, call$1 = Function.prototype.call;
var map$1 = function(obj, cb) {
  var result = {}, thisArg = arguments[2];
  callable$2(cb);
  forEach(obj, function(value2, key, targetObj, index) {
    result[key] = call$1.call(cb, thisArg, value2, key, targetObj, index);
  });
  return result;
};
var isValue$2 = is$6, ensureValue$1 = ensure$1, ensurePlainFunction = ensure, copy$1 = copy$2, normalizeOptions = normalizeOptions$1, map = map$1;
var bind = Function.prototype.bind, defineProperty$4 = Object.defineProperty, hasOwnProperty$2 = Object.prototype.hasOwnProperty, define;
define = function(name2, desc2, options) {
  var value2 = ensureValue$1(desc2) && ensurePlainFunction(desc2.value), dgs;
  dgs = copy$1(desc2);
  delete dgs.writable;
  delete dgs.value;
  dgs.get = function() {
    if (!options.overwriteDefinition && hasOwnProperty$2.call(this, name2))
      return value2;
    desc2.value = bind.call(value2, options.resolveContext ? options.resolveContext(this) : this);
    defineProperty$4(this, name2, desc2);
    return this[name2];
  };
  return dgs;
};
var autoBind$1 = function(props) {
  var options = normalizeOptions(arguments[1]);
  if (isValue$2(options.resolveContext))
    ensurePlainFunction(options.resolveContext);
  return map(props, function(desc2, name2) {
    return define(name2, desc2, options);
  });
};
var clear = clear$1, assign = assign$3, callable$1 = validCallable, value = validValue$1, d$6 = d$c.exports, autoBind = autoBind$1, Symbol$3 = es6Symbol;
var defineProperty$3 = Object.defineProperty, defineProperties = Object.defineProperties, Iterator$2;
var es6Iterator = Iterator$2 = function(list, context) {
  if (!(this instanceof Iterator$2))
    throw new TypeError("Constructor requires 'new'");
  defineProperties(this, {
    __list__: d$6("w", value(list)),
    __context__: d$6("w", context),
    __nextIndex__: d$6("w", 0)
  });
  if (!context)
    return;
  callable$1(context.on);
  context.on("_add", this._onAdd);
  context.on("_delete", this._onDelete);
  context.on("_clear", this._onClear);
};
delete Iterator$2.prototype.constructor;
defineProperties(Iterator$2.prototype, assign({
  _next: d$6(function() {
    var i2;
    if (!this.__list__)
      return void 0;
    if (this.__redo__) {
      i2 = this.__redo__.shift();
      if (i2 !== void 0)
        return i2;
    }
    if (this.__nextIndex__ < this.__list__.length)
      return this.__nextIndex__++;
    this._unBind();
    return void 0;
  }),
  next: d$6(function() {
    return this._createResult(this._next());
  }),
  _createResult: d$6(function(i2) {
    if (i2 === void 0)
      return { done: true, value: void 0 };
    return { done: false, value: this._resolve(i2) };
  }),
  _resolve: d$6(function(i2) {
    return this.__list__[i2];
  }),
  _unBind: d$6(function() {
    this.__list__ = null;
    delete this.__redo__;
    if (!this.__context__)
      return;
    this.__context__.off("_add", this._onAdd);
    this.__context__.off("_delete", this._onDelete);
    this.__context__.off("_clear", this._onClear);
    this.__context__ = null;
  }),
  toString: d$6(function() {
    return "[object " + (this[Symbol$3.toStringTag] || "Object") + "]";
  })
}, autoBind({
  _onAdd: d$6(function(index) {
    if (index >= this.__nextIndex__)
      return;
    ++this.__nextIndex__;
    if (!this.__redo__) {
      defineProperty$3(this, "__redo__", d$6("c", [index]));
      return;
    }
    this.__redo__.forEach(function(redo, i2) {
      if (redo >= index)
        this.__redo__[i2] = ++redo;
    }, this);
    this.__redo__.push(index);
  }),
  _onDelete: d$6(function(index) {
    var i2;
    if (index >= this.__nextIndex__)
      return;
    --this.__nextIndex__;
    if (!this.__redo__)
      return;
    i2 = this.__redo__.indexOf(index);
    if (i2 !== -1)
      this.__redo__.splice(i2, 1);
    this.__redo__.forEach(function(redo, j2) {
      if (redo > index)
        this.__redo__[j2] = --redo;
    }, this);
  }),
  _onClear: d$6(function() {
    if (this.__redo__)
      clear.call(this.__redo__);
    this.__nextIndex__ = 0;
  })
})));
defineProperty$3(Iterator$2.prototype, Symbol$3.iterator, d$6(function() {
  return this;
}));
var setPrototypeOf$2 = setPrototypeOf$3, contains = contains$2, d$5 = d$c.exports, Symbol$2 = es6Symbol, Iterator$1 = es6Iterator;
var defineProperty$2 = Object.defineProperty, ArrayIterator$1;
ArrayIterator$1 = array.exports = function(arr, kind) {
  if (!(this instanceof ArrayIterator$1))
    throw new TypeError("Constructor requires 'new'");
  Iterator$1.call(this, arr);
  if (!kind)
    kind = "value";
  else if (contains.call(kind, "key+value"))
    kind = "key+value";
  else if (contains.call(kind, "key"))
    kind = "key";
  else
    kind = "value";
  defineProperty$2(this, "__kind__", d$5("", kind));
};
if (setPrototypeOf$2)
  setPrototypeOf$2(ArrayIterator$1, Iterator$1);
delete ArrayIterator$1.prototype.constructor;
ArrayIterator$1.prototype = Object.create(Iterator$1.prototype, {
  _resolve: d$5(function(i2) {
    if (this.__kind__ === "value")
      return this.__list__[i2];
    if (this.__kind__ === "key+value")
      return [i2, this.__list__[i2]];
    return i2;
  })
});
defineProperty$2(ArrayIterator$1.prototype, Symbol$2.toStringTag, d$5("c", "Array Iterator"));
var string = { exports: {} };
var setPrototypeOf$1 = setPrototypeOf$3, d$4 = d$c.exports, Symbol$1 = es6Symbol, Iterator = es6Iterator;
var defineProperty$1 = Object.defineProperty, StringIterator$1;
StringIterator$1 = string.exports = function(str2) {
  if (!(this instanceof StringIterator$1))
    throw new TypeError("Constructor requires 'new'");
  str2 = String(str2);
  Iterator.call(this, str2);
  defineProperty$1(this, "__length__", d$4("", str2.length));
};
if (setPrototypeOf$1)
  setPrototypeOf$1(StringIterator$1, Iterator);
delete StringIterator$1.prototype.constructor;
StringIterator$1.prototype = Object.create(Iterator.prototype, {
  _next: d$4(function() {
    if (!this.__list__)
      return void 0;
    if (this.__nextIndex__ < this.__length__)
      return this.__nextIndex__++;
    this._unBind();
    return void 0;
  }),
  _resolve: d$4(function(i2) {
    var char = this.__list__[i2], code;
    if (this.__nextIndex__ === this.__length__)
      return char;
    code = char.charCodeAt(0);
    if (code >= 55296 && code <= 56319)
      return char + this.__list__[this.__nextIndex__++];
    return char;
  })
});
defineProperty$1(StringIterator$1.prototype, Symbol$1.toStringTag, d$4("c", "String Iterator"));
var isArguments$2 = isArguments$4, isValue$1 = isValue$c, isString$2 = isString$4;
var iteratorSymbol$1 = es6Symbol.iterator, isArray$2 = Array.isArray;
var isIterable$1 = function(value2) {
  if (!isValue$1(value2))
    return false;
  if (isArray$2(value2))
    return true;
  if (isString$2(value2))
    return true;
  if (isArguments$2(value2))
    return true;
  return typeof value2[iteratorSymbol$1] === "function";
};
var isIterable = isIterable$1;
var validIterable = function(value2) {
  if (!isIterable(value2))
    throw new TypeError(value2 + " is not iterable");
  return value2;
};
var isArguments$1 = isArguments$4, isString$1 = isString$4, ArrayIterator = array.exports, StringIterator = string.exports, iterable = validIterable, iteratorSymbol = es6Symbol.iterator;
var get$1 = function(obj) {
  if (typeof iterable(obj)[iteratorSymbol] === "function")
    return obj[iteratorSymbol]();
  if (isArguments$1(obj))
    return new ArrayIterator(obj);
  if (isString$1(obj))
    return new StringIterator(obj);
  return new ArrayIterator(obj);
};
var isArguments = isArguments$4, callable = validCallable, isString = isString$4, get = get$1;
var isArray$1 = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;
var forOf$1 = function(iterable2, cb) {
  var mode, thisArg = arguments[2], result, doBreak, broken, i2, length, char, code;
  if (isArray$1(iterable2) || isArguments(iterable2))
    mode = "array";
  else if (isString(iterable2))
    mode = "string";
  else
    iterable2 = get(iterable2);
  callable(cb);
  doBreak = function() {
    broken = true;
  };
  if (mode === "array") {
    some.call(iterable2, function(value2) {
      call.call(cb, thisArg, value2, doBreak);
      return broken;
    });
    return;
  }
  if (mode === "string") {
    length = iterable2.length;
    for (i2 = 0; i2 < length; ++i2) {
      char = iterable2[i2];
      if (i2 + 1 < length) {
        code = char.charCodeAt(0);
        if (code >= 55296 && code <= 56319)
          char += iterable2[++i2];
      }
      call.call(cb, thisArg, char, doBreak);
      if (broken)
        break;
    }
    return;
  }
  result = iterable2.next();
  while (!result.done) {
    call.call(cb, thisArg, result.value, doBreak);
    if (broken)
      return;
    result = iterable2.next();
  }
};
var isNativeImplemented = function() {
  if (typeof WeakMap !== "function")
    return false;
  return Object.prototype.toString.call(/* @__PURE__ */ new WeakMap()) === "[object WeakMap]";
}();
var isValue = isValue$c, setPrototypeOf = setPrototypeOf$3, object = validObject, ensureValue = validValue$1, randomUniq = randomUniq$1, d$3 = d$c.exports, getIterator = get$1, forOf = forOf$1, toStringTagSymbol = es6Symbol.toStringTag, isNative = isNativeImplemented, isArray = Array.isArray, defineProperty = Object.defineProperty, objHasOwnProperty = Object.prototype.hasOwnProperty, getPrototypeOf = Object.getPrototypeOf, WeakMapPoly;
var polyfill = WeakMapPoly = function() {
  var iterable2 = arguments[0], self2;
  if (!(this instanceof WeakMapPoly))
    throw new TypeError("Constructor requires 'new'");
  self2 = isNative && setPrototypeOf && WeakMap !== WeakMapPoly ? setPrototypeOf(/* @__PURE__ */ new WeakMap(), getPrototypeOf(this)) : this;
  if (isValue(iterable2)) {
    if (!isArray(iterable2))
      iterable2 = getIterator(iterable2);
  }
  defineProperty(self2, "__weakMapData__", d$3("c", "$weakMap$" + randomUniq()));
  if (!iterable2)
    return self2;
  forOf(iterable2, function(val) {
    ensureValue(val);
    self2.set(val[0], val[1]);
  });
  return self2;
};
if (isNative) {
  if (setPrototypeOf)
    setPrototypeOf(WeakMapPoly, WeakMap);
  WeakMapPoly.prototype = Object.create(WeakMap.prototype, { constructor: d$3(WeakMapPoly) });
}
Object.defineProperties(WeakMapPoly.prototype, {
  delete: d$3(function(key) {
    if (objHasOwnProperty.call(object(key), this.__weakMapData__)) {
      delete key[this.__weakMapData__];
      return true;
    }
    return false;
  }),
  get: d$3(function(key) {
    if (!objHasOwnProperty.call(object(key), this.__weakMapData__))
      return void 0;
    return key[this.__weakMapData__];
  }),
  has: d$3(function(key) {
    return objHasOwnProperty.call(object(key), this.__weakMapData__);
  }),
  set: d$3(function(key, value2) {
    defineProperty(object(key), this.__weakMapData__, d$3("c", value2));
    return this;
  }),
  toString: d$3(function() {
    return "[object WeakMap]";
  })
});
defineProperty(WeakMapPoly.prototype, toStringTagSymbol, d$3("c", "WeakMap"));
var es6WeakMap = isImplemented$8() ? WeakMap : polyfill;
var basic$1 = [
  { name: "black", hex: "#000000" },
  { name: "blue", hex: "#0000FF" },
  { name: "cyan", hex: "#00FFFF" },
  { name: "green", hex: "#008000" },
  { name: "teal", hex: "#008080" },
  { name: "turquoise", hex: "#40E0D0" },
  { name: "indigo", hex: "#4B0082" },
  { name: "gray", hex: "#808080" },
  { name: "purple", hex: "#800080" },
  { name: "brown", hex: "#A52A2A" },
  { name: "tan", hex: "#D2B48C" },
  { name: "violet", hex: "#EE82EE" },
  { name: "beige", hex: "#F5F5DC" },
  { name: "fuchsia", hex: "#FF00FF" },
  { name: "gold", hex: "#FFD700" },
  { name: "magenta", hex: "#FF00FF" },
  { name: "orange", hex: "#FFA500" },
  { name: "pink", hex: "#FFC0CB" },
  { name: "red", hex: "#FF0000" },
  { name: "white", hex: "#FFFFFF" },
  { name: "yellow", hex: "#FFFF00" }
];
var html$3 = [
  { name: "aqua", hex: "#00FFFF" },
  { name: "aliceblue", hex: "#F0F8FF" },
  { name: "antiquewhite", hex: "#FAEBD7" },
  { name: "black", hex: "#000000" },
  { name: "blue", hex: "#0000FF" },
  { name: "cyan", hex: "#00FFFF" },
  { name: "darkblue", hex: "#00008B" },
  { name: "darkcyan", hex: "#008B8B" },
  { name: "darkgreen", hex: "#006400" },
  { name: "darkturquoise", hex: "#00CED1" },
  { name: "deepskyblue", hex: "#00BFFF" },
  { name: "green", hex: "#008000" },
  { name: "lime", hex: "#00FF00" },
  { name: "mediumblue", hex: "#0000CD" },
  { name: "mediumspringgreen", hex: "#00FA9A" },
  { name: "navy", hex: "#000080" },
  { name: "springgreen", hex: "#00FF7F" },
  { name: "teal", hex: "#008080" },
  { name: "midnightblue", hex: "#191970" },
  { name: "dodgerblue", hex: "#1E90FF" },
  { name: "lightseagreen", hex: "#20B2AA" },
  { name: "forestgreen", hex: "#228B22" },
  { name: "seagreen", hex: "#2E8B57" },
  { name: "darkslategray", hex: "#2F4F4F" },
  { name: "darkslategrey", hex: "#2F4F4F" },
  { name: "limegreen", hex: "#32CD32" },
  { name: "mediumseagreen", hex: "#3CB371" },
  { name: "turquoise", hex: "#40E0D0" },
  { name: "royalblue", hex: "#4169E1" },
  { name: "steelblue", hex: "#4682B4" },
  { name: "darkslateblue", hex: "#483D8B" },
  { name: "mediumturquoise", hex: "#48D1CC" },
  { name: "indigo", hex: "#4B0082" },
  { name: "darkolivegreen", hex: "#556B2F" },
  { name: "cadetblue", hex: "#5F9EA0" },
  { name: "cornflowerblue", hex: "#6495ED" },
  { name: "mediumaquamarine", hex: "#66CDAA" },
  { name: "dimgray", hex: "#696969" },
  { name: "dimgrey", hex: "#696969" },
  { name: "slateblue", hex: "#6A5ACD" },
  { name: "olivedrab", hex: "#6B8E23" },
  { name: "slategray", hex: "#708090" },
  { name: "slategrey", hex: "#708090" },
  { name: "lightslategray", hex: "#778899" },
  { name: "lightslategrey", hex: "#778899" },
  { name: "mediumslateblue", hex: "#7B68EE" },
  { name: "lawngreen", hex: "#7CFC00" },
  { name: "aquamarine", hex: "#7FFFD4" },
  { name: "chartreuse", hex: "#7FFF00" },
  { name: "gray", hex: "#808080" },
  { name: "grey", hex: "#808080" },
  { name: "maroon", hex: "#800000" },
  { name: "olive", hex: "#808000" },
  { name: "purple", hex: "#800080" },
  { name: "lightskyblue", hex: "#87CEFA" },
  { name: "skyblue", hex: "#87CEEB" },
  { name: "blueviolet", hex: "#8A2BE2" },
  { name: "darkmagenta", hex: "#8B008B" },
  { name: "darkred", hex: "#8B0000" },
  { name: "saddlebrown", hex: "#8B4513" },
  { name: "darkseagreen", hex: "#8FBC8F" },
  { name: "lightgreen", hex: "#90EE90" },
  { name: "mediumpurple", hex: "#9370DB" },
  { name: "darkviolet", hex: "#9400D3" },
  { name: "palegreen", hex: "#98FB98" },
  { name: "darkorchid", hex: "#9932CC" },
  { name: "yellowgreen", hex: "#9ACD32" },
  { name: "sienna", hex: "#A0522D" },
  { name: "brown", hex: "#A52A2A" },
  { name: "darkgray", hex: "#A9A9A9" },
  { name: "darkgrey", hex: "#A9A9A9" },
  { name: "greenyellow", hex: "#ADFF2F" },
  { name: "lightblue", hex: "#ADD8E6" },
  { name: "paleturquoise", hex: "#AFEEEE" },
  { name: "lightsteelblue", hex: "#B0C4DE" },
  { name: "powderblue", hex: "#B0E0E6" },
  { name: "firebrick", hex: "#B22222" },
  { name: "darkgoldenrod", hex: "#B8860B" },
  { name: "mediumorchid", hex: "#BA55D3" },
  { name: "rosybrown", hex: "#BC8F8F" },
  { name: "darkkhaki", hex: "#BDB76B" },
  { name: "silver", hex: "#C0C0C0" },
  { name: "mediumvioletred", hex: "#C71585" },
  { name: "indianred", hex: "#CD5C5C" },
  { name: "peru", hex: "#CD853F" },
  { name: "chocolate", hex: "#D2691E" },
  { name: "tan", hex: "#D2B48C" },
  { name: "lightgray", hex: "#D3D3D3" },
  { name: "lightgrey", hex: "#D3D3D3" },
  { name: "thistle", hex: "#D8BFD8" },
  { name: "goldenrod", hex: "#DAA520" },
  { name: "orchid", hex: "#DA70D6" },
  { name: "palevioletred", hex: "#DB7093" },
  { name: "crimson", hex: "#DC143C" },
  { name: "gainsboro", hex: "#DCDCDC" },
  { name: "plum", hex: "#DDA0DD" },
  { name: "burlywood", hex: "#DEB887" },
  { name: "lightcyan", hex: "#E0FFFF" },
  { name: "lavender", hex: "#E6E6FA" },
  { name: "darksalmon", hex: "#E9967A" },
  { name: "palegoldenrod", hex: "#EEE8AA" },
  { name: "violet", hex: "#EE82EE" },
  { name: "azure", hex: "#F0FFFF" },
  { name: "honeydew", hex: "#F0FFF0" },
  { name: "khaki", hex: "#F0E68C" },
  { name: "lightcoral", hex: "#F08080" },
  { name: "sandybrown", hex: "#F4A460" },
  { name: "beige", hex: "#F5F5DC" },
  { name: "mintcream", hex: "#F5FFFA" },
  { name: "wheat", hex: "#F5DEB3" },
  { name: "whitesmoke", hex: "#F5F5F5" },
  { name: "ghostwhite", hex: "#F8F8FF" },
  {
    name: "lightgoldenrodyellow",
    hex: "#FAFAD2"
  },
  { name: "linen", hex: "#FAF0E6" },
  { name: "salmon", hex: "#FA8072" },
  { name: "oldlace", hex: "#FDF5E6" },
  { name: "bisque", hex: "#FFE4C4" },
  { name: "blanchedalmond", hex: "#FFEBCD" },
  { name: "coral", hex: "#FF7F50" },
  { name: "cornsilk", hex: "#FFF8DC" },
  { name: "darkorange", hex: "#FF8C00" },
  { name: "deeppink", hex: "#FF1493" },
  { name: "floralwhite", hex: "#FFFAF0" },
  { name: "fuchsia", hex: "#FF00FF" },
  { name: "gold", hex: "#FFD700" },
  { name: "hotpink", hex: "#FF69B4" },
  { name: "ivory", hex: "#FFFFF0" },
  { name: "lavenderblush", hex: "#FFF0F5" },
  { name: "lemonchiffon", hex: "#FFFACD" },
  { name: "lightpink", hex: "#FFB6C1" },
  { name: "lightsalmon", hex: "#FFA07A" },
  { name: "lightyellow", hex: "#FFFFE0" },
  { name: "magenta", hex: "#FF00FF" },
  { name: "mistyrose", hex: "#FFE4E1" },
  { name: "moccasin", hex: "#FFE4B5" },
  { name: "navajowhite", hex: "#FFDEAD" },
  { name: "orange", hex: "#FFA500" },
  { name: "orangered", hex: "#FF4500" },
  { name: "papayawhip", hex: "#FFEFD5" },
  { name: "peachpuff", hex: "#FFDAB9" },
  { name: "pink", hex: "#FFC0CB" },
  { name: "red", hex: "#FF0000" },
  { name: "seashell", hex: "#FFF5EE" },
  { name: "snow", hex: "#FFFAFA" },
  { name: "tomato", hex: "#FF6347" },
  { name: "white", hex: "#FFFFFF" },
  { name: "yellow", hex: "#FFFF00" }
];
var ntc = [
  {
    "name": "Black",
    "hex": "000000"
  },
  {
    "name": "Navy Blue",
    "hex": "000080"
  },
  {
    "name": "Dark Blue",
    "hex": "0000C8"
  },
  {
    "name": "Blue",
    "hex": "0000FF"
  },
  {
    "name": "Stratos",
    "hex": "000741"
  },
  {
    "name": "Swamp",
    "hex": "001B1C"
  },
  {
    "name": "Resolution Blue",
    "hex": "002387"
  },
  {
    "name": "Deep Fir",
    "hex": "002900"
  },
  {
    "name": "Burnham",
    "hex": "002E20"
  },
  {
    "name": "International Klein Blue",
    "hex": "002FA7"
  },
  {
    "name": "Prussian Blue",
    "hex": "003153"
  },
  {
    "name": "Midnight Blue",
    "hex": "003366"
  },
  {
    "name": "Smalt",
    "hex": "003399"
  },
  {
    "name": "Deep Teal",
    "hex": "003532"
  },
  {
    "name": "Cyprus",
    "hex": "003E40"
  },
  {
    "name": "Kaitoke Green",
    "hex": "004620"
  },
  {
    "name": "Cobalt",
    "hex": "0047AB"
  },
  {
    "name": "Crusoe",
    "hex": "004816"
  },
  {
    "name": "Sherpa Blue",
    "hex": "004950"
  },
  {
    "name": "Endeavour",
    "hex": "0056A7"
  },
  {
    "name": "Camarone",
    "hex": "00581A"
  },
  {
    "name": "Science Blue",
    "hex": "0066CC"
  },
  {
    "name": "Blue Ribbon",
    "hex": "0066FF"
  },
  {
    "name": "Tropical Rain Forest",
    "hex": "00755E"
  },
  {
    "name": "Allports",
    "hex": "0076A3"
  },
  {
    "name": "Deep Cerulean",
    "hex": "007BA7"
  },
  {
    "name": "Lochmara",
    "hex": "007EC7"
  },
  {
    "name": "Azure Radiance",
    "hex": "007FFF"
  },
  {
    "name": "Teal",
    "hex": "008080"
  },
  {
    "name": "Bondi Blue",
    "hex": "0095B6"
  },
  {
    "name": "Pacific Blue",
    "hex": "009DC4"
  },
  {
    "name": "Persian Green",
    "hex": "00A693"
  },
  {
    "name": "Jade",
    "hex": "00A86B"
  },
  {
    "name": "Caribbean Green",
    "hex": "00CC99"
  },
  {
    "name": "Robin's Egg Blue",
    "hex": "00CCCC"
  },
  {
    "name": "Green",
    "hex": "00FF00"
  },
  {
    "name": "Spring Green",
    "hex": "00FF7F"
  },
  {
    "name": "Cyan / Aqua",
    "hex": "00FFFF"
  },
  {
    "name": "Blue Charcoal",
    "hex": "010D1A"
  },
  {
    "name": "Midnight",
    "hex": "011635"
  },
  {
    "name": "Holly",
    "hex": "011D13"
  },
  {
    "name": "Daintree",
    "hex": "012731"
  },
  {
    "name": "Cardin Green",
    "hex": "01361C"
  },
  {
    "name": "County Green",
    "hex": "01371A"
  },
  {
    "name": "Astronaut Blue",
    "hex": "013E62"
  },
  {
    "name": "Regal Blue",
    "hex": "013F6A"
  },
  {
    "name": "Aqua Deep",
    "hex": "014B43"
  },
  {
    "name": "Orient",
    "hex": "015E85"
  },
  {
    "name": "Blue Stone",
    "hex": "016162"
  },
  {
    "name": "Fun Green",
    "hex": "016D39"
  },
  {
    "name": "Pine Green",
    "hex": "01796F"
  },
  {
    "name": "Blue Lagoon",
    "hex": "017987"
  },
  {
    "name": "Deep Sea",
    "hex": "01826B"
  },
  {
    "name": "Green Haze",
    "hex": "01A368"
  },
  {
    "name": "English Holly",
    "hex": "022D15"
  },
  {
    "name": "Sherwood Green",
    "hex": "02402C"
  },
  {
    "name": "Congress Blue",
    "hex": "02478E"
  },
  {
    "name": "Evening Sea",
    "hex": "024E46"
  },
  {
    "name": "Bahama Blue",
    "hex": "026395"
  },
  {
    "name": "Observatory",
    "hex": "02866F"
  },
  {
    "name": "Cerulean",
    "hex": "02A4D3"
  },
  {
    "name": "Tangaroa",
    "hex": "03163C"
  },
  {
    "name": "Green Vogue",
    "hex": "032B52"
  },
  {
    "name": "Mosque",
    "hex": "036A6E"
  },
  {
    "name": "Midnight Moss",
    "hex": "041004"
  },
  {
    "name": "Black Pearl",
    "hex": "041322"
  },
  {
    "name": "Blue Whale",
    "hex": "042E4C"
  },
  {
    "name": "Zuccini",
    "hex": "044022"
  },
  {
    "name": "Teal Blue",
    "hex": "044259"
  },
  {
    "name": "Deep Cove",
    "hex": "051040"
  },
  {
    "name": "Gulf Blue",
    "hex": "051657"
  },
  {
    "name": "Venice Blue",
    "hex": "055989"
  },
  {
    "name": "Watercourse",
    "hex": "056F57"
  },
  {
    "name": "Catalina Blue",
    "hex": "062A78"
  },
  {
    "name": "Tiber",
    "hex": "063537"
  },
  {
    "name": "Gossamer",
    "hex": "069B81"
  },
  {
    "name": "Niagara",
    "hex": "06A189"
  },
  {
    "name": "Tarawera",
    "hex": "073A50"
  },
  {
    "name": "Jaguar",
    "hex": "080110"
  },
  {
    "name": "Black Bean",
    "hex": "081910"
  },
  {
    "name": "Deep Sapphire",
    "hex": "082567"
  },
  {
    "name": "Elf Green",
    "hex": "088370"
  },
  {
    "name": "Bright Turquoise",
    "hex": "08E8DE"
  },
  {
    "name": "Downriver",
    "hex": "092256"
  },
  {
    "name": "Palm Green",
    "hex": "09230F"
  },
  {
    "name": "Madison",
    "hex": "09255D"
  },
  {
    "name": "Bottle Green",
    "hex": "093624"
  },
  {
    "name": "Deep Sea Green",
    "hex": "095859"
  },
  {
    "name": "Salem",
    "hex": "097F4B"
  },
  {
    "name": "Black Russian",
    "hex": "0A001C"
  },
  {
    "name": "Dark Fern",
    "hex": "0A480D"
  },
  {
    "name": "Japanese Laurel",
    "hex": "0A6906"
  },
  {
    "name": "Atoll",
    "hex": "0A6F75"
  },
  {
    "name": "Cod Gray",
    "hex": "0B0B0B"
  },
  {
    "name": "Marshland",
    "hex": "0B0F08"
  },
  {
    "name": "Gordons Green",
    "hex": "0B1107"
  },
  {
    "name": "Black Forest",
    "hex": "0B1304"
  },
  {
    "name": "San Felix",
    "hex": "0B6207"
  },
  {
    "name": "Malachite",
    "hex": "0BDA51"
  },
  {
    "name": "Ebony",
    "hex": "0C0B1D"
  },
  {
    "name": "Woodsmoke",
    "hex": "0C0D0F"
  },
  {
    "name": "Racing Green",
    "hex": "0C1911"
  },
  {
    "name": "Surfie Green",
    "hex": "0C7A79"
  },
  {
    "name": "Blue Chill",
    "hex": "0C8990"
  },
  {
    "name": "Black Rock",
    "hex": "0D0332"
  },
  {
    "name": "Bunker",
    "hex": "0D1117"
  },
  {
    "name": "Aztec",
    "hex": "0D1C19"
  },
  {
    "name": "Bush",
    "hex": "0D2E1C"
  },
  {
    "name": "Cinder",
    "hex": "0E0E18"
  },
  {
    "name": "Firefly",
    "hex": "0E2A30"
  },
  {
    "name": "Torea Bay",
    "hex": "0F2D9E"
  },
  {
    "name": "Vulcan",
    "hex": "10121D"
  },
  {
    "name": "Green Waterloo",
    "hex": "101405"
  },
  {
    "name": "Eden",
    "hex": "105852"
  },
  {
    "name": "Arapawa",
    "hex": "110C6C"
  },
  {
    "name": "Ultramarine",
    "hex": "120A8F"
  },
  {
    "name": "Elephant",
    "hex": "123447"
  },
  {
    "name": "Jewel",
    "hex": "126B40"
  },
  {
    "name": "Diesel",
    "hex": "130000"
  },
  {
    "name": "Asphalt",
    "hex": "130A06"
  },
  {
    "name": "Blue Zodiac",
    "hex": "13264D"
  },
  {
    "name": "Parsley",
    "hex": "134F19"
  },
  {
    "name": "Nero",
    "hex": "140600"
  },
  {
    "name": "Tory Blue",
    "hex": "1450AA"
  },
  {
    "name": "Bunting",
    "hex": "151F4C"
  },
  {
    "name": "Denim",
    "hex": "1560BD"
  },
  {
    "name": "Genoa",
    "hex": "15736B"
  },
  {
    "name": "Mirage",
    "hex": "161928"
  },
  {
    "name": "Hunter Green",
    "hex": "161D10"
  },
  {
    "name": "Big Stone",
    "hex": "162A40"
  },
  {
    "name": "Celtic",
    "hex": "163222"
  },
  {
    "name": "Timber Green",
    "hex": "16322C"
  },
  {
    "name": "Gable Green",
    "hex": "163531"
  },
  {
    "name": "Pine Tree",
    "hex": "171F04"
  },
  {
    "name": "Chathams Blue",
    "hex": "175579"
  },
  {
    "name": "Deep Forest Green",
    "hex": "182D09"
  },
  {
    "name": "Blumine",
    "hex": "18587A"
  },
  {
    "name": "Palm Leaf",
    "hex": "19330E"
  },
  {
    "name": "Nile Blue",
    "hex": "193751"
  },
  {
    "name": "Fun Blue",
    "hex": "1959A8"
  },
  {
    "name": "Lucky Point",
    "hex": "1A1A68"
  },
  {
    "name": "Mountain Meadow",
    "hex": "1AB385"
  },
  {
    "name": "Tolopea",
    "hex": "1B0245"
  },
  {
    "name": "Haiti",
    "hex": "1B1035"
  },
  {
    "name": "Deep Koamaru",
    "hex": "1B127B"
  },
  {
    "name": "Acadia",
    "hex": "1B1404"
  },
  {
    "name": "Seaweed",
    "hex": "1B2F11"
  },
  {
    "name": "Biscay",
    "hex": "1B3162"
  },
  {
    "name": "Matisse",
    "hex": "1B659D"
  },
  {
    "name": "Crowshead",
    "hex": "1C1208"
  },
  {
    "name": "Rangoon Green",
    "hex": "1C1E13"
  },
  {
    "name": "Persian Blue",
    "hex": "1C39BB"
  },
  {
    "name": "Everglade",
    "hex": "1C402E"
  },
  {
    "name": "Elm",
    "hex": "1C7C7D"
  },
  {
    "name": "Green Pea",
    "hex": "1D6142"
  },
  {
    "name": "Creole",
    "hex": "1E0F04"
  },
  {
    "name": "Karaka",
    "hex": "1E1609"
  },
  {
    "name": "El Paso",
    "hex": "1E1708"
  },
  {
    "name": "Cello",
    "hex": "1E385B"
  },
  {
    "name": "Te Papa Green",
    "hex": "1E433C"
  },
  {
    "name": "Dodger Blue",
    "hex": "1E90FF"
  },
  {
    "name": "Eastern Blue",
    "hex": "1E9AB0"
  },
  {
    "name": "Night Rider",
    "hex": "1F120F"
  },
  {
    "name": "Java",
    "hex": "1FC2C2"
  },
  {
    "name": "Jacksons Purple",
    "hex": "20208D"
  },
  {
    "name": "Cloud Burst",
    "hex": "202E54"
  },
  {
    "name": "Blue Dianne",
    "hex": "204852"
  },
  {
    "name": "Eternity",
    "hex": "211A0E"
  },
  {
    "name": "Deep Blue",
    "hex": "220878"
  },
  {
    "name": "Forest Green",
    "hex": "228B22"
  },
  {
    "name": "Mallard",
    "hex": "233418"
  },
  {
    "name": "Violet",
    "hex": "240A40"
  },
  {
    "name": "Kilamanjaro",
    "hex": "240C02"
  },
  {
    "name": "Log Cabin",
    "hex": "242A1D"
  },
  {
    "name": "Black Olive",
    "hex": "242E16"
  },
  {
    "name": "Green House",
    "hex": "24500F"
  },
  {
    "name": "Graphite",
    "hex": "251607"
  },
  {
    "name": "Cannon Black",
    "hex": "251706"
  },
  {
    "name": "Port Gore",
    "hex": "251F4F"
  },
  {
    "name": "Shark",
    "hex": "25272C"
  },
  {
    "name": "Green Kelp",
    "hex": "25311C"
  },
  {
    "name": "Curious Blue",
    "hex": "2596D1"
  },
  {
    "name": "Paua",
    "hex": "260368"
  },
  {
    "name": "Paris M",
    "hex": "26056A"
  },
  {
    "name": "Wood Bark",
    "hex": "261105"
  },
  {
    "name": "Gondola",
    "hex": "261414"
  },
  {
    "name": "Steel Gray",
    "hex": "262335"
  },
  {
    "name": "Ebony Clay",
    "hex": "26283B"
  },
  {
    "name": "Bay of Many",
    "hex": "273A81"
  },
  {
    "name": "Plantation",
    "hex": "27504B"
  },
  {
    "name": "Eucalyptus",
    "hex": "278A5B"
  },
  {
    "name": "Oil",
    "hex": "281E15"
  },
  {
    "name": "Astronaut",
    "hex": "283A77"
  },
  {
    "name": "Mariner",
    "hex": "286ACD"
  },
  {
    "name": "Violent Violet",
    "hex": "290C5E"
  },
  {
    "name": "Bastille",
    "hex": "292130"
  },
  {
    "name": "Zeus",
    "hex": "292319"
  },
  {
    "name": "Charade",
    "hex": "292937"
  },
  {
    "name": "Jelly Bean",
    "hex": "297B9A"
  },
  {
    "name": "Jungle Green",
    "hex": "29AB87"
  },
  {
    "name": "Cherry Pie",
    "hex": "2A0359"
  },
  {
    "name": "Coffee Bean",
    "hex": "2A140E"
  },
  {
    "name": "Baltic Sea",
    "hex": "2A2630"
  },
  {
    "name": "Turtle Green",
    "hex": "2A380B"
  },
  {
    "name": "Cerulean Blue",
    "hex": "2A52BE"
  },
  {
    "name": "Sepia Black",
    "hex": "2B0202"
  },
  {
    "name": "Valhalla",
    "hex": "2B194F"
  },
  {
    "name": "Heavy Metal",
    "hex": "2B3228"
  },
  {
    "name": "Blue Gem",
    "hex": "2C0E8C"
  },
  {
    "name": "Revolver",
    "hex": "2C1632"
  },
  {
    "name": "Bleached Cedar",
    "hex": "2C2133"
  },
  {
    "name": "Lochinvar",
    "hex": "2C8C84"
  },
  {
    "name": "Mikado",
    "hex": "2D2510"
  },
  {
    "name": "Outer Space",
    "hex": "2D383A"
  },
  {
    "name": "St Tropaz",
    "hex": "2D569B"
  },
  {
    "name": "Jacaranda",
    "hex": "2E0329"
  },
  {
    "name": "Jacko Bean",
    "hex": "2E1905"
  },
  {
    "name": "Rangitoto",
    "hex": "2E3222"
  },
  {
    "name": "Rhino",
    "hex": "2E3F62"
  },
  {
    "name": "Sea Green",
    "hex": "2E8B57"
  },
  {
    "name": "Scooter",
    "hex": "2EBFD4"
  },
  {
    "name": "Onion",
    "hex": "2F270E"
  },
  {
    "name": "Governor Bay",
    "hex": "2F3CB3"
  },
  {
    "name": "Sapphire",
    "hex": "2F519E"
  },
  {
    "name": "Spectra",
    "hex": "2F5A57"
  },
  {
    "name": "Casal",
    "hex": "2F6168"
  },
  {
    "name": "Melanzane",
    "hex": "300529"
  },
  {
    "name": "Cocoa Brown",
    "hex": "301F1E"
  },
  {
    "name": "Woodrush",
    "hex": "302A0F"
  },
  {
    "name": "San Juan",
    "hex": "304B6A"
  },
  {
    "name": "Turquoise",
    "hex": "30D5C8"
  },
  {
    "name": "Eclipse",
    "hex": "311C17"
  },
  {
    "name": "Pickled Bluewood",
    "hex": "314459"
  },
  {
    "name": "Azure",
    "hex": "315BA1"
  },
  {
    "name": "Calypso",
    "hex": "31728D"
  },
  {
    "name": "Paradiso",
    "hex": "317D82"
  },
  {
    "name": "Persian Indigo",
    "hex": "32127A"
  },
  {
    "name": "Blackcurrant",
    "hex": "32293A"
  },
  {
    "name": "Mine Shaft",
    "hex": "323232"
  },
  {
    "name": "Stromboli",
    "hex": "325D52"
  },
  {
    "name": "Bilbao",
    "hex": "327C14"
  },
  {
    "name": "Astral",
    "hex": "327DA0"
  },
  {
    "name": "Christalle",
    "hex": "33036B"
  },
  {
    "name": "Thunder",
    "hex": "33292F"
  },
  {
    "name": "Shamrock",
    "hex": "33CC99"
  },
  {
    "name": "Tamarind",
    "hex": "341515"
  },
  {
    "name": "Mardi Gras",
    "hex": "350036"
  },
  {
    "name": "Valentino",
    "hex": "350E42"
  },
  {
    "name": "Jagger",
    "hex": "350E57"
  },
  {
    "name": "Tuna",
    "hex": "353542"
  },
  {
    "name": "Chambray",
    "hex": "354E8C"
  },
  {
    "name": "Martinique",
    "hex": "363050"
  },
  {
    "name": "Tuatara",
    "hex": "363534"
  },
  {
    "name": "Waiouru",
    "hex": "363C0D"
  },
  {
    "name": "Ming",
    "hex": "36747D"
  },
  {
    "name": "La Palma",
    "hex": "368716"
  },
  {
    "name": "Chocolate",
    "hex": "370202"
  },
  {
    "name": "Clinker",
    "hex": "371D09"
  },
  {
    "name": "Brown Tumbleweed",
    "hex": "37290E"
  },
  {
    "name": "Birch",
    "hex": "373021"
  },
  {
    "name": "Oracle",
    "hex": "377475"
  },
  {
    "name": "Blue Diamond",
    "hex": "380474"
  },
  {
    "name": "Grape",
    "hex": "381A51"
  },
  {
    "name": "Dune",
    "hex": "383533"
  },
  {
    "name": "Oxford Blue",
    "hex": "384555"
  },
  {
    "name": "Clover",
    "hex": "384910"
  },
  {
    "name": "Limed Spruce",
    "hex": "394851"
  },
  {
    "name": "Dell",
    "hex": "396413"
  },
  {
    "name": "Toledo",
    "hex": "3A0020"
  },
  {
    "name": "Sambuca",
    "hex": "3A2010"
  },
  {
    "name": "Jacarta",
    "hex": "3A2A6A"
  },
  {
    "name": "William",
    "hex": "3A686C"
  },
  {
    "name": "Killarney",
    "hex": "3A6A47"
  },
  {
    "name": "Keppel",
    "hex": "3AB09E"
  },
  {
    "name": "Temptress",
    "hex": "3B000B"
  },
  {
    "name": "Aubergine",
    "hex": "3B0910"
  },
  {
    "name": "Jon",
    "hex": "3B1F1F"
  },
  {
    "name": "Treehouse",
    "hex": "3B2820"
  },
  {
    "name": "Amazon",
    "hex": "3B7A57"
  },
  {
    "name": "Boston Blue",
    "hex": "3B91B4"
  },
  {
    "name": "Windsor",
    "hex": "3C0878"
  },
  {
    "name": "Rebel",
    "hex": "3C1206"
  },
  {
    "name": "Meteorite",
    "hex": "3C1F76"
  },
  {
    "name": "Dark Ebony",
    "hex": "3C2005"
  },
  {
    "name": "Camouflage",
    "hex": "3C3910"
  },
  {
    "name": "Bright Gray",
    "hex": "3C4151"
  },
  {
    "name": "Cape Cod",
    "hex": "3C4443"
  },
  {
    "name": "Lunar Green",
    "hex": "3C493A"
  },
  {
    "name": "Bean  ",
    "hex": "3D0C02"
  },
  {
    "name": "Bistre",
    "hex": "3D2B1F"
  },
  {
    "name": "Goblin",
    "hex": "3D7D52"
  },
  {
    "name": "Kingfisher Daisy",
    "hex": "3E0480"
  },
  {
    "name": "Cedar",
    "hex": "3E1C14"
  },
  {
    "name": "English Walnut",
    "hex": "3E2B23"
  },
  {
    "name": "Black Marlin",
    "hex": "3E2C1C"
  },
  {
    "name": "Ship Gray",
    "hex": "3E3A44"
  },
  {
    "name": "Pelorous",
    "hex": "3EABBF"
  },
  {
    "name": "Bronze",
    "hex": "3F2109"
  },
  {
    "name": "Cola",
    "hex": "3F2500"
  },
  {
    "name": "Madras",
    "hex": "3F3002"
  },
  {
    "name": "Minsk",
    "hex": "3F307F"
  },
  {
    "name": "Cabbage Pont",
    "hex": "3F4C3A"
  },
  {
    "name": "Tom Thumb",
    "hex": "3F583B"
  },
  {
    "name": "Mineral Green",
    "hex": "3F5D53"
  },
  {
    "name": "Puerto Rico",
    "hex": "3FC1AA"
  },
  {
    "name": "Harlequin",
    "hex": "3FFF00"
  },
  {
    "name": "Brown Pod",
    "hex": "401801"
  },
  {
    "name": "Cork",
    "hex": "40291D"
  },
  {
    "name": "Masala",
    "hex": "403B38"
  },
  {
    "name": "Thatch Green",
    "hex": "403D19"
  },
  {
    "name": "Fiord",
    "hex": "405169"
  },
  {
    "name": "Viridian",
    "hex": "40826D"
  },
  {
    "name": "Chateau Green",
    "hex": "40A860"
  },
  {
    "name": "Ripe Plum",
    "hex": "410056"
  },
  {
    "name": "Paco",
    "hex": "411F10"
  },
  {
    "name": "Deep Oak",
    "hex": "412010"
  },
  {
    "name": "Merlin",
    "hex": "413C37"
  },
  {
    "name": "Gun Powder",
    "hex": "414257"
  },
  {
    "name": "East Bay",
    "hex": "414C7D"
  },
  {
    "name": "Royal Blue",
    "hex": "4169E1"
  },
  {
    "name": "Ocean Green",
    "hex": "41AA78"
  },
  {
    "name": "Burnt Maroon",
    "hex": "420303"
  },
  {
    "name": "Lisbon Brown",
    "hex": "423921"
  },
  {
    "name": "Faded Jade",
    "hex": "427977"
  },
  {
    "name": "Scarlet Gum",
    "hex": "431560"
  },
  {
    "name": "Iroko",
    "hex": "433120"
  },
  {
    "name": "Armadillo",
    "hex": "433E37"
  },
  {
    "name": "River Bed",
    "hex": "434C59"
  },
  {
    "name": "Green Leaf",
    "hex": "436A0D"
  },
  {
    "name": "Barossa",
    "hex": "44012D"
  },
  {
    "name": "Morocco Brown",
    "hex": "441D00"
  },
  {
    "name": "Mako",
    "hex": "444954"
  },
  {
    "name": "Kelp",
    "hex": "454936"
  },
  {
    "name": "San Marino",
    "hex": "456CAC"
  },
  {
    "name": "Picton Blue",
    "hex": "45B1E8"
  },
  {
    "name": "Loulou",
    "hex": "460B41"
  },
  {
    "name": "Crater Brown",
    "hex": "462425"
  },
  {
    "name": "Gray Asparagus",
    "hex": "465945"
  },
  {
    "name": "Steel Blue",
    "hex": "4682B4"
  },
  {
    "name": "Rustic Red",
    "hex": "480404"
  },
  {
    "name": "Bulgarian Rose",
    "hex": "480607"
  },
  {
    "name": "Clairvoyant",
    "hex": "480656"
  },
  {
    "name": "Cocoa Bean",
    "hex": "481C1C"
  },
  {
    "name": "Woody Brown",
    "hex": "483131"
  },
  {
    "name": "Taupe",
    "hex": "483C32"
  },
  {
    "name": "Van Cleef",
    "hex": "49170C"
  },
  {
    "name": "Brown Derby",
    "hex": "492615"
  },
  {
    "name": "Metallic Bronze",
    "hex": "49371B"
  },
  {
    "name": "Verdun Green",
    "hex": "495400"
  },
  {
    "name": "Blue Bayoux",
    "hex": "496679"
  },
  {
    "name": "Bismark",
    "hex": "497183"
  },
  {
    "name": "Bracken",
    "hex": "4A2A04"
  },
  {
    "name": "Deep Bronze",
    "hex": "4A3004"
  },
  {
    "name": "Mondo",
    "hex": "4A3C30"
  },
  {
    "name": "Tundora",
    "hex": "4A4244"
  },
  {
    "name": "Gravel",
    "hex": "4A444B"
  },
  {
    "name": "Trout",
    "hex": "4A4E5A"
  },
  {
    "name": "Pigment Indigo",
    "hex": "4B0082"
  },
  {
    "name": "Nandor",
    "hex": "4B5D52"
  },
  {
    "name": "Saddle",
    "hex": "4C3024"
  },
  {
    "name": "Abbey",
    "hex": "4C4F56"
  },
  {
    "name": "Blackberry",
    "hex": "4D0135"
  },
  {
    "name": "Cab Sav",
    "hex": "4D0A18"
  },
  {
    "name": "Indian Tan",
    "hex": "4D1E01"
  },
  {
    "name": "Cowboy",
    "hex": "4D282D"
  },
  {
    "name": "Livid Brown",
    "hex": "4D282E"
  },
  {
    "name": "Rock",
    "hex": "4D3833"
  },
  {
    "name": "Punga",
    "hex": "4D3D14"
  },
  {
    "name": "Bronzetone",
    "hex": "4D400F"
  },
  {
    "name": "Woodland",
    "hex": "4D5328"
  },
  {
    "name": "Mahogany",
    "hex": "4E0606"
  },
  {
    "name": "Bossanova",
    "hex": "4E2A5A"
  },
  {
    "name": "Matterhorn",
    "hex": "4E3B41"
  },
  {
    "name": "Bronze Olive",
    "hex": "4E420C"
  },
  {
    "name": "Mulled Wine",
    "hex": "4E4562"
  },
  {
    "name": "Axolotl",
    "hex": "4E6649"
  },
  {
    "name": "Wedgewood",
    "hex": "4E7F9E"
  },
  {
    "name": "Shakespeare",
    "hex": "4EABD1"
  },
  {
    "name": "Honey Flower",
    "hex": "4F1C70"
  },
  {
    "name": "Daisy Bush",
    "hex": "4F2398"
  },
  {
    "name": "Indigo",
    "hex": "4F69C6"
  },
  {
    "name": "Fern Green",
    "hex": "4F7942"
  },
  {
    "name": "Fruit Salad",
    "hex": "4F9D5D"
  },
  {
    "name": "Apple",
    "hex": "4FA83D"
  },
  {
    "name": "Mortar",
    "hex": "504351"
  },
  {
    "name": "Kashmir Blue",
    "hex": "507096"
  },
  {
    "name": "Cutty Sark",
    "hex": "507672"
  },
  {
    "name": "Emerald",
    "hex": "50C878"
  },
  {
    "name": "Emperor",
    "hex": "514649"
  },
  {
    "name": "Chalet Green",
    "hex": "516E3D"
  },
  {
    "name": "Como",
    "hex": "517C66"
  },
  {
    "name": "Smalt Blue",
    "hex": "51808F"
  },
  {
    "name": "Castro",
    "hex": "52001F"
  },
  {
    "name": "Maroon Oak",
    "hex": "520C17"
  },
  {
    "name": "Gigas",
    "hex": "523C94"
  },
  {
    "name": "Voodoo",
    "hex": "533455"
  },
  {
    "name": "Victoria",
    "hex": "534491"
  },
  {
    "name": "Hippie Green",
    "hex": "53824B"
  },
  {
    "name": "Heath",
    "hex": "541012"
  },
  {
    "name": "Judge Gray",
    "hex": "544333"
  },
  {
    "name": "Fuscous Gray",
    "hex": "54534D"
  },
  {
    "name": "Vida Loca",
    "hex": "549019"
  },
  {
    "name": "Cioccolato",
    "hex": "55280C"
  },
  {
    "name": "Saratoga",
    "hex": "555B10"
  },
  {
    "name": "Finlandia",
    "hex": "556D56"
  },
  {
    "name": "Havelock Blue",
    "hex": "5590D9"
  },
  {
    "name": "Fountain Blue",
    "hex": "56B4BE"
  },
  {
    "name": "Spring Leaves",
    "hex": "578363"
  },
  {
    "name": "Saddle Brown",
    "hex": "583401"
  },
  {
    "name": "Scarpa Flow",
    "hex": "585562"
  },
  {
    "name": "Cactus",
    "hex": "587156"
  },
  {
    "name": "Hippie Blue",
    "hex": "589AAF"
  },
  {
    "name": "Wine Berry",
    "hex": "591D35"
  },
  {
    "name": "Brown Bramble",
    "hex": "592804"
  },
  {
    "name": "Congo Brown",
    "hex": "593737"
  },
  {
    "name": "Millbrook",
    "hex": "594433"
  },
  {
    "name": "Waikawa Gray",
    "hex": "5A6E9C"
  },
  {
    "name": "Horizon",
    "hex": "5A87A0"
  },
  {
    "name": "Jambalaya",
    "hex": "5B3013"
  },
  {
    "name": "Bordeaux",
    "hex": "5C0120"
  },
  {
    "name": "Mulberry Wood",
    "hex": "5C0536"
  },
  {
    "name": "Carnaby Tan",
    "hex": "5C2E01"
  },
  {
    "name": "Comet",
    "hex": "5C5D75"
  },
  {
    "name": "Redwood",
    "hex": "5D1E0F"
  },
  {
    "name": "Don Juan",
    "hex": "5D4C51"
  },
  {
    "name": "Chicago",
    "hex": "5D5C58"
  },
  {
    "name": "Verdigris",
    "hex": "5D5E37"
  },
  {
    "name": "Dingley",
    "hex": "5D7747"
  },
  {
    "name": "Breaker Bay",
    "hex": "5DA19F"
  },
  {
    "name": "Kabul",
    "hex": "5E483E"
  },
  {
    "name": "Hemlock",
    "hex": "5E5D3B"
  },
  {
    "name": "Irish Coffee",
    "hex": "5F3D26"
  },
  {
    "name": "Mid Gray",
    "hex": "5F5F6E"
  },
  {
    "name": "Shuttle Gray",
    "hex": "5F6672"
  },
  {
    "name": "Aqua Forest",
    "hex": "5FA777"
  },
  {
    "name": "Tradewind",
    "hex": "5FB3AC"
  },
  {
    "name": "Horses Neck",
    "hex": "604913"
  },
  {
    "name": "Smoky",
    "hex": "605B73"
  },
  {
    "name": "Corduroy",
    "hex": "606E68"
  },
  {
    "name": "Danube",
    "hex": "6093D1"
  },
  {
    "name": "Espresso",
    "hex": "612718"
  },
  {
    "name": "Eggplant",
    "hex": "614051"
  },
  {
    "name": "Costa Del Sol",
    "hex": "615D30"
  },
  {
    "name": "Glade Green",
    "hex": "61845F"
  },
  {
    "name": "Buccaneer",
    "hex": "622F30"
  },
  {
    "name": "Quincy",
    "hex": "623F2D"
  },
  {
    "name": "Butterfly Bush",
    "hex": "624E9A"
  },
  {
    "name": "West Coast",
    "hex": "625119"
  },
  {
    "name": "Finch",
    "hex": "626649"
  },
  {
    "name": "Patina",
    "hex": "639A8F"
  },
  {
    "name": "Fern",
    "hex": "63B76C"
  },
  {
    "name": "Blue Violet",
    "hex": "6456B7"
  },
  {
    "name": "Dolphin",
    "hex": "646077"
  },
  {
    "name": "Storm Dust",
    "hex": "646463"
  },
  {
    "name": "Siam",
    "hex": "646A54"
  },
  {
    "name": "Nevada",
    "hex": "646E75"
  },
  {
    "name": "Cornflower Blue",
    "hex": "6495ED"
  },
  {
    "name": "Viking",
    "hex": "64CCDB"
  },
  {
    "name": "Rosewood",
    "hex": "65000B"
  },
  {
    "name": "Cherrywood",
    "hex": "651A14"
  },
  {
    "name": "Purple Heart",
    "hex": "652DC1"
  },
  {
    "name": "Fern Frond",
    "hex": "657220"
  },
  {
    "name": "Willow Grove",
    "hex": "65745D"
  },
  {
    "name": "Hoki",
    "hex": "65869F"
  },
  {
    "name": "Pompadour",
    "hex": "660045"
  },
  {
    "name": "Purple",
    "hex": "660099"
  },
  {
    "name": "Tyrian Purple",
    "hex": "66023C"
  },
  {
    "name": "Dark Tan",
    "hex": "661010"
  },
  {
    "name": "Silver Tree",
    "hex": "66B58F"
  },
  {
    "name": "Bright Green",
    "hex": "66FF00"
  },
  {
    "name": "Screamin' Green",
    "hex": "66FF66"
  },
  {
    "name": "Black Rose",
    "hex": "67032D"
  },
  {
    "name": "Scampi",
    "hex": "675FA6"
  },
  {
    "name": "Ironside Gray",
    "hex": "676662"
  },
  {
    "name": "Viridian Green",
    "hex": "678975"
  },
  {
    "name": "Christi",
    "hex": "67A712"
  },
  {
    "name": "Nutmeg Wood Finish",
    "hex": "683600"
  },
  {
    "name": "Zambezi",
    "hex": "685558"
  },
  {
    "name": "Salt Box",
    "hex": "685E6E"
  },
  {
    "name": "Tawny Port",
    "hex": "692545"
  },
  {
    "name": "Finn",
    "hex": "692D54"
  },
  {
    "name": "Scorpion",
    "hex": "695F62"
  },
  {
    "name": "Lynch",
    "hex": "697E9A"
  },
  {
    "name": "Spice",
    "hex": "6A442E"
  },
  {
    "name": "Himalaya",
    "hex": "6A5D1B"
  },
  {
    "name": "Soya Bean",
    "hex": "6A6051"
  },
  {
    "name": "Hairy Heath",
    "hex": "6B2A14"
  },
  {
    "name": "Royal Purple",
    "hex": "6B3FA0"
  },
  {
    "name": "Shingle Fawn",
    "hex": "6B4E31"
  },
  {
    "name": "Dorado",
    "hex": "6B5755"
  },
  {
    "name": "Bermuda Gray",
    "hex": "6B8BA2"
  },
  {
    "name": "Olive Drab",
    "hex": "6B8E23"
  },
  {
    "name": "Eminence",
    "hex": "6C3082"
  },
  {
    "name": "Turquoise Blue",
    "hex": "6CDAE7"
  },
  {
    "name": "Lonestar",
    "hex": "6D0101"
  },
  {
    "name": "Pine Cone",
    "hex": "6D5E54"
  },
  {
    "name": "Dove Gray",
    "hex": "6D6C6C"
  },
  {
    "name": "Juniper",
    "hex": "6D9292"
  },
  {
    "name": "Gothic",
    "hex": "6D92A1"
  },
  {
    "name": "Red Oxide",
    "hex": "6E0902"
  },
  {
    "name": "Moccaccino",
    "hex": "6E1D14"
  },
  {
    "name": "Pickled Bean",
    "hex": "6E4826"
  },
  {
    "name": "Dallas",
    "hex": "6E4B26"
  },
  {
    "name": "Kokoda",
    "hex": "6E6D57"
  },
  {
    "name": "Pale Sky",
    "hex": "6E7783"
  },
  {
    "name": "Cafe Royale",
    "hex": "6F440C"
  },
  {
    "name": "Flint",
    "hex": "6F6A61"
  },
  {
    "name": "Highland",
    "hex": "6F8E63"
  },
  {
    "name": "Limeade",
    "hex": "6F9D02"
  },
  {
    "name": "Downy",
    "hex": "6FD0C5"
  },
  {
    "name": "Persian Plum",
    "hex": "701C1C"
  },
  {
    "name": "Sepia",
    "hex": "704214"
  },
  {
    "name": "Antique Bronze",
    "hex": "704A07"
  },
  {
    "name": "Ferra",
    "hex": "704F50"
  },
  {
    "name": "Coffee",
    "hex": "706555"
  },
  {
    "name": "Slate Gray",
    "hex": "708090"
  },
  {
    "name": "Cedar Wood Finish",
    "hex": "711A00"
  },
  {
    "name": "Metallic Copper",
    "hex": "71291D"
  },
  {
    "name": "Affair",
    "hex": "714693"
  },
  {
    "name": "Studio",
    "hex": "714AB2"
  },
  {
    "name": "Tobacco Brown",
    "hex": "715D47"
  },
  {
    "name": "Yellow Metal",
    "hex": "716338"
  },
  {
    "name": "Peat",
    "hex": "716B56"
  },
  {
    "name": "Olivetone",
    "hex": "716E10"
  },
  {
    "name": "Storm Gray",
    "hex": "717486"
  },
  {
    "name": "Sirocco",
    "hex": "718080"
  },
  {
    "name": "Aquamarine Blue",
    "hex": "71D9E2"
  },
  {
    "name": "Venetian Red",
    "hex": "72010F"
  },
  {
    "name": "Old Copper",
    "hex": "724A2F"
  },
  {
    "name": "Go Ben",
    "hex": "726D4E"
  },
  {
    "name": "Raven",
    "hex": "727B89"
  },
  {
    "name": "Seance",
    "hex": "731E8F"
  },
  {
    "name": "Raw Umber",
    "hex": "734A12"
  },
  {
    "name": "Kimberly",
    "hex": "736C9F"
  },
  {
    "name": "Crocodile",
    "hex": "736D58"
  },
  {
    "name": "Crete",
    "hex": "737829"
  },
  {
    "name": "Xanadu",
    "hex": "738678"
  },
  {
    "name": "Spicy Mustard",
    "hex": "74640D"
  },
  {
    "name": "Limed Ash",
    "hex": "747D63"
  },
  {
    "name": "Rolling Stone",
    "hex": "747D83"
  },
  {
    "name": "Blue Smoke",
    "hex": "748881"
  },
  {
    "name": "Laurel",
    "hex": "749378"
  },
  {
    "name": "Mantis",
    "hex": "74C365"
  },
  {
    "name": "Russett",
    "hex": "755A57"
  },
  {
    "name": "Deluge",
    "hex": "7563A8"
  },
  {
    "name": "Cosmic",
    "hex": "76395D"
  },
  {
    "name": "Blue Marguerite",
    "hex": "7666C6"
  },
  {
    "name": "Lima",
    "hex": "76BD17"
  },
  {
    "name": "Sky Blue",
    "hex": "76D7EA"
  },
  {
    "name": "Dark Burgundy",
    "hex": "770F05"
  },
  {
    "name": "Crown of Thorns",
    "hex": "771F1F"
  },
  {
    "name": "Walnut",
    "hex": "773F1A"
  },
  {
    "name": "Pablo",
    "hex": "776F61"
  },
  {
    "name": "Pacifika",
    "hex": "778120"
  },
  {
    "name": "Oxley",
    "hex": "779E86"
  },
  {
    "name": "Pastel Green",
    "hex": "77DD77"
  },
  {
    "name": "Japanese Maple",
    "hex": "780109"
  },
  {
    "name": "Mocha",
    "hex": "782D19"
  },
  {
    "name": "Peanut",
    "hex": "782F16"
  },
  {
    "name": "Camouflage Green",
    "hex": "78866B"
  },
  {
    "name": "Wasabi",
    "hex": "788A25"
  },
  {
    "name": "Ship Cove",
    "hex": "788BBA"
  },
  {
    "name": "Sea Nymph",
    "hex": "78A39C"
  },
  {
    "name": "Roman Coffee",
    "hex": "795D4C"
  },
  {
    "name": "Old Lavender",
    "hex": "796878"
  },
  {
    "name": "Rum",
    "hex": "796989"
  },
  {
    "name": "Fedora",
    "hex": "796A78"
  },
  {
    "name": "Sandstone",
    "hex": "796D62"
  },
  {
    "name": "Spray",
    "hex": "79DEEC"
  },
  {
    "name": "Siren",
    "hex": "7A013A"
  },
  {
    "name": "Fuchsia Blue",
    "hex": "7A58C1"
  },
  {
    "name": "Boulder",
    "hex": "7A7A7A"
  },
  {
    "name": "Wild Blue Yonder",
    "hex": "7A89B8"
  },
  {
    "name": "De York",
    "hex": "7AC488"
  },
  {
    "name": "Red Beech",
    "hex": "7B3801"
  },
  {
    "name": "Cinnamon",
    "hex": "7B3F00"
  },
  {
    "name": "Yukon Gold",
    "hex": "7B6608"
  },
  {
    "name": "Tapa",
    "hex": "7B7874"
  },
  {
    "name": "Waterloo ",
    "hex": "7B7C94"
  },
  {
    "name": "Flax Smoke",
    "hex": "7B8265"
  },
  {
    "name": "Amulet",
    "hex": "7B9F80"
  },
  {
    "name": "Asparagus",
    "hex": "7BA05B"
  },
  {
    "name": "Kenyan Copper",
    "hex": "7C1C05"
  },
  {
    "name": "Pesto",
    "hex": "7C7631"
  },
  {
    "name": "Topaz",
    "hex": "7C778A"
  },
  {
    "name": "Concord",
    "hex": "7C7B7A"
  },
  {
    "name": "Jumbo",
    "hex": "7C7B82"
  },
  {
    "name": "Trendy Green",
    "hex": "7C881A"
  },
  {
    "name": "Gumbo",
    "hex": "7CA1A6"
  },
  {
    "name": "Acapulco",
    "hex": "7CB0A1"
  },
  {
    "name": "Neptune",
    "hex": "7CB7BB"
  },
  {
    "name": "Pueblo",
    "hex": "7D2C14"
  },
  {
    "name": "Bay Leaf",
    "hex": "7DA98D"
  },
  {
    "name": "Malibu",
    "hex": "7DC8F7"
  },
  {
    "name": "Bermuda",
    "hex": "7DD8C6"
  },
  {
    "name": "Copper Canyon",
    "hex": "7E3A15"
  },
  {
    "name": "Claret",
    "hex": "7F1734"
  },
  {
    "name": "Peru Tan",
    "hex": "7F3A02"
  },
  {
    "name": "Falcon",
    "hex": "7F626D"
  },
  {
    "name": "Mobster",
    "hex": "7F7589"
  },
  {
    "name": "Moody Blue",
    "hex": "7F76D3"
  },
  {
    "name": "Chartreuse",
    "hex": "7FFF00"
  },
  {
    "name": "Aquamarine",
    "hex": "7FFFD4"
  },
  {
    "name": "Maroon",
    "hex": "800000"
  },
  {
    "name": "Rose Bud Cherry",
    "hex": "800B47"
  },
  {
    "name": "Falu Red",
    "hex": "801818"
  },
  {
    "name": "Red Robin",
    "hex": "80341F"
  },
  {
    "name": "Vivid Violet",
    "hex": "803790"
  },
  {
    "name": "Russet",
    "hex": "80461B"
  },
  {
    "name": "Friar Gray",
    "hex": "807E79"
  },
  {
    "name": "Olive",
    "hex": "808000"
  },
  {
    "name": "Gray",
    "hex": "808080"
  },
  {
    "name": "Gulf Stream",
    "hex": "80B3AE"
  },
  {
    "name": "Glacier",
    "hex": "80B3C4"
  },
  {
    "name": "Seagull",
    "hex": "80CCEA"
  },
  {
    "name": "Nutmeg",
    "hex": "81422C"
  },
  {
    "name": "Spicy Pink",
    "hex": "816E71"
  },
  {
    "name": "Empress",
    "hex": "817377"
  },
  {
    "name": "Spanish Green",
    "hex": "819885"
  },
  {
    "name": "Sand Dune",
    "hex": "826F65"
  },
  {
    "name": "Gunsmoke",
    "hex": "828685"
  },
  {
    "name": "Battleship Gray",
    "hex": "828F72"
  },
  {
    "name": "Merlot",
    "hex": "831923"
  },
  {
    "name": "Shadow",
    "hex": "837050"
  },
  {
    "name": "Chelsea Cucumber",
    "hex": "83AA5D"
  },
  {
    "name": "Monte Carlo",
    "hex": "83D0C6"
  },
  {
    "name": "Plum",
    "hex": "843179"
  },
  {
    "name": "Granny Smith",
    "hex": "84A0A0"
  },
  {
    "name": "Chetwode Blue",
    "hex": "8581D9"
  },
  {
    "name": "Bandicoot",
    "hex": "858470"
  },
  {
    "name": "Bali Hai",
    "hex": "859FAF"
  },
  {
    "name": "Half Baked",
    "hex": "85C4CC"
  },
  {
    "name": "Red Devil",
    "hex": "860111"
  },
  {
    "name": "Lotus",
    "hex": "863C3C"
  },
  {
    "name": "Ironstone",
    "hex": "86483C"
  },
  {
    "name": "Bull Shot",
    "hex": "864D1E"
  },
  {
    "name": "Rusty Nail",
    "hex": "86560A"
  },
  {
    "name": "Bitter",
    "hex": "868974"
  },
  {
    "name": "Regent Gray",
    "hex": "86949F"
  },
  {
    "name": "Disco",
    "hex": "871550"
  },
  {
    "name": "Americano",
    "hex": "87756E"
  },
  {
    "name": "Hurricane",
    "hex": "877C7B"
  },
  {
    "name": "Oslo Gray",
    "hex": "878D91"
  },
  {
    "name": "Sushi",
    "hex": "87AB39"
  },
  {
    "name": "Spicy Mix",
    "hex": "885342"
  },
  {
    "name": "Kumera",
    "hex": "886221"
  },
  {
    "name": "Suva Gray",
    "hex": "888387"
  },
  {
    "name": "Avocado",
    "hex": "888D65"
  },
  {
    "name": "Camelot",
    "hex": "893456"
  },
  {
    "name": "Solid Pink",
    "hex": "893843"
  },
  {
    "name": "Cannon Pink",
    "hex": "894367"
  },
  {
    "name": "Makara",
    "hex": "897D6D"
  },
  {
    "name": "Burnt Umber",
    "hex": "8A3324"
  },
  {
    "name": "True V",
    "hex": "8A73D6"
  },
  {
    "name": "Clay Creek",
    "hex": "8A8360"
  },
  {
    "name": "Monsoon",
    "hex": "8A8389"
  },
  {
    "name": "Stack",
    "hex": "8A8F8A"
  },
  {
    "name": "Jordy Blue",
    "hex": "8AB9F1"
  },
  {
    "name": "Electric Violet",
    "hex": "8B00FF"
  },
  {
    "name": "Monarch",
    "hex": "8B0723"
  },
  {
    "name": "Corn Harvest",
    "hex": "8B6B0B"
  },
  {
    "name": "Olive Haze",
    "hex": "8B8470"
  },
  {
    "name": "Schooner",
    "hex": "8B847E"
  },
  {
    "name": "Natural Gray",
    "hex": "8B8680"
  },
  {
    "name": "Mantle",
    "hex": "8B9C90"
  },
  {
    "name": "Portage",
    "hex": "8B9FEE"
  },
  {
    "name": "Envy",
    "hex": "8BA690"
  },
  {
    "name": "Cascade",
    "hex": "8BA9A5"
  },
  {
    "name": "Riptide",
    "hex": "8BE6D8"
  },
  {
    "name": "Cardinal Pink",
    "hex": "8C055E"
  },
  {
    "name": "Mule Fawn",
    "hex": "8C472F"
  },
  {
    "name": "Potters Clay",
    "hex": "8C5738"
  },
  {
    "name": "Trendy Pink",
    "hex": "8C6495"
  },
  {
    "name": "Paprika",
    "hex": "8D0226"
  },
  {
    "name": "Sanguine Brown",
    "hex": "8D3D38"
  },
  {
    "name": "Tosca",
    "hex": "8D3F3F"
  },
  {
    "name": "Cement",
    "hex": "8D7662"
  },
  {
    "name": "Granite Green",
    "hex": "8D8974"
  },
  {
    "name": "Manatee",
    "hex": "8D90A1"
  },
  {
    "name": "Polo Blue",
    "hex": "8DA8CC"
  },
  {
    "name": "Red Berry",
    "hex": "8E0000"
  },
  {
    "name": "Rope",
    "hex": "8E4D1E"
  },
  {
    "name": "Opium",
    "hex": "8E6F70"
  },
  {
    "name": "Domino",
    "hex": "8E775E"
  },
  {
    "name": "Mamba",
    "hex": "8E8190"
  },
  {
    "name": "Nepal",
    "hex": "8EABC1"
  },
  {
    "name": "Pohutukawa",
    "hex": "8F021C"
  },
  {
    "name": "El Salva",
    "hex": "8F3E33"
  },
  {
    "name": "Korma",
    "hex": "8F4B0E"
  },
  {
    "name": "Squirrel",
    "hex": "8F8176"
  },
  {
    "name": "Vista Blue",
    "hex": "8FD6B4"
  },
  {
    "name": "Burgundy",
    "hex": "900020"
  },
  {
    "name": "Old Brick",
    "hex": "901E1E"
  },
  {
    "name": "Hemp",
    "hex": "907874"
  },
  {
    "name": "Almond Frost",
    "hex": "907B71"
  },
  {
    "name": "Sycamore",
    "hex": "908D39"
  },
  {
    "name": "Sangria",
    "hex": "92000A"
  },
  {
    "name": "Cumin",
    "hex": "924321"
  },
  {
    "name": "Beaver",
    "hex": "926F5B"
  },
  {
    "name": "Stonewall",
    "hex": "928573"
  },
  {
    "name": "Venus",
    "hex": "928590"
  },
  {
    "name": "Medium Purple",
    "hex": "9370DB"
  },
  {
    "name": "Cornflower",
    "hex": "93CCEA"
  },
  {
    "name": "Algae Green",
    "hex": "93DFB8"
  },
  {
    "name": "Copper Rust",
    "hex": "944747"
  },
  {
    "name": "Arrowtown",
    "hex": "948771"
  },
  {
    "name": "Scarlett",
    "hex": "950015"
  },
  {
    "name": "Strikemaster",
    "hex": "956387"
  },
  {
    "name": "Mountain Mist",
    "hex": "959396"
  },
  {
    "name": "Carmine",
    "hex": "960018"
  },
  {
    "name": "Brown",
    "hex": "964B00"
  },
  {
    "name": "Leather",
    "hex": "967059"
  },
  {
    "name": "Purple Mountain's Majesty",
    "hex": "9678B6"
  },
  {
    "name": "Lavender Purple",
    "hex": "967BB6"
  },
  {
    "name": "Pewter",
    "hex": "96A8A1"
  },
  {
    "name": "Summer Green",
    "hex": "96BBAB"
  },
  {
    "name": "Au Chico",
    "hex": "97605D"
  },
  {
    "name": "Wisteria",
    "hex": "9771B5"
  },
  {
    "name": "Atlantis",
    "hex": "97CD2D"
  },
  {
    "name": "Vin Rouge",
    "hex": "983D61"
  },
  {
    "name": "Lilac Bush",
    "hex": "9874D3"
  },
  {
    "name": "Bazaar",
    "hex": "98777B"
  },
  {
    "name": "Hacienda",
    "hex": "98811B"
  },
  {
    "name": "Pale Oyster",
    "hex": "988D77"
  },
  {
    "name": "Mint Green",
    "hex": "98FF98"
  },
  {
    "name": "Fresh Eggplant",
    "hex": "990066"
  },
  {
    "name": "Violet Eggplant",
    "hex": "991199"
  },
  {
    "name": "Tamarillo",
    "hex": "991613"
  },
  {
    "name": "Totem Pole",
    "hex": "991B07"
  },
  {
    "name": "Copper Rose",
    "hex": "996666"
  },
  {
    "name": "Amethyst",
    "hex": "9966CC"
  },
  {
    "name": "Mountbatten Pink",
    "hex": "997A8D"
  },
  {
    "name": "Blue Bell",
    "hex": "9999CC"
  },
  {
    "name": "Prairie Sand",
    "hex": "9A3820"
  },
  {
    "name": "Toast",
    "hex": "9A6E61"
  },
  {
    "name": "Gurkha",
    "hex": "9A9577"
  },
  {
    "name": "Olivine",
    "hex": "9AB973"
  },
  {
    "name": "Shadow Green",
    "hex": "9AC2B8"
  },
  {
    "name": "Oregon",
    "hex": "9B4703"
  },
  {
    "name": "Lemon Grass",
    "hex": "9B9E8F"
  },
  {
    "name": "Stiletto",
    "hex": "9C3336"
  },
  {
    "name": "Hawaiian Tan",
    "hex": "9D5616"
  },
  {
    "name": "Gull Gray",
    "hex": "9DACB7"
  },
  {
    "name": "Pistachio",
    "hex": "9DC209"
  },
  {
    "name": "Granny Smith Apple",
    "hex": "9DE093"
  },
  {
    "name": "Anakiwa",
    "hex": "9DE5FF"
  },
  {
    "name": "Chelsea Gem",
    "hex": "9E5302"
  },
  {
    "name": "Sepia Skin",
    "hex": "9E5B40"
  },
  {
    "name": "Sage",
    "hex": "9EA587"
  },
  {
    "name": "Citron",
    "hex": "9EA91F"
  },
  {
    "name": "Rock Blue",
    "hex": "9EB1CD"
  },
  {
    "name": "Morning Glory",
    "hex": "9EDEE0"
  },
  {
    "name": "Cognac",
    "hex": "9F381D"
  },
  {
    "name": "Reef Gold",
    "hex": "9F821C"
  },
  {
    "name": "Star Dust",
    "hex": "9F9F9C"
  },
  {
    "name": "Santas Gray",
    "hex": "9FA0B1"
  },
  {
    "name": "Sinbad",
    "hex": "9FD7D3"
  },
  {
    "name": "Feijoa",
    "hex": "9FDD8C"
  },
  {
    "name": "Tabasco",
    "hex": "A02712"
  },
  {
    "name": "Buttered Rum",
    "hex": "A1750D"
  },
  {
    "name": "Hit Gray",
    "hex": "A1ADB5"
  },
  {
    "name": "Citrus",
    "hex": "A1C50A"
  },
  {
    "name": "Aqua Island",
    "hex": "A1DAD7"
  },
  {
    "name": "Water Leaf",
    "hex": "A1E9DE"
  },
  {
    "name": "Flirt",
    "hex": "A2006D"
  },
  {
    "name": "Rouge",
    "hex": "A23B6C"
  },
  {
    "name": "Cape Palliser",
    "hex": "A26645"
  },
  {
    "name": "Gray Chateau",
    "hex": "A2AAB3"
  },
  {
    "name": "Edward",
    "hex": "A2AEAB"
  },
  {
    "name": "Pharlap",
    "hex": "A3807B"
  },
  {
    "name": "Amethyst Smoke",
    "hex": "A397B4"
  },
  {
    "name": "Blizzard Blue",
    "hex": "A3E3ED"
  },
  {
    "name": "Delta",
    "hex": "A4A49D"
  },
  {
    "name": "Wistful",
    "hex": "A4A6D3"
  },
  {
    "name": "Green Smoke",
    "hex": "A4AF6E"
  },
  {
    "name": "Jazzberry Jam",
    "hex": "A50B5E"
  },
  {
    "name": "Zorba",
    "hex": "A59B91"
  },
  {
    "name": "Bahia",
    "hex": "A5CB0C"
  },
  {
    "name": "Roof Terracotta",
    "hex": "A62F20"
  },
  {
    "name": "Paarl",
    "hex": "A65529"
  },
  {
    "name": "Barley Corn",
    "hex": "A68B5B"
  },
  {
    "name": "Donkey Brown",
    "hex": "A69279"
  },
  {
    "name": "Dawn",
    "hex": "A6A29A"
  },
  {
    "name": "Mexican Red",
    "hex": "A72525"
  },
  {
    "name": "Luxor Gold",
    "hex": "A7882C"
  },
  {
    "name": "Rich Gold",
    "hex": "A85307"
  },
  {
    "name": "Reno Sand",
    "hex": "A86515"
  },
  {
    "name": "Coral Tree",
    "hex": "A86B6B"
  },
  {
    "name": "Dusty Gray",
    "hex": "A8989B"
  },
  {
    "name": "Dull Lavender",
    "hex": "A899E6"
  },
  {
    "name": "Tallow",
    "hex": "A8A589"
  },
  {
    "name": "Bud",
    "hex": "A8AE9C"
  },
  {
    "name": "Locust",
    "hex": "A8AF8E"
  },
  {
    "name": "Norway",
    "hex": "A8BD9F"
  },
  {
    "name": "Chinook",
    "hex": "A8E3BD"
  },
  {
    "name": "Gray Olive",
    "hex": "A9A491"
  },
  {
    "name": "Aluminium",
    "hex": "A9ACB6"
  },
  {
    "name": "Cadet Blue",
    "hex": "A9B2C3"
  },
  {
    "name": "Schist",
    "hex": "A9B497"
  },
  {
    "name": "Tower Gray",
    "hex": "A9BDBF"
  },
  {
    "name": "Perano",
    "hex": "A9BEF2"
  },
  {
    "name": "Opal",
    "hex": "A9C6C2"
  },
  {
    "name": "Night Shadz",
    "hex": "AA375A"
  },
  {
    "name": "Fire",
    "hex": "AA4203"
  },
  {
    "name": "Muesli",
    "hex": "AA8B5B"
  },
  {
    "name": "Sandal",
    "hex": "AA8D6F"
  },
  {
    "name": "Shady Lady",
    "hex": "AAA5A9"
  },
  {
    "name": "Logan",
    "hex": "AAA9CD"
  },
  {
    "name": "Spun Pearl",
    "hex": "AAABB7"
  },
  {
    "name": "Regent St Blue",
    "hex": "AAD6E6"
  },
  {
    "name": "Magic Mint",
    "hex": "AAF0D1"
  },
  {
    "name": "Lipstick",
    "hex": "AB0563"
  },
  {
    "name": "Royal Heath",
    "hex": "AB3472"
  },
  {
    "name": "Sandrift",
    "hex": "AB917A"
  },
  {
    "name": "Cold Purple",
    "hex": "ABA0D9"
  },
  {
    "name": "Bronco",
    "hex": "ABA196"
  },
  {
    "name": "Limed Oak",
    "hex": "AC8A56"
  },
  {
    "name": "East Side",
    "hex": "AC91CE"
  },
  {
    "name": "Lemon Ginger",
    "hex": "AC9E22"
  },
  {
    "name": "Napa",
    "hex": "ACA494"
  },
  {
    "name": "Hillary",
    "hex": "ACA586"
  },
  {
    "name": "Cloudy",
    "hex": "ACA59F"
  },
  {
    "name": "Silver Chalice",
    "hex": "ACACAC"
  },
  {
    "name": "Swamp Green",
    "hex": "ACB78E"
  },
  {
    "name": "Spring Rain",
    "hex": "ACCBB1"
  },
  {
    "name": "Conifer",
    "hex": "ACDD4D"
  },
  {
    "name": "Celadon",
    "hex": "ACE1AF"
  },
  {
    "name": "Mandalay",
    "hex": "AD781B"
  },
  {
    "name": "Casper",
    "hex": "ADBED1"
  },
  {
    "name": "Moss Green",
    "hex": "ADDFAD"
  },
  {
    "name": "Padua",
    "hex": "ADE6C4"
  },
  {
    "name": "Green Yellow",
    "hex": "ADFF2F"
  },
  {
    "name": "Hippie Pink",
    "hex": "AE4560"
  },
  {
    "name": "Desert",
    "hex": "AE6020"
  },
  {
    "name": "Bouquet",
    "hex": "AE809E"
  },
  {
    "name": "Medium Carmine",
    "hex": "AF4035"
  },
  {
    "name": "Apple Blossom",
    "hex": "AF4D43"
  },
  {
    "name": "Brown Rust",
    "hex": "AF593E"
  },
  {
    "name": "Driftwood",
    "hex": "AF8751"
  },
  {
    "name": "Alpine",
    "hex": "AF8F2C"
  },
  {
    "name": "Lucky",
    "hex": "AF9F1C"
  },
  {
    "name": "Martini",
    "hex": "AFA09E"
  },
  {
    "name": "Bombay",
    "hex": "AFB1B8"
  },
  {
    "name": "Pigeon Post",
    "hex": "AFBDD9"
  },
  {
    "name": "Cadillac",
    "hex": "B04C6A"
  },
  {
    "name": "Matrix",
    "hex": "B05D54"
  },
  {
    "name": "Tapestry",
    "hex": "B05E81"
  },
  {
    "name": "Mai Tai",
    "hex": "B06608"
  },
  {
    "name": "Del Rio",
    "hex": "B09A95"
  },
  {
    "name": "Powder Blue",
    "hex": "B0E0E6"
  },
  {
    "name": "Inch Worm",
    "hex": "B0E313"
  },
  {
    "name": "Bright Red",
    "hex": "B10000"
  },
  {
    "name": "Vesuvius",
    "hex": "B14A0B"
  },
  {
    "name": "Pumpkin Skin",
    "hex": "B1610B"
  },
  {
    "name": "Santa Fe",
    "hex": "B16D52"
  },
  {
    "name": "Teak",
    "hex": "B19461"
  },
  {
    "name": "Fringy Flower",
    "hex": "B1E2C1"
  },
  {
    "name": "Ice Cold",
    "hex": "B1F4E7"
  },
  {
    "name": "Shiraz",
    "hex": "B20931"
  },
  {
    "name": "Biloba Flower",
    "hex": "B2A1EA"
  },
  {
    "name": "Tall Poppy",
    "hex": "B32D29"
  },
  {
    "name": "Fiery Orange",
    "hex": "B35213"
  },
  {
    "name": "Hot Toddy",
    "hex": "B38007"
  },
  {
    "name": "Taupe Gray",
    "hex": "B3AF95"
  },
  {
    "name": "La Rioja",
    "hex": "B3C110"
  },
  {
    "name": "Well Read",
    "hex": "B43332"
  },
  {
    "name": "Blush",
    "hex": "B44668"
  },
  {
    "name": "Jungle Mist",
    "hex": "B4CFD3"
  },
  {
    "name": "Turkish Rose",
    "hex": "B57281"
  },
  {
    "name": "Lavender",
    "hex": "B57EDC"
  },
  {
    "name": "Mongoose",
    "hex": "B5A27F"
  },
  {
    "name": "Olive Green",
    "hex": "B5B35C"
  },
  {
    "name": "Jet Stream",
    "hex": "B5D2CE"
  },
  {
    "name": "Cruise",
    "hex": "B5ECDF"
  },
  {
    "name": "Hibiscus",
    "hex": "B6316C"
  },
  {
    "name": "Thatch",
    "hex": "B69D98"
  },
  {
    "name": "Heathered Gray",
    "hex": "B6B095"
  },
  {
    "name": "Eagle",
    "hex": "B6BAA4"
  },
  {
    "name": "Spindle",
    "hex": "B6D1EA"
  },
  {
    "name": "Gum Leaf",
    "hex": "B6D3BF"
  },
  {
    "name": "Rust",
    "hex": "B7410E"
  },
  {
    "name": "Muddy Waters",
    "hex": "B78E5C"
  },
  {
    "name": "Sahara",
    "hex": "B7A214"
  },
  {
    "name": "Husk",
    "hex": "B7A458"
  },
  {
    "name": "Nobel",
    "hex": "B7B1B1"
  },
  {
    "name": "Heather",
    "hex": "B7C3D0"
  },
  {
    "name": "Madang",
    "hex": "B7F0BE"
  },
  {
    "name": "Milano Red",
    "hex": "B81104"
  },
  {
    "name": "Copper",
    "hex": "B87333"
  },
  {
    "name": "Gimblet",
    "hex": "B8B56A"
  },
  {
    "name": "Green Spring",
    "hex": "B8C1B1"
  },
  {
    "name": "Celery",
    "hex": "B8C25D"
  },
  {
    "name": "Sail",
    "hex": "B8E0F9"
  },
  {
    "name": "Chestnut",
    "hex": "B94E48"
  },
  {
    "name": "Crail",
    "hex": "B95140"
  },
  {
    "name": "Marigold",
    "hex": "B98D28"
  },
  {
    "name": "Wild Willow",
    "hex": "B9C46A"
  },
  {
    "name": "Rainee",
    "hex": "B9C8AC"
  },
  {
    "name": "Guardsman Red",
    "hex": "BA0101"
  },
  {
    "name": "Rock Spray",
    "hex": "BA450C"
  },
  {
    "name": "Bourbon",
    "hex": "BA6F1E"
  },
  {
    "name": "Pirate Gold",
    "hex": "BA7F03"
  },
  {
    "name": "Nomad",
    "hex": "BAB1A2"
  },
  {
    "name": "Submarine",
    "hex": "BAC7C9"
  },
  {
    "name": "Charlotte",
    "hex": "BAEEF9"
  },
  {
    "name": "Medium Red Violet",
    "hex": "BB3385"
  },
  {
    "name": "Brandy Rose",
    "hex": "BB8983"
  },
  {
    "name": "Rio Grande",
    "hex": "BBD009"
  },
  {
    "name": "Surf",
    "hex": "BBD7C1"
  },
  {
    "name": "Powder Ash",
    "hex": "BCC9C2"
  },
  {
    "name": "Tuscany",
    "hex": "BD5E2E"
  },
  {
    "name": "Quicksand",
    "hex": "BD978E"
  },
  {
    "name": "Silk",
    "hex": "BDB1A8"
  },
  {
    "name": "Malta",
    "hex": "BDB2A1"
  },
  {
    "name": "Chatelle",
    "hex": "BDB3C7"
  },
  {
    "name": "Lavender Gray",
    "hex": "BDBBD7"
  },
  {
    "name": "French Gray",
    "hex": "BDBDC6"
  },
  {
    "name": "Clay Ash",
    "hex": "BDC8B3"
  },
  {
    "name": "Loblolly",
    "hex": "BDC9CE"
  },
  {
    "name": "French Pass",
    "hex": "BDEDFD"
  },
  {
    "name": "London Hue",
    "hex": "BEA6C3"
  },
  {
    "name": "Pink Swan",
    "hex": "BEB5B7"
  },
  {
    "name": "Fuego",
    "hex": "BEDE0D"
  },
  {
    "name": "Rose of Sharon",
    "hex": "BF5500"
  },
  {
    "name": "Tide",
    "hex": "BFB8B0"
  },
  {
    "name": "Blue Haze",
    "hex": "BFBED8"
  },
  {
    "name": "Silver Sand",
    "hex": "BFC1C2"
  },
  {
    "name": "Key Lime Pie",
    "hex": "BFC921"
  },
  {
    "name": "Ziggurat",
    "hex": "BFDBE2"
  },
  {
    "name": "Lime",
    "hex": "BFFF00"
  },
  {
    "name": "Thunderbird",
    "hex": "C02B18"
  },
  {
    "name": "Mojo",
    "hex": "C04737"
  },
  {
    "name": "Old Rose",
    "hex": "C08081"
  },
  {
    "name": "Silver",
    "hex": "C0C0C0"
  },
  {
    "name": "Pale Leaf",
    "hex": "C0D3B9"
  },
  {
    "name": "Pixie Green",
    "hex": "C0D8B6"
  },
  {
    "name": "Tia Maria",
    "hex": "C1440E"
  },
  {
    "name": "Fuchsia Pink",
    "hex": "C154C1"
  },
  {
    "name": "Buddha Gold",
    "hex": "C1A004"
  },
  {
    "name": "Bison Hide",
    "hex": "C1B7A4"
  },
  {
    "name": "Tea",
    "hex": "C1BAB0"
  },
  {
    "name": "Gray Suit",
    "hex": "C1BECD"
  },
  {
    "name": "Sprout",
    "hex": "C1D7B0"
  },
  {
    "name": "Sulu",
    "hex": "C1F07C"
  },
  {
    "name": "Indochine",
    "hex": "C26B03"
  },
  {
    "name": "Twine",
    "hex": "C2955D"
  },
  {
    "name": "Cotton Seed",
    "hex": "C2BDB6"
  },
  {
    "name": "Pumice",
    "hex": "C2CAC4"
  },
  {
    "name": "Jagged Ice",
    "hex": "C2E8E5"
  },
  {
    "name": "Maroon Flush",
    "hex": "C32148"
  },
  {
    "name": "Indian Khaki",
    "hex": "C3B091"
  },
  {
    "name": "Pale Slate",
    "hex": "C3BFC1"
  },
  {
    "name": "Gray Nickel",
    "hex": "C3C3BD"
  },
  {
    "name": "Periwinkle Gray",
    "hex": "C3CDE6"
  },
  {
    "name": "Tiara",
    "hex": "C3D1D1"
  },
  {
    "name": "Tropical Blue",
    "hex": "C3DDF9"
  },
  {
    "name": "Cardinal",
    "hex": "C41E3A"
  },
  {
    "name": "Fuzzy Wuzzy Brown",
    "hex": "C45655"
  },
  {
    "name": "Orange Roughy",
    "hex": "C45719"
  },
  {
    "name": "Mist Gray",
    "hex": "C4C4BC"
  },
  {
    "name": "Coriander",
    "hex": "C4D0B0"
  },
  {
    "name": "Mint Tulip",
    "hex": "C4F4EB"
  },
  {
    "name": "Mulberry",
    "hex": "C54B8C"
  },
  {
    "name": "Nugget",
    "hex": "C59922"
  },
  {
    "name": "Tussock",
    "hex": "C5994B"
  },
  {
    "name": "Sea Mist",
    "hex": "C5DBCA"
  },
  {
    "name": "Yellow Green",
    "hex": "C5E17A"
  },
  {
    "name": "Brick Red",
    "hex": "C62D42"
  },
  {
    "name": "Contessa",
    "hex": "C6726B"
  },
  {
    "name": "Oriental Pink",
    "hex": "C69191"
  },
  {
    "name": "Roti",
    "hex": "C6A84B"
  },
  {
    "name": "Ash",
    "hex": "C6C3B5"
  },
  {
    "name": "Kangaroo",
    "hex": "C6C8BD"
  },
  {
    "name": "Las Palmas",
    "hex": "C6E610"
  },
  {
    "name": "Monza",
    "hex": "C7031E"
  },
  {
    "name": "Red Violet",
    "hex": "C71585"
  },
  {
    "name": "Coral Reef",
    "hex": "C7BCA2"
  },
  {
    "name": "Melrose",
    "hex": "C7C1FF"
  },
  {
    "name": "Cloud",
    "hex": "C7C4BF"
  },
  {
    "name": "Ghost",
    "hex": "C7C9D5"
  },
  {
    "name": "Pine Glade",
    "hex": "C7CD90"
  },
  {
    "name": "Botticelli",
    "hex": "C7DDE5"
  },
  {
    "name": "Antique Brass",
    "hex": "C88A65"
  },
  {
    "name": "Lilac",
    "hex": "C8A2C8"
  },
  {
    "name": "Hokey Pokey",
    "hex": "C8A528"
  },
  {
    "name": "Lily",
    "hex": "C8AABF"
  },
  {
    "name": "Laser",
    "hex": "C8B568"
  },
  {
    "name": "Edgewater",
    "hex": "C8E3D7"
  },
  {
    "name": "Piper",
    "hex": "C96323"
  },
  {
    "name": "Pizza",
    "hex": "C99415"
  },
  {
    "name": "Light Wisteria",
    "hex": "C9A0DC"
  },
  {
    "name": "Rodeo Dust",
    "hex": "C9B29B"
  },
  {
    "name": "Sundance",
    "hex": "C9B35B"
  },
  {
    "name": "Earls Green",
    "hex": "C9B93B"
  },
  {
    "name": "Silver Rust",
    "hex": "C9C0BB"
  },
  {
    "name": "Conch",
    "hex": "C9D9D2"
  },
  {
    "name": "Reef",
    "hex": "C9FFA2"
  },
  {
    "name": "Aero Blue",
    "hex": "C9FFE5"
  },
  {
    "name": "Flush Mahogany",
    "hex": "CA3435"
  },
  {
    "name": "Turmeric",
    "hex": "CABB48"
  },
  {
    "name": "Paris White",
    "hex": "CADCD4"
  },
  {
    "name": "Bitter Lemon",
    "hex": "CAE00D"
  },
  {
    "name": "Skeptic",
    "hex": "CAE6DA"
  },
  {
    "name": "Viola",
    "hex": "CB8FA9"
  },
  {
    "name": "Foggy Gray",
    "hex": "CBCAB6"
  },
  {
    "name": "Green Mist",
    "hex": "CBD3B0"
  },
  {
    "name": "Nebula",
    "hex": "CBDBD6"
  },
  {
    "name": "Persian Red",
    "hex": "CC3333"
  },
  {
    "name": "Burnt Orange",
    "hex": "CC5500"
  },
  {
    "name": "Ochre",
    "hex": "CC7722"
  },
  {
    "name": "Puce",
    "hex": "CC8899"
  },
  {
    "name": "Thistle Green",
    "hex": "CCCAA8"
  },
  {
    "name": "Periwinkle",
    "hex": "CCCCFF"
  },
  {
    "name": "Electric Lime",
    "hex": "CCFF00"
  },
  {
    "name": "Tenn",
    "hex": "CD5700"
  },
  {
    "name": "Chestnut Rose",
    "hex": "CD5C5C"
  },
  {
    "name": "Brandy Punch",
    "hex": "CD8429"
  },
  {
    "name": "Onahau",
    "hex": "CDF4FF"
  },
  {
    "name": "Sorrell Brown",
    "hex": "CEB98F"
  },
  {
    "name": "Cold Turkey",
    "hex": "CEBABA"
  },
  {
    "name": "Yuma",
    "hex": "CEC291"
  },
  {
    "name": "Chino",
    "hex": "CEC7A7"
  },
  {
    "name": "Eunry",
    "hex": "CFA39D"
  },
  {
    "name": "Old Gold",
    "hex": "CFB53B"
  },
  {
    "name": "Tasman",
    "hex": "CFDCCF"
  },
  {
    "name": "Surf Crest",
    "hex": "CFE5D2"
  },
  {
    "name": "Humming Bird",
    "hex": "CFF9F3"
  },
  {
    "name": "Scandal",
    "hex": "CFFAF4"
  },
  {
    "name": "Red Stage",
    "hex": "D05F04"
  },
  {
    "name": "Hopbush",
    "hex": "D06DA1"
  },
  {
    "name": "Meteor",
    "hex": "D07D12"
  },
  {
    "name": "Perfume",
    "hex": "D0BEF8"
  },
  {
    "name": "Prelude",
    "hex": "D0C0E5"
  },
  {
    "name": "Tea Green",
    "hex": "D0F0C0"
  },
  {
    "name": "Geebung",
    "hex": "D18F1B"
  },
  {
    "name": "Vanilla",
    "hex": "D1BEA8"
  },
  {
    "name": "Soft Amber",
    "hex": "D1C6B4"
  },
  {
    "name": "Celeste",
    "hex": "D1D2CA"
  },
  {
    "name": "Mischka",
    "hex": "D1D2DD"
  },
  {
    "name": "Pear",
    "hex": "D1E231"
  },
  {
    "name": "Hot Cinnamon",
    "hex": "D2691E"
  },
  {
    "name": "Raw Sienna",
    "hex": "D27D46"
  },
  {
    "name": "Careys Pink",
    "hex": "D29EAA"
  },
  {
    "name": "Tan",
    "hex": "D2B48C"
  },
  {
    "name": "Deco",
    "hex": "D2DA97"
  },
  {
    "name": "Blue Romance",
    "hex": "D2F6DE"
  },
  {
    "name": "Gossip",
    "hex": "D2F8B0"
  },
  {
    "name": "Sisal",
    "hex": "D3CBBA"
  },
  {
    "name": "Swirl",
    "hex": "D3CDC5"
  },
  {
    "name": "Charm",
    "hex": "D47494"
  },
  {
    "name": "Clam Shell",
    "hex": "D4B6AF"
  },
  {
    "name": "Straw",
    "hex": "D4BF8D"
  },
  {
    "name": "Akaroa",
    "hex": "D4C4A8"
  },
  {
    "name": "Bird Flower",
    "hex": "D4CD16"
  },
  {
    "name": "Iron",
    "hex": "D4D7D9"
  },
  {
    "name": "Geyser",
    "hex": "D4DFE2"
  },
  {
    "name": "Hawkes Blue",
    "hex": "D4E2FC"
  },
  {
    "name": "Grenadier",
    "hex": "D54600"
  },
  {
    "name": "Can Can",
    "hex": "D591A4"
  },
  {
    "name": "Whiskey",
    "hex": "D59A6F"
  },
  {
    "name": "Winter Hazel",
    "hex": "D5D195"
  },
  {
    "name": "Granny Apple",
    "hex": "D5F6E3"
  },
  {
    "name": "My Pink",
    "hex": "D69188"
  },
  {
    "name": "Tacha",
    "hex": "D6C562"
  },
  {
    "name": "Moon Raker",
    "hex": "D6CEF6"
  },
  {
    "name": "Quill Gray",
    "hex": "D6D6D1"
  },
  {
    "name": "Snowy Mint",
    "hex": "D6FFDB"
  },
  {
    "name": "New York Pink",
    "hex": "D7837F"
  },
  {
    "name": "Pavlova",
    "hex": "D7C498"
  },
  {
    "name": "Fog",
    "hex": "D7D0FF"
  },
  {
    "name": "Valencia",
    "hex": "D84437"
  },
  {
    "name": "Japonica",
    "hex": "D87C63"
  },
  {
    "name": "Thistle",
    "hex": "D8BFD8"
  },
  {
    "name": "Maverick",
    "hex": "D8C2D5"
  },
  {
    "name": "Foam",
    "hex": "D8FCFA"
  },
  {
    "name": "Cabaret",
    "hex": "D94972"
  },
  {
    "name": "Burning Sand",
    "hex": "D99376"
  },
  {
    "name": "Cameo",
    "hex": "D9B99B"
  },
  {
    "name": "Timberwolf",
    "hex": "D9D6CF"
  },
  {
    "name": "Tana",
    "hex": "D9DCC1"
  },
  {
    "name": "Link Water",
    "hex": "D9E4F5"
  },
  {
    "name": "Mabel",
    "hex": "D9F7FF"
  },
  {
    "name": "Cerise",
    "hex": "DA3287"
  },
  {
    "name": "Flame Pea",
    "hex": "DA5B38"
  },
  {
    "name": "Bamboo",
    "hex": "DA6304"
  },
  {
    "name": "Red Damask",
    "hex": "DA6A41"
  },
  {
    "name": "Orchid",
    "hex": "DA70D6"
  },
  {
    "name": "Copperfield",
    "hex": "DA8A67"
  },
  {
    "name": "Golden Grass",
    "hex": "DAA520"
  },
  {
    "name": "Zanah",
    "hex": "DAECD6"
  },
  {
    "name": "Iceberg",
    "hex": "DAF4F0"
  },
  {
    "name": "Oyster Bay",
    "hex": "DAFAFF"
  },
  {
    "name": "Cranberry",
    "hex": "DB5079"
  },
  {
    "name": "Petite Orchid",
    "hex": "DB9690"
  },
  {
    "name": "Di Serria",
    "hex": "DB995E"
  },
  {
    "name": "Alto",
    "hex": "DBDBDB"
  },
  {
    "name": "Frosted Mint",
    "hex": "DBFFF8"
  },
  {
    "name": "Crimson",
    "hex": "DC143C"
  },
  {
    "name": "Punch",
    "hex": "DC4333"
  },
  {
    "name": "Galliano",
    "hex": "DCB20C"
  },
  {
    "name": "Blossom",
    "hex": "DCB4BC"
  },
  {
    "name": "Wattle",
    "hex": "DCD747"
  },
  {
    "name": "Westar",
    "hex": "DCD9D2"
  },
  {
    "name": "Moon Mist",
    "hex": "DCDDCC"
  },
  {
    "name": "Caper",
    "hex": "DCEDB4"
  },
  {
    "name": "Swans Down",
    "hex": "DCF0EA"
  },
  {
    "name": "Swiss Coffee",
    "hex": "DDD6D5"
  },
  {
    "name": "White Ice",
    "hex": "DDF9F1"
  },
  {
    "name": "Cerise Red",
    "hex": "DE3163"
  },
  {
    "name": "Roman",
    "hex": "DE6360"
  },
  {
    "name": "Tumbleweed",
    "hex": "DEA681"
  },
  {
    "name": "Gold Tips",
    "hex": "DEBA13"
  },
  {
    "name": "Brandy",
    "hex": "DEC196"
  },
  {
    "name": "Wafer",
    "hex": "DECBC6"
  },
  {
    "name": "Sapling",
    "hex": "DED4A4"
  },
  {
    "name": "Barberry",
    "hex": "DED717"
  },
  {
    "name": "Beryl Green",
    "hex": "DEE5C0"
  },
  {
    "name": "Pattens Blue",
    "hex": "DEF5FF"
  },
  {
    "name": "Heliotrope",
    "hex": "DF73FF"
  },
  {
    "name": "Apache",
    "hex": "DFBE6F"
  },
  {
    "name": "Chenin",
    "hex": "DFCD6F"
  },
  {
    "name": "Lola",
    "hex": "DFCFDB"
  },
  {
    "name": "Willow Brook",
    "hex": "DFECDA"
  },
  {
    "name": "Chartreuse Yellow",
    "hex": "DFFF00"
  },
  {
    "name": "Mauve",
    "hex": "E0B0FF"
  },
  {
    "name": "Anzac",
    "hex": "E0B646"
  },
  {
    "name": "Harvest Gold",
    "hex": "E0B974"
  },
  {
    "name": "Calico",
    "hex": "E0C095"
  },
  {
    "name": "Baby Blue",
    "hex": "E0FFFF"
  },
  {
    "name": "Sunglo",
    "hex": "E16865"
  },
  {
    "name": "Equator",
    "hex": "E1BC64"
  },
  {
    "name": "Pink Flare",
    "hex": "E1C0C8"
  },
  {
    "name": "Periglacial Blue",
    "hex": "E1E6D6"
  },
  {
    "name": "Kidnapper",
    "hex": "E1EAD4"
  },
  {
    "name": "Tara",
    "hex": "E1F6E8"
  },
  {
    "name": "Mandy",
    "hex": "E25465"
  },
  {
    "name": "Terracotta",
    "hex": "E2725B"
  },
  {
    "name": "Golden Bell",
    "hex": "E28913"
  },
  {
    "name": "Shocking",
    "hex": "E292C0"
  },
  {
    "name": "Dixie",
    "hex": "E29418"
  },
  {
    "name": "Light Orchid",
    "hex": "E29CD2"
  },
  {
    "name": "Snuff",
    "hex": "E2D8ED"
  },
  {
    "name": "Mystic",
    "hex": "E2EBED"
  },
  {
    "name": "Apple Green",
    "hex": "E2F3EC"
  },
  {
    "name": "Razzmatazz",
    "hex": "E30B5C"
  },
  {
    "name": "Alizarin Crimson",
    "hex": "E32636"
  },
  {
    "name": "Cinnabar",
    "hex": "E34234"
  },
  {
    "name": "Cavern Pink",
    "hex": "E3BEBE"
  },
  {
    "name": "Peppermint",
    "hex": "E3F5E1"
  },
  {
    "name": "Mindaro",
    "hex": "E3F988"
  },
  {
    "name": "Deep Blush",
    "hex": "E47698"
  },
  {
    "name": "Gamboge",
    "hex": "E49B0F"
  },
  {
    "name": "Melanie",
    "hex": "E4C2D5"
  },
  {
    "name": "Twilight",
    "hex": "E4CFDE"
  },
  {
    "name": "Bone",
    "hex": "E4D1C0"
  },
  {
    "name": "Sunflower",
    "hex": "E4D422"
  },
  {
    "name": "Grain Brown",
    "hex": "E4D5B7"
  },
  {
    "name": "Zombie",
    "hex": "E4D69B"
  },
  {
    "name": "Frostee",
    "hex": "E4F6E7"
  },
  {
    "name": "Snow Flurry",
    "hex": "E4FFD1"
  },
  {
    "name": "Amaranth",
    "hex": "E52B50"
  },
  {
    "name": "Zest",
    "hex": "E5841B"
  },
  {
    "name": "Dust Storm",
    "hex": "E5CCC9"
  },
  {
    "name": "Stark White",
    "hex": "E5D7BD"
  },
  {
    "name": "Hampton",
    "hex": "E5D8AF"
  },
  {
    "name": "Bon Jour",
    "hex": "E5E0E1"
  },
  {
    "name": "Mercury",
    "hex": "E5E5E5"
  },
  {
    "name": "Polar",
    "hex": "E5F9F6"
  },
  {
    "name": "Trinidad",
    "hex": "E64E03"
  },
  {
    "name": "Gold Sand",
    "hex": "E6BE8A"
  },
  {
    "name": "Cashmere",
    "hex": "E6BEA5"
  },
  {
    "name": "Double Spanish White",
    "hex": "E6D7B9"
  },
  {
    "name": "Satin Linen",
    "hex": "E6E4D4"
  },
  {
    "name": "Harp",
    "hex": "E6F2EA"
  },
  {
    "name": "Off Green",
    "hex": "E6F8F3"
  },
  {
    "name": "Hint of Green",
    "hex": "E6FFE9"
  },
  {
    "name": "Tranquil",
    "hex": "E6FFFF"
  },
  {
    "name": "Mango Tango",
    "hex": "E77200"
  },
  {
    "name": "Christine",
    "hex": "E7730A"
  },
  {
    "name": "Tonys Pink",
    "hex": "E79F8C"
  },
  {
    "name": "Kobi",
    "hex": "E79FC4"
  },
  {
    "name": "Rose Fog",
    "hex": "E7BCB4"
  },
  {
    "name": "Corn",
    "hex": "E7BF05"
  },
  {
    "name": "Putty",
    "hex": "E7CD8C"
  },
  {
    "name": "Gray Nurse",
    "hex": "E7ECE6"
  },
  {
    "name": "Lily White",
    "hex": "E7F8FF"
  },
  {
    "name": "Bubbles",
    "hex": "E7FEFF"
  },
  {
    "name": "Fire Bush",
    "hex": "E89928"
  },
  {
    "name": "Shilo",
    "hex": "E8B9B3"
  },
  {
    "name": "Pearl Bush",
    "hex": "E8E0D5"
  },
  {
    "name": "Green White",
    "hex": "E8EBE0"
  },
  {
    "name": "Chrome White",
    "hex": "E8F1D4"
  },
  {
    "name": "Gin",
    "hex": "E8F2EB"
  },
  {
    "name": "Aqua Squeeze",
    "hex": "E8F5F2"
  },
  {
    "name": "Clementine",
    "hex": "E96E00"
  },
  {
    "name": "Burnt Sienna",
    "hex": "E97451"
  },
  {
    "name": "Tahiti Gold",
    "hex": "E97C07"
  },
  {
    "name": "Oyster Pink",
    "hex": "E9CECD"
  },
  {
    "name": "Confetti",
    "hex": "E9D75A"
  },
  {
    "name": "Ebb",
    "hex": "E9E3E3"
  },
  {
    "name": "Ottoman",
    "hex": "E9F8ED"
  },
  {
    "name": "Clear Day",
    "hex": "E9FFFD"
  },
  {
    "name": "Carissma",
    "hex": "EA88A8"
  },
  {
    "name": "Porsche",
    "hex": "EAAE69"
  },
  {
    "name": "Tulip Tree",
    "hex": "EAB33B"
  },
  {
    "name": "Rob Roy",
    "hex": "EAC674"
  },
  {
    "name": "Raffia",
    "hex": "EADAB8"
  },
  {
    "name": "White Rock",
    "hex": "EAE8D4"
  },
  {
    "name": "Panache",
    "hex": "EAF6EE"
  },
  {
    "name": "Solitude",
    "hex": "EAF6FF"
  },
  {
    "name": "Aqua Spring",
    "hex": "EAF9F5"
  },
  {
    "name": "Dew",
    "hex": "EAFFFE"
  },
  {
    "name": "Apricot",
    "hex": "EB9373"
  },
  {
    "name": "Zinnwaldite",
    "hex": "EBC2AF"
  },
  {
    "name": "Fuel Yellow",
    "hex": "ECA927"
  },
  {
    "name": "Ronchi",
    "hex": "ECC54E"
  },
  {
    "name": "French Lilac",
    "hex": "ECC7EE"
  },
  {
    "name": "Just Right",
    "hex": "ECCDB9"
  },
  {
    "name": "Wild Rice",
    "hex": "ECE090"
  },
  {
    "name": "Fall Green",
    "hex": "ECEBBD"
  },
  {
    "name": "Aths Special",
    "hex": "ECEBCE"
  },
  {
    "name": "Starship",
    "hex": "ECF245"
  },
  {
    "name": "Red Ribbon",
    "hex": "ED0A3F"
  },
  {
    "name": "Tango",
    "hex": "ED7A1C"
  },
  {
    "name": "Carrot Orange",
    "hex": "ED9121"
  },
  {
    "name": "Sea Pink",
    "hex": "ED989E"
  },
  {
    "name": "Tacao",
    "hex": "EDB381"
  },
  {
    "name": "Desert Sand",
    "hex": "EDC9AF"
  },
  {
    "name": "Pancho",
    "hex": "EDCDAB"
  },
  {
    "name": "Chamois",
    "hex": "EDDCB1"
  },
  {
    "name": "Primrose",
    "hex": "EDEA99"
  },
  {
    "name": "Frost",
    "hex": "EDF5DD"
  },
  {
    "name": "Aqua Haze",
    "hex": "EDF5F5"
  },
  {
    "name": "Zumthor",
    "hex": "EDF6FF"
  },
  {
    "name": "Narvik",
    "hex": "EDF9F1"
  },
  {
    "name": "Honeysuckle",
    "hex": "EDFC84"
  },
  {
    "name": "Lavender Magenta",
    "hex": "EE82EE"
  },
  {
    "name": "Beauty Bush",
    "hex": "EEC1BE"
  },
  {
    "name": "Chalky",
    "hex": "EED794"
  },
  {
    "name": "Almond",
    "hex": "EED9C4"
  },
  {
    "name": "Flax",
    "hex": "EEDC82"
  },
  {
    "name": "Bizarre",
    "hex": "EEDEDA"
  },
  {
    "name": "Double Colonial White",
    "hex": "EEE3AD"
  },
  {
    "name": "Cararra",
    "hex": "EEEEE8"
  },
  {
    "name": "Manz",
    "hex": "EEEF78"
  },
  {
    "name": "Tahuna Sands",
    "hex": "EEF0C8"
  },
  {
    "name": "Athens Gray",
    "hex": "EEF0F3"
  },
  {
    "name": "Tusk",
    "hex": "EEF3C3"
  },
  {
    "name": "Loafer",
    "hex": "EEF4DE"
  },
  {
    "name": "Catskill White",
    "hex": "EEF6F7"
  },
  {
    "name": "Twilight Blue",
    "hex": "EEFDFF"
  },
  {
    "name": "Jonquil",
    "hex": "EEFF9A"
  },
  {
    "name": "Rice Flower",
    "hex": "EEFFE2"
  },
  {
    "name": "Jaffa",
    "hex": "EF863F"
  },
  {
    "name": "Gallery",
    "hex": "EFEFEF"
  },
  {
    "name": "Porcelain",
    "hex": "EFF2F3"
  },
  {
    "name": "Mauvelous",
    "hex": "F091A9"
  },
  {
    "name": "Golden Dream",
    "hex": "F0D52D"
  },
  {
    "name": "Golden Sand",
    "hex": "F0DB7D"
  },
  {
    "name": "Buff",
    "hex": "F0DC82"
  },
  {
    "name": "Prim",
    "hex": "F0E2EC"
  },
  {
    "name": "Khaki",
    "hex": "F0E68C"
  },
  {
    "name": "Selago",
    "hex": "F0EEFD"
  },
  {
    "name": "Titan White",
    "hex": "F0EEFF"
  },
  {
    "name": "Alice Blue",
    "hex": "F0F8FF"
  },
  {
    "name": "Feta",
    "hex": "F0FCEA"
  },
  {
    "name": "Gold Drop",
    "hex": "F18200"
  },
  {
    "name": "Wewak",
    "hex": "F19BAB"
  },
  {
    "name": "Sahara Sand",
    "hex": "F1E788"
  },
  {
    "name": "Parchment",
    "hex": "F1E9D2"
  },
  {
    "name": "Blue Chalk",
    "hex": "F1E9FF"
  },
  {
    "name": "Mint Julep",
    "hex": "F1EEC1"
  },
  {
    "name": "Seashell",
    "hex": "F1F1F1"
  },
  {
    "name": "Saltpan",
    "hex": "F1F7F2"
  },
  {
    "name": "Tidal",
    "hex": "F1FFAD"
  },
  {
    "name": "Chiffon",
    "hex": "F1FFC8"
  },
  {
    "name": "Flamingo",
    "hex": "F2552A"
  },
  {
    "name": "Tangerine",
    "hex": "F28500"
  },
  {
    "name": "Mandys Pink",
    "hex": "F2C3B2"
  },
  {
    "name": "Concrete",
    "hex": "F2F2F2"
  },
  {
    "name": "Black Squeeze",
    "hex": "F2FAFA"
  },
  {
    "name": "Pomegranate",
    "hex": "F34723"
  },
  {
    "name": "Buttercup",
    "hex": "F3AD16"
  },
  {
    "name": "New Orleans",
    "hex": "F3D69D"
  },
  {
    "name": "Vanilla Ice",
    "hex": "F3D9DF"
  },
  {
    "name": "Sidecar",
    "hex": "F3E7BB"
  },
  {
    "name": "Dawn Pink",
    "hex": "F3E9E5"
  },
  {
    "name": "Wheatfield",
    "hex": "F3EDCF"
  },
  {
    "name": "Canary",
    "hex": "F3FB62"
  },
  {
    "name": "Orinoco",
    "hex": "F3FBD4"
  },
  {
    "name": "Carla",
    "hex": "F3FFD8"
  },
  {
    "name": "Hollywood Cerise",
    "hex": "F400A1"
  },
  {
    "name": "Sandy brown",
    "hex": "F4A460"
  },
  {
    "name": "Saffron",
    "hex": "F4C430"
  },
  {
    "name": "Ripe Lemon",
    "hex": "F4D81C"
  },
  {
    "name": "Janna",
    "hex": "F4EBD3"
  },
  {
    "name": "Pampas",
    "hex": "F4F2EE"
  },
  {
    "name": "Wild Sand",
    "hex": "F4F4F4"
  },
  {
    "name": "Zircon",
    "hex": "F4F8FF"
  },
  {
    "name": "Froly",
    "hex": "F57584"
  },
  {
    "name": "Cream Can",
    "hex": "F5C85C"
  },
  {
    "name": "Manhattan",
    "hex": "F5C999"
  },
  {
    "name": "Maize",
    "hex": "F5D5A0"
  },
  {
    "name": "Wheat",
    "hex": "F5DEB3"
  },
  {
    "name": "Sandwisp",
    "hex": "F5E7A2"
  },
  {
    "name": "Pot Pourri",
    "hex": "F5E7E2"
  },
  {
    "name": "Albescent White",
    "hex": "F5E9D3"
  },
  {
    "name": "Soft Peach",
    "hex": "F5EDEF"
  },
  {
    "name": "Ecru White",
    "hex": "F5F3E5"
  },
  {
    "name": "Beige",
    "hex": "F5F5DC"
  },
  {
    "name": "Golden Fizz",
    "hex": "F5FB3D"
  },
  {
    "name": "Australian Mint",
    "hex": "F5FFBE"
  },
  {
    "name": "French Rose",
    "hex": "F64A8A"
  },
  {
    "name": "Brilliant Rose",
    "hex": "F653A6"
  },
  {
    "name": "Illusion",
    "hex": "F6A4C9"
  },
  {
    "name": "Merino",
    "hex": "F6F0E6"
  },
  {
    "name": "Black Haze",
    "hex": "F6F7F7"
  },
  {
    "name": "Spring Sun",
    "hex": "F6FFDC"
  },
  {
    "name": "Violet Red",
    "hex": "F7468A"
  },
  {
    "name": "Chilean Fire",
    "hex": "F77703"
  },
  {
    "name": "Persian Pink",
    "hex": "F77FBE"
  },
  {
    "name": "Rajah",
    "hex": "F7B668"
  },
  {
    "name": "Azalea",
    "hex": "F7C8DA"
  },
  {
    "name": "We Peep",
    "hex": "F7DBE6"
  },
  {
    "name": "Quarter Spanish White",
    "hex": "F7F2E1"
  },
  {
    "name": "Whisper",
    "hex": "F7F5FA"
  },
  {
    "name": "Snow Drift",
    "hex": "F7FAF7"
  },
  {
    "name": "Casablanca",
    "hex": "F8B853"
  },
  {
    "name": "Chantilly",
    "hex": "F8C3DF"
  },
  {
    "name": "Cherub",
    "hex": "F8D9E9"
  },
  {
    "name": "Marzipan",
    "hex": "F8DB9D"
  },
  {
    "name": "Energy Yellow",
    "hex": "F8DD5C"
  },
  {
    "name": "Givry",
    "hex": "F8E4BF"
  },
  {
    "name": "White Linen",
    "hex": "F8F0E8"
  },
  {
    "name": "Magnolia",
    "hex": "F8F4FF"
  },
  {
    "name": "Spring Wood",
    "hex": "F8F6F1"
  },
  {
    "name": "Coconut Cream",
    "hex": "F8F7DC"
  },
  {
    "name": "White Lilac",
    "hex": "F8F7FC"
  },
  {
    "name": "Desert Storm",
    "hex": "F8F8F7"
  },
  {
    "name": "Texas",
    "hex": "F8F99C"
  },
  {
    "name": "Corn Field",
    "hex": "F8FACD"
  },
  {
    "name": "Mimosa",
    "hex": "F8FDD3"
  },
  {
    "name": "Carnation",
    "hex": "F95A61"
  },
  {
    "name": "Saffron Mango",
    "hex": "F9BF58"
  },
  {
    "name": "Carousel Pink",
    "hex": "F9E0ED"
  },
  {
    "name": "Dairy Cream",
    "hex": "F9E4BC"
  },
  {
    "name": "Portica",
    "hex": "F9E663"
  },
  {
    "name": "Amour",
    "hex": "F9EAF3"
  },
  {
    "name": "Rum Swizzle",
    "hex": "F9F8E4"
  },
  {
    "name": "Dolly",
    "hex": "F9FF8B"
  },
  {
    "name": "Sugar Cane",
    "hex": "F9FFF6"
  },
  {
    "name": "Ecstasy",
    "hex": "FA7814"
  },
  {
    "name": "Tan Hide",
    "hex": "FA9D5A"
  },
  {
    "name": "Corvette",
    "hex": "FAD3A2"
  },
  {
    "name": "Peach Yellow",
    "hex": "FADFAD"
  },
  {
    "name": "Turbo",
    "hex": "FAE600"
  },
  {
    "name": "Astra",
    "hex": "FAEAB9"
  },
  {
    "name": "Champagne",
    "hex": "FAECCC"
  },
  {
    "name": "Linen",
    "hex": "FAF0E6"
  },
  {
    "name": "Fantasy",
    "hex": "FAF3F0"
  },
  {
    "name": "Citrine White",
    "hex": "FAF7D6"
  },
  {
    "name": "Alabaster",
    "hex": "FAFAFA"
  },
  {
    "name": "Hint of Yellow",
    "hex": "FAFDE4"
  },
  {
    "name": "Milan",
    "hex": "FAFFA4"
  },
  {
    "name": "Brink Pink",
    "hex": "FB607F"
  },
  {
    "name": "Geraldine",
    "hex": "FB8989"
  },
  {
    "name": "Lavender Rose",
    "hex": "FBA0E3"
  },
  {
    "name": "Sea Buckthorn",
    "hex": "FBA129"
  },
  {
    "name": "Sun",
    "hex": "FBAC13"
  },
  {
    "name": "Lavender Pink",
    "hex": "FBAED2"
  },
  {
    "name": "Rose Bud",
    "hex": "FBB2A3"
  },
  {
    "name": "Cupid",
    "hex": "FBBEDA"
  },
  {
    "name": "Classic Rose",
    "hex": "FBCCE7"
  },
  {
    "name": "Apricot Peach",
    "hex": "FBCEB1"
  },
  {
    "name": "Banana Mania",
    "hex": "FBE7B2"
  },
  {
    "name": "Marigold Yellow",
    "hex": "FBE870"
  },
  {
    "name": "Festival",
    "hex": "FBE96C"
  },
  {
    "name": "Sweet Corn",
    "hex": "FBEA8C"
  },
  {
    "name": "Candy Corn",
    "hex": "FBEC5D"
  },
  {
    "name": "Hint of Red",
    "hex": "FBF9F9"
  },
  {
    "name": "Shalimar",
    "hex": "FBFFBA"
  },
  {
    "name": "Shocking Pink",
    "hex": "FC0FC0"
  },
  {
    "name": "Tickle Me Pink",
    "hex": "FC80A5"
  },
  {
    "name": "Tree Poppy",
    "hex": "FC9C1D"
  },
  {
    "name": "Lightning Yellow",
    "hex": "FCC01E"
  },
  {
    "name": "Goldenrod",
    "hex": "FCD667"
  },
  {
    "name": "Candlelight",
    "hex": "FCD917"
  },
  {
    "name": "Cherokee",
    "hex": "FCDA98"
  },
  {
    "name": "Double Pearl Lusta",
    "hex": "FCF4D0"
  },
  {
    "name": "Pearl Lusta",
    "hex": "FCF4DC"
  },
  {
    "name": "Vista White",
    "hex": "FCF8F7"
  },
  {
    "name": "Bianca",
    "hex": "FCFBF3"
  },
  {
    "name": "Moon Glow",
    "hex": "FCFEDA"
  },
  {
    "name": "China Ivory",
    "hex": "FCFFE7"
  },
  {
    "name": "Ceramic",
    "hex": "FCFFF9"
  },
  {
    "name": "Torch Red",
    "hex": "FD0E35"
  },
  {
    "name": "Wild Watermelon",
    "hex": "FD5B78"
  },
  {
    "name": "Crusta",
    "hex": "FD7B33"
  },
  {
    "name": "Sorbus",
    "hex": "FD7C07"
  },
  {
    "name": "Sweet Pink",
    "hex": "FD9FA2"
  },
  {
    "name": "Light Apricot",
    "hex": "FDD5B1"
  },
  {
    "name": "Pig Pink",
    "hex": "FDD7E4"
  },
  {
    "name": "Cinderella",
    "hex": "FDE1DC"
  },
  {
    "name": "Golden Glow",
    "hex": "FDE295"
  },
  {
    "name": "Lemon",
    "hex": "FDE910"
  },
  {
    "name": "Old Lace",
    "hex": "FDF5E6"
  },
  {
    "name": "Half Colonial White",
    "hex": "FDF6D3"
  },
  {
    "name": "Drover",
    "hex": "FDF7AD"
  },
  {
    "name": "Pale Prim",
    "hex": "FDFEB8"
  },
  {
    "name": "Cumulus",
    "hex": "FDFFD5"
  },
  {
    "name": "Persian Rose",
    "hex": "FE28A2"
  },
  {
    "name": "Sunset Orange",
    "hex": "FE4C40"
  },
  {
    "name": "Bittersweet",
    "hex": "FE6F5E"
  },
  {
    "name": "California",
    "hex": "FE9D04"
  },
  {
    "name": "Yellow Sea",
    "hex": "FEA904"
  },
  {
    "name": "Melon",
    "hex": "FEBAAD"
  },
  {
    "name": "Bright Sun",
    "hex": "FED33C"
  },
  {
    "name": "Dandelion",
    "hex": "FED85D"
  },
  {
    "name": "Salomie",
    "hex": "FEDB8D"
  },
  {
    "name": "Cape Honey",
    "hex": "FEE5AC"
  },
  {
    "name": "Remy",
    "hex": "FEEBF3"
  },
  {
    "name": "Oasis",
    "hex": "FEEFCE"
  },
  {
    "name": "Bridesmaid",
    "hex": "FEF0EC"
  },
  {
    "name": "Beeswax",
    "hex": "FEF2C7"
  },
  {
    "name": "Bleach White",
    "hex": "FEF3D8"
  },
  {
    "name": "Pipi",
    "hex": "FEF4CC"
  },
  {
    "name": "Half Spanish White",
    "hex": "FEF4DB"
  },
  {
    "name": "Wisp Pink",
    "hex": "FEF4F8"
  },
  {
    "name": "Provincial Pink",
    "hex": "FEF5F1"
  },
  {
    "name": "Half Dutch White",
    "hex": "FEF7DE"
  },
  {
    "name": "Solitaire",
    "hex": "FEF8E2"
  },
  {
    "name": "White Pointer",
    "hex": "FEF8FF"
  },
  {
    "name": "Off Yellow",
    "hex": "FEF9E3"
  },
  {
    "name": "Orange White",
    "hex": "FEFCED"
  },
  {
    "name": "Red",
    "hex": "FF0000"
  },
  {
    "name": "Rose",
    "hex": "FF007F"
  },
  {
    "name": "Purple Pizzazz",
    "hex": "FF00CC"
  },
  {
    "name": "Magenta / Fuchsia",
    "hex": "FF00FF"
  },
  {
    "name": "Scarlet",
    "hex": "FF2400"
  },
  {
    "name": "Wild Strawberry",
    "hex": "FF3399"
  },
  {
    "name": "Razzle Dazzle Rose",
    "hex": "FF33CC"
  },
  {
    "name": "Radical Red",
    "hex": "FF355E"
  },
  {
    "name": "Red Orange",
    "hex": "FF3F34"
  },
  {
    "name": "Coral Red",
    "hex": "FF4040"
  },
  {
    "name": "Vermilion",
    "hex": "FF4D00"
  },
  {
    "name": "International Orange",
    "hex": "FF4F00"
  },
  {
    "name": "Outrageous Orange",
    "hex": "FF6037"
  },
  {
    "name": "Blaze Orange",
    "hex": "FF6600"
  },
  {
    "name": "Pink Flamingo",
    "hex": "FF66FF"
  },
  {
    "name": "Orange",
    "hex": "FF681F"
  },
  {
    "name": "Hot Pink",
    "hex": "FF69B4"
  },
  {
    "name": "Persimmon",
    "hex": "FF6B53"
  },
  {
    "name": "Blush Pink",
    "hex": "FF6FFF"
  },
  {
    "name": "Burning Orange",
    "hex": "FF7034"
  },
  {
    "name": "Pumpkin",
    "hex": "FF7518"
  },
  {
    "name": "Flamenco",
    "hex": "FF7D07"
  },
  {
    "name": "Flush Orange",
    "hex": "FF7F00"
  },
  {
    "name": "Coral",
    "hex": "FF7F50"
  },
  {
    "name": "Salmon",
    "hex": "FF8C69"
  },
  {
    "name": "Pizazz",
    "hex": "FF9000"
  },
  {
    "name": "West Side",
    "hex": "FF910F"
  },
  {
    "name": "Pink Salmon",
    "hex": "FF91A4"
  },
  {
    "name": "Neon Carrot",
    "hex": "FF9933"
  },
  {
    "name": "Atomic Tangerine",
    "hex": "FF9966"
  },
  {
    "name": "Vivid Tangerine",
    "hex": "FF9980"
  },
  {
    "name": "Sunshade",
    "hex": "FF9E2C"
  },
  {
    "name": "Orange Peel",
    "hex": "FFA000"
  },
  {
    "name": "Mona Lisa",
    "hex": "FFA194"
  },
  {
    "name": "Web Orange",
    "hex": "FFA500"
  },
  {
    "name": "Carnation Pink",
    "hex": "FFA6C9"
  },
  {
    "name": "Hit Pink",
    "hex": "FFAB81"
  },
  {
    "name": "Yellow Orange",
    "hex": "FFAE42"
  },
  {
    "name": "Cornflower Lilac",
    "hex": "FFB0AC"
  },
  {
    "name": "Sundown",
    "hex": "FFB1B3"
  },
  {
    "name": "My Sin",
    "hex": "FFB31F"
  },
  {
    "name": "Texas Rose",
    "hex": "FFB555"
  },
  {
    "name": "Cotton Candy",
    "hex": "FFB7D5"
  },
  {
    "name": "Macaroni and Cheese",
    "hex": "FFB97B"
  },
  {
    "name": "Selective Yellow",
    "hex": "FFBA00"
  },
  {
    "name": "Koromiko",
    "hex": "FFBD5F"
  },
  {
    "name": "Amber",
    "hex": "FFBF00"
  },
  {
    "name": "Wax Flower",
    "hex": "FFC0A8"
  },
  {
    "name": "Pink",
    "hex": "FFC0CB"
  },
  {
    "name": "Your Pink",
    "hex": "FFC3C0"
  },
  {
    "name": "Supernova",
    "hex": "FFC901"
  },
  {
    "name": "Flesh",
    "hex": "FFCBA4"
  },
  {
    "name": "Sunglow",
    "hex": "FFCC33"
  },
  {
    "name": "Golden Tainoi",
    "hex": "FFCC5C"
  },
  {
    "name": "Peach Orange",
    "hex": "FFCC99"
  },
  {
    "name": "Chardonnay",
    "hex": "FFCD8C"
  },
  {
    "name": "Pastel Pink",
    "hex": "FFD1DC"
  },
  {
    "name": "Romantic",
    "hex": "FFD2B7"
  },
  {
    "name": "Grandis",
    "hex": "FFD38C"
  },
  {
    "name": "Gold",
    "hex": "FFD700"
  },
  {
    "name": "School bus Yellow",
    "hex": "FFD800"
  },
  {
    "name": "Cosmos",
    "hex": "FFD8D9"
  },
  {
    "name": "Mustard",
    "hex": "FFDB58"
  },
  {
    "name": "Peach Schnapps",
    "hex": "FFDCD6"
  },
  {
    "name": "Caramel",
    "hex": "FFDDAF"
  },
  {
    "name": "Tuft Bush",
    "hex": "FFDDCD"
  },
  {
    "name": "Watusi",
    "hex": "FFDDCF"
  },
  {
    "name": "Pink Lace",
    "hex": "FFDDF4"
  },
  {
    "name": "Navajo White",
    "hex": "FFDEAD"
  },
  {
    "name": "Frangipani",
    "hex": "FFDEB3"
  },
  {
    "name": "Pippin",
    "hex": "FFE1DF"
  },
  {
    "name": "Pale Rose",
    "hex": "FFE1F2"
  },
  {
    "name": "Negroni",
    "hex": "FFE2C5"
  },
  {
    "name": "Cream Brulee",
    "hex": "FFE5A0"
  },
  {
    "name": "Peach",
    "hex": "FFE5B4"
  },
  {
    "name": "Tequila",
    "hex": "FFE6C7"
  },
  {
    "name": "Kournikova",
    "hex": "FFE772"
  },
  {
    "name": "Sandy Beach",
    "hex": "FFEAC8"
  },
  {
    "name": "Karry",
    "hex": "FFEAD4"
  },
  {
    "name": "Broom",
    "hex": "FFEC13"
  },
  {
    "name": "Colonial White",
    "hex": "FFEDBC"
  },
  {
    "name": "Derby",
    "hex": "FFEED8"
  },
  {
    "name": "Vis Vis",
    "hex": "FFEFA1"
  },
  {
    "name": "Egg White",
    "hex": "FFEFC1"
  },
  {
    "name": "Papaya Whip",
    "hex": "FFEFD5"
  },
  {
    "name": "Fair Pink",
    "hex": "FFEFEC"
  },
  {
    "name": "Peach Cream",
    "hex": "FFF0DB"
  },
  {
    "name": "Lavender blush",
    "hex": "FFF0F5"
  },
  {
    "name": "Gorse",
    "hex": "FFF14F"
  },
  {
    "name": "Buttermilk",
    "hex": "FFF1B5"
  },
  {
    "name": "Pink Lady",
    "hex": "FFF1D8"
  },
  {
    "name": "Forget Me Not",
    "hex": "FFF1EE"
  },
  {
    "name": "Tutu",
    "hex": "FFF1F9"
  },
  {
    "name": "Picasso",
    "hex": "FFF39D"
  },
  {
    "name": "Chardon",
    "hex": "FFF3F1"
  },
  {
    "name": "Paris Daisy",
    "hex": "FFF46E"
  },
  {
    "name": "Barley White",
    "hex": "FFF4CE"
  },
  {
    "name": "Egg Sour",
    "hex": "FFF4DD"
  },
  {
    "name": "Sazerac",
    "hex": "FFF4E0"
  },
  {
    "name": "Serenade",
    "hex": "FFF4E8"
  },
  {
    "name": "Chablis",
    "hex": "FFF4F3"
  },
  {
    "name": "Seashell Peach",
    "hex": "FFF5EE"
  },
  {
    "name": "Sauvignon",
    "hex": "FFF5F3"
  },
  {
    "name": "Milk Punch",
    "hex": "FFF6D4"
  },
  {
    "name": "Varden",
    "hex": "FFF6DF"
  },
  {
    "name": "Rose White",
    "hex": "FFF6F5"
  },
  {
    "name": "Baja White",
    "hex": "FFF8D1"
  },
  {
    "name": "Gin Fizz",
    "hex": "FFF9E2"
  },
  {
    "name": "Early Dawn",
    "hex": "FFF9E6"
  },
  {
    "name": "Lemon Chiffon",
    "hex": "FFFACD"
  },
  {
    "name": "Bridal Heath",
    "hex": "FFFAF4"
  },
  {
    "name": "Scotch Mist",
    "hex": "FFFBDC"
  },
  {
    "name": "Soapstone",
    "hex": "FFFBF9"
  },
  {
    "name": "Witch Haze",
    "hex": "FFFC99"
  },
  {
    "name": "Buttery White",
    "hex": "FFFCEA"
  },
  {
    "name": "Island Spice",
    "hex": "FFFCEE"
  },
  {
    "name": "Cream",
    "hex": "FFFDD0"
  },
  {
    "name": "Chilean Heath",
    "hex": "FFFDE6"
  },
  {
    "name": "Travertine",
    "hex": "FFFDE8"
  },
  {
    "name": "Orchid White",
    "hex": "FFFDF3"
  },
  {
    "name": "Quarter Pearl Lusta",
    "hex": "FFFDF4"
  },
  {
    "name": "Half and Half",
    "hex": "FFFEE1"
  },
  {
    "name": "Apricot White",
    "hex": "FFFEEC"
  },
  {
    "name": "Rice Cake",
    "hex": "FFFEF0"
  },
  {
    "name": "Black White",
    "hex": "FFFEF6"
  },
  {
    "name": "Romance",
    "hex": "FFFEFD"
  },
  {
    "name": "Yellow",
    "hex": "FFFF00"
  },
  {
    "name": "Laser Lemon",
    "hex": "FFFF66"
  },
  {
    "name": "Pale Canary",
    "hex": "FFFF99"
  },
  {
    "name": "Portafino",
    "hex": "FFFFB4"
  },
  {
    "name": "Ivory",
    "hex": "FFFFF0"
  },
  {
    "name": "White",
    "hex": "FFFFFF"
  }
];
var pantone = [{
  "name": "Mahogany",
  "hex": "#CD4A4A"
}, {
  "name": "Fuzzy Wuzzy Brown",
  "hex": "#CC6666"
}, {
  "name": "Chestnut",
  "hex": "#BC5D58"
}, {
  "name": "Red Orange",
  "hex": "#FF5349"
}, {
  "name": "Sunset Orange",
  "hex": "#FD5E53"
}, {
  "name": "Bittersweet",
  "hex": "#FD7C6E"
}, {
  "name": "Melon",
  "hex": "#FDBCB4"
}, {
  "name": "Outrageous Orange",
  "hex": "#FF6E4A"
}, {
  "name": "Vivid Tangerine",
  "hex": "#FFA089"
}, {
  "name": "Burnt Sienna",
  "hex": "#EA7E5D"
}, {
  "name": "Brown",
  "hex": "#B4674D"
}, {
  "name": "Sepia",
  "hex": "#A5694F"
}, {
  "name": "Orange",
  "hex": "#FF7538"
}, {
  "name": "Burnt Orange",
  "hex": "#FF7F49"
}, {
  "name": "Copper",
  "hex": "#DD9475"
}, {
  "name": "Mango Tango",
  "hex": "#FF8243"
}, {
  "name": "Atomic Tangerine",
  "hex": "#FFA474"
}, {
  "name": "Beaver",
  "hex": "#9F8170"
}, {
  "name": "Antique Brass",
  "hex": "#CD9575"
}, {
  "name": "Desert Sand",
  "hex": "#EFCDB8"
}, {
  "name": "Raw Sienna",
  "hex": "#D68A59"
}, {
  "name": "Tumbleweed",
  "hex": "#DEAA88"
}, {
  "name": "Tan",
  "hex": "#FAA76C"
}, {
  "name": "Peach",
  "hex": "#FFCFAB"
}, {
  "name": "Macaroni and Cheese",
  "hex": "#FFBD88"
}, {
  "name": "Apricot",
  "hex": "#FDD9B5"
}, {
  "name": "Neon Carrot",
  "hex": "#FFA343"
}, {
  "name": "Almond",
  "hex": "#EFDBC5"
}, {
  "name": "Yellow Orange",
  "hex": "#FFB653"
}, {
  "name": "Gold",
  "hex": "#E7C697"
}, {
  "name": "Shadow",
  "hex": "#8A795D"
}, {
  "name": "Banana Mania",
  "hex": "#FAE7B5"
}, {
  "name": "Sunglow",
  "hex": "#FFCF48"
}, {
  "name": "Goldenrod",
  "hex": "#FCD975"
}, {
  "name": "Dandelion",
  "hex": "#FDDB6D"
}, {
  "name": "Yellow",
  "hex": "#FCE883"
}, {
  "name": "Green Yellow",
  "hex": "#F0E891"
}, {
  "name": "Spring Green",
  "hex": "#ECEABE"
}, {
  "name": "Olive Green",
  "hex": "#BAB86C"
}, {
  "name": "Laser Lemon",
  "hex": "#FDFC74"
}, {
  "name": "Unmellow Yellow",
  "hex": "#FDFC74"
}, {
  "name": "Canary",
  "hex": "#FFFF99"
}, {
  "name": "Yellow Green",
  "hex": "#C5E384"
}, {
  "name": "Inch Worm",
  "hex": "#B2EC5D"
}, {
  "name": "Asparagus",
  "hex": "#87A96B"
}, {
  "name": "Granny Smith Apple",
  "hex": "#A8E4A0"
}, {
  "name": "Electric Lime",
  "hex": "#1DF914"
}, {
  "name": "Screamin Green",
  "hex": "#76FF7A"
}, {
  "name": "Fern",
  "hex": "#71BC78"
}, {
  "name": "Forest Green",
  "hex": "#6DAE81"
}, {
  "name": "Sea Green",
  "hex": "#9FE2BF"
}, {
  "name": "Green",
  "hex": "#1CAC78"
}, {
  "name": "Mountain Meadow",
  "hex": "#30BA8F"
}, {
  "name": "Shamrock",
  "hex": "#45CEA2"
}, {
  "name": "Jungle Green",
  "hex": "#3BB08F"
}, {
  "name": "Caribbean Green",
  "hex": "#1CD3A2"
}, {
  "name": "Tropical Rain Forest",
  "hex": "#17806D"
}, {
  "name": "Pine Green",
  "hex": "#158078"
}, {
  "name": "Robin Egg Blue",
  "hex": "#1FCECB"
}, {
  "name": "Aquamarine",
  "hex": "#78DBE2"
}, {
  "name": "Turquoise Blue",
  "hex": "#77DDE7"
}, {
  "name": "Sky Blue",
  "hex": "#80DAEB"
}, {
  "name": "Outer Space",
  "hex": "#414A4C"
}, {
  "name": "Blue Green",
  "hex": "#199EBD"
}, {
  "name": "Pacific Blue",
  "hex": "#1CA9C9"
}, {
  "name": "Cerulean",
  "hex": "#1DACD6"
}, {
  "name": "Cornflower",
  "hex": "#9ACEEB"
}, {
  "name": "Midnight Blue",
  "hex": "#1A4876"
}, {
  "name": "Navy Blue",
  "hex": "#1974D2"
}, {
  "name": "Denim",
  "hex": "#2B6CC4"
}, {
  "name": "Blue",
  "hex": "#1F75FE"
}, {
  "name": "Periwinkle",
  "hex": "#C5D0E6"
}, {
  "name": "Cadet Blue",
  "hex": "#B0B7C6"
}, {
  "name": "Indigo",
  "hex": "#5D76CB"
}, {
  "name": "Wild Blue Yonder",
  "hex": "#A2ADD0"
}, {
  "name": "Manatee",
  "hex": "#979AAA"
}, {
  "name": "Blue Bell",
  "hex": "#ADADD6"
}, {
  "name": "Blue Violet",
  "hex": "#7366BD"
}, {
  "name": "Purple Heart",
  "hex": "#7442C8"
}, {
  "name": "Royal Purple",
  "hex": "#7851A9"
}, {
  "name": "Purple Mountains\u2019 Majesty",
  "hex": "#9D81BA"
}, {
  "name": "Violet (Purple)",
  "hex": "#926EAE"
}, {
  "name": "Wisteria",
  "hex": "#CDA4DE"
}, {
  "name": "Vivid Violet",
  "hex": "#8F509D"
}, {
  "name": "Fuchsia",
  "hex": "#C364C5"
}, {
  "name": "Shocking Pink",
  "hex": "#FB7EFD"
}, {
  "name": "Pink Flamingo",
  "hex": "#FC74FD"
}, {
  "name": "Plum",
  "hex": "#8E4585"
}, {
  "name": "Hot Magenta",
  "hex": "#FF1DCE"
}, {
  "name": "Purple Pizzazz",
  "hex": "#FF1DCE"
}, {
  "name": "Razzle Dazzle Rose",
  "hex": "#FF48D0"
}, {
  "name": "Orchid",
  "hex": "#E6A8D7"
}, {
  "name": "Red Violet",
  "hex": "#C0448F"
}, {
  "name": "Eggplant",
  "hex": "#6E5160"
}, {
  "name": "Cerise",
  "hex": "#DD4492"
}, {
  "name": "Wild Strawberry",
  "hex": "#FF43A4"
}, {
  "name": "Magenta",
  "hex": "#F664AF"
}, {
  "name": "Lavender",
  "hex": "#FCB4D5"
}, {
  "name": "Cotton Candy",
  "hex": "#FFBCD9"
}, {
  "name": "Violet Red",
  "hex": "#F75394"
}, {
  "name": "Carnation Pink",
  "hex": "#FFAACC"
}, {
  "name": "Razzmatazz",
  "hex": "#E3256B"
}, {
  "name": "Piggy Pink",
  "hex": "#FDD7E4"
}, {
  "name": "Jazzberry Jam",
  "hex": "#CA3767"
}, {
  "name": "Blush",
  "hex": "#DE5D83"
}, {
  "name": "Tickle Me Pink",
  "hex": "#FC89AC"
}, {
  "name": "Pink Sherbet",
  "hex": "#F780A1"
}, {
  "name": "Maroon",
  "hex": "#C8385A"
}, {
  "name": "Red",
  "hex": "#EE204D"
}, {
  "name": "Radical Red",
  "hex": "#FF496C"
}, {
  "name": "Mauvelous",
  "hex": "#EF98AA"
}, {
  "name": "Wild Watermelon",
  "hex": "#FC6C85"
}, {
  "name": "Scarlet",
  "hex": "#FC2847"
}, {
  "name": "Salmon",
  "hex": "#FF9BAA"
}, {
  "name": "Brick Red",
  "hex": "#CB4154"
}, {
  "name": "White",
  "hex": "#EDEDED"
}, {
  "name": "Timberwolf",
  "hex": "#DBD7D2"
}, {
  "name": "Silver",
  "hex": "#CDC5C2"
}, {
  "name": "Gray",
  "hex": "#95918C"
}, {
  "name": "Black",
  "hex": "#232323"
}];
var roygbiv = [
  { name: "red", hex: "#FF0000" },
  { name: "orange", hex: "#FFA500" },
  { name: "yellow", hex: "#FFFF00" },
  { name: "green", hex: "#008000" },
  { name: "blue", hex: "#0000FF" },
  { name: "indigo", hex: "#4B0082" },
  { name: "violet", hex: "#EE82EE" }
];
var x11 = [{
  name: "indigo",
  hex: "#4b0082"
}, {
  name: "gold",
  hex: "#ffd700"
}, {
  name: "hotpink",
  hex: "#ff69b4"
}, {
  name: "firebrick",
  hex: "#b22222"
}, {
  name: "indianred",
  hex: "#cd5c5c"
}, {
  name: "yellow",
  hex: "#ffff00"
}, {
  name: "mistyrose",
  hex: "#ffe4e1"
}, {
  name: "darkolivegreen",
  hex: "#556b2f"
}, {
  name: "olive",
  hex: "#808000"
}, {
  name: "darkseagreen",
  hex: "#8fbc8f"
}, {
  name: "pink",
  hex: "#ffc0cb"
}, {
  name: "tomato",
  hex: "#ff6347"
}, {
  name: "lightcoral",
  hex: "#f08080"
}, {
  name: "orangered",
  hex: "#ff4500"
}, {
  name: "navajowhite",
  hex: "#ffdead"
}, {
  name: "lime",
  hex: "#00ff00"
}, {
  name: "palegreen",
  hex: "#98fb98"
}, {
  name: "darkslategrey",
  hex: "#2f4f4f"
}, {
  name: "greenyellow",
  hex: "#adff2f"
}, {
  name: "burlywood",
  hex: "#deb887"
}, {
  name: "seashell",
  hex: "#fff5ee"
}, {
  name: "mediumspringgreen",
  hex: "#00fa9a"
}, {
  name: "fuchsia",
  hex: "#ff00ff"
}, {
  name: "papayawhip",
  hex: "#ffefd5"
}, {
  name: "blanchedalmond",
  hex: "#ffebcd"
}, {
  name: "chartreuse",
  hex: "#7fff00"
}, {
  name: "dimgray",
  hex: "#696969"
}, {
  name: "black",
  hex: "#000000"
}, {
  name: "peachpuff",
  hex: "#ffdab9"
}, {
  name: "springgreen",
  hex: "#00ff7f"
}, {
  name: "aquamarine",
  hex: "#7fffd4"
}, {
  name: "white",
  hex: "#ffffff"
}, {
  name: "orange",
  hex: "#ffa500"
}, {
  name: "lightsalmon",
  hex: "#ffa07a"
}, {
  name: "darkslategray",
  hex: "#2f4f4f"
}, {
  name: "brown",
  hex: "#a52a2a"
}, {
  name: "ivory",
  hex: "#fffff0"
}, {
  name: "dodgerblue",
  hex: "#1e90ff"
}, {
  name: "peru",
  hex: "#cd853f"
}, {
  name: "lawngreen",
  hex: "#7cfc00"
}, {
  name: "chocolate",
  hex: "#d2691e"
}, {
  name: "crimson",
  hex: "#dc143c"
}, {
  name: "forestgreen",
  hex: "#228b22"
}, {
  name: "darkgrey",
  hex: "#a9a9a9"
}, {
  name: "lightseagreen",
  hex: "#20b2aa"
}, {
  name: "cyan",
  hex: "#00ffff"
}, {
  name: "mintcream",
  hex: "#f5fffa"
}, {
  name: "silver",
  hex: "#c0c0c0"
}, {
  name: "antiquewhite",
  hex: "#faebd7"
}, {
  name: "mediumorchid",
  hex: "#ba55d3"
}, {
  name: "skyblue",
  hex: "#87ceeb"
}, {
  name: "gray",
  hex: "#808080"
}, {
  name: "darkturquoise",
  hex: "#00ced1"
}, {
  name: "goldenrod",
  hex: "#daa520"
}, {
  name: "darkgreen",
  hex: "#006400"
}, {
  name: "floralwhite",
  hex: "#fffaf0"
}, {
  name: "darkviolet",
  hex: "#9400d3"
}, {
  name: "darkgray",
  hex: "#a9a9a9"
}, {
  name: "moccasin",
  hex: "#ffe4b5"
}, {
  name: "saddlebrown",
  hex: "#8b4513"
}, {
  name: "grey",
  hex: "#808080"
}, {
  name: "darkslateblue",
  hex: "#483d8b"
}, {
  name: "lightskyblue",
  hex: "#87cefa"
}, {
  name: "lightpink",
  hex: "#ffb6c1"
}, {
  name: "mediumvioletred",
  hex: "#c71585"
}, {
  name: "slategrey",
  hex: "#708090"
}, {
  name: "red",
  hex: "#ff0000"
}, {
  name: "deeppink",
  hex: "#ff1493"
}, {
  name: "limegreen",
  hex: "#32cd32"
}, {
  name: "darkmagenta",
  hex: "#8b008b"
}, {
  name: "palegoldenrod",
  hex: "#eee8aa"
}, {
  name: "plum",
  hex: "#dda0dd"
}, {
  name: "turquoise",
  hex: "#40e0d0"
}, {
  name: "lightgrey",
  hex: "#d3d3d3"
}, {
  name: "lightgoldenrodyellow",
  hex: "#fafad2"
}, {
  name: "darkgoldenrod",
  hex: "#b8860b"
}, {
  name: "lavender",
  hex: "#e6e6fa"
}, {
  name: "maroon",
  hex: "#800000"
}, {
  name: "yellowgreen",
  hex: "#9acd32"
}, {
  name: "sandybrown",
  hex: "#f4a460"
}, {
  name: "thistle",
  hex: "#d8bfd8"
}, {
  name: "violet",
  hex: "#ee82ee"
}, {
  name: "navy",
  hex: "#000080"
}, {
  name: "magenta",
  hex: "#ff00ff"
}, {
  name: "dimgrey",
  hex: "#696969"
}, {
  name: "tan",
  hex: "#d2b48c"
}, {
  name: "rosybrown",
  hex: "#bc8f8f"
}, {
  name: "olivedrab",
  hex: "#6b8e23"
}, {
  name: "blue",
  hex: "#0000ff"
}, {
  name: "lightblue",
  hex: "#add8e6"
}, {
  name: "ghostwhite",
  hex: "#f8f8ff"
}, {
  name: "honeydew",
  hex: "#f0fff0"
}, {
  name: "cornflowerblue",
  hex: "#6495ed"
}, {
  name: "slateblue",
  hex: "#6a5acd"
}, {
  name: "linen",
  hex: "#faf0e6"
}, {
  name: "darkblue",
  hex: "#00008b"
}, {
  name: "powderblue",
  hex: "#b0e0e6"
}, {
  name: "seagreen",
  hex: "#2e8b57"
}, {
  name: "darkkhaki",
  hex: "#bdb76b"
}, {
  name: "snow",
  hex: "#fffafa"
}, {
  name: "sienna",
  hex: "#a0522d"
}, {
  name: "mediumblue",
  hex: "#0000cd"
}, {
  name: "royalblue",
  hex: "#4169e1"
}, {
  name: "lightcyan",
  hex: "#e0ffff"
}, {
  name: "green",
  hex: "#008000"
}, {
  name: "mediumpurple",
  hex: "#9370db"
}, {
  name: "midnightblue",
  hex: "#191970"
}, {
  name: "cornsilk",
  hex: "#fff8dc"
}, {
  name: "paleturquoise",
  hex: "#afeeee"
}, {
  name: "bisque",
  hex: "#ffe4c4"
}, {
  name: "slategray",
  hex: "#708090"
}, {
  name: "darkcyan",
  hex: "#008b8b"
}, {
  name: "khaki",
  hex: "#f0e68c"
}, {
  name: "wheat",
  hex: "#f5deb3"
}, {
  name: "teal",
  hex: "#008080"
}, {
  name: "darkorchid",
  hex: "#9932cc"
}, {
  name: "deepskyblue",
  hex: "#00bfff"
}, {
  name: "salmon",
  hex: "#fa8072"
}, {
  name: "darkred",
  hex: "#8b0000"
}, {
  name: "steelblue",
  hex: "#4682b4"
}, {
  name: "palevioletred",
  hex: "#db7093"
}, {
  name: "lightslategray",
  hex: "#778899"
}, {
  name: "aliceblue",
  hex: "#f0f8ff"
}, {
  name: "lightslategrey",
  hex: "#778899"
}, {
  name: "lightgreen",
  hex: "#90ee90"
}, {
  name: "orchid",
  hex: "#da70d6"
}, {
  name: "gainsboro",
  hex: "#dcdcdc"
}, {
  name: "mediumseagreen",
  hex: "#3cb371"
}, {
  name: "lightgray",
  hex: "#d3d3d3"
}, {
  name: "mediumturquoise",
  hex: "#48d1cc"
}, {
  name: "lemonchiffon",
  hex: "#fffacd"
}, {
  name: "cadetblue",
  hex: "#5f9ea0"
}, {
  name: "lightyellow",
  hex: "#ffffe0"
}, {
  name: "lavenderblush",
  hex: "#fff0f5"
}, {
  name: "coral",
  hex: "#ff7f50"
}, {
  name: "purple",
  hex: "#800080"
}, {
  name: "aqua",
  hex: "#00ffff"
}, {
  name: "whitesmoke",
  hex: "#f5f5f5"
}, {
  name: "mediumslateblue",
  hex: "#7b68ee"
}, {
  name: "darkorange",
  hex: "#ff8c00"
}, {
  name: "mediumaquamarine",
  hex: "#66cdaa"
}, {
  name: "darksalmon",
  hex: "#e9967a"
}, {
  name: "beige",
  hex: "#f5f5dc"
}, {
  name: "blueviolet",
  hex: "#8a2be2"
}, {
  name: "azure",
  hex: "#f0ffff"
}, {
  name: "lightsteelblue",
  hex: "#b0c4de"
}, {
  name: "oldlace",
  hex: "#fdf5e6"
}];
var chroma = chroma$1.exports;
var WeakMap$1 = es6WeakMap;
var lists = {
  basic: basic$1,
  html: html$3,
  ntc,
  pantone,
  roygbiv,
  x11
};
var cache = new WeakMap$1();
var namer = colorNamer$1.exports = function(color, options) {
  options = options || {};
  var cacheKey = { color, options };
  if (cache.has(cacheKey)) {
    return cache.get(cacheKey);
  }
  var deltaE = String(options.distance).toLowerCase() === "deltae";
  color = chroma(color);
  var results = {};
  for (var key in lists) {
    if (options.pick && options.pick.indexOf(key) === -1) {
      continue;
    }
    if (options.omit && options.omit.indexOf(key) !== -1) {
      continue;
    }
    results[key] = lists[key].map(function(name2) {
      name2.distance = deltaE ? chroma.deltaE(color, chroma(name2.hex)) : chroma.distance(color, chroma(name2.hex));
      return name2;
    }).sort(function(a, b2) {
      return a.distance - b2.distance;
    });
  }
  cache.set(cacheKey, results);
  return results;
};
namer.chroma = chroma;
namer.lists = lists;
var colorNamer = colorNamer$1.exports;
const hexCharacters = "a-f\\d";
const match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;
const match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;
const nonHexChars = new RegExp(`[^#${hexCharacters}]`, "gi");
const validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, "i");
function hexRgb(hex, options = {}) {
  if (typeof hex !== "string" || nonHexChars.test(hex) || !validHexSize.test(hex)) {
    throw new TypeError("Expected a valid hex string");
  }
  hex = hex.replace(/^#/, "");
  let alphaFromHex = 1;
  if (hex.length === 8) {
    alphaFromHex = Number.parseInt(hex.slice(6, 8), 16) / 255;
    hex = hex.slice(0, 6);
  }
  if (hex.length === 4) {
    alphaFromHex = Number.parseInt(hex.slice(3, 4).repeat(2), 16) / 255;
    hex = hex.slice(0, 3);
  }
  if (hex.length === 3) {
    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
  }
  const number2 = Number.parseInt(hex, 16);
  const red = number2 >> 16;
  const green = number2 >> 8 & 255;
  const blue = number2 & 255;
  const alpha = typeof options.alpha === "number" ? options.alpha : alphaFromHex;
  if (options.format === "array") {
    return [red, green, blue, alpha];
  }
  if (options.format === "css") {
    const alphaString = alpha === 1 ? "" : ` / ${Number((alpha * 100).toFixed(2))}%`;
    return `rgb(${red} ${green} ${blue}${alphaString})`;
  }
  return { red, green, blue, alpha };
}
function u$1() {
  return (u$1 = Object.assign || function(e2) {
    for (var r2 = 1; r2 < arguments.length; r2++) {
      var t2 = arguments[r2];
      for (var n2 in t2)
        Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
    }
    return e2;
  }).apply(this, arguments);
}
function c$2(e2, r2) {
  if (e2 == null)
    return {};
  var t2, n2, o2 = {}, a = Object.keys(e2);
  for (n2 = 0; n2 < a.length; n2++)
    r2.indexOf(t2 = a[n2]) >= 0 || (o2[t2] = e2[t2]);
  return o2;
}
function i(e2) {
  var t2 = useRef(e2), n2 = useRef(function(e3) {
    t2.current && t2.current(e3);
  });
  return t2.current = e2, n2.current;
}
var s = function(e2, r2, t2) {
  return r2 === void 0 && (r2 = 0), t2 === void 0 && (t2 = 1), e2 > t2 ? t2 : e2 < r2 ? r2 : e2;
}, f$1 = function(e2) {
  return "touches" in e2;
}, v$2 = function(e2) {
  return e2 && e2.ownerDocument.defaultView || self;
}, d$2 = function(e2, r2, t2) {
  var n2 = e2.getBoundingClientRect(), o2 = f$1(r2) ? function(e3, r3) {
    for (var t3 = 0; t3 < e3.length; t3++)
      if (e3[t3].identifier === r3)
        return e3[t3];
    return e3[0];
  }(r2.touches, t2) : r2;
  return { left: s((o2.pageX - (n2.left + v$2(e2).pageXOffset)) / n2.width), top: s((o2.pageY - (n2.top + v$2(e2).pageYOffset)) / n2.height) };
}, h$2 = function(e2) {
  !f$1(e2) && e2.preventDefault();
}, m$1 = e$3.memo(function(o2) {
  var a = o2.onMove, l2 = o2.onKey, s2 = c$2(o2, ["onMove", "onKey"]), m2 = useRef(null), g2 = i(a), p2 = i(l2), b2 = useRef(null), _ = useRef(false), x = useMemo(function() {
    var e2 = function(e3) {
      h$2(e3), (f$1(e3) ? e3.touches.length > 0 : e3.buttons > 0) && m2.current ? g2(d$2(m2.current, e3, b2.current)) : t2(false);
    }, r2 = function() {
      return t2(false);
    };
    function t2(t3) {
      var n2 = _.current, o3 = v$2(m2.current), a2 = t3 ? o3.addEventListener : o3.removeEventListener;
      a2(n2 ? "touchmove" : "mousemove", e2), a2(n2 ? "touchend" : "mouseup", r2);
    }
    return [function(e3) {
      var r3 = e3.nativeEvent, n2 = m2.current;
      if (n2 && (h$2(r3), !function(e4, r4) {
        return r4 && !f$1(e4);
      }(r3, _.current) && n2)) {
        if (f$1(r3)) {
          _.current = true;
          var o3 = r3.changedTouches || [];
          o3.length && (b2.current = o3[0].identifier);
        }
        n2.focus(), g2(d$2(n2, r3, b2.current)), t2(true);
      }
    }, function(e3) {
      var r3 = e3.which || e3.keyCode;
      r3 < 37 || r3 > 40 || (e3.preventDefault(), p2({ left: r3 === 39 ? 0.05 : r3 === 37 ? -0.05 : 0, top: r3 === 40 ? 0.05 : r3 === 38 ? -0.05 : 0 }));
    }, t2];
  }, [p2, g2]), C2 = x[0], E2 = x[1], H2 = x[2];
  return useEffect(function() {
    return H2;
  }, [H2]), e$3.createElement("div", u$1({}, s2, { onTouchStart: C2, onMouseDown: C2, className: "react-colorful__interactive", ref: m2, onKeyDown: E2, tabIndex: 0, role: "slider" }));
}), g$1 = function(e2) {
  return e2.filter(Boolean).join(" ");
}, p$1 = function(r2) {
  var t2 = r2.color, n2 = r2.left, o2 = r2.top, a = o2 === void 0 ? 0.5 : o2, l2 = g$1(["react-colorful__pointer", r2.className]);
  return e$3.createElement("div", { className: l2, style: { top: 100 * a + "%", left: 100 * n2 + "%" } }, e$3.createElement("div", { className: "react-colorful__pointer-fill", style: { backgroundColor: t2 } }));
}, b$1 = function(e2, r2, t2) {
  return r2 === void 0 && (r2 = 0), t2 === void 0 && (t2 = Math.pow(10, r2)), Math.round(t2 * e2) / t2;
}, x$1 = function(e2) {
  return e2[0] === "#" && (e2 = e2.substr(1)), e2.length < 6 ? { r: parseInt(e2[0] + e2[0], 16), g: parseInt(e2[1] + e2[1], 16), b: parseInt(e2[2] + e2[2], 16), a: 1 } : { r: parseInt(e2.substr(0, 2), 16), g: parseInt(e2.substr(2, 2), 16), b: parseInt(e2.substr(4, 2), 16), a: 1 };
}, N = function(e2) {
  var r2 = e2.s, t2 = e2.v, n2 = e2.a, o2 = (200 - r2) * t2 / 100;
  return { h: b$1(e2.h), s: b$1(o2 > 0 && o2 < 200 ? r2 * t2 / 100 / (o2 <= 100 ? o2 : 200 - o2) * 100 : 0), l: b$1(o2 / 2), a: b$1(n2, 2) };
}, w$1 = function(e2) {
  var r2 = N(e2);
  return "hsl(" + r2.h + ", " + r2.s + "%, " + r2.l + "%)";
}, q$2 = function(e2) {
  var r2 = e2.h, t2 = e2.s, n2 = e2.v, o2 = e2.a;
  r2 = r2 / 360 * 6, t2 /= 100, n2 /= 100;
  var a = Math.floor(r2), l2 = n2 * (1 - t2), u2 = n2 * (1 - (r2 - a) * t2), c2 = n2 * (1 - (1 - r2 + a) * t2), i2 = a % 6;
  return { r: b$1(255 * [n2, u2, l2, l2, c2, n2][i2]), g: b$1(255 * [c2, n2, n2, u2, l2, l2][i2]), b: b$1(255 * [l2, l2, c2, n2, n2, u2][i2]), a: b$1(o2, 2) };
}, z$1 = function(e2) {
  var r2 = e2.toString(16);
  return r2.length < 2 ? "0" + r2 : r2;
}, B$1 = function(e2) {
  var r2 = e2.r, t2 = e2.g, n2 = e2.b, o2 = e2.a, a = Math.max(r2, t2, n2), l2 = a - Math.min(r2, t2, n2), u2 = l2 ? a === r2 ? (t2 - n2) / l2 : a === t2 ? 2 + (n2 - r2) / l2 : 4 + (r2 - t2) / l2 : 0;
  return { h: b$1(60 * (u2 < 0 ? u2 + 6 : u2)), s: b$1(a ? l2 / a * 100 : 0), v: b$1(a / 255 * 100), a: o2 };
}, K = e$3.memo(function(r2) {
  var t2 = r2.hue, n2 = r2.onChange, o2 = g$1(["react-colorful__hue", r2.className]);
  return e$3.createElement("div", { className: o2 }, e$3.createElement(m$1, { onMove: function(e2) {
    n2({ h: 360 * e2.left });
  }, onKey: function(e2) {
    n2({ h: s(t2 + 360 * e2.left, 0, 360) });
  }, "aria-label": "Hue", "aria-valuetext": b$1(t2) }, e$3.createElement(p$1, { className: "react-colorful__hue-pointer", left: t2 / 360, color: w$1({ h: t2, s: 100, v: 100, a: 1 }) })));
}), L = e$3.memo(function(r2) {
  var t2 = r2.hsva, n2 = r2.onChange, o2 = { backgroundColor: w$1({ h: t2.h, s: 100, v: 100, a: 1 }) };
  return e$3.createElement("div", { className: "react-colorful__saturation", style: o2 }, e$3.createElement(m$1, { onMove: function(e2) {
    n2({ s: 100 * e2.left, v: 100 - 100 * e2.top });
  }, onKey: function(e2) {
    n2({ s: s(t2.s + 100 * e2.left, 0, 100), v: s(t2.v - 100 * e2.top, 0, 100) });
  }, "aria-label": "Color", "aria-valuetext": "Saturation " + b$1(t2.s) + "%, Brightness " + b$1(t2.v) + "%" }, e$3.createElement(p$1, { className: "react-colorful__saturation-pointer", top: 1 - t2.v / 100, left: t2.s / 100, color: w$1(t2) })));
}), A$1 = function(e2, r2) {
  if (e2 === r2)
    return true;
  for (var t2 in e2)
    if (e2[t2] !== r2[t2])
      return false;
  return true;
};
function T(e2, t2, l2) {
  var u2 = i(l2), c2 = useState(function() {
    return e2.toHsva(t2);
  }), s2 = c2[0], f2 = c2[1], v2 = useRef({ color: t2, hsva: s2 });
  useEffect(function() {
    if (!e2.equal(t2, v2.current.color)) {
      var r2 = e2.toHsva(t2);
      v2.current = { hsva: r2, color: t2 }, f2(r2);
    }
  }, [t2, e2]), useEffect(function() {
    var r2;
    A$1(s2, v2.current.hsva) || e2.equal(r2 = e2.fromHsva(s2), v2.current.color) || (v2.current = { hsva: s2, color: r2 }, u2(r2));
  }, [s2, e2, u2]);
  var d2 = useCallback(function(e3) {
    f2(function(r2) {
      return Object.assign({}, r2, e3);
    });
  }, []);
  return [s2, d2];
}
var P = typeof window != "undefined" ? useLayoutEffect : useEffect, X = function() {
  return typeof __webpack_nonce__ != "undefined" ? __webpack_nonce__ : void 0;
}, R = /* @__PURE__ */ new Map(), V = function(e2) {
  P(function() {
    var r2 = e2.current ? e2.current.ownerDocument : document;
    if (r2 !== void 0 && !R.has(r2)) {
      var t2 = r2.createElement("style");
      t2.innerHTML = `.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:"";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}`, R.set(r2, t2);
      var n2 = X();
      n2 && t2.setAttribute("nonce", n2), r2.head.appendChild(t2);
    }
  }, []);
}, $ = function(t2) {
  var n2 = t2.className, o2 = t2.colorModel, a = t2.color, l2 = a === void 0 ? o2.defaultColor : a, i2 = t2.onChange, s2 = c$2(t2, ["className", "colorModel", "color", "onChange"]), f2 = useRef(null);
  V(f2);
  var v2 = T(o2, l2, i2), d2 = v2[0], h2 = v2[1], m2 = g$1(["react-colorful", n2]);
  return e$3.createElement("div", u$1({}, s2, { ref: f2, className: m2 }), e$3.createElement(L, { hsva: d2, onChange: h2 }), e$3.createElement(K, { hue: d2.h, onChange: h2, className: "react-colorful__last-control" }));
}, G$1 = { defaultColor: "000", toHsva: function(e2) {
  return B$1(x$1(e2));
}, fromHsva: function(e2) {
  return t2 = (r2 = q$2(e2)).g, n2 = r2.b, "#" + z$1(r2.r) + z$1(t2) + z$1(n2);
  var r2, t2, n2;
}, equal: function(e2, r2) {
  return e2.toLowerCase() === r2.toLowerCase() || A$1(x$1(e2), x$1(r2));
} }, J = function(r2) {
  return e$3.createElement($, u$1({}, r2, { colorModel: G$1 }));
};
function rgbHex(red, green, blue, alpha) {
  const isPercent = (red + (alpha || "")).toString().includes("%");
  if (typeof red === "string") {
    [red, green, blue, alpha] = red.match(/(0?\.?\d{1,3})%?\b/g).map((component) => Number(component));
  } else if (alpha !== void 0) {
    alpha = Number.parseFloat(alpha);
  }
  if (typeof red !== "number" || typeof green !== "number" || typeof blue !== "number" || red > 255 || green > 255 || blue > 255) {
    throw new TypeError("Expected three numbers below 256");
  }
  if (typeof alpha === "number") {
    if (!isPercent && alpha >= 0 && alpha <= 1) {
      alpha = Math.round(255 * alpha);
    } else if (isPercent && alpha >= 0 && alpha <= 100) {
      alpha = Math.round(255 * alpha / 100);
    } else {
      throw new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);
    }
    alpha = (alpha | 1 << 8).toString(16).slice(1);
  } else {
    alpha = "";
  }
  return (blue | green << 8 | red << 16 | 1 << 24).toString(16).slice(1) + alpha;
}
const defaultColors = ["244,67,54", "233,30,99", "156,39,176", "103,58,183", "63,81,181", "33,150,243", "3,169,244", "0,188,212", "0,150,136", "76,175,80", "139,195,74", "205,220,57", "255,235,59", "255,193,7", "255,152,0", "255,87,34", "121,85,72", "96,125,139"];
const ColorInput = memo((_dc) => {
  var _ec = _dc, {
    defaultValue,
    events = {}
  } = _ec, props = __objRest(_ec, [
    "defaultValue",
    "events"
  ]);
  var _a2;
  const [value2, setValue] = useState(defaultValue);
  const [colorName, setColorName] = useState(null);
  useEffect(() => {
    var _a3, _b;
    setColorName(colorNamer(`rgb(${value2})`).pantone[0].name);
    if (value2 !== defaultValue) {
      if ((_a3 = events.input) == null ? void 0 : _a3.onValueChange)
        (_b = events.input) == null ? void 0 : _b.onValueChange({
          value: value2
        });
    }
  }, [value2]);
  return /* @__PURE__ */ jsx$2(InputContainer, {
    "data-testid": "color-picker",
    children: /* @__PURE__ */ jsxs$1(ColorMenu, {
      children: [/* @__PURE__ */ jsx$2(ColorName, {
        children: colorName
      }), /* @__PURE__ */ jsx$2(PresetColors, {
        children: defaultColors.map((color, key) => {
          return /* @__PURE__ */ jsx$2(PresetColor, {
            onClick: () => setValue(color),
            color,
            selected: color === value2
          }, key);
        })
      }), /* @__PURE__ */ jsx$2(ColorMixer, {
        children: /* @__PURE__ */ jsx$2(J, {
          color: rgbHex((_a2 = value2 == null ? void 0 : value2.toString()) != null ? _a2 : ""),
          onChange: (color) => {
            const rgb = hexRgb(color);
            setValue(`${rgb.red},${rgb.green},${rgb.blue}`);
          }
        })
      })]
    })
  });
});
const ColorPreview = styled.div.withConfig({
  displayName: "ColorPreview",
  componentId: "sc-56hg3p-0"
})(["border-radius:4px 4px 0 0;padding:8px;"]);
const ColorMenu = styled.div.withConfig({
  displayName: "ColorMenu",
  componentId: "sc-56hg3p-1"
})(["background:white;border-radius:12px 0 12px 12px;height:250px;overflow:hidden;"]);
styled.div.withConfig({
  displayName: "Container",
  componentId: "sc-56hg3p-2"
})(["position:relative;", ";"], (props) => props.modal && css$2(["&:hover{", "{display:block;}", "{background:white;box-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);}}"], ColorMenu, ColorPreview));
const ColorName = styled.div.withConfig({
  displayName: "ColorName",
  componentId: "sc-56hg3p-3"
})(["color:#5b5b5b;font-size:12px;font-weight:600;height:20px;padding:8px 0;text-align:center;"]);
const PresetColors = styled.div.withConfig({
  displayName: "PresetColors",
  componentId: "sc-56hg3p-4"
})(["height:60px;padding:9px 4px 9px 9px;"]);
const PresetColor = styled.button.withConfig({
  displayName: "PresetColor",
  componentId: "sc-56hg3p-5"
})(["background:transparent;border-radius:18px;border:", ";cursor:pointer;float:left;height:18px;outline:none;margin:0 5px 5px 0;transform:scale(1);transition:border 0.2s ease-in-out,transform 0.2s ease-in-out;width:18px;&:hover{transform:scale(1.2);}"], (props) => props.selected ? `4px solid rgba(${props.color}, 1)` : `9px solid rgba(${props.color}, 1)`);
const ColorMixer = styled.div.withConfig({
  displayName: "ColorMixer",
  componentId: "sc-56hg3p-6"
})(["height:190px;width:100%;.react-colorful{height:170px;width:220px;}.react-colorful__saturation{border-radius:3px 3px 0 0;}.react-colorful__hue{height:30px;border-radius:0 0 3px 3px;}.react-colorful__saturation-pointer{border-radius:15px;height:15px;width:15px;}.react-colorful__hue-pointer{border-radius:15px;height:15px;width:15px;}"]);
const DynamicInput = memo(({
  label,
  type
}) => {
  const getInputComponentByType = () => {
    switch (type) {
      case na$1.String:
        return /* @__PURE__ */ jsx$2(InputRow, {
          children: /* @__PURE__ */ jsx$2(InputLabel, {
            children: label
          })
        });
      case na$1.Menu:
        return /* @__PURE__ */ jsx$2(InputRow, {});
      default:
        return /* @__PURE__ */ jsx$2(NotificationLabel, {
          type: C$2.Error,
          children: `Unimplemented field type! ${label} : ${type}`
        });
    }
  };
  return getInputComponentByType();
});
const StreetAddressInput = memo((_fc) => {
  var props = __objRest(_fc, []);
  return /* @__PURE__ */ jsx$2(TextInput, __spreadValues({}, props));
});
const ListItem = memo((_gc) => {
  var _hc = _gc, {
    as = "li",
    children
  } = _hc, props = __objRest(_hc, [
    "as",
    "children"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: {
      orientation: Orientation.Horizontal,
      overflow: Overflow.Visible
    },
    as,
    style: {
      display: as === "li" ? "list-item" : "flex"
    }
  }, props), {
    children
  }));
});
const OrderedList = memo((_ic) => {
  var _jc = _ic, {
    as = "ul",
    children
  } = _jc, props = __objRest(_jc, [
    "as",
    "children"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    as
  }, props), {
    children
  }));
});
const UnorderedList = memo((_kc) => {
  var _lc = _kc, {
    as = "ul",
    items,
    margin = {}
  } = _lc, props = __objRest(_lc, [
    "as",
    "items",
    "margin"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    as
  }, props), {
    children: items.map((item, index) => item.props.items ? /* @__PURE__ */ jsx$2(Container$8, {
      margin: __spreadValues({
        left: Amount.Default
      }, margin),
      padding: {
        bottom: Amount.Least,
        top: Amount.Least
      },
      children: item
    }) : /* @__PURE__ */ jsx$2(ListItem, {
      margin: __spreadValues({
        left: Amount.Default
      }, margin),
      padding: {
        bottom: Amount.Least,
        top: Amount.Least
      },
      children: item
    }, index))
  }));
});
const Video = memo((_mc) => {
  var _nc = _mc, {
    className = "",
    url
  } = _nc, props = __objRest(_nc, [
    "className",
    "url"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    className: `${className} video`
  }, props), {
    children: /* @__PURE__ */ jsx$2(VideoElement, __spreadValues({
      src: url
    }, props))
  }));
});
const VideoElement = styled.video.withConfig({
  displayName: "VideoElement",
  componentId: "sc-1ai2qam-0"
})([""]);
const MediaGridItem = memo((_oc) => {
  var _pc = _oc, {
    alignment = {},
    background = {},
    borderRadius = {},
    description,
    image,
    minHeight,
    menu,
    title,
    url,
    video
  } = _pc, props = __objRest(_pc, [
    "alignment",
    "background",
    "borderRadius",
    "description",
    "image",
    "minHeight",
    "menu",
    "title",
    "url",
    "video"
  ]);
  var _a2;
  const content = image ? /* @__PURE__ */ jsxs$1(Container$8, {
    alignment: {
      horizontal: AlignHorizontal.Stretch,
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    },
    padding: {
      all: Amount.Default
    },
    children: [/* @__PURE__ */ jsx$2(Label, {
      textColor: TextColors.White,
      textSize: TextSize.Large,
      textWeight: TextWeight.Most,
      children: title
    }), /* @__PURE__ */ jsx$2(Spacer, {}), menu && /* @__PURE__ */ jsx$2(MoreMenu, __spreadValues({}, menu))]
  }) : video ? /* @__PURE__ */ jsx$2(Video, {
    className: "media-grid-video",
    description: video.description,
    path: video.path,
    url: video.url
  }) : /* @__PURE__ */ jsx$2(Label, {
    padding: {
      all: Amount.Default
    },
    children: "Image not found"
  });
  return /* @__PURE__ */ jsx$2(Card, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      horizontal: AlignHorizontal.Stretch,
      orientation: Orientation.Vertical,
      vertical: AlignVertical.Bottom
    }, alignment),
    background: __spreadValues({
      color: BackgroundColors.Dark,
      image: {
        url: (_a2 = image == null ? void 0 : image.url) != null ? _a2 : image == null ? void 0 : image.path,
        size: BackgroundSize.Cover
      }
    }, background),
    borderRadius: __spreadValues({
      all: Amount.Less
    }, borderRadius),
    linkTo: url
  }, props), {
    children: content
  }));
});
const MediaGrid = memo((_qc) => {
  var _rc = _qc, {
    borderRadius = {},
    children,
    columns = 5,
    className = "",
    items = [],
    size = {},
    states = {}
  } = _rc, props = __objRest(_rc, [
    "borderRadius",
    "children",
    "columns",
    "className",
    "items",
    "size",
    "states"
  ]);
  var _a2, _b;
  const rows = Array.from({
    length: Math.ceil(items.length / columns)
  }).fill(0);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    borderRadius: __spreadValues({
      all: Amount.Default
    }, borderRadius),
    className: `${className} media-grid`,
    size: __spreadValues({
      fill: Fill.Both
    }, size)
  }, props), {
    children: [/* @__PURE__ */ jsx$2(LoadingOverlay, {
      background: {
        color: BackgroundColors.Transparent
      },
      borderRadius,
      states: {
        state: {
          visible: (_b = (_a2 = states.state) == null ? void 0 : _a2.loading) != null ? _b : false
        }
      }
    }), rows.map((x, row) => {
      return /* @__PURE__ */ jsx$2(Container$8, {
        alignment: {
          orientation: Orientation.Horizontal
        },
        className: "media-grid-row",
        margin: {
          bottom: Amount.Default
        },
        size: {
          fill: Fill.Both
        },
        children: items.slice(columns * row, columns * row + columns).map((i2, key) => /* @__PURE__ */ createElement$1(MediaGridItem, __spreadProps(__spreadValues({}, i2), {
          margin: __spreadValues({
            right: Amount.Default
          }, i2.margin),
          key,
          size: __spreadValues({
            minHeight: 200,
            minWidth: 260
          }, i2.size)
        })))
      }, row);
    })]
  }));
});
const MediaPreview = memo((_sc) => {
  var _tc = _sc, {
    alignment = {},
    borderRadius = {},
    className = "",
    media
  } = _tc, props = __objRest(_tc, [
    "alignment",
    "borderRadius",
    "className",
    "media"
  ]);
  var _a2, _b;
  if (!media || media.length === 0)
    return /* @__PURE__ */ jsx$2(Container$8, {
      children: "No media"
    });
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    className: `${className} media-preview`
  }, props), {
    children: [media && media.length > 0 && media[0] && /* @__PURE__ */ jsx$2(Image, __spreadProps(__spreadValues({}, media[0]), {
      alt: media[0].description,
      borderRadius: __spreadValues({
        all: Amount.Less
      }, borderRadius),
      size: {
        maxWidth: 300
      },
      url: (_b = media[0].url) != null ? _b : (_a2 = media == null ? void 0 : media[0]) == null ? void 0 : _a2.path
    })), media && media.slice(1).length > 0 && /* @__PURE__ */ jsx$2(Container$8, {
      alignment: __spreadValues({
        horizontal: AlignHorizontal.SpaceBetween,
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.SpaceBetween
      }, alignment),
      children: media.slice(1).map((item, k2) => {
        return /* @__PURE__ */ createElement$1(Image, __spreadProps(__spreadValues({}, item), {
          alt: item.description,
          borderRadius: {
            all: Amount.Least
          },
          key: k2,
          margin: {
            left: alignment.orientation === Orientation.Horizontal ? Amount.Less : Amount.None,
            top: alignment.orientation === Orientation.Vertical ? Amount.Less : Amount.None
          },
          url: item.url
        }));
      })
    })]
  }));
});
styled.svg.withConfig({
  displayName: "SvgMedia",
  componentId: "sc-1xm40ad-0"
})(["align-items:center;display:flex;justify-content:center;svg{fill:rgb(", ");}"], (props) => props.color);
const Svg = memo((_uc) => {
  var _vc = _uc, {
    as = "span",
    children,
    className = "",
    size = {
      height: Sizes.Small,
      width: Sizes.Small
    }
  } = _vc, props = __objRest(_vc, [
    "as",
    "children",
    "className",
    "size"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    as,
    className: `${className} svg`,
    size
  }, props), {
    children
  }));
});
const MessagePreview = memo((_wc) => {
  var _xc = _wc, {
    background = {},
    body,
    borderRadius = {},
    className = "",
    date,
    subject,
    sender
  } = _xc, props = __objRest(_xc, [
    "background",
    "body",
    "borderRadius",
    "className",
    "date",
    "subject",
    "sender"
  ]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    background: __spreadValues({
      color: BackgroundColors.Light
    }, background),
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    className: `${className} message-preview`,
    padding: {
      bottom: Amount.Default,
      left: Amount.More,
      right: Amount.More,
      top: Amount.Default
    }
  }, props), {
    children: [/* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Top
      },
      children: [/* @__PURE__ */ jsx$2(Image, {
        borderRadius: {
          all: Amount.All
        },
        margin: {
          right: Amount.More
        },
        url: "http://localhost:3000/public/assets/images/placeholders/people/person1.png"
      }), /* @__PURE__ */ jsx$2(Label, {
        lineHeight: Amount.Default,
        margin: {
          bottom: Amount.None
        },
        textColor: TextColors.Light,
        textSize: TextSize.Small,
        textWeight: TextWeight.Default,
        children: "Samanatha Baskin"
      }), /* @__PURE__ */ jsx$2(DateLabel, {
        alignment: {
          horizontal: AlignHorizontal.Right
        },
        lineHeight: Amount.Default,
        value: date,
        textColor: TextColors.Lighter,
        textSize: TextSize.Smaller
      })]
    }), /* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal
      },
      children: [/* @__PURE__ */ jsx$2(Container$8, {
        borderRadius: {
          all: Amount.All
        },
        margin: {
          right: Amount.More
        }
      }), /* @__PURE__ */ jsxs$1(Container$8, {
        alignment: {
          horizontal: AlignHorizontal.Left,
          vertical: AlignVertical.Top
        },
        children: [/* @__PURE__ */ jsx$2(Title, {
          lineHeight: Amount.Less,
          textSize: TextSize.Large,
          textWeight: TextWeight.More,
          children: subject
        }), /* @__PURE__ */ jsx$2(Paragraph, {
          children: body
        })]
      })]
    })]
  }));
});
const ConversationList = memo((_yc) => {
  var _zc = _yc, {
    alignment = {},
    background = {},
    borderRadius = {},
    className = "",
    size = {}
  } = _zc, props = __objRest(_zc, [
    "alignment",
    "background",
    "borderRadius",
    "className",
    "size"
  ]);
  const items = new Array(5).fill(0);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      overflow: Overflow.ScrollVertical
    }, alignment),
    background: __spreadValues({
      color: BackgroundColors.Default
    }, background),
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    className: `${className} conversation-list`,
    size: __spreadValues({
      width: 350
    }, size)
  }, props), {
    children: items.map((_, index) => {
      return /* @__PURE__ */ jsx$2(NavigationLink, {
        to: `conversation/${index}`,
        children: /* @__PURE__ */ jsx$2(MessagePreview, {
          background: {
            color: BackgroundColors.Default
          },
          body: "Lorem ipsum",
          border: index !== items.length - 1 ? {
            bottom: {
              color: BorderColors.Light,
              style: BorderStyle.Solid,
              width: 1
            }
          } : void 0,
          date: new Date().toISOString(),
          sender: {
            id: "0",
            name: "Yippy James"
          },
          subject: "Lorem ipsum "
        })
      });
    })
  }));
});
const NavigationMenu = memo((_Ac) => {
  var _Bc = _Ac, {
    alignment = {},
    background = {},
    className = "",
    margin = {},
    matchExactPath = false,
    menu = [],
    padding = {},
    size = {},
    states = {}
  } = _Bc, props = __objRest(_Bc, [
    "alignment",
    "background",
    "className",
    "margin",
    "matchExactPath",
    "menu",
    "padding",
    "size",
    "states"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      horizontal: AlignHorizontal.Stretch,
      vertical: AlignVertical.Top
    }, alignment),
    as: "nav",
    background: __spreadValues({
      color: BackgroundColors.NavigationMenu
    }, background),
    className: `${className} navigation-menu`,
    size: __spreadValues({
      width: 280
    }, size)
  }, props), {
    children: /* @__PURE__ */ jsx$2(Scrollable, {
      padding: __spreadValues({
        all: Amount.Less
      }, padding),
      children: menu.map((item, key) => {
        var _a2, _b, _c, _d;
        return /* @__PURE__ */ jsx$2(NavigationLink, {
          background: {
            color: (_b = (_a2 = item == null ? void 0 : item.background) == null ? void 0 : _a2.color) != null ? _b : BackgroundColors.Transparent
          },
          borderRadius: (_c = item.borderRadius) != null ? _c : {
            all: Amount.Least
          },
          className: "navigation-menu-item",
          icon: item.icon,
          label: item.label,
          lineHeight: Sizes.Large,
          margin: __spreadValues({
            bottom: Amount.Least
          }, margin),
          matchExactPath,
          padding: __spreadValues({
            bottom: Amount.Least,
            left: Amount.Default,
            right: Amount.Default,
            top: Amount.Least
          }, padding),
          size: {
            fill: Fill.Horizontal
          },
          states: __spreadValues({
            active: {
              background: {
                color: BackgroundColors.Dark
              },
              textColor: TextColors.Darker
            },
            current: {
              background: {
                color: BackgroundColors.Primary
              },
              textColor: TextColors.PrimaryContrast
            },
            focused: {
              textColor: TextColors.PrimaryContrast
            },
            hovered: {
              background: {
                color: BackgroundColors.Light
              },
              textColor: TextColors.Darker
            }
          }, states),
          textColor: TextColors.Default,
          to: (_d = item.to) != null ? _d : "#"
        }, key);
      })
    })
  }));
});
const ConversationNavigation = memo((_Cc) => {
  var props = __objRest(_Cc, []);
  const navigate = useNavigate();
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({}, props), {
    children: [/* @__PURE__ */ jsx$2(Button$1, {
      alignment: {
        vertical: AlignVertical.Center
      },
      borderRadius: {
        all: Amount.Least
      },
      events: {
        mouse: {
          onClick: () => navigate("/messages/new")
        }
      },
      icon: {
        name: DualLightIcons.AddCircle,
        size: {
          height: Sizes.Small,
          width: Sizes.Small
        }
      },
      margin: {
        bottom: Amount.Default
      },
      size: {
        fill: Fill.Horizontal
      },
      type: ButtonType.Primary,
      children: "New Message"
    }), /* @__PURE__ */ jsx$2(NavigationMenu, {
      background: {
        color: BackgroundColors.Transparent
      },
      menu: [{
        icon: {
          name: DualLightIcons.Inbox,
          size: {
            height: Sizes.Small,
            width: Sizes.Small
          }
        },
        label: "Inbox",
        to: "/messages/inbox"
      }, {
        icon: {
          name: DualLightIcons.Star,
          size: {
            height: Sizes.Small,
            width: Sizes.Small
          }
        },
        label: "Starred",
        to: "/messages/starred"
      }, {
        icon: {
          name: DualLightIcons.Send,
          size: {
            height: Sizes.Small,
            width: Sizes.Small
          }
        },
        label: "Sent",
        to: "/messages/sent"
      }, {
        icon: {
          name: DualLightIcons.Note,
          size: {
            height: Sizes.Small,
            width: Sizes.Small
          }
        },
        label: "Drafts",
        to: "/messages/drafts"
      }, {
        icon: {
          name: DualLightIcons.Trash,
          size: {
            height: Sizes.Small,
            width: Sizes.Small
          }
        },
        label: "Trash",
        to: "/messages/trash"
      }]
    })]
  }));
});
const Message$1 = memo(({
  body,
  subject,
  sender
}) => {
  return /* @__PURE__ */ jsx$2(Container$8, {});
});
const MessageComposer = memo((_Dc) => {
  var props = __objRest(_Dc, []);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    background: {
      color: BackgroundColors.Default
    }
  }, props), {
    children: [/* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Center
      },
      border: {
        bottom: {
          color: BorderColors.Dark,
          style: BorderStyle.Solid,
          width: 1
        }
      },
      padding: {
        all: Amount.More
      },
      children: /* @__PURE__ */ jsx$2(Label, {
        children: "Title"
      })
    }), /* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Center
      },
      border: {
        bottom: {
          color: BorderColors.Dark,
          style: BorderStyle.Solid,
          width: 1
        }
      },
      padding: {
        all: Amount.More
      },
      children: /* @__PURE__ */ jsx$2(Label, {
        children: "Recipients"
      })
    }), /* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Center
      },
      border: {
        bottom: {
          color: BorderColors.Dark,
          style: BorderStyle.Solid,
          width: 1
        }
      },
      padding: {
        all: Amount.More
      },
      children: /* @__PURE__ */ jsx$2(Label, {
        children: "Subject"
      })
    }), /* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Left,
        vertical: AlignVertical.Bottom
      },
      padding: {
        all: Amount.More
      },
      children: /* @__PURE__ */ jsx$2(Label, {
        children: "Message"
      })
    }), /* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        horizontal: AlignHorizontal.Left,
        vertical: AlignVertical.Bottom
      },
      padding: {
        all: Amount.More
      },
      children: /* @__PURE__ */ jsx$2(Button$1, {
        type: ButtonType.Primary,
        children: "Send"
      })
    })]
  }));
});
const Modal = memo(({
  children,
  visible,
  setVisible
}) => {
  return ReactDOM.createPortal(/* @__PURE__ */ jsx$2(Container$3, {
    className: "modal-container",
    visible,
    onClick: () => {
      setVisible(false);
    },
    children: /* @__PURE__ */ jsx$2(Content, {
      children
    })
  }), document.getElementById("root"));
});
const Container$3 = styled.div.withConfig({
  displayName: "Container",
  componentId: "sc-gk61f6-0"
})(["background:rgba(0,0,0,0.3);bottom:0;left:0;opacity:", ";pointer-events:", ";position:fixed;right:0;top:0;transition:opacity 0.2s ease-out;z-index:500000;"], (props) => props.visible ? "1" : "0", (props) => props.visible ? "auto" : "none");
const Content = styled.div.withConfig({
  displayName: "Content",
  componentId: "sc-gk61f6-1"
})(["background:white;border-radius:15px;box-shadow:0 25px 50px -12px rgba(0,0,0,0.25);padding:20px;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);z-index:1;"]);
const BreadcrumbNavigation = memo((_Ec) => {
  var _Fc = _Ec, {
    alignment = {},
    className = "",
    items = [],
    shadow = DepthShadow.Surface,
    size = {},
    textSize = TextSize.Default
  } = _Fc, props = __objRest(_Fc, [
    "alignment",
    "className",
    "items",
    "shadow",
    "size",
    "textSize"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      orientation: Orientation.Horizontal
    }, alignment),
    className: `${className} menu`,
    shadow,
    size: __spreadValues({
      fill: Fill.Both
    }, size)
  }, props), {
    children: items.map(({
      label,
      path
    }, index) => /* @__PURE__ */ jsxs$1(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      },
      children: [path ? /* @__PURE__ */ jsx$2(NavigationLink, {
        to: path,
        states: {
          hovered: {
            textDecoration: {
              line: TextDecorationLine.Underline
            }
          }
        },
        textDecoration: {
          line: TextDecorationLine.None
        },
        children: /* @__PURE__ */ jsx$2(Title, {
          textColor: TextColors.Primary,
          textSize,
          textWeight: TextWeight.Most,
          children: label
        })
      }, index) : /* @__PURE__ */ jsx$2(Title, {
        textSize,
        textWeight: TextWeight.Most,
        children: label
      }, index), index !== items.length - 1 && /* @__PURE__ */ jsx$2(Icon, {
        name: DualLightIcons.ChevronDoubleRight,
        margin: {
          left: Amount.Less,
          right: Amount.Less
        },
        size: {
          height: textSize,
          width: textSize
        }
      })]
    }, index))
  }));
});
const UserMenu = memo(({
  onLogoutSuccess,
  states = {}
}) => {
  var _a2;
  const [loggingOut, setLoggingOut] = useState(false);
  const dispatch = useDispatch();
  const attributes2 = useSelector((state) => state.user.details.attributes);
  const loggedIn = useSelector((state) => state.user.authentication.state.loggedIn);
  useEffect(() => {
    if (loggingOut && !loggedIn && onLogoutSuccess)
      onLogoutSuccess();
  }, [loggedIn]);
  if (!loggedIn && !((_a2 = states.state) == null ? void 0 : _a2.authenticated)) {
    return /* @__PURE__ */ jsx$2(ErrorLabel, {
      children: "Not logged in"
    });
  }
  return /* @__PURE__ */ jsx$2(MenuButton, {
    menu: [{
      icon: {
        name: BasicIcons.GearCog,
        size: {
          height: Sizes.Smaller,
          width: Sizes.Smaller
        }
      },
      label: "Settings",
      to: "/settings"
    }, {
      events: {
        mouse: {
          onClick: () => {
            setLoggingOut(true);
            dispatch(logout());
          }
        }
      },
      icon: {
        color: Colors.Error,
        name: BasicIcons.Exit,
        size: {
          height: Sizes.Smaller,
          width: Sizes.Smaller
        }
      },
      label: "Logout",
      textColor: TextColors.Error
    }],
    label: loggedIn ? `${attributes2 == null ? void 0 : attributes2.given_name} ${attributes2 == null ? void 0 : attributes2.family_name}` : "Not Authenticated"
  });
});
const NavigationBar = memo(({
  alignment = {},
  background = {},
  border = {},
  logo,
  padding = {}
}) => {
  const navigate = useNavigate();
  return /* @__PURE__ */ jsxs$1(Container$8, {
    alignment: __spreadValues({
      orientation: Orientation.Horizontal,
      vertical: AlignVertical.Center
    }, alignment),
    background: __spreadValues({
      color: BackgroundColors.NavigationBar
    }, background),
    border: __spreadValues({
      bottom: {
        color: BorderColors.Dark,
        style: BorderStyle.Solid,
        width: 1
      }
    }, border),
    padding: __spreadValues({
      bottom: Amount.Default,
      left: Amount.More,
      right: Amount.Most,
      top: Amount.Default
    }, padding),
    children: [/* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal,
        vertical: AlignVertical.Center
      },
      children: logo
    }), /* @__PURE__ */ jsx$2(Spacer, {}), /* @__PURE__ */ jsx$2(Container$8, {
      size: {
        width: 200
      },
      children: /* @__PURE__ */ jsx$2(UserMenu, {
        onLogoutSuccess: () => navigate("/login")
      })
    })]
  });
});
const ObjectLink = memo((_Gc) => {
  var _Hc = _Gc, {
    children,
    disabled,
    onClick
  } = _Hc, props = __objRest(_Hc, [
    "children",
    "disabled",
    "onClick"
  ]);
  return /* @__PURE__ */ jsx$2(Container$2, __spreadProps(__spreadValues({
    onClick
  }, props), {
    children
  }));
});
const Container$2 = styled.button.withConfig({
  displayName: "Container",
  componentId: "sc-1q42v1w-0"
})(["background:transparent;border:1px solid transparent;border-radius:6px;display:block;width:100%;&:after{clear:both;content:'';display:block;}&:hover{border:1px solid #eee;cursor:pointer !important;}&:active{border:1px solid rgba(65,145,63,1);}&.disabled{cursor:default !important;border:none;}"]);
const PageLink = memo(({
  textColor,
  label,
  to,
  icon: icon2,
  showArrow = false,
  showUnderline = false
}) => {
  return /* @__PURE__ */ jsx$2(Container$1, {
    showUnderline,
    children: /* @__PURE__ */ jsxs$1(Link$2, {
      to,
      children: [/* @__PURE__ */ jsx$2(IconWrapper$1, {
        children: icon2
      }), /* @__PURE__ */ jsx$2(Label, {
        textColor: textColor != null ? textColor : TextColors.Primary,
        children: label
      }), showArrow && /* @__PURE__ */ jsx$2(Icon, {
        name: BasicIcons.ChevronRight,
        color: textColor
      })]
    })
  });
});
const Container$1 = styled.div.withConfig({
  displayName: "Container",
  componentId: "sc-10hsjyi-0"
})(["display:flex;a{border:", ";text-decoration:none;}@media (min-width:480px){}@media (min-width:768px){}@media (min-width:992px){a{font-size:18px;}svg{height:12px;width:12px;}}@media (min-width:1200px){}"], (props) => props.showUnderline ? `2px solid var(--color-primary)` : "none");
const IconWrapper$1 = styled.div.withConfig({
  displayName: "IconWrapper",
  componentId: "sc-10hsjyi-1"
})(["flex-basis:20px;"]);
const RouterView = memo((_Ic) => {
  var _Jc = _Ic, {
    alignment = {},
    className = "",
    routes = []
  } = _Jc, props = __objRest(_Jc, [
    "alignment",
    "className",
    "routes"
  ]);
  return /* @__PURE__ */ jsx$2(Routes, {
    children: routes.map((route, key) => {
      return /* @__PURE__ */ jsx$2(Route, __spreadValues({
        element: /* @__PURE__ */ jsx$2(route.component, {}),
        path: route.path
      }, route), key);
    })
  });
});
var reactIs = { exports: {} };
var reactIs_production_min = {};
/** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b = 60103, c$1 = 60106, d$1 = 60107, e = 60108, f = 60114, g = 60109, h$1 = 60110, k = 60112, l = 60113, m = 60120, n = 60115, p = 60116, q$1 = 60121, r$1 = 60122, u = 60117, v$1 = 60129, w = 60131;
if (typeof Symbol === "function" && Symbol.for) {
  var x = Symbol.for;
  b = x("react.element");
  c$1 = x("react.portal");
  d$1 = x("react.fragment");
  e = x("react.strict_mode");
  f = x("react.profiler");
  g = x("react.provider");
  h$1 = x("react.context");
  k = x("react.forward_ref");
  l = x("react.suspense");
  m = x("react.suspense_list");
  n = x("react.memo");
  p = x("react.lazy");
  q$1 = x("react.block");
  r$1 = x("react.server.block");
  u = x("react.fundamental");
  v$1 = x("react.debug_trace_mode");
  w = x("react.legacy_hidden");
}
function y(a) {
  if (typeof a === "object" && a !== null) {
    var t2 = a.$$typeof;
    switch (t2) {
      case b:
        switch (a = a.type, a) {
          case d$1:
          case f:
          case e:
          case l:
          case m:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case h$1:
              case k:
              case p:
              case n:
              case g:
                return a;
              default:
                return t2;
            }
        }
      case c$1:
        return t2;
    }
  }
}
var z = g, A = b, B = k, C = d$1, D = p, E = n, F = c$1, G = f, H = e, I = l;
reactIs_production_min.ContextConsumer = h$1;
reactIs_production_min.ContextProvider = z;
reactIs_production_min.Element = A;
reactIs_production_min.ForwardRef = B;
reactIs_production_min.Fragment = C;
reactIs_production_min.Lazy = D;
reactIs_production_min.Memo = E;
reactIs_production_min.Portal = F;
reactIs_production_min.Profiler = G;
reactIs_production_min.StrictMode = H;
reactIs_production_min.Suspense = I;
reactIs_production_min.isAsyncMode = function() {
  return false;
};
reactIs_production_min.isConcurrentMode = function() {
  return false;
};
reactIs_production_min.isContextConsumer = function(a) {
  return y(a) === h$1;
};
reactIs_production_min.isContextProvider = function(a) {
  return y(a) === g;
};
reactIs_production_min.isElement = function(a) {
  return typeof a === "object" && a !== null && a.$$typeof === b;
};
reactIs_production_min.isForwardRef = function(a) {
  return y(a) === k;
};
reactIs_production_min.isFragment = function(a) {
  return y(a) === d$1;
};
reactIs_production_min.isLazy = function(a) {
  return y(a) === p;
};
reactIs_production_min.isMemo = function(a) {
  return y(a) === n;
};
reactIs_production_min.isPortal = function(a) {
  return y(a) === c$1;
};
reactIs_production_min.isProfiler = function(a) {
  return y(a) === f;
};
reactIs_production_min.isStrictMode = function(a) {
  return y(a) === e;
};
reactIs_production_min.isSuspense = function(a) {
  return y(a) === l;
};
reactIs_production_min.isValidElementType = function(a) {
  return typeof a === "string" || typeof a === "function" || a === d$1 || a === f || a === v$1 || a === e || a === l || a === m || a === w || typeof a === "object" && a !== null && (a.$$typeof === p || a.$$typeof === n || a.$$typeof === g || a.$$typeof === h$1 || a.$$typeof === k || a.$$typeof === u || a.$$typeof === q$1 || a[0] === r$1) ? true : false;
};
reactIs_production_min.typeOf = y;
{
  reactIs.exports = reactIs_production_min;
}
const Tab = memo((_Kc) => {
  var _Lc = _Kc, {
    className = "",
    children,
    label
  } = _Lc, props = __objRest(_Lc, [
    "className",
    "children",
    "label"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    className: `${className} tab`,
    "data-label": label
  }, props), {
    children
  }));
});
const Tabs = memo((_Mc) => {
  var _Nc = _Mc, {
    background = {},
    borderRadius = {},
    className = "",
    children
  } = _Nc, props = __objRest(_Nc, [
    "background",
    "borderRadius",
    "className",
    "children"
  ]);
  let initialIndex = 0;
  Children.forEach(reactIs.exports.isFragment(children) ? children.props.children : children, (child, key) => {
    var _a2;
    if ((_a2 = child.props) == null ? void 0 : _a2.selected)
      initialIndex = key;
  });
  const [currentTabIndex, setTabIndex] = useState(initialIndex);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    alignment: {
      vertical: AlignVertical.Stretch
    },
    className: `${className} tabs`
  }, props), {
    children: [/* @__PURE__ */ jsx$2(Container$8, {
      alignment: {
        orientation: Orientation.Horizontal,
        horizontal: AlignHorizontal.Center
      },
      margin: {
        bottom: Amount.Default
      },
      children: Children.map(reactIs.exports.isFragment(children) ? children.props.children : children, (c2, key) => {
        if (c2.props.visible === false)
          return null;
        return /* @__PURE__ */ jsx$2(Button$1, {
          background: {
            color: BackgroundColors.Transparent
          },
          borderRadius: {
            all: Amount.None
          },
          border: {
            bottom: {
              color: currentTabIndex === key ? BorderColors.Primary : BorderColors.Transparent,
              width: 2
            }
          },
          className: c2.props.className,
          events: {
            mouse: {
              onClick: () => {
                setTabIndex(key);
                if (c2.props.onClick && typeof c2.props.onClick === "function")
                  c2.props.onClick();
              }
            }
          },
          padding: {
            left: Amount.Less,
            right: Amount.Less
          },
          children: /* @__PURE__ */ jsx$2(Label, {
            textColor: currentTabIndex === key ? TextColors.Primary : TextColors.Default,
            children: c2.props.label
          })
        }, key);
      })
    }), /* @__PURE__ */ jsx$2(Container$8, {
      className: "tab-content",
      children: Children.map(reactIs.exports.isFragment(children) ? children.props.children : children, (c2, key) => {
        if (key !== currentTabIndex)
          return null;
        return cloneElement(c2);
      })
    })]
  }));
});
const ConnectionStatus = memo((_Oc) => {
  var props = __objRest(_Oc, []);
  return /* @__PURE__ */ jsx$2(NotificationLabel, __spreadValues({
    type: C$2.Success,
    label: "Connected"
  }, props));
});
const Badge = memo((_Pc) => {
  var _Qc = _Pc, {
    children,
    label
  } = _Qc, props = __objRest(_Qc, [
    "children",
    "label"
  ]);
  var _a2;
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({}, props), {
    children: (_a2 = label == null ? void 0 : label.toString()) != null ? _a2 : children
  }));
});
const Notifications = memo(() => {
  const notifications = useSelector((state) => state.app.notifications);
  return /* @__PURE__ */ jsx$2(Container, {
    children: notifications.map((notification) => {
      return /* @__PURE__ */ jsxs$1(NotificationContainer, {
        children: [/* @__PURE__ */ jsx$2(IconWrapper, {
          color: notification.color
        }), /* @__PURE__ */ jsx$2(Close, {
          children: /* @__PURE__ */ jsx$2(CloseButton, {
            events: {
              mouse: {
                onClick: () => {
                }
              }
            }
          })
        }), /* @__PURE__ */ jsx$2(Message, {
          children: notification.message
        })]
      }, notification.id);
    })
  });
});
const Container = styled.div.withConfig({
  displayName: "Container",
  componentId: "sc-hj2572-0"
})(["left:0;margin:0 auto;position:absolute;right:0;top:15px;width:475px;z-index:50000;"]);
const NotificationContainer = styled.div.withConfig({
  displayName: "NotificationContainer",
  componentId: "sc-hj2572-1"
})(["background:#2b2b2b;border-radius:60px;box-shadow:0 9px 25px rgba(0,0,0,0.3);height:60px;margin:0 0 25px 0;overflow:hidden;&:after{clear:both;content:'';display:block;}"]);
const IconWrapper = styled.div.withConfig({
  displayName: "IconWrapper",
  componentId: "sc-hj2572-2"
})(["float:left;height:60px;line-height:64px;text-align:center;width:64px;svg{fill:rgb(", ");height:18px;width:18px;}"], (props) => props.color || "235, 235, 235");
const Message = styled.div.withConfig({
  displayName: "Message",
  componentId: "sc-hj2572-3"
})(["color:#eee;font-size:14px;font-weight:500;float:left;line-height:58px;width:291px;"]);
const Close = styled.div.withConfig({
  displayName: "Close",
  componentId: "sc-hj2572-4"
})(["float:right;height:60px;line-height:49px;text-align:center;width:60px;"]);
const Heading = memo((_Rc) => {
  var _Sc = _Rc, {
    as = "h3",
    children,
    className = "",
    lineHeight = Sizes.Large,
    textWeight = TextWeight.More,
    textColor = TextColors.Dark,
    textSize = TextSize.Large
  } = _Sc, props = __objRest(_Sc, [
    "as",
    "children",
    "className",
    "lineHeight",
    "textWeight",
    "textColor",
    "textSize"
  ]);
  return /* @__PURE__ */ jsx$2(Label, __spreadProps(__spreadValues({
    as,
    className: `${className} heading`,
    textColor,
    textWeight,
    textSize
  }, props), {
    children
  }));
});
const UniversalSearch = memo((props) => {
  const [resultsVisible, setResultsVisible] = useState(false);
  const [searchValue, setSearchValue] = useState();
  const [isFocused, setFocused] = useState(false);
  useEffect(() => {
    if (isFocused && searchValue) {
      setResultsVisible(true);
    } else {
      setResultsVisible(false);
    }
  }, [isFocused, searchValue]);
  return /* @__PURE__ */ jsxs$1(Container$8, __spreadProps(__spreadValues({
    className: "universal-search"
  }, props), {
    children: [/* @__PURE__ */ jsx$2(SearchInput, {
      events: {
        focus: {
          onBlur: () => {
            setFocused(false);
          },
          onFocus: () => {
            setFocused(true);
          }
        },
        input: {
          onValueChange: ({
            value: value2
          }) => setSearchValue(value2)
        }
      },
      name: "universal-search",
      placeholder: "Search everything",
      spellCheck: false
    }), /* @__PURE__ */ jsxs$1(SearchResults, {
      as: Container$8,
      resultsVisible,
      depth: Depth.Highest,
      padding: {
        all: Amount.More
      },
      children: [/* @__PURE__ */ jsx$2(CloseButton, {
        events: {
          mouse: {
            onClick: () => setResultsVisible(false)
          }
        }
      }), /* @__PURE__ */ jsx$2(Heading, {
        children: "Search Results"
      })]
    })]
  }));
});
const SearchResults = styled.div.withConfig({
  displayName: "SearchResults",
  componentId: "sc-1rpv9xw-0"
})(["backdrop-filter:blur(3px);background:var(--bg-color-depth-highest-opaque);border-radius:var(--border-radius);cursor:default;display:none;overflow:hidden;overflow-y:scroll;left:20px;max-height:390px;min-height:300px;position:absolute;opacity:0;pointer-events:none;top:80%;transform:translateY(-300px);transition:opacity 0.18s ease-in-out,transform 0.18s ease-in-out;min-width:500px;max-width:500px;z-index:3;.result{margin-bottom:3px;}", ";"], (props) => props.resultsVisible && css$2(["display:flex;opacity:1;pointer-events:all;transform:translateY(0);"]));
const ThemeSelector = memo((_Tc) => {
  var _Uc = _Tc, {
    label
  } = _Uc, props = __objRest(_Uc, [
    "label"
  ]);
  const dispatch = useDispatch();
  const {
    current,
    list
  } = useSelector((state) => state.ui.themes);
  return /* @__PURE__ */ jsxs$1(Fragment, {
    children: [label && /* @__PURE__ */ jsx$2(InputLabel, {
      children: label
    }), /* @__PURE__ */ jsx$2(DropdownInput, __spreadValues({
      defaultValue: current,
      events: {
        input: {
          onValueChange: ({
            value: value2
          }) => {
            const newTheme = list.find((t2) => t2.id === value2);
            dispatch(setTheme(newTheme.id));
          }
        }
      },
      name: "theme",
      menu: list.map((i2) => {
        return {
          label: i2.name,
          value: i2.id
        };
      }),
      placeholder: "Choose a theme"
    }, props))]
  });
});
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
    arr2[i2] = arr[i2];
  }
  return arr2;
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _unsupportedIterableToArray(o2, minLen) {
  if (!o2)
    return;
  if (typeof o2 === "string")
    return _arrayLikeToArray(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor)
    n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o2, minLen);
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _defineProperty(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function ownKeys$1(object2, enumerableOnly) {
  var keys2 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread$1(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    i2 % 2 ? ownKeys$1(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function powerSetPermutations(arr) {
  var arrLength = arr.length;
  if (arrLength === 0 || arrLength === 1)
    return arr;
  if (arrLength === 2) {
    return [arr[0], arr[1], "".concat(arr[0], ".").concat(arr[1]), "".concat(arr[1], ".").concat(arr[0])];
  }
  if (arrLength === 3) {
    return [arr[0], arr[1], arr[2], "".concat(arr[0], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[2]), "".concat(arr[2], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[0])];
  }
  if (arrLength >= 4) {
    return [arr[0], arr[1], arr[2], arr[3], "".concat(arr[0], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[3]), "".concat(arr[3], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[3]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[3]), "".concat(arr[0], ".").concat(arr[3], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[3], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[3], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[3], ".").concat(arr[2]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[3], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[3], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[3], ".").concat(arr[1], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[3], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[2], ".").concat(arr[3]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[3], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[1], ".").concat(arr[3]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[3], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[3], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[3], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[2], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[3], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[0], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[3], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[3], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[3], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[1], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[3], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[0], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[3], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[3], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[3], ".").concat(arr[1], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[0], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[3], ".").concat(arr[0], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[1], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[3], ".").concat(arr[1], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[2], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[2], ".").concat(arr[1], ".").concat(arr[0])];
  }
}
var classNameCombinations = {};
function getClassNameCombinations(classNames) {
  if (classNames.length === 0 || classNames.length === 1)
    return classNames;
  var key = classNames.join(".");
  if (!classNameCombinations[key]) {
    classNameCombinations[key] = powerSetPermutations(classNames);
  }
  return classNameCombinations[key];
}
function createStyleObject(classNames) {
  var elementStyle = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var stylesheet = arguments.length > 2 ? arguments[2] : void 0;
  var nonTokenClassNames = classNames.filter(function(className) {
    return className !== "token";
  });
  var classNamesCombinations = getClassNameCombinations(nonTokenClassNames);
  return classNamesCombinations.reduce(function(styleObject, className) {
    return _objectSpread$1(_objectSpread$1({}, styleObject), stylesheet[className]);
  }, elementStyle);
}
function createClassNameString(classNames) {
  return classNames.join(" ");
}
function createChildren(stylesheet, useInlineStyles) {
  var childrenCount = 0;
  return function(children) {
    childrenCount += 1;
    return children.map(function(child, i2) {
      return createElement({
        node: child,
        stylesheet,
        useInlineStyles,
        key: "code-segment-".concat(childrenCount, "-").concat(i2)
      });
    });
  };
}
function createElement(_ref) {
  var node = _ref.node, stylesheet = _ref.stylesheet, _ref$style = _ref.style, style2 = _ref$style === void 0 ? {} : _ref$style, useInlineStyles = _ref.useInlineStyles, key = _ref.key;
  var properties2 = node.properties, type = node.type, TagName = node.tagName, value2 = node.value;
  if (type === "text") {
    return value2;
  } else if (TagName) {
    var childrenCreator = createChildren(stylesheet, useInlineStyles);
    var props;
    if (!useInlineStyles) {
      props = _objectSpread$1(_objectSpread$1({}, properties2), {}, {
        className: createClassNameString(properties2.className)
      });
    } else {
      var allStylesheetSelectors = Object.keys(stylesheet).reduce(function(classes, selector) {
        selector.split(".").forEach(function(className2) {
          if (!classes.includes(className2))
            classes.push(className2);
        });
        return classes;
      }, []);
      var startingClassName = properties2.className && properties2.className.includes("token") ? ["token"] : [];
      var className = properties2.className && startingClassName.concat(properties2.className.filter(function(className2) {
        return !allStylesheetSelectors.includes(className2);
      }));
      props = _objectSpread$1(_objectSpread$1({}, properties2), {}, {
        className: createClassNameString(className) || void 0,
        style: createStyleObject(properties2.className, Object.assign({}, properties2.style, style2), stylesheet)
      });
    }
    var children = childrenCreator(node.children);
    return /* @__PURE__ */ e$3.createElement(TagName, _extends({
      key
    }, props), children);
  }
}
var checkForListedLanguage = function(astGenerator, language) {
  var langs = astGenerator.listLanguages();
  return langs.indexOf(language) !== -1;
};
var _excluded = ["language", "children", "style", "customStyle", "codeTagProps", "useInlineStyles", "showLineNumbers", "showInlineLineNumbers", "startingLineNumber", "lineNumberContainerStyle", "lineNumberStyle", "wrapLines", "wrapLongLines", "lineProps", "renderer", "PreTag", "CodeTag", "code", "astGenerator"];
function ownKeys(object2, enumerableOnly) {
  var keys2 = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object2);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    i2 % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
var newLineRegex = /\n/g;
function getNewLines(str2) {
  return str2.match(newLineRegex);
}
function getAllLineNumbers(_ref) {
  var lines = _ref.lines, startingLineNumber = _ref.startingLineNumber, style2 = _ref.style;
  return lines.map(function(_, i2) {
    var number2 = i2 + startingLineNumber;
    return /* @__PURE__ */ e$3.createElement("span", {
      key: "line-".concat(i2),
      className: "react-syntax-highlighter-line-number",
      style: typeof style2 === "function" ? style2(number2) : style2
    }, "".concat(number2, "\n"));
  });
}
function AllLineNumbers(_ref2) {
  var codeString = _ref2.codeString, codeStyle = _ref2.codeStyle, _ref2$containerStyle = _ref2.containerStyle, containerStyle = _ref2$containerStyle === void 0 ? {
    "float": "left",
    paddingRight: "10px"
  } : _ref2$containerStyle, _ref2$numberStyle = _ref2.numberStyle, numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle, startingLineNumber = _ref2.startingLineNumber;
  return /* @__PURE__ */ e$3.createElement("code", {
    style: Object.assign({}, codeStyle, containerStyle)
  }, getAllLineNumbers({
    lines: codeString.replace(/\n$/, "").split("\n"),
    style: numberStyle,
    startingLineNumber
  }));
}
function getEmWidthOfNumber(num) {
  return "".concat(num.toString().length, ".25em");
}
function getInlineLineNumber(lineNumber, inlineLineNumberStyle) {
  return {
    type: "element",
    tagName: "span",
    properties: {
      key: "line-number--".concat(lineNumber),
      className: ["comment", "linenumber", "react-syntax-highlighter-line-number"],
      style: inlineLineNumberStyle
    },
    children: [{
      type: "text",
      value: lineNumber
    }]
  };
}
function assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber) {
  var defaultLineNumberStyle = {
    display: "inline-block",
    minWidth: getEmWidthOfNumber(largestLineNumber),
    paddingRight: "1em",
    textAlign: "right",
    userSelect: "none"
  };
  var customLineNumberStyle = typeof lineNumberStyle === "function" ? lineNumberStyle(lineNumber) : lineNumberStyle;
  var assembledStyle = _objectSpread(_objectSpread({}, defaultLineNumberStyle), customLineNumberStyle);
  return assembledStyle;
}
function createLineElement(_ref3) {
  var children = _ref3.children, lineNumber = _ref3.lineNumber, lineNumberStyle = _ref3.lineNumberStyle, largestLineNumber = _ref3.largestLineNumber, showInlineLineNumbers = _ref3.showInlineLineNumbers, _ref3$lineProps = _ref3.lineProps, lineProps = _ref3$lineProps === void 0 ? {} : _ref3$lineProps, _ref3$className = _ref3.className, className = _ref3$className === void 0 ? [] : _ref3$className, showLineNumbers = _ref3.showLineNumbers, wrapLongLines = _ref3.wrapLongLines;
  var properties2 = typeof lineProps === "function" ? lineProps(lineNumber) : lineProps;
  properties2["className"] = className;
  if (lineNumber && showInlineLineNumbers) {
    var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);
    children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));
  }
  if (wrapLongLines & showLineNumbers) {
    properties2.style = _objectSpread(_objectSpread({}, properties2.style), {}, {
      display: "flex"
    });
  }
  return {
    type: "element",
    tagName: "span",
    properties: properties2,
    children
  };
}
function flattenCodeTree(tree) {
  var className = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var newTree = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
  for (var i2 = 0; i2 < tree.length; i2++) {
    var node = tree[i2];
    if (node.type === "text") {
      newTree.push(createLineElement({
        children: [node],
        className: _toConsumableArray(new Set(className))
      }));
    } else if (node.children) {
      var classNames = className.concat(node.properties.className);
      flattenCodeTree(node.children, classNames).forEach(function(i3) {
        return newTree.push(i3);
      });
    }
  }
  return newTree;
}
function processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines) {
  var _ref4;
  var tree = flattenCodeTree(codeTree.value);
  var newTree = [];
  var lastLineBreakIndex = -1;
  var index = 0;
  function createWrappedLine(children2, lineNumber2) {
    var className = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return createLineElement({
      children: children2,
      lineNumber: lineNumber2,
      lineNumberStyle,
      largestLineNumber,
      showInlineLineNumbers,
      lineProps,
      className,
      showLineNumbers,
      wrapLongLines
    });
  }
  function createUnwrappedLine(children2, lineNumber2) {
    if (showLineNumbers && lineNumber2 && showInlineLineNumbers) {
      var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber2, largestLineNumber);
      children2.unshift(getInlineLineNumber(lineNumber2, inlineLineNumberStyle));
    }
    return children2;
  }
  function createLine(children2, lineNumber2) {
    var className = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return wrapLines || className.length > 0 ? createWrappedLine(children2, lineNumber2, className) : createUnwrappedLine(children2, lineNumber2);
  }
  var _loop = function _loop2() {
    var node = tree[index];
    var value2 = node.children[0].value;
    var newLines = getNewLines(value2);
    if (newLines) {
      var splitValue = value2.split("\n");
      splitValue.forEach(function(text, i2) {
        var lineNumber2 = showLineNumbers && newTree.length + startingLineNumber;
        var newChild = {
          type: "text",
          value: "".concat(text, "\n")
        };
        if (i2 === 0) {
          var _children = tree.slice(lastLineBreakIndex + 1, index).concat(createLineElement({
            children: [newChild],
            className: node.properties.className
          }));
          var _line = createLine(_children, lineNumber2);
          newTree.push(_line);
        } else if (i2 === splitValue.length - 1) {
          var stringChild = tree[index + 1] && tree[index + 1].children && tree[index + 1].children[0];
          var lastLineInPreviousSpan = {
            type: "text",
            value: "".concat(text)
          };
          if (stringChild) {
            var newElem = createLineElement({
              children: [lastLineInPreviousSpan],
              className: node.properties.className
            });
            tree.splice(index + 1, 0, newElem);
          } else {
            var _children2 = [lastLineInPreviousSpan];
            var _line2 = createLine(_children2, lineNumber2, node.properties.className);
            newTree.push(_line2);
          }
        } else {
          var _children3 = [newChild];
          var _line3 = createLine(_children3, lineNumber2, node.properties.className);
          newTree.push(_line3);
        }
      });
      lastLineBreakIndex = index;
    }
    index++;
  };
  while (index < tree.length) {
    _loop();
  }
  if (lastLineBreakIndex !== tree.length - 1) {
    var children = tree.slice(lastLineBreakIndex + 1, tree.length);
    if (children && children.length) {
      var lineNumber = showLineNumbers && newTree.length + startingLineNumber;
      var line = createLine(children, lineNumber);
      newTree.push(line);
    }
  }
  return wrapLines ? newTree : (_ref4 = []).concat.apply(_ref4, newTree);
}
function defaultRenderer(_ref5) {
  var rows = _ref5.rows, stylesheet = _ref5.stylesheet, useInlineStyles = _ref5.useInlineStyles;
  return rows.map(function(node, i2) {
    return createElement({
      node,
      stylesheet,
      useInlineStyles,
      key: "code-segement".concat(i2)
    });
  });
}
function isHighlightJs(astGenerator) {
  return astGenerator && typeof astGenerator.highlightAuto !== "undefined";
}
function getCodeTree(_ref6) {
  var astGenerator = _ref6.astGenerator, language = _ref6.language, code = _ref6.code, defaultCodeValue = _ref6.defaultCodeValue;
  if (isHighlightJs(astGenerator)) {
    var hasLanguage = checkForListedLanguage(astGenerator, language);
    if (language === "text") {
      return {
        value: defaultCodeValue,
        language: "text"
      };
    } else if (hasLanguage) {
      return astGenerator.highlight(language, code);
    } else {
      return astGenerator.highlightAuto(code);
    }
  }
  try {
    return language && language !== "text" ? {
      value: astGenerator.highlight(code, language)
    } : {
      value: defaultCodeValue
    };
  } catch (e2) {
    return {
      value: defaultCodeValue
    };
  }
}
function highlight$1(defaultAstGenerator, defaultStyle2) {
  return function SyntaxHighlighter2(_ref7) {
    var language = _ref7.language, children = _ref7.children, _ref7$style = _ref7.style, style2 = _ref7$style === void 0 ? defaultStyle2 : _ref7$style, _ref7$customStyle = _ref7.customStyle, customStyle = _ref7$customStyle === void 0 ? {} : _ref7$customStyle, _ref7$codeTagProps = _ref7.codeTagProps, codeTagProps = _ref7$codeTagProps === void 0 ? {
      className: language ? "language-".concat(language) : void 0,
      style: _objectSpread(_objectSpread({}, style2['code[class*="language-"]']), style2['code[class*="language-'.concat(language, '"]')])
    } : _ref7$codeTagProps, _ref7$useInlineStyles = _ref7.useInlineStyles, useInlineStyles = _ref7$useInlineStyles === void 0 ? true : _ref7$useInlineStyles, _ref7$showLineNumbers = _ref7.showLineNumbers, showLineNumbers = _ref7$showLineNumbers === void 0 ? false : _ref7$showLineNumbers, _ref7$showInlineLineN = _ref7.showInlineLineNumbers, showInlineLineNumbers = _ref7$showInlineLineN === void 0 ? true : _ref7$showInlineLineN, _ref7$startingLineNum = _ref7.startingLineNumber, startingLineNumber = _ref7$startingLineNum === void 0 ? 1 : _ref7$startingLineNum, lineNumberContainerStyle = _ref7.lineNumberContainerStyle, _ref7$lineNumberStyle = _ref7.lineNumberStyle, lineNumberStyle = _ref7$lineNumberStyle === void 0 ? {} : _ref7$lineNumberStyle, wrapLines = _ref7.wrapLines, _ref7$wrapLongLines = _ref7.wrapLongLines, wrapLongLines = _ref7$wrapLongLines === void 0 ? false : _ref7$wrapLongLines, _ref7$lineProps = _ref7.lineProps, lineProps = _ref7$lineProps === void 0 ? {} : _ref7$lineProps, renderer = _ref7.renderer, _ref7$PreTag = _ref7.PreTag, PreTag = _ref7$PreTag === void 0 ? "pre" : _ref7$PreTag, _ref7$CodeTag = _ref7.CodeTag, CodeTag = _ref7$CodeTag === void 0 ? "code" : _ref7$CodeTag, _ref7$code = _ref7.code, code = _ref7$code === void 0 ? (Array.isArray(children) ? children[0] : children) || "" : _ref7$code, astGenerator = _ref7.astGenerator, rest2 = _objectWithoutProperties(_ref7, _excluded);
    astGenerator = astGenerator || defaultAstGenerator;
    var allLineNumbers = showLineNumbers ? /* @__PURE__ */ e$3.createElement(AllLineNumbers, {
      containerStyle: lineNumberContainerStyle,
      codeStyle: codeTagProps.style || {},
      numberStyle: lineNumberStyle,
      startingLineNumber,
      codeString: code
    }) : null;
    var defaultPreStyle = style2.hljs || style2['pre[class*="language-"]'] || {
      backgroundColor: "#fff"
    };
    var generatorClassName = isHighlightJs(astGenerator) ? "hljs" : "prismjs";
    var preProps = useInlineStyles ? Object.assign({}, rest2, {
      style: Object.assign({}, defaultPreStyle, customStyle)
    }) : Object.assign({}, rest2, {
      className: rest2.className ? "".concat(generatorClassName, " ").concat(rest2.className) : generatorClassName,
      style: Object.assign({}, customStyle)
    });
    if (wrapLongLines) {
      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {
        whiteSpace: "pre-wrap"
      });
    } else {
      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {
        whiteSpace: "pre"
      });
    }
    if (!astGenerator) {
      return /* @__PURE__ */ e$3.createElement(PreTag, preProps, allLineNumbers, /* @__PURE__ */ e$3.createElement(CodeTag, codeTagProps, code));
    }
    if (wrapLines === void 0 && renderer || wrapLongLines)
      wrapLines = true;
    renderer = renderer || defaultRenderer;
    var defaultCodeValue = [{
      type: "text",
      value: code
    }];
    var codeTree = getCodeTree({
      astGenerator,
      language,
      code,
      defaultCodeValue
    });
    if (codeTree.language === null) {
      codeTree.value = defaultCodeValue;
    }
    var largestLineNumber = codeTree.value.length + startingLineNumber;
    var rows = processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines);
    return /* @__PURE__ */ e$3.createElement(PreTag, preProps, /* @__PURE__ */ e$3.createElement(CodeTag, codeTagProps, !showInlineLineNumbers && allLineNumbers, renderer({
      rows,
      stylesheet: style2,
      useInlineStyles
    })));
  };
}
var supportedLanguages = ["abap", "abnf", "actionscript", "ada", "agda", "al", "antlr4", "apacheconf", "apex", "apl", "applescript", "aql", "arduino", "arff", "asciidoc", "asm6502", "asmatmel", "aspnet", "autohotkey", "autoit", "avisynth", "avro-idl", "bash", "basic", "batch", "bbcode", "bicep", "birb", "bison", "bnf", "brainfuck", "brightscript", "bro", "bsl", "c", "cfscript", "chaiscript", "cil", "clike", "clojure", "cmake", "cobol", "coffeescript", "concurnas", "coq", "cpp", "crystal", "csharp", "cshtml", "csp", "css-extras", "css", "csv", "cypher", "d", "dart", "dataweave", "dax", "dhall", "diff", "django", "dns-zone-file", "docker", "dot", "ebnf", "editorconfig", "eiffel", "ejs", "elixir", "elm", "erb", "erlang", "etlua", "excel-formula", "factor", "false", "firestore-security-rules", "flow", "fortran", "fsharp", "ftl", "gap", "gcode", "gdscript", "gedcom", "gherkin", "git", "glsl", "gml", "gn", "go-module", "go", "graphql", "groovy", "haml", "handlebars", "haskell", "haxe", "hcl", "hlsl", "hoon", "hpkp", "hsts", "http", "ichigojam", "icon", "icu-message-format", "idris", "iecst", "ignore", "inform7", "ini", "io", "j", "java", "javadoc", "javadoclike", "javascript", "javastacktrace", "jexl", "jolie", "jq", "js-extras", "js-templates", "jsdoc", "json", "json5", "jsonp", "jsstacktrace", "jsx", "julia", "keepalived", "keyman", "kotlin", "kumir", "kusto", "latex", "latte", "less", "lilypond", "liquid", "lisp", "livescript", "llvm", "log", "lolcode", "lua", "magma", "makefile", "markdown", "markup-templating", "markup", "matlab", "maxscript", "mel", "mermaid", "mizar", "mongodb", "monkey", "moonscript", "n1ql", "n4js", "nand2tetris-hdl", "naniscript", "nasm", "neon", "nevod", "nginx", "nim", "nix", "nsis", "objectivec", "ocaml", "opencl", "openqasm", "oz", "parigp", "parser", "pascal", "pascaligo", "pcaxis", "peoplecode", "perl", "php-extras", "php", "phpdoc", "plsql", "powerquery", "powershell", "processing", "prolog", "promql", "properties", "protobuf", "psl", "pug", "puppet", "pure", "purebasic", "purescript", "python", "q", "qml", "qore", "qsharp", "r", "racket", "reason", "regex", "rego", "renpy", "rest", "rip", "roboconf", "robotframework", "ruby", "rust", "sas", "sass", "scala", "scheme", "scss", "shell-session", "smali", "smalltalk", "smarty", "sml", "solidity", "solution-file", "soy", "sparql", "splunk-spl", "sqf", "sql", "squirrel", "stan", "stylus", "swift", "systemd", "t4-cs", "t4-templating", "t4-vb", "tap", "tcl", "textile", "toml", "tremor", "tsx", "tt2", "turtle", "twig", "typescript", "typoscript", "unrealscript", "uorazor", "uri", "v", "vala", "vbnet", "velocity", "verilog", "vhdl", "vim", "visual-basic", "warpscript", "wasm", "web-idl", "wiki", "wolfram", "wren", "xeora", "xml-doc", "xojo", "xquery", "yaml", "yang", "zig"];
var immutable = extend;
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
function extend() {
  var target = {};
  for (var i2 = 0; i2 < arguments.length; i2++) {
    var source = arguments[i2];
    for (var key in source) {
      if (hasOwnProperty$1.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
}
var schema$1 = Schema$2;
var proto$1 = Schema$2.prototype;
proto$1.space = null;
proto$1.normal = {};
proto$1.property = {};
function Schema$2(property, normal, space2) {
  this.property = property;
  this.normal = normal;
  if (space2) {
    this.space = space2;
  }
}
var xtend = immutable;
var Schema$1 = schema$1;
var merge_1 = merge$1;
function merge$1(definitions) {
  var length = definitions.length;
  var property = [];
  var normal = [];
  var index = -1;
  var info2;
  var space2;
  while (++index < length) {
    info2 = definitions[index];
    property.push(info2.property);
    normal.push(info2.normal);
    space2 = info2.space;
  }
  return new Schema$1(xtend.apply(null, property), xtend.apply(null, normal), space2);
}
var normalize_1 = normalize$3;
function normalize$3(value2) {
  return value2.toLowerCase();
}
var info = Info$2;
var proto = Info$2.prototype;
proto.space = null;
proto.attribute = null;
proto.property = null;
proto.boolean = false;
proto.booleanish = false;
proto.overloadedBoolean = false;
proto.number = false;
proto.commaSeparated = false;
proto.spaceSeparated = false;
proto.commaOrSpaceSeparated = false;
proto.mustUseProperty = false;
proto.defined = false;
function Info$2(property, attribute) {
  this.property = property;
  this.attribute = attribute;
}
var types$3 = {};
var powers = 0;
types$3.boolean = increment();
types$3.booleanish = increment();
types$3.overloadedBoolean = increment();
types$3.number = increment();
types$3.spaceSeparated = increment();
types$3.commaSeparated = increment();
types$3.commaOrSpaceSeparated = increment();
function increment() {
  return Math.pow(2, ++powers);
}
var Info$1 = info;
var types$2 = types$3;
var definedInfo = DefinedInfo$2;
DefinedInfo$2.prototype = new Info$1();
DefinedInfo$2.prototype.defined = true;
var checks = [
  "boolean",
  "booleanish",
  "overloadedBoolean",
  "number",
  "commaSeparated",
  "spaceSeparated",
  "commaOrSpaceSeparated"
];
var checksLength = checks.length;
function DefinedInfo$2(property, attribute, mask, space2) {
  var index = -1;
  var check;
  mark(this, "space", space2);
  Info$1.call(this, property, attribute);
  while (++index < checksLength) {
    check = checks[index];
    mark(this, check, (mask & types$2[check]) === types$2[check]);
  }
}
function mark(values, key, value2) {
  if (value2) {
    values[key] = value2;
  }
}
var normalize$2 = normalize_1;
var Schema = schema$1;
var DefinedInfo$1 = definedInfo;
var create_1 = create$5;
function create$5(definition) {
  var space2 = definition.space;
  var mustUseProperty = definition.mustUseProperty || [];
  var attributes2 = definition.attributes || {};
  var props = definition.properties;
  var transform = definition.transform;
  var property = {};
  var normal = {};
  var prop;
  var info2;
  for (prop in props) {
    info2 = new DefinedInfo$1(prop, transform(attributes2, prop), props[prop], space2);
    if (mustUseProperty.indexOf(prop) !== -1) {
      info2.mustUseProperty = true;
    }
    property[prop] = info2;
    normal[normalize$2(prop)] = prop;
    normal[normalize$2(info2.attribute)] = prop;
  }
  return new Schema(property, normal, space2);
}
var create$4 = create_1;
var xlink$1 = create$4({
  space: "xlink",
  transform: xlinkTransform,
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
});
function xlinkTransform(_, prop) {
  return "xlink:" + prop.slice(5).toLowerCase();
}
var create$3 = create_1;
var xml$1 = create$3({
  space: "xml",
  transform: xmlTransform,
  properties: {
    xmlLang: null,
    xmlBase: null,
    xmlSpace: null
  }
});
function xmlTransform(_, prop) {
  return "xml:" + prop.slice(3).toLowerCase();
}
var caseSensitiveTransform_1 = caseSensitiveTransform$1;
function caseSensitiveTransform$1(attributes2, attribute) {
  return attribute in attributes2 ? attributes2[attribute] : attribute;
}
var caseSensitiveTransform = caseSensitiveTransform_1;
var caseInsensitiveTransform_1 = caseInsensitiveTransform$2;
function caseInsensitiveTransform$2(attributes2, property) {
  return caseSensitiveTransform(attributes2, property.toLowerCase());
}
var create$2 = create_1;
var caseInsensitiveTransform$1 = caseInsensitiveTransform_1;
var xmlns$1 = create$2({
  space: "xmlns",
  attributes: {
    xmlnsxlink: "xmlns:xlink"
  },
  transform: caseInsensitiveTransform$1,
  properties: {
    xmlns: null,
    xmlnsXLink: null
  }
});
var types$1 = types$3;
var create$1 = create_1;
var booleanish$1 = types$1.booleanish;
var number$1 = types$1.number;
var spaceSeparated$1 = types$1.spaceSeparated;
var aria$1 = create$1({
  transform: ariaTransform,
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: booleanish$1,
    ariaAutoComplete: null,
    ariaBusy: booleanish$1,
    ariaChecked: booleanish$1,
    ariaColCount: number$1,
    ariaColIndex: number$1,
    ariaColSpan: number$1,
    ariaControls: spaceSeparated$1,
    ariaCurrent: null,
    ariaDescribedBy: spaceSeparated$1,
    ariaDetails: null,
    ariaDisabled: booleanish$1,
    ariaDropEffect: spaceSeparated$1,
    ariaErrorMessage: null,
    ariaExpanded: booleanish$1,
    ariaFlowTo: spaceSeparated$1,
    ariaGrabbed: booleanish$1,
    ariaHasPopup: null,
    ariaHidden: booleanish$1,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: spaceSeparated$1,
    ariaLevel: number$1,
    ariaLive: null,
    ariaModal: booleanish$1,
    ariaMultiLine: booleanish$1,
    ariaMultiSelectable: booleanish$1,
    ariaOrientation: null,
    ariaOwns: spaceSeparated$1,
    ariaPlaceholder: null,
    ariaPosInSet: number$1,
    ariaPressed: booleanish$1,
    ariaReadOnly: booleanish$1,
    ariaRelevant: null,
    ariaRequired: booleanish$1,
    ariaRoleDescription: spaceSeparated$1,
    ariaRowCount: number$1,
    ariaRowIndex: number$1,
    ariaRowSpan: number$1,
    ariaSelected: booleanish$1,
    ariaSetSize: number$1,
    ariaSort: null,
    ariaValueMax: number$1,
    ariaValueMin: number$1,
    ariaValueNow: number$1,
    ariaValueText: null,
    role: null
  }
});
function ariaTransform(_, prop) {
  return prop === "role" ? prop : "aria-" + prop.slice(4).toLowerCase();
}
var types = types$3;
var create = create_1;
var caseInsensitiveTransform = caseInsensitiveTransform_1;
var boolean = types.boolean;
var overloadedBoolean = types.overloadedBoolean;
var booleanish = types.booleanish;
var number = types.number;
var spaceSeparated = types.spaceSeparated;
var commaSeparated = types.commaSeparated;
var html$2 = create({
  space: "html",
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  transform: caseInsensitiveTransform,
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    abbr: null,
    accept: commaSeparated,
    acceptCharset: spaceSeparated,
    accessKey: spaceSeparated,
    action: null,
    allow: null,
    allowFullScreen: boolean,
    allowPaymentRequest: boolean,
    allowUserMedia: boolean,
    alt: null,
    as: null,
    async: boolean,
    autoCapitalize: null,
    autoComplete: spaceSeparated,
    autoFocus: boolean,
    autoPlay: boolean,
    capture: boolean,
    charSet: null,
    checked: boolean,
    cite: null,
    className: spaceSeparated,
    cols: number,
    colSpan: null,
    content: null,
    contentEditable: booleanish,
    controls: boolean,
    controlsList: spaceSeparated,
    coords: number | commaSeparated,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: boolean,
    defer: boolean,
    dir: null,
    dirName: null,
    disabled: boolean,
    download: overloadedBoolean,
    draggable: booleanish,
    encType: null,
    enterKeyHint: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: boolean,
    formTarget: null,
    headers: spaceSeparated,
    height: number,
    hidden: boolean,
    high: number,
    href: null,
    hrefLang: null,
    htmlFor: spaceSeparated,
    httpEquiv: spaceSeparated,
    id: null,
    imageSizes: null,
    imageSrcSet: commaSeparated,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: boolean,
    itemId: null,
    itemProp: spaceSeparated,
    itemRef: spaceSeparated,
    itemScope: boolean,
    itemType: spaceSeparated,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: boolean,
    low: number,
    manifest: null,
    max: null,
    maxLength: number,
    media: null,
    method: null,
    min: null,
    minLength: number,
    multiple: boolean,
    muted: boolean,
    name: null,
    nonce: null,
    noModule: boolean,
    noValidate: boolean,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforePrint: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextMenu: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: boolean,
    optimum: number,
    pattern: null,
    ping: spaceSeparated,
    placeholder: null,
    playsInline: boolean,
    poster: null,
    preload: null,
    readOnly: boolean,
    referrerPolicy: null,
    rel: spaceSeparated,
    required: boolean,
    reversed: boolean,
    rows: number,
    rowSpan: number,
    sandbox: spaceSeparated,
    scope: null,
    scoped: boolean,
    seamless: boolean,
    selected: boolean,
    shape: null,
    size: number,
    sizes: null,
    slot: null,
    span: number,
    spellCheck: booleanish,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: commaSeparated,
    start: number,
    step: null,
    style: null,
    tabIndex: number,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: boolean,
    useMap: null,
    value: booleanish,
    width: number,
    wrap: null,
    align: null,
    aLink: null,
    archive: spaceSeparated,
    axis: null,
    background: null,
    bgColor: null,
    border: number,
    borderColor: null,
    bottomMargin: number,
    cellPadding: null,
    cellSpacing: null,
    char: null,
    charOff: null,
    classId: null,
    clear: null,
    code: null,
    codeBase: null,
    codeType: null,
    color: null,
    compact: boolean,
    declare: boolean,
    event: null,
    face: null,
    frame: null,
    frameBorder: null,
    hSpace: number,
    leftMargin: number,
    link: null,
    longDesc: null,
    lowSrc: null,
    marginHeight: number,
    marginWidth: number,
    noResize: boolean,
    noHref: boolean,
    noShade: boolean,
    noWrap: boolean,
    object: null,
    profile: null,
    prompt: null,
    rev: null,
    rightMargin: number,
    rules: null,
    scheme: null,
    scrolling: booleanish,
    standby: null,
    summary: null,
    text: null,
    topMargin: number,
    valueType: null,
    version: null,
    vAlign: null,
    vLink: null,
    vSpace: number,
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: boolean,
    disableRemotePlayback: boolean,
    prefix: null,
    property: null,
    results: number,
    security: null,
    unselectable: null
  }
});
var merge = merge_1;
var xlink = xlink$1;
var xml = xml$1;
var xmlns = xmlns$1;
var aria = aria$1;
var html$1 = html$2;
var html_1$1 = merge([xml, xlink, xmlns, aria, html$1]);
var normalize$1 = normalize_1;
var DefinedInfo = definedInfo;
var Info = info;
var data = "data";
var find_1 = find$1;
var valid = /^data[-\w.:]+$/i;
var dash = /-[a-z]/g;
var cap = /[A-Z]/g;
function find$1(schema2, value2) {
  var normal = normalize$1(value2);
  var prop = value2;
  var Type = Info;
  if (normal in schema2.normal) {
    return schema2.property[schema2.normal[normal]];
  }
  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value2)) {
    if (value2.charAt(4) === "-") {
      prop = datasetToProperty(value2);
    } else {
      value2 = datasetToAttribute(value2);
    }
    Type = DefinedInfo;
  }
  return new Type(prop, value2);
}
function datasetToProperty(attribute) {
  var value2 = attribute.slice(5).replace(dash, camelcase);
  return data + value2.charAt(0).toUpperCase() + value2.slice(1);
}
function datasetToAttribute(property) {
  var value2 = property.slice(4);
  if (dash.test(value2)) {
    return property;
  }
  value2 = value2.replace(cap, kebab);
  if (value2.charAt(0) !== "-") {
    value2 = "-" + value2;
  }
  return data + value2;
}
function kebab($0) {
  return "-" + $0.toLowerCase();
}
function camelcase($0) {
  return $0.charAt(1).toUpperCase();
}
var hastUtilParseSelector = parse$3;
var search = /[#.]/g;
function parse$3(selector, defaultTagName) {
  var value2 = selector || "";
  var name2 = defaultTagName || "div";
  var props = {};
  var start = 0;
  var subvalue;
  var previous;
  var match2;
  while (start < value2.length) {
    search.lastIndex = start;
    match2 = search.exec(value2);
    subvalue = value2.slice(start, match2 ? match2.index : value2.length);
    if (subvalue) {
      if (!previous) {
        name2 = subvalue;
      } else if (previous === "#") {
        props.id = subvalue;
      } else if (props.className) {
        props.className.push(subvalue);
      } else {
        props.className = [subvalue];
      }
      start += subvalue.length;
    }
    if (match2) {
      previous = match2[0];
      start++;
    }
  }
  return { type: "element", tagName: name2, properties: props, children: [] };
}
var spaceSeparatedTokens = {};
spaceSeparatedTokens.parse = parse$2;
spaceSeparatedTokens.stringify = stringify$2;
var empty$1 = "";
var space$2 = " ";
var whiteSpace = /[ \t\n\r\f]+/g;
function parse$2(value2) {
  var input = String(value2 || empty$1).trim();
  return input === empty$1 ? [] : input.split(whiteSpace);
}
function stringify$2(values) {
  return values.join(space$2).trim();
}
var commaSeparatedTokens = {};
commaSeparatedTokens.parse = parse$1;
commaSeparatedTokens.stringify = stringify$1;
var comma = ",";
var space$1 = " ";
var empty = "";
function parse$1(value2) {
  var values = [];
  var input = String(value2 || empty);
  var index = input.indexOf(comma);
  var lastIndex = 0;
  var end = false;
  var val;
  while (!end) {
    if (index === -1) {
      index = input.length;
      end = true;
    }
    val = input.slice(lastIndex, index).trim();
    if (val || !end) {
      values.push(val);
    }
    lastIndex = index + 1;
    index = input.indexOf(comma, lastIndex);
  }
  return values;
}
function stringify$1(values, options) {
  var settings = options || {};
  var left = settings.padLeft === false ? empty : space$1;
  var right = settings.padRight ? space$1 : empty;
  if (values[values.length - 1] === empty) {
    values = values.concat(empty);
  }
  return values.join(right + comma + left).trim();
}
var find = find_1;
var normalize = normalize_1;
var parseSelector = hastUtilParseSelector;
var spaces = spaceSeparatedTokens.parse;
var commas = commaSeparatedTokens.parse;
var factory_1 = factory$1;
var own$2 = {}.hasOwnProperty;
function factory$1(schema2, defaultTagName, caseSensitive) {
  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null;
  return h2;
  function h2(selector, properties2) {
    var node = parseSelector(selector, defaultTagName);
    var children = Array.prototype.slice.call(arguments, 2);
    var name2 = node.tagName.toLowerCase();
    var property;
    node.tagName = adjust && own$2.call(adjust, name2) ? adjust[name2] : name2;
    if (properties2 && isChildren(properties2, node)) {
      children.unshift(properties2);
      properties2 = null;
    }
    if (properties2) {
      for (property in properties2) {
        addProperty(node.properties, property, properties2[property]);
      }
    }
    addChild(node.children, children);
    if (node.tagName === "template") {
      node.content = { type: "root", children: node.children };
      node.children = [];
    }
    return node;
  }
  function addProperty(properties2, key, value2) {
    var info2;
    var property;
    var result;
    if (value2 === null || value2 === void 0 || value2 !== value2) {
      return;
    }
    info2 = find(schema2, key);
    property = info2.property;
    result = value2;
    if (typeof result === "string") {
      if (info2.spaceSeparated) {
        result = spaces(result);
      } else if (info2.commaSeparated) {
        result = commas(result);
      } else if (info2.commaOrSpaceSeparated) {
        result = spaces(commas(result).join(" "));
      }
    }
    if (property === "style" && typeof value2 !== "string") {
      result = style$1(result);
    }
    if (property === "className" && properties2.className) {
      result = properties2.className.concat(result);
    }
    properties2[property] = parsePrimitives(info2, property, result);
  }
}
function isChildren(value2, node) {
  return typeof value2 === "string" || "length" in value2 || isNode(node.tagName, value2);
}
function isNode(tagName, value2) {
  var type = value2.type;
  if (tagName === "input" || !type || typeof type !== "string") {
    return false;
  }
  if (typeof value2.children === "object" && "length" in value2.children) {
    return true;
  }
  type = type.toLowerCase();
  if (tagName === "button") {
    return type !== "menu" && type !== "submit" && type !== "reset" && type !== "button";
  }
  return "value" in value2;
}
function addChild(nodes, value2) {
  var index;
  var length;
  if (typeof value2 === "string" || typeof value2 === "number") {
    nodes.push({ type: "text", value: String(value2) });
    return;
  }
  if (typeof value2 === "object" && "length" in value2) {
    index = -1;
    length = value2.length;
    while (++index < length) {
      addChild(nodes, value2[index]);
    }
    return;
  }
  if (typeof value2 !== "object" || !("type" in value2)) {
    throw new Error("Expected node, nodes, or string, got `" + value2 + "`");
  }
  nodes.push(value2);
}
function parsePrimitives(info2, name2, value2) {
  var index;
  var length;
  var result;
  if (typeof value2 !== "object" || !("length" in value2)) {
    return parsePrimitive(info2, name2, value2);
  }
  length = value2.length;
  index = -1;
  result = [];
  while (++index < length) {
    result[index] = parsePrimitive(info2, name2, value2[index]);
  }
  return result;
}
function parsePrimitive(info2, name2, value2) {
  var result = value2;
  if (info2.number || info2.positiveNumber) {
    if (!isNaN(result) && result !== "") {
      result = Number(result);
    }
  } else if (info2.boolean || info2.overloadedBoolean) {
    if (typeof result === "string" && (result === "" || normalize(value2) === normalize(name2))) {
      result = true;
    }
  }
  return result;
}
function style$1(value2) {
  var result = [];
  var key;
  for (key in value2) {
    result.push([key, value2[key]].join(": "));
  }
  return result.join("; ");
}
function createAdjustMap(values) {
  var length = values.length;
  var index = -1;
  var result = {};
  var value2;
  while (++index < length) {
    value2 = values[index];
    result[value2.toLowerCase()] = value2;
  }
  return result;
}
var schema = html_1$1;
var factory = factory_1;
var html = factory(schema, "div");
html.displayName = "html";
var html_1 = html;
var hastscript = html_1;
const AElig = "\xC6";
const AMP = "&";
const Aacute = "\xC1";
const Acirc = "\xC2";
const Agrave = "\xC0";
const Aring = "\xC5";
const Atilde = "\xC3";
const Auml = "\xC4";
const COPY = "\xA9";
const Ccedil = "\xC7";
const ETH = "\xD0";
const Eacute = "\xC9";
const Ecirc = "\xCA";
const Egrave = "\xC8";
const Euml = "\xCB";
const GT = ">";
const Iacute = "\xCD";
const Icirc = "\xCE";
const Igrave = "\xCC";
const Iuml = "\xCF";
const LT = "<";
const Ntilde = "\xD1";
const Oacute = "\xD3";
const Ocirc = "\xD4";
const Ograve = "\xD2";
const Oslash = "\xD8";
const Otilde = "\xD5";
const Ouml = "\xD6";
const QUOT = '"';
const REG = "\xAE";
const THORN = "\xDE";
const Uacute = "\xDA";
const Ucirc = "\xDB";
const Ugrave = "\xD9";
const Uuml = "\xDC";
const Yacute = "\xDD";
const aacute = "\xE1";
const acirc = "\xE2";
const acute = "\xB4";
const aelig = "\xE6";
const agrave = "\xE0";
const amp = "&";
const aring = "\xE5";
const atilde = "\xE3";
const auml = "\xE4";
const brvbar = "\xA6";
const ccedil = "\xE7";
const cedil = "\xB8";
const cent = "\xA2";
const copy = "\xA9";
const curren = "\xA4";
const deg = "\xB0";
const divide = "\xF7";
const eacute = "\xE9";
const ecirc = "\xEA";
const egrave = "\xE8";
const eth = "\xF0";
const euml = "\xEB";
const frac12 = "\xBD";
const frac14 = "\xBC";
const frac34 = "\xBE";
const gt = ">";
const iacute = "\xED";
const icirc = "\xEE";
const iexcl = "\xA1";
const igrave = "\xEC";
const iquest = "\xBF";
const iuml = "\xEF";
const laquo = "\xAB";
const lt = "<";
const macr = "\xAF";
const micro = "\xB5";
const middot = "\xB7";
const nbsp = "\xA0";
const not = "\xAC";
const ntilde = "\xF1";
const oacute = "\xF3";
const ocirc = "\xF4";
const ograve = "\xF2";
const ordf = "\xAA";
const ordm = "\xBA";
const oslash = "\xF8";
const otilde = "\xF5";
const ouml = "\xF6";
const para = "\xB6";
const plusmn = "\xB1";
const pound = "\xA3";
const quot = '"';
const raquo = "\xBB";
const reg = "\xAE";
const sect = "\xA7";
const shy = "\xAD";
const sup1 = "\xB9";
const sup2 = "\xB2";
const sup3 = "\xB3";
const szlig = "\xDF";
const thorn = "\xFE";
const times = "\xD7";
const uacute = "\xFA";
const ucirc = "\xFB";
const ugrave = "\xF9";
const uml = "\xA8";
const uuml = "\xFC";
const yacute = "\xFD";
const yen = "\xA5";
const yuml = "\xFF";
var require$$0 = {
  AElig,
  AMP,
  Aacute,
  Acirc,
  Agrave,
  Aring,
  Atilde,
  Auml,
  COPY,
  Ccedil,
  ETH,
  Eacute,
  Ecirc,
  Egrave,
  Euml,
  GT,
  Iacute,
  Icirc,
  Igrave,
  Iuml,
  LT,
  Ntilde,
  Oacute,
  Ocirc,
  Ograve,
  Oslash,
  Otilde,
  Ouml,
  QUOT,
  REG,
  THORN,
  Uacute,
  Ucirc,
  Ugrave,
  Uuml,
  Yacute,
  aacute,
  acirc,
  acute,
  aelig,
  agrave,
  amp,
  aring,
  atilde,
  auml,
  brvbar,
  ccedil,
  cedil,
  cent,
  copy,
  curren,
  deg,
  divide,
  eacute,
  ecirc,
  egrave,
  eth,
  euml,
  frac12,
  frac14,
  frac34,
  gt,
  iacute,
  icirc,
  iexcl,
  igrave,
  iquest,
  iuml,
  laquo,
  lt,
  macr,
  micro,
  middot,
  nbsp,
  not,
  ntilde,
  oacute,
  ocirc,
  ograve,
  ordf,
  ordm,
  oslash,
  otilde,
  ouml,
  para,
  plusmn,
  pound,
  quot,
  raquo,
  reg,
  sect,
  shy,
  sup1,
  sup2,
  sup3,
  szlig,
  thorn,
  times,
  uacute,
  ucirc,
  ugrave,
  uml,
  uuml,
  yacute,
  yen,
  yuml
};
var require$$1 = {
  "0": "\uFFFD",
  "128": "\u20AC",
  "130": "\u201A",
  "131": "\u0192",
  "132": "\u201E",
  "133": "\u2026",
  "134": "\u2020",
  "135": "\u2021",
  "136": "\u02C6",
  "137": "\u2030",
  "138": "\u0160",
  "139": "\u2039",
  "140": "\u0152",
  "142": "\u017D",
  "145": "\u2018",
  "146": "\u2019",
  "147": "\u201C",
  "148": "\u201D",
  "149": "\u2022",
  "150": "\u2013",
  "151": "\u2014",
  "152": "\u02DC",
  "153": "\u2122",
  "154": "\u0161",
  "155": "\u203A",
  "156": "\u0153",
  "158": "\u017E",
  "159": "\u0178"
};
var isDecimal = decimal$2;
function decimal$2(character) {
  var code = typeof character === "string" ? character.charCodeAt(0) : character;
  return code >= 48 && code <= 57;
}
var isHexadecimal = hexadecimal$1;
function hexadecimal$1(character) {
  var code = typeof character === "string" ? character.charCodeAt(0) : character;
  return code >= 97 && code <= 102 || code >= 65 && code <= 70 || code >= 48 && code <= 57;
}
var isAlphabetical = alphabetical$1;
function alphabetical$1(character) {
  var code = typeof character === "string" ? character.charCodeAt(0) : character;
  return code >= 97 && code <= 122 || code >= 65 && code <= 90;
}
var alphabetical = isAlphabetical;
var decimal$1 = isDecimal;
var isAlphanumerical = alphanumerical$1;
function alphanumerical$1(character) {
  return alphabetical(character) || decimal$1(character);
}
var el;
var semicolon$1 = 59;
var decodeEntity_browser = decodeEntity$1;
function decodeEntity$1(characters) {
  var entity = "&" + characters + ";";
  var char;
  el = el || document.createElement("i");
  el.innerHTML = entity;
  char = el.textContent;
  if (char.charCodeAt(char.length - 1) === semicolon$1 && characters !== "semi") {
    return false;
  }
  return char === entity ? false : char;
}
var legacy = require$$0;
var invalid = require$$1;
var decimal = isDecimal;
var hexadecimal = isHexadecimal;
var alphanumerical = isAlphanumerical;
var decodeEntity = decodeEntity_browser;
var parseEntities_1 = parseEntities;
var own$1 = {}.hasOwnProperty;
var fromCharCode = String.fromCharCode;
var noop2 = Function.prototype;
var defaults = {
  warning: null,
  reference: null,
  text: null,
  warningContext: null,
  referenceContext: null,
  textContext: null,
  position: {},
  additional: null,
  attribute: false,
  nonTerminated: true
};
var tab = 9;
var lineFeed = 10;
var formFeed = 12;
var space = 32;
var ampersand = 38;
var semicolon = 59;
var lessThan = 60;
var equalsTo = 61;
var numberSign = 35;
var uppercaseX = 88;
var lowercaseX = 120;
var replacementCharacter = 65533;
var name = "named";
var hexa = "hexadecimal";
var deci = "decimal";
var bases = {};
bases[hexa] = 16;
bases[deci] = 10;
var tests = {};
tests[name] = alphanumerical;
tests[deci] = decimal;
tests[hexa] = hexadecimal;
var namedNotTerminated = 1;
var numericNotTerminated = 2;
var namedEmpty = 3;
var numericEmpty = 4;
var namedUnknown = 5;
var numericDisallowed = 6;
var numericProhibited = 7;
var messages = {};
messages[namedNotTerminated] = "Named character references must be terminated by a semicolon";
messages[numericNotTerminated] = "Numeric character references must be terminated by a semicolon";
messages[namedEmpty] = "Named character references cannot be empty";
messages[numericEmpty] = "Numeric character references cannot be empty";
messages[namedUnknown] = "Named character references must be known";
messages[numericDisallowed] = "Numeric character references cannot be disallowed";
messages[numericProhibited] = "Numeric character references cannot be outside the permissible Unicode range";
function parseEntities(value2, options) {
  var settings = {};
  var option;
  var key;
  if (!options) {
    options = {};
  }
  for (key in defaults) {
    option = options[key];
    settings[key] = option === null || option === void 0 ? defaults[key] : option;
  }
  if (settings.position.indent || settings.position.start) {
    settings.indent = settings.position.indent || [];
    settings.position = settings.position.start;
  }
  return parse(value2, settings);
}
function parse(value2, settings) {
  var additional = settings.additional;
  var nonTerminated = settings.nonTerminated;
  var handleText = settings.text;
  var handleReference = settings.reference;
  var handleWarning = settings.warning;
  var textContext = settings.textContext;
  var referenceContext = settings.referenceContext;
  var warningContext = settings.warningContext;
  var pos = settings.position;
  var indent = settings.indent || [];
  var length = value2.length;
  var index = 0;
  var lines = -1;
  var column = pos.column || 1;
  var line = pos.line || 1;
  var queue = "";
  var result = [];
  var entityCharacters;
  var namedEntity;
  var terminated;
  var characters;
  var character;
  var reference;
  var following;
  var warning;
  var reason2;
  var output;
  var entity;
  var begin;
  var start;
  var type;
  var test;
  var prev;
  var next;
  var diff2;
  var end;
  if (typeof additional === "string") {
    additional = additional.charCodeAt(0);
  }
  prev = now2();
  warning = handleWarning ? parseError : noop2;
  index--;
  length++;
  while (++index < length) {
    if (character === lineFeed) {
      column = indent[lines] || 1;
    }
    character = value2.charCodeAt(index);
    if (character === ampersand) {
      following = value2.charCodeAt(index + 1);
      if (following === tab || following === lineFeed || following === formFeed || following === space || following === ampersand || following === lessThan || following !== following || additional && following === additional) {
        queue += fromCharCode(character);
        column++;
        continue;
      }
      start = index + 1;
      begin = start;
      end = start;
      if (following === numberSign) {
        end = ++begin;
        following = value2.charCodeAt(end);
        if (following === uppercaseX || following === lowercaseX) {
          type = hexa;
          end = ++begin;
        } else {
          type = deci;
        }
      } else {
        type = name;
      }
      entityCharacters = "";
      entity = "";
      characters = "";
      test = tests[type];
      end--;
      while (++end < length) {
        following = value2.charCodeAt(end);
        if (!test(following)) {
          break;
        }
        characters += fromCharCode(following);
        if (type === name && own$1.call(legacy, characters)) {
          entityCharacters = characters;
          entity = legacy[characters];
        }
      }
      terminated = value2.charCodeAt(end) === semicolon;
      if (terminated) {
        end++;
        namedEntity = type === name ? decodeEntity(characters) : false;
        if (namedEntity) {
          entityCharacters = characters;
          entity = namedEntity;
        }
      }
      diff2 = 1 + end - start;
      if (!terminated && !nonTerminated)
        ;
      else if (!characters) {
        if (type !== name) {
          warning(numericEmpty, diff2);
        }
      } else if (type === name) {
        if (terminated && !entity) {
          warning(namedUnknown, 1);
        } else {
          if (entityCharacters !== characters) {
            end = begin + entityCharacters.length;
            diff2 = 1 + end - begin;
            terminated = false;
          }
          if (!terminated) {
            reason2 = entityCharacters ? namedNotTerminated : namedEmpty;
            if (settings.attribute) {
              following = value2.charCodeAt(end);
              if (following === equalsTo) {
                warning(reason2, diff2);
                entity = null;
              } else if (alphanumerical(following)) {
                entity = null;
              } else {
                warning(reason2, diff2);
              }
            } else {
              warning(reason2, diff2);
            }
          }
        }
        reference = entity;
      } else {
        if (!terminated) {
          warning(numericNotTerminated, diff2);
        }
        reference = parseInt(characters, bases[type]);
        if (prohibited(reference)) {
          warning(numericProhibited, diff2);
          reference = fromCharCode(replacementCharacter);
        } else if (reference in invalid) {
          warning(numericDisallowed, diff2);
          reference = invalid[reference];
        } else {
          output = "";
          if (disallowed(reference)) {
            warning(numericDisallowed, diff2);
          }
          if (reference > 65535) {
            reference -= 65536;
            output += fromCharCode(reference >>> (10 & 1023) | 55296);
            reference = 56320 | reference & 1023;
          }
          reference = output + fromCharCode(reference);
        }
      }
      if (reference) {
        flush();
        prev = now2();
        index = end - 1;
        column += end - start + 1;
        result.push(reference);
        next = now2();
        next.offset++;
        if (handleReference) {
          handleReference.call(referenceContext, reference, { start: prev, end: next }, value2.slice(start - 1, end));
        }
        prev = next;
      } else {
        characters = value2.slice(start - 1, end);
        queue += characters;
        column += characters.length;
        index = end - 1;
      }
    } else {
      if (character === 10) {
        line++;
        lines++;
        column = 0;
      }
      if (character === character) {
        queue += fromCharCode(character);
        column++;
      } else {
        flush();
      }
    }
  }
  return result.join("");
  function now2() {
    return {
      line,
      column,
      offset: index + (pos.offset || 0)
    };
  }
  function parseError(code, offset2) {
    var position = now2();
    position.column += offset2;
    position.offset += offset2;
    handleWarning.call(warningContext, messages[code], position, code);
  }
  function flush() {
    if (queue) {
      result.push(queue);
      if (handleText) {
        handleText.call(textContext, queue, { start: prev, end: now2() });
      }
      queue = "";
    }
  }
}
function prohibited(code) {
  return code >= 55296 && code <= 57343 || code > 1114111;
}
function disallowed(code) {
  return code >= 1 && code <= 8 || code === 11 || code >= 13 && code <= 31 || code >= 127 && code <= 159 || code >= 64976 && code <= 65007 || (code & 65535) === 65535 || (code & 65535) === 65534;
}
var prismCore = { exports: {} };
(function(module) {
  var _self = typeof window !== "undefined" ? window : typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope ? self : {};
  /**
   * Prism: Lightweight, robust, elegant syntax highlighting
   *
   * @license MIT <https://opensource.org/licenses/MIT>
   * @author Lea Verou <https://lea.verou.me>
   * @namespace
   * @public
   */
  var Prism2 = function(_self2) {
    var lang = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i;
    var uniqueId = 0;
    var plainTextGrammar = {};
    var _ = {
      manual: _self2.Prism && _self2.Prism.manual,
      disableWorkerMessageHandler: _self2.Prism && _self2.Prism.disableWorkerMessageHandler,
      util: {
        encode: function encode2(tokens) {
          if (tokens instanceof Token) {
            return new Token(tokens.type, encode2(tokens.content), tokens.alias);
          } else if (Array.isArray(tokens)) {
            return tokens.map(encode2);
          } else {
            return tokens.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
          }
        },
        type: function(o2) {
          return Object.prototype.toString.call(o2).slice(8, -1);
        },
        objId: function(obj) {
          if (!obj["__id"]) {
            Object.defineProperty(obj, "__id", { value: ++uniqueId });
          }
          return obj["__id"];
        },
        clone: function deepClone(o2, visited) {
          visited = visited || {};
          var clone2;
          var id2;
          switch (_.util.type(o2)) {
            case "Object":
              id2 = _.util.objId(o2);
              if (visited[id2]) {
                return visited[id2];
              }
              clone2 = {};
              visited[id2] = clone2;
              for (var key in o2) {
                if (o2.hasOwnProperty(key)) {
                  clone2[key] = deepClone(o2[key], visited);
                }
              }
              return clone2;
            case "Array":
              id2 = _.util.objId(o2);
              if (visited[id2]) {
                return visited[id2];
              }
              clone2 = [];
              visited[id2] = clone2;
              o2.forEach(function(v2, i2) {
                clone2[i2] = deepClone(v2, visited);
              });
              return clone2;
            default:
              return o2;
          }
        },
        getLanguage: function(element) {
          while (element) {
            var m2 = lang.exec(element.className);
            if (m2) {
              return m2[1].toLowerCase();
            }
            element = element.parentElement;
          }
          return "none";
        },
        setLanguage: function(element, language) {
          element.className = element.className.replace(RegExp(lang, "gi"), "");
          element.classList.add("language-" + language);
        },
        currentScript: function() {
          if (typeof document === "undefined") {
            return null;
          }
          if ("currentScript" in document && 1 < 2) {
            return document.currentScript;
          }
          try {
            throw new Error();
          } catch (err) {
            var src = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(err.stack) || [])[1];
            if (src) {
              var scripts = document.getElementsByTagName("script");
              for (var i2 in scripts) {
                if (scripts[i2].src == src) {
                  return scripts[i2];
                }
              }
            }
            return null;
          }
        },
        isActive: function(element, className, defaultActivation) {
          var no = "no-" + className;
          while (element) {
            var classList = element.classList;
            if (classList.contains(className)) {
              return true;
            }
            if (classList.contains(no)) {
              return false;
            }
            element = element.parentElement;
          }
          return !!defaultActivation;
        }
      },
      languages: {
        plain: plainTextGrammar,
        plaintext: plainTextGrammar,
        text: plainTextGrammar,
        txt: plainTextGrammar,
        extend: function(id2, redef) {
          var lang2 = _.util.clone(_.languages[id2]);
          for (var key in redef) {
            lang2[key] = redef[key];
          }
          return lang2;
        },
        insertBefore: function(inside, before, insert, root) {
          root = root || _.languages;
          var grammar = root[inside];
          var ret = {};
          for (var token2 in grammar) {
            if (grammar.hasOwnProperty(token2)) {
              if (token2 == before) {
                for (var newToken in insert) {
                  if (insert.hasOwnProperty(newToken)) {
                    ret[newToken] = insert[newToken];
                  }
                }
              }
              if (!insert.hasOwnProperty(token2)) {
                ret[token2] = grammar[token2];
              }
            }
          }
          var old = root[inside];
          root[inside] = ret;
          _.languages.DFS(_.languages, function(key, value2) {
            if (value2 === old && key != inside) {
              this[key] = ret;
            }
          });
          return ret;
        },
        DFS: function DFS(o2, callback, type, visited) {
          visited = visited || {};
          var objId = _.util.objId;
          for (var i2 in o2) {
            if (o2.hasOwnProperty(i2)) {
              callback.call(o2, i2, o2[i2], type || i2);
              var property = o2[i2];
              var propertyType = _.util.type(property);
              if (propertyType === "Object" && !visited[objId(property)]) {
                visited[objId(property)] = true;
                DFS(property, callback, null, visited);
              } else if (propertyType === "Array" && !visited[objId(property)]) {
                visited[objId(property)] = true;
                DFS(property, callback, i2, visited);
              }
            }
          }
        }
      },
      plugins: {},
      highlightAll: function(async, callback) {
        _.highlightAllUnder(document, async, callback);
      },
      highlightAllUnder: function(container, async, callback) {
        var env = {
          callback,
          container,
          selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
        };
        _.hooks.run("before-highlightall", env);
        env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));
        _.hooks.run("before-all-elements-highlight", env);
        for (var i2 = 0, element; element = env.elements[i2++]; ) {
          _.highlightElement(element, async === true, env.callback);
        }
      },
      highlightElement: function(element, async, callback) {
        var language = _.util.getLanguage(element);
        var grammar = _.languages[language];
        _.util.setLanguage(element, language);
        var parent = element.parentElement;
        if (parent && parent.nodeName.toLowerCase() === "pre") {
          _.util.setLanguage(parent, language);
        }
        var code = element.textContent;
        var env = {
          element,
          language,
          grammar,
          code
        };
        function insertHighlightedCode(highlightedCode) {
          env.highlightedCode = highlightedCode;
          _.hooks.run("before-insert", env);
          env.element.innerHTML = env.highlightedCode;
          _.hooks.run("after-highlight", env);
          _.hooks.run("complete", env);
          callback && callback.call(env.element);
        }
        _.hooks.run("before-sanity-check", env);
        parent = env.element.parentElement;
        if (parent && parent.nodeName.toLowerCase() === "pre" && !parent.hasAttribute("tabindex")) {
          parent.setAttribute("tabindex", "0");
        }
        if (!env.code) {
          _.hooks.run("complete", env);
          callback && callback.call(env.element);
          return;
        }
        _.hooks.run("before-highlight", env);
        if (!env.grammar) {
          insertHighlightedCode(_.util.encode(env.code));
          return;
        }
        if (async && _self2.Worker) {
          var worker = new Worker(_.filename);
          worker.onmessage = function(evt) {
            insertHighlightedCode(evt.data);
          };
          worker.postMessage(JSON.stringify({
            language: env.language,
            code: env.code,
            immediateClose: true
          }));
        } else {
          insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));
        }
      },
      highlight: function(text, grammar, language) {
        var env = {
          code: text,
          grammar,
          language
        };
        _.hooks.run("before-tokenize", env);
        if (!env.grammar) {
          throw new Error('The language "' + env.language + '" has no grammar.');
        }
        env.tokens = _.tokenize(env.code, env.grammar);
        _.hooks.run("after-tokenize", env);
        return Token.stringify(_.util.encode(env.tokens), env.language);
      },
      tokenize: function(text, grammar) {
        var rest2 = grammar.rest;
        if (rest2) {
          for (var token2 in rest2) {
            grammar[token2] = rest2[token2];
          }
          delete grammar.rest;
        }
        var tokenList = new LinkedList();
        addAfter(tokenList, tokenList.head, text);
        matchGrammar(text, tokenList, grammar, tokenList.head, 0);
        return toArray(tokenList);
      },
      hooks: {
        all: {},
        add: function(name2, callback) {
          var hooks = _.hooks.all;
          hooks[name2] = hooks[name2] || [];
          hooks[name2].push(callback);
        },
        run: function(name2, env) {
          var callbacks = _.hooks.all[name2];
          if (!callbacks || !callbacks.length) {
            return;
          }
          for (var i2 = 0, callback; callback = callbacks[i2++]; ) {
            callback(env);
          }
        }
      },
      Token
    };
    _self2.Prism = _;
    function Token(type, content, alias2, matchedStr) {
      this.type = type;
      this.content = content;
      this.alias = alias2;
      this.length = (matchedStr || "").length | 0;
    }
    Token.stringify = function stringify2(o2, language) {
      if (typeof o2 == "string") {
        return o2;
      }
      if (Array.isArray(o2)) {
        var s2 = "";
        o2.forEach(function(e2) {
          s2 += stringify2(e2, language);
        });
        return s2;
      }
      var env = {
        type: o2.type,
        content: stringify2(o2.content, language),
        tag: "span",
        classes: ["token", o2.type],
        attributes: {},
        language
      };
      var aliases = o2.alias;
      if (aliases) {
        if (Array.isArray(aliases)) {
          Array.prototype.push.apply(env.classes, aliases);
        } else {
          env.classes.push(aliases);
        }
      }
      _.hooks.run("wrap", env);
      var attributes2 = "";
      for (var name2 in env.attributes) {
        attributes2 += " " + name2 + '="' + (env.attributes[name2] || "").replace(/"/g, "&quot;") + '"';
      }
      return "<" + env.tag + ' class="' + env.classes.join(" ") + '"' + attributes2 + ">" + env.content + "</" + env.tag + ">";
    };
    function matchPattern(pattern, pos, text, lookbehind) {
      pattern.lastIndex = pos;
      var match2 = pattern.exec(text);
      if (match2 && lookbehind && match2[1]) {
        var lookbehindLength = match2[1].length;
        match2.index += lookbehindLength;
        match2[0] = match2[0].slice(lookbehindLength);
      }
      return match2;
    }
    function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {
      for (var token2 in grammar) {
        if (!grammar.hasOwnProperty(token2) || !grammar[token2]) {
          continue;
        }
        var patterns = grammar[token2];
        patterns = Array.isArray(patterns) ? patterns : [patterns];
        for (var j2 = 0; j2 < patterns.length; ++j2) {
          if (rematch && rematch.cause == token2 + "," + j2) {
            return;
          }
          var patternObj = patterns[j2];
          var inside = patternObj.inside;
          var lookbehind = !!patternObj.lookbehind;
          var greedy = !!patternObj.greedy;
          var alias2 = patternObj.alias;
          if (greedy && !patternObj.pattern.global) {
            var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];
            patternObj.pattern = RegExp(patternObj.pattern.source, flags + "g");
          }
          var pattern = patternObj.pattern || patternObj;
          for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {
            if (rematch && pos >= rematch.reach) {
              break;
            }
            var str2 = currentNode.value;
            if (tokenList.length > text.length) {
              return;
            }
            if (str2 instanceof Token) {
              continue;
            }
            var removeCount = 1;
            var match2;
            if (greedy) {
              match2 = matchPattern(pattern, pos, text, lookbehind);
              if (!match2 || match2.index >= text.length) {
                break;
              }
              var from2 = match2.index;
              var to = match2.index + match2[0].length;
              var p2 = pos;
              p2 += currentNode.value.length;
              while (from2 >= p2) {
                currentNode = currentNode.next;
                p2 += currentNode.value.length;
              }
              p2 -= currentNode.value.length;
              pos = p2;
              if (currentNode.value instanceof Token) {
                continue;
              }
              for (var k2 = currentNode; k2 !== tokenList.tail && (p2 < to || typeof k2.value === "string"); k2 = k2.next) {
                removeCount++;
                p2 += k2.value.length;
              }
              removeCount--;
              str2 = text.slice(pos, p2);
              match2.index -= pos;
            } else {
              match2 = matchPattern(pattern, 0, str2, lookbehind);
              if (!match2) {
                continue;
              }
            }
            var from2 = match2.index;
            var matchStr = match2[0];
            var before = str2.slice(0, from2);
            var after = str2.slice(from2 + matchStr.length);
            var reach = pos + str2.length;
            if (rematch && reach > rematch.reach) {
              rematch.reach = reach;
            }
            var removeFrom = currentNode.prev;
            if (before) {
              removeFrom = addAfter(tokenList, removeFrom, before);
              pos += before.length;
            }
            removeRange(tokenList, removeFrom, removeCount);
            var wrapped = new Token(token2, inside ? _.tokenize(matchStr, inside) : matchStr, alias2, matchStr);
            currentNode = addAfter(tokenList, removeFrom, wrapped);
            if (after) {
              addAfter(tokenList, currentNode, after);
            }
            if (removeCount > 1) {
              var nestedRematch = {
                cause: token2 + "," + j2,
                reach
              };
              matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);
              if (rematch && nestedRematch.reach > rematch.reach) {
                rematch.reach = nestedRematch.reach;
              }
            }
          }
        }
      }
    }
    function LinkedList() {
      var head = { value: null, prev: null, next: null };
      var tail = { value: null, prev: head, next: null };
      head.next = tail;
      this.head = head;
      this.tail = tail;
      this.length = 0;
    }
    function addAfter(list, node, value2) {
      var next = node.next;
      var newNode = { value: value2, prev: node, next };
      node.next = newNode;
      next.prev = newNode;
      list.length++;
      return newNode;
    }
    function removeRange(list, node, count) {
      var next = node.next;
      for (var i2 = 0; i2 < count && next !== list.tail; i2++) {
        next = next.next;
      }
      node.next = next;
      next.prev = node;
      list.length -= i2;
    }
    function toArray(list) {
      var array2 = [];
      var node = list.head.next;
      while (node !== list.tail) {
        array2.push(node.value);
        node = node.next;
      }
      return array2;
    }
    if (!_self2.document) {
      if (!_self2.addEventListener) {
        return _;
      }
      if (!_.disableWorkerMessageHandler) {
        _self2.addEventListener("message", function(evt) {
          var message = JSON.parse(evt.data);
          var lang2 = message.language;
          var code = message.code;
          var immediateClose = message.immediateClose;
          _self2.postMessage(_.highlight(code, _.languages[lang2], lang2));
          if (immediateClose) {
            _self2.close();
          }
        }, false);
      }
      return _;
    }
    var script = _.util.currentScript();
    if (script) {
      _.filename = script.src;
      if (script.hasAttribute("data-manual")) {
        _.manual = true;
      }
    }
    function highlightAutomaticallyCallback() {
      if (!_.manual) {
        _.highlightAll();
      }
    }
    if (!_.manual) {
      var readyState = document.readyState;
      if (readyState === "loading" || readyState === "interactive" && script && script.defer) {
        document.addEventListener("DOMContentLoaded", highlightAutomaticallyCallback);
      } else {
        if (window.requestAnimationFrame) {
          window.requestAnimationFrame(highlightAutomaticallyCallback);
        } else {
          window.setTimeout(highlightAutomaticallyCallback, 16);
        }
      }
    }
    return _;
  }(_self);
  if (module.exports) {
    module.exports = Prism2;
  }
  if (typeof commonjsGlobal !== "undefined") {
    commonjsGlobal.Prism = Prism2;
  }
})(prismCore);
var markup_1 = markup$1;
markup$1.displayName = "markup";
markup$1.aliases = ["html", "mathml", "svg", "xml", "ssml", "atom", "rss"];
function markup$1(Prism2) {
  Prism2.languages.markup = {
    comment: {
      pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
      greedy: true
    },
    prolog: {
      pattern: /<\?[\s\S]+?\?>/,
      greedy: true
    },
    doctype: {
      pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
      greedy: true,
      inside: {
        "internal-subset": {
          pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
          lookbehind: true,
          greedy: true,
          inside: null
        },
        string: {
          pattern: /"[^"]*"|'[^']*'/,
          greedy: true
        },
        punctuation: /^<!|>$|[[\]]/,
        "doctype-tag": /^DOCTYPE/i,
        name: /[^\s<>'"]+/
      }
    },
    cdata: {
      pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
      greedy: true
    },
    tag: {
      pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
      greedy: true,
      inside: {
        tag: {
          pattern: /^<\/?[^\s>\/]+/,
          inside: {
            punctuation: /^<\/?/,
            namespace: /^[^\s>\/:]+:/
          }
        },
        "special-attr": [],
        "attr-value": {
          pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
          inside: {
            punctuation: [
              {
                pattern: /^=/,
                alias: "attr-equals"
              },
              /"|'/
            ]
          }
        },
        punctuation: /\/?>/,
        "attr-name": {
          pattern: /[^\s>\/]+/,
          inside: {
            namespace: /^[^\s>\/:]+:/
          }
        }
      }
    },
    entity: [
      {
        pattern: /&[\da-z]{1,8};/i,
        alias: "named-entity"
      },
      /&#x?[\da-f]{1,8};/i
    ]
  };
  Prism2.languages.markup["tag"].inside["attr-value"].inside["entity"] = Prism2.languages.markup["entity"];
  Prism2.languages.markup["doctype"].inside["internal-subset"].inside = Prism2.languages.markup;
  Prism2.hooks.add("wrap", function(env) {
    if (env.type === "entity") {
      env.attributes["title"] = env.content.value.replace(/&amp;/, "&");
    }
  });
  Object.defineProperty(Prism2.languages.markup.tag, "addInlined", {
    value: function addInlined(tagName, lang) {
      var includedCdataInside = {};
      includedCdataInside["language-" + lang] = {
        pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
        lookbehind: true,
        inside: Prism2.languages[lang]
      };
      includedCdataInside["cdata"] = /^<!\[CDATA\[|\]\]>$/i;
      var inside = {
        "included-cdata": {
          pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
          inside: includedCdataInside
        }
      };
      inside["language-" + lang] = {
        pattern: /[\s\S]+/,
        inside: Prism2.languages[lang]
      };
      var def = {};
      def[tagName] = {
        pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function() {
          return tagName;
        }), "i"),
        lookbehind: true,
        greedy: true,
        inside
      };
      Prism2.languages.insertBefore("markup", "cdata", def);
    }
  });
  Object.defineProperty(Prism2.languages.markup.tag, "addAttribute", {
    value: function(attrName, lang) {
      Prism2.languages.markup.tag.inside["special-attr"].push({
        pattern: RegExp(/(^|["'\s])/.source + "(?:" + attrName + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source, "i"),
        lookbehind: true,
        inside: {
          "attr-name": /^[^\s=]+/,
          "attr-value": {
            pattern: /=[\s\S]+/,
            inside: {
              value: {
                pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                lookbehind: true,
                alias: [lang, "language-" + lang],
                inside: Prism2.languages[lang]
              },
              punctuation: [
                {
                  pattern: /^=/,
                  alias: "attr-equals"
                },
                /"|'/
              ]
            }
          }
        }
      });
    }
  });
  Prism2.languages.html = Prism2.languages.markup;
  Prism2.languages.mathml = Prism2.languages.markup;
  Prism2.languages.svg = Prism2.languages.markup;
  Prism2.languages.xml = Prism2.languages.extend("markup", {});
  Prism2.languages.ssml = Prism2.languages.xml;
  Prism2.languages.atom = Prism2.languages.xml;
  Prism2.languages.rss = Prism2.languages.xml;
}
var css_1 = css$1;
css$1.displayName = "css";
css$1.aliases = [];
function css$1(Prism2) {
  (function(Prism3) {
    var string2 = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
    Prism3.languages.css = {
      comment: /\/\*[\s\S]*?\*\//,
      atrule: {
        pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
        inside: {
          rule: /^@[\w-]+/,
          "selector-function-argument": {
            pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
            lookbehind: true,
            alias: "selector"
          },
          keyword: {
            pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
            lookbehind: true
          }
        }
      },
      url: {
        pattern: RegExp("\\burl\\((?:" + string2.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
        greedy: true,
        inside: {
          function: /^url/i,
          punctuation: /^\(|\)$/,
          string: {
            pattern: RegExp("^" + string2.source + "$"),
            alias: "url"
          }
        }
      },
      selector: {
        pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + string2.source + ")*(?=\\s*\\{)"),
        lookbehind: true
      },
      string: {
        pattern: string2,
        greedy: true
      },
      property: {
        pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
        lookbehind: true
      },
      important: /!important\b/i,
      function: {
        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
        lookbehind: true
      },
      punctuation: /[(){};:,]/
    };
    Prism3.languages.css["atrule"].inside.rest = Prism3.languages.css;
    var markup2 = Prism3.languages.markup;
    if (markup2) {
      markup2.tag.addInlined("style", "css");
      markup2.tag.addAttribute("style", "css");
    }
  })(Prism2);
}
var clike_1 = clike$1;
clike$1.displayName = "clike";
clike$1.aliases = [];
function clike$1(Prism2) {
  Prism2.languages.clike = {
    comment: [
      {
        pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
        lookbehind: true,
        greedy: true
      },
      {
        pattern: /(^|[^\\:])\/\/.*/,
        lookbehind: true,
        greedy: true
      }
    ],
    string: {
      pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    "class-name": {
      pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
      lookbehind: true,
      inside: {
        punctuation: /[.\\]/
      }
    },
    keyword: /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
    boolean: /\b(?:false|true)\b/,
    function: /\b\w+(?=\()/,
    number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
    operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
    punctuation: /[{}[\];(),.:]/
  };
}
var javascript_1 = javascript;
javascript.displayName = "javascript";
javascript.aliases = ["js"];
function javascript(Prism2) {
  Prism2.languages.javascript = Prism2.languages.extend("clike", {
    "class-name": [
      Prism2.languages.clike["class-name"],
      {
        pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
        lookbehind: true
      }
    ],
    keyword: [
      {
        pattern: /((?:^|\})\s*)catch\b/,
        lookbehind: true
      },
      {
        pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
        lookbehind: true
      }
    ],
    function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
    number: {
      pattern: RegExp(/(^|[^\w$])/.source + "(?:" + (/NaN|Infinity/.source + "|" + /0[bB][01]+(?:_[01]+)*n?/.source + "|" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + /\d+(?:_\d+)*n/.source + "|" + /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source),
      lookbehind: true
    },
    operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
  });
  Prism2.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/;
  Prism2.languages.insertBefore("javascript", "keyword", {
    regex: {
      pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
      lookbehind: true,
      greedy: true,
      inside: {
        "regex-source": {
          pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
          lookbehind: true,
          alias: "language-regex",
          inside: Prism2.languages.regex
        },
        "regex-delimiter": /^\/|\/$/,
        "regex-flags": /^[a-z]+$/
      }
    },
    "function-variable": {
      pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
      alias: "function"
    },
    parameter: [
      {
        pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
        lookbehind: true,
        inside: Prism2.languages.javascript
      },
      {
        pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
        lookbehind: true,
        inside: Prism2.languages.javascript
      },
      {
        pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
        lookbehind: true,
        inside: Prism2.languages.javascript
      },
      {
        pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
        lookbehind: true,
        inside: Prism2.languages.javascript
      }
    ],
    constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
  });
  Prism2.languages.insertBefore("javascript", "string", {
    hashbang: {
      pattern: /^#!.*/,
      greedy: true,
      alias: "comment"
    },
    "template-string": {
      pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
      greedy: true,
      inside: {
        "template-punctuation": {
          pattern: /^`|`$/,
          alias: "string"
        },
        interpolation: {
          pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
          lookbehind: true,
          inside: {
            "interpolation-punctuation": {
              pattern: /^\$\{|\}$/,
              alias: "punctuation"
            },
            rest: Prism2.languages.javascript
          }
        },
        string: /[\s\S]+/
      }
    },
    "string-property": {
      pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
      lookbehind: true,
      greedy: true,
      alias: "property"
    }
  });
  Prism2.languages.insertBefore("javascript", "operator", {
    "literal-property": {
      pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
      lookbehind: true,
      alias: "property"
    }
  });
  if (Prism2.languages.markup) {
    Prism2.languages.markup.tag.addInlined("script", "javascript");
    Prism2.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, "javascript");
  }
  Prism2.languages.js = Prism2.languages.javascript;
}
var ctx = typeof globalThis === "object" ? globalThis : typeof self === "object" ? self : typeof window === "object" ? window : typeof commonjsGlobal === "object" ? commonjsGlobal : {};
var restore = capture();
ctx.Prism = { manual: true, disableWorkerMessageHandler: true };
var h = hastscript;
var decode = parseEntities_1;
var Prism = prismCore.exports;
var markup = markup_1;
var css = css_1;
var clike = clike_1;
var js = javascript_1;
restore();
var own = {}.hasOwnProperty;
function Refractor() {
}
Refractor.prototype = Prism;
var refract = new Refractor();
var core = refract;
refract.highlight = highlight;
refract.register = register;
refract.alias = alias;
refract.registered = registered;
refract.listLanguages = listLanguages;
register(markup);
register(css);
register(clike);
register(js);
refract.util.encode = encode;
refract.Token.stringify = stringify;
function register(grammar) {
  if (typeof grammar !== "function" || !grammar.displayName) {
    throw new Error("Expected `function` for `grammar`, got `" + grammar + "`");
  }
  if (refract.languages[grammar.displayName] === void 0) {
    grammar(refract);
  }
}
function alias(name2, alias2) {
  var languages = refract.languages;
  var map2 = name2;
  var key;
  var list;
  var length;
  var index;
  if (alias2) {
    map2 = {};
    map2[name2] = alias2;
  }
  for (key in map2) {
    list = map2[key];
    list = typeof list === "string" ? [list] : list;
    length = list.length;
    index = -1;
    while (++index < length) {
      languages[list[index]] = languages[key];
    }
  }
}
function highlight(value2, name2) {
  var sup = Prism.highlight;
  var grammar;
  if (typeof value2 !== "string") {
    throw new Error("Expected `string` for `value`, got `" + value2 + "`");
  }
  if (refract.util.type(name2) === "Object") {
    grammar = name2;
    name2 = null;
  } else {
    if (typeof name2 !== "string") {
      throw new Error("Expected `string` for `name`, got `" + name2 + "`");
    }
    if (own.call(refract.languages, name2)) {
      grammar = refract.languages[name2];
    } else {
      throw new Error("Unknown language: `" + name2 + "` is not registered");
    }
  }
  return sup.call(this, value2, grammar, name2);
}
function registered(language) {
  if (typeof language !== "string") {
    throw new Error("Expected `string` for `language`, got `" + language + "`");
  }
  return own.call(refract.languages, language);
}
function listLanguages() {
  var languages = refract.languages;
  var list = [];
  var language;
  for (language in languages) {
    if (own.call(languages, language) && typeof languages[language] === "object") {
      list.push(language);
    }
  }
  return list;
}
function stringify(value2, language, parent) {
  var env;
  if (typeof value2 === "string") {
    return { type: "text", value: value2 };
  }
  if (refract.util.type(value2) === "Array") {
    return stringifyAll(value2, language);
  }
  env = {
    type: value2.type,
    content: refract.Token.stringify(value2.content, language, parent),
    tag: "span",
    classes: ["token", value2.type],
    attributes: {},
    language,
    parent
  };
  if (value2.alias) {
    env.classes = env.classes.concat(value2.alias);
  }
  refract.hooks.run("wrap", env);
  return h(env.tag + "." + env.classes.join("."), attributes(env.attributes), env.content);
}
function stringifyAll(values, language) {
  var result = [];
  var length = values.length;
  var index = -1;
  var value2;
  while (++index < length) {
    value2 = values[index];
    if (value2 !== "" && value2 !== null && value2 !== void 0) {
      result.push(value2);
    }
  }
  index = -1;
  length = result.length;
  while (++index < length) {
    value2 = result[index];
    result[index] = refract.Token.stringify(value2, language, result);
  }
  return result;
}
function encode(tokens) {
  return tokens;
}
function attributes(attrs) {
  var key;
  for (key in attrs) {
    attrs[key] = decode(attrs[key]);
  }
  return attrs;
}
function capture() {
  var defined = "Prism" in ctx;
  var current = defined ? ctx.Prism : void 0;
  return restore2;
  function restore2() {
    if (defined) {
      ctx.Prism = current;
    } else {
      delete ctx.Prism;
    }
    defined = void 0;
    current = void 0;
  }
}
var defaultStyle = {
  'code[class*="language-"]': {
    "color": "black",
    "background": "none",
    "textShadow": "0 1px white",
    "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
    "fontSize": "1em",
    "textAlign": "left",
    "whiteSpace": "pre",
    "wordSpacing": "normal",
    "wordBreak": "normal",
    "wordWrap": "normal",
    "lineHeight": "1.5",
    "MozTabSize": "4",
    "OTabSize": "4",
    "tabSize": "4",
    "WebkitHyphens": "none",
    "MozHyphens": "none",
    "msHyphens": "none",
    "hyphens": "none"
  },
  'pre[class*="language-"]': {
    "color": "black",
    "background": "#f5f2f0",
    "textShadow": "0 1px white",
    "fontFamily": "Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace",
    "fontSize": "1em",
    "textAlign": "left",
    "whiteSpace": "pre",
    "wordSpacing": "normal",
    "wordBreak": "normal",
    "wordWrap": "normal",
    "lineHeight": "1.5",
    "MozTabSize": "4",
    "OTabSize": "4",
    "tabSize": "4",
    "WebkitHyphens": "none",
    "MozHyphens": "none",
    "msHyphens": "none",
    "hyphens": "none",
    "padding": "1em",
    "margin": ".5em 0",
    "overflow": "auto"
  },
  'pre[class*="language-"]::-moz-selection': {
    "textShadow": "none",
    "background": "#b3d4fc"
  },
  'pre[class*="language-"] ::-moz-selection': {
    "textShadow": "none",
    "background": "#b3d4fc"
  },
  'code[class*="language-"]::-moz-selection': {
    "textShadow": "none",
    "background": "#b3d4fc"
  },
  'code[class*="language-"] ::-moz-selection': {
    "textShadow": "none",
    "background": "#b3d4fc"
  },
  'pre[class*="language-"]::selection': {
    "textShadow": "none",
    "background": "#b3d4fc"
  },
  'pre[class*="language-"] ::selection': {
    "textShadow": "none",
    "background": "#b3d4fc"
  },
  'code[class*="language-"]::selection': {
    "textShadow": "none",
    "background": "#b3d4fc"
  },
  'code[class*="language-"] ::selection': {
    "textShadow": "none",
    "background": "#b3d4fc"
  },
  ':not(pre) > code[class*="language-"]': {
    "background": "#f5f2f0",
    "padding": ".1em",
    "borderRadius": ".3em",
    "whiteSpace": "normal"
  },
  "comment": {
    "color": "slategray"
  },
  "prolog": {
    "color": "slategray"
  },
  "doctype": {
    "color": "slategray"
  },
  "cdata": {
    "color": "slategray"
  },
  "punctuation": {
    "color": "#999"
  },
  "namespace": {
    "Opacity": ".7"
  },
  "property": {
    "color": "#905"
  },
  "tag": {
    "color": "#905"
  },
  "boolean": {
    "color": "#905"
  },
  "number": {
    "color": "#905"
  },
  "constant": {
    "color": "#905"
  },
  "symbol": {
    "color": "#905"
  },
  "deleted": {
    "color": "#905"
  },
  "selector": {
    "color": "#690"
  },
  "attr-name": {
    "color": "#690"
  },
  "string": {
    "color": "#690"
  },
  "char": {
    "color": "#690"
  },
  "builtin": {
    "color": "#690"
  },
  "inserted": {
    "color": "#690"
  },
  "operator": {
    "color": "#9a6e3a",
    "background": "hsla(0, 0%, 100%, .5)"
  },
  "entity": {
    "color": "#9a6e3a",
    "background": "hsla(0, 0%, 100%, .5)",
    "cursor": "help"
  },
  "url": {
    "color": "#9a6e3a",
    "background": "hsla(0, 0%, 100%, .5)"
  },
  ".language-css .token.string": {
    "color": "#9a6e3a",
    "background": "hsla(0, 0%, 100%, .5)"
  },
  ".style .token.string": {
    "color": "#9a6e3a",
    "background": "hsla(0, 0%, 100%, .5)"
  },
  "atrule": {
    "color": "#07a"
  },
  "attr-value": {
    "color": "#07a"
  },
  "keyword": {
    "color": "#07a"
  },
  "function": {
    "color": "#DD4A68"
  },
  "class-name": {
    "color": "#DD4A68"
  },
  "regex": {
    "color": "#e90"
  },
  "important": {
    "color": "#e90",
    "fontWeight": "bold"
  },
  "variable": {
    "color": "#e90"
  },
  "bold": {
    "fontWeight": "bold"
  },
  "italic": {
    "fontStyle": "italic"
  }
};
var abap_1 = abap;
abap.displayName = "abap";
abap.aliases = [];
function abap(Prism2) {
  Prism2.languages.abap = {
    comment: /^\*.*/m,
    string: /(`|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
    "string-template": {
      pattern: /([|}])(?:\\.|[^\\|{\r\n])*(?=[|{])/,
      lookbehind: true,
      alias: "string"
    },
    "eol-comment": {
      pattern: /(^|\s)".*/m,
      lookbehind: true,
      alias: "comment"
    },
    keyword: {
      pattern: /(\s|\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\/MM\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\/DD\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\/MM\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\/DD\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\b/i,
      lookbehind: true
    },
    number: /\b\d+\b/,
    operator: {
      pattern: /(\s)(?:\*\*?|<[=>]?|>=?|\?=|[-+\/=])(?=\s)/,
      lookbehind: true
    },
    "string-operator": {
      pattern: /(\s)&&?(?=\s)/,
      lookbehind: true,
      alias: "keyword"
    },
    "token-operator": [
      {
        pattern: /(\w)(?:->?|=>|[~|{}])(?=\w)/,
        lookbehind: true,
        alias: "punctuation"
      },
      {
        pattern: /[|{}]/,
        alias: "punctuation"
      }
    ],
    punctuation: /[,.:()]/
  };
}
var abnf_1 = abnf;
abnf.displayName = "abnf";
abnf.aliases = [];
function abnf(Prism2) {
  (function(Prism3) {
    var coreRules = "(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)";
    Prism3.languages.abnf = {
      comment: /;.*/,
      string: {
        pattern: /(?:%[is])?"[^"\n\r]*"/,
        greedy: true,
        inside: {
          punctuation: /^%[is]/
        }
      },
      range: {
        pattern: /%(?:b[01]+-[01]+|d\d+-\d+|x[A-F\d]+-[A-F\d]+)/i,
        alias: "number"
      },
      terminal: {
        pattern: /%(?:b[01]+(?:\.[01]+)*|d\d+(?:\.\d+)*|x[A-F\d]+(?:\.[A-F\d]+)*)/i,
        alias: "number"
      },
      repetition: {
        pattern: /(^|[^\w-])(?:\d*\*\d*|\d+)/,
        lookbehind: true,
        alias: "operator"
      },
      definition: {
        pattern: /(^[ \t]*)(?:[a-z][\w-]*|<[^<>\r\n]*>)(?=\s*=)/m,
        lookbehind: true,
        alias: "keyword",
        inside: {
          punctuation: /<|>/
        }
      },
      "core-rule": {
        pattern: RegExp("(?:(^|[^<\\w-])" + coreRules + "|<" + coreRules + ">)(?![\\w-])", "i"),
        lookbehind: true,
        alias: ["rule", "constant"],
        inside: {
          punctuation: /<|>/
        }
      },
      rule: {
        pattern: /(^|[^<\w-])[a-z][\w-]*|<[^<>\r\n]*>/i,
        lookbehind: true,
        inside: {
          punctuation: /<|>/
        }
      },
      operator: /=\/?|\//,
      punctuation: /[()\[\]]/
    };
  })(Prism2);
}
var actionscript_1 = actionscript;
actionscript.displayName = "actionscript";
actionscript.aliases = [];
function actionscript(Prism2) {
  Prism2.languages.actionscript = Prism2.languages.extend("javascript", {
    keyword: /\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/,
    operator: /\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/
  });
  Prism2.languages.actionscript["class-name"].alias = "function";
  delete Prism2.languages.actionscript["parameter"];
  delete Prism2.languages.actionscript["literal-property"];
  if (Prism2.languages.markup) {
    Prism2.languages.insertBefore("actionscript", "string", {
      xml: {
        pattern: /(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,
        lookbehind: true,
        inside: Prism2.languages.markup
      }
    });
  }
}
var ada_1 = ada;
ada.displayName = "ada";
ada.aliases = [];
function ada(Prism2) {
  Prism2.languages.ada = {
    comment: /--.*/,
    string: /"(?:""|[^"\r\f\n])*"/,
    number: [
      {
        pattern: /\b\d(?:_?\d)*#[\dA-F](?:_?[\dA-F])*(?:\.[\dA-F](?:_?[\dA-F])*)?#(?:E[+-]?\d(?:_?\d)*)?/i
      },
      {
        pattern: /\b\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:E[+-]?\d(?:_?\d)*)?\b/i
      }
    ],
    "attr-name": /\b'\w+/,
    keyword: /\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\b/i,
    boolean: /\b(?:false|true)\b/i,
    operator: /<[=>]?|>=?|=>?|:=|\/=?|\*\*?|[&+-]/,
    punctuation: /\.\.?|[,;():]/,
    char: /'.'/,
    variable: /\b[a-z](?:\w)*\b/i
  };
}
var agda_1 = agda;
agda.displayName = "agda";
agda.aliases = [];
function agda(Prism2) {
  (function(Prism3) {
    Prism3.languages.agda = {
      comment: /\{-[\s\S]*?(?:-\}|$)|--.*/,
      string: {
        pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
        greedy: true
      },
      punctuation: /[(){}⦃⦄.;@]/,
      "class-name": {
        pattern: /((?:data|record) +)\S+/,
        lookbehind: true
      },
      function: {
        pattern: /(^[ \t]*)(?!\s)[^:\r\n]+(?=:)/m,
        lookbehind: true
      },
      operator: {
        pattern: /(^\s*|\s)(?:[=|:∀→λ\\?_]|->)(?=\s)/,
        lookbehind: true
      },
      keyword: /\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\b/
    };
  })(Prism2);
}
var al_1 = al;
al.displayName = "al";
al.aliases = [];
function al(Prism2) {
  Prism2.languages.al = {
    comment: /\/\/.*|\/\*[\s\S]*?\*\//,
    string: {
      pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,
      greedy: true
    },
    function: {
      pattern: /(\b(?:event|procedure|trigger)\s+|(?:^|[^.])\.\s*)[a-z_]\w*(?=\s*\()/i,
      lookbehind: true
    },
    keyword: [
      /\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\b/i,
      /\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\b/i
    ],
    number: /\b(?:0x[\da-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)(?:F|LL?|U(?:LL?)?)?\b/i,
    boolean: /\b(?:false|true)\b/i,
    variable: /\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\b/,
    "class-name": /\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\b/i,
    operator: /\.\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\b(?:and|div|mod|not|or|xor)\b/i,
    punctuation: /[()\[\]{}:.;,]/
  };
}
var antlr4_1 = antlr4;
antlr4.displayName = "antlr4";
antlr4.aliases = ["g4"];
function antlr4(Prism2) {
  Prism2.languages.antlr4 = {
    comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
    string: {
      pattern: /'(?:\\.|[^\\'\r\n])*'/,
      greedy: true
    },
    "character-class": {
      pattern: /\[(?:\\.|[^\\\]\r\n])*\]/,
      greedy: true,
      alias: "regex",
      inside: {
        range: {
          pattern: /([^[]|(?:^|[^\\])(?:\\\\)*\\\[)-(?!\])/,
          lookbehind: true,
          alias: "punctuation"
        },
        escape: /\\(?:u(?:[a-fA-F\d]{4}|\{[a-fA-F\d]+\})|[pP]\{[=\w-]+\}|[^\r\nupP])/,
        punctuation: /[\[\]]/
      }
    },
    action: {
      pattern: /\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\}/,
      greedy: true,
      inside: {
        content: {
          pattern: /(\{)[\s\S]+(?=\})/,
          lookbehind: true
        },
        punctuation: /[{}]/
      }
    },
    command: {
      pattern: /(->\s*(?!\s))(?:\s*(?:,\s*)?\b[a-z]\w*(?:\s*\([^()\r\n]*\))?)+(?=\s*;)/i,
      lookbehind: true,
      inside: {
        function: /\b\w+(?=\s*(?:[,(]|$))/,
        punctuation: /[,()]/
      }
    },
    annotation: {
      pattern: /@\w+(?:::\w+)*/,
      alias: "keyword"
    },
    label: {
      pattern: /#[ \t]*\w+/,
      alias: "punctuation"
    },
    keyword: /\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\b/,
    definition: [
      {
        pattern: /\b[a-z]\w*(?=\s*:)/,
        alias: ["rule", "class-name"]
      },
      {
        pattern: /\b[A-Z]\w*(?=\s*:)/,
        alias: ["token", "constant"]
      }
    ],
    constant: /\b[A-Z][A-Z_]*\b/,
    operator: /\.\.|->|[|~]|[*+?]\??/,
    punctuation: /[;:()=]/
  };
  Prism2.languages.g4 = Prism2.languages.antlr4;
}
var apacheconf_1 = apacheconf;
apacheconf.displayName = "apacheconf";
apacheconf.aliases = [];
function apacheconf(Prism2) {
  Prism2.languages.apacheconf = {
    comment: /#.*/,
    "directive-inline": {
      pattern: /(^[\t ]*)\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\b/im,
      lookbehind: true,
      alias: "property"
    },
    "directive-block": {
      pattern: /<\/?\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\b.*>/i,
      inside: {
        "directive-block": {
          pattern: /^<\/?\w+/,
          inside: {
            punctuation: /^<\/?/
          },
          alias: "tag"
        },
        "directive-block-parameter": {
          pattern: /.*[^>]/,
          inside: {
            punctuation: /:/,
            string: {
              pattern: /("|').*\1/,
              inside: {
                variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/
              }
            }
          },
          alias: "attr-value"
        },
        punctuation: />/
      },
      alias: "tag"
    },
    "directive-flags": {
      pattern: /\[(?:[\w=],?)+\]/,
      alias: "keyword"
    },
    string: {
      pattern: /("|').*\1/,
      inside: {
        variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/
      }
    },
    variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/,
    regex: /\^?.*\$|\^.*\$?/
  };
}
var sql_1 = sql;
sql.displayName = "sql";
sql.aliases = [];
function sql(Prism2) {
  Prism2.languages.sql = {
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
      lookbehind: true
    },
    variable: [
      {
        pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
        greedy: true
      },
      /@[\w.$]+/
    ],
    string: {
      pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
      greedy: true,
      lookbehind: true
    },
    identifier: {
      pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,
      greedy: true,
      lookbehind: true,
      inside: {
        punctuation: /^`|`$/
      }
    },
    function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
    keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
    boolean: /\b(?:FALSE|NULL|TRUE)\b/i,
    number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
    operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
    punctuation: /[;[\]()`,.]/
  };
}
var refractorSql$1 = sql_1;
var apex_1 = apex;
apex.displayName = "apex";
apex.aliases = [];
function apex(Prism2) {
  Prism2.register(refractorSql$1);
  (function(Prism3) {
    var keywords = /\b(?:(?:after|before)(?=\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\s+sharing)\b/i;
    var className = /\b(?:(?=[a-z_]\w*\s*[<\[])|(?!<keyword>))[A-Z_]\w*(?:\s*\.\s*[A-Z_]\w*)*\b(?:\s*(?:\[\s*\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g, function() {
      return keywords.source;
    });
    function insertClassName(pattern) {
      return RegExp(pattern.replace(/<CLASS-NAME>/g, function() {
        return className;
      }), "i");
    }
    var classNameInside = {
      keyword: keywords,
      punctuation: /[()\[\]{};,:.<>]/
    };
    Prism3.languages.apex = {
      comment: Prism3.languages.clike.comment,
      string: Prism3.languages.clike.string,
      sql: {
        pattern: /((?:[=,({:]|\breturn)\s*)\[[^\[\]]*\]/i,
        lookbehind: true,
        greedy: true,
        alias: "language-sql",
        inside: Prism3.languages.sql
      },
      annotation: {
        pattern: /@\w+\b/,
        alias: "punctuation"
      },
      "class-name": [
        {
          pattern: insertClassName(/(\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\s+\w+\s+on)\s+)<CLASS-NAME>/.source),
          lookbehind: true,
          inside: classNameInside
        },
        {
          pattern: insertClassName(/(\(\s*)<CLASS-NAME>(?=\s*\)\s*[\w(])/.source),
          lookbehind: true,
          inside: classNameInside
        },
        {
          pattern: insertClassName(/<CLASS-NAME>(?=\s*\w+\s*[;=,(){:])/.source),
          inside: classNameInside
        }
      ],
      trigger: {
        pattern: /(\btrigger\s+)\w+\b/i,
        lookbehind: true,
        alias: "class-name"
      },
      keyword: keywords,
      function: /\b[a-z_]\w*(?=\s*\()/i,
      boolean: /\b(?:false|true)\b/i,
      number: /(?:\B\.\d+|\b\d+(?:\.\d+|L)?)\b/i,
      operator: /[!=](?:==?)?|\?\.?|&&|\|\||--|\+\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,
      punctuation: /[()\[\]{};,.]/
    };
  })(Prism2);
}
var apl_1 = apl;
apl.displayName = "apl";
apl.aliases = [];
function apl(Prism2) {
  Prism2.languages.apl = {
    comment: /(?:⍝|#[! ]).*$/m,
    string: {
      pattern: /'(?:[^'\r\n]|'')*'/,
      greedy: true
    },
    number: /¯?(?:\d*\.?\b\d+(?:e[+¯]?\d+)?|¯|∞)(?:j¯?(?:(?:\d+(?:\.\d+)?|\.\d+)(?:e[+¯]?\d+)?|¯|∞))?/i,
    statement: /:[A-Z][a-z][A-Za-z]*\b/,
    "system-function": {
      pattern: /⎕[A-Z]+/i,
      alias: "function"
    },
    constant: /[⍬⌾#⎕⍞]/,
    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,
    "monadic-operator": {
      pattern: /[\\\/⌿⍀¨⍨⌶&∥]/,
      alias: "operator"
    },
    "dyadic-operator": {
      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,
      alias: "operator"
    },
    assignment: {
      pattern: /←/,
      alias: "keyword"
    },
    punctuation: /[\[;\]()◇⋄]/,
    dfn: {
      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,
      alias: "builtin"
    }
  };
}
var applescript_1 = applescript;
applescript.displayName = "applescript";
applescript.aliases = [];
function applescript(Prism2) {
  Prism2.languages.applescript = {
    comment: [
      /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
      /--.+/,
      /#.+/
    ],
    string: /"(?:\\.|[^"\\\r\n])*"/,
    number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?\b/i,
    operator: [
      /[&=≠≤≥*+\-\/÷^]|[<>]=?/,
      /\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\b/
    ],
    keyword: /\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\b/,
    "class-name": /\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\b/,
    punctuation: /[{}():,¬«»《》]/
  };
}
var aql_1 = aql;
aql.displayName = "aql";
aql.aliases = [];
function aql(Prism2) {
  Prism2.languages.aql = {
    comment: /\/\/.*|\/\*[\s\S]*?\*\//,
    property: {
      pattern: /([{,]\s*)(?:(?!\d)\w+|(["'´`])(?:(?!\2)[^\\\r\n]|\\.)*\2)(?=\s*:)/,
      lookbehind: true,
      greedy: true
    },
    string: {
      pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\.)*\1/,
      greedy: true
    },
    identifier: {
      pattern: /([´`])(?:(?!\1)[^\\\r\n]|\\.)*\1/,
      greedy: true
    },
    variable: /@@?\w+/,
    keyword: [
      {
        pattern: /(\bWITH\s+)COUNT(?=\s+INTO\b)/i,
        lookbehind: true
      },
      /\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\b/i,
      {
        pattern: /(^|[^\w.[])(?:KEEP|PRUNE|SEARCH|TO)\b/i,
        lookbehind: true
      },
      {
        pattern: /(^|[^\w.[])(?:CURRENT|NEW|OLD)\b/,
        lookbehind: true
      },
      {
        pattern: /\bOPTIONS(?=\s*\{)/i
      }
    ],
    function: /\b(?!\d)\w+(?=\s*\()/,
    boolean: /\b(?:false|true)\b/i,
    range: {
      pattern: /\.\./,
      alias: "operator"
    },
    number: [
      /\b0b[01]+/i,
      /\b0x[0-9a-f]+/i,
      /(?:\B\.\d+|\b(?:0|[1-9]\d*)(?:\.\d+)?)(?:e[+-]?\d+)?/i
    ],
    operator: /\*{2,}|[=!]~|[!=<>]=?|&&|\|\||[-+*/%]/,
    punctuation: /::|[?.:,;()[\]{}]/
  };
}
var c_1 = c;
c.displayName = "c";
c.aliases = [];
function c(Prism2) {
  Prism2.languages.c = Prism2.languages.extend("clike", {
    comment: {
      pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,
      greedy: true
    },
    string: {
      pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
      greedy: true
    },
    "class-name": {
      pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,
      lookbehind: true
    },
    keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,
    function: /\b[a-z_]\w*(?=\s*\()/i,
    number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
    operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/
  });
  Prism2.languages.insertBefore("c", "string", {
    char: {
      pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,
      greedy: true
    }
  });
  Prism2.languages.insertBefore("c", "string", {
    macro: {
      pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
      lookbehind: true,
      greedy: true,
      alias: "property",
      inside: {
        string: [
          {
            pattern: /^(#\s*include\s*)<[^>]+>/,
            lookbehind: true
          },
          Prism2.languages.c["string"]
        ],
        char: Prism2.languages.c["char"],
        comment: Prism2.languages.c["comment"],
        "macro-name": [
          {
            pattern: /(^#\s*define\s+)\w+\b(?!\()/i,
            lookbehind: true
          },
          {
            pattern: /(^#\s*define\s+)\w+\b(?=\()/i,
            lookbehind: true,
            alias: "function"
          }
        ],
        directive: {
          pattern: /^(#\s*)[a-z]+/,
          lookbehind: true,
          alias: "keyword"
        },
        "directive-hash": /^#/,
        punctuation: /##|\\(?=[\r\n])/,
        expression: {
          pattern: /\S[\s\S]*/,
          inside: Prism2.languages.c
        }
      }
    }
  });
  Prism2.languages.insertBefore("c", "function", {
    constant: /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/
  });
  delete Prism2.languages.c["boolean"];
}
var refractorC$5 = c_1;
var cpp_1 = cpp;
cpp.displayName = "cpp";
cpp.aliases = [];
function cpp(Prism2) {
  Prism2.register(refractorC$5);
  (function(Prism3) {
    var keyword = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/;
    var modName = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g, function() {
      return keyword.source;
    });
    Prism3.languages.cpp = Prism3.languages.extend("c", {
      "class-name": [
        {
          pattern: RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g, function() {
            return keyword.source;
          })),
          lookbehind: true
        },
        /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,
        /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,
        /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/
      ],
      keyword,
      number: {
        pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
        greedy: true
      },
      operator: />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
      boolean: /\b(?:false|true)\b/
    });
    Prism3.languages.insertBefore("cpp", "string", {
      module: {
        pattern: RegExp(/(\b(?:import|module)\s+)/.source + "(?:" + /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source + "|" + /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g, function() {
          return modName;
        }) + ")"),
        lookbehind: true,
        greedy: true,
        inside: {
          string: /^[<"][\s\S]+/,
          operator: /:/,
          punctuation: /\./
        }
      },
      "raw-string": {
        pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
        alias: "string",
        greedy: true
      }
    });
    Prism3.languages.insertBefore("cpp", "keyword", {
      "generic-function": {
        pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,
        inside: {
          function: /^\w+/,
          generic: {
            pattern: /<[\s\S]+/,
            alias: "class-name",
            inside: Prism3.languages.cpp
          }
        }
      }
    });
    Prism3.languages.insertBefore("cpp", "operator", {
      "double-colon": {
        pattern: /::/,
        alias: "punctuation"
      }
    });
    Prism3.languages.insertBefore("cpp", "class-name", {
      "base-clause": {
        pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
        lookbehind: true,
        greedy: true,
        inside: Prism3.languages.extend("cpp", {})
      }
    });
    Prism3.languages.insertBefore("inside", "double-colon", {
      "class-name": /\b[a-z_]\w*\b(?!\s*::)/i
    }, Prism3.languages.cpp["base-clause"]);
  })(Prism2);
}
var refractorCpp$1 = cpp_1;
var arduino_1 = arduino;
arduino.displayName = "arduino";
arduino.aliases = ["ino"];
function arduino(Prism2) {
  Prism2.register(refractorCpp$1);
  Prism2.languages.arduino = Prism2.languages.extend("cpp", {
    keyword: /\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\b/,
    constant: /\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\b/,
    builtin: /\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\b/
  });
  Prism2.languages.ino = Prism2.languages.arduino;
}
var arff_1 = arff;
arff.displayName = "arff";
arff.aliases = [];
function arff(Prism2) {
  Prism2.languages.arff = {
    comment: /%.*/,
    string: {
      pattern: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    keyword: /@(?:attribute|data|end|relation)\b/i,
    number: /\b\d+(?:\.\d+)?\b/,
    punctuation: /[{},]/
  };
}
var asciidoc_1 = asciidoc;
asciidoc.displayName = "asciidoc";
asciidoc.aliases = ["adoc"];
function asciidoc(Prism2) {
  (function(Prism3) {
    var attributes2 = {
      pattern: /(^[ \t]*)\[(?!\[)(?:(["'$`])(?:(?!\2)[^\\]|\\.)*\2|\[(?:[^\[\]\\]|\\.)*\]|[^\[\]\\"'$`]|\\.)*\]/m,
      lookbehind: true,
      inside: {
        quoted: {
          pattern: /([$`])(?:(?!\1)[^\\]|\\.)*\1/,
          inside: {
            punctuation: /^[$`]|[$`]$/
          }
        },
        interpreted: {
          pattern: /'(?:[^'\\]|\\.)*'/,
          inside: {
            punctuation: /^'|'$/
          }
        },
        string: /"(?:[^"\\]|\\.)*"/,
        variable: /\w+(?==)/,
        punctuation: /^\[|\]$|,/,
        operator: /=/,
        "attr-value": /(?!^\s+$).+/
      }
    };
    var asciidoc2 = Prism3.languages.asciidoc = {
      "comment-block": {
        pattern: /^(\/{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1/m,
        alias: "comment"
      },
      table: {
        pattern: /^\|={3,}(?:(?:\r?\n|\r(?!\n)).*)*?(?:\r?\n|\r)\|={3,}$/m,
        inside: {
          specifiers: {
            pattern: /(?:(?:(?:\d+(?:\.\d+)?|\.\d+)[+*](?:[<^>](?:\.[<^>])?|\.[<^>])?|[<^>](?:\.[<^>])?|\.[<^>])[a-z]*|[a-z]+)(?=\|)/,
            alias: "attr-value"
          },
          punctuation: {
            pattern: /(^|[^\\])[|!]=*/,
            lookbehind: true
          }
        }
      },
      "passthrough-block": {
        pattern: /^(\+{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
        inside: {
          punctuation: /^\++|\++$/
        }
      },
      "literal-block": {
        pattern: /^(-{4,}|\.{4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
        inside: {
          punctuation: /^(?:-+|\.+)|(?:-+|\.+)$/
        }
      },
      "other-block": {
        pattern: /^(--|\*{4,}|_{4,}|={4,})(?:\r?\n|\r)(?:[\s\S]*(?:\r?\n|\r))??\1$/m,
        inside: {
          punctuation: /^(?:-+|\*+|_+|=+)|(?:-+|\*+|_+|=+)$/
        }
      },
      "list-punctuation": {
        pattern: /(^[ \t]*)(?:-|\*{1,5}|\.{1,5}|(?:[a-z]|\d+)\.|[xvi]+\))(?= )/im,
        lookbehind: true,
        alias: "punctuation"
      },
      "list-label": {
        pattern: /(^[ \t]*)[a-z\d].+(?::{2,4}|;;)(?=\s)/im,
        lookbehind: true,
        alias: "symbol"
      },
      "indented-block": {
        pattern: /((\r?\n|\r)\2)([ \t]+)\S.*(?:(?:\r?\n|\r)\3.+)*(?=\2{2}|$)/,
        lookbehind: true
      },
      comment: /^\/\/.*/m,
      title: {
        pattern: /^.+(?:\r?\n|\r)(?:={3,}|-{3,}|~{3,}|\^{3,}|\+{3,})$|^={1,5} .+|^\.(?![\s.]).*/m,
        alias: "important",
        inside: {
          punctuation: /^(?:\.|=+)|(?:=+|-+|~+|\^+|\++)$/
        }
      },
      "attribute-entry": {
        pattern: /^:[^:\r\n]+:(?: .*?(?: \+(?:\r?\n|\r).*?)*)?$/m,
        alias: "tag"
      },
      attributes: attributes2,
      hr: {
        pattern: /^'{3,}$/m,
        alias: "punctuation"
      },
      "page-break": {
        pattern: /^<{3,}$/m,
        alias: "punctuation"
      },
      admonition: {
        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,
        alias: "keyword"
      },
      callout: [
        {
          pattern: /(^[ \t]*)<?\d*>/m,
          lookbehind: true,
          alias: "symbol"
        },
        {
          pattern: /<\d+>/,
          alias: "symbol"
        }
      ],
      macro: {
        pattern: /\b[a-z\d][a-z\d-]*::?(?:[^\s\[\]]*\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
        inside: {
          function: /^[a-z\d-]+(?=:)/,
          punctuation: /^::?/,
          attributes: {
            pattern: /(?:\[(?:[^\]\\"']|(["'])(?:(?!\1)[^\\]|\\.)*\1|\\.)*\])/,
            inside: attributes2.inside
          }
        }
      },
      inline: {
        pattern: /(^|[^\\])(?:(?:\B\[(?:[^\]\\"']|(["'])(?:(?!\2)[^\\]|\\.)*\2|\\.)*\])?(?:\b_(?!\s)(?: _|[^_\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: _|[^_\\\r\n]|\\.)+)*_\b|\B``(?!\s).+?(?:(?:\r?\n|\r).+?)*''\B|\B`(?!\s)(?:[^`'\s]|\s+\S)+['`]\B|\B(['*+#])(?!\s)(?: \3|(?!\3)[^\\\r\n]|\\.)+(?:(?:\r?\n|\r)(?: \3|(?!\3)[^\\\r\n]|\\.)+)*\3\B)|(?:\[(?:[^\]\\"']|(["'])(?:(?!\4)[^\\]|\\.)*\4|\\.)*\])?(?:(__|\*\*|\+\+\+?|##|\$\$|[~^]).+?(?:(?:\r?\n|\r).+?)*\5|\{[^}\r\n]+\}|\[\[\[?.+?(?:(?:\r?\n|\r).+?)*\]?\]\]|<<.+?(?:(?:\r?\n|\r).+?)*>>|\(\(\(?.+?(?:(?:\r?\n|\r).+?)*\)?\)\)))/m,
        lookbehind: true,
        inside: {
          attributes: attributes2,
          url: {
            pattern: /^(?:\[\[\[?.+?\]?\]\]|<<.+?>>)$/,
            inside: {
              punctuation: /^(?:\[\[\[?|<<)|(?:\]\]\]?|>>)$/
            }
          },
          "attribute-ref": {
            pattern: /^\{.+\}$/,
            inside: {
              variable: {
                pattern: /(^\{)[a-z\d,+_-]+/,
                lookbehind: true
              },
              operator: /^[=?!#%@$]|!(?=[:}])/,
              punctuation: /^\{|\}$|::?/
            }
          },
          italic: {
            pattern: /^(['_])[\s\S]+\1$/,
            inside: {
              punctuation: /^(?:''?|__?)|(?:''?|__?)$/
            }
          },
          bold: {
            pattern: /^\*[\s\S]+\*$/,
            inside: {
              punctuation: /^\*\*?|\*\*?$/
            }
          },
          punctuation: /^(?:``?|\+{1,3}|##?|\$\$|[~^]|\(\(\(?)|(?:''?|\+{1,3}|##?|\$\$|[~^`]|\)?\)\))$/
        }
      },
      replacement: {
        pattern: /\((?:C|R|TM)\)/,
        alias: "builtin"
      },
      entity: /&#?[\da-z]{1,8};/i,
      "line-continuation": {
        pattern: /(^| )\+$/m,
        lookbehind: true,
        alias: "punctuation"
      }
    };
    function copyFromAsciiDoc(keys2) {
      keys2 = keys2.split(" ");
      var o2 = {};
      for (var i2 = 0, l2 = keys2.length; i2 < l2; i2++) {
        o2[keys2[i2]] = asciidoc2[keys2[i2]];
      }
      return o2;
    }
    attributes2.inside["interpreted"].inside.rest = copyFromAsciiDoc("macro inline replacement entity");
    asciidoc2["passthrough-block"].inside.rest = copyFromAsciiDoc("macro");
    asciidoc2["literal-block"].inside.rest = copyFromAsciiDoc("callout");
    asciidoc2["table"].inside.rest = copyFromAsciiDoc("comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation");
    asciidoc2["other-block"].inside.rest = copyFromAsciiDoc("table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation");
    asciidoc2["title"].inside.rest = copyFromAsciiDoc("macro inline replacement entity");
    Prism3.hooks.add("wrap", function(env) {
      if (env.type === "entity") {
        env.attributes["title"] = env.content.value.replace(/&amp;/, "&");
      }
    });
    Prism3.languages.adoc = Prism3.languages.asciidoc;
  })(Prism2);
}
var asm6502_1 = asm6502;
asm6502.displayName = "asm6502";
asm6502.aliases = [];
function asm6502(Prism2) {
  Prism2.languages.asm6502 = {
    comment: /;.*/,
    directive: {
      pattern: /\.\w+(?= )/,
      alias: "property"
    },
    string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
    "op-code": {
      pattern: /\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\b/,
      alias: "keyword"
    },
    "hex-number": {
      pattern: /#?\$[\da-f]{1,4}\b/i,
      alias: "number"
    },
    "binary-number": {
      pattern: /#?%[01]+\b/,
      alias: "number"
    },
    "decimal-number": {
      pattern: /#?\b\d+\b/,
      alias: "number"
    },
    register: {
      pattern: /\b[xya]\b/i,
      alias: "variable"
    },
    punctuation: /[(),:]/
  };
}
var asmatmel_1 = asmatmel;
asmatmel.displayName = "asmatmel";
asmatmel.aliases = [];
function asmatmel(Prism2) {
  Prism2.languages.asmatmel = {
    comment: {
      pattern: /;.*/,
      greedy: true
    },
    string: {
      pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    constant: /\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\d|[0-2]\d|3[01]))\b/,
    directive: {
      pattern: /\.\w+(?= )/,
      alias: "property"
    },
    "r-register": {
      pattern: /\br(?:\d|[12]\d|3[01])\b/,
      alias: "variable"
    },
    "op-code": {
      pattern: /\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\b/,
      alias: "keyword"
    },
    "hex-number": {
      pattern: /#?\$[\da-f]{2,4}\b/i,
      alias: "number"
    },
    "binary-number": {
      pattern: /#?%[01]+\b/,
      alias: "number"
    },
    "decimal-number": {
      pattern: /#?\b\d+\b/,
      alias: "number"
    },
    register: {
      pattern: /\b[acznvshtixy]\b/i,
      alias: "variable"
    },
    operator: />>=?|<<=?|&&?|\|\|?|[-+*/%&|^!=<>?]=?/,
    punctuation: /[(),:]/
  };
}
var csharp_1 = csharp;
csharp.displayName = "csharp";
csharp.aliases = ["dotnet", "cs"];
function csharp(Prism2) {
  (function(Prism3) {
    function replace2(pattern, replacements) {
      return pattern.replace(/<<(\d+)>>/g, function(m2, index) {
        return "(?:" + replacements[+index] + ")";
      });
    }
    function re2(pattern, replacements, flags) {
      return RegExp(replace2(pattern, replacements), flags || "");
    }
    function nested(pattern, depthLog2) {
      for (var i2 = 0; i2 < depthLog2; i2++) {
        pattern = pattern.replace(/<<self>>/g, function() {
          return "(?:" + pattern + ")";
        });
      }
      return pattern.replace(/<<self>>/g, "[^\\s\\S]");
    }
    var keywordKinds = {
      type: "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",
      typeDeclaration: "class enum interface record struct",
      contextual: "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",
      other: "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"
    };
    function keywordsToPattern(words) {
      return "\\b(?:" + words.trim().replace(/ /g, "|") + ")\\b";
    }
    var typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);
    var keywords = RegExp(keywordsToPattern(keywordKinds.type + " " + keywordKinds.typeDeclaration + " " + keywordKinds.contextual + " " + keywordKinds.other));
    var nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + " " + keywordKinds.contextual + " " + keywordKinds.other);
    var nonContextualKeywords = keywordsToPattern(keywordKinds.type + " " + keywordKinds.typeDeclaration + " " + keywordKinds.other);
    var generic = nested(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source, 2);
    var nestedRound = nested(/\((?:[^()]|<<self>>)*\)/.source, 2);
    var name2 = /@?\b[A-Za-z_]\w*\b/.source;
    var genericName = replace2(/<<0>>(?:\s*<<1>>)?/.source, [name2, generic]);
    var identifier = replace2(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [
      nonTypeKeywords,
      genericName
    ]);
    var array2 = /\[\s*(?:,\s*)*\]/.source;
    var typeExpressionWithoutTuple = replace2(/<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source, [identifier, array2]);
    var tupleElement = replace2(/[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [generic, nestedRound, array2]);
    var tuple = replace2(/\(<<0>>+(?:,<<0>>+)+\)/.source, [tupleElement]);
    var typeExpression = replace2(/(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source, [tuple, identifier, array2]);
    var typeInside = {
      keyword: keywords,
      punctuation: /[<>()?,.:[\]]/
    };
    var character = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source;
    var regularString = /"(?:\\.|[^\\"\r\n])*"/.source;
    var verbatimString = /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;
    Prism3.languages.csharp = Prism3.languages.extend("clike", {
      string: [
        {
          pattern: re2(/(^|[^$\\])<<0>>/.source, [verbatimString]),
          lookbehind: true,
          greedy: true
        },
        {
          pattern: re2(/(^|[^@$\\])<<0>>/.source, [regularString]),
          lookbehind: true,
          greedy: true
        }
      ],
      "class-name": [
        {
          pattern: re2(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source, [
            identifier
          ]),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: re2(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source, [
            name2,
            typeExpression
          ]),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: re2(/(\busing\s+)<<0>>(?=\s*=)/.source, [name2]),
          lookbehind: true
        },
        {
          pattern: re2(/(\b<<0>>\s+)<<1>>/.source, [
            typeDeclarationKeywords,
            genericName
          ]),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: re2(/(\bcatch\s*\(\s*)<<0>>/.source, [identifier]),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: re2(/(\bwhere\s+)<<0>>/.source, [name2]),
          lookbehind: true
        },
        {
          pattern: re2(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source, [
            typeExpressionWithoutTuple
          ]),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: re2(/\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source, [typeExpression, nonContextualKeywords, name2]),
          inside: typeInside
        }
      ],
      keyword: keywords,
      number: /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
      operator: />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
      punctuation: /\?\.?|::|[{}[\];(),.:]/
    });
    Prism3.languages.insertBefore("csharp", "number", {
      range: {
        pattern: /\.\./,
        alias: "operator"
      }
    });
    Prism3.languages.insertBefore("csharp", "punctuation", {
      "named-parameter": {
        pattern: re2(/([(,]\s*)<<0>>(?=\s*:)/.source, [name2]),
        lookbehind: true,
        alias: "punctuation"
      }
    });
    Prism3.languages.insertBefore("csharp", "class-name", {
      namespace: {
        pattern: re2(/(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source, [name2]),
        lookbehind: true,
        inside: {
          punctuation: /\./
        }
      },
      "type-expression": {
        pattern: re2(/(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source, [nestedRound]),
        lookbehind: true,
        alias: "class-name",
        inside: typeInside
      },
      "return-type": {
        pattern: re2(/<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source, [typeExpression, identifier]),
        inside: typeInside,
        alias: "class-name"
      },
      "constructor-invocation": {
        pattern: re2(/(\bnew\s+)<<0>>(?=\s*[[({])/.source, [typeExpression]),
        lookbehind: true,
        inside: typeInside,
        alias: "class-name"
      },
      "generic-method": {
        pattern: re2(/<<0>>\s*<<1>>(?=\s*\()/.source, [name2, generic]),
        inside: {
          function: re2(/^<<0>>/.source, [name2]),
          generic: {
            pattern: RegExp(generic),
            alias: "class-name",
            inside: typeInside
          }
        }
      },
      "type-list": {
        pattern: re2(/\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/.source, [
          typeDeclarationKeywords,
          genericName,
          name2,
          typeExpression,
          keywords.source,
          nestedRound,
          /\bnew\s*\(\s*\)/.source
        ]),
        lookbehind: true,
        inside: {
          "record-arguments": {
            pattern: re2(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source, [
              genericName,
              nestedRound
            ]),
            lookbehind: true,
            greedy: true,
            inside: Prism3.languages.csharp
          },
          keyword: keywords,
          "class-name": {
            pattern: RegExp(typeExpression),
            greedy: true,
            inside: typeInside
          },
          punctuation: /[,()]/
        }
      },
      preprocessor: {
        pattern: /(^[\t ]*)#.*/m,
        lookbehind: true,
        alias: "property",
        inside: {
          directive: {
            pattern: /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
            lookbehind: true,
            alias: "keyword"
          }
        }
      }
    });
    var regularStringOrCharacter = regularString + "|" + character;
    var regularStringCharacterOrComment = replace2(/\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source, [regularStringOrCharacter]);
    var roundExpression = nested(replace2(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [
      regularStringCharacterOrComment
    ]), 2);
    var attrTarget = /\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source;
    var attr = replace2(/<<0>>(?:\s*\(<<1>>*\))?/.source, [
      identifier,
      roundExpression
    ]);
    Prism3.languages.insertBefore("csharp", "class-name", {
      attribute: {
        pattern: re2(/((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source, [attrTarget, attr]),
        lookbehind: true,
        greedy: true,
        inside: {
          target: {
            pattern: re2(/^<<0>>(?=\s*:)/.source, [attrTarget]),
            alias: "keyword"
          },
          "attribute-arguments": {
            pattern: re2(/\(<<0>>*\)/.source, [roundExpression]),
            inside: Prism3.languages.csharp
          },
          "class-name": {
            pattern: RegExp(identifier),
            inside: {
              punctuation: /\./
            }
          },
          punctuation: /[:,]/
        }
      }
    });
    var formatString = /:[^}\r\n]+/.source;
    var mInterpolationRound = nested(replace2(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [
      regularStringCharacterOrComment
    ]), 2);
    var mInterpolation = replace2(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [
      mInterpolationRound,
      formatString
    ]);
    var sInterpolationRound = nested(replace2(/[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source, [regularStringOrCharacter]), 2);
    var sInterpolation = replace2(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [
      sInterpolationRound,
      formatString
    ]);
    function createInterpolationInside(interpolation, interpolationRound) {
      return {
        interpolation: {
          pattern: re2(/((?:^|[^{])(?:\{\{)*)<<0>>/.source, [interpolation]),
          lookbehind: true,
          inside: {
            "format-string": {
              pattern: re2(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source, [
                interpolationRound,
                formatString
              ]),
              lookbehind: true,
              inside: {
                punctuation: /^:/
              }
            },
            punctuation: /^\{|\}$/,
            expression: {
              pattern: /[\s\S]+/,
              alias: "language-csharp",
              inside: Prism3.languages.csharp
            }
          }
        },
        string: /[\s\S]+/
      };
    }
    Prism3.languages.insertBefore("csharp", "string", {
      "interpolation-string": [
        {
          pattern: re2(/(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source, [mInterpolation]),
          lookbehind: true,
          greedy: true,
          inside: createInterpolationInside(mInterpolation, mInterpolationRound)
        },
        {
          pattern: re2(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source, [
            sInterpolation
          ]),
          lookbehind: true,
          greedy: true,
          inside: createInterpolationInside(sInterpolation, sInterpolationRound)
        }
      ],
      char: {
        pattern: RegExp(character),
        greedy: true
      }
    });
    Prism3.languages.dotnet = Prism3.languages.cs = Prism3.languages.csharp;
  })(Prism2);
}
var refractorCsharp$2 = csharp_1;
var aspnet_1 = aspnet;
aspnet.displayName = "aspnet";
aspnet.aliases = [];
function aspnet(Prism2) {
  Prism2.register(refractorCsharp$2);
  Prism2.languages.aspnet = Prism2.languages.extend("markup", {
    "page-directive": {
      pattern: /<%\s*@.*%>/,
      alias: "tag",
      inside: {
        "page-directive": {
          pattern: /<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,
          alias: "tag"
        },
        rest: Prism2.languages.markup.tag.inside
      }
    },
    directive: {
      pattern: /<%.*%>/,
      alias: "tag",
      inside: {
        directive: {
          pattern: /<%\s*?[$=%#:]{0,2}|%>/,
          alias: "tag"
        },
        rest: Prism2.languages.csharp
      }
    }
  });
  Prism2.languages.aspnet.tag.pattern = /<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/;
  Prism2.languages.insertBefore("inside", "punctuation", {
    directive: Prism2.languages.aspnet["directive"]
  }, Prism2.languages.aspnet.tag.inside["attr-value"]);
  Prism2.languages.insertBefore("aspnet", "comment", {
    "asp-comment": {
      pattern: /<%--[\s\S]*?--%>/,
      alias: ["asp", "comment"]
    }
  });
  Prism2.languages.insertBefore("aspnet", Prism2.languages.javascript ? "script" : "tag", {
    "asp-script": {
      pattern: /(<script(?=.*runat=['"]?server\b)[^>]*>)[\s\S]*?(?=<\/script>)/i,
      lookbehind: true,
      alias: ["asp", "script"],
      inside: Prism2.languages.csharp || {}
    }
  });
}
var autohotkey_1 = autohotkey;
autohotkey.displayName = "autohotkey";
autohotkey.aliases = [];
function autohotkey(Prism2) {
  Prism2.languages.autohotkey = {
    comment: [
      {
        pattern: /(^|\s);.*/,
        lookbehind: true
      },
      {
        pattern: /(^[\t ]*)\/\*(?:[\r\n](?![ \t]*\*\/)|[^\r\n])*(?:[\r\n][ \t]*\*\/)?/m,
        lookbehind: true,
        greedy: true
      }
    ],
    tag: {
      pattern: /^([ \t]*)[^\s,`":]+(?=:[ \t]*$)/m,
      lookbehind: true
    },
    string: /"(?:[^"\n\r]|"")*"/,
    variable: /%\w+%/,
    number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
    operator: /\?|\/\/?=?|:=|\|[=|]?|&[=&]?|\+[=+]?|-[=-]?|\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\b(?:AND|NOT|OR)\b/,
    boolean: /\b(?:false|true)\b/,
    selector: /\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\b/i,
    constant: /\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\b/i,
    builtin: /\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\b/i,
    symbol: /\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\b/i,
    important: /#\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\b/i,
    keyword: /\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\b/i,
    function: /[^(); \t,\n+*\-=?>:\\\/<&%\[\]]+(?=\()/,
    punctuation: /[{}[\]():,]/
  };
}
var autoit_1 = autoit;
autoit.displayName = "autoit";
autoit.aliases = [];
function autoit(Prism2) {
  Prism2.languages.autoit = {
    comment: [
      /;.*/,
      {
        pattern: /(^[\t ]*)#(?:comments-start|cs)[\s\S]*?^[ \t]*#(?:ce|comments-end)/m,
        lookbehind: true
      }
    ],
    url: {
      pattern: /(^[\t ]*#include\s+)(?:<[^\r\n>]+>|"[^\r\n"]+")/m,
      lookbehind: true
    },
    string: {
      pattern: /(["'])(?:\1\1|(?!\1)[^\r\n])*\1/,
      greedy: true,
      inside: {
        variable: /([%$@])\w+\1/
      }
    },
    directive: {
      pattern: /(^[\t ]*)#[\w-]+/m,
      lookbehind: true,
      alias: "keyword"
    },
    function: /\b\w+(?=\()/,
    variable: /[$@]\w+/,
    keyword: /\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\b/i,
    number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
    boolean: /\b(?:False|True)\b/i,
    operator: /<[=>]?|[-+*\/=&>]=?|[?^]|\b(?:And|Not|Or)\b/i,
    punctuation: /[\[\]().,:]/
  };
}
var avisynth_1 = avisynth;
avisynth.displayName = "avisynth";
avisynth.aliases = ["avs"];
function avisynth(Prism2) {
  (function(Prism3) {
    function replace2(pattern, replacements) {
      return pattern.replace(/<<(\d+)>>/g, function(m2, index) {
        return replacements[+index];
      });
    }
    function re2(pattern, replacements, flags) {
      return RegExp(replace2(pattern, replacements), flags || "");
    }
    var types2 = /bool|clip|float|int|string|val/.source;
    var internals = [
      /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,
      /apply|assert|default|eval|import|nop|select|undefined/.source,
      /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/.source,
      /hex(?:value)?|value/.source,
      /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,
      /a?sinh?|a?cosh?|a?tan[2h]?/.source,
      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,
      /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/.source,
      /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,
      /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,
      /isversionorgreater|version(?:number|string)/.source,
      /buildpixeltype|colorspacenametopixeltype/.source,
      /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source
    ].join("|");
    var properties2 = [
      /has(?:audio|video)/.source,
      /height|width/.source,
      /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,
      /getparity|is(?:field|frame)based/.source,
      /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/.source,
      /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source
    ].join("|");
    var filters = [
      /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/.source,
      /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/.source,
      /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,
      /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/.source,
      /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,
      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/.source,
      /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/.source,
      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/.source,
      /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,
      /imagewriter/.source,
      /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/.source
    ].join("|");
    var allinternals = [internals, properties2, filters].join("|");
    Prism3.languages.avisynth = {
      comment: [
        {
          pattern: /(^|[^\\])\[\*(?:[^\[*]|\[(?!\*)|\*(?!\])|\[\*(?:[^\[*]|\[(?!\*)|\*(?!\]))*\*\])*\*\]/,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /(^|[^\\$])#.*/,
          lookbehind: true,
          greedy: true
        }
      ],
      argument: {
        pattern: re2(/\b(?:<<0>>)\s+("?)\w+\1/.source, [types2], "i"),
        inside: {
          keyword: /^\w+/
        }
      },
      "argument-label": {
        pattern: /([,(][\s\\]*)\w+\s*=(?!=)/,
        lookbehind: true,
        inside: {
          "argument-name": {
            pattern: /^\w+/,
            alias: "punctuation"
          },
          punctuation: /=$/
        }
      },
      string: [
        {
          pattern: /"""[\s\S]*?"""/,
          greedy: true
        },
        {
          pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
          greedy: true,
          inside: {
            constant: {
              pattern: /\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\b/
            }
          }
        }
      ],
      variable: /\b(?:last)\b/i,
      boolean: /\b(?:false|no|true|yes)\b/i,
      keyword: /\b(?:catch|else|for|function|global|if|return|try|while|__END__)\b/i,
      constant: /\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\b/,
      "builtin-function": {
        pattern: re2(/\b(?:<<0>>)\b/.source, [allinternals], "i"),
        alias: "function"
      },
      "type-cast": {
        pattern: re2(/\b(?:<<0>>)(?=\s*\()/.source, [types2], "i"),
        alias: "keyword"
      },
      function: {
        pattern: /\b[a-z_]\w*(?=\s*\()|(\.)[a-z_]\w*\b/i,
        lookbehind: true
      },
      "line-continuation": {
        pattern: /(^[ \t]*)\\|\\(?=[ \t]*$)/m,
        lookbehind: true,
        alias: "punctuation"
      },
      number: /\B\$(?:[\da-f]{6}|[\da-f]{8})\b|(?:(?:\b|\B-)\d+(?:\.\d*)?\b|\B\.\d+\b)/i,
      operator: /\+\+?|[!=<>]=?|&&|\|\||[?:*/%-]/,
      punctuation: /[{}\[\]();,.]/
    };
    Prism3.languages.avs = Prism3.languages.avisynth;
  })(Prism2);
}
var avroIdl_1 = avroIdl;
avroIdl.displayName = "avroIdl";
avroIdl.aliases = [];
function avroIdl(Prism2) {
  Prism2.languages["avro-idl"] = {
    comment: {
      pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
      greedy: true
    },
    string: {
      pattern: /(^|[^\\])"(?:[^\r\n"\\]|\\.)*"/,
      lookbehind: true,
      greedy: true
    },
    annotation: {
      pattern: /@(?:[$\w.-]|`[^\r\n`]+`)+/,
      greedy: true,
      alias: "function"
    },
    "function-identifier": {
      pattern: /`[^\r\n`]+`(?=\s*\()/,
      greedy: true,
      alias: "function"
    },
    identifier: {
      pattern: /`[^\r\n`]+`/,
      greedy: true
    },
    "class-name": {
      pattern: /(\b(?:enum|error|protocol|record|throws)\b\s+)[$\w]+/,
      lookbehind: true,
      greedy: true
    },
    keyword: /\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\b/,
    function: /\b[a-z_]\w*(?=\s*\()/i,
    number: [
      {
        pattern: /(^|[^\w.])-?(?:(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|0x(?:[a-f0-9]+(?:\.[a-f0-9]*)?|\.[a-f0-9]+)(?:p[+-]?\d+)?)[dfl]?(?![\w.])/i,
        lookbehind: true
      },
      /-?\b(?:Infinity|NaN)\b/
    ],
    operator: /=/,
    punctuation: /[()\[\]{}<>.:,;-]/
  };
  Prism2.languages.avdl = Prism2.languages["avro-idl"];
}
var bash_1 = bash;
bash.displayName = "bash";
bash.aliases = ["shell"];
function bash(Prism2) {
  (function(Prism3) {
    var envVars = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b";
    var commandAfterHeredoc = {
      pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
      lookbehind: true,
      alias: "punctuation",
      inside: null
    };
    var insideString = {
      bash: commandAfterHeredoc,
      environment: {
        pattern: RegExp("\\$" + envVars),
        alias: "constant"
      },
      variable: [
        {
          pattern: /\$?\(\([\s\S]+?\)\)/,
          greedy: true,
          inside: {
            variable: [
              {
                pattern: /(^\$\(\([\s\S]+)\)\)/,
                lookbehind: true
              },
              /^\$\(\(/
            ],
            number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
            operator: /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
            punctuation: /\(\(?|\)\)?|,|;/
          }
        },
        {
          pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
          greedy: true,
          inside: {
            variable: /^\$\(|^`|\)$|`$/
          }
        },
        {
          pattern: /\$\{[^}]+\}/,
          greedy: true,
          inside: {
            operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
            punctuation: /[\[\]]/,
            environment: {
              pattern: RegExp("(\\{)" + envVars),
              lookbehind: true,
              alias: "constant"
            }
          }
        },
        /\$(?:\w+|[#?*!@$])/
      ],
      entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/
    };
    Prism3.languages.bash = {
      shebang: {
        pattern: /^#!\s*\/.*/,
        alias: "important"
      },
      comment: {
        pattern: /(^|[^"{\\$])#.*/,
        lookbehind: true
      },
      "function-name": [
        {
          pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
          lookbehind: true,
          alias: "function"
        },
        {
          pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
          alias: "function"
        }
      ],
      "for-or-select": {
        pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
        alias: "variable",
        lookbehind: true
      },
      "assign-left": {
        pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
        inside: {
          environment: {
            pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + envVars),
            lookbehind: true,
            alias: "constant"
          }
        },
        alias: "variable",
        lookbehind: true
      },
      string: [
        {
          pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
          lookbehind: true,
          greedy: true,
          inside: insideString
        },
        {
          pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
          lookbehind: true,
          greedy: true,
          inside: {
            bash: commandAfterHeredoc
          }
        },
        {
          pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
          lookbehind: true,
          greedy: true,
          inside: insideString
        },
        {
          pattern: /(^|[^$\\])'[^']*'/,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
          greedy: true,
          inside: {
            entity: insideString.entity
          }
        }
      ],
      environment: {
        pattern: RegExp("\\$?" + envVars),
        alias: "constant"
      },
      variable: insideString.variable,
      function: {
        pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
        lookbehind: true
      },
      keyword: {
        pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
        lookbehind: true
      },
      builtin: {
        pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
        lookbehind: true,
        alias: "class-name"
      },
      boolean: {
        pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,
        lookbehind: true
      },
      "file-descriptor": {
        pattern: /\B&\d\b/,
        alias: "important"
      },
      operator: {
        pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
        inside: {
          "file-descriptor": {
            pattern: /^\d/,
            alias: "important"
          }
        }
      },
      punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
      number: {
        pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
        lookbehind: true
      }
    };
    commandAfterHeredoc.inside = Prism3.languages.bash;
    var toBeCopied = [
      "comment",
      "function-name",
      "for-or-select",
      "assign-left",
      "string",
      "environment",
      "function",
      "keyword",
      "builtin",
      "boolean",
      "file-descriptor",
      "operator",
      "punctuation",
      "number"
    ];
    var inside = insideString.variable[1].inside;
    for (var i2 = 0; i2 < toBeCopied.length; i2++) {
      inside[toBeCopied[i2]] = Prism3.languages.bash[toBeCopied[i2]];
    }
    Prism3.languages.shell = Prism3.languages.bash;
  })(Prism2);
}
var basic_1 = basic;
basic.displayName = "basic";
basic.aliases = [];
function basic(Prism2) {
  Prism2.languages.basic = {
    comment: {
      pattern: /(?:!|REM\b).+/i,
      inside: {
        keyword: /^REM/i
      }
    },
    string: {
      pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,
      greedy: true
    },
    number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
    keyword: /\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\$|\b)/i,
    function: /\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\$|\b)/i,
    operator: /<[=>]?|>=?|[+\-*\/^=&]|\b(?:AND|EQV|IMP|NOT|OR|XOR)\b/i,
    punctuation: /[,;:()]/
  };
}
var batch_1 = batch;
batch.displayName = "batch";
batch.aliases = [];
function batch(Prism2) {
  (function(Prism3) {
    var variable = /%%?[~:\w]+%?|!\S+!/;
    var parameter = {
      pattern: /\/[a-z?]+(?=[ :]|$):?|-[a-z]\b|--[a-z-]+\b/im,
      alias: "attr-name",
      inside: {
        punctuation: /:/
      }
    };
    var string2 = /"(?:[\\"]"|[^"])*"(?!")/;
    var number2 = /(?:\b|-)\d+\b/;
    Prism3.languages.batch = {
      comment: [
        /^::.*/m,
        {
          pattern: /((?:^|[&(])[ \t]*)rem\b(?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
          lookbehind: true
        }
      ],
      label: {
        pattern: /^:.*/m,
        alias: "property"
      },
      command: [
        {
          pattern: /((?:^|[&(])[ \t]*)for(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* \S+ in \([^)]+\) do/im,
          lookbehind: true,
          inside: {
            keyword: /\b(?:do|in)\b|^for\b/i,
            string: string2,
            parameter,
            variable,
            number: number2,
            punctuation: /[()',]/
          }
        },
        {
          pattern: /((?:^|[&(])[ \t]*)if(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:not )?(?:cmdextversion \d+|defined \w+|errorlevel \d+|exist \S+|(?:"[^"]*"|(?!")(?:(?!==)\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:"[^"]*"|[^\s"]\S*))/im,
          lookbehind: true,
          inside: {
            keyword: /\b(?:cmdextversion|defined|errorlevel|exist|not)\b|^if\b/i,
            string: string2,
            parameter,
            variable,
            number: number2,
            operator: /\^|==|\b(?:equ|geq|gtr|leq|lss|neq)\b/i
          }
        },
        {
          pattern: /((?:^|[&()])[ \t]*)else\b/im,
          lookbehind: true,
          inside: {
            keyword: /^else\b/i
          }
        },
        {
          pattern: /((?:^|[&(])[ \t]*)set(?: \/[a-z](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
          lookbehind: true,
          inside: {
            keyword: /^set\b/i,
            string: string2,
            parameter,
            variable: [variable, /\w+(?=(?:[*\/%+\-&^|]|<<|>>)?=)/],
            number: number2,
            operator: /[*\/%+\-&^|]=?|<<=?|>>=?|[!~_=]/,
            punctuation: /[()',]/
          }
        },
        {
          pattern: /((?:^|[&(])[ \t]*@?)\w+\b(?:"(?:[\\"]"|[^"])*"(?!")|[^"^&)\r\n]|\^(?:\r\n|[\s\S]))*/m,
          lookbehind: true,
          inside: {
            keyword: /^\w+\b/,
            string: string2,
            parameter,
            label: {
              pattern: /(^\s*):\S+/m,
              lookbehind: true,
              alias: "property"
            },
            variable,
            number: number2,
            operator: /\^/
          }
        }
      ],
      operator: /[&@]/,
      punctuation: /[()']/
    };
  })(Prism2);
}
var bbcode_1 = bbcode;
bbcode.displayName = "bbcode";
bbcode.aliases = ["shortcode"];
function bbcode(Prism2) {
  Prism2.languages.bbcode = {
    tag: {
      pattern: /\[\/?[^\s=\]]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))?(?:\s+[^\s=\]]+\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+))*\s*\]/,
      inside: {
        tag: {
          pattern: /^\[\/?[^\s=\]]+/,
          inside: {
            punctuation: /^\[\/?/
          }
        },
        "attr-value": {
          pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'"\]=]+)/,
          inside: {
            punctuation: [
              /^=/,
              {
                pattern: /^(\s*)["']|["']$/,
                lookbehind: true
              }
            ]
          }
        },
        punctuation: /\]/,
        "attr-name": /[^\s=\]]+/
      }
    }
  };
  Prism2.languages.shortcode = Prism2.languages.bbcode;
}
var bicep_1 = bicep;
bicep.displayName = "bicep";
bicep.aliases = [];
function bicep(Prism2) {
  Prism2.languages.bicep = {
    comment: [
      {
        pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
        lookbehind: true,
        greedy: true
      },
      {
        pattern: /(^|[^\\:])\/\/.*/,
        lookbehind: true,
        greedy: true
      }
    ],
    property: [
      {
        pattern: /([\r\n][ \t]*)[a-z_]\w*(?=[ \t]*:)/i,
        lookbehind: true
      },
      {
        pattern: /([\r\n][ \t]*)'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'(?=[ \t]*:)/,
        lookbehind: true,
        greedy: true
      }
    ],
    string: [
      {
        pattern: /'''[^'][\s\S]*?'''/,
        greedy: true
      },
      {
        pattern: /(^|[^\\'])'(?:\\.|\$(?!\{)|[^'\\\r\n$])*'/,
        lookbehind: true,
        greedy: true
      }
    ],
    "interpolated-string": {
      pattern: /(^|[^\\'])'(?:\\.|\$(?:(?!\{)|\{[^{}\r\n]*\})|[^'\\\r\n$])*'/,
      lookbehind: true,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /\$\{[^{}\r\n]*\}/,
          inside: {
            expression: {
              pattern: /(^\$\{)[\s\S]+(?=\}$)/,
              lookbehind: true
            },
            punctuation: /^\$\{|\}$/
          }
        },
        string: /[\s\S]+/
      }
    },
    datatype: {
      pattern: /(\b(?:output|param)\b[ \t]+\w+[ \t]+)\w+\b/,
      lookbehind: true,
      alias: "class-name"
    },
    boolean: /\b(?:false|true)\b/,
    keyword: /\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\b/,
    decorator: /@\w+\b/,
    function: /\b[a-z_]\w*(?=[ \t]*\()/i,
    number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
    operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/,
    punctuation: /[{}[\];(),.:]/
  };
  Prism2.languages.bicep["interpolated-string"].inside["interpolation"].inside["expression"].inside = Prism2.languages.bicep;
}
var birb_1 = birb;
birb.displayName = "birb";
birb.aliases = [];
function birb(Prism2) {
  Prism2.languages.birb = Prism2.languages.extend("clike", {
    string: {
      pattern: /r?("|')(?:\\.|(?!\1)[^\\])*\1/,
      greedy: true
    },
    "class-name": [
      /\b[A-Z](?:[\d_]*[a-zA-Z]\w*)?\b/,
      /\b(?:[A-Z]\w*|(?!(?:var|void)\b)[a-z]\w*)(?=\s+\w+\s*[;,=()])/
    ],
    keyword: /\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\b/,
    operator: /\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?|:/,
    variable: /\b[a-z_]\w*\b/
  });
  Prism2.languages.insertBefore("birb", "function", {
    metadata: {
      pattern: /<\w+>/,
      greedy: true,
      alias: "symbol"
    }
  });
}
var refractorC$4 = c_1;
var bison_1 = bison;
bison.displayName = "bison";
bison.aliases = [];
function bison(Prism2) {
  Prism2.register(refractorC$4);
  Prism2.languages.bison = Prism2.languages.extend("c", {});
  Prism2.languages.insertBefore("bison", "comment", {
    bison: {
      pattern: /^(?:[^%]|%(?!%))*%%[\s\S]*?%%/,
      inside: {
        c: {
          pattern: /%\{[\s\S]*?%\}|\{(?:\{[^}]*\}|[^{}])*\}/,
          inside: {
            delimiter: {
              pattern: /^%?\{|%?\}$/,
              alias: "punctuation"
            },
            "bison-variable": {
              pattern: /[$@](?:<[^\s>]+>)?[\w$]+/,
              alias: "variable",
              inside: {
                punctuation: /<|>/
              }
            },
            rest: Prism2.languages.c
          }
        },
        comment: Prism2.languages.c.comment,
        string: Prism2.languages.c.string,
        property: /\S+(?=:)/,
        keyword: /%\w+/,
        number: {
          pattern: /(^|[^@])\b(?:0x[\da-f]+|\d+)/i,
          lookbehind: true
        },
        punctuation: /%[%?]|[|:;\[\]<>]/
      }
    }
  });
}
var bnf_1 = bnf;
bnf.displayName = "bnf";
bnf.aliases = ["rbnf"];
function bnf(Prism2) {
  Prism2.languages.bnf = {
    string: {
      pattern: /"[^\r\n"]*"|'[^\r\n']*'/
    },
    definition: {
      pattern: /<[^<>\r\n\t]+>(?=\s*::=)/,
      alias: ["rule", "keyword"],
      inside: {
        punctuation: /^<|>$/
      }
    },
    rule: {
      pattern: /<[^<>\r\n\t]+>/,
      inside: {
        punctuation: /^<|>$/
      }
    },
    operator: /::=|[|()[\]{}*+?]|\.{3}/
  };
  Prism2.languages.rbnf = Prism2.languages.bnf;
}
var brainfuck_1 = brainfuck;
brainfuck.displayName = "brainfuck";
brainfuck.aliases = [];
function brainfuck(Prism2) {
  Prism2.languages.brainfuck = {
    pointer: {
      pattern: /<|>/,
      alias: "keyword"
    },
    increment: {
      pattern: /\+/,
      alias: "inserted"
    },
    decrement: {
      pattern: /-/,
      alias: "deleted"
    },
    branching: {
      pattern: /\[|\]/,
      alias: "important"
    },
    operator: /[.,]/,
    comment: /\S+/
  };
}
var brightscript_1 = brightscript;
brightscript.displayName = "brightscript";
brightscript.aliases = [];
function brightscript(Prism2) {
  Prism2.languages.brightscript = {
    comment: /(?:\brem|').*/i,
    "directive-statement": {
      pattern: /(^[\t ]*)#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if).*/im,
      lookbehind: true,
      alias: "property",
      inside: {
        "error-message": {
          pattern: /(^#error).+/,
          lookbehind: true
        },
        directive: {
          pattern: /^#(?:const|else(?:[\t ]+if)?|end[\t ]+if|error|if)/,
          alias: "keyword"
        },
        expression: {
          pattern: /[\s\S]+/,
          inside: null
        }
      }
    },
    property: {
      pattern: /([\r\n{,][\t ]*)(?:(?!\d)\w+|"(?:[^"\r\n]|"")*"(?!"))(?=[ \t]*:)/,
      lookbehind: true,
      greedy: true
    },
    string: {
      pattern: /"(?:[^"\r\n]|"")*"(?!")/,
      greedy: true
    },
    "class-name": {
      pattern: /(\bAs[\t ]+)\w+/i,
      lookbehind: true
    },
    keyword: /\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\b/i,
    boolean: /\b(?:false|true)\b/i,
    function: /\b(?!\d)\w+(?=[\t ]*\()/,
    number: /(?:\b\d+(?:\.\d+)?(?:[ed][+-]\d+)?|&h[a-f\d]+)\b[%&!#]?/i,
    operator: /--|\+\+|>>=?|<<=?|<>|[-+*/\\<>]=?|[:^=?]|\b(?:and|mod|not|or)\b/i,
    punctuation: /[.,;()[\]{}]/,
    constant: /\b(?:LINE_NUM)\b/i
  };
  Prism2.languages.brightscript["directive-statement"].inside.expression.inside = Prism2.languages.brightscript;
}
var bro_1 = bro;
bro.displayName = "bro";
bro.aliases = [];
function bro(Prism2) {
  Prism2.languages.bro = {
    comment: {
      pattern: /(^|[^\\$])#.*/,
      lookbehind: true,
      inside: {
        italic: /\b(?:FIXME|TODO|XXX)\b/
      }
    },
    string: {
      pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    boolean: /\b[TF]\b/,
    function: {
      pattern: /(\b(?:event|function|hook)[ \t]+)\w+(?:::\w+)?/,
      lookbehind: true
    },
    builtin: /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,
    constant: {
      pattern: /(\bconst[ \t]+)\w+/i,
      lookbehind: true
    },
    keyword: /\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\b/,
    operator: /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&|\|\|?|\?|\*|\/|~|\^|%/,
    number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
    punctuation: /[{}[\];(),.:]/
  };
}
var bsl_1 = bsl;
bsl.displayName = "bsl";
bsl.aliases = [];
function bsl(Prism2) {
  Prism2.languages.bsl = {
    comment: /\/\/.*/,
    string: [
      {
        pattern: /"(?:[^"]|"")*"(?!")/,
        greedy: true
      },
      {
        pattern: /'(?:[^'\r\n\\]|\\.)*'/
      }
    ],
    keyword: [
      {
        pattern: /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
        lookbehind: true
      },
      {
        pattern: /\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\b/i
      }
    ],
    number: {
      pattern: /(^(?=\d)|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:\d+(?:\.\d*)?|\.\d+)(?:E[+-]?\d+)?/i,
      lookbehind: true
    },
    operator: [
      /[<>+\-*/]=?|[%=]/,
      {
        pattern: /(^|[^\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])(?:и|или|не)(?![\w\u0400-\u0484\u0487-\u052f\u1d2b\u1d78\u2de0-\u2dff\ua640-\ua69f\ufe2e\ufe2f])/i,
        lookbehind: true
      },
      {
        pattern: /\b(?:and|not|or)\b/i
      }
    ],
    punctuation: /\(\.|\.\)|[()\[\]:;,.]/,
    directive: [
      {
        pattern: /^([ \t]*)&.*/m,
        lookbehind: true,
        greedy: true,
        alias: "important"
      },
      {
        pattern: /^([ \t]*)#.*/gm,
        lookbehind: true,
        greedy: true,
        alias: "important"
      }
    ]
  };
  Prism2.languages.oscript = Prism2.languages["bsl"];
}
var cfscript_1 = cfscript;
cfscript.displayName = "cfscript";
cfscript.aliases = [];
function cfscript(Prism2) {
  Prism2.languages.cfscript = Prism2.languages.extend("clike", {
    comment: [
      {
        pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
        lookbehind: true,
        inside: {
          annotation: {
            pattern: /(?:^|[^.])@[\w\.]+/,
            alias: "punctuation"
          }
        }
      },
      {
        pattern: /(^|[^\\:])\/\/.*/,
        lookbehind: true,
        greedy: true
      }
    ],
    keyword: /\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\b(?!\s*=)/,
    operator: [
      /\+\+|--|&&|\|\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\?(?:\.|:)?|[?:]/,
      /\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\b/
    ],
    scope: {
      pattern: /\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\b/,
      alias: "global"
    },
    type: {
      pattern: /\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\b/,
      alias: "builtin"
    }
  });
  Prism2.languages.insertBefore("cfscript", "keyword", {
    "function-variable": {
      pattern: /[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
      alias: "function"
    }
  });
  delete Prism2.languages.cfscript["class-name"];
  Prism2.languages.cfc = Prism2.languages["cfscript"];
}
var refractorCpp = cpp_1;
var chaiscript_1 = chaiscript;
chaiscript.displayName = "chaiscript";
chaiscript.aliases = [];
function chaiscript(Prism2) {
  Prism2.register(refractorCpp);
  Prism2.languages.chaiscript = Prism2.languages.extend("clike", {
    string: {
      pattern: /(^|[^\\])'(?:[^'\\]|\\[\s\S])*'/,
      lookbehind: true,
      greedy: true
    },
    "class-name": [
      {
        pattern: /(\bclass\s+)\w+/,
        lookbehind: true
      },
      {
        pattern: /(\b(?:attr|def)\s+)\w+(?=\s*::)/,
        lookbehind: true
      }
    ],
    keyword: /\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\b/,
    number: [Prism2.languages.cpp.number, /\b(?:Infinity|NaN)\b/],
    operator: />>=?|<<=?|\|\||&&|:[:=]?|--|\+\+|[=!<>+\-*/%|&^]=?|[?~]|`[^`\r\n]{1,4}`/
  });
  Prism2.languages.insertBefore("chaiscript", "operator", {
    "parameter-type": {
      pattern: /([,(]\s*)\w+(?=\s+\w)/,
      lookbehind: true,
      alias: "class-name"
    }
  });
  Prism2.languages.insertBefore("chaiscript", "string", {
    "string-interpolation": {
      pattern: /(^|[^\\])"(?:[^"$\\]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*"/,
      lookbehind: true,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\}/,
          lookbehind: true,
          inside: {
            "interpolation-expression": {
              pattern: /(^\$\{)[\s\S]+(?=\}$)/,
              lookbehind: true,
              inside: Prism2.languages.chaiscript
            },
            "interpolation-punctuation": {
              pattern: /^\$\{|\}$/,
              alias: "punctuation"
            }
          }
        },
        string: /[\s\S]+/
      }
    }
  });
}
var cil_1 = cil;
cil.displayName = "cil";
cil.aliases = [];
function cil(Prism2) {
  Prism2.languages.cil = {
    comment: /\/\/.*/,
    string: {
      pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    directive: {
      pattern: /(^|\W)\.[a-z]+(?=\s)/,
      lookbehind: true,
      alias: "class-name"
    },
    variable: /\[[\w\.]+\]/,
    keyword: /\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\b/,
    function: /\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\.)?(?:conv\.(?:[iu][1248]?|ovf\.[iu][1248]?(?:\.un)?|r\.un|r4|r8)|ldc\.(?:i4(?:\.\d+|\.[mM]1|\.s)?|i8|r4|r8)|ldelem(?:\.[iu][1248]?|\.r[48]|\.ref|a)?|ldind\.(?:[iu][1248]?|r[48]|ref)|stelem\.?(?:i[1248]?|r[48]|ref)?|stind\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\.[0-3s]|a(?:\.s)?)?|ldloc(?:\.\d+|\.s)?|sub(?:\.ovf(?:\.un)?)?|mul(?:\.ovf(?:\.un)?)?|add(?:\.ovf(?:\.un)?)?|stloc(?:\.[0-3s])?|refany(?:type|val)|blt(?:\.un)?(?:\.s)?|ble(?:\.un)?(?:\.s)?|bgt(?:\.un)?(?:\.s)?|bge(?:\.un)?(?:\.s)?|unbox(?:\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\.s)?|bne\.un(?:\.s)?|ldloca(?:\.s)?|brzero(?:\.s)?|brtrue(?:\.s)?|brnull(?:\.s)?|brinst(?:\.s)?|starg(?:\.s)?|leave(?:\.s)?|shr(?:\.un)?|rem(?:\.un)?|div(?:\.un)?|clt(?:\.un)?|alignment|castclass|ldvirtftn|beq(?:\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\b/,
    boolean: /\b(?:false|true)\b/,
    number: /\b-?(?:0x[0-9a-f]+|\d+)(?:\.[0-9a-f]+)?\b/i,
    punctuation: /[{}[\];(),:=]|IL_[0-9A-Za-z]+/
  };
}
var clojure_1 = clojure;
clojure.displayName = "clojure";
clojure.aliases = [];
function clojure(Prism2) {
  Prism2.languages.clojure = {
    comment: {
      pattern: /;.*/,
      greedy: true
    },
    string: {
      pattern: /"(?:[^"\\]|\\.)*"/,
      greedy: true
    },
    char: /\\\w+/,
    symbol: {
      pattern: /(^|[\s()\[\]{},])::?[\w*+!?'<>=/.-]+/,
      lookbehind: true
    },
    keyword: {
      pattern: /(\()(?:-|->|->>|\.|\.\.|\*|\/|\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\?|ensure|eval|every\?|false\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\?|new|newline|next|nil\?|node|not|not-any\?|not-every\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\?|split-at|split-with|str|string\?|struct|struct-map|subs|subvec|symbol|symbol\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\?|vector|vector-zip|vector\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\?|zipmap|zipper)(?=[\s)]|$)/,
      lookbehind: true
    },
    boolean: /\b(?:false|nil|true)\b/,
    number: {
      pattern: /(^|[^\w$@])(?:\d+(?:[/.]\d+)?(?:e[+-]?\d+)?|0x[a-f0-9]+|[1-9]\d?r[a-z0-9]+)[lmn]?(?![\w$@])/i,
      lookbehind: true
    },
    function: {
      pattern: /((?:^|[^'])\()[\w*+!?'<>=/.-]+(?=[\s)]|$)/,
      lookbehind: true
    },
    operator: /[#@^`~]/,
    punctuation: /[{}\[\](),]/
  };
}
var cmake_1 = cmake;
cmake.displayName = "cmake";
cmake.aliases = [];
function cmake(Prism2) {
  Prism2.languages.cmake = {
    comment: /#.*/,
    string: {
      pattern: /"(?:[^\\"]|\\.)*"/,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /\$\{(?:[^{}$]|\$\{[^{}$]*\})*\}/,
          inside: {
            punctuation: /\$\{|\}/,
            variable: /\w+/
          }
        }
      }
    },
    variable: /\b(?:CMAKE_\w+|\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\b/,
    property: /\b(?:cxx_\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\w+|\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\b/,
    keyword: /\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\s*\()\b/,
    boolean: /\b(?:FALSE|OFF|ON|TRUE)\b/,
    namespace: /\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\b/,
    operator: /\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\b/,
    inserted: {
      pattern: /\b\w+::\w+\b/,
      alias: "class-name"
    },
    number: /\b\d+(?:\.\d+)*\b/,
    function: /\b[a-z_]\w*(?=\s*\()\b/i,
    punctuation: /[()>}]|\$[<{]/
  };
}
var cobol_1 = cobol;
cobol.displayName = "cobol";
cobol.aliases = [];
function cobol(Prism2) {
  Prism2.languages.cobol = {
    comment: {
      pattern: /\*>.*|(^[ \t]*)\*.*/m,
      lookbehind: true,
      greedy: true
    },
    string: {
      pattern: /[xzgn]?(?:"(?:[^\r\n"]|"")*"(?!")|'(?:[^\r\n']|'')*'(?!'))/i,
      greedy: true
    },
    level: {
      pattern: /(^[ \t]*)\d+\b/m,
      lookbehind: true,
      greedy: true,
      alias: "number"
    },
    "class-name": {
      pattern: /(\bpic(?:ture)?\s+)(?:(?:[-\w$/,:*+<>]|\.(?!\s|$))(?:\(\d+\))?)+/i,
      lookbehind: true,
      inside: {
        number: {
          pattern: /(\()\d+/,
          lookbehind: true
        },
        punctuation: /[()]/
      }
    },
    keyword: {
      pattern: /(^|[^\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\w-])/i,
      lookbehind: true
    },
    boolean: {
      pattern: /(^|[^\w-])(?:false|true)(?![\w-])/i,
      lookbehind: true
    },
    number: {
      pattern: /(^|[^\w-])(?:[+-]?(?:(?:\d+(?:[.,]\d+)?|[.,]\d+)(?:e[+-]?\d+)?|zero))(?![\w-])/i,
      lookbehind: true
    },
    operator: [
      /<>|[<>]=?|[=+*/&]/,
      {
        pattern: /(^|[^\w-])(?:-|and|equal|greater|less|not|or|than)(?![\w-])/i,
        lookbehind: true
      }
    ],
    punctuation: /[.:,()]/
  };
}
var coffeescript_1 = coffeescript;
coffeescript.displayName = "coffeescript";
coffeescript.aliases = ["coffee"];
function coffeescript(Prism2) {
  (function(Prism3) {
    var comment = /#(?!\{).+/;
    var interpolation = {
      pattern: /#\{[^}]+\}/,
      alias: "variable"
    };
    Prism3.languages.coffeescript = Prism3.languages.extend("javascript", {
      comment,
      string: [
        {
          pattern: /'(?:\\[\s\S]|[^\\'])*'/,
          greedy: true
        },
        {
          pattern: /"(?:\\[\s\S]|[^\\"])*"/,
          greedy: true,
          inside: {
            interpolation
          }
        }
      ],
      keyword: /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
      "class-member": {
        pattern: /@(?!\d)\w+/,
        alias: "variable"
      }
    });
    Prism3.languages.insertBefore("coffeescript", "comment", {
      "multiline-comment": {
        pattern: /###[\s\S]+?###/,
        alias: "comment"
      },
      "block-regex": {
        pattern: /\/{3}[\s\S]*?\/{3}/,
        alias: "regex",
        inside: {
          comment,
          interpolation
        }
      }
    });
    Prism3.languages.insertBefore("coffeescript", "string", {
      "inline-javascript": {
        pattern: /`(?:\\[\s\S]|[^\\`])*`/,
        inside: {
          delimiter: {
            pattern: /^`|`$/,
            alias: "punctuation"
          },
          script: {
            pattern: /[\s\S]+/,
            alias: "language-javascript",
            inside: Prism3.languages.javascript
          }
        }
      },
      "multiline-string": [
        {
          pattern: /'''[\s\S]*?'''/,
          greedy: true,
          alias: "string"
        },
        {
          pattern: /"""[\s\S]*?"""/,
          greedy: true,
          alias: "string",
          inside: {
            interpolation
          }
        }
      ]
    });
    Prism3.languages.insertBefore("coffeescript", "keyword", {
      property: /(?!\d)\w+(?=\s*:(?!:))/
    });
    delete Prism3.languages.coffeescript["template-string"];
    Prism3.languages.coffee = Prism3.languages.coffeescript;
  })(Prism2);
}
var concurnas_1 = concurnas;
concurnas.displayName = "concurnas";
concurnas.aliases = ["conc"];
function concurnas(Prism2) {
  Prism2.languages.concurnas = {
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*)/,
      lookbehind: true,
      greedy: true
    },
    langext: {
      pattern: /\b\w+\s*\|\|[\s\S]+?\|\|/,
      greedy: true,
      inside: {
        "class-name": /^\w+/,
        string: {
          pattern: /(^\s*\|\|)[\s\S]+(?=\|\|$)/,
          lookbehind: true
        },
        punctuation: /\|\|/
      }
    },
    function: {
      pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/,
      lookbehind: true
    },
    keyword: /\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\b/,
    boolean: /\b(?:false|true)\b/,
    number: /\b0b[01][01_]*L?\b|\b0x(?:[\da-f_]*\.)?[\da-f_p+-]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfls]?/i,
    punctuation: /[{}[\];(),.:]/,
    operator: /<==|>==|=>|->|<-|<>|&==|&<>|\?:?|\.\?|\+\+|--|[-+*/=<>]=?|[!^~]|\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\b=?/,
    annotation: {
      pattern: /@(?:\w+:)?(?:\w+|\[[^\]]+\])?/,
      alias: "builtin"
    }
  };
  Prism2.languages.insertBefore("concurnas", "langext", {
    "regex-literal": {
      pattern: /\br("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
          lookbehind: true,
          inside: Prism2.languages.concurnas
        },
        regex: /[\s\S]+/
      }
    },
    "string-literal": {
      pattern: /(?:\B|\bs)("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /((?:^|[^\\])(?:\\{2})*)\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
          lookbehind: true,
          inside: Prism2.languages.concurnas
        },
        string: /[\s\S]+/
      }
    }
  });
  Prism2.languages.conc = Prism2.languages.concurnas;
}
var coq_1 = coq;
coq.displayName = "coq";
coq.aliases = [];
function coq(Prism2) {
  (function(Prism3) {
    var commentSource = /\(\*(?:[^(*]|\((?!\*)|\*(?!\))|<self>)*\*\)/.source;
    for (var i2 = 0; i2 < 2; i2++) {
      commentSource = commentSource.replace(/<self>/g, function() {
        return commentSource;
      });
    }
    commentSource = commentSource.replace(/<self>/g, "[]");
    Prism3.languages.coq = {
      comment: RegExp(commentSource),
      string: {
        pattern: /"(?:[^"]|"")*"(?!")/,
        greedy: true
      },
      attribute: [
        {
          pattern: RegExp(/#\[(?:[^\[\]("]|"(?:[^"]|"")*"(?!")|\((?!\*)|<comment>)*\]/.source.replace(/<comment>/g, function() {
            return commentSource;
          })),
          greedy: true,
          alias: "attr-name",
          inside: {
            comment: RegExp(commentSource),
            string: {
              pattern: /"(?:[^"]|"")*"(?!")/,
              greedy: true
            },
            operator: /=/,
            punctuation: /^#\[|\]$|[,()]/
          }
        },
        {
          pattern: /\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\b/,
          alias: "attr-name"
        }
      ],
      keyword: /\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\b/,
      number: /\b(?:0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]+)?(?:p[+-]?\d[\d_]*)?|\d[\d_]*(?:\.[\d_]+)?(?:e[+-]?\d[\d_]*)?)\b/i,
      punct: {
        pattern: /@\{|\{\||\[=|:>/,
        alias: "punctuation"
      },
      operator: /\/\\|\\\/|\.{2,3}|:{1,2}=|\*\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\|[-|]?|[-!%&*+/<=>?@^~']/,
      punctuation: /\.\(|`\(|@\{|`\{|\{\||\[=|:>|[:.,;(){}\[\]]/
    };
  })(Prism2);
}
var ruby_1 = ruby;
ruby.displayName = "ruby";
ruby.aliases = ["rb"];
function ruby(Prism2) {
  (function(Prism3) {
    Prism3.languages.ruby = Prism3.languages.extend("clike", {
      comment: {
        pattern: /#.*|^=begin\s[\s\S]*?^=end/m,
        greedy: true
      },
      "class-name": {
        pattern: /(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,
        lookbehind: true,
        inside: {
          punctuation: /[.\\]/
        }
      },
      keyword: /\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,
      operator: /\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,
      punctuation: /[(){}[\].,;]/
    });
    Prism3.languages.insertBefore("ruby", "operator", {
      "double-colon": {
        pattern: /::/,
        alias: "punctuation"
      }
    });
    var interpolation = {
      pattern: /((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,
      lookbehind: true,
      inside: {
        content: {
          pattern: /^(#\{)[\s\S]+(?=\}$)/,
          lookbehind: true,
          inside: Prism3.languages.ruby
        },
        delimiter: {
          pattern: /^#\{|\}$/,
          alias: "punctuation"
        }
      }
    };
    delete Prism3.languages.ruby.function;
    var percentExpression = "(?:" + [
      /([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
      /\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/.source,
      /\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/.source,
      /\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/.source,
      /<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/.source
    ].join("|") + ")";
    var symbolName = /(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/.source;
    Prism3.languages.insertBefore("ruby", "keyword", {
      "regex-literal": [
        {
          pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),
          greedy: true,
          inside: {
            interpolation,
            regex: /[\s\S]+/
          }
        },
        {
          pattern: /(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,
          lookbehind: true,
          greedy: true,
          inside: {
            interpolation,
            regex: /[\s\S]+/
          }
        }
      ],
      variable: /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
      symbol: [
        {
          pattern: RegExp(/(^|[^:]):/.source + symbolName),
          lookbehind: true,
          greedy: true
        },
        {
          pattern: RegExp(/([\r\n{(,][ \t]*)/.source + symbolName + /(?=:(?!:))/.source),
          lookbehind: true,
          greedy: true
        }
      ],
      "method-definition": {
        pattern: /(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,
        lookbehind: true,
        inside: {
          function: /\b\w+$/,
          keyword: /^self\b/,
          "class-name": /^\w+/,
          punctuation: /\./
        }
      }
    });
    Prism3.languages.insertBefore("ruby", "string", {
      "string-literal": [
        {
          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),
          greedy: true,
          inside: {
            interpolation,
            string: /[\s\S]+/
          }
        },
        {
          pattern: /("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,
          greedy: true,
          inside: {
            interpolation,
            string: /[\s\S]+/
          }
        },
        {
          pattern: /<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
          alias: "heredoc-string",
          greedy: true,
          inside: {
            delimiter: {
              pattern: /^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,
              inside: {
                symbol: /\b\w+/,
                punctuation: /^<<[-~]?/
              }
            },
            interpolation,
            string: /[\s\S]+/
          }
        },
        {
          pattern: /<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
          alias: "heredoc-string",
          greedy: true,
          inside: {
            delimiter: {
              pattern: /^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,
              inside: {
                symbol: /\b\w+/,
                punctuation: /^<<[-~]?'|'$/
              }
            },
            string: /[\s\S]+/
          }
        }
      ],
      "command-literal": [
        {
          pattern: RegExp(/%x/.source + percentExpression),
          greedy: true,
          inside: {
            interpolation,
            command: {
              pattern: /[\s\S]+/,
              alias: "string"
            }
          }
        },
        {
          pattern: /`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,
          greedy: true,
          inside: {
            interpolation,
            command: {
              pattern: /[\s\S]+/,
              alias: "string"
            }
          }
        }
      ]
    });
    delete Prism3.languages.ruby.string;
    Prism3.languages.insertBefore("ruby", "number", {
      builtin: /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,
      constant: /\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/
    });
    Prism3.languages.rb = Prism3.languages.ruby;
  })(Prism2);
}
var refractorRuby$2 = ruby_1;
var crystal_1 = crystal;
crystal.displayName = "crystal";
crystal.aliases = [];
function crystal(Prism2) {
  Prism2.register(refractorRuby$2);
  (function(Prism3) {
    Prism3.languages.crystal = Prism3.languages.extend("ruby", {
      keyword: [
        /\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\b/,
        {
          pattern: /(\.\s*)(?:is_a|responds_to)\?/,
          lookbehind: true
        }
      ],
      number: /\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\da-fA-F_]*[\da-fA-F]|(?:\d(?:[\d_]*\d)?)(?:\.[\d_]*\d)?(?:[eE][+-]?[\d_]*\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\b/,
      operator: [/->/, Prism3.languages.ruby.operator],
      punctuation: /[(){}[\].,;\\]/
    });
    Prism3.languages.insertBefore("crystal", "string-literal", {
      attribute: {
        pattern: /@\[.*?\]/,
        inside: {
          delimiter: {
            pattern: /^@\[|\]$/,
            alias: "punctuation"
          },
          attribute: {
            pattern: /^(\s*)\w+/,
            lookbehind: true,
            alias: "class-name"
          },
          args: {
            pattern: /\S(?:[\s\S]*\S)?/,
            inside: Prism3.languages.crystal
          }
        }
      },
      expansion: {
        pattern: /\{(?:\{.*?\}|%.*?%)\}/,
        inside: {
          content: {
            pattern: /^(\{.)[\s\S]+(?=.\}$)/,
            lookbehind: true,
            inside: Prism3.languages.crystal
          },
          delimiter: {
            pattern: /^\{[\{%]|[\}%]\}$/,
            alias: "operator"
          }
        }
      },
      char: {
        pattern: /'(?:[^\\\r\n]{1,2}|\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\{[A-Fa-f0-9]{1,6}\})))'/,
        greedy: true
      }
    });
  })(Prism2);
}
var refractorCsharp$1 = csharp_1;
var cshtml_1 = cshtml;
cshtml.displayName = "cshtml";
cshtml.aliases = ["razor"];
function cshtml(Prism2) {
  Prism2.register(refractorCsharp$1);
  (function(Prism3) {
    var commentLike = /\/(?![/*])|\/\/.*[\r\n]|\/\*[^*]*(?:\*(?!\/)[^*]*)*\*\//.source;
    var stringLike = /@(?!")|"(?:[^\r\n\\"]|\\.)*"|@"(?:[^\\"]|""|\\[\s\S])*"(?!")/.source + "|" + /'(?:(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'|(?=[^\\](?!')))/.source;
    function nested(pattern, depthLog2) {
      for (var i2 = 0; i2 < depthLog2; i2++) {
        pattern = pattern.replace(/<self>/g, function() {
          return "(?:" + pattern + ")";
        });
      }
      return pattern.replace(/<self>/g, "[^\\s\\S]").replace(/<str>/g, "(?:" + stringLike + ")").replace(/<comment>/g, "(?:" + commentLike + ")");
    }
    var round = nested(/\((?:[^()'"@/]|<str>|<comment>|<self>)*\)/.source, 2);
    var square = nested(/\[(?:[^\[\]'"@/]|<str>|<comment>|<self>)*\]/.source, 2);
    var curly = nested(/\{(?:[^{}'"@/]|<str>|<comment>|<self>)*\}/.source, 2);
    var angle = nested(/<(?:[^<>'"@/]|<str>|<comment>|<self>)*>/.source, 2);
    var tagAttrs = /(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?/.source;
    var tagContent = /(?!\d)[^\s>\/=$<%]+/.source + tagAttrs + /\s*\/?>/.source;
    var tagRegion = /\B@?/.source + "(?:" + /<([a-zA-Z][\w:]*)/.source + tagAttrs + /\s*>/.source + "(?:" + (/[^<]/.source + "|" + /<\/?(?!\1\b)/.source + tagContent + "|" + nested(/<\1/.source + tagAttrs + /\s*>/.source + "(?:" + (/[^<]/.source + "|" + /<\/?(?!\1\b)/.source + tagContent + "|<self>") + ")*" + /<\/\1\s*>/.source, 2)) + ")*" + /<\/\1\s*>/.source + "|" + /</.source + tagContent + ")";
    Prism3.languages.cshtml = Prism3.languages.extend("markup", {});
    var csharpWithHtml = Prism3.languages.insertBefore("csharp", "string", {
      html: {
        pattern: RegExp(tagRegion),
        greedy: true,
        inside: Prism3.languages.cshtml
      }
    }, {
      csharp: Prism3.languages.extend("csharp", {})
    });
    var cs = {
      pattern: /\S[\s\S]*/,
      alias: "language-csharp",
      inside: csharpWithHtml
    };
    Prism3.languages.insertBefore("cshtml", "prolog", {
      "razor-comment": {
        pattern: /@\*[\s\S]*?\*@/,
        greedy: true,
        alias: "comment"
      },
      block: {
        pattern: RegExp(/(^|[^@])@/.source + "(?:" + [
          curly,
          /(?:code|functions)\s*/.source + curly,
          /(?:for|foreach|lock|switch|using|while)\s*/.source + round + /\s*/.source + curly,
          /do\s*/.source + curly + /\s*while\s*/.source + round + /(?:\s*;)?/.source,
          /try\s*/.source + curly + /\s*catch\s*/.source + round + /\s*/.source + curly + /\s*finally\s*/.source + curly,
          /if\s*/.source + round + /\s*/.source + curly + "(?:" + /\s*else/.source + "(?:" + /\s+if\s*/.source + round + ")?" + /\s*/.source + curly + ")*"
        ].join("|") + ")"),
        lookbehind: true,
        greedy: true,
        inside: {
          keyword: /^@\w*/,
          csharp: cs
        }
      },
      directive: {
        pattern: /^([ \t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\s).*/m,
        lookbehind: true,
        greedy: true,
        inside: {
          keyword: /^@\w+/,
          csharp: cs
        }
      },
      value: {
        pattern: RegExp(/(^|[^@])@/.source + /(?:await\b\s*)?/.source + "(?:" + /\w+\b/.source + "|" + round + ")(?:" + /[?!]?\.\w+\b/.source + "|" + round + "|" + square + "|" + angle + round + ")*"),
        lookbehind: true,
        greedy: true,
        alias: "variable",
        inside: {
          keyword: /^@/,
          csharp: cs
        }
      },
      "delegate-operator": {
        pattern: /(^|[^@])@(?=<)/,
        lookbehind: true,
        alias: "operator"
      }
    });
    Prism3.languages.razor = Prism3.languages.cshtml;
  })(Prism2);
}
var csp_1 = csp;
csp.displayName = "csp";
csp.aliases = [];
function csp(Prism2) {
  (function(Prism3) {
    function value2(source) {
      return RegExp(/([ \t])/.source + "(?:" + source + ")" + /(?=[\s;]|$)/.source, "i");
    }
    Prism3.languages.csp = {
      directive: {
        pattern: /(^|[\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\s;]|$)/i,
        lookbehind: true,
        alias: "property"
      },
      scheme: {
        pattern: value2(/[a-z][a-z0-9.+-]*:/.source),
        lookbehind: true
      },
      none: {
        pattern: value2(/'none'/.source),
        lookbehind: true,
        alias: "keyword"
      },
      nonce: {
        pattern: value2(/'nonce-[-+/\w=]+'/.source),
        lookbehind: true,
        alias: "number"
      },
      hash: {
        pattern: value2(/'sha(?:256|384|512)-[-+/\w=]+'/.source),
        lookbehind: true,
        alias: "number"
      },
      host: {
        pattern: value2(/[a-z][a-z0-9.+-]*:\/\/[^\s;,']*/.source + "|" + /\*[^\s;,']*/.source + "|" + /[a-z0-9-]+(?:\.[a-z0-9-]+)+(?::[\d*]+)?(?:\/[^\s;,']*)?/.source),
        lookbehind: true,
        alias: "url",
        inside: {
          important: /\*/
        }
      },
      keyword: [
        {
          pattern: value2(/'unsafe-[a-z-]+'/.source),
          lookbehind: true,
          alias: "unsafe"
        },
        {
          pattern: value2(/'[a-z-]+'/.source),
          lookbehind: true,
          alias: "safe"
        }
      ],
      punctuation: /;/
    };
  })(Prism2);
}
var cssExtras_1 = cssExtras;
cssExtras.displayName = "cssExtras";
cssExtras.aliases = [];
function cssExtras(Prism2) {
  (function(Prism3) {
    var string2 = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;
    var selectorInside;
    Prism3.languages.css.selector = {
      pattern: Prism3.languages.css.selector.pattern,
      lookbehind: true,
      inside: selectorInside = {
        "pseudo-element": /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
        "pseudo-class": /:[-\w]+/,
        class: /\.[-\w]+/,
        id: /#[-\w]+/,
        attribute: {
          pattern: RegExp(`\\[(?:[^[\\]"']|` + string2.source + ")*\\]"),
          greedy: true,
          inside: {
            punctuation: /^\[|\]$/,
            "case-sensitivity": {
              pattern: /(\s)[si]$/i,
              lookbehind: true,
              alias: "keyword"
            },
            namespace: {
              pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,
              lookbehind: true,
              inside: {
                punctuation: /\|$/
              }
            },
            "attr-name": {
              pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,
              lookbehind: true
            },
            "attr-value": [
              string2,
              {
                pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,
                lookbehind: true
              }
            ],
            operator: /[|~*^$]?=/
          }
        },
        "n-th": [
          {
            pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,
            lookbehind: true,
            inside: {
              number: /[\dn]+/,
              operator: /[+-]/
            }
          },
          {
            pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i,
            lookbehind: true
          }
        ],
        combinator: />|\+|~|\|\|/,
        punctuation: /[(),]/
      }
    };
    Prism3.languages.css["atrule"].inside["selector-function-argument"].inside = selectorInside;
    Prism3.languages.insertBefore("css", "property", {
      variable: {
        pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,
        lookbehind: true
      }
    });
    var unit = {
      pattern: /(\b\d+)(?:%|[a-z]+(?![\w-]))/,
      lookbehind: true
    };
    var number2 = {
      pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
      lookbehind: true
    };
    Prism3.languages.insertBefore("css", "function", {
      operator: {
        pattern: /(\s)[+\-*\/](?=\s)/,
        lookbehind: true
      },
      hexcode: {
        pattern: /\B#[\da-f]{3,8}\b/i,
        alias: "color"
      },
      color: [
        {
          pattern: /(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,
          lookbehind: true
        },
        {
          pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
          inside: {
            unit,
            number: number2,
            function: /[\w-]+(?=\()/,
            punctuation: /[(),]/
          }
        }
      ],
      entity: /\\[\da-f]{1,8}/i,
      unit,
      number: number2
    });
  })(Prism2);
}
var csv_1 = csv;
csv.displayName = "csv";
csv.aliases = [];
function csv(Prism2) {
  Prism2.languages.csv = {
    value: /[^\r\n,"]+|"(?:[^"]|"")*"(?!")/,
    punctuation: /,/
  };
}
var cypher_1 = cypher;
cypher.displayName = "cypher";
cypher.aliases = [];
function cypher(Prism2) {
  Prism2.languages.cypher = {
    comment: /\/\/.*/,
    string: {
      pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/,
      greedy: true
    },
    "class-name": {
      pattern: /(:\s*)(?:\w+|`(?:[^`\\\r\n])*`)(?=\s*[{):])/,
      lookbehind: true,
      greedy: true
    },
    relationship: {
      pattern: /(-\[\s*(?:\w+\s*|`(?:[^`\\\r\n])*`\s*)?:\s*|\|\s*:\s*)(?:\w+|`(?:[^`\\\r\n])*`)/,
      lookbehind: true,
      greedy: true,
      alias: "property"
    },
    identifier: {
      pattern: /`(?:[^`\\\r\n])*`/,
      greedy: true
    },
    variable: /\$\w+/,
    keyword: /\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\b/i,
    function: /\b\w+\b(?=\s*\()/,
    boolean: /\b(?:false|null|true)\b/i,
    number: /\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:[eE][+-]?\d+)?)\b/,
    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\.\.\.?/,
    punctuation: /[()[\]{},;.]/
  };
}
var d_1 = d;
d.displayName = "d";
d.aliases = [];
function d(Prism2) {
  Prism2.languages.d = Prism2.languages.extend("clike", {
    comment: [
      {
        pattern: /^\s*#!.+/,
        greedy: true
      },
      {
        pattern: RegExp(/(^|[^\\])/.source + "(?:" + [
          /\/\+(?:\/\+(?:[^+]|\+(?!\/))*\+\/|(?!\/\+)[\s\S])*?\+\//.source,
          /\/\/.*/.source,
          /\/\*[\s\S]*?\*\//.source
        ].join("|") + ")"),
        lookbehind: true,
        greedy: true
      }
    ],
    string: [
      {
        pattern: RegExp([
          /\b[rx]"(?:\\[\s\S]|[^\\"])*"[cwd]?/.source,
          /\bq"(?:\[[\s\S]*?\]|\([\s\S]*?\)|<[\s\S]*?>|\{[\s\S]*?\})"/.source,
          /\bq"((?!\d)\w+)$[\s\S]*?^\1"/.source,
          /\bq"(.)[\s\S]*?\2"/.source,
          /(["`])(?:\\[\s\S]|(?!\3)[^\\])*\3[cwd]?/.source
        ].join("|"), "m"),
        greedy: true
      },
      {
        pattern: /\bq\{(?:\{[^{}]*\}|[^{}])*\}/,
        greedy: true,
        alias: "token-string"
      }
    ],
    keyword: /\$|\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\b/,
    number: [
      /\b0x\.?[a-f\d_]+(?:(?!\.\.)\.[a-f\d_]*)?(?:p[+-]?[a-f\d_]+)?[ulfi]{0,4}/i,
      {
        pattern: /((?:\.\.)?)(?:\b0b\.?|\b|\.)\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:e[+-]?\d[\d_]*)?[ulfi]{0,4}/i,
        lookbehind: true
      }
    ],
    operator: /\|[|=]?|&[&=]?|\+[+=]?|-[-=]?|\.?\.\.|=[>=]?|!(?:i[ns]\b|<>?=?|>=?|=)?|\bi[ns]\b|(?:<[<>]?|>>?>?|\^\^|[*\/%^~])=?/
  });
  Prism2.languages.insertBefore("d", "string", {
    char: /'(?:\\(?:\W|\w+)|[^\\])'/
  });
  Prism2.languages.insertBefore("d", "keyword", {
    property: /\B@\w*/
  });
  Prism2.languages.insertBefore("d", "function", {
    register: {
      pattern: /\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\d))\b|\bST(?:\([0-7]\)|\b)/,
      alias: "variable"
    }
  });
}
var dart_1 = dart;
dart.displayName = "dart";
dart.aliases = [];
function dart(Prism2) {
  (function(Prism3) {
    var keywords = [
      /\b(?:async|sync|yield)\*/,
      /\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\b/
    ];
    var packagePrefix = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source;
    var className = {
      pattern: RegExp(packagePrefix + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
      lookbehind: true,
      inside: {
        namespace: {
          pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
          inside: {
            punctuation: /\./
          }
        }
      }
    };
    Prism3.languages.dart = Prism3.languages.extend("clike", {
      "class-name": [
        className,
        {
          pattern: RegExp(packagePrefix + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),
          lookbehind: true,
          inside: className.inside
        }
      ],
      keyword: keywords,
      operator: /\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/
    });
    Prism3.languages.insertBefore("dart", "string", {
      "string-literal": {
        pattern: /r?(?:("""|''')[\s\S]*?\1|(["'])(?:\\.|(?!\2)[^\\\r\n])*\2(?!\2))/,
        greedy: true,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
            lookbehind: true,
            inside: {
              punctuation: /^\$\{?|\}$/,
              expression: {
                pattern: /[\s\S]+/,
                inside: Prism3.languages.dart
              }
            }
          },
          string: /[\s\S]+/
        }
      },
      string: void 0
    });
    Prism3.languages.insertBefore("dart", "class-name", {
      metadata: {
        pattern: /@\w+/,
        alias: "function"
      }
    });
    Prism3.languages.insertBefore("dart", "class-name", {
      generics: {
        pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,
        inside: {
          "class-name": className,
          keyword: keywords,
          punctuation: /[<>(),.:]/,
          operator: /[?&|]/
        }
      }
    });
  })(Prism2);
}
var dataweave_1 = dataweave;
dataweave.displayName = "dataweave";
dataweave.aliases = [];
function dataweave(Prism2) {
  (function(Prism3) {
    Prism3.languages.dataweave = {
      url: /\b[A-Za-z]+:\/\/[\w/:.?=&-]+|\burn:[\w:.?=&-]+/,
      property: {
        pattern: /(?:\b\w+#)?(?:"(?:\\.|[^\\"\r\n])*"|\b\w+)(?=\s*[:@])/,
        greedy: true
      },
      string: {
        pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
        greedy: true
      },
      "mime-type": /\b(?:application|audio|image|multipart|text|video)\/[\w+-]+/,
      date: {
        pattern: /\|[\w:+-]+\|/,
        greedy: true
      },
      comment: [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: true,
          greedy: true
        }
      ],
      regex: {
        pattern: /\/(?:[^\\\/\r\n]|\\[^\r\n])+\//,
        greedy: true
      },
      keyword: /\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\b/,
      function: /\b[A-Z_]\w*(?=\s*\()/i,
      number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
      punctuation: /[{}[\];(),.:@]/,
      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\+\+?|!|\?/,
      boolean: /\b(?:false|true)\b/
    };
  })(Prism2);
}
var dax_1 = dax;
dax.displayName = "dax";
dax.aliases = [];
function dax(Prism2) {
  Prism2.languages.dax = {
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/).*)/,
      lookbehind: true
    },
    "data-field": {
      pattern: /'(?:[^']|'')*'(?!')(?:\[[ \w\xA0-\uFFFF]+\])?|\w+\[[ \w\xA0-\uFFFF]+\]/,
      alias: "symbol"
    },
    measure: {
      pattern: /\[[ \w\xA0-\uFFFF]+\]/,
      alias: "constant"
    },
    string: {
      pattern: /"(?:[^"]|"")*"(?!")/,
      greedy: true
    },
    function: /\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\.DIST|BETA\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\.DIST|CHISQ\.DIST\.RT|CHISQ\.INV|CHISQ\.INV\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\.NORM|CONFIDENCE\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\.DIST|NORM\.INV|NORM\.S\.DIST|NORM\.S\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\.EXC|PERCENTILE\.INC|PERCENTILEX\.EXC|PERCENTILEX\.INC|PERMUT|PI|POISSON\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\.P|STDEV\.S|STDEVX\.P|STDEVX\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\.DIST|T\.DIST\.2T|T\.DIST\.RT|T\.INV|T\.INV\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\.P|VAR\.S|VARX\.P|VARX\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\s*\()/i,
    keyword: /\b(?:DEFINE|EVALUATE|MEASURE|ORDER\s+BY|RETURN|VAR|START\s+AT|ASC|DESC)\b/i,
    boolean: {
      pattern: /\b(?:FALSE|NULL|TRUE)\b/i,
      alias: "constant"
    },
    number: /\b\d+(?:\.\d*)?|\B\.\d+\b/,
    operator: /:=|[-+*\/=^]|&&?|\|\||<(?:=>?|<|>)?|>[>=]?|\b(?:IN|NOT)\b/i,
    punctuation: /[;\[\](){}`,.]/
  };
}
var dhall_1 = dhall;
dhall.displayName = "dhall";
dhall.aliases = [];
function dhall(Prism2) {
  Prism2.languages.dhall = {
    comment: /--.*|\{-(?:[^-{]|-(?!\})|\{(?!-)|\{-(?:[^-{]|-(?!\})|\{(?!-))*-\})*-\}/,
    string: {
      pattern: /"(?:[^"\\]|\\.)*"|''(?:[^']|'(?!')|'''|''\$\{)*''(?!'|\$)/,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /\$\{[^{}]*\}/,
          inside: {
            expression: {
              pattern: /(^\$\{)[\s\S]+(?=\}$)/,
              lookbehind: true,
              alias: "language-dhall",
              inside: null
            },
            punctuation: /\$\{|\}/
          }
        }
      }
    },
    label: {
      pattern: /`[^`]*`/,
      greedy: true
    },
    url: {
      pattern: /\bhttps?:\/\/[\w.:%!$&'*+;=@~-]+(?:\/[\w.:%!$&'*+;=@~-]*)*(?:\?[/?\w.:%!$&'*+;=@~-]*)?/,
      greedy: true
    },
    env: {
      pattern: /\benv:(?:(?!\d)\w+|"(?:[^"\\=]|\\.)*")/,
      greedy: true,
      inside: {
        function: /^env/,
        operator: /^:/,
        variable: /[\s\S]+/
      }
    },
    hash: {
      pattern: /\bsha256:[\da-fA-F]{64}\b/,
      inside: {
        function: /sha256/,
        operator: /:/,
        number: /[\da-fA-F]{64}/
      }
    },
    keyword: /\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\b|\u2200/,
    builtin: /\b(?:None|Some)\b/,
    boolean: /\b(?:False|True)\b/,
    number: /\bNaN\b|-?\bInfinity\b|[+-]?\b(?:0x[\da-fA-F]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/,
    operator: /\/\\|\/\/\\\\|&&|\|\||===|[!=]=|\/\/|->|\+\+|::|[+*#@=:?<>|\\\u2227\u2a53\u2261\u2afd\u03bb\u2192]/,
    punctuation: /\.\.|[{}\[\](),./]/,
    "class-name": /\b[A-Z]\w*\b/
  };
  Prism2.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism2.languages.dhall;
}
var diff_1 = diff;
diff.displayName = "diff";
diff.aliases = [];
function diff(Prism2) {
  (function(Prism3) {
    Prism3.languages.diff = {
      coord: [
        /^(?:\*{3}|-{3}|\+{3}).*$/m,
        /^@@.*@@$/m,
        /^\d.*$/m
      ]
    };
    var PREFIXES = {
      "deleted-sign": "-",
      "deleted-arrow": "<",
      "inserted-sign": "+",
      "inserted-arrow": ">",
      unchanged: " ",
      diff: "!"
    };
    Object.keys(PREFIXES).forEach(function(name2) {
      var prefix2 = PREFIXES[name2];
      var alias2 = [];
      if (!/^\w+$/.test(name2)) {
        alias2.push(/\w+/.exec(name2)[0]);
      }
      if (name2 === "diff") {
        alias2.push("bold");
      }
      Prism3.languages.diff[name2] = {
        pattern: RegExp("^(?:[" + prefix2 + "].*(?:\r\n?|\n|(?![\\s\\S])))+", "m"),
        alias: alias2,
        inside: {
          line: {
            pattern: /(.)(?=[\s\S]).*(?:\r\n?|\n)?/,
            lookbehind: true
          },
          prefix: {
            pattern: /[\s\S]/,
            alias: /\w+/.exec(name2)[0]
          }
        }
      };
    });
    Object.defineProperty(Prism3.languages.diff, "PREFIXES", {
      value: PREFIXES
    });
  })(Prism2);
}
var markupTemplating_1 = markupTemplating;
markupTemplating.displayName = "markupTemplating";
markupTemplating.aliases = [];
function markupTemplating(Prism2) {
  (function(Prism3) {
    function getPlaceholder(language, index) {
      return "___" + language.toUpperCase() + index + "___";
    }
    Object.defineProperties(Prism3.languages["markup-templating"] = {}, {
      buildPlaceholders: {
        value: function(env, language, placeholderPattern, replaceFilter) {
          if (env.language !== language) {
            return;
          }
          var tokenStack = env.tokenStack = [];
          env.code = env.code.replace(placeholderPattern, function(match2) {
            if (typeof replaceFilter === "function" && !replaceFilter(match2)) {
              return match2;
            }
            var i2 = tokenStack.length;
            var placeholder;
            while (env.code.indexOf(placeholder = getPlaceholder(language, i2)) !== -1) {
              ++i2;
            }
            tokenStack[i2] = match2;
            return placeholder;
          });
          env.grammar = Prism3.languages.markup;
        }
      },
      tokenizePlaceholders: {
        value: function(env, language) {
          if (env.language !== language || !env.tokenStack) {
            return;
          }
          env.grammar = Prism3.languages[language];
          var j2 = 0;
          var keys2 = Object.keys(env.tokenStack);
          function walkTokens(tokens) {
            for (var i2 = 0; i2 < tokens.length; i2++) {
              if (j2 >= keys2.length) {
                break;
              }
              var token2 = tokens[i2];
              if (typeof token2 === "string" || token2.content && typeof token2.content === "string") {
                var k2 = keys2[j2];
                var t2 = env.tokenStack[k2];
                var s2 = typeof token2 === "string" ? token2 : token2.content;
                var placeholder = getPlaceholder(language, k2);
                var index = s2.indexOf(placeholder);
                if (index > -1) {
                  ++j2;
                  var before = s2.substring(0, index);
                  var middle = new Prism3.Token(language, Prism3.tokenize(t2, env.grammar), "language-" + language, t2);
                  var after = s2.substring(index + placeholder.length);
                  var replacement = [];
                  if (before) {
                    replacement.push.apply(replacement, walkTokens([before]));
                  }
                  replacement.push(middle);
                  if (after) {
                    replacement.push.apply(replacement, walkTokens([after]));
                  }
                  if (typeof token2 === "string") {
                    tokens.splice.apply(tokens, [i2, 1].concat(replacement));
                  } else {
                    token2.content = replacement;
                  }
                }
              } else if (token2.content) {
                walkTokens(token2.content);
              }
            }
            return tokens;
          }
          walkTokens(env.tokens);
        }
      }
    });
  })(Prism2);
}
var refractorMarkupTemplating$c = markupTemplating_1;
var django_1 = django;
django.displayName = "django";
django.aliases = ["jinja2"];
function django(Prism2) {
  Prism2.register(refractorMarkupTemplating$c);
  (function(Prism3) {
    Prism3.languages.django = {
      comment: /^\{#[\s\S]*?#\}$/,
      tag: {
        pattern: /(^\{%[+-]?\s*)\w+/,
        lookbehind: true,
        alias: "keyword"
      },
      delimiter: {
        pattern: /^\{[{%][+-]?|[+-]?[}%]\}$/,
        alias: "punctuation"
      },
      string: {
        pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: true
      },
      filter: {
        pattern: /(\|)\w+/,
        lookbehind: true,
        alias: "function"
      },
      test: {
        pattern: /(\bis\s+(?:not\s+)?)(?!not\b)\w+/,
        lookbehind: true,
        alias: "function"
      },
      function: /\b[a-z_]\w+(?=\s*\()/i,
      keyword: /\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\b/,
      operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
      number: /\b\d+(?:\.\d+)?\b/,
      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,
      variable: /\b\w+\b/,
      punctuation: /[{}[\](),.:;]/
    };
    var pattern = /\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}|\{#[\s\S]*?#\}/g;
    var markupTemplating2 = Prism3.languages["markup-templating"];
    Prism3.hooks.add("before-tokenize", function(env) {
      markupTemplating2.buildPlaceholders(env, "django", pattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      markupTemplating2.tokenizePlaceholders(env, "django");
    });
    Prism3.languages.jinja2 = Prism3.languages.django;
    Prism3.hooks.add("before-tokenize", function(env) {
      markupTemplating2.buildPlaceholders(env, "jinja2", pattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      markupTemplating2.tokenizePlaceholders(env, "jinja2");
    });
  })(Prism2);
}
var dnsZoneFile_1 = dnsZoneFile;
dnsZoneFile.displayName = "dnsZoneFile";
dnsZoneFile.aliases = [];
function dnsZoneFile(Prism2) {
  Prism2.languages["dns-zone-file"] = {
    comment: /;.*/,
    string: {
      pattern: /"(?:\\.|[^"\\\r\n])*"/,
      greedy: true
    },
    variable: [
      {
        pattern: /(^\$ORIGIN[ \t]+)\S+/m,
        lookbehind: true
      },
      {
        pattern: /(^|\s)@(?=\s|$)/,
        lookbehind: true
      }
    ],
    keyword: /^\$(?:INCLUDE|ORIGIN|TTL)(?=\s|$)/m,
    class: {
      pattern: /(^|\s)(?:CH|CS|HS|IN)(?=\s|$)/,
      lookbehind: true,
      alias: "keyword"
    },
    type: {
      pattern: /(^|\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\s|$)/,
      lookbehind: true,
      alias: "keyword"
    },
    punctuation: /[()]/
  };
  Prism2.languages["dns-zone"] = Prism2.languages["dns-zone-file"];
}
var docker_1 = docker;
docker.displayName = "docker";
docker.aliases = ["dockerfile"];
function docker(Prism2) {
  (function(Prism3) {
    var spaceAfterBackSlash = /\\[\r\n](?:\s|\\[\r\n]|#.*(?!.))*(?![\s#]|\\[\r\n])/.source;
    var space2 = /(?:[ \t]+(?![ \t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g, function() {
      return spaceAfterBackSlash;
    });
    var string2 = /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"|'(?:[^'\\\r\n]|\\(?:\r\n|[\s\S]))*'/.source;
    var option = /--[\w-]+=(?:<STR>|(?!["'])(?:[^\s\\]|\\.)+)/.source.replace(/<STR>/g, function() {
      return string2;
    });
    var stringRule = {
      pattern: RegExp(string2),
      greedy: true
    };
    var commentRule = {
      pattern: /(^[ \t]*)#.*/m,
      lookbehind: true,
      greedy: true
    };
    function re2(source, flags) {
      source = source.replace(/<OPT>/g, function() {
        return option;
      }).replace(/<SP>/g, function() {
        return space2;
      });
      return RegExp(source, flags);
    }
    Prism3.languages.docker = {
      instruction: {
        pattern: /(^[ \t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)(?:\\.|[^\r\n\\])*(?:\\$(?:\s|#.*$)*(?![\s#])(?:\\.|[^\r\n\\])*)*/im,
        lookbehind: true,
        greedy: true,
        inside: {
          options: {
            pattern: re2(/(^(?:ONBUILD<SP>)?\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, "i"),
            lookbehind: true,
            greedy: true,
            inside: {
              property: {
                pattern: /(^|\s)--[\w-]+/,
                lookbehind: true
              },
              string: [
                stringRule,
                {
                  pattern: /(=)(?!["'])(?:[^\s\\]|\\.)+/,
                  lookbehind: true
                }
              ],
              operator: /\\$/m,
              punctuation: /=/
            }
          },
          keyword: [
            {
              pattern: re2(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\b/.source, "i"),
              lookbehind: true,
              greedy: true
            },
            {
              pattern: re2(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \t\\]+<SP>)AS/.source, "i"),
              lookbehind: true,
              greedy: true
            },
            {
              pattern: re2(/(^ONBUILD<SP>)\w+/.source, "i"),
              lookbehind: true,
              greedy: true
            },
            {
              pattern: /^\w+/,
              greedy: true
            }
          ],
          comment: commentRule,
          string: stringRule,
          variable: /\$(?:\w+|\{[^{}"'\\]*\})/,
          operator: /\\$/m
        }
      },
      comment: commentRule
    };
    Prism3.languages.dockerfile = Prism3.languages.docker;
  })(Prism2);
}
var dot_1 = dot;
dot.displayName = "dot";
dot.aliases = ["gv"];
function dot(Prism2) {
  (function(Prism3) {
    var ID = "(?:" + [
      /[a-zA-Z_\x80-\uFFFF][\w\x80-\uFFFF]*/.source,
      /-?(?:\.\d+|\d+(?:\.\d*)?)/.source,
      /"[^"\\]*(?:\\[\s\S][^"\\]*)*"/.source,
      /<(?:[^<>]|(?!<!--)<(?:[^<>"']|"[^"]*"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source
    ].join("|") + ")";
    var IDInside = {
      markup: {
        pattern: /(^<)[\s\S]+(?=>$)/,
        lookbehind: true,
        alias: ["language-markup", "language-html", "language-xml"],
        inside: Prism3.languages.markup
      }
    };
    function withID(source, flags) {
      return RegExp(source.replace(/<ID>/g, function() {
        return ID;
      }), flags);
    }
    Prism3.languages.dot = {
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\/|^#.*/m,
        greedy: true
      },
      "graph-name": {
        pattern: withID(/(\b(?:digraph|graph|subgraph)[ \t\r\n]+)<ID>/.source, "i"),
        lookbehind: true,
        greedy: true,
        alias: "class-name",
        inside: IDInside
      },
      "attr-value": {
        pattern: withID(/(=[ \t\r\n]*)<ID>/.source),
        lookbehind: true,
        greedy: true,
        inside: IDInside
      },
      "attr-name": {
        pattern: withID(/([\[;, \t\r\n])<ID>(?=[ \t\r\n]*=)/.source),
        lookbehind: true,
        greedy: true,
        inside: IDInside
      },
      keyword: /\b(?:digraph|edge|graph|node|strict|subgraph)\b/i,
      "compass-point": {
        pattern: /(:[ \t\r\n]*)(?:[ewc_]|[ns][ew]?)(?![\w\x80-\uFFFF])/,
        lookbehind: true,
        alias: "builtin"
      },
      node: {
        pattern: withID(/(^|[^-.\w\x80-\uFFFF\\])<ID>/.source),
        lookbehind: true,
        greedy: true,
        inside: IDInside
      },
      operator: /[=:]|-[->]/,
      punctuation: /[\[\]{};,]/
    };
    Prism3.languages.gv = Prism3.languages.dot;
  })(Prism2);
}
var ebnf_1 = ebnf;
ebnf.displayName = "ebnf";
ebnf.aliases = [];
function ebnf(Prism2) {
  Prism2.languages.ebnf = {
    comment: /\(\*[\s\S]*?\*\)/,
    string: {
      pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
      greedy: true
    },
    special: {
      pattern: /\?[^?\r\n]*\?/,
      greedy: true,
      alias: "class-name"
    },
    definition: {
      pattern: /^([\t ]*)[a-z]\w*(?:[ \t]+[a-z]\w*)*(?=\s*=)/im,
      lookbehind: true,
      alias: ["rule", "keyword"]
    },
    rule: /\b[a-z]\w*(?:[ \t]+[a-z]\w*)*\b/i,
    punctuation: /\([:/]|[:/]\)|[.,;()[\]{}]/,
    operator: /[-=|*/!]/
  };
}
var editorconfig_1 = editorconfig;
editorconfig.displayName = "editorconfig";
editorconfig.aliases = [];
function editorconfig(Prism2) {
  Prism2.languages.editorconfig = {
    comment: /[;#].*/,
    section: {
      pattern: /(^[ \t]*)\[.+\]/m,
      lookbehind: true,
      alias: "selector",
      inside: {
        regex: /\\\\[\[\]{},!?.*]/,
        operator: /[!?]|\.\.|\*{1,2}/,
        punctuation: /[\[\]{},]/
      }
    },
    key: {
      pattern: /(^[ \t]*)[^\s=]+(?=[ \t]*=)/m,
      lookbehind: true,
      alias: "attr-name"
    },
    value: {
      pattern: /=.*/,
      alias: "attr-value",
      inside: {
        punctuation: /^=/
      }
    }
  };
}
var eiffel_1 = eiffel;
eiffel.displayName = "eiffel";
eiffel.aliases = [];
function eiffel(Prism2) {
  Prism2.languages.eiffel = {
    comment: /--.*/,
    string: [
      {
        pattern: /"([^[]*)\[[\s\S]*?\]\1"/,
        greedy: true
      },
      {
        pattern: /"([^{]*)\{[\s\S]*?\}\1"/,
        greedy: true
      },
      {
        pattern: /"(?:%(?:(?!\n)\s)*\n\s*%|%\S|[^%"\r\n])*"/,
        greedy: true
      }
    ],
    char: /'(?:%.|[^%'\r\n])+'/,
    keyword: /\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\b/i,
    boolean: /\b(?:False|True)\b/i,
    "class-name": /\b[A-Z][\dA-Z_]*\b/,
    number: [
      /\b0[xcb][\da-f](?:_*[\da-f])*\b/i,
      /(?:\b\d(?:_*\d)*)?\.(?:(?:\d(?:_*\d)*)?e[+-]?)?\d(?:_*\d)*\b|\b\d(?:_*\d)*\b\.?/i
    ],
    punctuation: /:=|<<|>>|\(\||\|\)|->|\.(?=\w)|[{}[\];(),:?]/,
    operator: /\\\\|\|\.\.\||\.\.|\/[~\/=]?|[><]=?|[-+*^=~]/
  };
}
var refractorMarkupTemplating$b = markupTemplating_1;
var ejs_1 = ejs;
ejs.displayName = "ejs";
ejs.aliases = ["eta"];
function ejs(Prism2) {
  Prism2.register(refractorMarkupTemplating$b);
  (function(Prism3) {
    Prism3.languages.ejs = {
      delimiter: {
        pattern: /^<%[-_=]?|[-_]?%>$/,
        alias: "punctuation"
      },
      comment: /^#[\s\S]*/,
      "language-javascript": {
        pattern: /[\s\S]+/,
        inside: Prism3.languages.javascript
      }
    };
    Prism3.hooks.add("before-tokenize", function(env) {
      var ejsPattern = /<%(?!%)[\s\S]+?%>/g;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "ejs", ejsPattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "ejs");
    });
    Prism3.languages.eta = Prism3.languages.ejs;
  })(Prism2);
}
var elixir_1 = elixir;
elixir.displayName = "elixir";
elixir.aliases = [];
function elixir(Prism2) {
  Prism2.languages.elixir = {
    doc: {
      pattern: /@(?:doc|moduledoc)\s+(?:("""|''')[\s\S]*?\1|("|')(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2)/,
      inside: {
        attribute: /^@\w+/,
        string: /['"][\s\S]+/
      }
    },
    comment: {
      pattern: /#.*/,
      greedy: true
    },
    regex: {
      pattern: /~[rR](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|[^\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[uismxfr]*/,
      greedy: true
    },
    string: [
      {
        pattern: /~[cCsSwW](?:("""|''')(?:\\[\s\S]|(?!\1)[^\\])+\1|([\/|"'])(?:\\.|(?!\2)[^\\\r\n])+\2|\((?:\\.|[^\\)\r\n])+\)|\[(?:\\.|[^\\\]\r\n])+\]|\{(?:\\.|#\{[^}]+\}|#(?!\{)|[^#\\}\r\n])+\}|<(?:\\.|[^\\>\r\n])+>)[csa]?/,
        greedy: true,
        inside: {}
      },
      {
        pattern: /("""|''')[\s\S]*?\1/,
        greedy: true,
        inside: {}
      },
      {
        pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: true,
        inside: {}
      }
    ],
    atom: {
      pattern: /(^|[^:]):\w+/,
      lookbehind: true,
      alias: "symbol"
    },
    module: {
      pattern: /\b[A-Z]\w*\b/,
      alias: "class-name"
    },
    "attr-name": /\b\w+\??:(?!:)/,
    argument: {
      pattern: /(^|[^&])&\d+/,
      lookbehind: true,
      alias: "variable"
    },
    attribute: {
      pattern: /@\w+/,
      alias: "variable"
    },
    function: /\b[_a-zA-Z]\w*[?!]?(?:(?=\s*(?:\.\s*)?\()|(?=\/\d))/,
    number: /\b(?:0[box][a-f\d_]+|\d[\d_]*)(?:\.[\d_]+)?(?:e[+-]?[\d_]+)?\b/i,
    keyword: /\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\b/,
    boolean: /\b(?:false|nil|true)\b/,
    operator: [
      /\bin\b|&&?|\|[|>]?|\\\\|::|\.\.\.?|\+\+?|-[->]?|<[-=>]|>=|!==?|\B!|=(?:==?|[>~])?|[*\/^]/,
      {
        pattern: /([^<])<(?!<)/,
        lookbehind: true
      },
      {
        pattern: /([^>])>(?!>)/,
        lookbehind: true
      }
    ],
    punctuation: /<<|>>|[.,%\[\]{}()]/
  };
  Prism2.languages.elixir.string.forEach(function(o2) {
    o2.inside = {
      interpolation: {
        pattern: /#\{[^}]+\}/,
        inside: {
          delimiter: {
            pattern: /^#\{|\}$/,
            alias: "punctuation"
          },
          rest: Prism2.languages.elixir
        }
      }
    };
  });
}
var elm_1 = elm;
elm.displayName = "elm";
elm.aliases = [];
function elm(Prism2) {
  Prism2.languages.elm = {
    comment: /--.*|\{-[\s\S]*?-\}/,
    char: {
      pattern: /'(?:[^\\'\r\n]|\\(?:[abfnrtv\\']|\d+|x[0-9a-fA-F]+|u\{[0-9a-fA-F]+\}))'/,
      greedy: true
    },
    string: [
      {
        pattern: /"""[\s\S]*?"""/,
        greedy: true
      },
      {
        pattern: /"(?:[^\\"\r\n]|\\.)*"/,
        greedy: true
      }
    ],
    "import-statement": {
      pattern: /(^[\t ]*)import\s+[A-Z]\w*(?:\.[A-Z]\w*)*(?:\s+as\s+(?:[A-Z]\w*)(?:\.[A-Z]\w*)*)?(?:\s+exposing\s+)?/m,
      lookbehind: true,
      inside: {
        keyword: /\b(?:as|exposing|import)\b/
      }
    },
    keyword: /\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\b/,
    builtin: /\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\b/,
    number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0x[0-9a-f]+)\b/i,
    operator: /\s\.\s|[+\-/*=.$<>:&|^?%#@~!]{2,}|[+\-/*=$<>:&|^?%#@~!]/,
    hvariable: /\b(?:[A-Z]\w*\.)*[a-z]\w*\b/,
    constant: /\b(?:[A-Z]\w*\.)*[A-Z]\w*\b/,
    punctuation: /[{}[\]|(),.:]/
  };
}
var refractorRuby$1 = ruby_1;
var refractorMarkupTemplating$a = markupTemplating_1;
var erb_1 = erb;
erb.displayName = "erb";
erb.aliases = [];
function erb(Prism2) {
  Prism2.register(refractorRuby$1);
  Prism2.register(refractorMarkupTemplating$a);
  (function(Prism3) {
    Prism3.languages.erb = {
      delimiter: {
        pattern: /^(\s*)<%=?|%>(?=\s*$)/,
        lookbehind: true,
        alias: "punctuation"
      },
      ruby: {
        pattern: /\s*\S[\s\S]*/,
        alias: "language-ruby",
        inside: Prism3.languages.ruby
      }
    };
    Prism3.hooks.add("before-tokenize", function(env) {
      var erbPattern = /<%=?(?:[^\r\n]|[\r\n](?!=begin)|[\r\n]=begin\s(?:[^\r\n]|[\r\n](?!=end))*[\r\n]=end)+?%>/g;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "erb", erbPattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "erb");
    });
  })(Prism2);
}
var erlang_1 = erlang;
erlang.displayName = "erlang";
erlang.aliases = [];
function erlang(Prism2) {
  Prism2.languages.erlang = {
    comment: /%.+/,
    string: {
      pattern: /"(?:\\.|[^\\"\r\n])*"/,
      greedy: true
    },
    "quoted-function": {
      pattern: /'(?:\\.|[^\\'\r\n])+'(?=\()/,
      alias: "function"
    },
    "quoted-atom": {
      pattern: /'(?:\\.|[^\\'\r\n])+'/,
      alias: "atom"
    },
    boolean: /\b(?:false|true)\b/,
    keyword: /\b(?:after|case|catch|end|fun|if|of|receive|try|when)\b/,
    number: [
      /\$\\?./,
      /\b\d+#[a-z0-9]+/i,
      /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i
    ],
    function: /\b[a-z][\w@]*(?=\()/,
    variable: {
      pattern: /(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,
      lookbehind: true
    },
    operator: [
      /[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\b/,
      {
        pattern: /(^|[^<])<(?!<)/,
        lookbehind: true
      },
      {
        pattern: /(^|[^>])>(?!>)/,
        lookbehind: true
      }
    ],
    atom: /\b[a-z][\w@]*/,
    punctuation: /[()[\]{}:;,.#|]|<<|>>/
  };
}
var lua_1 = lua;
lua.displayName = "lua";
lua.aliases = [];
function lua(Prism2) {
  Prism2.languages.lua = {
    comment: /^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,
    string: {
      pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,
      greedy: true
    },
    number: /\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,
    keyword: /\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,
    function: /(?!\d)\w+(?=\s*(?:[({]))/,
    operator: [
      /[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,
      {
        pattern: /(^|[^.])\.\.(?!\.)/,
        lookbehind: true
      }
    ],
    punctuation: /[\[\](){},;]|\.+|:+/
  };
}
var refractorLua = lua_1;
var refractorMarkupTemplating$9 = markupTemplating_1;
var etlua_1 = etlua;
etlua.displayName = "etlua";
etlua.aliases = [];
function etlua(Prism2) {
  Prism2.register(refractorLua);
  Prism2.register(refractorMarkupTemplating$9);
  (function(Prism3) {
    Prism3.languages.etlua = {
      delimiter: {
        pattern: /^<%[-=]?|-?%>$/,
        alias: "punctuation"
      },
      "language-lua": {
        pattern: /[\s\S]+/,
        inside: Prism3.languages.lua
      }
    };
    Prism3.hooks.add("before-tokenize", function(env) {
      var pattern = /<%[\s\S]+?%>/g;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "etlua", pattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "etlua");
    });
  })(Prism2);
}
var excelFormula_1 = excelFormula;
excelFormula.displayName = "excelFormula";
excelFormula.aliases = [];
function excelFormula(Prism2) {
  Prism2.languages["excel-formula"] = {
    comment: {
      pattern: /(\bN\(\s*)"(?:[^"]|"")*"(?=\s*\))/i,
      lookbehind: true,
      greedy: true
    },
    string: {
      pattern: /"(?:[^"]|"")*"(?!")/,
      greedy: true
    },
    reference: {
      pattern: /(?:'[^']*'|(?:[^\s()[\]{}<>*?"';,$&]*\[[^^\s()[\]{}<>*?"']+\])?\w+)!/,
      greedy: true,
      alias: "string",
      inside: {
        operator: /!$/,
        punctuation: /'/,
        sheet: {
          pattern: /[^[\]]+$/,
          alias: "function"
        },
        file: {
          pattern: /\[[^[\]]+\]$/,
          inside: {
            punctuation: /[[\]]/
          }
        },
        path: /[\s\S]+/
      }
    },
    "function-name": {
      pattern: /\b[A-Z]\w*(?=\()/i,
      alias: "keyword"
    },
    range: {
      pattern: /\$?\b(?:[A-Z]+\$?\d+:\$?[A-Z]+\$?\d+|[A-Z]+:\$?[A-Z]+|\d+:\$?\d+)\b/i,
      alias: "property",
      inside: {
        operator: /:/,
        cell: /\$?[A-Z]+\$?\d+/i,
        column: /\$?[A-Z]+/i,
        row: /\$?\d+/
      }
    },
    cell: {
      pattern: /\b[A-Z]+\d+\b|\$[A-Za-z]+\$?\d+\b|\b[A-Za-z]+\$\d+\b/,
      alias: "property"
    },
    number: /(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?\b/i,
    boolean: /\b(?:FALSE|TRUE)\b/i,
    operator: /[-+*/^%=&,]|<[=>]?|>=?/,
    punctuation: /[[\]();{}|]/
  };
  Prism2.languages["xlsx"] = Prism2.languages["xls"] = Prism2.languages["excel-formula"];
}
var factor_1 = factor;
factor.displayName = "factor";
factor.aliases = [];
function factor(Prism2) {
  (function(Prism3) {
    var comment_inside = {
      function: /\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\?{2,}|!{2,})\b/
    };
    var string_inside = {
      number: /\\[^\s']|%\w/
    };
    var factor2 = {
      comment: [
        {
          pattern: /(^|\s)(?:! .*|!$)/,
          lookbehind: true,
          inside: comment_inside
        },
        {
          pattern: /(^|\s)\/\*\s[\s\S]*?\*\/(?=\s|$)/,
          lookbehind: true,
          greedy: true,
          inside: comment_inside
        },
        {
          pattern: /(^|\s)!\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,
          lookbehind: true,
          greedy: true,
          inside: comment_inside
        }
      ],
      number: [
        {
          pattern: /(^|\s)[+-]?\d+(?=\s|$)/,
          lookbehind: true
        },
        {
          pattern: /(^|\s)[+-]?0(?:b[01]+|o[0-7]+|d\d+|x[\dA-F]+)(?=\s|$)/i,
          lookbehind: true
        },
        {
          pattern: /(^|\s)[+-]?\d+\/\d+\.?(?=\s|$)/,
          lookbehind: true
        },
        {
          pattern: /(^|\s)\+?\d+\+\d+\/\d+(?=\s|$)/,
          lookbehind: true
        },
        {
          pattern: /(^|\s)-\d+-\d+\/\d+(?=\s|$)/,
          lookbehind: true
        },
        {
          pattern: /(^|\s)[+-]?(?:\d*\.\d+|\d+\.\d*|\d+)(?:e[+-]?\d+)?(?=\s|$)/i,
          lookbehind: true
        },
        {
          pattern: /(^|\s)NAN:\s+[\da-fA-F]+(?=\s|$)/,
          lookbehind: true
        },
        {
          pattern: /(^|\s)[+-]?0(?:b1\.[01]*|o1\.[0-7]*|d1\.\d*|x1\.[\dA-F]*)p\d+(?=\s|$)/i,
          lookbehind: true
        }
      ],
      regexp: {
        pattern: /(^|\s)R\/\s(?:\\\S|[^\\/])*\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\s|$)/,
        lookbehind: true,
        alias: "number",
        inside: {
          variable: /\\\S/,
          keyword: /[+?*\[\]^$(){}.|]/,
          operator: {
            pattern: /(\/)[idmsr]+(?:-[idmsr]+)?/,
            lookbehind: true
          }
        }
      },
      boolean: {
        pattern: /(^|\s)[tf](?=\s|$)/,
        lookbehind: true
      },
      "custom-string": {
        pattern: /(^|\s)[A-Z0-9\-]+"\s(?:\\\S|[^"\\])*"/,
        lookbehind: true,
        greedy: true,
        alias: "string",
        inside: {
          number: /\\\S|%\w|\//
        }
      },
      "multiline-string": [
        {
          pattern: /(^|\s)STRING:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*;(?=\s|$)/,
          lookbehind: true,
          greedy: true,
          alias: "string",
          inside: {
            number: string_inside.number,
            "semicolon-or-setlocal": {
              pattern: /([\r\n][ \t]*);(?=\s|$)/,
              lookbehind: true,
              alias: "function"
            }
          }
        },
        {
          pattern: /(^|\s)HEREDOC:\s+\S+(?:\n|\r\n).*(?:\n|\r\n)\s*\S+(?=\s|$)/,
          lookbehind: true,
          greedy: true,
          alias: "string",
          inside: string_inside
        },
        {
          pattern: /(^|\s)\[(={0,6})\[\s[\s\S]*?\]\2\](?=\s|$)/,
          lookbehind: true,
          greedy: true,
          alias: "string",
          inside: string_inside
        }
      ],
      "special-using": {
        pattern: /(^|\s)USING:(?:\s\S+)*(?=\s+;(?:\s|$))/,
        lookbehind: true,
        alias: "function",
        inside: {
          string: {
            pattern: /(\s)[^:\s]+/,
            lookbehind: true
          }
        }
      },
      "stack-effect-delimiter": [
        {
          pattern: /(^|\s)(?:call|eval|execute)?\((?=\s)/,
          lookbehind: true,
          alias: "operator"
        },
        {
          pattern: /(\s)--(?=\s)/,
          lookbehind: true,
          alias: "operator"
        },
        {
          pattern: /(\s)\)(?=\s|$)/,
          lookbehind: true,
          alias: "operator"
        }
      ],
      combinators: {
        pattern: null,
        lookbehind: true,
        alias: "keyword"
      },
      "kernel-builtin": {
        pattern: null,
        lookbehind: true,
        alias: "variable"
      },
      "sequences-builtin": {
        pattern: null,
        lookbehind: true,
        alias: "variable"
      },
      "math-builtin": {
        pattern: null,
        lookbehind: true,
        alias: "variable"
      },
      "constructor-word": {
        pattern: /(^|\s)<(?!=+>|-+>)\S+>(?=\s|$)/,
        lookbehind: true,
        alias: "keyword"
      },
      "other-builtin-syntax": {
        pattern: null,
        lookbehind: true,
        alias: "operator"
      },
      "conventionally-named-word": {
        pattern: /(^|\s)(?!")(?:(?:change|new|set|with)-\S+|\$\S+|>[^>\s]+|[^:>\s]+>|[^>\s]+>[^>\s]+|\+[^+\s]+\+|[^?\s]+\?|\?[^?\s]+|[^>\s]+>>|>>[^>\s]+|[^<\s]+<<|\([^()\s]+\)|[^!\s]+!|[^*\s]\S*\*|[^.\s]\S*\.)(?=\s|$)/,
        lookbehind: true,
        alias: "keyword"
      },
      "colon-syntax": {
        pattern: /(^|\s)(?:[A-Z0-9\-]+#?)?:{1,2}\s+(?:;\S+|(?!;)\S+)(?=\s|$)/,
        lookbehind: true,
        greedy: true,
        alias: "function"
      },
      "semicolon-or-setlocal": {
        pattern: /(\s)(?:;|:>)(?=\s|$)/,
        lookbehind: true,
        alias: "function"
      },
      "curly-brace-literal-delimiter": [
        {
          pattern: /(^|\s)[a-z]*\{(?=\s)/i,
          lookbehind: true,
          alias: "operator"
        },
        {
          pattern: /(\s)\}(?=\s|$)/,
          lookbehind: true,
          alias: "operator"
        }
      ],
      "quotation-delimiter": [
        {
          pattern: /(^|\s)\[(?=\s)/,
          lookbehind: true,
          alias: "operator"
        },
        {
          pattern: /(\s)\](?=\s|$)/,
          lookbehind: true,
          alias: "operator"
        }
      ],
      "normal-word": {
        pattern: /(^|\s)[^"\s]\S*(?=\s|$)/,
        lookbehind: true
      },
      string: {
        pattern: /"(?:\\\S|[^"\\])*"/,
        greedy: true,
        inside: string_inside
      }
    };
    var escape = function(str2) {
      return (str2 + "").replace(/([.?*+\^$\[\]\\(){}|\-])/g, "\\$1");
    };
    var arrToWordsRegExp = function(arr) {
      return new RegExp("(^|\\s)(?:" + arr.map(escape).join("|") + ")(?=\\s|$)");
    };
    var builtins = {
      "kernel-builtin": [
        "or",
        "2nipd",
        "4drop",
        "tuck",
        "wrapper",
        "nip",
        "wrapper?",
        "callstack>array",
        "die",
        "dupd",
        "callstack",
        "callstack?",
        "3dup",
        "hashcode",
        "pick",
        "4nip",
        "build",
        ">boolean",
        "nipd",
        "clone",
        "5nip",
        "eq?",
        "?",
        "=",
        "swapd",
        "2over",
        "clear",
        "2dup",
        "get-retainstack",
        "not",
        "tuple?",
        "dup",
        "3nipd",
        "call",
        "-rotd",
        "object",
        "drop",
        "assert=",
        "assert?",
        "-rot",
        "execute",
        "boa",
        "get-callstack",
        "curried?",
        "3drop",
        "pickd",
        "overd",
        "over",
        "roll",
        "3nip",
        "swap",
        "and",
        "2nip",
        "rotd",
        "throw",
        "(clone)",
        "hashcode*",
        "spin",
        "reach",
        "4dup",
        "equal?",
        "get-datastack",
        "assert",
        "2drop",
        "<wrapper>",
        "boolean?",
        "identity-hashcode",
        "identity-tuple?",
        "null",
        "composed?",
        "new",
        "5drop",
        "rot",
        "-roll",
        "xor",
        "identity-tuple",
        "boolean"
      ],
      "other-builtin-syntax": [
        "=======",
        "recursive",
        "flushable",
        ">>",
        "<<<<<<",
        "M\\",
        "B",
        "PRIVATE>",
        "\\",
        "======",
        "final",
        "inline",
        "delimiter",
        "deprecated",
        "<PRIVATE",
        ">>>>>>",
        "<<<<<<<",
        "parse-complex",
        "malformed-complex",
        "read-only",
        ">>>>>>>",
        "call-next-method",
        "<<",
        "foldable",
        "$",
        "$[",
        "${"
      ],
      "sequences-builtin": [
        "member-eq?",
        "mismatch",
        "append",
        "assert-sequence=",
        "longer",
        "repetition",
        "clone-like",
        "3sequence",
        "assert-sequence?",
        "last-index-from",
        "reversed",
        "index-from",
        "cut*",
        "pad-tail",
        "join-as",
        "remove-eq!",
        "concat-as",
        "but-last",
        "snip",
        "nths",
        "nth",
        "sequence",
        "longest",
        "slice?",
        "<slice>",
        "remove-nth",
        "tail-slice",
        "empty?",
        "tail*",
        "member?",
        "virtual-sequence?",
        "set-length",
        "drop-prefix",
        "iota",
        "unclip",
        "bounds-error?",
        "unclip-last-slice",
        "non-negative-integer-expected",
        "non-negative-integer-expected?",
        "midpoint@",
        "longer?",
        "?set-nth",
        "?first",
        "rest-slice",
        "prepend-as",
        "prepend",
        "fourth",
        "sift",
        "subseq-start",
        "new-sequence",
        "?last",
        "like",
        "first4",
        "1sequence",
        "reverse",
        "slice",
        "virtual@",
        "repetition?",
        "set-last",
        "index",
        "4sequence",
        "max-length",
        "set-second",
        "immutable-sequence",
        "first2",
        "first3",
        "supremum",
        "unclip-slice",
        "suffix!",
        "insert-nth",
        "tail",
        "3append",
        "short",
        "suffix",
        "concat",
        "flip",
        "immutable?",
        "reverse!",
        "2sequence",
        "sum",
        "delete-all",
        "indices",
        "snip-slice",
        "<iota>",
        "check-slice",
        "sequence?",
        "head",
        "append-as",
        "halves",
        "sequence=",
        "collapse-slice",
        "?second",
        "slice-error?",
        "product",
        "bounds-check?",
        "bounds-check",
        "immutable",
        "virtual-exemplar",
        "harvest",
        "remove",
        "pad-head",
        "last",
        "set-fourth",
        "cartesian-product",
        "remove-eq",
        "shorten",
        "shorter",
        "reversed?",
        "shorter?",
        "shortest",
        "head-slice",
        "pop*",
        "tail-slice*",
        "but-last-slice",
        "iota?",
        "append!",
        "cut-slice",
        "new-resizable",
        "head-slice*",
        "sequence-hashcode",
        "pop",
        "set-nth",
        "?nth",
        "second",
        "join",
        "immutable-sequence?",
        "<reversed>",
        "3append-as",
        "virtual-sequence",
        "subseq?",
        "remove-nth!",
        "length",
        "last-index",
        "lengthen",
        "assert-sequence",
        "copy",
        "move",
        "third",
        "first",
        "tail?",
        "set-first",
        "prefix",
        "bounds-error",
        "<repetition>",
        "exchange",
        "surround",
        "cut",
        "min-length",
        "set-third",
        "push-all",
        "head?",
        "subseq-start-from",
        "delete-slice",
        "rest",
        "sum-lengths",
        "head*",
        "infimum",
        "remove!",
        "glue",
        "slice-error",
        "subseq",
        "push",
        "replace-slice",
        "subseq-as",
        "unclip-last"
      ],
      "math-builtin": [
        "number=",
        "next-power-of-2",
        "?1+",
        "fp-special?",
        "imaginary-part",
        "float>bits",
        "number?",
        "fp-infinity?",
        "bignum?",
        "fp-snan?",
        "denominator",
        "gcd",
        "*",
        "+",
        "fp-bitwise=",
        "-",
        "u>=",
        "/",
        ">=",
        "bitand",
        "power-of-2?",
        "log2-expects-positive",
        "neg?",
        "<",
        "log2",
        ">",
        "integer?",
        "number",
        "bits>double",
        "2/",
        "zero?",
        "bits>float",
        "float?",
        "shift",
        "ratio?",
        "rect>",
        "even?",
        "ratio",
        "fp-sign",
        "bitnot",
        ">fixnum",
        "complex?",
        "/i",
        "integer>fixnum",
        "/f",
        "sgn",
        ">bignum",
        "next-float",
        "u<",
        "u>",
        "mod",
        "recip",
        "rational",
        ">float",
        "2^",
        "integer",
        "fixnum?",
        "neg",
        "fixnum",
        "sq",
        "bignum",
        ">rect",
        "bit?",
        "fp-qnan?",
        "simple-gcd",
        "complex",
        "<fp-nan>",
        "real",
        ">fraction",
        "double>bits",
        "bitor",
        "rem",
        "fp-nan-payload",
        "real-part",
        "log2-expects-positive?",
        "prev-float",
        "align",
        "unordered?",
        "float",
        "fp-nan?",
        "abs",
        "bitxor",
        "integer>fixnum-strict",
        "u<=",
        "odd?",
        "<=",
        "/mod",
        ">integer",
        "real?",
        "rational?",
        "numerator"
      ]
    };
    Object.keys(builtins).forEach(function(k2) {
      factor2[k2].pattern = arrToWordsRegExp(builtins[k2]);
    });
    var combinators = [
      "2bi",
      "while",
      "2tri",
      "bi*",
      "4dip",
      "both?",
      "same?",
      "tri@",
      "curry",
      "prepose",
      "3bi",
      "?if",
      "tri*",
      "2keep",
      "3keep",
      "curried",
      "2keepd",
      "when",
      "2bi*",
      "2tri*",
      "4keep",
      "bi@",
      "keepdd",
      "do",
      "unless*",
      "tri-curry",
      "if*",
      "loop",
      "bi-curry*",
      "when*",
      "2bi@",
      "2tri@",
      "with",
      "2with",
      "either?",
      "bi",
      "until",
      "3dip",
      "3curry",
      "tri-curry*",
      "tri-curry@",
      "bi-curry",
      "keepd",
      "compose",
      "2dip",
      "if",
      "3tri",
      "unless",
      "tuple",
      "keep",
      "2curry",
      "tri",
      "most",
      "while*",
      "dip",
      "composed",
      "bi-curry@",
      "find-last-from",
      "trim-head-slice",
      "map-as",
      "each-from",
      "none?",
      "trim-tail",
      "partition",
      "if-empty",
      "accumulate*",
      "reject!",
      "find-from",
      "accumulate-as",
      "collector-for-as",
      "reject",
      "map",
      "map-sum",
      "accumulate!",
      "2each-from",
      "follow",
      "supremum-by",
      "map!",
      "unless-empty",
      "collector",
      "padding",
      "reduce-index",
      "replicate-as",
      "infimum-by",
      "trim-tail-slice",
      "count",
      "find-index",
      "filter",
      "accumulate*!",
      "reject-as",
      "map-integers",
      "map-find",
      "reduce",
      "selector",
      "interleave",
      "2map",
      "filter-as",
      "binary-reduce",
      "map-index-as",
      "find",
      "produce",
      "filter!",
      "replicate",
      "cartesian-map",
      "cartesian-each",
      "find-index-from",
      "map-find-last",
      "3map-as",
      "3map",
      "find-last",
      "selector-as",
      "2map-as",
      "2map-reduce",
      "accumulate",
      "each",
      "each-index",
      "accumulate*-as",
      "when-empty",
      "all?",
      "collector-as",
      "push-either",
      "new-like",
      "collector-for",
      "2selector",
      "push-if",
      "2all?",
      "map-reduce",
      "3each",
      "any?",
      "trim-slice",
      "2reduce",
      "change-nth",
      "produce-as",
      "2each",
      "trim",
      "trim-head",
      "cartesian-find",
      "map-index",
      "if-zero",
      "each-integer",
      "unless-zero",
      "(find-integer)",
      "when-zero",
      "find-last-integer",
      "(all-integers?)",
      "times",
      "(each-integer)",
      "find-integer",
      "all-integers?",
      "unless-negative",
      "if-positive",
      "when-positive",
      "when-negative",
      "unless-positive",
      "if-negative",
      "case",
      "2cleave",
      "cond>quot",
      "case>quot",
      "3cleave",
      "wrong-values",
      "to-fixed-point",
      "alist>quot",
      "cond",
      "cleave",
      "call-effect",
      "recursive-hashcode",
      "spread",
      "deep-spread>quot",
      "2||",
      "0||",
      "n||",
      "0&&",
      "2&&",
      "3||",
      "1||",
      "1&&",
      "n&&",
      "3&&",
      "smart-unless*",
      "keep-inputs",
      "reduce-outputs",
      "smart-when*",
      "cleave>array",
      "smart-with",
      "smart-apply",
      "smart-if",
      "inputs/outputs",
      "output>sequence-n",
      "map-outputs",
      "map-reduce-outputs",
      "dropping",
      "output>array",
      "smart-map-reduce",
      "smart-2map-reduce",
      "output>array-n",
      "nullary",
      "input<sequence",
      "append-outputs",
      "drop-inputs",
      "inputs",
      "smart-2reduce",
      "drop-outputs",
      "smart-reduce",
      "preserving",
      "smart-when",
      "outputs",
      "append-outputs-as",
      "smart-unless",
      "smart-if*",
      "sum-outputs",
      "input<sequence-unsafe",
      "output>sequence"
    ];
    factor2.combinators.pattern = arrToWordsRegExp(combinators);
    Prism3.languages.factor = factor2;
  })(Prism2);
}
var _false = $false;
$false.displayName = "$false";
$false.aliases = [];
function $false(Prism2) {
  (function(Prism3) {
    Prism3.languages["false"] = {
      comment: {
        pattern: /\{[^}]*\}/
      },
      string: {
        pattern: /"[^"]*"/,
        greedy: true
      },
      "character-code": {
        pattern: /'(?:[^\r]|\r\n?)/,
        alias: "number"
      },
      "assembler-code": {
        pattern: /\d+`/,
        alias: "important"
      },
      number: /\d+/,
      operator: /[-!#$%&'*+,./:;=>?@\\^_`|~ßø]/,
      punctuation: /\[|\]/,
      variable: /[a-z]/,
      "non-standard": {
        pattern: /[()<BDO®]/,
        alias: "bold"
      }
    };
  })(Prism2);
}
var firestoreSecurityRules_1 = firestoreSecurityRules;
firestoreSecurityRules.displayName = "firestoreSecurityRules";
firestoreSecurityRules.aliases = [];
function firestoreSecurityRules(Prism2) {
  Prism2.languages["firestore-security-rules"] = Prism2.languages.extend("clike", {
    comment: /\/\/.*/,
    keyword: /\b(?:allow|function|if|match|null|return|rules_version|service)\b/,
    operator: /&&|\|\||[<>!=]=?|[-+*/%]|\b(?:in|is)\b/
  });
  delete Prism2.languages["firestore-security-rules"]["class-name"];
  Prism2.languages.insertBefore("firestore-security-rules", "keyword", {
    path: {
      pattern: /(^|[\s(),])(?:\/(?:[\w\xA0-\uFFFF]+|\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)))+/,
      lookbehind: true,
      greedy: true,
      inside: {
        variable: {
          pattern: /\{[\w\xA0-\uFFFF]+(?:=\*\*)?\}|\$\([\w\xA0-\uFFFF.]+\)/,
          inside: {
            operator: /=/,
            keyword: /\*\*/,
            punctuation: /[.$(){}]/
          }
        },
        punctuation: /\//
      }
    },
    method: {
      pattern: /(\ballow\s+)[a-z]+(?:\s*,\s*[a-z]+)*(?=\s*[:;])/,
      lookbehind: true,
      alias: "builtin",
      inside: {
        punctuation: /,/
      }
    }
  });
}
var flow_1 = flow;
flow.displayName = "flow";
flow.aliases = [];
function flow(Prism2) {
  (function(Prism3) {
    Prism3.languages.flow = Prism3.languages.extend("javascript", {});
    Prism3.languages.insertBefore("flow", "keyword", {
      type: [
        {
          pattern: /\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\b/,
          alias: "tag"
        }
      ]
    });
    Prism3.languages.flow["function-variable"].pattern = /(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i;
    delete Prism3.languages.flow["parameter"];
    Prism3.languages.insertBefore("flow", "operator", {
      "flow-punctuation": {
        pattern: /\{\||\|\}/,
        alias: "punctuation"
      }
    });
    if (!Array.isArray(Prism3.languages.flow.keyword)) {
      Prism3.languages.flow.keyword = [Prism3.languages.flow.keyword];
    }
    Prism3.languages.flow.keyword.unshift({
      pattern: /(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/,
      lookbehind: true
    }, {
      pattern: /(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/,
      lookbehind: true
    });
  })(Prism2);
}
var fortran_1 = fortran;
fortran.displayName = "fortran";
fortran.aliases = [];
function fortran(Prism2) {
  Prism2.languages.fortran = {
    "quoted-number": {
      pattern: /[BOZ](['"])[A-F0-9]+\1/i,
      alias: "number"
    },
    string: {
      pattern: /(?:\b\w+_)?(['"])(?:\1\1|&(?:\r\n?|\n)(?:[ \t]*!.*(?:\r\n?|\n)|(?![ \t]*!))|(?!\1).)*(?:\1|&)/,
      inside: {
        comment: {
          pattern: /(&(?:\r\n?|\n)\s*)!.*/,
          lookbehind: true
        }
      }
    },
    comment: {
      pattern: /!.*/,
      greedy: true
    },
    boolean: /\.(?:FALSE|TRUE)\.(?:_\w+)?/i,
    number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[ED][+-]?\d+)?(?:_\w+)?/i,
    keyword: [
      /\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\b/i,
      /\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\b/i,
      /\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\b/i,
      /\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\b/i
    ],
    operator: [
      /\*\*|\/\/|=>|[=\/]=|[<>]=?|::|[+\-*=%]|\.[A-Z]+\./i,
      {
        pattern: /(^|(?!\().)\/(?!\))/,
        lookbehind: true
      }
    ],
    punctuation: /\(\/|\/\)|[(),;:&]/
  };
}
var fsharp_1 = fsharp;
fsharp.displayName = "fsharp";
fsharp.aliases = [];
function fsharp(Prism2) {
  Prism2.languages.fsharp = Prism2.languages.extend("clike", {
    comment: [
      {
        pattern: /(^|[^\\])\(\*(?!\))[\s\S]*?\*\)/,
        lookbehind: true,
        greedy: true
      },
      {
        pattern: /(^|[^\\:])\/\/.*/,
        lookbehind: true,
        greedy: true
      }
    ],
    string: {
      pattern: /(?:"""[\s\S]*?"""|@"(?:""|[^"])*"|"(?:\\[\s\S]|[^\\"])*")B?/,
      greedy: true
    },
    "class-name": {
      pattern: /(\b(?:exception|inherit|interface|new|of|type)\s+|\w\s*:\s*|\s:\??>\s*)[.\w]+\b(?:\s*(?:->|\*)\s*[.\w]+\b)*(?!\s*[:.])/,
      lookbehind: true,
      inside: {
        operator: /->|\*/,
        punctuation: /\./
      }
    },
    keyword: /\b(?:let|return|use|yield)(?:!\B|\b)|\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\b/,
    number: [
      /\b0x[\da-fA-F]+(?:LF|lf|un)?\b/,
      /\b0b[01]+(?:uy|y)?\b/,
      /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[fm]|e[+-]?\d+)?\b/i,
      /\b\d+(?:[IlLsy]|UL|u[lsy]?)?\b/
    ],
    operator: /([<>~&^])\1\1|([*.:<>&])\2|<-|->|[!=:]=|<?\|{1,3}>?|\??(?:<=|>=|<>|[-+*/%=<>])\??|[!?^&]|~[+~-]|:>|:\?>?/
  });
  Prism2.languages.insertBefore("fsharp", "keyword", {
    preprocessor: {
      pattern: /(^[\t ]*)#.*/m,
      lookbehind: true,
      alias: "property",
      inside: {
        directive: {
          pattern: /(^#)\b(?:else|endif|if|light|line|nowarn)\b/,
          lookbehind: true,
          alias: "keyword"
        }
      }
    }
  });
  Prism2.languages.insertBefore("fsharp", "punctuation", {
    "computation-expression": {
      pattern: /\b[_a-z]\w*(?=\s*\{)/i,
      alias: "keyword"
    }
  });
  Prism2.languages.insertBefore("fsharp", "string", {
    annotation: {
      pattern: /\[<.+?>\]/,
      greedy: true,
      inside: {
        punctuation: /^\[<|>\]$/,
        "class-name": {
          pattern: /^\w+$|(^|;\s*)[A-Z]\w*(?=\()/,
          lookbehind: true
        },
        "annotation-content": {
          pattern: /[\s\S]+/,
          inside: Prism2.languages.fsharp
        }
      }
    },
    char: {
      pattern: /'(?:[^\\']|\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8}))'B?/,
      greedy: true
    }
  });
}
var refractorMarkupTemplating$8 = markupTemplating_1;
var ftl_1 = ftl;
ftl.displayName = "ftl";
ftl.aliases = [];
function ftl(Prism2) {
  Prism2.register(refractorMarkupTemplating$8);
  (function(Prism3) {
    var FTL_EXPR = /[^<()"']|\((?:<expr>)*\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|"(?:[^\\"]|\\.)*"|'(?:[^\\']|\\.)*'/.source;
    for (var i2 = 0; i2 < 2; i2++) {
      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function() {
        return FTL_EXPR;
      });
    }
    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\s\S]/.source);
    var ftl2 = {
      comment: /<#--[\s\S]*?-->/,
      string: [
        {
          pattern: /\br("|')(?:(?!\1)[^\\]|\\.)*\1/,
          greedy: true
        },
        {
          pattern: RegExp(/("|')(?:(?!\1|\$\{)[^\\]|\\.|\$\{(?:(?!\})(?:<expr>))*\})*\1/.source.replace(/<expr>/g, function() {
            return FTL_EXPR;
          })),
          greedy: true,
          inside: {
            interpolation: {
              pattern: RegExp(/((?:^|[^\\])(?:\\\\)*)\$\{(?:(?!\})(?:<expr>))*\}/.source.replace(/<expr>/g, function() {
                return FTL_EXPR;
              })),
              lookbehind: true,
              inside: {
                "interpolation-punctuation": {
                  pattern: /^\$\{|\}$/,
                  alias: "punctuation"
                },
                rest: null
              }
            }
          }
        }
      ],
      keyword: /\b(?:as)\b/,
      boolean: /\b(?:false|true)\b/,
      "builtin-function": {
        pattern: /((?:^|[^?])\?\s*)\w+/,
        lookbehind: true,
        alias: "function"
      },
      function: /\b\w+(?=\s*\()/,
      number: /\b\d+(?:\.\d+)?\b/,
      operator: /\.\.[<*!]?|->|--|\+\+|&&|\|\||\?{1,2}|[-+*/%!=<>]=?|\b(?:gt|gte|lt|lte)\b/,
      punctuation: /[,;.:()[\]{}]/
    };
    ftl2.string[1].inside.interpolation.inside.rest = ftl2;
    Prism3.languages.ftl = {
      "ftl-comment": {
        pattern: /^<#--[\s\S]*/,
        alias: "comment"
      },
      "ftl-directive": {
        pattern: /^<[\s\S]+>$/,
        inside: {
          directive: {
            pattern: /(^<\/?)[#@][a-z]\w*/i,
            lookbehind: true,
            alias: "keyword"
          },
          punctuation: /^<\/?|\/?>$/,
          content: {
            pattern: /\s*\S[\s\S]*/,
            alias: "ftl",
            inside: ftl2
          }
        }
      },
      "ftl-interpolation": {
        pattern: /^\$\{[\s\S]*\}$/,
        inside: {
          punctuation: /^\$\{|\}$/,
          content: {
            pattern: /\s*\S[\s\S]*/,
            alias: "ftl",
            inside: ftl2
          }
        }
      }
    };
    Prism3.hooks.add("before-tokenize", function(env) {
      var pattern = RegExp(/<#--[\s\S]*?-->|<\/?[#@][a-zA-Z](?:<expr>)*?>|\$\{(?:<expr>)*?\}/.source.replace(/<expr>/g, function() {
        return FTL_EXPR;
      }), "gi");
      Prism3.languages["markup-templating"].buildPlaceholders(env, "ftl", pattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "ftl");
    });
  })(Prism2);
}
var gap_1 = gap;
gap.displayName = "gap";
gap.aliases = [];
function gap(Prism2) {
  Prism2.languages.gap = {
    shell: {
      pattern: /^gap>[\s\S]*?(?=^gap>|$(?![\s\S]))/m,
      greedy: true,
      inside: {
        gap: {
          pattern: /^(gap>).+(?:(?:\r(?:\n|(?!\n))|\n)>.*)*/,
          lookbehind: true,
          inside: null
        },
        punctuation: /^gap>/
      }
    },
    comment: {
      pattern: /#.*/,
      greedy: true
    },
    string: {
      pattern: /(^|[^\\'"])(?:'(?:[^\r\n\\']|\\.){1,10}'|"(?:[^\r\n\\"]|\\.)*"(?!")|"""[\s\S]*?""")/,
      lookbehind: true,
      greedy: true,
      inside: {
        continuation: {
          pattern: /([\r\n])>/,
          lookbehind: true,
          alias: "punctuation"
        }
      }
    },
    keyword: /\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\b/,
    boolean: /\b(?:false|true)\b/,
    function: /\b[a-z_]\w*(?=\s*\()/i,
    number: {
      pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,
      lookbehind: true
    },
    continuation: {
      pattern: /([\r\n])>/,
      lookbehind: true,
      alias: "punctuation"
    },
    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\.\./,
    punctuation: /[()[\]{},;.:]/
  };
  Prism2.languages.gap.shell.inside.gap.inside = Prism2.languages.gap;
}
var gcode_1 = gcode;
gcode.displayName = "gcode";
gcode.aliases = [];
function gcode(Prism2) {
  Prism2.languages.gcode = {
    comment: /;.*|\B\(.*?\)\B/,
    string: {
      pattern: /"(?:""|[^"])*"/,
      greedy: true
    },
    keyword: /\b[GM]\d+(?:\.\d+)?\b/,
    property: /\b[A-Z]/,
    checksum: {
      pattern: /(\*)\d+/,
      lookbehind: true,
      alias: "number"
    },
    punctuation: /[:*]/
  };
}
var gdscript_1 = gdscript;
gdscript.displayName = "gdscript";
gdscript.aliases = [];
function gdscript(Prism2) {
  Prism2.languages.gdscript = {
    comment: /#.*/,
    string: {
      pattern: /@?(?:("|')(?:(?!\1)[^\n\\]|\\[\s\S])*\1(?!"|')|"""(?:[^\\]|\\[\s\S])*?""")/,
      greedy: true
    },
    "class-name": {
      pattern: /(^(?:class|class_name|extends)[ \t]+|^export\([ \t]*|\bas[ \t]+|(?:\b(?:const|var)[ \t]|[,(])[ \t]*\w+[ \t]*:[ \t]*|->[ \t]*)[a-zA-Z_]\w*/m,
      lookbehind: true
    },
    keyword: /\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\b/,
    function: /\b[a-z_]\w*(?=[ \t]*\()/i,
    variable: /\$\w+/,
    number: [
      /\b0b[01_]+\b|\b0x[\da-fA-F_]+\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.[\d_]+)(?:e[+-]?[\d_]+)?\b/,
      /\b(?:INF|NAN|PI|TAU)\b/
    ],
    constant: /\b[A-Z][A-Z_\d]*\b/,
    boolean: /\b(?:false|true)\b/,
    operator: /->|:=|&&|\|\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,
    punctuation: /[.:,;()[\]{}]/
  };
}
var gedcom_1 = gedcom;
gedcom.displayName = "gedcom";
gedcom.aliases = [];
function gedcom(Prism2) {
  Prism2.languages.gedcom = {
    "line-value": {
      pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?\w+ ).+/m,
      lookbehind: true,
      inside: {
        pointer: {
          pattern: /^@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@$/,
          alias: "variable"
        }
      }
    },
    tag: {
      pattern: /(^[\t ]*\d+ +(?:@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@ +)?)\w+/m,
      lookbehind: true,
      alias: "string"
    },
    level: {
      pattern: /(^[\t ]*)\d+/m,
      lookbehind: true,
      alias: "number"
    },
    pointer: {
      pattern: /@\w[\w!"$%&'()*+,\-./:;<=>?[\\\]^`{|}~\x80-\xfe #]*@/,
      alias: "variable"
    }
  };
}
var gherkin_1 = gherkin;
gherkin.displayName = "gherkin";
gherkin.aliases = [];
function gherkin(Prism2) {
  (function(Prism3) {
    var tableRow = /(?:\r?\n|\r)[ \t]*\|.+\|(?:(?!\|).)*/.source;
    Prism3.languages.gherkin = {
      pystring: {
        pattern: /("""|''')[\s\S]+?\1/,
        alias: "string"
      },
      comment: {
        pattern: /(^[ \t]*)#.*/m,
        lookbehind: true
      },
      tag: {
        pattern: /(^[ \t]*)@\S*/m,
        lookbehind: true
      },
      feature: {
        pattern: /((?:^|\r?\n|\r)[ \t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\r\n]+(?:\r?\n|\r|$))*/,
        lookbehind: true,
        inside: {
          important: {
            pattern: /(:)[^\r\n]+/,
            lookbehind: true
          },
          keyword: /[^:\r\n]+:/
        }
      },
      scenario: {
        pattern: /(^[ \t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\r\n]*/m,
        lookbehind: true,
        inside: {
          important: {
            pattern: /(:)[^\r\n]*/,
            lookbehind: true
          },
          keyword: /[^:\r\n]+:/
        }
      },
      "table-body": {
        pattern: RegExp("(" + tableRow + ")(?:" + tableRow + ")+"),
        lookbehind: true,
        inside: {
          outline: {
            pattern: /<[^>]+>/,
            alias: "variable"
          },
          td: {
            pattern: /\s*[^\s|][^|]*/,
            alias: "string"
          },
          punctuation: /\|/
        }
      },
      "table-head": {
        pattern: RegExp(tableRow),
        inside: {
          th: {
            pattern: /\s*[^\s|][^|]*/,
            alias: "variable"
          },
          punctuation: /\|/
        }
      },
      atrule: {
        pattern: /(^[ \t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \t])/m,
        lookbehind: true
      },
      string: {
        pattern: /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/,
        inside: {
          outline: {
            pattern: /<[^>]+>/,
            alias: "variable"
          }
        }
      },
      outline: {
        pattern: /<[^>]+>/,
        alias: "variable"
      }
    };
  })(Prism2);
}
var git_1 = git;
git.displayName = "git";
git.aliases = [];
function git(Prism2) {
  Prism2.languages.git = {
    comment: /^#.*/m,
    deleted: /^[-–].*/m,
    inserted: /^\+.*/m,
    string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
    command: {
      pattern: /^.*\$ git .*$/m,
      inside: {
        parameter: /\s--?\w+/
      }
    },
    coord: /^@@.*@@$/m,
    "commit-sha1": /^commit \w{40}$/m
  };
}
var refractorC$3 = c_1;
var glsl_1 = glsl;
glsl.displayName = "glsl";
glsl.aliases = [];
function glsl(Prism2) {
  Prism2.register(refractorC$3);
  Prism2.languages.glsl = Prism2.languages.extend("c", {
    keyword: /\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\b/
  });
}
var gml_1 = gml;
gml.displayName = "gml";
gml.aliases = [];
function gml(Prism2) {
  Prism2.languages.gamemakerlanguage = Prism2.languages.gml = Prism2.languages.extend("clike", {
    keyword: /\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\b/,
    number: /(?:\b0x[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ulf]{0,4}/i,
    operator: /--|\+\+|[-+%/=]=?|!=|\*\*?=?|<[<=>]?|>[=>]?|&&?|\^\^?|\|\|?|~|\b(?:and|at|not|or|with|xor)\b/,
    constant: /\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\d|numpad\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\w+)\b/,
    variable: /\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\d)|argument|global|local|other|self)\b/
  });
}
var gn_1 = gn;
gn.displayName = "gn";
gn.aliases = ["gni"];
function gn(Prism2) {
  Prism2.languages.gn = {
    comment: {
      pattern: /#.*/,
      greedy: true
    },
    "string-literal": {
      pattern: /(^|[^\\"])"(?:[^\r\n"\\]|\\.)*"/,
      lookbehind: true,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[\s\S]*?\}|[a-zA-Z_]\w*|0x[a-fA-F0-9]{2})/,
          lookbehind: true,
          inside: {
            number: /^\$0x[\s\S]{2}$/,
            variable: /^\$\w+$/,
            "interpolation-punctuation": {
              pattern: /^\$\{|\}$/,
              alias: "punctuation"
            },
            expression: {
              pattern: /[\s\S]+/,
              inside: null
            }
          }
        },
        string: /[\s\S]+/
      }
    },
    keyword: /\b(?:else|if)\b/,
    boolean: /\b(?:false|true)\b/,
    "builtin-function": {
      pattern: /\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\s*\()/i,
      alias: "keyword"
    },
    function: /\b[a-z_]\w*(?=\s*\()/i,
    constant: /\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\b/,
    number: /-?\b\d+\b/,
    operator: /[-+!=<>]=?|&&|\|\|/,
    punctuation: /[(){}[\],.]/
  };
  Prism2.languages.gn["string-literal"].inside["interpolation"].inside["expression"].inside = Prism2.languages.gn;
  Prism2.languages.gni = Prism2.languages.gn;
}
var goModule_1 = goModule;
goModule.displayName = "goModule";
goModule.aliases = [];
function goModule(Prism2) {
  Prism2.languages["go-mod"] = Prism2.languages["go-module"] = {
    comment: {
      pattern: /\/\/.*/,
      greedy: true
    },
    version: {
      pattern: /(^|[\s()[\],])v\d+\.\d+\.\d+(?:[+-][-+.\w]*)?(?![^\s()[\],])/,
      lookbehind: true,
      alias: "number"
    },
    "go-version": {
      pattern: /((?:^|\s)go\s+)\d+(?:\.\d+){1,2}/,
      lookbehind: true,
      alias: "number"
    },
    keyword: {
      pattern: /^([ \t]*)(?:exclude|go|module|replace|require|retract)\b/m,
      lookbehind: true
    },
    operator: /=>/,
    punctuation: /[()[\],]/
  };
}
var go_1 = go;
go.displayName = "go";
go.aliases = [];
function go(Prism2) {
  Prism2.languages.go = Prism2.languages.extend("clike", {
    string: {
      pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,
      lookbehind: true,
      greedy: true
    },
    keyword: /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
    boolean: /\b(?:_|false|iota|nil|true)\b/,
    number: [
      /\b0(?:b[01_]+|o[0-7_]+)i?\b/i,
      /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
      /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i
    ],
    operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
    builtin: /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/
  });
  Prism2.languages.insertBefore("go", "string", {
    char: {
      pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/,
      greedy: true
    }
  });
  delete Prism2.languages.go["class-name"];
}
var graphql_1 = graphql;
graphql.displayName = "graphql";
graphql.aliases = [];
function graphql(Prism2) {
  Prism2.languages.graphql = {
    comment: /#.*/,
    description: {
      pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
      greedy: true,
      alias: "string",
      inside: {
        "language-markdown": {
          pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
          lookbehind: true,
          inside: Prism2.languages.markdown
        }
      }
    },
    string: {
      pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
      greedy: true
    },
    number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
    boolean: /\b(?:false|true)\b/,
    variable: /\$[a-z_]\w*/i,
    directive: {
      pattern: /@[a-z_]\w*/i,
      alias: "function"
    },
    "attr-name": {
      pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
      greedy: true
    },
    "atom-input": {
      pattern: /\b[A-Z]\w*Input\b/,
      alias: "class-name"
    },
    scalar: /\b(?:Boolean|Float|ID|Int|String)\b/,
    constant: /\b[A-Z][A-Z_\d]*\b/,
    "class-name": {
      pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,
      lookbehind: true
    },
    fragment: {
      pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
      lookbehind: true,
      alias: "function"
    },
    "definition-mutation": {
      pattern: /(\bmutation\s+)[a-zA-Z_]\w*/,
      lookbehind: true,
      alias: "function"
    },
    "definition-query": {
      pattern: /(\bquery\s+)[a-zA-Z_]\w*/,
      lookbehind: true,
      alias: "function"
    },
    keyword: /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
    operator: /[!=|&]|\.{3}/,
    "property-query": /\w+(?=\s*\()/,
    object: /\w+(?=\s*\{)/,
    punctuation: /[!(){}\[\]:=,]/,
    property: /\w+/
  };
  Prism2.hooks.add("after-tokenize", function afterTokenizeGraphql(env) {
    if (env.language !== "graphql") {
      return;
    }
    var validTokens = env.tokens.filter(function(token2) {
      return typeof token2 !== "string" && token2.type !== "comment" && token2.type !== "scalar";
    });
    var currentIndex = 0;
    function getToken(offset2) {
      return validTokens[currentIndex + offset2];
    }
    function isTokenType(types2, offset2) {
      offset2 = offset2 || 0;
      for (var i3 = 0; i3 < types2.length; i3++) {
        var token2 = getToken(i3 + offset2);
        if (!token2 || token2.type !== types2[i3]) {
          return false;
        }
      }
      return true;
    }
    function findClosingBracket(open, close) {
      var stackHeight = 1;
      for (var i3 = currentIndex; i3 < validTokens.length; i3++) {
        var token2 = validTokens[i3];
        var content = token2.content;
        if (token2.type === "punctuation" && typeof content === "string") {
          if (open.test(content)) {
            stackHeight++;
          } else if (close.test(content)) {
            stackHeight--;
            if (stackHeight === 0) {
              return i3;
            }
          }
        }
      }
      return -1;
    }
    function addAlias(token2, alias2) {
      var aliases = token2.alias;
      if (!aliases) {
        token2.alias = aliases = [];
      } else if (!Array.isArray(aliases)) {
        token2.alias = aliases = [aliases];
      }
      aliases.push(alias2);
    }
    for (; currentIndex < validTokens.length; ) {
      var startToken = validTokens[currentIndex++];
      if (startToken.type === "keyword" && startToken.content === "mutation") {
        var inputVariables = [];
        if (isTokenType(["definition-mutation", "punctuation"]) && getToken(1).content === "(") {
          currentIndex += 2;
          var definitionEnd = findClosingBracket(/^\($/, /^\)$/);
          if (definitionEnd === -1) {
            continue;
          }
          for (; currentIndex < definitionEnd; currentIndex++) {
            var t2 = getToken(0);
            if (t2.type === "variable") {
              addAlias(t2, "variable-input");
              inputVariables.push(t2.content);
            }
          }
          currentIndex = definitionEnd + 1;
        }
        if (isTokenType(["punctuation", "property-query"]) && getToken(0).content === "{") {
          currentIndex++;
          addAlias(getToken(0), "property-mutation");
          if (inputVariables.length > 0) {
            var mutationEnd = findClosingBracket(/^\{$/, /^\}$/);
            if (mutationEnd === -1) {
              continue;
            }
            for (var i2 = currentIndex; i2 < mutationEnd; i2++) {
              var varToken = validTokens[i2];
              if (varToken.type === "variable" && inputVariables.indexOf(varToken.content) >= 0) {
                addAlias(varToken, "variable-input");
              }
            }
          }
        }
      }
    }
  });
}
var groovy_1 = groovy;
groovy.displayName = "groovy";
groovy.aliases = [];
function groovy(Prism2) {
  Prism2.languages.groovy = Prism2.languages.extend("clike", {
    string: [
      {
        pattern: /("""|''')(?:[^\\]|\\[\s\S])*?\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,
        greedy: true
      },
      {
        pattern: /(["'/])(?:\\.|(?!\1)[^\\\r\n])*\1/,
        greedy: true
      }
    ],
    keyword: /\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,
    number: /\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,
    operator: {
      pattern: /(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,
      lookbehind: true
    },
    punctuation: /\.+|[{}[\];(),:$]/
  });
  Prism2.languages.insertBefore("groovy", "string", {
    shebang: {
      pattern: /#!.+/,
      alias: "comment"
    }
  });
  Prism2.languages.insertBefore("groovy", "punctuation", {
    "spock-block": /\b(?:and|cleanup|expect|given|setup|then|when|where):/
  });
  Prism2.languages.insertBefore("groovy", "function", {
    annotation: {
      pattern: /(^|[^.])@\w+/,
      lookbehind: true,
      alias: "punctuation"
    }
  });
  Prism2.hooks.add("wrap", function(env) {
    if (env.language === "groovy" && env.type === "string") {
      var delimiter = env.content.value[0];
      if (delimiter != "'") {
        var pattern = /([^\\])(?:\$(?:\{.*?\}|[\w.]+))/;
        if (delimiter === "$") {
          pattern = /([^\$])(?:\$(?:\{.*?\}|[\w.]+))/;
        }
        env.content.value = env.content.value.replace(/&lt;/g, "<").replace(/&amp;/g, "&");
        env.content = Prism2.highlight(env.content.value, {
          expression: {
            pattern,
            lookbehind: true,
            inside: Prism2.languages.groovy
          }
        });
        env.classes.push(delimiter === "/" ? "regex" : "gstring");
      }
    }
  });
}
var refractorRuby = ruby_1;
var haml_1 = haml;
haml.displayName = "haml";
haml.aliases = [];
function haml(Prism2) {
  Prism2.register(refractorRuby);
  (function(Prism3) {
    Prism3.languages.haml = {
      "multiline-comment": {
        pattern: /((?:^|\r?\n|\r)([\t ]*))(?:\/|-#).*(?:(?:\r?\n|\r)\2[\t ].+)*/,
        lookbehind: true,
        alias: "comment"
      },
      "multiline-code": [
        {
          pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*,[\t ]*(?:(?:\r?\n|\r)\2[\t ].*,[\t ]*)*(?:(?:\r?\n|\r)\2[\t ].+)/,
          lookbehind: true,
          inside: Prism3.languages.ruby
        },
        {
          pattern: /((?:^|\r?\n|\r)([\t ]*)(?:[~-]|[&!]?=)).*\|[\t ]*(?:(?:\r?\n|\r)\2[\t ].*\|[\t ]*)*/,
          lookbehind: true,
          inside: Prism3.languages.ruby
        }
      ],
      filter: {
        pattern: /((?:^|\r?\n|\r)([\t ]*)):[\w-]+(?:(?:\r?\n|\r)(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/,
        lookbehind: true,
        inside: {
          "filter-name": {
            pattern: /^:[\w-]+/,
            alias: "symbol"
          }
        }
      },
      markup: {
        pattern: /((?:^|\r?\n|\r)[\t ]*)<.+/,
        lookbehind: true,
        inside: Prism3.languages.markup
      },
      doctype: {
        pattern: /((?:^|\r?\n|\r)[\t ]*)!!!(?: .+)?/,
        lookbehind: true
      },
      tag: {
        pattern: /((?:^|\r?\n|\r)[\t ]*)[%.#][\w\-#.]*[\w\-](?:\([^)]+\)|\{(?:\{[^}]+\}|[^{}])+\}|\[[^\]]+\])*[\/<>]*/,
        lookbehind: true,
        inside: {
          attributes: [
            {
              pattern: /(^|[^#])\{(?:\{[^}]+\}|[^{}])+\}/,
              lookbehind: true,
              inside: Prism3.languages.ruby
            },
            {
              pattern: /\([^)]+\)/,
              inside: {
                "attr-value": {
                  pattern: /(=\s*)(?:"(?:\\.|[^\\"\r\n])*"|[^)\s]+)/,
                  lookbehind: true
                },
                "attr-name": /[\w:-]+(?=\s*!?=|\s*[,)])/,
                punctuation: /[=(),]/
              }
            },
            {
              pattern: /\[[^\]]+\]/,
              inside: Prism3.languages.ruby
            }
          ],
          punctuation: /[<>]/
        }
      },
      code: {
        pattern: /((?:^|\r?\n|\r)[\t ]*(?:[~-]|[&!]?=)).+/,
        lookbehind: true,
        inside: Prism3.languages.ruby
      },
      interpolation: {
        pattern: /#\{[^}]+\}/,
        inside: {
          delimiter: {
            pattern: /^#\{|\}$/,
            alias: "punctuation"
          },
          ruby: {
            pattern: /[\s\S]+/,
            inside: Prism3.languages.ruby
          }
        }
      },
      punctuation: {
        pattern: /((?:^|\r?\n|\r)[\t ]*)[~=\-&!]+/,
        lookbehind: true
      }
    };
    var filter_pattern = "((?:^|\\r?\\n|\\r)([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+";
    var filters = [
      "css",
      {
        filter: "coffee",
        language: "coffeescript"
      },
      "erb",
      "javascript",
      "less",
      "markdown",
      "ruby",
      "scss",
      "textile"
    ];
    var all_filters = {};
    for (var i2 = 0, l2 = filters.length; i2 < l2; i2++) {
      var filter = filters[i2];
      filter = typeof filter === "string" ? {
        filter,
        language: filter
      } : filter;
      if (Prism3.languages[filter.language]) {
        all_filters["filter-" + filter.filter] = {
          pattern: RegExp(filter_pattern.replace("{{filter_name}}", function() {
            return filter.filter;
          })),
          lookbehind: true,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "symbol"
            },
            text: {
              pattern: /[\s\S]+/,
              alias: [filter.language, "language-" + filter.language],
              inside: Prism3.languages[filter.language]
            }
          }
        };
      }
    }
    Prism3.languages.insertBefore("haml", "filter", all_filters);
  })(Prism2);
}
var refractorMarkupTemplating$7 = markupTemplating_1;
var handlebars_1 = handlebars;
handlebars.displayName = "handlebars";
handlebars.aliases = ["hbs"];
function handlebars(Prism2) {
  Prism2.register(refractorMarkupTemplating$7);
  (function(Prism3) {
    Prism3.languages.handlebars = {
      comment: /\{\{![\s\S]*?\}\}/,
      delimiter: {
        pattern: /^\{\{\{?|\}\}\}?$/,
        alias: "punctuation"
      },
      string: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
      number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,
      boolean: /\b(?:false|true)\b/,
      block: {
        pattern: /^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,
        lookbehind: true,
        alias: "keyword"
      },
      brackets: {
        pattern: /\[[^\]]+\]/,
        inside: {
          punctuation: /\[|\]/,
          variable: /[\s\S]+/
        }
      },
      punctuation: /[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,
      variable: /[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/
    };
    Prism3.hooks.add("before-tokenize", function(env) {
      var handlebarsPattern = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "handlebars", handlebarsPattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "handlebars");
    });
    Prism3.languages.hbs = Prism3.languages.handlebars;
  })(Prism2);
}
var haskell_1 = haskell;
haskell.displayName = "haskell";
haskell.aliases = ["hs"];
function haskell(Prism2) {
  Prism2.languages.haskell = {
    comment: {
      pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\/].*|$)|\{-[\s\S]*?-\})/m,
      lookbehind: true
    },
    char: {
      pattern: /'(?:[^\\']|\\(?:[abfnrtv\\"'&]|\^[A-Z@[\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\d+|o[0-7]+|x[0-9a-fA-F]+))'/,
      alias: "string"
    },
    string: {
      pattern: /"(?:[^\\"]|\\(?:\S|\s+\\))*"/,
      greedy: true
    },
    keyword: /\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b/,
    "import-statement": {
      pattern: /(^[\t ]*)import\s+(?:qualified\s+)?(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*(?:\s+as\s+(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
      lookbehind: true,
      inside: {
        keyword: /\b(?:as|hiding|import|qualified)\b/,
        punctuation: /\./
      }
    },
    builtin: /\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\b/,
    number: /\b(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?|0o[0-7]+|0x[0-9a-f]+)\b/i,
    operator: [
      {
        pattern: /`(?:[A-Z][\w']*\.)*[_a-z][\w']*`/,
        greedy: true
      },
      {
        pattern: /(\s)\.(?=\s)/,
        lookbehind: true
      },
      /[-!#$%*+=?&@|~:<>^\\\/][-!#$%*+=?&@|~.:<>^\\\/]*|\.[-!#$%*+=?&@|~.:<>^\\\/]+/
    ],
    hvariable: {
      pattern: /\b(?:[A-Z][\w']*\.)*[_a-z][\w']*/,
      inside: {
        punctuation: /\./
      }
    },
    constant: {
      pattern: /\b(?:[A-Z][\w']*\.)*[A-Z][\w']*/,
      inside: {
        punctuation: /\./
      }
    },
    punctuation: /[{}[\];(),.:]/
  };
  Prism2.languages.hs = Prism2.languages.haskell;
}
var haxe_1 = haxe;
haxe.displayName = "haxe";
haxe.aliases = [];
function haxe(Prism2) {
  Prism2.languages.haxe = Prism2.languages.extend("clike", {
    string: {
      pattern: /"(?:[^"\\]|\\[\s\S])*"/,
      greedy: true
    },
    "class-name": [
      {
        pattern: /(\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\s+)[A-Z_]\w*/,
        lookbehind: true
      },
      /\b[A-Z]\w*/
    ],
    keyword: /\bthis\b|\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\.)\b/,
    function: {
      pattern: /\b[a-z_]\w*(?=\s*(?:<[^<>]*>\s*)?\()/i,
      greedy: true
    },
    operator: /\.{3}|\+\+|--|&&|\|\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/
  });
  Prism2.languages.insertBefore("haxe", "string", {
    "string-interpolation": {
      pattern: /'(?:[^'\\]|\\[\s\S])*'/,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /(^|[^\\])\$(?:\w+|\{[^{}]+\})/,
          lookbehind: true,
          inside: {
            "interpolation-punctuation": {
              pattern: /^\$\{?|\}$/,
              alias: "punctuation"
            },
            expression: {
              pattern: /[\s\S]+/,
              inside: Prism2.languages.haxe
            }
          }
        },
        string: /[\s\S]+/
      }
    }
  });
  Prism2.languages.insertBefore("haxe", "class-name", {
    regex: {
      pattern: /~\/(?:[^\/\\\r\n]|\\.)+\/[a-z]*/,
      greedy: true,
      inside: {
        "regex-flags": /\b[a-z]+$/,
        "regex-source": {
          pattern: /^(~\/)[\s\S]+(?=\/$)/,
          lookbehind: true,
          alias: "language-regex",
          inside: Prism2.languages.regex
        },
        "regex-delimiter": /^~\/|\/$/
      }
    }
  });
  Prism2.languages.insertBefore("haxe", "keyword", {
    preprocessor: {
      pattern: /#(?:else|elseif|end|if)\b.*/,
      alias: "property"
    },
    metadata: {
      pattern: /@:?[\w.]+/,
      alias: "symbol"
    },
    reification: {
      pattern: /\$(?:\w+|(?=\{))/,
      alias: "important"
    }
  });
}
var hcl_1 = hcl;
hcl.displayName = "hcl";
hcl.aliases = [];
function hcl(Prism2) {
  Prism2.languages.hcl = {
    comment: /(?:\/\/|#).*|\/\*[\s\S]*?(?:\*\/|$)/,
    heredoc: {
      pattern: /<<-?(\w+\b)[\s\S]*?^[ \t]*\1/m,
      greedy: true,
      alias: "string"
    },
    keyword: [
      {
        pattern: /(?:data|resource)\s+(?:"(?:\\[\s\S]|[^\\"])*")(?=\s+"[\w-]+"\s+\{)/i,
        inside: {
          type: {
            pattern: /(resource|data|\s+)(?:"(?:\\[\s\S]|[^\\"])*")/i,
            lookbehind: true,
            alias: "variable"
          }
        }
      },
      {
        pattern: /(?:backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+(?=\{)/i,
        inside: {
          type: {
            pattern: /(backend|module|output|provider|provisioner|variable)\s+(?:[\w-]+|"(?:\\[\s\S]|[^\\"])*")\s+/i,
            lookbehind: true,
            alias: "variable"
          }
        }
      },
      /[\w-]+(?=\s+\{)/
    ],
    property: [/[-\w\.]+(?=\s*=(?!=))/, /"(?:\\[\s\S]|[^\\"])+"(?=\s*[:=])/],
    string: {
      pattern: /"(?:[^\\$"]|\\[\s\S]|\$(?:(?=")|\$+(?!\$)|[^"${])|\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\})*"/,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /(^|[^$])\$\{(?:[^{}"]|"(?:[^\\"]|\\[\s\S])*")*\}/,
          lookbehind: true,
          inside: {
            type: {
              pattern: /(\b(?:count|data|local|module|path|self|terraform|var)\b\.)[\w\*]+/i,
              lookbehind: true,
              alias: "variable"
            },
            keyword: /\b(?:count|data|local|module|path|self|terraform|var)\b/i,
            function: /\w+(?=\()/,
            string: {
              pattern: /"(?:\\[\s\S]|[^\\"])*"/,
              greedy: true
            },
            number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
            punctuation: /[!\$#%&'()*+,.\/;<=>@\[\\\]^`{|}~?:]/
          }
        }
      }
    },
    number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
    boolean: /\b(?:false|true)\b/i,
    punctuation: /[=\[\]{}]/
  };
}
var refractorC$2 = c_1;
var hlsl_1 = hlsl;
hlsl.displayName = "hlsl";
hlsl.aliases = [];
function hlsl(Prism2) {
  Prism2.register(refractorC$2);
  Prism2.languages.hlsl = Prism2.languages.extend("c", {
    "class-name": [
      Prism2.languages.c["class-name"],
      /\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\b/
    ],
    keyword: [
      /\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\b/,
      /\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\b/
    ],
    number: /(?:(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?|\b0x[\da-fA-F]+)[fFhHlLuU]?\b/,
    boolean: /\b(?:false|true)\b/
  });
}
var hoon_1 = hoon;
hoon.displayName = "hoon";
hoon.aliases = [];
function hoon(Prism2) {
  Prism2.languages.hoon = {
    comment: {
      pattern: /::.*/,
      greedy: true
    },
    string: {
      pattern: /"[^"]*"|'[^']*'/,
      greedy: true
    },
    constant: /%(?:\.[ny]|[\w-]+)/,
    "class-name": /@(?:[a-z0-9-]*[a-z0-9])?|\*/i,
    function: /(?:\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,
    keyword: /\.[\^\+\*=\?]|![><:\.=\?!]|=[>|:,\.\-\^<+;/~\*\?]|\?[>|:\.\-\^<\+&~=@!]|\|[\$_%:\.\-\^~\*=@\?]|\+[|\$\+\*]|:[_\-\^\+~\*]|%[_:\.\-\^\+~\*=]|\^[|:\.\-\+&~\*=\?]|\$[|_%:<>\-\^&~@=\?]|;[:<\+;\/~\*=]|~[>|\$_%<\+\/&=\?!]|--|==/
  };
}
var hpkp_1 = hpkp;
hpkp.displayName = "hpkp";
hpkp.aliases = [];
function hpkp(Prism2) {
  Prism2.languages.hpkp = {
    directive: {
      pattern: /\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\s;=]|$)/i,
      alias: "property"
    },
    operator: /=/,
    punctuation: /;/
  };
}
var hsts_1 = hsts;
hsts.displayName = "hsts";
hsts.aliases = [];
function hsts(Prism2) {
  Prism2.languages.hsts = {
    directive: {
      pattern: /\b(?:includeSubDomains|max-age|preload)(?=[\s;=]|$)/i,
      alias: "property"
    },
    operator: /=/,
    punctuation: /;/
  };
}
var http_1 = http;
http.displayName = "http";
http.aliases = [];
function http(Prism2) {
  (function(Prism3) {
    function headerValueOf(name2) {
      return RegExp("(^(?:" + name2 + "):[ 	]*(?![ 	]))[^]+", "i");
    }
    Prism3.languages.http = {
      "request-line": {
        pattern: /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,
        inside: {
          method: {
            pattern: /^[A-Z]+\b/,
            alias: "property"
          },
          "request-target": {
            pattern: /^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,
            lookbehind: true,
            alias: "url",
            inside: Prism3.languages.uri
          },
          "http-version": {
            pattern: /^(\s)HTTP\/[\d.]+/,
            lookbehind: true,
            alias: "property"
          }
        }
      },
      "response-status": {
        pattern: /^HTTP\/[\d.]+ \d+ .+/m,
        inside: {
          "http-version": {
            pattern: /^HTTP\/[\d.]+/,
            alias: "property"
          },
          "status-code": {
            pattern: /^(\s)\d+(?=\s)/,
            lookbehind: true,
            alias: "number"
          },
          "reason-phrase": {
            pattern: /^(\s).+/,
            lookbehind: true,
            alias: "string"
          }
        }
      },
      header: {
        pattern: /^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,
        inside: {
          "header-value": [
            {
              pattern: headerValueOf(/Content-Security-Policy/.source),
              lookbehind: true,
              alias: ["csp", "languages-csp"],
              inside: Prism3.languages.csp
            },
            {
              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),
              lookbehind: true,
              alias: ["hpkp", "languages-hpkp"],
              inside: Prism3.languages.hpkp
            },
            {
              pattern: headerValueOf(/Strict-Transport-Security/.source),
              lookbehind: true,
              alias: ["hsts", "languages-hsts"],
              inside: Prism3.languages.hsts
            },
            {
              pattern: headerValueOf(/[^:]+/.source),
              lookbehind: true
            }
          ],
          "header-name": {
            pattern: /^[^:]+/,
            alias: "keyword"
          },
          punctuation: /^:/
        }
      }
    };
    var langs = Prism3.languages;
    var httpLanguages = {
      "application/javascript": langs.javascript,
      "application/json": langs.json || langs.javascript,
      "application/xml": langs.xml,
      "text/xml": langs.xml,
      "text/html": langs.html,
      "text/css": langs.css,
      "text/plain": langs.plain
    };
    var suffixTypes = {
      "application/json": true,
      "application/xml": true
    };
    function getSuffixPattern(contentType2) {
      var suffix2 = contentType2.replace(/^[a-z]+\//, "");
      var suffixPattern = "\\w+/(?:[\\w.-]+\\+)+" + suffix2 + "(?![+\\w.-])";
      return "(?:" + contentType2 + "|" + suffixPattern + ")";
    }
    var options;
    for (var contentType in httpLanguages) {
      if (httpLanguages[contentType]) {
        options = options || {};
        var pattern = suffixTypes[contentType] ? getSuffixPattern(contentType) : contentType;
        options[contentType.replace(/\//g, "-")] = {
          pattern: RegExp("(" + /content-type:\s*/.source + pattern + /(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source + ")" + /[^ \t\w-][\s\S]*/.source, "i"),
          lookbehind: true,
          inside: httpLanguages[contentType]
        };
      }
    }
    if (options) {
      Prism3.languages.insertBefore("http", "header", options);
    }
  })(Prism2);
}
var ichigojam_1 = ichigojam;
ichigojam.displayName = "ichigojam";
ichigojam.aliases = [];
function ichigojam(Prism2) {
  Prism2.languages.ichigojam = {
    comment: /(?:\B'|REM)(?:[^\n\r]*)/i,
    string: {
      pattern: /"(?:""|[!#$%&'()*,\/:;<=>?^\w +\-.])*"/,
      greedy: true
    },
    number: /\B#[0-9A-F]+|\B`[01]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i,
    keyword: /\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\$|\b)/i,
    function: /\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\$|\b)/i,
    label: /(?:\B@\S+)/,
    operator: /<[=>]?|>=?|\|\||&&|[+\-*\/=|&^~!]|\b(?:AND|NOT|OR)\b/i,
    punctuation: /[\[,;:()\]]/
  };
}
var icon_1 = icon;
icon.displayName = "icon";
icon.aliases = [];
function icon(Prism2) {
  Prism2.languages.icon = {
    comment: /#.*/,
    string: {
      pattern: /(["'])(?:(?!\1)[^\\\r\n_]|\\.|_(?!\1)(?:\r\n|[\s\S]))*\1/,
      greedy: true
    },
    number: /\b(?:\d+r[a-z\d]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b|\.\d+\b/i,
    "builtin-keyword": {
      pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\b/,
      alias: "variable"
    },
    directive: {
      pattern: /\$\w+/,
      alias: "builtin"
    },
    keyword: /\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\b/,
    function: /\b(?!\d)\w+(?=\s*[({]|\s*!\s*\[)/,
    operator: /[+-]:(?!=)|(?:[\/?@^%&]|\+\+?|--?|==?=?|~==?=?|\*\*?|\|\|\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\|~]/,
    punctuation: /[\[\](){},;]/
  };
}
var icuMessageFormat_1 = icuMessageFormat;
icuMessageFormat.displayName = "icuMessageFormat";
icuMessageFormat.aliases = [];
function icuMessageFormat(Prism2) {
  (function(Prism3) {
    function nested(source, level) {
      if (level <= 0) {
        return /[]/.source;
      } else {
        return source.replace(/<SELF>/g, function() {
          return nested(source, level - 1);
        });
      }
    }
    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/;
    var escape = {
      pattern: /''/,
      greedy: true,
      alias: "operator"
    };
    var string2 = {
      pattern: stringPattern,
      greedy: true,
      inside: {
        escape
      }
    };
    var argumentSource = nested(/\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\}/.source.replace(/<STR>/g, function() {
      return stringPattern.source;
    }), 8);
    var nestedMessage = {
      pattern: RegExp(argumentSource),
      inside: {
        message: {
          pattern: /^(\{)[\s\S]+(?=\}$)/,
          lookbehind: true,
          inside: null
        },
        "message-delimiter": {
          pattern: /./,
          alias: "punctuation"
        }
      }
    };
    Prism3.languages["icu-message-format"] = {
      argument: {
        pattern: RegExp(argumentSource),
        greedy: true,
        inside: {
          content: {
            pattern: /^(\{)[\s\S]+(?=\}$)/,
            lookbehind: true,
            inside: {
              "argument-name": {
                pattern: /^(\s*)[^{}:=,\s]+/,
                lookbehind: true
              },
              "choice-style": {
                pattern: /^(\s*,\s*choice\s*,\s*)\S(?:[\s\S]*\S)?/,
                lookbehind: true,
                inside: {
                  punctuation: /\|/,
                  range: {
                    pattern: /^(\s*)[+-]?(?:\d+(?:\.\d*)?|\u221e)\s*[<#\u2264]/,
                    lookbehind: true,
                    inside: {
                      operator: /[<#\u2264]/,
                      number: /\S+/
                    }
                  },
                  rest: null
                }
              },
              "plural-style": {
                pattern: /^(\s*,\s*(?:plural|selectordinal)\s*,\s*)\S(?:[\s\S]*\S)?/,
                lookbehind: true,
                inside: {
                  offset: /^offset:\s*\d+/,
                  "nested-message": nestedMessage,
                  selector: {
                    pattern: /=\d+|[^{}:=,\s]+/,
                    inside: {
                      keyword: /^(?:few|many|one|other|two|zero)$/
                    }
                  }
                }
              },
              "select-style": {
                pattern: /^(\s*,\s*select\s*,\s*)\S(?:[\s\S]*\S)?/,
                lookbehind: true,
                inside: {
                  "nested-message": nestedMessage,
                  selector: {
                    pattern: /[^{}:=,\s]+/,
                    inside: {
                      keyword: /^other$/
                    }
                  }
                }
              },
              keyword: /\b(?:choice|plural|select|selectordinal)\b/,
              "arg-type": {
                pattern: /\b(?:date|duration|number|ordinal|spellout|time)\b/,
                alias: "keyword"
              },
              "arg-skeleton": {
                pattern: /(,\s*)::[^{}:=,\s]+/,
                lookbehind: true
              },
              "arg-style": {
                pattern: /(,\s*)(?:currency|full|integer|long|medium|percent|short)(?=\s*$)/,
                lookbehind: true
              },
              "arg-style-text": {
                pattern: RegExp(/(^\s*,\s*(?=\S))/.source + nested(/(?:[^{}']|'[^']*'|\{(?:<SELF>)?\})+/.source, 8) + "$"),
                lookbehind: true,
                alias: "string"
              },
              punctuation: /,/
            }
          },
          "argument-delimiter": {
            pattern: /./,
            alias: "operator"
          }
        }
      },
      escape,
      string: string2
    };
    nestedMessage.inside.message.inside = Prism3.languages["icu-message-format"];
    Prism3.languages["icu-message-format"].argument.inside.content.inside["choice-style"].inside.rest = Prism3.languages["icu-message-format"];
  })(Prism2);
}
var refractorHaskell$1 = haskell_1;
var idris_1 = idris;
idris.displayName = "idris";
idris.aliases = ["idr"];
function idris(Prism2) {
  Prism2.register(refractorHaskell$1);
  Prism2.languages.idris = Prism2.languages.extend("haskell", {
    comment: {
      pattern: /(?:(?:--|\|\|\|).*$|\{-[\s\S]*?-\})/m
    },
    keyword: /\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\b/,
    builtin: void 0
  });
  Prism2.languages.insertBefore("idris", "keyword", {
    "import-statement": {
      pattern: /(^\s*import\s+)(?:[A-Z][\w']*)(?:\.[A-Z][\w']*)*/m,
      lookbehind: true,
      inside: {
        punctuation: /\./
      }
    }
  });
  Prism2.languages.idr = Prism2.languages.idris;
}
var iecst_1 = iecst;
iecst.displayName = "iecst";
iecst.aliases = [];
function iecst(Prism2) {
  Prism2.languages.iecst = {
    comment: [
      {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\(\*[\s\S]*?(?:\*\)|$)|\{[\s\S]*?(?:\}|$))/,
        lookbehind: true,
        greedy: true
      },
      {
        pattern: /(^|[^\\:])\/\/.*/,
        lookbehind: true,
        greedy: true
      }
    ],
    string: {
      pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    keyword: [
      /\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\b/i,
      /\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\b/
    ],
    "class-name": /\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\b/,
    address: {
      pattern: /%[IQM][XBWDL][\d.]*|%[IQ][\d.]*/,
      alias: "symbol"
    },
    number: /\b(?:16#[\da-f]+|2#[01_]+|0x[\da-f]+)\b|\b(?:D|DT|T|TOD)#[\d_shmd:]*|\b[A-Z]*#[\d.,_]*|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
    boolean: /\b(?:FALSE|NULL|TRUE)\b/,
    operator: /S?R?:?=>?|&&?|\*\*?|<[=>]?|>=?|[-:^/+#]|\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\b/,
    function: /\b[a-z_]\w*(?=\s*\()/i,
    punctuation: /[()[\].,;]/
  };
}
var ignore_1 = ignore;
ignore.displayName = "ignore";
ignore.aliases = ["gitignore", "hgignore", "npmignore"];
function ignore(Prism2) {
  (function(Prism3) {
    Prism3.languages.ignore = {
      comment: /^#.*/m,
      entry: {
        pattern: /\S(?:.*(?:(?:\\ )|\S))?/,
        alias: "string",
        inside: {
          operator: /^!|\*\*?|\?/,
          regex: {
            pattern: /(^|[^\\])\[[^\[\]]*\]/,
            lookbehind: true
          },
          punctuation: /\//
        }
      }
    };
    Prism3.languages.gitignore = Prism3.languages.ignore;
    Prism3.languages.hgignore = Prism3.languages.ignore;
    Prism3.languages.npmignore = Prism3.languages.ignore;
  })(Prism2);
}
var inform7_1 = inform7;
inform7.displayName = "inform7";
inform7.aliases = [];
function inform7(Prism2) {
  Prism2.languages.inform7 = {
    string: {
      pattern: /"[^"]*"/,
      inside: {
        substitution: {
          pattern: /\[[^\[\]]+\]/,
          inside: {
            delimiter: {
              pattern: /\[|\]/,
              alias: "punctuation"
            }
          }
        }
      }
    },
    comment: {
      pattern: /\[[^\[\]]+\]/,
      greedy: true
    },
    title: {
      pattern: /^[ \t]*(?:book|chapter|part(?! of)|section|table|volume)\b.+/im,
      alias: "important"
    },
    number: {
      pattern: /(^|[^-])(?:\b\d+(?:\.\d+)?(?:\^\d+)?(?:(?!\d)\w+)?|\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\b(?!-)/i,
      lookbehind: true
    },
    verb: {
      pattern: /(^|[^-])\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\b(?!-)/i,
      lookbehind: true,
      alias: "operator"
    },
    keyword: {
      pattern: /(^|[^-])\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\b(?!-)/i,
      lookbehind: true
    },
    property: {
      pattern: /(^|[^-])\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\b(?!-)/i,
      lookbehind: true,
      alias: "symbol"
    },
    position: {
      pattern: /(^|[^-])\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\b(?!-)/i,
      lookbehind: true,
      alias: "keyword"
    },
    type: {
      pattern: /(^|[^-])\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\b(?!-)/i,
      lookbehind: true,
      alias: "variable"
    },
    punctuation: /[.,:;(){}]/
  };
  Prism2.languages.inform7["string"].inside["substitution"].inside.rest = Prism2.languages.inform7;
  Prism2.languages.inform7["string"].inside["substitution"].inside.rest.text = {
    pattern: /\S(?:\s*\S)*/,
    alias: "comment"
  };
}
var ini_1 = ini;
ini.displayName = "ini";
ini.aliases = [];
function ini(Prism2) {
  Prism2.languages.ini = {
    comment: {
      pattern: /(^[ \f\t\v]*)[#;][^\n\r]*/m,
      lookbehind: true
    },
    section: {
      pattern: /(^[ \f\t\v]*)\[[^\n\r\]]*\]?/m,
      lookbehind: true,
      inside: {
        "section-name": {
          pattern: /(^\[[ \f\t\v]*)[^ \f\t\v\]]+(?:[ \f\t\v]+[^ \f\t\v\]]+)*/,
          lookbehind: true,
          alias: "selector"
        },
        punctuation: /\[|\]/
      }
    },
    key: {
      pattern: /(^[ \f\t\v]*)[^ \f\n\r\t\v=]+(?:[ \f\t\v]+[^ \f\n\r\t\v=]+)*(?=[ \f\t\v]*=)/m,
      lookbehind: true,
      alias: "attr-name"
    },
    value: {
      pattern: /(=[ \f\t\v]*)[^ \f\n\r\t\v]+(?:[ \f\t\v]+[^ \f\n\r\t\v]+)*/,
      lookbehind: true,
      alias: "attr-value",
      inside: {
        "inner-value": {
          pattern: /^("|').+(?=\1$)/,
          lookbehind: true
        }
      }
    },
    punctuation: /=/
  };
}
var io_1 = io;
io.displayName = "io";
io.aliases = [];
function io(Prism2) {
  Prism2.languages.io = {
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?(?:\*\/|$)|\/\/.*|#.*)/,
      lookbehind: true,
      greedy: true
    },
    "triple-quoted-string": {
      pattern: /"""(?:\\[\s\S]|(?!""")[^\\])*"""/,
      greedy: true,
      alias: "string"
    },
    string: {
      pattern: /"(?:\\.|[^\\\r\n"])*"/,
      greedy: true
    },
    keyword: /\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\b/,
    builtin: /\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\b/,
    boolean: /\b(?:false|nil|true)\b/,
    number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e-?\d+)?/i,
    operator: /[=!*/%+\-^&|]=|>>?=?|<<?=?|:?:?=|\+\+?|--?|\*\*?|\/\/?|%|\|\|?|&&?|\b(?:and|not|or|return)\b|@@?|\?\??|\.\./,
    punctuation: /[{}[\];(),.:]/
  };
}
var j_1 = j;
j.displayName = "j";
j.aliases = [];
function j(Prism2) {
  Prism2.languages.j = {
    comment: {
      pattern: /\bNB\..*/,
      greedy: true
    },
    string: {
      pattern: /'(?:''|[^'\r\n])*'/,
      greedy: true
    },
    keyword: /\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\w+|goto_\w+|if|label_\w+|return|select|throw|try|while|whilst)\.)/,
    verb: {
      pattern: /(?!\^:|;\.|[=!][.:])(?:\{(?:\.|::?)?|p(?:\.\.?|:)|[=!\]]|[<>+*\-%$|,#][.:]?|[?^]\.?|[;\[]:?|[~}"i][.:]|[ACeEIjLor]\.|(?:[_\/\\qsux]|_?\d):)/,
      alias: "keyword"
    },
    number: /\b_?(?:(?!\d:)\d+(?:\.\d+)?(?:(?:ad|ar|[ejpx])_?\d+(?:\.\d+)?)*(?:b_?[\da-z]+(?:\.[\da-z]+)?)?|_\b(?!\.))/,
    adverb: {
      pattern: /[~}]|[\/\\]\.?|[bfM]\.|t[.:]/,
      alias: "builtin"
    },
    operator: /[=a][.:]|_\./,
    conjunction: {
      pattern: /&(?:\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\.|`:?|[\^LS]:|"/,
      alias: "variable"
    },
    punctuation: /[()]/
  };
}
var java_1 = java;
java.displayName = "java";
java.aliases = [];
function java(Prism2) {
  (function(Prism3) {
    var keywords = /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/;
    var classNamePrefix = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source;
    var className = {
      pattern: RegExp(classNamePrefix + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
      lookbehind: true,
      inside: {
        namespace: {
          pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
          inside: {
            punctuation: /\./
          }
        },
        punctuation: /\./
      }
    };
    Prism3.languages.java = Prism3.languages.extend("clike", {
      string: {
        pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"/,
        lookbehind: true,
        greedy: true
      },
      "class-name": [
        className,
        {
          pattern: RegExp(classNamePrefix + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),
          lookbehind: true,
          inside: className.inside
        }
      ],
      keyword: keywords,
      function: [
        Prism3.languages.clike.function,
        {
          pattern: /(::\s*)[a-z_]\w*/,
          lookbehind: true
        }
      ],
      number: /\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,
      operator: {
        pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,
        lookbehind: true
      }
    });
    Prism3.languages.insertBefore("java", "string", {
      "triple-quoted-string": {
        pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,
        greedy: true,
        alias: "string"
      },
      char: {
        pattern: /'(?:\\.|[^'\\\r\n]){1,6}'/,
        greedy: true
      }
    });
    Prism3.languages.insertBefore("java", "class-name", {
      annotation: {
        pattern: /(^|[^.])@\w+(?:\s*\.\s*\w+)*/,
        lookbehind: true,
        alias: "punctuation"
      },
      generics: {
        pattern: /<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,
        inside: {
          "class-name": className,
          keyword: keywords,
          punctuation: /[<>(),.:]/,
          operator: /[?&|]/
        }
      },
      namespace: {
        pattern: RegExp(/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(/<keyword>/g, function() {
          return keywords.source;
        })),
        lookbehind: true,
        inside: {
          punctuation: /\./
        }
      }
    });
  })(Prism2);
}
var javadoclike_1 = javadoclike;
javadoclike.displayName = "javadoclike";
javadoclike.aliases = [];
function javadoclike(Prism2) {
  (function(Prism3) {
    var javaDocLike = Prism3.languages.javadoclike = {
      parameter: {
        pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,
        lookbehind: true
      },
      keyword: {
        pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,
        lookbehind: true
      },
      punctuation: /[{}]/
    };
    function docCommentSupport(lang, callback) {
      var tokenName = "doc-comment";
      var grammar = Prism3.languages[lang];
      if (!grammar) {
        return;
      }
      var token2 = grammar[tokenName];
      if (!token2) {
        var definition = {};
        definition[tokenName] = {
          pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,
          lookbehind: true,
          alias: "comment"
        };
        grammar = Prism3.languages.insertBefore(lang, "comment", definition);
        token2 = grammar[tokenName];
      }
      if (token2 instanceof RegExp) {
        token2 = grammar[tokenName] = {
          pattern: token2
        };
      }
      if (Array.isArray(token2)) {
        for (var i2 = 0, l2 = token2.length; i2 < l2; i2++) {
          if (token2[i2] instanceof RegExp) {
            token2[i2] = {
              pattern: token2[i2]
            };
          }
          callback(token2[i2]);
        }
      } else {
        callback(token2);
      }
    }
    function addSupport(languages, docLanguage) {
      if (typeof languages === "string") {
        languages = [languages];
      }
      languages.forEach(function(lang) {
        docCommentSupport(lang, function(pattern) {
          if (!pattern.inside) {
            pattern.inside = {};
          }
          pattern.inside.rest = docLanguage;
        });
      });
    }
    Object.defineProperty(javaDocLike, "addSupport", {
      value: addSupport
    });
    javaDocLike.addSupport(["java", "javascript", "php"], javaDocLike);
  })(Prism2);
}
var refractorJava$1 = java_1;
var refractorJavadoclike$2 = javadoclike_1;
var javadoc_1 = javadoc;
javadoc.displayName = "javadoc";
javadoc.aliases = [];
function javadoc(Prism2) {
  Prism2.register(refractorJava$1);
  Prism2.register(refractorJavadoclike$2);
  (function(Prism3) {
    var codeLinePattern = /(^(?:[\t ]*(?:\*\s*)*))[^*\s].*$/m;
    var memberReference = /#\s*\w+(?:\s*\([^()]*\))?/.source;
    var reference = /(?:\b[a-zA-Z]\w+\s*\.\s*)*\b[A-Z]\w*(?:\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function() {
      return memberReference;
    });
    Prism3.languages.javadoc = Prism3.languages.extend("javadoclike", {});
    Prism3.languages.insertBefore("javadoc", "keyword", {
      reference: {
        pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\s+(?:\*\s*)?)/.source + "(?:" + reference + ")"),
        lookbehind: true,
        inside: {
          function: {
            pattern: /(#\s*)\w+(?=\s*\()/,
            lookbehind: true
          },
          field: {
            pattern: /(#\s*)\w+/,
            lookbehind: true
          },
          namespace: {
            pattern: /\b(?:[a-z]\w*\s*\.\s*)+/,
            inside: {
              punctuation: /\./
            }
          },
          "class-name": /\b[A-Z]\w*/,
          keyword: Prism3.languages.java.keyword,
          punctuation: /[#()[\],.]/
        }
      },
      "class-name": {
        pattern: /(@param\s+)<[A-Z]\w*>/,
        lookbehind: true,
        inside: {
          punctuation: /[.<>]/
        }
      },
      "code-section": [
        {
          pattern: /(\{@code\s+(?!\s))(?:[^\s{}]|\s+(?![\s}])|\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\})+(?=\s*\})/,
          lookbehind: true,
          inside: {
            code: {
              pattern: codeLinePattern,
              lookbehind: true,
              inside: Prism3.languages.java,
              alias: "language-java"
            }
          }
        },
        {
          pattern: /(<(code|pre|tt)>(?!<code>)\s*)\S(?:\S|\s+\S)*?(?=\s*<\/\2>)/,
          lookbehind: true,
          inside: {
            line: {
              pattern: codeLinePattern,
              lookbehind: true,
              inside: {
                tag: Prism3.languages.markup.tag,
                entity: Prism3.languages.markup.entity,
                code: {
                  pattern: /.+/,
                  inside: Prism3.languages.java,
                  alias: "language-java"
                }
              }
            }
          }
        }
      ],
      tag: Prism3.languages.markup.tag,
      entity: Prism3.languages.markup.entity
    });
    Prism3.languages.javadoclike.addSupport("java", Prism3.languages.javadoc);
  })(Prism2);
}
var javastacktrace_1 = javastacktrace;
javastacktrace.displayName = "javastacktrace";
javastacktrace.aliases = [];
function javastacktrace(Prism2) {
  Prism2.languages.javastacktrace = {
    summary: {
      pattern: /^([\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread "[^"]*")[\t ]+)?[\w$.]+(?::.*)?$/m,
      lookbehind: true,
      inside: {
        keyword: {
          pattern: /^([\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,
          lookbehind: true
        },
        string: {
          pattern: /^(\s*)"[^"]*"/,
          lookbehind: true
        },
        exceptions: {
          pattern: /^(:?\s*)[\w$.]+(?=:|$)/,
          lookbehind: true,
          inside: {
            "class-name": /[\w$]+$/,
            namespace: /\b[a-z]\w*\b/,
            punctuation: /\./
          }
        },
        message: {
          pattern: /(:\s*)\S.*/,
          lookbehind: true,
          alias: "string"
        },
        punctuation: /:/
      }
    },
    "stack-frame": {
      pattern: /^([\t ]*)at (?:[\w$./]|@[\w$.+-]*\/)+(?:<init>)?\([^()]*\)/m,
      lookbehind: true,
      inside: {
        keyword: {
          pattern: /^(\s*)at(?= )/,
          lookbehind: true
        },
        source: [
          {
            pattern: /(\()\w+\.\w+:\d+(?=\))/,
            lookbehind: true,
            inside: {
              file: /^\w+\.\w+/,
              punctuation: /:/,
              "line-number": {
                pattern: /\b\d+\b/,
                alias: "number"
              }
            }
          },
          {
            pattern: /(\()[^()]*(?=\))/,
            lookbehind: true,
            inside: {
              keyword: /^(?:Native Method|Unknown Source)$/
            }
          }
        ],
        "class-name": /[\w$]+(?=\.(?:<init>|[\w$]+)\()/,
        function: /(?:<init>|[\w$]+)(?=\()/,
        "class-loader": {
          pattern: /(\s)[a-z]\w*(?:\.[a-z]\w*)*(?=\/[\w@$.]*\/)/,
          lookbehind: true,
          alias: "namespace",
          inside: {
            punctuation: /\./
          }
        },
        module: {
          pattern: /([\s/])[a-z]\w*(?:\.[a-z]\w*)*(?:@[\w$.+-]*)?(?=\/)/,
          lookbehind: true,
          inside: {
            version: {
              pattern: /(@)[\s\S]+/,
              lookbehind: true,
              alias: "number"
            },
            punctuation: /[@.]/
          }
        },
        namespace: {
          pattern: /(?:\b[a-z]\w*\.)+/,
          inside: {
            punctuation: /\./
          }
        },
        punctuation: /[()/.]/
      }
    },
    more: {
      pattern: /^([\t ]*)\.{3} \d+ [a-z]+(?: [a-z]+)*/m,
      lookbehind: true,
      inside: {
        punctuation: /\.{3}/,
        number: /\d+/,
        keyword: /\b[a-z]+(?: [a-z]+)*\b/
      }
    }
  };
}
var jexl_1 = jexl;
jexl.displayName = "jexl";
jexl.aliases = [];
function jexl(Prism2) {
  Prism2.languages.jexl = {
    string: /(["'])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
    transform: {
      pattern: /(\|\s*)[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*/,
      alias: "function",
      lookbehind: true
    },
    function: /[a-zA-Zа-яА-Я_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$][\wа-яА-Я\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF$]*\s*(?=\()/,
    number: /\b\d+(?:\.\d+)?\b|\B\.\d+\b/,
    operator: /[<>!]=?|-|\+|&&|==|\|\|?|\/\/?|[?:*^%]/,
    boolean: /\b(?:false|true)\b/,
    keyword: /\bin\b/,
    punctuation: /[{}[\](),.]/
  };
}
var jolie_1 = jolie;
jolie.displayName = "jolie";
jolie.aliases = [];
function jolie(Prism2) {
  Prism2.languages.jolie = Prism2.languages.extend("clike", {
    string: {
      pattern: /(^|[^\\])"(?:\\[\s\S]|[^"\\])*"/,
      lookbehind: true,
      greedy: true
    },
    "class-name": {
      pattern: /((?:\b(?:as|courier|embed|in|inputPort|outputPort|service)\b|@)[ \t]*)\w+/,
      lookbehind: true
    },
    keyword: /\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\b/,
    function: /\b[a-z_]\w*(?=[ \t]*[@(])/i,
    number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?l?/i,
    operator: /-[-=>]?|\+[+=]?|<[<=]?|[>=*!]=?|&&|\|\||[?\/%^@|]/,
    punctuation: /[()[\]{},;.:]/,
    builtin: /\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\b/
  });
  Prism2.languages.insertBefore("jolie", "keyword", {
    aggregates: {
      pattern: /(\bAggregates\s*:\s*)(?:\w+(?:\s+with\s+\w+)?\s*,\s*)*\w+(?:\s+with\s+\w+)?/,
      lookbehind: true,
      inside: {
        keyword: /\bwith\b/,
        "class-name": /\w+/,
        punctuation: /,/
      }
    },
    redirects: {
      pattern: /(\bRedirects\s*:\s*)(?:\w+\s*=>\s*\w+\s*,\s*)*(?:\w+\s*=>\s*\w+)/,
      lookbehind: true,
      inside: {
        punctuation: /,/,
        "class-name": /\w+/,
        operator: /=>/
      }
    },
    property: {
      pattern: /\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\b(?=[ \t]*:)/
    }
  });
}
var jq_1 = jq;
jq.displayName = "jq";
jq.aliases = [];
function jq(Prism2) {
  (function(Prism3) {
    var interpolation = /\\\((?:[^()]|\([^()]*\))*\)/.source;
    var string2 = RegExp(/(^|[^\\])"(?:[^"\r\n\\]|\\[^\r\n(]|__)*"/.source.replace(/__/g, function() {
      return interpolation;
    }));
    var stringInterpolation = {
      interpolation: {
        pattern: RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + interpolation),
        lookbehind: true,
        inside: {
          content: {
            pattern: /^(\\\()[\s\S]+(?=\)$)/,
            lookbehind: true,
            inside: null
          },
          punctuation: /^\\\(|\)$/
        }
      }
    };
    var jq2 = Prism3.languages.jq = {
      comment: /#.*/,
      property: {
        pattern: RegExp(string2.source + /(?=\s*:(?!:))/.source),
        lookbehind: true,
        greedy: true,
        inside: stringInterpolation
      },
      string: {
        pattern: string2,
        lookbehind: true,
        greedy: true,
        inside: stringInterpolation
      },
      function: {
        pattern: /(\bdef\s+)[a-z_]\w+/i,
        lookbehind: true
      },
      variable: /\B\$\w+/,
      "property-literal": {
        pattern: /\b[a-z_]\w*(?=\s*:(?!:))/i,
        alias: "property"
      },
      keyword: /\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\b/,
      boolean: /\b(?:false|true)\b/,
      number: /(?:\b\d+\.|\B\.)?\b\d+(?:[eE][+-]?\d+)?\b/,
      operator: [
        {
          pattern: /\|=?/,
          alias: "pipe"
        },
        /\.\.|[!=<>]?=|\?\/\/|\/\/=?|[-+*/%]=?|[<>?]|\b(?:and|not|or)\b/
      ],
      "c-style-function": {
        pattern: /\b[a-z_]\w*(?=\s*\()/i,
        alias: "function"
      },
      punctuation: /::|[()\[\]{},:;]|\.(?=\s*[\[\w$])/,
      dot: {
        pattern: /\./,
        alias: "important"
      }
    };
    stringInterpolation.interpolation.inside.content.inside = jq2;
  })(Prism2);
}
var jsExtras_1 = jsExtras;
jsExtras.displayName = "jsExtras";
jsExtras.aliases = [];
function jsExtras(Prism2) {
  (function(Prism3) {
    Prism3.languages.insertBefore("javascript", "function-variable", {
      "method-variable": {
        pattern: RegExp("(\\.\\s*)" + Prism3.languages.javascript["function-variable"].pattern.source),
        lookbehind: true,
        alias: ["function-variable", "method", "function", "property-access"]
      }
    });
    Prism3.languages.insertBefore("javascript", "function", {
      method: {
        pattern: RegExp("(\\.\\s*)" + Prism3.languages.javascript["function"].source),
        lookbehind: true,
        alias: ["function", "property-access"]
      }
    });
    Prism3.languages.insertBefore("javascript", "constant", {
      "known-class-name": [
        {
          pattern: /\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,
          alias: "class-name"
        },
        {
          pattern: /\b(?:[A-Z]\w*)Error\b/,
          alias: "class-name"
        }
      ]
    });
    function withId(source, flags) {
      return RegExp(source.replace(/<ID>/g, function() {
        return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
      }), flags);
    }
    Prism3.languages.insertBefore("javascript", "keyword", {
      imports: {
        pattern: withId(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),
        lookbehind: true,
        inside: Prism3.languages.javascript
      },
      exports: {
        pattern: withId(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),
        lookbehind: true,
        inside: Prism3.languages.javascript
      }
    });
    Prism3.languages.javascript["keyword"].unshift({
      pattern: /\b(?:as|default|export|from|import)\b/,
      alias: "module"
    }, {
      pattern: /\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,
      alias: "control-flow"
    }, {
      pattern: /\bnull\b/,
      alias: ["null", "nil"]
    }, {
      pattern: /\bundefined\b/,
      alias: "nil"
    });
    Prism3.languages.insertBefore("javascript", "operator", {
      spread: {
        pattern: /\.{3}/,
        alias: "operator"
      },
      arrow: {
        pattern: /=>/,
        alias: "operator"
      }
    });
    Prism3.languages.insertBefore("javascript", "punctuation", {
      "property-access": {
        pattern: withId(/(\.\s*)#?<ID>/.source),
        lookbehind: true
      },
      "maybe-class-name": {
        pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
        lookbehind: true
      },
      dom: {
        pattern: /\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,
        alias: "variable"
      },
      console: {
        pattern: /\bconsole(?=\s*\.)/,
        alias: "class-name"
      }
    });
    var maybeClassNameTokens = [
      "function",
      "function-variable",
      "method",
      "method-variable",
      "property-access"
    ];
    for (var i2 = 0; i2 < maybeClassNameTokens.length; i2++) {
      var token2 = maybeClassNameTokens[i2];
      var value2 = Prism3.languages.javascript[token2];
      if (Prism3.util.type(value2) === "RegExp") {
        value2 = Prism3.languages.javascript[token2] = {
          pattern: value2
        };
      }
      var inside = value2.inside || {};
      value2.inside = inside;
      inside["maybe-class-name"] = /^[A-Z][\s\S]*/;
    }
  })(Prism2);
}
var jsTemplates_1 = jsTemplates;
jsTemplates.displayName = "jsTemplates";
jsTemplates.aliases = [];
function jsTemplates(Prism2) {
  (function(Prism3) {
    var templateString = Prism3.languages.javascript["template-string"];
    var templateLiteralPattern = templateString.pattern.source;
    var interpolationObject = templateString.inside["interpolation"];
    var interpolationPunctuationObject = interpolationObject.inside["interpolation-punctuation"];
    var interpolationPattern = interpolationObject.pattern.source;
    function createTemplate(language, tag) {
      if (!Prism3.languages[language]) {
        return void 0;
      }
      return {
        pattern: RegExp("((?:" + tag + ")\\s*)" + templateLiteralPattern),
        lookbehind: true,
        greedy: true,
        inside: {
          "template-punctuation": {
            pattern: /^`|`$/,
            alias: "string"
          },
          "embedded-code": {
            pattern: /[\s\S]+/,
            alias: language
          }
        }
      };
    }
    Prism3.languages.javascript["template-string"] = [
      createTemplate("css", /\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),
      createTemplate("html", /\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),
      createTemplate("svg", /\bsvg/.source),
      createTemplate("markdown", /\b(?:markdown|md)/.source),
      createTemplate("graphql", /\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),
      createTemplate("sql", /\bsql/.source),
      templateString
    ].filter(Boolean);
    function getPlaceholder(counter, language) {
      return "___" + language.toUpperCase() + "_" + counter + "___";
    }
    function tokenizeWithHooks(code, grammar, language) {
      var env = {
        code,
        grammar,
        language
      };
      Prism3.hooks.run("before-tokenize", env);
      env.tokens = Prism3.tokenize(env.code, env.grammar);
      Prism3.hooks.run("after-tokenize", env);
      return env.tokens;
    }
    function tokenizeInterpolationExpression(expression) {
      var tempGrammar = {};
      tempGrammar["interpolation-punctuation"] = interpolationPunctuationObject;
      var tokens = Prism3.tokenize(expression, tempGrammar);
      if (tokens.length === 3) {
        var args = [1, 1];
        args.push.apply(args, tokenizeWithHooks(tokens[1], Prism3.languages.javascript, "javascript"));
        tokens.splice.apply(tokens, args);
      }
      return new Prism3.Token("interpolation", tokens, interpolationObject.alias, expression);
    }
    function tokenizeEmbedded(code, grammar, language) {
      var _tokens = Prism3.tokenize(code, {
        interpolation: {
          pattern: RegExp(interpolationPattern),
          lookbehind: true
        }
      });
      var placeholderCounter = 0;
      var placeholderMap = {};
      var embeddedCode = _tokens.map(function(token2) {
        if (typeof token2 === "string") {
          return token2;
        } else {
          var interpolationExpression = token2.content;
          var placeholder;
          while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {
          }
          placeholderMap[placeholder] = interpolationExpression;
          return placeholder;
        }
      }).join("");
      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language);
      var placeholders = Object.keys(placeholderMap);
      placeholderCounter = 0;
      function walkTokens(tokens) {
        for (var i2 = 0; i2 < tokens.length; i2++) {
          if (placeholderCounter >= placeholders.length) {
            return;
          }
          var token2 = tokens[i2];
          if (typeof token2 === "string" || typeof token2.content === "string") {
            var placeholder = placeholders[placeholderCounter];
            var s2 = typeof token2 === "string" ? token2 : token2.content;
            var index = s2.indexOf(placeholder);
            if (index !== -1) {
              ++placeholderCounter;
              var before = s2.substring(0, index);
              var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);
              var after = s2.substring(index + placeholder.length);
              var replacement = [];
              if (before) {
                replacement.push(before);
              }
              replacement.push(middle);
              if (after) {
                var afterTokens = [after];
                walkTokens(afterTokens);
                replacement.push.apply(replacement, afterTokens);
              }
              if (typeof token2 === "string") {
                tokens.splice.apply(tokens, [i2, 1].concat(replacement));
                i2 += replacement.length - 1;
              } else {
                token2.content = replacement;
              }
            }
          } else {
            var content = token2.content;
            if (Array.isArray(content)) {
              walkTokens(content);
            } else {
              walkTokens([content]);
            }
          }
        }
      }
      walkTokens(embeddedTokens);
      return new Prism3.Token(language, embeddedTokens, "language-" + language, code);
    }
    var supportedLanguages2 = {
      javascript: true,
      js: true,
      typescript: true,
      ts: true,
      jsx: true,
      tsx: true
    };
    Prism3.hooks.add("after-tokenize", function(env) {
      if (!(env.language in supportedLanguages2)) {
        return;
      }
      function findTemplateStrings(tokens) {
        for (var i2 = 0, l2 = tokens.length; i2 < l2; i2++) {
          var token2 = tokens[i2];
          if (typeof token2 === "string") {
            continue;
          }
          var content = token2.content;
          if (!Array.isArray(content)) {
            if (typeof content !== "string") {
              findTemplateStrings([content]);
            }
            continue;
          }
          if (token2.type === "template-string") {
            var embedded = content[1];
            if (content.length === 3 && typeof embedded !== "string" && embedded.type === "embedded-code") {
              var code = stringContent(embedded);
              var alias2 = embedded.alias;
              var language = Array.isArray(alias2) ? alias2[0] : alias2;
              var grammar = Prism3.languages[language];
              if (!grammar) {
                continue;
              }
              content[1] = tokenizeEmbedded(code, grammar, language);
            }
          } else {
            findTemplateStrings(content);
          }
        }
      }
      findTemplateStrings(env.tokens);
    });
    function stringContent(value2) {
      if (typeof value2 === "string") {
        return value2;
      } else if (Array.isArray(value2)) {
        return value2.map(stringContent).join("");
      } else {
        return stringContent(value2.content);
      }
    }
  })(Prism2);
}
var typescript_1 = typescript;
typescript.displayName = "typescript";
typescript.aliases = ["ts"];
function typescript(Prism2) {
  (function(Prism3) {
    Prism3.languages.typescript = Prism3.languages.extend("javascript", {
      "class-name": {
        pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
        lookbehind: true,
        greedy: true,
        inside: null
      },
      builtin: /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/
    });
    Prism3.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/, /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/, /\btype\b(?=\s*(?:[\{*]|$))/);
    delete Prism3.languages.typescript["parameter"];
    delete Prism3.languages.typescript["literal-property"];
    var typeInside = Prism3.languages.extend("typescript", {});
    delete typeInside["class-name"];
    Prism3.languages.typescript["class-name"].inside = typeInside;
    Prism3.languages.insertBefore("typescript", "function", {
      decorator: {
        pattern: /@[$\w\xA0-\uFFFF]+/,
        inside: {
          at: {
            pattern: /^@/,
            alias: "operator"
          },
          function: /^[\s\S]+/
        }
      },
      "generic-function": {
        pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
        greedy: true,
        inside: {
          function: /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
          generic: {
            pattern: /<[\s\S]+/,
            alias: "class-name",
            inside: typeInside
          }
        }
      }
    });
    Prism3.languages.ts = Prism3.languages.typescript;
  })(Prism2);
}
var refractorJavadoclike$1 = javadoclike_1;
var refractorTypescript$1 = typescript_1;
var jsdoc_1 = jsdoc;
jsdoc.displayName = "jsdoc";
jsdoc.aliases = [];
function jsdoc(Prism2) {
  Prism2.register(refractorJavadoclike$1);
  Prism2.register(refractorTypescript$1);
  (function(Prism3) {
    var javascript2 = Prism3.languages.javascript;
    var type = /\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source;
    var parameterPrefix = "(@(?:arg|argument|param|property)\\s+(?:" + type + "\\s+)?)";
    Prism3.languages.jsdoc = Prism3.languages.extend("javadoclike", {
      parameter: {
        pattern: RegExp(parameterPrefix + /(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source),
        lookbehind: true,
        inside: {
          punctuation: /\./
        }
      }
    });
    Prism3.languages.insertBefore("jsdoc", "keyword", {
      "optional-parameter": {
        pattern: RegExp(parameterPrefix + /\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source),
        lookbehind: true,
        inside: {
          parameter: {
            pattern: /(^\[)[$\w\xA0-\uFFFF\.]+/,
            lookbehind: true,
            inside: {
              punctuation: /\./
            }
          },
          code: {
            pattern: /(=)[\s\S]*(?=\]$)/,
            lookbehind: true,
            inside: javascript2,
            alias: "language-javascript"
          },
          punctuation: /[=[\]]/
        }
      },
      "class-name": [
        {
          pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(/<TYPE>/g, function() {
            return type;
          })),
          lookbehind: true,
          inside: {
            punctuation: /\./
          }
        },
        {
          pattern: RegExp("(@[a-z]+\\s+)" + type),
          lookbehind: true,
          inside: {
            string: javascript2.string,
            number: javascript2.number,
            boolean: javascript2.boolean,
            keyword: Prism3.languages.typescript.keyword,
            operator: /=>|\.\.\.|[&|?:*]/,
            punctuation: /[.,;=<>{}()[\]]/
          }
        }
      ],
      example: {
        pattern: /(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,
        lookbehind: true,
        inside: {
          code: {
            pattern: /^([\t ]*(?:\*\s*)?)\S.*$/m,
            lookbehind: true,
            inside: javascript2,
            alias: "language-javascript"
          }
        }
      }
    });
    Prism3.languages.javadoclike.addSupport("javascript", Prism3.languages.jsdoc);
  })(Prism2);
}
var json_1 = json;
json.displayName = "json";
json.aliases = ["webmanifest"];
function json(Prism2) {
  Prism2.languages.json = {
    property: {
      pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
      lookbehind: true,
      greedy: true
    },
    string: {
      pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
      lookbehind: true,
      greedy: true
    },
    comment: {
      pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
      greedy: true
    },
    number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
    punctuation: /[{}[\],]/,
    operator: /:/,
    boolean: /\b(?:false|true)\b/,
    null: {
      pattern: /\bnull\b/,
      alias: "keyword"
    }
  };
  Prism2.languages.webmanifest = Prism2.languages.json;
}
var refractorJson$1 = json_1;
var json5_1 = json5;
json5.displayName = "json5";
json5.aliases = [];
function json5(Prism2) {
  Prism2.register(refractorJson$1);
  (function(Prism3) {
    var string2 = /("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/;
    Prism3.languages.json5 = Prism3.languages.extend("json", {
      property: [
        {
          pattern: RegExp(string2.source + "(?=\\s*:)"),
          greedy: true
        },
        {
          pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/,
          alias: "unquoted"
        }
      ],
      string: {
        pattern: string2,
        greedy: true
      },
      number: /[+-]?\b(?:NaN|Infinity|0x[a-fA-F\d]+)\b|[+-]?(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+\b)?/
    });
  })(Prism2);
}
var refractorJson = json_1;
var jsonp_1 = jsonp;
jsonp.displayName = "jsonp";
jsonp.aliases = [];
function jsonp(Prism2) {
  Prism2.register(refractorJson);
  Prism2.languages.jsonp = Prism2.languages.extend("json", {
    punctuation: /[{}[\]();,.]/
  });
  Prism2.languages.insertBefore("jsonp", "punctuation", {
    function: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*\()/
  });
}
var jsstacktrace_1 = jsstacktrace;
jsstacktrace.displayName = "jsstacktrace";
jsstacktrace.aliases = [];
function jsstacktrace(Prism2) {
  Prism2.languages.jsstacktrace = {
    "error-message": {
      pattern: /^\S.*/m,
      alias: "string"
    },
    "stack-frame": {
      pattern: /(^[ \t]+)at[ \t].*/m,
      lookbehind: true,
      inside: {
        "not-my-code": {
          pattern: /^at[ \t]+(?!\s)(?:node\.js|<unknown>|.*(?:node_modules|\(<anonymous>\)|\(<unknown>|<anonymous>$|\(internal\/|\(node\.js)).*/m,
          alias: "comment"
        },
        filename: {
          pattern: /(\bat\s+(?!\s)|\()(?:[a-zA-Z]:)?[^():]+(?=:)/,
          lookbehind: true,
          alias: "url"
        },
        function: {
          pattern: /(\bat\s+(?:new\s+)?)(?!\s)[_$a-zA-Z\xA0-\uFFFF<][.$\w\xA0-\uFFFF<>]*/,
          lookbehind: true,
          inside: {
            punctuation: /\./
          }
        },
        punctuation: /[()]/,
        keyword: /\b(?:at|new)\b/,
        alias: {
          pattern: /\[(?:as\s+)?(?!\s)[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\]/,
          alias: "variable"
        },
        "line-number": {
          pattern: /:\d+(?::\d+)?\b/,
          alias: "number",
          inside: {
            punctuation: /:/
          }
        }
      }
    }
  };
}
var jsx_1 = jsx;
jsx.displayName = "jsx";
jsx.aliases = [];
function jsx(Prism2) {
  (function(Prism3) {
    var javascript2 = Prism3.util.clone(Prism3.languages.javascript);
    var space2 = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source;
    var braces = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source;
    var spread = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
    function re2(source, flags) {
      source = source.replace(/<S>/g, function() {
        return space2;
      }).replace(/<BRACES>/g, function() {
        return braces;
      }).replace(/<SPREAD>/g, function() {
        return spread;
      });
      return RegExp(source, flags);
    }
    spread = re2(spread).source;
    Prism3.languages.jsx = Prism3.languages.extend("markup", javascript2);
    Prism3.languages.jsx.tag.pattern = re2(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source);
    Prism3.languages.jsx.tag.inside["tag"].pattern = /^<\/?[^\s>\/]*/;
    Prism3.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/;
    Prism3.languages.jsx.tag.inside["tag"].inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/;
    Prism3.languages.jsx.tag.inside["comment"] = javascript2["comment"];
    Prism3.languages.insertBefore("inside", "attr-name", {
      spread: {
        pattern: re2(/<SPREAD>/.source),
        inside: Prism3.languages.jsx
      }
    }, Prism3.languages.jsx.tag);
    Prism3.languages.insertBefore("inside", "special-attr", {
      script: {
        pattern: re2(/=<BRACES>/.source),
        alias: "language-javascript",
        inside: {
          "script-punctuation": {
            pattern: /^=(?=\{)/,
            alias: "punctuation"
          },
          rest: Prism3.languages.jsx
        }
      }
    }, Prism3.languages.jsx.tag);
    var stringifyToken = function(token2) {
      if (!token2) {
        return "";
      }
      if (typeof token2 === "string") {
        return token2;
      }
      if (typeof token2.content === "string") {
        return token2.content;
      }
      return token2.content.map(stringifyToken).join("");
    };
    var walkTokens = function(tokens) {
      var openedTags = [];
      for (var i2 = 0; i2 < tokens.length; i2++) {
        var token2 = tokens[i2];
        var notTagNorBrace = false;
        if (typeof token2 !== "string") {
          if (token2.type === "tag" && token2.content[0] && token2.content[0].type === "tag") {
            if (token2.content[0].content[0].content === "</") {
              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token2.content[0].content[1])) {
                openedTags.pop();
              }
            } else {
              if (token2.content[token2.content.length - 1].content === "/>")
                ;
              else {
                openedTags.push({
                  tagName: stringifyToken(token2.content[0].content[1]),
                  openedBraces: 0
                });
              }
            }
          } else if (openedTags.length > 0 && token2.type === "punctuation" && token2.content === "{") {
            openedTags[openedTags.length - 1].openedBraces++;
          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token2.type === "punctuation" && token2.content === "}") {
            openedTags[openedTags.length - 1].openedBraces--;
          } else {
            notTagNorBrace = true;
          }
        }
        if (notTagNorBrace || typeof token2 === "string") {
          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
            var plainText = stringifyToken(token2);
            if (i2 < tokens.length - 1 && (typeof tokens[i2 + 1] === "string" || tokens[i2 + 1].type === "plain-text")) {
              plainText += stringifyToken(tokens[i2 + 1]);
              tokens.splice(i2 + 1, 1);
            }
            if (i2 > 0 && (typeof tokens[i2 - 1] === "string" || tokens[i2 - 1].type === "plain-text")) {
              plainText = stringifyToken(tokens[i2 - 1]) + plainText;
              tokens.splice(i2 - 1, 1);
              i2--;
            }
            tokens[i2] = new Prism3.Token("plain-text", plainText, null, plainText);
          }
        }
        if (token2.content && typeof token2.content !== "string") {
          walkTokens(token2.content);
        }
      }
    };
    Prism3.hooks.add("after-tokenize", function(env) {
      if (env.language !== "jsx" && env.language !== "tsx") {
        return;
      }
      walkTokens(env.tokens);
    });
  })(Prism2);
}
var julia_1 = julia;
julia.displayName = "julia";
julia.aliases = [];
function julia(Prism2) {
  Prism2.languages.julia = {
    comment: {
      pattern: /(^|[^\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,
      lookbehind: true
    },
    regex: {
      pattern: /r"(?:\\.|[^"\\\r\n])*"[imsx]{0,4}/,
      greedy: true
    },
    string: {
      pattern: /"""[\s\S]+?"""|(?:\b\w+)?"(?:\\.|[^"\\\r\n])*"|`(?:[^\\`\r\n]|\\.)*`/,
      greedy: true
    },
    char: {
      pattern: /(^|[^\w'])'(?:\\[^\r\n][^'\r\n]*|[^\\\r\n])'/,
      lookbehind: true,
      greedy: true
    },
    keyword: /\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\b/,
    boolean: /\b(?:false|true)\b/,
    number: /(?:\b(?=\d)|\B(?=\.))(?:0[box])?(?:[\da-f]+(?:_[\da-f]+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[efp][+-]?\d+(?:_\d+)*)?j?/i,
    operator: /&&|\|\||[-+*^%÷⊻&$\\]=?|\/[\/=]?|!=?=?|\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,
    punctuation: /::?|[{}[\]();,.?]/,
    constant: /\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\b|[πℯ]/
  };
}
var keepalived_1 = keepalived;
keepalived.displayName = "keepalived";
keepalived.aliases = [];
function keepalived(Prism2) {
  Prism2.languages.keepalived = {
    comment: {
      pattern: /[#!].*/,
      greedy: true
    },
    string: {
      pattern: /(^|[^\\])(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/,
      lookbehind: true,
      greedy: true
    },
    ip: {
      pattern: RegExp(/\b(?:(?:(?:[\da-f]{1,4}:){7}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}:[\da-f]{1,4}|(?:[\da-f]{1,4}:){5}:(?:[\da-f]{1,4}:)?[\da-f]{1,4}|(?:[\da-f]{1,4}:){4}:(?:[\da-f]{1,4}:){0,2}[\da-f]{1,4}|(?:[\da-f]{1,4}:){3}:(?:[\da-f]{1,4}:){0,3}[\da-f]{1,4}|(?:[\da-f]{1,4}:){2}:(?:[\da-f]{1,4}:){0,4}[\da-f]{1,4}|(?:[\da-f]{1,4}:){6}<ipv4>|(?:[\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\da-f]{1,4}:){0,5}<ipv4>|[\da-f]{1,4}::(?:[\da-f]{1,4}:){0,5}[\da-f]{1,4}|::(?:[\da-f]{1,4}:){0,6}[\da-f]{1,4}|(?:[\da-f]{1,4}:){1,7}:)(?:\/\d{1,3})?|<ipv4>(?:\/\d{1,2})?)\b/.source.replace(/<ipv4>/g, function() {
        return /(?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d))/.source;
      }), "i"),
      alias: "number"
    },
    path: {
      pattern: /(\s)\/(?:[^\/\s]+\/)*[^\/\s]*|\b[a-zA-Z]:\\(?:[^\\\s]+\\)*[^\\\s]*/,
      lookbehind: true,
      alias: "string"
    },
    variable: /\$\{?\w+\}?/,
    email: {
      pattern: /[\w-]+@[\w-]+(?:\.[\w-]{2,3}){1,2}/,
      alias: "string"
    },
    "conditional-configuration": {
      pattern: /@\^?[\w-]+/,
      alias: "variable"
    },
    operator: /=/,
    property: /\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\b/,
    constant: /\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\b/,
    number: {
      pattern: /(^|[^\w.-])-?\d+(?:\.\d+)?/,
      lookbehind: true
    },
    boolean: /\b(?:false|no|off|on|true|yes)\b/,
    punctuation: /[\{\}]/
  };
}
var keyman_1 = keyman;
keyman.displayName = "keyman";
keyman.aliases = [];
function keyman(Prism2) {
  Prism2.languages.keyman = {
    comment: {
      pattern: /\bc .*/i,
      greedy: true
    },
    string: {
      pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
      greedy: true
    },
    "virtual-key": {
      pattern: /\[\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\s+)*(?:[TKU]_[\w?]+|[A-E]\d\d?|"[^"\r\n]*"|'[^'\r\n]*')\s*\]/i,
      greedy: true,
      alias: "function"
    },
    "header-keyword": {
      pattern: /&\w+/,
      alias: "bold"
    },
    "header-statement": {
      pattern: /\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\b/i,
      alias: "bold"
    },
    "rule-keyword": {
      pattern: /\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\b/i,
      alias: "keyword"
    },
    "structural-keyword": {
      pattern: /\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\b/i,
      alias: "keyword"
    },
    "compile-target": {
      pattern: /\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,
      alias: "property"
    },
    number: /\b(?:U\+[\dA-F]+|d\d+|x[\da-f]+|\d+)\b/i,
    operator: /[+>\\$]|\.\./,
    punctuation: /[()=,]/
  };
}
var kotlin_1 = kotlin;
kotlin.displayName = "kotlin";
kotlin.aliases = ["kt", "kts"];
function kotlin(Prism2) {
  (function(Prism3) {
    Prism3.languages.kotlin = Prism3.languages.extend("clike", {
      keyword: {
        pattern: /(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,
        lookbehind: true
      },
      function: [
        {
          pattern: /(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,
          greedy: true
        },
        {
          pattern: /(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,
          lookbehind: true,
          greedy: true
        }
      ],
      number: /\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,
      operator: /\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/
    });
    delete Prism3.languages.kotlin["class-name"];
    var interpolationInside = {
      "interpolation-punctuation": {
        pattern: /^\$\{?|\}$/,
        alias: "punctuation"
      },
      expression: {
        pattern: /[\s\S]+/,
        inside: Prism3.languages.kotlin
      }
    };
    Prism3.languages.insertBefore("kotlin", "string", {
      "string-literal": [
        {
          pattern: /"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,
          alias: "multiline",
          inside: {
            interpolation: {
              pattern: /\$(?:[a-z_]\w*|\{[^{}]*\})/i,
              inside: interpolationInside
            },
            string: /[\s\S]+/
          }
        },
        {
          pattern: /"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,
          alias: "singleline",
          inside: {
            interpolation: {
              pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,
              lookbehind: true,
              inside: interpolationInside
            },
            string: /[\s\S]+/
          }
        }
      ],
      char: {
        pattern: /'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,
        greedy: true
      }
    });
    delete Prism3.languages.kotlin["string"];
    Prism3.languages.insertBefore("kotlin", "keyword", {
      annotation: {
        pattern: /\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,
        alias: "builtin"
      }
    });
    Prism3.languages.insertBefore("kotlin", "function", {
      label: {
        pattern: /\b\w+@|@\w+\b/,
        alias: "symbol"
      }
    });
    Prism3.languages.kt = Prism3.languages.kotlin;
    Prism3.languages.kts = Prism3.languages.kotlin;
  })(Prism2);
}
var kumir_1 = kumir;
kumir.displayName = "kumir";
kumir.aliases = ["kum"];
function kumir(Prism2) {
  (function(Prism3) {
    var nonId = /\s\x00-\x1f\x22-\x2f\x3a-\x3f\x5b-\x5e\x60\x7b-\x7e/.source;
    function wrapId(pattern, flags) {
      return RegExp(pattern.replace(/<nonId>/g, nonId), flags);
    }
    Prism3.languages.kumir = {
      comment: {
        pattern: /\|.*/
      },
      prolog: {
        pattern: /#.*/,
        greedy: true
      },
      string: {
        pattern: /"[^\n\r"]*"|'[^\n\r']*'/,
        greedy: true
      },
      boolean: {
        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),
        lookbehind: true
      },
      "operator-word": {
        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),
        lookbehind: true,
        alias: "keyword"
      },
      "system-variable": {
        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),
        lookbehind: true,
        alias: "keyword"
      },
      type: [
        {
          pattern: wrapId(/(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\x20*таб)?(?=[<nonId>]|$)/.source),
          lookbehind: true,
          alias: "builtin"
        },
        {
          pattern: wrapId(/(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source),
          lookbehind: true,
          alias: "important"
        }
      ],
      keyword: {
        pattern: wrapId(/(^|[<nonId>])(?:алг|арг(?:\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\x20+|_)исп)?|кц(?:(?:\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/.source),
        lookbehind: true
      },
      name: {
        pattern: wrapId(/(^|[<nonId>])[^\d<nonId>][^<nonId>]*(?:\x20+[^<nonId>]+)*(?=[<nonId>]|$)/.source),
        lookbehind: true
      },
      number: {
        pattern: wrapId(/(^|[<nonId>])(?:\B\$[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?=[<nonId>]|$)/.source, "i"),
        lookbehind: true
      },
      punctuation: /:=|[(),:;\[\]]/,
      "operator-char": {
        pattern: /\*\*?|<[=>]?|>=?|[-+/=]/,
        alias: "operator"
      }
    };
    Prism3.languages.kum = Prism3.languages.kumir;
  })(Prism2);
}
var kusto_1 = kusto;
kusto.displayName = "kusto";
kusto.aliases = [];
function kusto(Prism2) {
  Prism2.languages.kusto = {
    comment: {
      pattern: /\/\/.*/,
      greedy: true
    },
    string: {
      pattern: /```[\s\S]*?```|[hH]?(?:"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\.)*'|@(?:"[^\r\n"]*"|'[^\r\n']*'))/,
      greedy: true
    },
    verb: {
      pattern: /(\|\s*)[a-z][\w-]*/i,
      lookbehind: true,
      alias: "keyword"
    },
    command: {
      pattern: /\.[a-z][a-z\d-]*\b/,
      alias: "keyword"
    },
    "class-name": /\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\b/,
    keyword: /\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\s+regex|nulls\s+(?:first|last))(?![\w-])/,
    boolean: /\b(?:false|null|true)\b/,
    function: /\b[a-z_]\w*(?=\s*\()/,
    datetime: [
      {
        pattern: /\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\s*,\s*)?\d{1,2}(?:\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\s+|-)\d{2}\s+\d{2}:\d{2}(?::\d{2})?(?:\s*(?:\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\d{4}))?\b/,
        alias: "number"
      },
      {
        pattern: /[+-]?\b(?:\d{4}-\d{2}-\d{2}(?:[ T]\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)?|\d{2}:\d{2}(?::\d{2}(?:\.\d+)?)?)Z?/,
        alias: "number"
      }
    ],
    number: /\b(?:0x[0-9A-Fa-f]+|\d+(?:\.\d+)?(?:[Ee][+-]?\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\b)?|[+-]?\binf\b/,
    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\.\./,
    punctuation: /[()\[\]{},;.:]/
  };
}
var latex_1 = latex;
latex.displayName = "latex";
latex.aliases = ["tex", "context"];
function latex(Prism2) {
  (function(Prism3) {
    var funcPattern = /\\(?:[^a-z()[\]]|[a-z*]+)/i;
    var insideEqu = {
      "equation-command": {
        pattern: funcPattern,
        alias: "regex"
      }
    };
    Prism3.languages.latex = {
      comment: /%.*/,
      cdata: {
        pattern: /(\\begin\{((?:lstlisting|verbatim)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
        lookbehind: true
      },
      equation: [
        {
          pattern: /\$\$(?:\\[\s\S]|[^\\$])+\$\$|\$(?:\\[\s\S]|[^\\$])+\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,
          inside: insideEqu,
          alias: "string"
        },
        {
          pattern: /(\\begin\{((?:align|eqnarray|equation|gather|math|multline)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
          lookbehind: true,
          inside: insideEqu,
          alias: "string"
        }
      ],
      keyword: {
        pattern: /(\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
        lookbehind: true
      },
      url: {
        pattern: /(\\url\{)[^}]+(?=\})/,
        lookbehind: true
      },
      headline: {
        pattern: /(\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
        lookbehind: true,
        alias: "class-name"
      },
      function: {
        pattern: funcPattern,
        alias: "selector"
      },
      punctuation: /[[\]{}&]/
    };
    Prism3.languages.tex = Prism3.languages.latex;
    Prism3.languages.context = Prism3.languages.latex;
  })(Prism2);
}
var refractorMarkupTemplating$6 = markupTemplating_1;
var php_1 = php;
php.displayName = "php";
php.aliases = [];
function php(Prism2) {
  Prism2.register(refractorMarkupTemplating$6);
  (function(Prism3) {
    var comment = /\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/;
    var constant = [
      {
        pattern: /\b(?:false|true)\b/i,
        alias: "boolean"
      },
      {
        pattern: /(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,
        greedy: true,
        lookbehind: true
      },
      {
        pattern: /(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,
        greedy: true,
        lookbehind: true
      },
      /\b(?:null)\b/i,
      /\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/
    ];
    var number2 = /\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i;
    var operator = /<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;
    var punctuation = /[{}\[\](),:;]/;
    Prism3.languages.php = {
      delimiter: {
        pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i,
        alias: "important"
      },
      comment,
      variable: /\$+(?:\w+\b|(?=\{))/,
      package: {
        pattern: /(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
        lookbehind: true,
        inside: {
          punctuation: /\\/
        }
      },
      "class-name-definition": {
        pattern: /(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,
        lookbehind: true,
        alias: "class-name"
      },
      "function-definition": {
        pattern: /(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,
        lookbehind: true,
        alias: "function"
      },
      keyword: [
        {
          pattern: /(\(\s*)\b(?:array|bool|boolean|float|int|integer|object|string)\b(?=\s*\))/i,
          alias: "type-casting",
          greedy: true,
          lookbehind: true
        },
        {
          pattern: /([(,?]\s*)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string)\b(?=\s*\$)/i,
          alias: "type-hint",
          greedy: true,
          lookbehind: true
        },
        {
          pattern: /(\)\s*:\s*(?:\?\s*)?)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string|void)\b/i,
          alias: "return-type",
          greedy: true,
          lookbehind: true
        },
        {
          pattern: /\b(?:array(?!\s*\()|bool|float|int|iterable|mixed|object|string|void)\b/i,
          alias: "type-declaration",
          greedy: true
        },
        {
          pattern: /(\|\s*)(?:false|null)\b|\b(?:false|null)(?=\s*\|)/i,
          alias: "type-declaration",
          greedy: true,
          lookbehind: true
        },
        {
          pattern: /\b(?:parent|self|static)(?=\s*::)/i,
          alias: "static-context",
          greedy: true
        },
        {
          pattern: /(\byield\s+)from\b/i,
          lookbehind: true
        },
        /\bclass\b/i,
        {
          pattern: /((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/i,
          lookbehind: true
        }
      ],
      "argument-name": {
        pattern: /([(,]\s+)\b[a-z_]\w*(?=\s*:(?!:))/i,
        lookbehind: true
      },
      "class-name": [
        {
          pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,
          greedy: true,
          lookbehind: true
        },
        {
          pattern: /(\|\s*)\b[a-z_]\w*(?!\\)\b/i,
          greedy: true,
          lookbehind: true
        },
        {
          pattern: /\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,
          greedy: true
        },
        {
          pattern: /(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,
          alias: "class-name-fully-qualified",
          greedy: true,
          lookbehind: true,
          inside: {
            punctuation: /\\/
          }
        },
        {
          pattern: /(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,
          alias: "class-name-fully-qualified",
          greedy: true,
          inside: {
            punctuation: /\\/
          }
        },
        {
          pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
          alias: "class-name-fully-qualified",
          greedy: true,
          lookbehind: true,
          inside: {
            punctuation: /\\/
          }
        },
        {
          pattern: /\b[a-z_]\w*(?=\s*\$)/i,
          alias: "type-declaration",
          greedy: true
        },
        {
          pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
          alias: ["class-name-fully-qualified", "type-declaration"],
          greedy: true,
          inside: {
            punctuation: /\\/
          }
        },
        {
          pattern: /\b[a-z_]\w*(?=\s*::)/i,
          alias: "static-context",
          greedy: true
        },
        {
          pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,
          alias: ["class-name-fully-qualified", "static-context"],
          greedy: true,
          inside: {
            punctuation: /\\/
          }
        },
        {
          pattern: /([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,
          alias: "type-hint",
          greedy: true,
          lookbehind: true
        },
        {
          pattern: /([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
          alias: ["class-name-fully-qualified", "type-hint"],
          greedy: true,
          lookbehind: true,
          inside: {
            punctuation: /\\/
          }
        },
        {
          pattern: /(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,
          alias: "return-type",
          greedy: true,
          lookbehind: true
        },
        {
          pattern: /(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
          alias: ["class-name-fully-qualified", "return-type"],
          greedy: true,
          lookbehind: true,
          inside: {
            punctuation: /\\/
          }
        }
      ],
      constant,
      function: {
        pattern: /(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,
        lookbehind: true,
        inside: {
          punctuation: /\\/
        }
      },
      property: {
        pattern: /(->\s*)\w+/,
        lookbehind: true
      },
      number: number2,
      operator,
      punctuation
    };
    var string_interpolation = {
      pattern: /\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,
      lookbehind: true,
      inside: Prism3.languages.php
    };
    var string2 = [
      {
        pattern: /<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,
        alias: "nowdoc-string",
        greedy: true,
        inside: {
          delimiter: {
            pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
            alias: "symbol",
            inside: {
              punctuation: /^<<<'?|[';]$/
            }
          }
        }
      },
      {
        pattern: /<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,
        alias: "heredoc-string",
        greedy: true,
        inside: {
          delimiter: {
            pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
            alias: "symbol",
            inside: {
              punctuation: /^<<<"?|[";]$/
            }
          },
          interpolation: string_interpolation
        }
      },
      {
        pattern: /`(?:\\[\s\S]|[^\\`])*`/,
        alias: "backtick-quoted-string",
        greedy: true
      },
      {
        pattern: /'(?:\\[\s\S]|[^\\'])*'/,
        alias: "single-quoted-string",
        greedy: true
      },
      {
        pattern: /"(?:\\[\s\S]|[^\\"])*"/,
        alias: "double-quoted-string",
        greedy: true,
        inside: {
          interpolation: string_interpolation
        }
      }
    ];
    Prism3.languages.insertBefore("php", "variable", {
      string: string2,
      attribute: {
        pattern: /#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,
        greedy: true,
        inside: {
          "attribute-content": {
            pattern: /^(#\[)[\s\S]+(?=\]$)/,
            lookbehind: true,
            inside: {
              comment,
              string: string2,
              "attribute-class-name": [
                {
                  pattern: /([^:]|^)\b[a-z_]\w*(?!\\)\b/i,
                  alias: "class-name",
                  greedy: true,
                  lookbehind: true
                },
                {
                  pattern: /([^:]|^)(?:\\?\b[a-z_]\w*)+/i,
                  alias: ["class-name", "class-name-fully-qualified"],
                  greedy: true,
                  lookbehind: true,
                  inside: {
                    punctuation: /\\/
                  }
                }
              ],
              constant,
              number: number2,
              operator,
              punctuation
            }
          },
          delimiter: {
            pattern: /^#\[|\]$/,
            alias: "punctuation"
          }
        }
      }
    });
    Prism3.hooks.add("before-tokenize", function(env) {
      if (!/<\?/.test(env.code)) {
        return;
      }
      var phpPattern = /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/g;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "php", phpPattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "php");
    });
  })(Prism2);
}
var refractorMarkupTemplating$5 = markupTemplating_1;
var refractorPhp$2 = php_1;
var latte_1 = latte;
latte.displayName = "latte";
latte.aliases = [];
function latte(Prism2) {
  Prism2.register(refractorMarkupTemplating$5);
  Prism2.register(refractorPhp$2);
  (function(Prism3) {
    Prism3.languages.latte = {
      comment: /^\{\*[\s\S]*/,
      "latte-tag": {
        pattern: /(^\{(?:\/(?=[a-z]))?)(?:[=_]|[a-z]\w*\b(?!\())/i,
        lookbehind: true,
        alias: "important"
      },
      delimiter: {
        pattern: /^\{\/?|\}$/,
        alias: "punctuation"
      },
      php: {
        pattern: /\S(?:[\s\S]*\S)?/,
        alias: "language-php",
        inside: Prism3.languages.php
      }
    };
    var markupLatte = Prism3.languages.extend("markup", {});
    Prism3.languages.insertBefore("inside", "attr-value", {
      "n-attr": {
        pattern: /n:[\w-]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+))?/,
        inside: {
          "attr-name": {
            pattern: /^[^\s=]+/,
            alias: "important"
          },
          "attr-value": {
            pattern: /=[\s\S]+/,
            inside: {
              punctuation: [
                /^=/,
                {
                  pattern: /^(\s*)["']|["']$/,
                  lookbehind: true
                }
              ],
              php: {
                pattern: /\S(?:[\s\S]*\S)?/,
                inside: Prism3.languages.php
              }
            }
          }
        }
      }
    }, markupLatte.tag);
    Prism3.hooks.add("before-tokenize", function(env) {
      if (env.language !== "latte") {
        return;
      }
      var lattePattern = /\{\*[\s\S]*?\*\}|\{[^'"\s{}*](?:[^"'/{}]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|\/\*(?:[^*]|\*(?!\/))*\*\/)*\}/g;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "latte", lattePattern);
      env.grammar = markupLatte;
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "latte");
    });
  })(Prism2);
}
var less_1 = less;
less.displayName = "less";
less.aliases = [];
function less(Prism2) {
  Prism2.languages.less = Prism2.languages.extend("css", {
    comment: [
      /\/\*[\s\S]*?\*\//,
      {
        pattern: /(^|[^\\])\/\/.*/,
        lookbehind: true
      }
    ],
    atrule: {
      pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,
      inside: {
        punctuation: /[:()]/
      }
    },
    selector: {
      pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
      inside: {
        variable: /@+[\w-]+/
      }
    },
    property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,
    operator: /[+\-*\/]/
  });
  Prism2.languages.insertBefore("less", "property", {
    variable: [
      {
        pattern: /@[\w-]+\s*:/,
        inside: {
          punctuation: /:/
        }
      },
      /@@?[\w-]+/
    ],
    "mixin-usage": {
      pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,
      lookbehind: true,
      alias: "function"
    }
  });
}
var scheme_1 = scheme;
scheme.displayName = "scheme";
scheme.aliases = [];
function scheme(Prism2) {
  (function(Prism3) {
    Prism3.languages.scheme = {
      comment: /;.*|#;\s*(?:\((?:[^()]|\([^()]*\))*\)|\[(?:[^\[\]]|\[[^\[\]]*\])*\])|#\|(?:[^#|]|#(?!\|)|\|(?!#)|#\|(?:[^#|]|#(?!\|)|\|(?!#))*\|#)*\|#/,
      string: {
        pattern: /"(?:[^"\\]|\\.)*"/,
        greedy: true
      },
      symbol: {
        pattern: /'[^()\[\]#'\s]+/,
        greedy: true
      },
      char: {
        pattern: /#\\(?:[ux][a-fA-F\d]+\b|[-a-zA-Z]+\b|[\uD800-\uDBFF][\uDC00-\uDFFF]|\S)/,
        greedy: true
      },
      "lambda-parameter": [
        {
          pattern: /((?:^|[^'`#])[(\[]lambda\s+)(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)/,
          lookbehind: true
        },
        {
          pattern: /((?:^|[^'`#])[(\[]lambda\s+[(\[])[^()\[\]']+/,
          lookbehind: true
        }
      ],
      keyword: {
        pattern: /((?:^|[^'`#])[(\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\*)?|let\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\[\]\s]|$)/,
        lookbehind: true
      },
      builtin: {
        pattern: /((?:^|[^'`#])[(\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\?|boolean=?\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\?|\?|<\?|<=\?|=\?|>\?|>=\?)|close-(?:input-port|output-port|port)|complex\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\??|eq\?|equal\?|eqv\?|error|error-object(?:-irritants|-message|\?)|eval|even\?|exact(?:-integer-sqrt|-integer\?|\?)?|expt|features|file-error\?|floor(?:-quotient|-remainder|\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\??|input-port(?:-open\?|\?)|integer(?:->char|\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\?|newline|not|null\?|number(?:->string|\?)|numerator|odd\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\?|\?)|pair\?|peek-char|peek-u8|port\?|positive\?|procedure\?|quotient|raise|raise-continuable|rational\?|rationalize|read-(?:bytevector|bytevector!|char|error\?|line|string|u8)|real\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?|<\?|<=\?|=\?|>\?|>=\?)?|substring|symbol(?:->string|\?|=\?)|syntax-error|textual-port\?|truncate(?:-quotient|-remainder|\/)?|u8-ready\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\?)(?=[()\[\]\s]|$)/,
        lookbehind: true
      },
      operator: {
        pattern: /((?:^|[^'`#])[(\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\[\]\s]|$)/,
        lookbehind: true
      },
      number: {
        pattern: RegExp(SortedBNF({
          "<ureal dec>": /\d+(?:\/\d+)|(?:\d+(?:\.\d*)?|\.\d+)(?:[esfdl][+-]?\d+)?/.source,
          "<real dec>": /[+-]?<ureal dec>|[+-](?:inf|nan)\.0/.source,
          "<imaginary dec>": /[+-](?:<ureal dec>|(?:inf|nan)\.0)?i/.source,
          "<complex dec>": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,
          "<num dec>": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,
          "<ureal box>": /[0-9a-f]+(?:\/[0-9a-f]+)?/.source,
          "<real box>": /[+-]?<ureal box>|[+-](?:inf|nan)\.0/.source,
          "<imaginary box>": /[+-](?:<ureal box>|(?:inf|nan)\.0)?i/.source,
          "<complex box>": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,
          "<num box>": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,
          "<number>": /(^|[()\[\]\s])(?:<num dec>|<num box>)(?=[()\[\]\s]|$)/.source
        }), "i"),
        lookbehind: true
      },
      boolean: {
        pattern: /(^|[()\[\]\s])#(?:[ft]|false|true)(?=[()\[\]\s]|$)/,
        lookbehind: true
      },
      function: {
        pattern: /((?:^|[^'`#])[(\[])(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)(?=[()\[\]\s]|$)/,
        lookbehind: true
      },
      identifier: {
        pattern: /(^|[()\[\]\s])\|(?:[^\\|]|\\.)*\|(?=[()\[\]\s]|$)/,
        lookbehind: true,
        greedy: true
      },
      punctuation: /[()\[\]']/
    };
    function SortedBNF(grammar) {
      for (var key in grammar) {
        grammar[key] = grammar[key].replace(/<[\w\s]+>/g, function(key2) {
          return "(?:" + grammar[key2].trim() + ")";
        });
      }
      return grammar[key];
    }
  })(Prism2);
}
var refractorScheme$1 = scheme_1;
var lilypond_1 = lilypond;
lilypond.displayName = "lilypond";
lilypond.aliases = [];
function lilypond(Prism2) {
  Prism2.register(refractorScheme$1);
  (function(Prism3) {
    var schemeExpression = /\((?:[^();"#\\]|\\[\s\S]|;.*(?!.)|"(?:[^"\\]|\\.)*"|#(?:\{(?:(?!#\})[\s\S])*#\}|[^{])|<expr>)*\)/.source;
    var recursivenessLog2 = 5;
    for (var i2 = 0; i2 < recursivenessLog2; i2++) {
      schemeExpression = schemeExpression.replace(/<expr>/g, function() {
        return schemeExpression;
      });
    }
    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\s\S]/.source);
    var lilypond2 = Prism3.languages.lilypond = {
      comment: /%(?:(?!\{).*|\{[\s\S]*?%\})/,
      "embedded-scheme": {
        pattern: RegExp(/(^|[=\s])#(?:"(?:[^"\\]|\\.)*"|[^\s()"]*(?:[^\s()]|<expr>))/.source.replace(/<expr>/g, function() {
          return schemeExpression;
        }), "m"),
        lookbehind: true,
        greedy: true,
        inside: {
          scheme: {
            pattern: /^(#)[\s\S]+$/,
            lookbehind: true,
            alias: "language-scheme",
            inside: {
              "embedded-lilypond": {
                pattern: /#\{[\s\S]*?#\}/,
                greedy: true,
                inside: {
                  punctuation: /^#\{|#\}$/,
                  lilypond: {
                    pattern: /[\s\S]+/,
                    alias: "language-lilypond",
                    inside: null
                  }
                }
              },
              rest: Prism3.languages.scheme
            }
          },
          punctuation: /#/
        }
      },
      string: {
        pattern: /"(?:[^"\\]|\\.)*"/,
        greedy: true
      },
      "class-name": {
        pattern: /(\\new\s+)[\w-]+/,
        lookbehind: true
      },
      keyword: {
        pattern: /\\[a-z][-\w]*/i,
        inside: {
          punctuation: /^\\/
        }
      },
      operator: /[=|]|<<|>>/,
      punctuation: {
        pattern: /(^|[a-z\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\d))|[_^]\.?|[.!])|[{}()[\]<>^~]|\\[()[\]<>\\!]|--|__/,
        lookbehind: true
      },
      number: /\b\d+(?:\/\d+)?\b/
    };
    lilypond2["embedded-scheme"].inside["scheme"].inside["embedded-lilypond"].inside["lilypond"].inside = lilypond2;
    Prism3.languages.ly = lilypond2;
  })(Prism2);
}
var refractorMarkupTemplating$4 = markupTemplating_1;
var liquid_1 = liquid;
liquid.displayName = "liquid";
liquid.aliases = [];
function liquid(Prism2) {
  Prism2.register(refractorMarkupTemplating$4);
  Prism2.languages.liquid = {
    comment: {
      pattern: /(^\{%\s*comment\s*%\})[\s\S]+(?=\{%\s*endcomment\s*%\}$)/,
      lookbehind: true
    },
    delimiter: {
      pattern: /^\{(?:\{\{|[%\{])-?|-?(?:\}\}|[%\}])\}$/,
      alias: "punctuation"
    },
    string: {
      pattern: /"[^"]*"|'[^']*'/,
      greedy: true
    },
    keyword: /\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\b/,
    object: /\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\b/,
    function: [
      {
        pattern: /(\|\s*)\w+/,
        lookbehind: true,
        alias: "filter"
      },
      {
        pattern: /(\.\s*)(?:first|last|size)/,
        lookbehind: true
      }
    ],
    boolean: /\b(?:false|nil|true)\b/,
    range: {
      pattern: /\.\./,
      alias: "operator"
    },
    number: /\b\d+(?:\.\d+)?\b/,
    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\b(?:and|contains(?=\s)|or)\b/,
    punctuation: /[.,\[\]()]/,
    empty: {
      pattern: /\bempty\b/,
      alias: "keyword"
    }
  };
  Prism2.hooks.add("before-tokenize", function(env) {
    var liquidPattern = /\{%\s*comment\s*%\}[\s\S]*?\{%\s*endcomment\s*%\}|\{(?:%[\s\S]*?%|\{\{[\s\S]*?\}\}|\{[\s\S]*?\})\}/g;
    var insideRaw = false;
    Prism2.languages["markup-templating"].buildPlaceholders(env, "liquid", liquidPattern, function(match2) {
      var tagMatch = /^\{%-?\s*(\w+)/.exec(match2);
      if (tagMatch) {
        var tag = tagMatch[1];
        if (tag === "raw" && !insideRaw) {
          insideRaw = true;
          return true;
        } else if (tag === "endraw") {
          insideRaw = false;
          return true;
        }
      }
      return !insideRaw;
    });
  });
  Prism2.hooks.add("after-tokenize", function(env) {
    Prism2.languages["markup-templating"].tokenizePlaceholders(env, "liquid");
  });
}
var lisp_1 = lisp;
lisp.displayName = "lisp";
lisp.aliases = [];
function lisp(Prism2) {
  (function(Prism3) {
    function simple_form(name2) {
      return RegExp(/(\()/.source + "(?:" + name2 + ")" + /(?=[\s\)])/.source);
    }
    function primitive(pattern) {
      return RegExp(/([\s([])/.source + "(?:" + pattern + ")" + /(?=[\s)])/.source);
    }
    var symbol = /(?!\d)[-+*/~!@$%^=<>{}\w]+/.source;
    var marker = "&" + symbol;
    var par = "(\\()";
    var endpar = "(?=\\))";
    var space2 = "(?=\\s)";
    var nestedPar = /(?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\))*\))*\))*/.source;
    var language = {
      heading: {
        pattern: /;;;.*/,
        alias: ["comment", "title"]
      },
      comment: /;.*/,
      string: {
        pattern: /"(?:[^"\\]|\\.)*"/,
        greedy: true,
        inside: {
          argument: /[-A-Z]+(?=[.,\s])/,
          symbol: RegExp("`" + symbol + "'")
        }
      },
      "quoted-symbol": {
        pattern: RegExp("#?'" + symbol),
        alias: ["variable", "symbol"]
      },
      "lisp-property": {
        pattern: RegExp(":" + symbol),
        alias: "property"
      },
      splice: {
        pattern: RegExp(",@?" + symbol),
        alias: ["symbol", "variable"]
      },
      keyword: [
        {
          pattern: RegExp(par + "(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)" + space2),
          lookbehind: true
        },
        {
          pattern: RegExp(par + "(?:append|by|collect|concat|do|finally|for|in|return)" + space2),
          lookbehind: true
        }
      ],
      declare: {
        pattern: simple_form(/declare/.source),
        lookbehind: true,
        alias: "keyword"
      },
      interactive: {
        pattern: simple_form(/interactive/.source),
        lookbehind: true,
        alias: "keyword"
      },
      boolean: {
        pattern: primitive(/nil|t/.source),
        lookbehind: true
      },
      number: {
        pattern: primitive(/[-+]?\d+(?:\.\d*)?/.source),
        lookbehind: true
      },
      defvar: {
        pattern: RegExp(par + "def(?:const|custom|group|var)\\s+" + symbol),
        lookbehind: true,
        inside: {
          keyword: /^def[a-z]+/,
          variable: RegExp(symbol)
        }
      },
      defun: {
        pattern: RegExp(par + /(?:cl-)?(?:defmacro|defun\*?)\s+/.source + symbol + /\s+\(/.source + nestedPar + /\)/.source),
        lookbehind: true,
        greedy: true,
        inside: {
          keyword: /^(?:cl-)?def\S+/,
          arguments: null,
          function: {
            pattern: RegExp("(^\\s)" + symbol),
            lookbehind: true
          },
          punctuation: /[()]/
        }
      },
      lambda: {
        pattern: RegExp(par + "lambda\\s+\\(\\s*(?:&?" + symbol + "(?:\\s+&?" + symbol + ")*\\s*)?\\)"),
        lookbehind: true,
        greedy: true,
        inside: {
          keyword: /^lambda/,
          arguments: null,
          punctuation: /[()]/
        }
      },
      car: {
        pattern: RegExp(par + symbol),
        lookbehind: true
      },
      punctuation: [
        /(?:['`,]?\(|[)\[\]])/,
        {
          pattern: /(\s)\.(?=\s)/,
          lookbehind: true
        }
      ]
    };
    var arg = {
      "lisp-marker": RegExp(marker),
      varform: {
        pattern: RegExp(/\(/.source + symbol + /\s+(?=\S)/.source + nestedPar + /\)/.source),
        inside: language
      },
      argument: {
        pattern: RegExp(/(^|[\s(])/.source + symbol),
        lookbehind: true,
        alias: "variable"
      },
      rest: language
    };
    var forms = "\\S+(?:\\s+\\S+)*";
    var arglist = {
      pattern: RegExp(par + nestedPar + endpar),
      lookbehind: true,
      inside: {
        "rest-vars": {
          pattern: RegExp("&(?:body|rest)\\s+" + forms),
          inside: arg
        },
        "other-marker-vars": {
          pattern: RegExp("&(?:aux|optional)\\s+" + forms),
          inside: arg
        },
        keys: {
          pattern: RegExp("&key\\s+" + forms + "(?:\\s+&allow-other-keys)?"),
          inside: arg
        },
        argument: {
          pattern: RegExp(symbol),
          alias: "variable"
        },
        punctuation: /[()]/
      }
    };
    language["lambda"].inside.arguments = arglist;
    language["defun"].inside.arguments = Prism3.util.clone(arglist);
    language["defun"].inside.arguments.inside.sublist = arglist;
    Prism3.languages.lisp = language;
    Prism3.languages.elisp = language;
    Prism3.languages.emacs = language;
    Prism3.languages["emacs-lisp"] = language;
  })(Prism2);
}
var livescript_1 = livescript;
livescript.displayName = "livescript";
livescript.aliases = [];
function livescript(Prism2) {
  Prism2.languages.livescript = {
    comment: [
      {
        pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
        lookbehind: true
      },
      {
        pattern: /(^|[^\\])#.*/,
        lookbehind: true
      }
    ],
    "interpolated-string": {
      pattern: /(^|[^"])("""|")(?:\\[\s\S]|(?!\2)[^\\])*\2(?!")/,
      lookbehind: true,
      greedy: true,
      inside: {
        variable: {
          pattern: /(^|[^\\])#[a-z_](?:-?[a-z]|[\d_])*/m,
          lookbehind: true
        },
        interpolation: {
          pattern: /(^|[^\\])#\{[^}]+\}/m,
          lookbehind: true,
          inside: {
            "interpolation-punctuation": {
              pattern: /^#\{|\}$/,
              alias: "variable"
            }
          }
        },
        string: /[\s\S]+/
      }
    },
    string: [
      {
        pattern: /('''|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,
        greedy: true
      },
      {
        pattern: /<\[[\s\S]*?\]>/,
        greedy: true
      },
      /\\[^\s,;\])}]+/
    ],
    regex: [
      {
        pattern: /\/\/(?:\[[^\r\n\]]*\]|\\.|(?!\/\/)[^\\\[])+\/\/[gimyu]{0,5}/,
        greedy: true,
        inside: {
          comment: {
            pattern: /(^|[^\\])#.*/,
            lookbehind: true
          }
        }
      },
      {
        pattern: /\/(?:\[[^\r\n\]]*\]|\\.|[^/\\\r\n\[])+\/[gimyu]{0,5}/,
        greedy: true
      }
    ],
    keyword: {
      pattern: /(^|(?!-).)\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\b/m,
      lookbehind: true
    },
    "keyword-operator": {
      pattern: /(^|[^-])\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\b)/m,
      lookbehind: true,
      alias: "operator"
    },
    boolean: {
      pattern: /(^|[^-])\b(?:false|no|off|on|true|yes)(?!-)\b/m,
      lookbehind: true
    },
    argument: {
      pattern: /(^|(?!\.&\.)[^&])&(?!&)\d*/m,
      lookbehind: true,
      alias: "variable"
    },
    number: /\b(?:\d+~[\da-z]+|\d[\d_]*(?:\.\d[\d_]*)?(?:[a-z]\w*)?)/i,
    identifier: /[a-z_](?:-?[a-z]|[\d_])*/i,
    operator: [
      {
        pattern: /( )\.(?= )/,
        lookbehind: true
      },
      /\.(?:[=~]|\.\.?)|\.(?:[&|^]|<<|>>>?)\.|:(?:=|:=?)|&&|\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\+\+?|@@?|%%?|\*\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\^\^?|[\/?]/
    ],
    punctuation: /[(){}\[\]|.,:;`]/
  };
  Prism2.languages.livescript["interpolated-string"].inside["interpolation"].inside.rest = Prism2.languages.livescript;
}
var llvm_1 = llvm;
llvm.displayName = "llvm";
llvm.aliases = [];
function llvm(Prism2) {
  (function(Prism3) {
    Prism3.languages.llvm = {
      comment: /;.*/,
      string: {
        pattern: /"[^"]*"/,
        greedy: true
      },
      boolean: /\b(?:false|true)\b/,
      variable: /[%@!#](?:(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+|\d+)/i,
      label: /(?!\d)(?:[-$.\w]|\\[a-f\d]{2})+:/i,
      type: {
        pattern: /\b(?:double|float|fp128|half|i[1-9]\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\b/,
        alias: "class-name"
      },
      keyword: /\b[a-z_][a-z_0-9]*\b/,
      number: /[+-]?\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-Fa-f]+\b|\b0xK[\dA-Fa-f]{20}\b|\b0x[ML][\dA-Fa-f]{32}\b|\b0xH[\dA-Fa-f]{4}\b/,
      punctuation: /[{}[\];(),.!*=<>]/
    };
  })(Prism2);
}
var log_1 = log;
log.displayName = "log";
log.aliases = [];
function log(Prism2) {
  Prism2.languages.log = {
    string: {
      pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?![st] | \w)(?:[^'\\\r\n]|\\.)*'/,
      greedy: true
    },
    exception: {
      pattern: /(^|[^\w.])[a-z][\w.]*(?:Error|Exception):.*(?:(?:\r\n?|\n)[ \t]*(?:at[ \t].+|\.{3}.*|Caused by:.*))+(?:(?:\r\n?|\n)[ \t]*\.\.\. .*)?/,
      lookbehind: true,
      greedy: true,
      alias: ["javastacktrace", "language-javastacktrace"],
      inside: Prism2.languages["javastacktrace"] || {
        keyword: /\bat\b/,
        function: /[a-z_][\w$]*(?=\()/,
        punctuation: /[.:()]/
      }
    },
    level: [
      {
        pattern: /\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\b/,
        alias: ["error", "important"]
      },
      {
        pattern: /\b(?:WARN|WARNING|WRN)\b/,
        alias: ["warning", "important"]
      },
      {
        pattern: /\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\b/,
        alias: ["info", "keyword"]
      },
      {
        pattern: /\b(?:DBG|DEBUG|FINE)\b/,
        alias: ["debug", "keyword"]
      },
      {
        pattern: /\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\b/,
        alias: ["trace", "comment"]
      }
    ],
    property: {
      pattern: /((?:^|[\]|])[ \t]*)[a-z_](?:[\w-]|\b\/\b)*(?:[. ]\(?\w(?:[\w-]|\b\/\b)*\)?)*:(?=\s)/im,
      lookbehind: true
    },
    separator: {
      pattern: /(^|[^-+])-{3,}|={3,}|\*{3,}|- - /m,
      lookbehind: true,
      alias: "comment"
    },
    url: /\b(?:file|ftp|https?):\/\/[^\s|,;'"]*[^\s|,;'">.]/,
    email: {
      pattern: /(^|\s)[-\w+.]+@[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)+(?=\s)/,
      lookbehind: true,
      alias: "url"
    },
    "ip-address": {
      pattern: /\b(?:\d{1,3}(?:\.\d{1,3}){3})\b/,
      alias: "constant"
    },
    "mac-address": {
      pattern: /\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\b/i,
      alias: "constant"
    },
    domain: {
      pattern: /(^|\s)[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)*\.[a-z][a-z0-9-]+(?=\s)/,
      lookbehind: true,
      alias: "constant"
    },
    uuid: {
      pattern: /\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/i,
      alias: "constant"
    },
    hash: {
      pattern: /\b(?:[a-f0-9]{32}){1,2}\b/i,
      alias: "constant"
    },
    "file-path": {
      pattern: /\b[a-z]:[\\/][^\s|,;:(){}\[\]"']+|(^|[\s:\[\](>|])\.{0,2}\/\w[^\s|,;:(){}\[\]"']*/i,
      lookbehind: true,
      greedy: true,
      alias: "string"
    },
    date: {
      pattern: RegExp(/\b\d{4}[-/]\d{2}[-/]\d{2}(?:T(?=\d{1,2}:)|(?=\s\d{1,2}:))/.source + "|" + /\b\d{1,4}[-/ ](?:\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\d{2,4}T?\b/.source + "|" + /\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\s{1,2}\d{1,2}\b/.source, "i"),
      alias: "number"
    },
    time: {
      pattern: /\b\d{1,2}:\d{1,2}:\d{1,2}(?:[.,:]\d+)?(?:\s?[+-]\d{2}:?\d{2}|Z)?\b/,
      alias: "number"
    },
    boolean: /\b(?:false|null|true)\b/i,
    number: {
      pattern: /(^|[^.\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\d[\da-f]*(?:\.\d+)*(?:e[+-]?\d+)?[a-z]{0,3}\b)\b(?!\.\w)/i,
      lookbehind: true
    },
    operator: /[;:?<=>~/@!$%&+\-|^(){}*#]/,
    punctuation: /[\[\].,]/
  };
}
var lolcode_1 = lolcode;
lolcode.displayName = "lolcode";
lolcode.aliases = [];
function lolcode(Prism2) {
  Prism2.languages.lolcode = {
    comment: [/\bOBTW\s[\s\S]*?\sTLDR\b/, /\bBTW.+/],
    string: {
      pattern: /"(?::.|[^":])*"/,
      inside: {
        variable: /:\{[^}]+\}/,
        symbol: [/:\([a-f\d]+\)/i, /:\[[^\]]+\]/, /:[)>o":]/]
      },
      greedy: true
    },
    number: /(?:\B-)?(?:\b\d+(?:\.\d*)?|\B\.\d+)/,
    symbol: {
      pattern: /(^|\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\s|,|$)/,
      lookbehind: true,
      inside: {
        keyword: /A(?=\s)/
      }
    },
    label: {
      pattern: /((?:^|\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\w*/,
      lookbehind: true,
      alias: "string"
    },
    function: {
      pattern: /((?:^|\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\w*/,
      lookbehind: true
    },
    keyword: [
      {
        pattern: /(^|\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\?|YA RLY|YR)(?=\s|,|$)/,
        lookbehind: true
      },
      /'Z(?=\s|,|$)/
    ],
    boolean: {
      pattern: /(^|\s)(?:FAIL|WIN)(?=\s|,|$)/,
      lookbehind: true
    },
    variable: {
      pattern: /(^|\s)IT(?=\s|,|$)/,
      lookbehind: true
    },
    operator: {
      pattern: /(^|\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\s|,|$)/,
      lookbehind: true
    },
    punctuation: /\.{3}|…|,|!/
  };
}
var magma_1 = magma;
magma.displayName = "magma";
magma.aliases = [];
function magma(Prism2) {
  Prism2.languages.magma = {
    output: {
      pattern: /^(>.*(?:\r(?:\n|(?!\n))|\n))(?!>)(?:.+|(?:\r(?:\n|(?!\n))|\n)(?!>).*)(?:(?:\r(?:\n|(?!\n))|\n)(?!>).*)*/m,
      lookbehind: true,
      greedy: true
    },
    comment: {
      pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
      greedy: true
    },
    string: {
      pattern: /(^|[^\\"])"(?:[^\r\n\\"]|\\.)*"/,
      lookbehind: true,
      greedy: true
    },
    keyword: /\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\b/,
    boolean: /\b(?:false|true)\b/,
    generator: {
      pattern: /\b[a-z_]\w*(?=\s*<)/i,
      alias: "class-name"
    },
    function: /\b[a-z_]\w*(?=\s*\()/i,
    number: {
      pattern: /(^|[^\w.]|\.\.)(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?:_[a-z]?)?(?=$|[^\w.]|\.\.)/,
      lookbehind: true
    },
    operator: /->|[-+*/^~!|#=]|:=|\.\./,
    punctuation: /[()[\]{}<>,;.:]/
  };
}
var makefile_1 = makefile;
makefile.displayName = "makefile";
makefile.aliases = [];
function makefile(Prism2) {
  Prism2.languages.makefile = {
    comment: {
      pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
      lookbehind: true
    },
    string: {
      pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    "builtin-target": {
      pattern: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
      alias: "builtin"
    },
    target: {
      pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,
      alias: "symbol",
      inside: {
        variable: /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/
      }
    },
    variable: /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
    keyword: /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
    function: {
      pattern: /(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,
      lookbehind: true
    },
    operator: /(?:::|[?:+!])?=|[|@]/,
    punctuation: /[:;(){}]/
  };
}
var markdown_1 = markdown;
markdown.displayName = "markdown";
markdown.aliases = ["md"];
function markdown(Prism2) {
  (function(Prism3) {
    var inner = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
    function createInline(pattern) {
      pattern = pattern.replace(/<inner>/g, function() {
        return inner;
      });
      return RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + pattern + ")");
    }
    var tableCell = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source;
    var tableRow = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g, function() {
      return tableCell;
    });
    var tableLine = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
    Prism3.languages.markdown = Prism3.languages.extend("markup", {});
    Prism3.languages.insertBefore("markdown", "prolog", {
      "front-matter-block": {
        pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
        lookbehind: true,
        greedy: true,
        inside: {
          punctuation: /^---|---$/,
          "front-matter": {
            pattern: /\S+(?:\s+\S+)*/,
            alias: ["yaml", "language-yaml"],
            inside: Prism3.languages.yaml
          }
        }
      },
      blockquote: {
        pattern: /^>(?:[\t ]*>)*/m,
        alias: "punctuation"
      },
      table: {
        pattern: RegExp("^" + tableRow + tableLine + "(?:" + tableRow + ")*", "m"),
        inside: {
          "table-data-rows": {
            pattern: RegExp("^(" + tableRow + tableLine + ")(?:" + tableRow + ")*$"),
            lookbehind: true,
            inside: {
              "table-data": {
                pattern: RegExp(tableCell),
                inside: Prism3.languages.markdown
              },
              punctuation: /\|/
            }
          },
          "table-line": {
            pattern: RegExp("^(" + tableRow + ")" + tableLine + "$"),
            lookbehind: true,
            inside: {
              punctuation: /\||:?-{3,}:?/
            }
          },
          "table-header-row": {
            pattern: RegExp("^" + tableRow + "$"),
            inside: {
              "table-header": {
                pattern: RegExp(tableCell),
                alias: "important",
                inside: Prism3.languages.markdown
              },
              punctuation: /\|/
            }
          }
        }
      },
      code: [
        {
          pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
          lookbehind: true,
          alias: "keyword"
        },
        {
          pattern: /^```[\s\S]*?^```$/m,
          greedy: true,
          inside: {
            "code-block": {
              pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
              lookbehind: true
            },
            "code-language": {
              pattern: /^(```).+/,
              lookbehind: true
            },
            punctuation: /```/
          }
        }
      ],
      title: [
        {
          pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
          alias: "important",
          inside: {
            punctuation: /==+$|--+$/
          }
        },
        {
          pattern: /(^\s*)#.+/m,
          lookbehind: true,
          alias: "important",
          inside: {
            punctuation: /^#+|#+$/
          }
        }
      ],
      hr: {
        pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
        lookbehind: true,
        alias: "punctuation"
      },
      list: {
        pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
        lookbehind: true,
        alias: "punctuation"
      },
      "url-reference": {
        pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
        inside: {
          variable: {
            pattern: /^(!?\[)[^\]]+/,
            lookbehind: true
          },
          string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
          punctuation: /^[\[\]!:]|[<>]/
        },
        alias: "url"
      },
      bold: {
        pattern: createInline(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),
        lookbehind: true,
        greedy: true,
        inside: {
          content: {
            pattern: /(^..)[\s\S]+(?=..$)/,
            lookbehind: true,
            inside: {}
          },
          punctuation: /\*\*|__/
        }
      },
      italic: {
        pattern: createInline(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),
        lookbehind: true,
        greedy: true,
        inside: {
          content: {
            pattern: /(^.)[\s\S]+(?=.$)/,
            lookbehind: true,
            inside: {}
          },
          punctuation: /[*_]/
        }
      },
      strike: {
        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\2/.source),
        lookbehind: true,
        greedy: true,
        inside: {
          content: {
            pattern: /(^~~?)[\s\S]+(?=\1$)/,
            lookbehind: true,
            inside: {}
          },
          punctuation: /~~?/
        }
      },
      "code-snippet": {
        pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,
        lookbehind: true,
        greedy: true,
        alias: ["code", "keyword"]
      },
      url: {
        pattern: createInline(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),
        lookbehind: true,
        greedy: true,
        inside: {
          operator: /^!/,
          content: {
            pattern: /(^\[)[^\]]+(?=\])/,
            lookbehind: true,
            inside: {}
          },
          variable: {
            pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/,
            lookbehind: true
          },
          url: {
            pattern: /(^\]\()[^\s)]+/,
            lookbehind: true
          },
          string: {
            pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,
            lookbehind: true
          }
        }
      }
    });
    ["url", "bold", "italic", "strike"].forEach(function(token2) {
      ["url", "bold", "italic", "strike", "code-snippet"].forEach(function(inside) {
        if (token2 !== inside) {
          Prism3.languages.markdown[token2].inside.content.inside[inside] = Prism3.languages.markdown[inside];
        }
      });
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      if (env.language !== "markdown" && env.language !== "md") {
        return;
      }
      function walkTokens(tokens) {
        if (!tokens || typeof tokens === "string") {
          return;
        }
        for (var i2 = 0, l2 = tokens.length; i2 < l2; i2++) {
          var token2 = tokens[i2];
          if (token2.type !== "code") {
            walkTokens(token2.content);
            continue;
          }
          var codeLang = token2.content[1];
          var codeBlock = token2.content[3];
          if (codeLang && codeBlock && codeLang.type === "code-language" && codeBlock.type === "code-block" && typeof codeLang.content === "string") {
            var lang = codeLang.content.replace(/\b#/g, "sharp").replace(/\b\+\+/g, "pp");
            lang = (/[a-z][\w-]*/i.exec(lang) || [""])[0].toLowerCase();
            var alias2 = "language-" + lang;
            if (!codeBlock.alias) {
              codeBlock.alias = [alias2];
            } else if (typeof codeBlock.alias === "string") {
              codeBlock.alias = [codeBlock.alias, alias2];
            } else {
              codeBlock.alias.push(alias2);
            }
          }
        }
      }
      walkTokens(env.tokens);
    });
    Prism3.hooks.add("wrap", function(env) {
      if (env.type !== "code-block") {
        return;
      }
      var codeLang = "";
      for (var i2 = 0, l2 = env.classes.length; i2 < l2; i2++) {
        var cls = env.classes[i2];
        var match2 = /language-(.+)/.exec(cls);
        if (match2) {
          codeLang = match2[1];
          break;
        }
      }
      var grammar = Prism3.languages[codeLang];
      if (!grammar) {
        if (codeLang && codeLang !== "none" && Prism3.plugins.autoloader) {
          var id2 = "md-" + new Date().valueOf() + "-" + Math.floor(Math.random() * 1e16);
          env.attributes["id"] = id2;
          Prism3.plugins.autoloader.loadLanguages(codeLang, function() {
            var ele = document.getElementById(id2);
            if (ele) {
              ele.innerHTML = Prism3.highlight(ele.textContent, Prism3.languages[codeLang], codeLang);
            }
          });
        }
      } else {
        env.content = Prism3.highlight(textContent(env.content.value), grammar, codeLang);
      }
    });
    var tagPattern = RegExp(Prism3.languages.markup.tag.pattern.source, "gi");
    var KNOWN_ENTITY_NAMES = {
      amp: "&",
      lt: "<",
      gt: ">",
      quot: '"'
    };
    var fromCodePoint = String.fromCodePoint || String.fromCharCode;
    function textContent(html2) {
      var text = html2.replace(tagPattern, "");
      text = text.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function(m2, code) {
        code = code.toLowerCase();
        if (code[0] === "#") {
          var value2;
          if (code[1] === "x") {
            value2 = parseInt(code.slice(2), 16);
          } else {
            value2 = Number(code.slice(1));
          }
          return fromCodePoint(value2);
        } else {
          var known = KNOWN_ENTITY_NAMES[code];
          if (known) {
            return known;
          }
          return m2;
        }
      });
      return text;
    }
    Prism3.languages.md = Prism3.languages.markdown;
  })(Prism2);
}
var matlab_1 = matlab;
matlab.displayName = "matlab";
matlab.aliases = [];
function matlab(Prism2) {
  Prism2.languages.matlab = {
    comment: [/%\{[\s\S]*?\}%/, /%.+/],
    string: {
      pattern: /\B'(?:''|[^'\r\n])*'/,
      greedy: true
    },
    number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,
    keyword: /\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\b/,
    function: /\b(?!\d)\w+(?=\s*\()/,
    operator: /\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,
    punctuation: /\.{3}|[.,;\[\](){}!]/
  };
}
var maxscript_1 = maxscript;
maxscript.displayName = "maxscript";
maxscript.aliases = [];
function maxscript(Prism2) {
  (function(Prism3) {
    var keywords = /\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\b/i;
    Prism3.languages.maxscript = {
      comment: {
        pattern: /\/\*[\s\S]*?(?:\*\/|$)|--.*/,
        greedy: true
      },
      string: {
        pattern: /(^|[^"\\@])(?:"(?:[^"\\]|\\[\s\S])*"|@"[^"]*")/,
        lookbehind: true,
        greedy: true
      },
      path: {
        pattern: /\$(?:[\w/\\.*?]|'[^']*')*/,
        greedy: true,
        alias: "string"
      },
      "function-call": {
        pattern: RegExp("((?:" + (/^/.source + "|" + /[;=<>+\-*/^({\[]/.source + "|" + /\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\b/.source) + ")[ 	]*)(?!" + keywords.source + ")" + /[a-z_]\w*\b/.source + "(?=[ 	]*(?:" + ("(?!" + keywords.source + ")" + /[a-z_]/.source + "|" + /\d|-\.?\d/.source + "|" + /[({'"$@#?]/.source) + "))", "im"),
        lookbehind: true,
        greedy: true,
        alias: "function"
      },
      "function-definition": {
        pattern: /(\b(?:fn|function)\s+)\w+\b/i,
        lookbehind: true,
        alias: "function"
      },
      argument: {
        pattern: /\b[a-z_]\w*(?=:)/i,
        alias: "attr-name"
      },
      keyword: keywords,
      boolean: /\b(?:false|true)\b/,
      time: {
        pattern: /(^|[^\w.])(?:(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?[msft])+|\d+:\d+(?:\.\d*)?)(?![\w.:])/,
        lookbehind: true,
        alias: "number"
      },
      number: [
        {
          pattern: /(^|[^\w.])(?:(?:\d+(?:\.\d*)?|\.\d+)(?:[eEdD][+-]\d+|[LP])?|0x[a-fA-F0-9]+)(?![\w.:])/,
          lookbehind: true
        },
        /\b(?:e|pi)\b/
      ],
      constant: /\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\b/,
      color: {
        pattern: /\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\b/i,
        alias: "constant"
      },
      operator: /[-+*/<>=!]=?|[&^?]|#(?!\()/,
      punctuation: /[()\[\]{}.:,;]|#(?=\()|\\$/m
    };
  })(Prism2);
}
var mel_1 = mel;
mel.displayName = "mel";
mel.aliases = [];
function mel(Prism2) {
  Prism2.languages.mel = {
    comment: /\/\/.*/,
    code: {
      pattern: /`(?:\\.|[^\\`\r\n])*`/,
      greedy: true,
      alias: "italic",
      inside: {
        delimiter: {
          pattern: /^`|`$/,
          alias: "punctuation"
        }
      }
    },
    string: {
      pattern: /"(?:\\.|[^\\"\r\n])*"/,
      greedy: true
    },
    variable: /\$\w+/,
    number: /\b0x[\da-fA-F]+\b|\b\d+(?:\.\d*)?|\B\.\d+/,
    flag: {
      pattern: /-[^\d\W]\w*/,
      alias: "operator"
    },
    keyword: /\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\b/,
    function: /\b\w+(?=\()|\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\b/,
    operator: [
      /\+[+=]?|-[-=]?|&&|\|\||[<>]=|[*\/!=]=?|[%^]/,
      {
        pattern: /(^|[^<])<(?!<)/,
        lookbehind: true
      },
      {
        pattern: /(^|[^>])>(?!>)/,
        lookbehind: true
      }
    ],
    punctuation: /<<|>>|[.,:;?\[\](){}]/
  };
  Prism2.languages.mel["code"].inside.rest = Prism2.languages.mel;
}
var mermaid_1 = mermaid;
mermaid.displayName = "mermaid";
mermaid.aliases = [];
function mermaid(Prism2) {
  Prism2.languages.mermaid = {
    comment: {
      pattern: /%%.*/,
      greedy: true
    },
    style: {
      pattern: /^([ \t]*(?:classDef|linkStyle|style)[ \t]+[\w$-]+[ \t]+)\w.*[^\s;]/m,
      lookbehind: true,
      inside: {
        property: /\b\w[\w-]*(?=[ \t]*:)/,
        operator: /:/,
        punctuation: /,/
      }
    },
    "inter-arrow-label": {
      pattern: /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \t]*(?:"[^"\r\n]*"|[^\s".=-](?:[^\r\n.=-]*[^\s.=-])?)[ \t]*(?:\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,
      lookbehind: true,
      greedy: true,
      inside: {
        arrow: {
          pattern: /(?:\.+->?|--+[->]|==+[=>])$/,
          alias: "operator"
        },
        label: {
          pattern: /^([\s\S]{2}[ \t]*)\S(?:[\s\S]*\S)?/,
          lookbehind: true,
          alias: "property"
        },
        "arrow-head": {
          pattern: /^\S+/,
          alias: ["arrow", "operator"]
        }
      }
    },
    arrow: [
      {
        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\.\.)[|o][|{](?![{}|o.-])/,
        lookbehind: true,
        alias: "operator"
      },
      {
        pattern: /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\.*-)[>ox]?|(?:==+|--+|-\.*-)[>ox]|===+|---+|-\.+-)(?![<>ox.=-])/,
        lookbehind: true,
        alias: "operator"
      },
      {
        pattern: /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,
        lookbehind: true,
        alias: "operator"
      },
      {
        pattern: /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\|?(?:--|\.\.)|(?:--|\.\.)\|?>|--|\.\.)(?![<>|*o.-])/,
        lookbehind: true,
        alias: "operator"
      }
    ],
    label: {
      pattern: /(^|[^|<])\|(?:[^\r\n"|]|"[^"\r\n]*")+\|/,
      lookbehind: true,
      greedy: true,
      alias: "property"
    },
    text: {
      pattern: /(?:[(\[{]+|\b>)(?:[^\r\n"()\[\]{}]|"[^"\r\n]*")+(?:[)\]}]+|>)/,
      alias: "string"
    },
    string: {
      pattern: /"[^"\r\n]*"/,
      greedy: true
    },
    annotation: {
      pattern: /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\[\[(?:choice|fork|join)\]\]/i,
      alias: "important"
    },
    keyword: [
      {
        pattern: /(^[ \t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\w$-])/m,
        lookbehind: true,
        greedy: true
      },
      {
        pattern: /(^[ \t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \t]+note)?|loop|opt|par|participant|rect|state|note[ \t]+(?:over|(?:left|right)[ \t]+of))(?![\w$-])/im,
        lookbehind: true,
        greedy: true
      }
    ],
    entity: /#[a-z0-9]+;/,
    operator: {
      pattern: /(\w[ \t]*)&(?=[ \t]*\w)|:::|:/,
      lookbehind: true
    },
    punctuation: /[(){};]/
  };
}
var mizar_1 = mizar;
mizar.displayName = "mizar";
mizar.aliases = [];
function mizar(Prism2) {
  Prism2.languages.mizar = {
    comment: /::.+/,
    keyword: /@proof\b|\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\b/,
    parameter: {
      pattern: /\$(?:10|\d)/,
      alias: "variable"
    },
    variable: /\b\w+(?=:)/,
    number: /(?:\b|-)\d+\b/,
    operator: /\.\.\.|->|&|\.?=/,
    punctuation: /\(#|#\)|[,:;\[\](){}]/
  };
}
var mongodb_1 = mongodb;
mongodb.displayName = "mongodb";
mongodb.aliases = [];
function mongodb(Prism2) {
  (function(Prism3) {
    var operators = [
      "$eq",
      "$gt",
      "$gte",
      "$in",
      "$lt",
      "$lte",
      "$ne",
      "$nin",
      "$and",
      "$not",
      "$nor",
      "$or",
      "$exists",
      "$type",
      "$expr",
      "$jsonSchema",
      "$mod",
      "$regex",
      "$text",
      "$where",
      "$geoIntersects",
      "$geoWithin",
      "$near",
      "$nearSphere",
      "$all",
      "$elemMatch",
      "$size",
      "$bitsAllClear",
      "$bitsAllSet",
      "$bitsAnyClear",
      "$bitsAnySet",
      "$comment",
      "$elemMatch",
      "$meta",
      "$slice",
      "$currentDate",
      "$inc",
      "$min",
      "$max",
      "$mul",
      "$rename",
      "$set",
      "$setOnInsert",
      "$unset",
      "$addToSet",
      "$pop",
      "$pull",
      "$push",
      "$pullAll",
      "$each",
      "$position",
      "$slice",
      "$sort",
      "$bit",
      "$addFields",
      "$bucket",
      "$bucketAuto",
      "$collStats",
      "$count",
      "$currentOp",
      "$facet",
      "$geoNear",
      "$graphLookup",
      "$group",
      "$indexStats",
      "$limit",
      "$listLocalSessions",
      "$listSessions",
      "$lookup",
      "$match",
      "$merge",
      "$out",
      "$planCacheStats",
      "$project",
      "$redact",
      "$replaceRoot",
      "$replaceWith",
      "$sample",
      "$set",
      "$skip",
      "$sort",
      "$sortByCount",
      "$unionWith",
      "$unset",
      "$unwind",
      "$setWindowFields",
      "$abs",
      "$accumulator",
      "$acos",
      "$acosh",
      "$add",
      "$addToSet",
      "$allElementsTrue",
      "$and",
      "$anyElementTrue",
      "$arrayElemAt",
      "$arrayToObject",
      "$asin",
      "$asinh",
      "$atan",
      "$atan2",
      "$atanh",
      "$avg",
      "$binarySize",
      "$bsonSize",
      "$ceil",
      "$cmp",
      "$concat",
      "$concatArrays",
      "$cond",
      "$convert",
      "$cos",
      "$dateFromParts",
      "$dateToParts",
      "$dateFromString",
      "$dateToString",
      "$dayOfMonth",
      "$dayOfWeek",
      "$dayOfYear",
      "$degreesToRadians",
      "$divide",
      "$eq",
      "$exp",
      "$filter",
      "$first",
      "$floor",
      "$function",
      "$gt",
      "$gte",
      "$hour",
      "$ifNull",
      "$in",
      "$indexOfArray",
      "$indexOfBytes",
      "$indexOfCP",
      "$isArray",
      "$isNumber",
      "$isoDayOfWeek",
      "$isoWeek",
      "$isoWeekYear",
      "$last",
      "$last",
      "$let",
      "$literal",
      "$ln",
      "$log",
      "$log10",
      "$lt",
      "$lte",
      "$ltrim",
      "$map",
      "$max",
      "$mergeObjects",
      "$meta",
      "$min",
      "$millisecond",
      "$minute",
      "$mod",
      "$month",
      "$multiply",
      "$ne",
      "$not",
      "$objectToArray",
      "$or",
      "$pow",
      "$push",
      "$radiansToDegrees",
      "$range",
      "$reduce",
      "$regexFind",
      "$regexFindAll",
      "$regexMatch",
      "$replaceOne",
      "$replaceAll",
      "$reverseArray",
      "$round",
      "$rtrim",
      "$second",
      "$setDifference",
      "$setEquals",
      "$setIntersection",
      "$setIsSubset",
      "$setUnion",
      "$size",
      "$sin",
      "$slice",
      "$split",
      "$sqrt",
      "$stdDevPop",
      "$stdDevSamp",
      "$strcasecmp",
      "$strLenBytes",
      "$strLenCP",
      "$substr",
      "$substrBytes",
      "$substrCP",
      "$subtract",
      "$sum",
      "$switch",
      "$tan",
      "$toBool",
      "$toDate",
      "$toDecimal",
      "$toDouble",
      "$toInt",
      "$toLong",
      "$toObjectId",
      "$toString",
      "$toLower",
      "$toUpper",
      "$trim",
      "$trunc",
      "$type",
      "$week",
      "$year",
      "$zip",
      "$count",
      "$dateAdd",
      "$dateDiff",
      "$dateSubtract",
      "$dateTrunc",
      "$getField",
      "$rand",
      "$sampleRate",
      "$setField",
      "$unsetField",
      "$comment",
      "$explain",
      "$hint",
      "$max",
      "$maxTimeMS",
      "$min",
      "$orderby",
      "$query",
      "$returnKey",
      "$showDiskLoc",
      "$natural"
    ];
    var builtinFunctions = [
      "ObjectId",
      "Code",
      "BinData",
      "DBRef",
      "Timestamp",
      "NumberLong",
      "NumberDecimal",
      "MaxKey",
      "MinKey",
      "RegExp",
      "ISODate",
      "UUID"
    ];
    operators = operators.map(function(operator) {
      return operator.replace("$", "\\$");
    });
    var operatorsSource = "(?:" + operators.join("|") + ")\\b";
    Prism3.languages.mongodb = Prism3.languages.extend("javascript", {});
    Prism3.languages.insertBefore("mongodb", "string", {
      property: {
        pattern: /(?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)(?=\s*:)/,
        greedy: true,
        inside: {
          keyword: RegExp(`^(['"])?` + operatorsSource + "(?:\\1)?$")
        }
      }
    });
    Prism3.languages.mongodb.string.inside = {
      url: {
        pattern: /https?:\/\/[-\w@:%.+~#=]{1,256}\.[a-z0-9()]{1,6}\b[-\w()@:%+.~#?&/=]*/i,
        greedy: true
      },
      entity: {
        pattern: /\b(?:(?:[01]?\d\d?|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d\d?|2[0-4]\d|25[0-5])\b/,
        greedy: true
      }
    };
    Prism3.languages.insertBefore("mongodb", "constant", {
      builtin: {
        pattern: RegExp("\\b(?:" + builtinFunctions.join("|") + ")\\b"),
        alias: "keyword"
      }
    });
  })(Prism2);
}
var monkey_1 = monkey;
monkey.displayName = "monkey";
monkey.aliases = [];
function monkey(Prism2) {
  Prism2.languages.monkey = {
    comment: {
      pattern: /^#Rem\s[\s\S]*?^#End|'.+/im,
      greedy: true
    },
    string: {
      pattern: /"[^"\r\n]*"/,
      greedy: true
    },
    preprocessor: {
      pattern: /(^[ \t]*)#.+/m,
      lookbehind: true,
      greedy: true,
      alias: "property"
    },
    function: /\b\w+(?=\()/,
    "type-char": {
      pattern: /\b[?%#$]/,
      alias: "class-name"
    },
    number: {
      pattern: /((?:\.\.)?)(?:(?:\b|\B-\.?|\B\.)\d+(?:(?!\.\.)\.\d*)?|\$[\da-f]+)/i,
      lookbehind: true
    },
    keyword: /\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\b/i,
    operator: /\.\.|<[=>]?|>=?|:?=|(?:[+\-*\/&~|]|\b(?:Mod|Shl|Shr)\b)=?|\b(?:And|Not|Or)\b/i,
    punctuation: /[.,:;()\[\]]/
  };
}
var moonscript_1 = moonscript;
moonscript.displayName = "moonscript";
moonscript.aliases = ["moon"];
function moonscript(Prism2) {
  Prism2.languages.moonscript = {
    comment: /--.*/,
    string: [
      {
        pattern: /'[^']*'|\[(=*)\[[\s\S]*?\]\1\]/,
        greedy: true
      },
      {
        pattern: /"[^"]*"/,
        greedy: true,
        inside: {
          interpolation: {
            pattern: /#\{[^{}]*\}/,
            inside: {
              moonscript: {
                pattern: /(^#\{)[\s\S]+(?=\})/,
                lookbehind: true,
                inside: null
              },
              "interpolation-punctuation": {
                pattern: /#\{|\}/,
                alias: "punctuation"
              }
            }
          }
        }
      }
    ],
    "class-name": [
      {
        pattern: /(\b(?:class|extends)[ \t]+)\w+/,
        lookbehind: true
      },
      /\b[A-Z]\w*/
    ],
    keyword: /\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\b/,
    variable: /@@?\w*/,
    property: {
      pattern: /\b(?!\d)\w+(?=:)|(:)(?!\d)\w+/,
      lookbehind: true
    },
    function: {
      pattern: /\b(?:_G|_VERSION|assert|collectgarbage|coroutine\.(?:create|resume|running|status|wrap|yield)|debug\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\b/,
      inside: {
        punctuation: /\./
      }
    },
    boolean: /\b(?:false|true)\b/,
    number: /(?:\B\.\d+|\b\d+\.\d+|\b\d+(?=[eE]))(?:[eE][-+]?\d+)?\b|\b(?:0x[a-fA-F\d]+|\d+)(?:U?LL)?\b/,
    operator: /\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\.\.)=?|[:#^]|\b(?:and|or)\b=?|\b(?:not)\b/,
    punctuation: /[.,()[\]{}\\]/
  };
  Prism2.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside = Prism2.languages.moonscript;
  Prism2.languages.moon = Prism2.languages.moonscript;
}
var n1ql_1 = n1ql;
n1ql.displayName = "n1ql";
n1ql.aliases = [];
function n1ql(Prism2) {
  Prism2.languages.n1ql = {
    comment: {
      pattern: /\/\*[\s\S]*?(?:$|\*\/)|--.*/,
      greedy: true
    },
    string: {
      pattern: /(["'])(?:\\[\s\S]|(?!\1)[^\\]|\1\1)*\1/,
      greedy: true
    },
    identifier: {
      pattern: /`(?:\\[\s\S]|[^\\`]|``)*`/,
      greedy: true
    },
    parameter: /\$[\w.]+/,
    keyword: /\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\b/i,
    function: /\b[a-z_]\w*(?=\s*\()/i,
    boolean: /\b(?:FALSE|TRUE)\b/i,
    number: /(?:\b\d+\.|\B\.)\d+e[+\-]?\d+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
    operator: /[-+*\/%]|!=|==?|\|\||<[>=]?|>=?|\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\b/i,
    punctuation: /[;[\](),.{}:]/
  };
}
var n4js_1 = n4js;
n4js.displayName = "n4js";
n4js.aliases = ["n4jsd"];
function n4js(Prism2) {
  Prism2.languages.n4js = Prism2.languages.extend("javascript", {
    keyword: /\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/
  });
  Prism2.languages.insertBefore("n4js", "constant", {
    annotation: {
      pattern: /@+\w+/,
      alias: "operator"
    }
  });
  Prism2.languages.n4jsd = Prism2.languages.n4js;
}
var nand2tetrisHdl_1 = nand2tetrisHdl;
nand2tetrisHdl.displayName = "nand2tetrisHdl";
nand2tetrisHdl.aliases = [];
function nand2tetrisHdl(Prism2) {
  Prism2.languages["nand2tetris-hdl"] = {
    comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
    keyword: /\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\b/,
    boolean: /\b(?:false|true)\b/,
    function: /\b[A-Za-z][A-Za-z0-9]*(?=\()/,
    number: /\b\d+\b/,
    operator: /=|\.\./,
    punctuation: /[{}[\];(),:]/
  };
}
var naniscript_1 = naniscript;
naniscript.displayName = "naniscript";
naniscript.aliases = [];
function naniscript(Prism2) {
  (function(Prism3) {
    var expressionDef = /\{[^\r\n\[\]{}]*\}/;
    var params = {
      "quoted-string": {
        pattern: /"(?:[^"\\]|\\.)*"/,
        alias: "operator"
      },
      "command-param-id": {
        pattern: /(\s)\w+:/,
        lookbehind: true,
        alias: "property"
      },
      "command-param-value": [
        {
          pattern: expressionDef,
          alias: "selector"
        },
        {
          pattern: /([\t ])\S+/,
          lookbehind: true,
          greedy: true,
          alias: "operator"
        },
        {
          pattern: /\S(?:.*\S)?/,
          alias: "operator"
        }
      ]
    };
    Prism3.languages.naniscript = {
      comment: {
        pattern: /^([\t ]*);.*/m,
        lookbehind: true
      },
      define: {
        pattern: /^>.+/m,
        alias: "tag",
        inside: {
          value: {
            pattern: /(^>\w+[\t ]+)(?!\s)[^{}\r\n]+/,
            lookbehind: true,
            alias: "operator"
          },
          key: {
            pattern: /(^>)\w+/,
            lookbehind: true
          }
        }
      },
      label: {
        pattern: /^([\t ]*)#[\t ]*\w+[\t ]*$/m,
        lookbehind: true,
        alias: "regex"
      },
      command: {
        pattern: /^([\t ]*)@\w+(?=[\t ]|$).*/m,
        lookbehind: true,
        alias: "function",
        inside: {
          "command-name": /^@\w+/,
          expression: {
            pattern: expressionDef,
            greedy: true,
            alias: "selector"
          },
          "command-params": {
            pattern: /\s*\S[\s\S]*/,
            inside: params
          }
        }
      },
      "generic-text": {
        pattern: /(^[ \t]*)[^#@>;\s].*/m,
        lookbehind: true,
        alias: "punctuation",
        inside: {
          "escaped-char": /\\[{}\[\]"]/,
          expression: {
            pattern: expressionDef,
            greedy: true,
            alias: "selector"
          },
          "inline-command": {
            pattern: /\[[\t ]*\w[^\r\n\[\]]*\]/,
            greedy: true,
            alias: "function",
            inside: {
              "command-params": {
                pattern: /(^\[[\t ]*\w+\b)[\s\S]+(?=\]$)/,
                lookbehind: true,
                inside: params
              },
              "command-param-name": {
                pattern: /^(\[[\t ]*)\w+/,
                lookbehind: true,
                alias: "name"
              },
              "start-stop-char": /[\[\]]/
            }
          }
        }
      }
    };
    Prism3.languages.nani = Prism3.languages["naniscript"];
    Prism3.hooks.add("after-tokenize", function(env) {
      var tokens = env.tokens;
      tokens.forEach(function(token2) {
        if (typeof token2 !== "string" && token2.type === "generic-text") {
          var content = getTextContent(token2);
          if (!isBracketsBalanced(content)) {
            token2.type = "bad-line";
            token2.content = content;
          }
        }
      });
    });
    function isBracketsBalanced(input) {
      var brackets = "[]{}";
      var stack = [];
      for (var i2 = 0; i2 < input.length; i2++) {
        var bracket = input[i2];
        var bracketsIndex = brackets.indexOf(bracket);
        if (bracketsIndex !== -1) {
          if (bracketsIndex % 2 === 0) {
            stack.push(bracketsIndex + 1);
          } else if (stack.pop() !== bracketsIndex) {
            return false;
          }
        }
      }
      return stack.length === 0;
    }
    function getTextContent(token2) {
      if (typeof token2 === "string") {
        return token2;
      } else if (Array.isArray(token2)) {
        return token2.map(getTextContent).join("");
      } else {
        return getTextContent(token2.content);
      }
    }
  })(Prism2);
}
var nasm_1 = nasm;
nasm.displayName = "nasm";
nasm.aliases = [];
function nasm(Prism2) {
  Prism2.languages.nasm = {
    comment: /;.*$/m,
    string: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
    label: {
      pattern: /(^\s*)[A-Za-z._?$][\w.?$@~#]*:/m,
      lookbehind: true,
      alias: "function"
    },
    keyword: [
      /\[?BITS (?:16|32|64)\]?/,
      {
        pattern: /(^\s*)section\s*[a-z.]+:?/im,
        lookbehind: true
      },
      /(?:extern|global)[^;\r\n]*/i,
      /(?:CPU|DEFAULT|FLOAT).*$/m
    ],
    register: {
      pattern: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\b/i,
      alias: "variable"
    },
    number: /(?:\b|(?=\$))(?:0[hx](?:\.[\da-f]+|[\da-f]+(?:\.[\da-f]+)?)(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
    operator: /[\[\]*+\-\/%<>=&|$!]/
  };
}
var neon_1 = neon;
neon.displayName = "neon";
neon.aliases = [];
function neon(Prism2) {
  Prism2.languages.neon = {
    comment: {
      pattern: /#.*/,
      greedy: true
    },
    datetime: {
      pattern: /(^|[[{(=:,\s])\d\d\d\d-\d\d?-\d\d?(?:(?:[Tt]| +)\d\d?:\d\d:\d\d(?:\.\d*)? *(?:Z|[-+]\d\d?(?::?\d\d)?)?)?(?=$|[\]}),\s])/,
      lookbehind: true,
      alias: "number"
    },
    key: {
      pattern: /(^|[[{(,\s])[^,:=[\]{}()'"\s]+(?=\s*:(?:$|[\]}),\s])|\s*=)/,
      lookbehind: true,
      alias: "atrule"
    },
    number: {
      pattern: /(^|[[{(=:,\s])[+-]?(?:0x[\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\d+(?:\.\d*)?|\.?\d+)(?:[eE][+-]?\d+)?)(?=$|[\]}),:=\s])/,
      lookbehind: true
    },
    boolean: {
      pattern: /(^|[[{(=:,\s])(?:false|no|true|yes)(?=$|[\]}),:=\s])/i,
      lookbehind: true
    },
    null: {
      pattern: /(^|[[{(=:,\s])(?:null)(?=$|[\]}),:=\s])/i,
      lookbehind: true,
      alias: "keyword"
    },
    string: {
      pattern: /(^|[[{(=:,\s])(?:('''|""")\r?\n(?:(?:[^\r\n]|\r?\n(?![\t ]*\2))*\r?\n)?[\t ]*\2|'[^'\r\n]*'|"(?:\\.|[^\\"\r\n])*")/,
      lookbehind: true,
      greedy: true
    },
    literal: {
      pattern: /(^|[[{(=:,\s])(?:[^#"',:=[\]{}()\s`-]|[:-][^"',=[\]{}()\s])(?:[^,:=\]})(\s]|:(?![\s,\]})]|$)|[ \t]+[^#,:=\]})(\s])*/,
      lookbehind: true,
      alias: "string"
    },
    punctuation: /[,:=[\]{}()-]/
  };
}
var nevod_1 = nevod;
nevod.displayName = "nevod";
nevod.aliases = [];
function nevod(Prism2) {
  Prism2.languages.nevod = {
    comment: /\/\/.*|(?:\/\*[\s\S]*?(?:\*\/|$))/,
    string: {
      pattern: /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))!?\*?/,
      greedy: true,
      inside: {
        "string-attrs": /!$|!\*$|\*$/
      }
    },
    namespace: {
      pattern: /(@namespace\s+)[a-zA-Z0-9\-.]+(?=\s*\{)/,
      lookbehind: true
    },
    pattern: {
      pattern: /(@pattern\s+)?#?[a-zA-Z0-9\-.]+(?:\s*\(\s*(?:~\s*)?[a-zA-Z0-9\-.]+\s*(?:,\s*(?:~\s*)?[a-zA-Z0-9\-.]*)*\))?(?=\s*=)/,
      lookbehind: true,
      inside: {
        "pattern-name": {
          pattern: /^#?[a-zA-Z0-9\-.]+/,
          alias: "class-name"
        },
        fields: {
          pattern: /\(.*\)/,
          inside: {
            "field-name": {
              pattern: /[a-zA-Z0-9\-.]+/,
              alias: "variable"
            },
            punctuation: /[,()]/,
            operator: {
              pattern: /~/,
              alias: "field-hidden-mark"
            }
          }
        }
      }
    },
    search: {
      pattern: /(@search\s+|#)[a-zA-Z0-9\-.]+(?:\.\*)?(?=\s*;)/,
      alias: "function",
      lookbehind: true
    },
    keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\b/,
    "standard-pattern": {
      pattern: /\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\b(?:\([a-zA-Z0-9\-.,\s+]*\))?/,
      inside: {
        "standard-pattern-name": {
          pattern: /^[a-zA-Z0-9\-.]+/,
          alias: "builtin"
        },
        quantifier: {
          pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,
          alias: "number"
        },
        "standard-pattern-attr": {
          pattern: /[a-zA-Z0-9\-.]+/,
          alias: "builtin"
        },
        punctuation: /[,()]/
      }
    },
    quantifier: {
      pattern: /\b\d+(?:\s*\+|\s*-\s*\d+)?(?!\w)/,
      alias: "number"
    },
    operator: [
      {
        pattern: /=/,
        alias: "pattern-def"
      },
      {
        pattern: /&/,
        alias: "conjunction"
      },
      {
        pattern: /~/,
        alias: "exception"
      },
      {
        pattern: /\?/,
        alias: "optionality"
      },
      {
        pattern: /[[\]]/,
        alias: "repetition"
      },
      {
        pattern: /[{}]/,
        alias: "variation"
      },
      {
        pattern: /[+_]/,
        alias: "sequence"
      },
      {
        pattern: /\.{2,3}/,
        alias: "span"
      }
    ],
    "field-capture": [
      {
        pattern: /([a-zA-Z0-9\-.]+\s*\()\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+(?:\s*,\s*[a-zA-Z0-9\-.]+\s*:\s*[a-zA-Z0-9\-.]+)*(?=\s*\))/,
        lookbehind: true,
        inside: {
          "field-name": {
            pattern: /[a-zA-Z0-9\-.]+/,
            alias: "variable"
          },
          colon: /:/
        }
      },
      {
        pattern: /[a-zA-Z0-9\-.]+\s*:/,
        inside: {
          "field-name": {
            pattern: /[a-zA-Z0-9\-.]+/,
            alias: "variable"
          },
          colon: /:/
        }
      }
    ],
    punctuation: /[:;,()]/,
    name: /[a-zA-Z0-9\-.]+/
  };
}
var nginx_1 = nginx;
nginx.displayName = "nginx";
nginx.aliases = [];
function nginx(Prism2) {
  (function(Prism3) {
    var variable = /\$(?:\w[a-z\d]*(?:_[^\x00-\x1F\s"'\\()$]*)?|\{[^}\s"'\\]+\})/i;
    Prism3.languages.nginx = {
      comment: {
        pattern: /(^|[\s{};])#.*/,
        lookbehind: true,
        greedy: true
      },
      directive: {
        pattern: /(^|\s)\w(?:[^;{}"'\\\s]|\\.|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\s+(?:#.*(?!.)|(?![#\s])))*?(?=\s*[;{])/,
        lookbehind: true,
        greedy: true,
        inside: {
          string: {
            pattern: /((?:^|[^\\])(?:\\\\)*)(?:"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*')/,
            lookbehind: true,
            greedy: true,
            inside: {
              escape: {
                pattern: /\\["'\\nrt]/,
                alias: "entity"
              },
              variable
            }
          },
          comment: {
            pattern: /(\s)#.*/,
            lookbehind: true,
            greedy: true
          },
          keyword: {
            pattern: /^\S+/,
            greedy: true
          },
          boolean: {
            pattern: /(\s)(?:off|on)(?!\S)/,
            lookbehind: true
          },
          number: {
            pattern: /(\s)\d+[a-z]*(?!\S)/i,
            lookbehind: true
          },
          variable
        }
      },
      punctuation: /[{};]/
    };
  })(Prism2);
}
var nim_1 = nim;
nim.displayName = "nim";
nim.aliases = [];
function nim(Prism2) {
  Prism2.languages.nim = {
    comment: {
      pattern: /#.*/,
      greedy: true
    },
    string: {
      pattern: /(?:\b(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+)?(?:"""[\s\S]*?"""(?!")|"(?:\\[\s\S]|""|[^"\\])*")/,
      greedy: true
    },
    char: {
      pattern: /'(?:\\(?:\d+|x[\da-fA-F]{0,2}|.)|[^'])'/,
      greedy: true
    },
    function: {
      pattern: /(?:(?!\d)(?:\w|\\x[89a-fA-F][0-9a-fA-F])+|`[^`\r\n]+`)\*?(?:\[[^\]]+\])?(?=\s*\()/,
      greedy: true,
      inside: {
        operator: /\*$/
      }
    },
    identifier: {
      pattern: /`[^`\r\n]+`/,
      greedy: true,
      inside: {
        punctuation: /`/
      }
    },
    number: /\b(?:0[xXoObB][\da-fA-F_]+|\d[\d_]*(?:(?!\.\.)\.[\d_]*)?(?:[eE][+-]?\d[\d_]*)?)(?:'?[iuf]\d*)?/,
    keyword: /\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\b/,
    operator: {
      pattern: /(^|[({\[](?=\.\.)|(?![({\[]\.).)(?:(?:[=+\-*\/<>@$~&%|!?^:\\]|\.\.|\.(?![)}\]]))+|\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\b)/m,
      lookbehind: true
    },
    punctuation: /[({\[]\.|\.[)}\]]|[`(){}\[\],:]/
  };
}
var nix_1 = nix;
nix.displayName = "nix";
nix.aliases = [];
function nix(Prism2) {
  Prism2.languages.nix = {
    comment: {
      pattern: /\/\*[\s\S]*?\*\/|#.*/,
      greedy: true
    },
    string: {
      pattern: /"(?:[^"\\]|\\[\s\S])*"|''(?:(?!'')[\s\S]|''(?:'|\\|\$\{))*''/,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /(^|(?:^|(?!'').)[^\\])\$\{(?:[^{}]|\{[^}]*\})*\}/,
          lookbehind: true,
          inside: null
        }
      }
    },
    url: [
      /\b(?:[a-z]{3,7}:\/\/)[\w\-+%~\/.:#=?&]+/,
      {
        pattern: /([^\/])(?:[\w\-+%~.:#=?&]*(?!\/\/)[\w\-+%~\/.:#=?&])?(?!\/\/)\/[\w\-+%~\/.:#=?&]*/,
        lookbehind: true
      }
    ],
    antiquotation: {
      pattern: /\$(?=\{)/,
      alias: "important"
    },
    number: /\b\d+\b/,
    keyword: /\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\b/,
    function: /\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\b|\bfoldl'\B/,
    boolean: /\b(?:false|true)\b/,
    operator: /[=!<>]=?|\+\+?|\|\||&&|\/\/|->?|[?@]/,
    punctuation: /[{}()[\].,:;]/
  };
  Prism2.languages.nix.string.inside.interpolation.inside = Prism2.languages.nix;
}
var nsis_1 = nsis;
nsis.displayName = "nsis";
nsis.aliases = [];
function nsis(Prism2) {
  Prism2.languages.nsis = {
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|[#;].*)/,
      lookbehind: true,
      greedy: true
    },
    string: {
      pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    keyword: {
      pattern: /(^[\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\b/m,
      lookbehind: true
    },
    property: /\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\b/,
    constant: /\$\{[!\w\.:\^-]+\}|\$\([!\w\.:\^-]+\)/,
    variable: /\$\w[\w\.]*/,
    number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
    operator: /--?|\+\+?|<=?|>=?|==?=?|&&?|\|\|?|[?*\/~^%]/,
    punctuation: /[{}[\];(),.:]/,
    important: {
      pattern: /(^[\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\b/im,
      lookbehind: true
    }
  };
}
var refractorC$1 = c_1;
var objectivec_1 = objectivec;
objectivec.displayName = "objectivec";
objectivec.aliases = ["objc"];
function objectivec(Prism2) {
  Prism2.register(refractorC$1);
  Prism2.languages.objectivec = Prism2.languages.extend("c", {
    string: {
      pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
      greedy: true
    },
    keyword: /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
    operator: /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
  });
  delete Prism2.languages.objectivec["class-name"];
  Prism2.languages.objc = Prism2.languages.objectivec;
}
var ocaml_1 = ocaml;
ocaml.displayName = "ocaml";
ocaml.aliases = [];
function ocaml(Prism2) {
  Prism2.languages.ocaml = {
    comment: {
      pattern: /\(\*[\s\S]*?\*\)/,
      greedy: true
    },
    char: {
      pattern: /'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,
      greedy: true
    },
    string: [
      {
        pattern: /"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,
        greedy: true
      },
      {
        pattern: /\{([a-z_]*)\|[\s\S]*?\|\1\}/,
        greedy: true
      }
    ],
    number: [
      /\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,
      /\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,
      /\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i
    ],
    directive: {
      pattern: /\B#\w+/,
      alias: "property"
    },
    label: {
      pattern: /\B~\w+/,
      alias: "property"
    },
    "type-variable": {
      pattern: /\B'\w+/,
      alias: "function"
    },
    variant: {
      pattern: /`\w+/,
      alias: "symbol"
    },
    keyword: /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,
    boolean: /\b(?:false|true)\b/,
    "operator-like-punctuation": {
      pattern: /\[[<>|]|[>|]\]|\{<|>\}/,
      alias: "punctuation"
    },
    operator: /\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,
    punctuation: /;;|::|[(){}\[\].,:;#]|\b_\b/
  };
}
var refractorC = c_1;
var opencl_1 = opencl;
opencl.displayName = "opencl";
opencl.aliases = [];
function opencl(Prism2) {
  Prism2.register(refractorC);
  (function(Prism3) {
    Prism3.languages.opencl = Prism3.languages.extend("c", {
      keyword: /\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\b/,
      number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[fuhl]{0,4}/i,
      boolean: /\b(?:false|true)\b/,
      "constant-opencl-kernel": {
        pattern: /\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\b/,
        alias: "constant"
      }
    });
    Prism3.languages.insertBefore("opencl", "class-name", {
      "builtin-type": {
        pattern: /\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\b/,
        alias: "keyword"
      }
    });
    var attributes2 = {
      "type-opencl-host": {
        pattern: /\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\b/,
        alias: "keyword"
      },
      "boolean-opencl-host": {
        pattern: /\bCL_(?:FALSE|TRUE)\b/,
        alias: "boolean"
      },
      "constant-opencl-host": {
        pattern: /\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\b/,
        alias: "constant"
      },
      "function-opencl-host": {
        pattern: /\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\b/,
        alias: "function"
      }
    };
    Prism3.languages.insertBefore("c", "keyword", attributes2);
    if (Prism3.languages.cpp) {
      attributes2["type-opencl-host-cpp"] = {
        pattern: /\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\b/,
        alias: "keyword"
      };
      Prism3.languages.insertBefore("cpp", "keyword", attributes2);
    }
  })(Prism2);
}
var openqasm_1 = openqasm;
openqasm.displayName = "openqasm";
openqasm.aliases = ["qasm"];
function openqasm(Prism2) {
  Prism2.languages.openqasm = {
    comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
    string: {
      pattern: /"[^"\r\n\t]*"|'[^'\r\n\t]*'/,
      greedy: true
    },
    keyword: /\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\b|#pragma\b/,
    "class-name": /\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\b/,
    function: /\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\b(?=\s*\()/,
    constant: /\b(?:euler|pi|tau)\b|π|𝜏|ℇ/,
    number: {
      pattern: /(^|[^.\w$])(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?(?:dt|ns|us|µs|ms|s)?/i,
      lookbehind: true
    },
    operator: /->|>>=?|<<=?|&&|\|\||\+\+|--|[!=<>&|~^+\-*/%]=?|@/,
    punctuation: /[(){}\[\];,:.]/
  };
  Prism2.languages.qasm = Prism2.languages.openqasm;
}
var oz_1 = oz;
oz.displayName = "oz";
oz.aliases = [];
function oz(Prism2) {
  Prism2.languages.oz = {
    comment: {
      pattern: /\/\*[\s\S]*?\*\/|%.*/,
      greedy: true
    },
    string: {
      pattern: /"(?:[^"\\]|\\[\s\S])*"/,
      greedy: true
    },
    atom: {
      pattern: /'(?:[^'\\]|\\[\s\S])*'/,
      greedy: true,
      alias: "builtin"
    },
    keyword: /\$|\[\]|\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\b/,
    function: [
      /\b[a-z][A-Za-z\d]*(?=\()/,
      {
        pattern: /(\{)[A-Z][A-Za-z\d]*\b/,
        lookbehind: true
      }
    ],
    number: /\b(?:0[bx][\da-f]+|\d+(?:\.\d*)?(?:e~?\d+)?)\b|&(?:[^\\]|\\(?:\d{3}|.))/i,
    variable: /`(?:[^`\\]|\\.)+`/,
    "attr-name": /\b\w+(?=[ \t]*:(?![:=]))/,
    operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\=:?|!!?|[|#+\-*\/,~^@]|\b(?:andthen|div|mod|orelse)\b/,
    punctuation: /[\[\](){}.:;?]/
  };
}
var parigp_1 = parigp;
parigp.displayName = "parigp";
parigp.aliases = [];
function parigp(Prism2) {
  Prism2.languages.parigp = {
    comment: /\/\*[\s\S]*?\*\/|\\\\.*/,
    string: {
      pattern: /"(?:[^"\\\r\n]|\\.)*"/,
      greedy: true
    },
    keyword: function() {
      var keywords = [
        "breakpoint",
        "break",
        "dbg_down",
        "dbg_err",
        "dbg_up",
        "dbg_x",
        "forcomposite",
        "fordiv",
        "forell",
        "forpart",
        "forprime",
        "forstep",
        "forsubgroup",
        "forvec",
        "for",
        "iferr",
        "if",
        "local",
        "my",
        "next",
        "return",
        "until",
        "while"
      ];
      keywords = keywords.map(function(keyword) {
        return keyword.split("").join(" *");
      }).join("|");
      return RegExp("\\b(?:" + keywords + ")\\b");
    }(),
    function: /\b\w(?:[\w ]*\w)?(?= *\()/,
    number: {
      pattern: /((?:\. *\. *)?)(?:\b\d(?: *\d)*(?: *(?!\. *\.)\.(?: *\d)*)?|\. *\d(?: *\d)*)(?: *e *(?:[+-] *)?\d(?: *\d)*)?/i,
      lookbehind: true
    },
    operator: /\. *\.|[*\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\(?: *\/)?(?: *=)?|&(?: *&)?|\| *\||['#~^]/,
    punctuation: /[\[\]{}().,:;|]/
  };
}
var parser_1 = parser;
parser.displayName = "parser";
parser.aliases = [];
function parser(Prism2) {
  (function(Prism3) {
    var parser2 = Prism3.languages.parser = Prism3.languages.extend("markup", {
      keyword: {
        pattern: /(^|[^^])(?:\^(?:case|eval|for|if|switch|throw)\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\b)/,
        lookbehind: true
      },
      variable: {
        pattern: /(^|[^^])\B\$(?:\w+|(?=[.{]))(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
        lookbehind: true,
        inside: {
          punctuation: /\.|:+/
        }
      },
      function: {
        pattern: /(^|[^^])\B[@^]\w+(?:(?:\.|::?)\w+)*(?:\.|::?)?/,
        lookbehind: true,
        inside: {
          keyword: {
            pattern: /(^@)(?:GET_|SET_)/,
            lookbehind: true
          },
          punctuation: /\.|:+/
        }
      },
      escape: {
        pattern: /\^(?:[$^;@()\[\]{}"':]|#[a-f\d]*)/i,
        alias: "builtin"
      },
      punctuation: /[\[\](){};]/
    });
    parser2 = Prism3.languages.insertBefore("parser", "keyword", {
      "parser-comment": {
        pattern: /(\s)#.*/,
        lookbehind: true,
        alias: "comment"
      },
      expression: {
        pattern: /(^|[^^])\((?:[^()]|\((?:[^()]|\((?:[^()])*\))*\))*\)/,
        greedy: true,
        lookbehind: true,
        inside: {
          string: {
            pattern: /(^|[^^])(["'])(?:(?!\2)[^^]|\^[\s\S])*\2/,
            lookbehind: true
          },
          keyword: parser2.keyword,
          variable: parser2.variable,
          function: parser2.function,
          boolean: /\b(?:false|true)\b/,
          number: /\b(?:0x[a-f\d]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?)\b/i,
          escape: parser2.escape,
          operator: /[~+*\/\\%]|!(?:\|\|?|=)?|&&?|\|\|?|==|<[<=]?|>[>=]?|-[fd]?|\b(?:def|eq|ge|gt|in|is|le|lt|ne)\b/,
          punctuation: parser2.punctuation
        }
      }
    });
    Prism3.languages.insertBefore("inside", "punctuation", {
      expression: parser2.expression,
      keyword: parser2.keyword,
      variable: parser2.variable,
      function: parser2.function,
      escape: parser2.escape,
      "parser-punctuation": {
        pattern: parser2.punctuation,
        alias: "punctuation"
      }
    }, parser2["tag"].inside["attr-value"]);
  })(Prism2);
}
var pascal_1 = pascal;
pascal.displayName = "pascal";
pascal.aliases = ["objectpascal"];
function pascal(Prism2) {
  Prism2.languages.pascal = {
    directive: {
      pattern: /\{\$[\s\S]*?\}/,
      greedy: true,
      alias: ["marco", "property"]
    },
    comment: {
      pattern: /\(\*[\s\S]*?\*\)|\{[\s\S]*?\}|\/\/.*/,
      greedy: true
    },
    string: {
      pattern: /(?:'(?:''|[^'\r\n])*'(?!')|#[&$%]?[a-f\d]+)+|\^[a-z]/i,
      greedy: true
    },
    asm: {
      pattern: /(\basm\b)[\s\S]+?(?=\bend\s*[;[])/i,
      lookbehind: true,
      greedy: true,
      inside: null
    },
    keyword: [
      {
        pattern: /(^|[^&])\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\b/i,
        lookbehind: true
      },
      {
        pattern: /(^|[^&])\b(?:dispose|exit|false|new|true)\b/i,
        lookbehind: true
      },
      {
        pattern: /(^|[^&])\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\b/i,
        lookbehind: true
      },
      {
        pattern: /(^|[^&])\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\b/i,
        lookbehind: true
      }
    ],
    number: [
      /(?:[&%]\d+|\$[a-f\d]+)/i,
      /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?/i
    ],
    operator: [
      /\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=]/,
      {
        pattern: /(^|[^&])\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\b/,
        lookbehind: true
      }
    ],
    punctuation: /\(\.|\.\)|[()\[\]:;,.]/
  };
  Prism2.languages.pascal.asm.inside = Prism2.languages.extend("pascal", {
    asm: void 0,
    keyword: void 0,
    operator: void 0
  });
  Prism2.languages.objectpascal = Prism2.languages.pascal;
}
var pascaligo_1 = pascaligo;
pascaligo.displayName = "pascaligo";
pascaligo.aliases = [];
function pascaligo(Prism2) {
  (function(Prism3) {
    var braces = /\((?:[^()]|\((?:[^()]|\([^()]*\))*\))*\)/.source;
    var type = /(?:\b\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function() {
      return braces;
    });
    var pascaligo2 = Prism3.languages.pascaligo = {
      comment: /\(\*[\s\S]+?\*\)|\/\/.*/,
      string: {
        pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1|\^[a-z]/i,
        greedy: true
      },
      "class-name": [
        {
          pattern: RegExp(/(\btype\s+\w+\s+is\s+)<type>/.source.replace(/<type>/g, function() {
            return type;
          }), "i"),
          lookbehind: true,
          inside: null
        },
        {
          pattern: RegExp(/<type>(?=\s+is\b)/.source.replace(/<type>/g, function() {
            return type;
          }), "i"),
          inside: null
        },
        {
          pattern: RegExp(/(:\s*)<type>/.source.replace(/<type>/g, function() {
            return type;
          })),
          lookbehind: true,
          inside: null
        }
      ],
      keyword: {
        pattern: /(^|[^&])\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\b/i,
        lookbehind: true
      },
      boolean: {
        pattern: /(^|[^&])\b(?:False|True)\b/i,
        lookbehind: true
      },
      builtin: {
        pattern: /(^|[^&])\b(?:bool|int|list|map|nat|record|string|unit)\b/i,
        lookbehind: true
      },
      function: /\b\w+(?=\s*\()/,
      number: [
        /%[01]+|&[0-7]+|\$[a-f\d]+/i,
        /\b\d+(?:\.\d+)?(?:e[+-]?\d+)?(?:mtz|n)?/i
      ],
      operator: /->|=\/=|\.\.|\*\*|:=|<[<=>]?|>[>=]?|[+\-*\/]=?|[@^=|]|\b(?:and|mod|or)\b/,
      punctuation: /\(\.|\.\)|[()\[\]:;,.{}]/
    };
    var classNameInside = [
      "comment",
      "keyword",
      "builtin",
      "operator",
      "punctuation"
    ].reduce(function(accum, key) {
      accum[key] = pascaligo2[key];
      return accum;
    }, {});
    pascaligo2["class-name"].forEach(function(p2) {
      p2.inside = classNameInside;
    });
  })(Prism2);
}
var pcaxis_1 = pcaxis;
pcaxis.displayName = "pcaxis";
pcaxis.aliases = ["px"];
function pcaxis(Prism2) {
  Prism2.languages.pcaxis = {
    string: /"[^"]*"/,
    keyword: {
      pattern: /((?:^|;)\s*)[-A-Z\d]+(?:\s*\[[-\w]+\])?(?:\s*\("[^"]*"(?:,\s*"[^"]*")*\))?(?=\s*=)/,
      lookbehind: true,
      greedy: true,
      inside: {
        keyword: /^[-A-Z\d]+/,
        language: {
          pattern: /^(\s*)\[[-\w]+\]/,
          lookbehind: true,
          inside: {
            punctuation: /^\[|\]$/,
            property: /[-\w]+/
          }
        },
        "sub-key": {
          pattern: /^(\s*)\S[\s\S]*/,
          lookbehind: true,
          inside: {
            parameter: {
              pattern: /"[^"]*"/,
              alias: "property"
            },
            punctuation: /^\(|\)$|,/
          }
        }
      }
    },
    operator: /=/,
    tlist: {
      pattern: /TLIST\s*\(\s*\w+(?:(?:\s*,\s*"[^"]*")+|\s*,\s*"[^"]*"-"[^"]*")?\s*\)/,
      greedy: true,
      inside: {
        function: /^TLIST/,
        property: {
          pattern: /^(\s*\(\s*)\w+/,
          lookbehind: true
        },
        string: /"[^"]*"/,
        punctuation: /[(),]/,
        operator: /-/
      }
    },
    punctuation: /[;,]/,
    number: {
      pattern: /(^|\s)\d+(?:\.\d+)?(?!\S)/,
      lookbehind: true
    },
    boolean: /NO|YES/
  };
  Prism2.languages.px = Prism2.languages.pcaxis;
}
var peoplecode_1 = peoplecode;
peoplecode.displayName = "peoplecode";
peoplecode.aliases = ["pcode"];
function peoplecode(Prism2) {
  Prism2.languages.peoplecode = {
    comment: RegExp([
      /\/\*[\s\S]*?\*\//.source,
      /\bREM[^;]*;/.source,
      /<\*(?:[^<*]|\*(?!>)|<(?!\*)|<\*(?:(?!\*>)[\s\S])*\*>)*\*>/.source,
      /\/\+[\s\S]*?\+\//.source
    ].join("|")),
    string: {
      pattern: /'(?:''|[^'\r\n])*'(?!')|"(?:""|[^"\r\n])*"(?!")/,
      greedy: true
    },
    variable: /%\w+/,
    "function-definition": {
      pattern: /((?:^|[^\w-])(?:function|method)\s+)\w+/i,
      lookbehind: true,
      alias: "function"
    },
    "class-name": {
      pattern: /((?:^|[^-\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\s+)\w+(?::\w+)*/i,
      lookbehind: true,
      inside: {
        punctuation: /:/
      }
    },
    keyword: /\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\b/i,
    "operator-keyword": {
      pattern: /\b(?:and|not|or)\b/i,
      alias: "operator"
    },
    function: /[_a-z]\w*(?=\s*\()/i,
    boolean: /\b(?:false|true)\b/i,
    number: /\b\d+(?:\.\d+)?\b/,
    operator: /<>|[<>]=?|!=|\*\*|[-+*/|=@]/,
    punctuation: /[:.;,()[\]]/
  };
  Prism2.languages.pcode = Prism2.languages.peoplecode;
}
var perl_1 = perl;
perl.displayName = "perl";
perl.aliases = [];
function perl(Prism2) {
  (function(Prism3) {
    var brackets = /(?:\((?:[^()\\]|\\[\s\S])*\)|\{(?:[^{}\\]|\\[\s\S])*\}|\[(?:[^[\]\\]|\\[\s\S])*\]|<(?:[^<>\\]|\\[\s\S])*>)/.source;
    Prism3.languages.perl = {
      comment: [
        {
          pattern: /(^\s*)=\w[\s\S]*?=cut.*/m,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /(^|[^\\$])#.*/,
          lookbehind: true,
          greedy: true
        }
      ],
      string: [
        {
          pattern: RegExp(/\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
            /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
            /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
            brackets
          ].join("|") + ")"),
          greedy: true
        },
        {
          pattern: /("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,
          greedy: true
        },
        {
          pattern: /'(?:[^'\\\r\n]|\\.)*'/,
          greedy: true
        }
      ],
      regex: [
        {
          pattern: RegExp(/\b(?:m|qr)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
            /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
            /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
            brackets
          ].join("|") + ")" + /[msixpodualngc]*/.source),
          greedy: true
        },
        {
          pattern: RegExp(/(^|[^-])\b(?:s|tr|y)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
            /([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
            /([a-zA-Z0-9])(?:(?!\3)[^\\]|\\[\s\S])*\3(?:(?!\3)[^\\]|\\[\s\S])*\3/.source,
            brackets + /\s*/.source + brackets
          ].join("|") + ")" + /[msixpodualngcer]*/.source),
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\b))/,
          greedy: true
        }
      ],
      variable: [
        /[&*$@%]\{\^[A-Z]+\}/,
        /[&*$@%]\^[A-Z_]/,
        /[&*$@%]#?(?=\{)/,
        /[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+(?![\w$]))+(?:::)*/,
        /[&*$@%]\d+/,
        /(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/
      ],
      filehandle: {
        pattern: /<(?![<=])\S*?>|\b_\b/,
        alias: "symbol"
      },
      "v-string": {
        pattern: /v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,
        alias: "string"
      },
      function: {
        pattern: /(\bsub[ \t]+)\w+/,
        lookbehind: true
      },
      keyword: /\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\b/,
      number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,
      operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\b/,
      punctuation: /[{}[\];(),:]/
    };
  })(Prism2);
}
var refractorPhp$1 = php_1;
var phpExtras_1 = phpExtras;
phpExtras.displayName = "phpExtras";
phpExtras.aliases = [];
function phpExtras(Prism2) {
  Prism2.register(refractorPhp$1);
  Prism2.languages.insertBefore("php", "variable", {
    this: {
      pattern: /\$this\b/,
      alias: "keyword"
    },
    global: /\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\b/,
    scope: {
      pattern: /\b[\w\\]+::/,
      inside: {
        keyword: /\b(?:parent|self|static)\b/,
        punctuation: /::|\\/
      }
    }
  });
}
var refractorPhp = php_1;
var refractorJavadoclike = javadoclike_1;
var phpdoc_1 = phpdoc;
phpdoc.displayName = "phpdoc";
phpdoc.aliases = [];
function phpdoc(Prism2) {
  Prism2.register(refractorPhp);
  Prism2.register(refractorJavadoclike);
  (function(Prism3) {
    var typeExpression = /(?:\b[a-zA-Z]\w*|[|\\[\]])+/.source;
    Prism3.languages.phpdoc = Prism3.languages.extend("javadoclike", {
      parameter: {
        pattern: RegExp("(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:" + typeExpression + "\\s+)?)\\$\\w+"),
        lookbehind: true
      }
    });
    Prism3.languages.insertBefore("phpdoc", "keyword", {
      "class-name": [
        {
          pattern: RegExp("(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)" + typeExpression),
          lookbehind: true,
          inside: {
            keyword: /\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\b/,
            punctuation: /[|\\[\]()]/
          }
        }
      ]
    });
    Prism3.languages.javadoclike.addSupport("php", Prism3.languages.phpdoc);
  })(Prism2);
}
var refractorSql = sql_1;
var plsql_1 = plsql;
plsql.displayName = "plsql";
plsql.aliases = [];
function plsql(Prism2) {
  Prism2.register(refractorSql);
  Prism2.languages.plsql = Prism2.languages.extend("sql", {
    comment: {
      pattern: /\/\*[\s\S]*?\*\/|--.*/,
      greedy: true
    },
    keyword: /\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\b/i,
    operator: /:=?|=>|[<>^~!]=|\.\.|\|\||\*\*|[-+*/%<>=@]/
  });
  Prism2.languages.insertBefore("plsql", "operator", {
    label: {
      pattern: /<<\s*\w+\s*>>/,
      alias: "symbol"
    }
  });
}
var powerquery_1 = powerquery;
powerquery.displayName = "powerquery";
powerquery.aliases = [];
function powerquery(Prism2) {
  Prism2.languages.powerquery = {
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
      lookbehind: true,
      greedy: true
    },
    "quoted-identifier": {
      pattern: /#"(?:[^"\r\n]|"")*"(?!")/,
      greedy: true
    },
    string: {
      pattern: /(?:#!)?"(?:[^"\r\n]|"")*"(?!")/,
      greedy: true
    },
    constant: [
      /\bDay\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\b/,
      /\bTraceLevel\.(?:Critical|Error|Information|Verbose|Warning)\b/,
      /\bOccurrence\.(?:All|First|Last)\b/,
      /\bOrder\.(?:Ascending|Descending)\b/,
      /\bRoundingMode\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\b/,
      /\bMissingField\.(?:Error|Ignore|UseNull)\b/,
      /\bQuoteStyle\.(?:Csv|None)\b/,
      /\bJoinKind\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\b/,
      /\bGroupKind\.(?:Global|Local)\b/,
      /\bExtraValues\.(?:Error|Ignore|List)\b/,
      /\bJoinAlgorithm\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\b/,
      /\bJoinSide\.(?:Left|Right)\b/,
      /\bPrecision\.(?:Decimal|Double)\b/,
      /\bRelativePosition\.From(?:End|Start)\b/,
      /\bTextEncoding\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\b/,
      /\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\.Type\b/,
      /\bnull\b/
    ],
    boolean: /\b(?:false|true)\b/,
    keyword: /\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\b/,
    function: {
      pattern: /(^|[^#\w.])[a-z_][\w.]*(?=\s*\()/i,
      lookbehind: true
    },
    "data-type": {
      pattern: /\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\b/,
      alias: "class-name"
    },
    number: {
      pattern: /\b0x[\da-f]+\b|(?:[+-]?(?:\b\d+\.)?\b\d+|[+-]\.\d+|(^|[^.])\B\.\d+)(?:e[+-]?\d+)?\b/i,
      lookbehind: true
    },
    operator: /[-+*\/&?@^]|<(?:=>?|>)?|>=?|=>?|\.\.\.?/,
    punctuation: /[,;\[\](){}]/
  };
  Prism2.languages.pq = Prism2.languages["powerquery"];
  Prism2.languages.mscript = Prism2.languages["powerquery"];
}
var powershell_1 = powershell;
powershell.displayName = "powershell";
powershell.aliases = [];
function powershell(Prism2) {
  (function(Prism3) {
    var powershell2 = Prism3.languages.powershell = {
      comment: [
        {
          pattern: /(^|[^`])<#[\s\S]*?#>/,
          lookbehind: true
        },
        {
          pattern: /(^|[^`])#.*/,
          lookbehind: true
        }
      ],
      string: [
        {
          pattern: /"(?:`[\s\S]|[^`"])*"/,
          greedy: true,
          inside: null
        },
        {
          pattern: /'(?:[^']|'')*'/,
          greedy: true
        }
      ],
      namespace: /\[[a-z](?:\[(?:\[[^\]]*\]|[^\[\]])*\]|[^\[\]])*\]/i,
      boolean: /\$(?:false|true)\b/i,
      variable: /\$\w+\b/,
      function: [
        /\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\b/i,
        /\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\b/i
      ],
      keyword: /\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\b/i,
      operator: {
        pattern: /(^|\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\b|-[-=]?|\+[+=]?|[*\/%]=?)/i,
        lookbehind: true
      },
      punctuation: /[|{}[\];(),.]/
    };
    powershell2.string[0].inside = {
      function: {
        pattern: /(^|[^`])\$\((?:\$\([^\r\n()]*\)|(?!\$\()[^\r\n)])*\)/,
        lookbehind: true,
        inside: powershell2
      },
      boolean: powershell2.boolean,
      variable: powershell2.variable
    };
  })(Prism2);
}
var processing_1 = processing;
processing.displayName = "processing";
processing.aliases = [];
function processing(Prism2) {
  Prism2.languages.processing = Prism2.languages.extend("clike", {
    keyword: /\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\b/,
    function: /\b\w+(?=\s*\()/,
    operator: /<[<=]?|>[>=]?|&&?|\|\|?|[%?]|[!=+\-*\/]=?/
  });
  Prism2.languages.insertBefore("processing", "number", {
    constant: /\b(?!XML\b)[A-Z][A-Z\d_]+\b/,
    type: {
      pattern: /\b(?:boolean|byte|char|color|double|float|int|[A-Z]\w*)\b/,
      alias: "class-name"
    }
  });
}
var prolog_1 = prolog;
prolog.displayName = "prolog";
prolog.aliases = [];
function prolog(Prism2) {
  Prism2.languages.prolog = {
    comment: {
      pattern: /\/\*[\s\S]*?\*\/|%.*/,
      greedy: true
    },
    string: {
      pattern: /(["'])(?:\1\1|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1(?!\1)/,
      greedy: true
    },
    builtin: /\b(?:fx|fy|xf[xy]?|yfx?)\b/,
    function: /\b[a-z]\w*(?:(?=\()|\/\d+)/,
    number: /\b\d+(?:\.\d*)?/,
    operator: /[:\\=><\-?*@\/;+^|!$.]+|\b(?:is|mod|not|xor)\b/,
    punctuation: /[(){}\[\],]/
  };
}
var promql_1 = promql;
promql.displayName = "promql";
promql.aliases = [];
function promql(Prism2) {
  (function(Prism3) {
    var aggregations = [
      "sum",
      "min",
      "max",
      "avg",
      "group",
      "stddev",
      "stdvar",
      "count",
      "count_values",
      "bottomk",
      "topk",
      "quantile"
    ];
    var vectorMatching = [
      "on",
      "ignoring",
      "group_right",
      "group_left",
      "by",
      "without"
    ];
    var offsetModifier = ["offset"];
    var keywords = aggregations.concat(vectorMatching, offsetModifier);
    Prism3.languages.promql = {
      comment: {
        pattern: /(^[ \t]*)#.*/m,
        lookbehind: true
      },
      "vector-match": {
        pattern: new RegExp("((?:" + vectorMatching.join("|") + ")\\s*)\\([^)]*\\)"),
        lookbehind: true,
        inside: {
          "label-key": {
            pattern: /\b[^,]+\b/,
            alias: "attr-name"
          },
          punctuation: /[(),]/
        }
      },
      "context-labels": {
        pattern: /\{[^{}]*\}/,
        inside: {
          "label-key": {
            pattern: /\b[a-z_]\w*(?=\s*(?:=|![=~]))/,
            alias: "attr-name"
          },
          "label-value": {
            pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,
            greedy: true,
            alias: "attr-value"
          },
          punctuation: /\{|\}|=~?|![=~]|,/
        }
      },
      "context-range": [
        {
          pattern: /\[[\w\s:]+\]/,
          inside: {
            punctuation: /\[|\]|:/,
            "range-duration": {
              pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i,
              alias: "number"
            }
          }
        },
        {
          pattern: /(\boffset\s+)\w+/,
          lookbehind: true,
          inside: {
            "range-duration": {
              pattern: /\b(?:\d+(?:[smhdwy]|ms))+\b/i,
              alias: "number"
            }
          }
        }
      ],
      keyword: new RegExp("\\b(?:" + keywords.join("|") + ")\\b", "i"),
      function: /\b[a-z_]\w*(?=\s*\()/i,
      number: /[-+]?(?:(?:\b\d+(?:\.\d+)?|\B\.\d+)(?:e[-+]?\d+)?\b|\b(?:0x[0-9a-f]+|nan|inf)\b)/i,
      operator: /[\^*/%+-]|==|!=|<=|<|>=|>|\b(?:and|or|unless)\b/i,
      punctuation: /[{};()`,.[\]]/
    };
  })(Prism2);
}
var properties_1 = properties;
properties.displayName = "properties";
properties.aliases = [];
function properties(Prism2) {
  Prism2.languages.properties = {
    comment: /^[ \t]*[#!].*$/m,
    "attr-value": {
      pattern: /(^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?: *[=:] *(?! )| ))(?:\\(?:\r\n|[\s\S])|[^\\\r\n])+/m,
      lookbehind: true
    },
    "attr-name": /^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?= *[=:]| )/m,
    punctuation: /[=:]/
  };
}
var protobuf_1 = protobuf;
protobuf.displayName = "protobuf";
protobuf.aliases = [];
function protobuf(Prism2) {
  (function(Prism3) {
    var builtinTypes = /\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\b/;
    Prism3.languages.protobuf = Prism3.languages.extend("clike", {
      "class-name": [
        {
          pattern: /(\b(?:enum|extend|message|service)\s+)[A-Za-z_]\w*(?=\s*\{)/,
          lookbehind: true
        },
        {
          pattern: /(\b(?:rpc\s+\w+|returns)\s*\(\s*(?:stream\s+)?)\.?[A-Za-z_]\w*(?:\.[A-Za-z_]\w*)*(?=\s*\))/,
          lookbehind: true
        }
      ],
      keyword: /\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\s+\w)|service|stream|syntax|to)\b(?!\s*=\s*\d)/,
      function: /\b[a-z_]\w*(?=\s*\()/i
    });
    Prism3.languages.insertBefore("protobuf", "operator", {
      map: {
        pattern: /\bmap<\s*[\w.]+\s*,\s*[\w.]+\s*>(?=\s+[a-z_]\w*\s*[=;])/i,
        alias: "class-name",
        inside: {
          punctuation: /[<>.,]/,
          builtin: builtinTypes
        }
      },
      builtin: builtinTypes,
      "positional-class-name": {
        pattern: /(?:\b|\B\.)[a-z_]\w*(?:\.[a-z_]\w*)*(?=\s+[a-z_]\w*\s*[=;])/i,
        alias: "class-name",
        inside: {
          punctuation: /\./
        }
      },
      annotation: {
        pattern: /(\[\s*)[a-z_]\w*(?=\s*=)/i,
        lookbehind: true
      }
    });
  })(Prism2);
}
var psl_1 = psl;
psl.displayName = "psl";
psl.aliases = [];
function psl(Prism2) {
  Prism2.languages.psl = {
    comment: {
      pattern: /#.*/,
      greedy: true
    },
    string: {
      pattern: /"(?:\\.|[^\\"])*"/,
      greedy: true,
      inside: {
        symbol: /\\[ntrbA-Z"\\]/
      }
    },
    "heredoc-string": {
      pattern: /<<<([a-zA-Z_]\w*)[\r\n](?:.*[\r\n])*?\1\b/,
      alias: "string",
      greedy: true
    },
    keyword: /\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\b/,
    constant: /\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\b/,
    boolean: /\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\b/,
    variable: /\b(?:PslDebug|errno|exit_status)\b/,
    builtin: {
      pattern: /\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\b/,
      alias: "builtin-function"
    },
    "foreach-variable": {
      pattern: /(\bforeach\s+(?:(?:\w+\b|"(?:\\.|[^\\"])*")\s+){0,2})[_a-zA-Z]\w*(?=\s*\()/,
      lookbehind: true,
      greedy: true
    },
    function: /\b[_a-z]\w*\b(?=\s*\()/i,
    number: /\b(?:0x[0-9a-f]+|\d+(?:\.\d+)?)\b/i,
    operator: /--|\+\+|&&=?|\|\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\.|[:?]/,
    punctuation: /[(){}\[\];,]/
  };
}
var pug_1 = pug;
pug.displayName = "pug";
pug.aliases = [];
function pug(Prism2) {
  (function(Prism3) {
    Prism3.languages.pug = {
      comment: {
        pattern: /(^([\t ]*))\/\/.*(?:(?:\r?\n|\r)\2[\t ].+)*/m,
        lookbehind: true
      },
      "multiline-script": {
        pattern: /(^([\t ]*)script\b.*\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
        lookbehind: true,
        inside: Prism3.languages.javascript
      },
      filter: {
        pattern: /(^([\t ]*)):.+(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
        lookbehind: true,
        inside: {
          "filter-name": {
            pattern: /^:[\w-]+/,
            alias: "variable"
          },
          text: /\S[\s\S]*/
        }
      },
      "multiline-plain-text": {
        pattern: /(^([\t ]*)[\w\-#.]+\.[\t ]*)(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/m,
        lookbehind: true
      },
      markup: {
        pattern: /(^[\t ]*)<.+/m,
        lookbehind: true,
        inside: Prism3.languages.markup
      },
      doctype: {
        pattern: /((?:^|\n)[\t ]*)doctype(?: .+)?/,
        lookbehind: true
      },
      "flow-control": {
        pattern: /(^[\t ]*)(?:case|default|each|else|if|unless|when|while)\b(?: .+)?/m,
        lookbehind: true,
        inside: {
          each: {
            pattern: /^each .+? in\b/,
            inside: {
              keyword: /\b(?:each|in)\b/,
              punctuation: /,/
            }
          },
          branch: {
            pattern: /^(?:case|default|else|if|unless|when|while)\b/,
            alias: "keyword"
          },
          rest: Prism3.languages.javascript
        }
      },
      keyword: {
        pattern: /(^[\t ]*)(?:append|block|extends|include|prepend)\b.+/m,
        lookbehind: true
      },
      mixin: [
        {
          pattern: /(^[\t ]*)mixin .+/m,
          lookbehind: true,
          inside: {
            keyword: /^mixin/,
            function: /\w+(?=\s*\(|\s*$)/,
            punctuation: /[(),.]/
          }
        },
        {
          pattern: /(^[\t ]*)\+.+/m,
          lookbehind: true,
          inside: {
            name: {
              pattern: /^\+\w+/,
              alias: "function"
            },
            rest: Prism3.languages.javascript
          }
        }
      ],
      script: {
        pattern: /(^[\t ]*script(?:(?:&[^(]+)?\([^)]+\))*[\t ]).+/m,
        lookbehind: true,
        inside: Prism3.languages.javascript
      },
      "plain-text": {
        pattern: /(^[\t ]*(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?[\t ]).+/m,
        lookbehind: true
      },
      tag: {
        pattern: /(^[\t ]*)(?!-)[\w\-#.]*[\w\-](?:(?:&[^(]+)?\([^)]+\))*\/?:?/m,
        lookbehind: true,
        inside: {
          attributes: [
            {
              pattern: /&[^(]+\([^)]+\)/,
              inside: Prism3.languages.javascript
            },
            {
              pattern: /\([^)]+\)/,
              inside: {
                "attr-value": {
                  pattern: /(=\s*(?!\s))(?:\{[^}]*\}|[^,)\r\n]+)/,
                  lookbehind: true,
                  inside: Prism3.languages.javascript
                },
                "attr-name": /[\w-]+(?=\s*!?=|\s*[,)])/,
                punctuation: /[!=(),]+/
              }
            }
          ],
          punctuation: /:/,
          "attr-id": /#[\w\-]+/,
          "attr-class": /\.[\w\-]+/
        }
      },
      code: [
        {
          pattern: /(^[\t ]*(?:-|!?=)).+/m,
          lookbehind: true,
          inside: Prism3.languages.javascript
        }
      ],
      punctuation: /[.\-!=|]+/
    };
    var filter_pattern = /(^([\t ]*)):<filter_name>(?:(?:\r?\n|\r(?!\n))(?:\2[\t ].+|\s*?(?=\r?\n|\r)))+/.source;
    var filters = [
      {
        filter: "atpl",
        language: "twig"
      },
      {
        filter: "coffee",
        language: "coffeescript"
      },
      "ejs",
      "handlebars",
      "less",
      "livescript",
      "markdown",
      {
        filter: "sass",
        language: "scss"
      },
      "stylus"
    ];
    var all_filters = {};
    for (var i2 = 0, l2 = filters.length; i2 < l2; i2++) {
      var filter = filters[i2];
      filter = typeof filter === "string" ? {
        filter,
        language: filter
      } : filter;
      if (Prism3.languages[filter.language]) {
        all_filters["filter-" + filter.filter] = {
          pattern: RegExp(filter_pattern.replace("<filter_name>", function() {
            return filter.filter;
          }), "m"),
          lookbehind: true,
          inside: {
            "filter-name": {
              pattern: /^:[\w-]+/,
              alias: "variable"
            },
            text: {
              pattern: /\S[\s\S]*/,
              alias: [filter.language, "language-" + filter.language],
              inside: Prism3.languages[filter.language]
            }
          }
        };
      }
    }
    Prism3.languages.insertBefore("pug", "filter", all_filters);
  })(Prism2);
}
var puppet_1 = puppet;
puppet.displayName = "puppet";
puppet.aliases = [];
function puppet(Prism2) {
  (function(Prism3) {
    Prism3.languages.puppet = {
      heredoc: [
        {
          pattern: /(@\("([^"\r\n\/):]+)"(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
          lookbehind: true,
          alias: "string",
          inside: {
            punctuation: /(?=\S).*\S(?= *$)/
          }
        },
        {
          pattern: /(@\(([^"\r\n\/):]+)(?:\/[nrts$uL]*)?\).*(?:\r?\n|\r))(?:.*(?:\r?\n|\r(?!\n)))*?[ \t]*(?:\|[ \t]*)?(?:-[ \t]*)?\2/,
          lookbehind: true,
          greedy: true,
          alias: "string",
          inside: {
            punctuation: /(?=\S).*\S(?= *$)/
          }
        },
        {
          pattern: /@\("?(?:[^"\r\n\/):]+)"?(?:\/[nrts$uL]*)?\)/,
          alias: "string",
          inside: {
            punctuation: {
              pattern: /(\().+?(?=\))/,
              lookbehind: true
            }
          }
        }
      ],
      "multiline-comment": {
        pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
        lookbehind: true,
        greedy: true,
        alias: "comment"
      },
      regex: {
        pattern: /((?:\bnode\s+|[~=\(\[\{,]\s*|[=+]>\s*|^\s*))\/(?:[^\/\\]|\\[\s\S])+\/(?:[imx]+\b|\B)/,
        lookbehind: true,
        greedy: true,
        inside: {
          "extended-regex": {
            pattern: /^\/(?:[^\/\\]|\\[\s\S])+\/[im]*x[im]*$/,
            inside: {
              comment: /#.*/
            }
          }
        }
      },
      comment: {
        pattern: /(^|[^\\])#.*/,
        lookbehind: true,
        greedy: true
      },
      string: {
        pattern: /(["'])(?:\$\{(?:[^'"}]|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}|\$(?!\{)|(?!\1)[^\\$]|\\[\s\S])*\1/,
        greedy: true,
        inside: {
          "double-quoted": {
            pattern: /^"[\s\S]*"$/,
            inside: {}
          }
        }
      },
      variable: {
        pattern: /\$(?:::)?\w+(?:::\w+)*/,
        inside: {
          punctuation: /::/
        }
      },
      "attr-name": /(?:\b\w+|\*)(?=\s*=>)/,
      function: [
        {
          pattern: /(\.)(?!\d)\w+/,
          lookbehind: true
        },
        /\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\b|\b(?!\d)\w+(?=\()/
      ],
      number: /\b(?:0x[a-f\d]+|\d+(?:\.\d+)?(?:e-?\d+)?)\b/i,
      boolean: /\b(?:false|true)\b/,
      keyword: /\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\b/,
      datatype: {
        pattern: /\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\b/,
        alias: "symbol"
      },
      operator: /=[=~>]?|![=~]?|<(?:<\|?|[=~|-])?|>[>=]?|->?|~>|\|>?>?|[*\/%+?]|\b(?:and|in|or)\b/,
      punctuation: /[\[\]{}().,;]|:+/
    };
    var interpolation = [
      {
        pattern: /(^|[^\\])\$\{(?:[^'"{}]|\{[^}]*\}|(["'])(?:(?!\2)[^\\]|\\[\s\S])*\2)+\}/,
        lookbehind: true,
        inside: {
          "short-variable": {
            pattern: /(^\$\{)(?!\w+\()(?:::)?\w+(?:::\w+)*/,
            lookbehind: true,
            alias: "variable",
            inside: {
              punctuation: /::/
            }
          },
          delimiter: {
            pattern: /^\$/,
            alias: "variable"
          },
          rest: Prism3.languages.puppet
        }
      },
      {
        pattern: /(^|[^\\])\$(?:::)?\w+(?:::\w+)*/,
        lookbehind: true,
        alias: "variable",
        inside: {
          punctuation: /::/
        }
      }
    ];
    Prism3.languages.puppet["heredoc"][0].inside.interpolation = interpolation;
    Prism3.languages.puppet["string"].inside["double-quoted"].inside.interpolation = interpolation;
  })(Prism2);
}
var pure_1 = pure;
pure.displayName = "pure";
pure.aliases = [];
function pure(Prism2) {
  (function(Prism3) {
    Prism3.languages.pure = {
      comment: [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
          lookbehind: true
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: true
        },
        /#!.+/
      ],
      "inline-lang": {
        pattern: /%<[\s\S]+?%>/,
        greedy: true,
        inside: {
          lang: {
            pattern: /(^%< *)-\*-.+?-\*-/,
            lookbehind: true,
            alias: "comment"
          },
          delimiter: {
            pattern: /^%<.*|%>$/,
            alias: "punctuation"
          }
        }
      },
      string: {
        pattern: /"(?:\\.|[^"\\\r\n])*"/,
        greedy: true
      },
      number: {
        pattern: /((?:\.\.)?)(?:\b(?:inf|nan)\b|\b0x[\da-f]+|(?:\b(?:0b)?\d+(?:\.\d+)?|\B\.\d+)(?:e[+-]?\d+)?L?)/i,
        lookbehind: true
      },
      keyword: /\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\b/,
      function: /\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\b/,
      special: {
        pattern: /\b__[a-z]+__\b/i,
        alias: "builtin"
      },
      operator: /(?:[!"#$%&'*+,\-.\/:<=>?@\\^`|~\u00a1-\u00bf\u00d7-\u00f7\u20d0-\u2bff]|\b_+\b)+|\b(?:and|div|mod|not|or)\b/,
      punctuation: /[(){}\[\];,|]/
    };
    var inlineLanguages = [
      "c",
      {
        lang: "c++",
        alias: "cpp"
      },
      "fortran"
    ];
    var inlineLanguageRe = /%< *-\*- *<lang>\d* *-\*-[\s\S]+?%>/.source;
    inlineLanguages.forEach(function(lang) {
      var alias2 = lang;
      if (typeof lang !== "string") {
        alias2 = lang.alias;
        lang = lang.lang;
      }
      if (Prism3.languages[alias2]) {
        var o2 = {};
        o2["inline-lang-" + alias2] = {
          pattern: RegExp(inlineLanguageRe.replace("<lang>", lang.replace(/([.+*?\/\\(){}\[\]])/g, "\\$1")), "i"),
          inside: Prism3.util.clone(Prism3.languages.pure["inline-lang"].inside)
        };
        o2["inline-lang-" + alias2].inside.rest = Prism3.util.clone(Prism3.languages[alias2]);
        Prism3.languages.insertBefore("pure", "inline-lang", o2);
      }
    });
    if (Prism3.languages.c) {
      Prism3.languages.pure["inline-lang"].inside.rest = Prism3.util.clone(Prism3.languages.c);
    }
  })(Prism2);
}
var purebasic_1 = purebasic;
purebasic.displayName = "purebasic";
purebasic.aliases = [];
function purebasic(Prism2) {
  Prism2.languages.purebasic = Prism2.languages.extend("clike", {
    comment: /;.*/,
    keyword: /\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\b/i,
    function: /\b\w+(?:\.\w+)?\s*(?=\()/,
    number: /(?:\$[\da-f]+|\b-?(?:\d+(?:\.\d+)?|\.\d+)(?:e[+-]?\d+)?)\b/i,
    operator: /(?:@\*?|\?|\*)\w+|-[>-]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|?\||[~^%?*/@]/
  });
  Prism2.languages.insertBefore("purebasic", "keyword", {
    tag: /#\w+\$?/,
    asm: {
      pattern: /(^[\t ]*)!.*/m,
      lookbehind: true,
      alias: "tag",
      inside: {
        comment: /;.*/,
        string: {
          pattern: /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
          greedy: true
        },
        "label-reference-anonymous": {
          pattern: /(!\s*j[a-z]+\s+)@[fb]/i,
          lookbehind: true,
          alias: "fasm-label"
        },
        "label-reference-addressed": {
          pattern: /(!\s*j[a-z]+\s+)[A-Z._?$@][\w.?$@~#]*/i,
          lookbehind: true,
          alias: "fasm-label"
        },
        keyword: [
          /\b(?:extern|global)\b[^;\r\n]*/i,
          /\b(?:CPU|DEFAULT|FLOAT)\b.*/
        ],
        function: {
          pattern: /^([\t ]*!\s*)[\da-z]+(?=\s|$)/im,
          lookbehind: true
        },
        "function-inline": {
          pattern: /(:\s*)[\da-z]+(?=\s)/i,
          lookbehind: true,
          alias: "function"
        },
        label: {
          pattern: /^([\t ]*!\s*)[A-Za-z._?$@][\w.?$@~#]*(?=:)/m,
          lookbehind: true,
          alias: "fasm-label"
        },
        register: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\d+)\b/i,
        number: /(?:\b|-|(?=\$))(?:0[hx](?:[\da-f]*\.)?[\da-f]+(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|(?:\d+(?:\.\d+)?|\.\d+)(?:\.?e[+-]?\d+)?[dt]?)\b/i,
        operator: /[\[\]*+\-/%<>=&|$!,.:]/
      }
    }
  });
  delete Prism2.languages.purebasic["class-name"];
  delete Prism2.languages.purebasic["boolean"];
  Prism2.languages.pbfasm = Prism2.languages["purebasic"];
}
var refractorHaskell = haskell_1;
var purescript_1 = purescript;
purescript.displayName = "purescript";
purescript.aliases = ["purs"];
function purescript(Prism2) {
  Prism2.register(refractorHaskell);
  Prism2.languages.purescript = Prism2.languages.extend("haskell", {
    keyword: /\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\b|∀/,
    "import-statement": {
      pattern: /(^[\t ]*)import\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*(?:\s+as\s+[A-Z][\w']*(?:\.[A-Z][\w']*)*)?(?:\s+hiding\b)?/m,
      lookbehind: true,
      inside: {
        keyword: /\b(?:as|hiding|import)\b/,
        punctuation: /\./
      }
    },
    builtin: /\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\b/,
    operator: [
      Prism2.languages.haskell.operator[0],
      Prism2.languages.haskell.operator[2],
      /[\xa2-\xa6\xa8\xa9\xac\xae-\xb1\xb4\xb8\xd7\xf7\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02eb\u02ed\u02ef-\u02ff\u0375\u0384\u0385\u03f6\u0482\u058d-\u058f\u0606-\u0608\u060b\u060e\u060f\u06de\u06e9\u06fd\u06fe\u07f6\u07fe\u07ff\u09f2\u09f3\u09fa\u09fb\u0af1\u0b70\u0bf3-\u0bfa\u0c7f\u0d4f\u0d79\u0e3f\u0f01-\u0f03\u0f13\u0f15-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fce\u0fcf\u0fd5-\u0fd8\u109e\u109f\u1390-\u1399\u166d\u17db\u1940\u19de-\u19ff\u1b61-\u1b6a\u1b74-\u1b7c\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u2044\u2052\u207a-\u207c\u208a-\u208c\u20a0-\u20bf\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211e-\u2123\u2125\u2127\u2129\u212e\u213a\u213b\u2140-\u2144\u214a-\u214d\u214f\u218a\u218b\u2190-\u2307\u230c-\u2328\u232b-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u2767\u2794-\u27c4\u27c7-\u27e5\u27f0-\u2982\u2999-\u29d7\u29dc-\u29fb\u29fe-\u2b73\u2b76-\u2b95\u2b97-\u2bff\u2ce5-\u2cea\u2e50\u2e51\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u309b\u309c\u3190\u3191\u3196-\u319f\u31c0-\u31e3\u3200-\u321e\u322a-\u3247\u3250\u3260-\u327f\u328a-\u32b0\u32c0-\u33ff\u4dc0-\u4dff\ua490-\ua4c6\ua700-\ua716\ua720\ua721\ua789\ua78a\ua828-\ua82b\ua836-\ua839\uaa77-\uaa79\uab5b\uab6a\uab6b\ufb29\ufbb2-\ufbc1\ufdfc\ufdfd\ufe62\ufe64-\ufe66\ufe69\uff04\uff0b\uff1c-\uff1e\uff3e\uff40\uff5c\uff5e\uffe0-\uffe6\uffe8-\uffee\ufffc\ufffd]/
    ]
  });
  Prism2.languages.purs = Prism2.languages.purescript;
}
var python_1 = python;
python.displayName = "python";
python.aliases = ["py"];
function python(Prism2) {
  Prism2.languages.python = {
    comment: {
      pattern: /(^|[^\\])#.*/,
      lookbehind: true,
      greedy: true
    },
    "string-interpolation": {
      pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
          lookbehind: true,
          inside: {
            "format-spec": {
              pattern: /(:)[^:(){}]+(?=\}$)/,
              lookbehind: true
            },
            "conversion-option": {
              pattern: /![sra](?=[:}]$)/,
              alias: "punctuation"
            },
            rest: null
          }
        },
        string: /[\s\S]+/
      }
    },
    "triple-quoted-string": {
      pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
      greedy: true,
      alias: "string"
    },
    string: {
      pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
      greedy: true
    },
    function: {
      pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
      lookbehind: true
    },
    "class-name": {
      pattern: /(\bclass\s+)\w+/i,
      lookbehind: true
    },
    decorator: {
      pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
      lookbehind: true,
      alias: ["annotation", "punctuation"],
      inside: {
        punctuation: /\./
      }
    },
    keyword: /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
    builtin: /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
    boolean: /\b(?:False|None|True)\b/,
    number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
    operator: /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
    punctuation: /[{}[\];(),.:]/
  };
  Prism2.languages.python["string-interpolation"].inside["interpolation"].inside.rest = Prism2.languages.python;
  Prism2.languages.py = Prism2.languages.python;
}
var q_1 = q;
q.displayName = "q";
q.aliases = [];
function q(Prism2) {
  Prism2.languages.q = {
    string: /"(?:\\.|[^"\\\r\n])*"/,
    comment: [
      {
        pattern: /([\t )\]}])\/.*/,
        lookbehind: true,
        greedy: true
      },
      {
        pattern: /(^|\r?\n|\r)\/[\t ]*(?:(?:\r?\n|\r)(?:.*(?:\r?\n|\r(?!\n)))*?(?:\\(?=[\t ]*(?:\r?\n|\r))|$)|\S.*)/,
        lookbehind: true,
        greedy: true
      },
      {
        pattern: /^\\[\t ]*(?:\r?\n|\r)[\s\S]+/m,
        greedy: true
      },
      {
        pattern: /^#!.+/m,
        greedy: true
      }
    ],
    symbol: /`(?::\S+|[\w.]*)/,
    datetime: {
      pattern: /0N[mdzuvt]|0W[dtz]|\d{4}\.\d\d(?:m|\.\d\d(?:T(?:\d\d(?::\d\d(?::\d\d(?:[.:]\d\d\d)?)?)?)?)?[dz]?)|\d\d:\d\d(?::\d\d(?:[.:]\d\d\d)?)?[uvt]?/,
      alias: "number"
    },
    number: /\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\da-fA-F]+|\d+(?:\.\d*)?(?:e[+-]?\d+)?[hjfeb]?)/,
    keyword: /\\\w+\b|\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\b/,
    adverb: {
      pattern: /['\/\\]:?|\beach\b/,
      alias: "function"
    },
    verb: {
      pattern: /(?:\B\.\B|\b[01]:|<[=>]?|>=?|[:+\-*%,!?~=|$&#@^]):?|\b_\b:?/,
      alias: "operator"
    },
    punctuation: /[(){}\[\];.]/
  };
}
var qml_1 = qml;
qml.displayName = "qml";
qml.aliases = [];
function qml(Prism2) {
  (function(Prism3) {
    var jsString = /"(?:\\.|[^\\"\r\n])*"|'(?:\\.|[^\\'\r\n])*'/.source;
    var jsComment = /\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))*\*\//.source;
    var jsExpr = /(?:[^\\()[\]{}"'/]|<string>|\/(?![*/])|<comment>|\(<expr>*\)|\[<expr>*\]|\{<expr>*\}|\\[\s\S])/.source.replace(/<string>/g, function() {
      return jsString;
    }).replace(/<comment>/g, function() {
      return jsComment;
    });
    for (var i2 = 0; i2 < 2; i2++) {
      jsExpr = jsExpr.replace(/<expr>/g, function() {
        return jsExpr;
      });
    }
    jsExpr = jsExpr.replace(/<expr>/g, "[^\\s\\S]");
    Prism3.languages.qml = {
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
        greedy: true
      },
      "javascript-function": {
        pattern: RegExp(/((?:^|;)[ \t]*)function\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*\(<js>*\)\s*\{<js>*\}/.source.replace(/<js>/g, function() {
          return jsExpr;
        }), "m"),
        lookbehind: true,
        greedy: true,
        alias: "language-javascript",
        inside: Prism3.languages.javascript
      },
      "class-name": {
        pattern: /((?:^|[:;])[ \t]*)(?!\d)\w+(?=[ \t]*\{|[ \t]+on\b)/m,
        lookbehind: true
      },
      property: [
        {
          pattern: /((?:^|[;{])[ \t]*)(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
          lookbehind: true
        },
        {
          pattern: /((?:^|[;{])[ \t]*)property[ \t]+(?!\d)\w+(?:\.\w+)*[ \t]+(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
          lookbehind: true,
          inside: {
            keyword: /^property/,
            property: /\w+(?:\.\w+)*/
          }
        }
      ],
      "javascript-expression": {
        pattern: RegExp(/(:[ \t]*)(?![\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function() {
          return jsExpr;
        }), "m"),
        lookbehind: true,
        greedy: true,
        alias: "language-javascript",
        inside: Prism3.languages.javascript
      },
      string: {
        pattern: /"(?:\\.|[^\\"\r\n])*"/,
        greedy: true
      },
      keyword: /\b(?:as|import|on)\b/,
      punctuation: /[{}[\]:;,]/
    };
  })(Prism2);
}
var qore_1 = qore;
qore.displayName = "qore";
qore.aliases = [];
function qore(Prism2) {
  Prism2.languages.qore = Prism2.languages.extend("clike", {
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:\/\/|#).*)/,
      lookbehind: true
    },
    string: {
      pattern: /("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/,
      greedy: true
    },
    keyword: /\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\b/,
    boolean: /\b(?:false|true)\b/i,
    function: /\$?\b(?!\d)\w+(?=\()/,
    number: /\b(?:0b[01]+|0x(?:[\da-f]*\.)?[\da-fp\-]+|(?:\d+(?:\.\d+)?|\.\d+)(?:e\d+)?[df]|(?:\d+(?:\.\d+)?|\.\d+))\b/i,
    operator: {
      pattern: /(^|[^.])(?:\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\|[|=]?|[*\/%^]=?|[~?])/,
      lookbehind: true
    },
    variable: /\$(?!\d)\w+\b/
  });
}
var qsharp_1 = qsharp;
qsharp.displayName = "qsharp";
qsharp.aliases = ["qs"];
function qsharp(Prism2) {
  (function(Prism3) {
    function replace2(pattern, replacements) {
      return pattern.replace(/<<(\d+)>>/g, function(m2, index) {
        return "(?:" + replacements[+index] + ")";
      });
    }
    function re2(pattern, replacements, flags) {
      return RegExp(replace2(pattern, replacements), flags || "");
    }
    function nested(pattern, depthLog2) {
      for (var i2 = 0; i2 < depthLog2; i2++) {
        pattern = pattern.replace(/<<self>>/g, function() {
          return "(?:" + pattern + ")";
        });
      }
      return pattern.replace(/<<self>>/g, "[^\\s\\S]");
    }
    var keywordKinds = {
      type: "Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero",
      other: "Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within"
    };
    function keywordsToPattern(words) {
      return "\\b(?:" + words.trim().replace(/ /g, "|") + ")\\b";
    }
    var keywords = RegExp(keywordsToPattern(keywordKinds.type + " " + keywordKinds.other));
    var identifier = /\b[A-Za-z_]\w*\b/.source;
    var qualifiedName = replace2(/<<0>>(?:\s*\.\s*<<0>>)*/.source, [identifier]);
    var typeInside = {
      keyword: keywords,
      punctuation: /[<>()?,.:[\]]/
    };
    var regularString = /"(?:\\.|[^\\"])*"/.source;
    Prism3.languages.qsharp = Prism3.languages.extend("clike", {
      comment: /\/\/.*/,
      string: [
        {
          pattern: re2(/(^|[^$\\])<<0>>/.source, [regularString]),
          lookbehind: true,
          greedy: true
        }
      ],
      "class-name": [
        {
          pattern: re2(/(\b(?:as|open)\s+)<<0>>(?=\s*(?:;|as\b))/.source, [
            qualifiedName
          ]),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: re2(/(\bnamespace\s+)<<0>>(?=\s*\{)/.source, [qualifiedName]),
          lookbehind: true,
          inside: typeInside
        }
      ],
      keyword: keywords,
      number: /(?:\b0(?:x[\da-f]+|b[01]+|o[0-7]+)|(?:\B\.\d+|\b\d+(?:\.\d*)?)(?:e[-+]?\d+)?)l?\b/i,
      operator: /\band=|\bor=|\band\b|\bnot\b|\bor\b|<[-=]|[-=]>|>>>=?|<<<=?|\^\^\^=?|\|\|\|=?|&&&=?|w\/=?|~~~|[*\/+\-^=!%]=?/,
      punctuation: /::|[{}[\];(),.:]/
    });
    Prism3.languages.insertBefore("qsharp", "number", {
      range: {
        pattern: /\.\./,
        alias: "operator"
      }
    });
    var interpolationExpr = nested(replace2(/\{(?:[^"{}]|<<0>>|<<self>>)*\}/.source, [regularString]), 2);
    Prism3.languages.insertBefore("qsharp", "string", {
      "interpolation-string": {
        pattern: re2(/\$"(?:\\.|<<0>>|[^\\"{])*"/.source, [interpolationExpr]),
        greedy: true,
        inside: {
          interpolation: {
            pattern: re2(/((?:^|[^\\])(?:\\\\)*)<<0>>/.source, [
              interpolationExpr
            ]),
            lookbehind: true,
            inside: {
              punctuation: /^\{|\}$/,
              expression: {
                pattern: /[\s\S]+/,
                alias: "language-qsharp",
                inside: Prism3.languages.qsharp
              }
            }
          },
          string: /[\s\S]+/
        }
      }
    });
  })(Prism2);
  Prism2.languages.qs = Prism2.languages.qsharp;
}
var r_1 = r;
r.displayName = "r";
r.aliases = [];
function r(Prism2) {
  Prism2.languages.r = {
    comment: /#.*/,
    string: {
      pattern: /(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    "percent-operator": {
      pattern: /%[^%\s]*%/,
      alias: "operator"
    },
    boolean: /\b(?:FALSE|TRUE)\b/,
    ellipsis: /\.\.(?:\.|\d+)/,
    number: [
      /\b(?:Inf|NaN)\b/,
      /(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+(?:\.\d*)?|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/
    ],
    keyword: /\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\b/,
    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,
    punctuation: /[(){}\[\],;]/
  };
}
var refractorScheme = scheme_1;
var racket_1 = racket;
racket.displayName = "racket";
racket.aliases = ["rkt"];
function racket(Prism2) {
  Prism2.register(refractorScheme);
  Prism2.languages.racket = Prism2.languages.extend("scheme", {
    "lambda-parameter": {
      pattern: /([(\[]lambda\s+[(\[])[^()\[\]'\s]+/,
      lookbehind: true
    }
  });
  Prism2.languages.insertBefore("racket", "string", {
    lang: {
      pattern: /^#lang.+/m,
      greedy: true,
      alias: "keyword"
    }
  });
  Prism2.languages.rkt = Prism2.languages.racket;
}
var reason_1 = reason;
reason.displayName = "reason";
reason.aliases = [];
function reason(Prism2) {
  Prism2.languages.reason = Prism2.languages.extend("clike", {
    string: {
      pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
      greedy: true
    },
    "class-name": /\b[A-Z]\w*/,
    keyword: /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
    operator: /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/
  });
  Prism2.languages.insertBefore("reason", "class-name", {
    char: {
      pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,
      greedy: true
    },
    constructor: /\b[A-Z]\w*\b(?!\s*\.)/,
    label: {
      pattern: /\b[a-z]\w*(?=::)/,
      alias: "symbol"
    }
  });
  delete Prism2.languages.reason.function;
}
var regex_1 = regex;
regex.displayName = "regex";
regex.aliases = [];
function regex(Prism2) {
  (function(Prism3) {
    var specialEscape = {
      pattern: /\\[\\(){}[\]^$+*?|.]/,
      alias: "escape"
    };
    var escape = /\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/;
    var charSet = {
      pattern: /\.|\\[wsd]|\\p\{[^{}]+\}/i,
      alias: "class-name"
    };
    var charSetWithoutDot = {
      pattern: /\\[wsd]|\\p\{[^{}]+\}/i,
      alias: "class-name"
    };
    var rangeChar = "(?:[^\\\\-]|" + escape.source + ")";
    var range = RegExp(rangeChar + "-" + rangeChar);
    var groupName = {
      pattern: /(<|')[^<>']+(?=[>']$)/,
      lookbehind: true,
      alias: "variable"
    };
    Prism3.languages.regex = {
      "char-class": {
        pattern: /((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/,
        lookbehind: true,
        inside: {
          "char-class-negation": {
            pattern: /(^\[)\^/,
            lookbehind: true,
            alias: "operator"
          },
          "char-class-punctuation": {
            pattern: /^\[|\]$/,
            alias: "punctuation"
          },
          range: {
            pattern: range,
            inside: {
              escape,
              "range-punctuation": {
                pattern: /-/,
                alias: "operator"
              }
            }
          },
          "special-escape": specialEscape,
          "char-set": charSetWithoutDot,
          escape
        }
      },
      "special-escape": specialEscape,
      "char-set": charSet,
      backreference: [
        {
          pattern: /\\(?![123][0-7]{2})[1-9]/,
          alias: "keyword"
        },
        {
          pattern: /\\k<[^<>']+>/,
          alias: "keyword",
          inside: {
            "group-name": groupName
          }
        }
      ],
      anchor: {
        pattern: /[$^]|\\[ABbGZz]/,
        alias: "function"
      },
      escape,
      group: [
        {
          pattern: /\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,
          alias: "punctuation",
          inside: {
            "group-name": groupName
          }
        },
        {
          pattern: /\)/,
          alias: "punctuation"
        }
      ],
      quantifier: {
        pattern: /(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/,
        alias: "number"
      },
      alternation: {
        pattern: /\|/,
        alias: "keyword"
      }
    };
  })(Prism2);
}
var rego_1 = rego;
rego.displayName = "rego";
rego.aliases = [];
function rego(Prism2) {
  Prism2.languages.rego = {
    comment: /#.*/,
    property: {
      pattern: /(^|[^\\.])(?:"(?:\\.|[^\\"\r\n])*"|`[^`]*`|\b[a-z_]\w*\b)(?=\s*:(?!=))/i,
      lookbehind: true,
      greedy: true
    },
    string: {
      pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"|`[^`]*`/,
      lookbehind: true,
      greedy: true
    },
    keyword: /\b(?:as|default|else|import|not|null|package|set(?=\s*\()|some|with)\b/,
    boolean: /\b(?:false|true)\b/,
    function: {
      pattern: /\b[a-z_]\w*\b(?:\s*\.\s*\b[a-z_]\w*\b)*(?=\s*\()/i,
      inside: {
        namespace: /\b\w+\b(?=\s*\.)/,
        punctuation: /\./
      }
    },
    number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
    operator: /[-+*/%|&]|[<>:=]=?|!=|\b_\b/,
    punctuation: /[,;.\[\]{}()]/
  };
}
var renpy_1 = renpy;
renpy.displayName = "renpy";
renpy.aliases = ["rpy"];
function renpy(Prism2) {
  Prism2.languages.renpy = {
    comment: {
      pattern: /(^|[^\\])#.+/,
      lookbehind: true
    },
    string: {
      pattern: /("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\])*\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,
      greedy: true
    },
    function: /\b[a-z_]\w*(?=\()/i,
    property: /\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\b/,
    tag: /\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\b|\$/,
    keyword: /\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\b/,
    boolean: /\b(?:[Ff]alse|[Tt]rue)\b/,
    number: /(?:\b(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?)|\B\.\d+)(?:e[+-]?\d+)?j?/i,
    operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:and|at|not|or|with)\b/,
    punctuation: /[{}[\];(),.:]/
  };
  Prism2.languages.rpy = Prism2.languages.renpy;
}
var rest_1 = rest;
rest.displayName = "rest";
rest.aliases = [];
function rest(Prism2) {
  Prism2.languages.rest = {
    table: [
      {
        pattern: /(^[\t ]*)(?:\+[=-]+)+\+(?:\r?\n|\r)(?:\1[+|].+[+|](?:\r?\n|\r))+\1(?:\+[=-]+)+\+/m,
        lookbehind: true,
        inside: {
          punctuation: /\||(?:\+[=-]+)+\+/
        }
      },
      {
        pattern: /(^[\t ]*)=+ [ =]*=(?:(?:\r?\n|\r)\1.+)+(?:\r?\n|\r)\1=+ [ =]*=(?=(?:\r?\n|\r){2}|\s*$)/m,
        lookbehind: true,
        inside: {
          punctuation: /[=-]+/
        }
      }
    ],
    "substitution-def": {
      pattern: /(^[\t ]*\.\. )\|(?:[^|\s](?:[^|]*[^|\s])?)\| [^:]+::/m,
      lookbehind: true,
      inside: {
        substitution: {
          pattern: /^\|(?:[^|\s]|[^|\s][^|]*[^|\s])\|/,
          alias: "attr-value",
          inside: {
            punctuation: /^\||\|$/
          }
        },
        directive: {
          pattern: /( )(?! )[^:]+::/,
          lookbehind: true,
          alias: "function",
          inside: {
            punctuation: /::$/
          }
        }
      }
    },
    "link-target": [
      {
        pattern: /(^[\t ]*\.\. )\[[^\]]+\]/m,
        lookbehind: true,
        alias: "string",
        inside: {
          punctuation: /^\[|\]$/
        }
      },
      {
        pattern: /(^[\t ]*\.\. )_(?:`[^`]+`|(?:[^:\\]|\\.)+):/m,
        lookbehind: true,
        alias: "string",
        inside: {
          punctuation: /^_|:$/
        }
      }
    ],
    directive: {
      pattern: /(^[\t ]*\.\. )[^:]+::/m,
      lookbehind: true,
      alias: "function",
      inside: {
        punctuation: /::$/
      }
    },
    comment: {
      pattern: /(^[\t ]*\.\.)(?:(?: .+)?(?:(?:\r?\n|\r).+)+| .+)(?=(?:\r?\n|\r){2}|$)/m,
      lookbehind: true
    },
    title: [
      {
        pattern: /^(([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+)(?:\r?\n|\r).+(?:\r?\n|\r)\1$/m,
        inside: {
          punctuation: /^[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+|[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,
          important: /.+/
        }
      },
      {
        pattern: /(^|(?:\r?\n|\r){2}).+(?:\r?\n|\r)([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2+(?=\r?\n|\r|$)/,
        lookbehind: true,
        inside: {
          punctuation: /[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]+$/,
          important: /.+/
        }
      }
    ],
    hr: {
      pattern: /((?:\r?\n|\r){2})([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\2{3,}(?=(?:\r?\n|\r){2})/,
      lookbehind: true,
      alias: "punctuation"
    },
    field: {
      pattern: /(^[\t ]*):[^:\r\n]+:(?= )/m,
      lookbehind: true,
      alias: "attr-name"
    },
    "command-line-option": {
      pattern: /(^[\t ]*)(?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\d]|(?:--|\/)[a-z\d-]+)(?:[ =](?:[a-z][\w-]*|<[^<>]+>))?)*(?=(?:\r?\n|\r)? {2,}\S)/im,
      lookbehind: true,
      alias: "symbol"
    },
    "literal-block": {
      pattern: /::(?:\r?\n|\r){2}([ \t]+)(?![ \t]).+(?:(?:\r?\n|\r)\1.+)*/,
      inside: {
        "literal-block-punctuation": {
          pattern: /^::/,
          alias: "punctuation"
        }
      }
    },
    "quoted-literal-block": {
      pattern: /::(?:\r?\n|\r){2}([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~]).*(?:(?:\r?\n|\r)\1.*)*/,
      inside: {
        "literal-block-punctuation": {
          pattern: /^(?:::|([!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~])\1*)/m,
          alias: "punctuation"
        }
      }
    },
    "list-bullet": {
      pattern: /(^[\t ]*)(?:[*+\-•‣⁃]|\(?(?:\d+|[a-z]|[ivxdclm]+)\)|(?:\d+|[a-z]|[ivxdclm]+)\.)(?= )/im,
      lookbehind: true,
      alias: "punctuation"
    },
    "doctest-block": {
      pattern: /(^[\t ]*)>>> .+(?:(?:\r?\n|\r).+)*/m,
      lookbehind: true,
      inside: {
        punctuation: /^>>>/
      }
    },
    inline: [
      {
        pattern: /(^|[\s\-:\/'"<(\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\*\*?|``?|\|)(?!\s)(?:(?!\2).)*\S\2(?=[\s\-.,:;!?\\\/'")\]}]|$))/m,
        lookbehind: true,
        inside: {
          bold: {
            pattern: /(^\*\*).+(?=\*\*$)/,
            lookbehind: true
          },
          italic: {
            pattern: /(^\*).+(?=\*$)/,
            lookbehind: true
          },
          "inline-literal": {
            pattern: /(^``).+(?=``$)/,
            lookbehind: true,
            alias: "symbol"
          },
          role: {
            pattern: /^:[^:]+:|:[^:]+:$/,
            alias: "function",
            inside: {
              punctuation: /^:|:$/
            }
          },
          "interpreted-text": {
            pattern: /(^`).+(?=`$)/,
            lookbehind: true,
            alias: "attr-value"
          },
          substitution: {
            pattern: /(^\|).+(?=\|$)/,
            lookbehind: true,
            alias: "attr-value"
          },
          punctuation: /\*\*?|``?|\|/
        }
      }
    ],
    link: [
      {
        pattern: /\[[^\[\]]+\]_(?=[\s\-.,:;!?\\\/'")\]}]|$)/,
        alias: "string",
        inside: {
          punctuation: /^\[|\]_$/
        }
      },
      {
        pattern: /(?:\b[a-z\d]+(?:[_.:+][a-z\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\s\-.,:;!?\\\/'")\]}]|$)/i,
        alias: "string",
        inside: {
          punctuation: /^_?`|`$|`?_?_$/
        }
      }
    ],
    punctuation: {
      pattern: /(^[\t ]*)(?:\|(?= |$)|(?:---?|—|\.\.|__)(?= )|\.\.$)/m,
      lookbehind: true
    }
  };
}
var rip_1 = rip;
rip.displayName = "rip";
rip.aliases = [];
function rip(Prism2) {
  Prism2.languages.rip = {
    comment: {
      pattern: /#.*/,
      greedy: true
    },
    char: {
      pattern: /\B`[^\s`'",.:;#\/\\()<>\[\]{}]\b/,
      greedy: true
    },
    string: {
      pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    regex: {
      pattern: /(^|[^/])\/(?!\/)(?:\[[^\n\r\]]*\]|\\.|[^/\\\r\n\[])+\/(?=\s*(?:$|[\r\n,.;})]))/,
      lookbehind: true,
      greedy: true
    },
    keyword: /(?:=>|->)|\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\b/,
    builtin: /@|\bSystem\b/,
    boolean: /\b(?:false|true)\b/,
    date: /\b\d{4}-\d{2}-\d{2}\b/,
    time: /\b\d{2}:\d{2}:\d{2}\b/,
    datetime: /\b\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\b/,
    symbol: /:[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/,
    number: /[+-]?\b(?:\d+\.\d+|\d+)\b/,
    punctuation: /(?:\.{2,3})|[`,.:;=\/\\()<>\[\]{}]/,
    reference: /[^\d\s`'",.:;#\/\\()<>\[\]{}][^\s`'",.:;#\/\\()<>\[\]{}]*/
  };
}
var roboconf_1 = roboconf;
roboconf.displayName = "roboconf";
roboconf.aliases = [];
function roboconf(Prism2) {
  Prism2.languages.roboconf = {
    comment: /#.*/,
    keyword: {
      pattern: /(^|\s)(?:(?:external|import)\b|(?:facet|instance of)(?=[ \t]+[\w-]+[ \t]*\{))/,
      lookbehind: true
    },
    component: {
      pattern: /[\w-]+(?=[ \t]*\{)/,
      alias: "variable"
    },
    property: /[\w.-]+(?=[ \t]*:)/,
    value: {
      pattern: /(=[ \t]*(?![ \t]))[^,;]+/,
      lookbehind: true,
      alias: "attr-value"
    },
    optional: {
      pattern: /\(optional\)/,
      alias: "builtin"
    },
    wildcard: {
      pattern: /(\.)\*/,
      lookbehind: true,
      alias: "operator"
    },
    punctuation: /[{},.;:=]/
  };
}
var robotframework_1 = robotframework;
robotframework.displayName = "robotframework";
robotframework.aliases = [];
function robotframework(Prism2) {
  (function(Prism3) {
    var comment = {
      pattern: /(^[ \t]*| {2}|\t)#.*/m,
      lookbehind: true,
      greedy: true
    };
    var variable = {
      pattern: /((?:^|[^\\])(?:\\{2})*)[$@&%]\{(?:[^{}\r\n]|\{[^{}\r\n]*\})*\}/,
      lookbehind: true,
      inside: {
        punctuation: /^[$@&%]\{|\}$/
      }
    };
    function createSection(name2, inside) {
      var extendecInside = {};
      extendecInside["section-header"] = {
        pattern: /^ ?\*{3}.+?\*{3}/,
        alias: "keyword"
      };
      for (var token2 in inside) {
        extendecInside[token2] = inside[token2];
      }
      extendecInside["tag"] = {
        pattern: /([\r\n](?: {2}|\t)[ \t]*)\[[-\w]+\]/,
        lookbehind: true,
        inside: {
          punctuation: /\[|\]/
        }
      };
      extendecInside["variable"] = variable;
      extendecInside["comment"] = comment;
      return {
        pattern: RegExp(/^ ?\*{3}[ \t]*<name>[ \t]*\*{3}(?:.|[\r\n](?!\*{3}))*/.source.replace(/<name>/g, function() {
          return name2;
        }), "im"),
        alias: "section",
        inside: extendecInside
      };
    }
    var docTag = {
      pattern: /(\[Documentation\](?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
      lookbehind: true,
      alias: "string"
    };
    var testNameLike = {
      pattern: /([\r\n] ?)(?!#)(?:\S(?:[ \t]\S)*)+/,
      lookbehind: true,
      alias: "function",
      inside: {
        variable
      }
    };
    var testPropertyLike = {
      pattern: /([\r\n](?: {2}|\t)[ \t]*)(?!\[|\.{3}|#)(?:\S(?:[ \t]\S)*)+/,
      lookbehind: true,
      inside: {
        variable
      }
    };
    Prism3.languages["robotframework"] = {
      settings: createSection("Settings", {
        documentation: {
          pattern: /([\r\n] ?Documentation(?: {2}|\t)[ \t]*)(?![ \t]|#)(?:.|(?:\r\n?|\n)[ \t]*\.{3})+/,
          lookbehind: true,
          alias: "string"
        },
        property: {
          pattern: /([\r\n] ?)(?!\.{3}|#)(?:\S(?:[ \t]\S)*)+/,
          lookbehind: true
        }
      }),
      variables: createSection("Variables"),
      "test-cases": createSection("Test Cases", {
        "test-name": testNameLike,
        documentation: docTag,
        property: testPropertyLike
      }),
      keywords: createSection("Keywords", {
        "keyword-name": testNameLike,
        documentation: docTag,
        property: testPropertyLike
      }),
      tasks: createSection("Tasks", {
        "task-name": testNameLike,
        documentation: docTag,
        property: testPropertyLike
      }),
      comment
    };
    Prism3.languages.robot = Prism3.languages["robotframework"];
  })(Prism2);
}
var rust_1 = rust;
rust.displayName = "rust";
rust.aliases = [];
function rust(Prism2) {
  (function(Prism3) {
    var multilineComment = /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source;
    for (var i2 = 0; i2 < 2; i2++) {
      multilineComment = multilineComment.replace(/<self>/g, function() {
        return multilineComment;
      });
    }
    multilineComment = multilineComment.replace(/<self>/g, function() {
      return /[^\s\S]/.source;
    });
    Prism3.languages.rust = {
      comment: [
        {
          pattern: RegExp(/(^|[^\\])/.source + multilineComment),
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /(^|[^\\:])\/\/.*/,
          lookbehind: true,
          greedy: true
        }
      ],
      string: {
        pattern: /b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,
        greedy: true
      },
      char: {
        pattern: /b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,
        greedy: true
      },
      attribute: {
        pattern: /#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,
        greedy: true,
        alias: "attr-name",
        inside: {
          string: null
        }
      },
      "closure-params": {
        pattern: /([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,
        lookbehind: true,
        greedy: true,
        inside: {
          "closure-punctuation": {
            pattern: /^\||\|$/,
            alias: "punctuation"
          },
          rest: null
        }
      },
      "lifetime-annotation": {
        pattern: /'\w+/,
        alias: "symbol"
      },
      "fragment-specifier": {
        pattern: /(\$\w+:)[a-z]+/,
        lookbehind: true,
        alias: "punctuation"
      },
      variable: /\$\w+/,
      "function-definition": {
        pattern: /(\bfn\s+)\w+/,
        lookbehind: true,
        alias: "function"
      },
      "type-definition": {
        pattern: /(\b(?:enum|struct|trait|type|union)\s+)\w+/,
        lookbehind: true,
        alias: "class-name"
      },
      "module-declaration": [
        {
          pattern: /(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,
          lookbehind: true,
          alias: "namespace"
        },
        {
          pattern: /(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,
          lookbehind: true,
          alias: "namespace",
          inside: {
            punctuation: /::/
          }
        }
      ],
      keyword: [
        /\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,
        /\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/
      ],
      function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,
      macro: {
        pattern: /\b\w+!/,
        alias: "property"
      },
      constant: /\b[A-Z_][A-Z_\d]+\b/,
      "class-name": /\b[A-Z]\w*\b/,
      namespace: {
        pattern: /(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,
        inside: {
          punctuation: /::/
        }
      },
      number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,
      boolean: /\b(?:false|true)\b/,
      punctuation: /->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,
      operator: /[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/
    };
    Prism3.languages.rust["closure-params"].inside.rest = Prism3.languages.rust;
    Prism3.languages.rust["attribute"].inside["string"] = Prism3.languages.rust["string"];
  })(Prism2);
}
var sas_1 = sas;
sas.displayName = "sas";
sas.aliases = [];
function sas(Prism2) {
  (function(Prism3) {
    var stringPattern = /(?:"(?:""|[^"])*"(?!")|'(?:''|[^'])*'(?!'))/.source;
    var number2 = /\b(?:\d[\da-f]*x|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i;
    var numericConstant = {
      pattern: RegExp(stringPattern + "[bx]"),
      alias: "number"
    };
    var macroVariable = {
      pattern: /&[a-z_]\w*/i
    };
    var macroKeyword = {
      pattern: /((?:^|\s|=|\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\b/i,
      lookbehind: true,
      alias: "keyword"
    };
    var step = {
      pattern: /(^|\s)(?:proc\s+\w+|data(?!=)|quit|run)\b/i,
      alias: "keyword",
      lookbehind: true
    };
    var comment = [
      /\/\*[\s\S]*?\*\//,
      {
        pattern: /(^[ \t]*|;\s*)\*[^;]*;/m,
        lookbehind: true
      }
    ];
    var string2 = {
      pattern: RegExp(stringPattern),
      greedy: true
    };
    var punctuation = /[$%@.(){}\[\];,\\]/;
    var func = {
      pattern: /%?\b\w+(?=\()/,
      alias: "keyword"
    };
    var args = {
      function: func,
      "arg-value": {
        pattern: /(=\s*)[A-Z\.]+/i,
        lookbehind: true
      },
      operator: /=/,
      "macro-variable": macroVariable,
      arg: {
        pattern: /[A-Z]+/i,
        alias: "keyword"
      },
      number: number2,
      "numeric-constant": numericConstant,
      punctuation,
      string: string2
    };
    var format = {
      pattern: /\b(?:format|put)\b=?[\w'$.]+/i,
      inside: {
        keyword: /^(?:format|put)(?==)/i,
        equals: /=/,
        format: {
          pattern: /(?:\w|\$\d)+\.\d?/,
          alias: "number"
        }
      }
    };
    var altformat = {
      pattern: /\b(?:format|put)\s+[\w']+(?:\s+[$.\w]+)+(?=;)/i,
      inside: {
        keyword: /^(?:format|put)/i,
        format: {
          pattern: /[\w$]+\.\d?/,
          alias: "number"
        }
      }
    };
    var globalStatements = {
      pattern: /((?:^|\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\d?)\b/i,
      lookbehind: true,
      alias: "keyword"
    };
    var submitStatement = {
      pattern: /(^|\s)(?:submit(?:\s+(?:load|norun|parseonly))?|endsubmit)\b/i,
      lookbehind: true,
      alias: "keyword"
    };
    var actionSets = /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source;
    var casActions = {
      pattern: RegExp(/(^|\s)(?:action\s+)?(?:<act>)\.[a-z]+\b[^;]+/.source.replace(/<act>/g, function() {
        return actionSets;
      }), "i"),
      lookbehind: true,
      inside: {
        keyword: RegExp(/(?:<act>)\.[a-z]+\b/.source.replace(/<act>/g, function() {
          return actionSets;
        }), "i"),
        action: {
          pattern: /(?:action)/i,
          alias: "keyword"
        },
        comment,
        function: func,
        "arg-value": args["arg-value"],
        operator: args.operator,
        argument: args.arg,
        number: number2,
        "numeric-constant": numericConstant,
        punctuation,
        string: string2
      }
    };
    var keywords = {
      pattern: /((?:^|\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\s+do|then|title\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\b/i,
      lookbehind: true
    };
    Prism3.languages.sas = {
      datalines: {
        pattern: /^([ \t]*)(?:cards|(?:data)?lines);[\s\S]+?^[ \t]*;/im,
        lookbehind: true,
        alias: "string",
        inside: {
          keyword: {
            pattern: /^(?:cards|(?:data)?lines)/i
          },
          punctuation: /;/
        }
      },
      "proc-sql": {
        pattern: /(^proc\s+(?:fed)?sql(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
        lookbehind: true,
        inside: {
          sql: {
            pattern: RegExp(/^[ \t]*(?:select|alter\s+table|(?:create|describe|drop)\s+(?:index|table(?:\s+constraints)?|view)|create\s+unique\s+index|insert\s+into|update)(?:<str>|[^;"'])+;/.source.replace(/<str>/g, function() {
              return stringPattern;
            }), "im"),
            alias: "language-sql",
            inside: Prism3.languages.sql
          },
          "global-statements": globalStatements,
          "sql-statements": {
            pattern: /(^|\s)(?:disconnect\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\b/i,
            lookbehind: true,
            alias: "keyword"
          },
          number: number2,
          "numeric-constant": numericConstant,
          punctuation,
          string: string2
        }
      },
      "proc-groovy": {
        pattern: /(^proc\s+groovy(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
        lookbehind: true,
        inside: {
          comment,
          groovy: {
            pattern: RegExp(/(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function() {
              return stringPattern;
            }), "im"),
            lookbehind: true,
            alias: "language-groovy",
            inside: Prism3.languages.groovy
          },
          keyword: keywords,
          "submit-statement": submitStatement,
          "global-statements": globalStatements,
          number: number2,
          "numeric-constant": numericConstant,
          punctuation,
          string: string2
        }
      },
      "proc-lua": {
        pattern: /(^proc\s+lua(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|data|quit|run);|(?![\s\S]))/im,
        lookbehind: true,
        inside: {
          comment,
          lua: {
            pattern: RegExp(/(^[ \t]*submit(?:\s+(?:load|norun|parseonly))?)(?:<str>|[^"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function() {
              return stringPattern;
            }), "im"),
            lookbehind: true,
            alias: "language-lua",
            inside: Prism3.languages.lua
          },
          keyword: keywords,
          "submit-statement": submitStatement,
          "global-statements": globalStatements,
          number: number2,
          "numeric-constant": numericConstant,
          punctuation,
          string: string2
        }
      },
      "proc-cas": {
        pattern: /(^proc\s+cas(?:\s+[\w|=]+)?;)[\s\S]+?(?=^(?:proc\s+\w+|quit|data);|(?![\s\S]))/im,
        lookbehind: true,
        inside: {
          comment,
          "statement-var": {
            pattern: /((?:^|\s)=?)saveresult\s[^;]+/im,
            lookbehind: true,
            inside: {
              statement: {
                pattern: /^saveresult\s+\S+/i,
                inside: {
                  keyword: /^(?:saveresult)/i
                }
              },
              rest: args
            }
          },
          "cas-actions": casActions,
          statement: {
            pattern: /((?:^|\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,
            lookbehind: true,
            inside: args
          },
          step,
          keyword: keywords,
          function: func,
          format,
          altformat,
          "global-statements": globalStatements,
          number: number2,
          "numeric-constant": numericConstant,
          punctuation,
          string: string2
        }
      },
      "proc-args": {
        pattern: RegExp(/(^proc\s+\w+\s+)(?!\s)(?:[^;"']|<str>)+;/.source.replace(/<str>/g, function() {
          return stringPattern;
        }), "im"),
        lookbehind: true,
        inside: args
      },
      "macro-keyword": macroKeyword,
      "macro-variable": macroVariable,
      "macro-string-functions": {
        pattern: /((?:^|\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\(.*?(?:[^%]\))/i,
        lookbehind: true,
        inside: {
          function: {
            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,
            alias: "keyword"
          },
          "macro-keyword": macroKeyword,
          "macro-variable": macroVariable,
          "escaped-char": {
            pattern: /%['"()<>=¬^~;,#]/
          },
          punctuation
        }
      },
      "macro-declaration": {
        pattern: /^%macro[^;]+(?=;)/im,
        inside: {
          keyword: /%macro/i
        }
      },
      "macro-end": {
        pattern: /^%mend[^;]+(?=;)/im,
        inside: {
          keyword: /%mend/i
        }
      },
      macro: {
        pattern: /%_\w+(?=\()/,
        alias: "keyword"
      },
      input: {
        pattern: /\binput\s[-\w\s/*.$&]+;/i,
        inside: {
          input: {
            alias: "keyword",
            pattern: /^input/i
          },
          comment,
          number: number2,
          "numeric-constant": numericConstant
        }
      },
      "options-args": {
        pattern: /(^options)[-'"|/\\<>*+=:()\w\s]*(?=;)/im,
        lookbehind: true,
        inside: args
      },
      "cas-actions": casActions,
      comment,
      function: func,
      format,
      altformat,
      "numeric-constant": numericConstant,
      datetime: {
        pattern: RegExp(stringPattern + "(?:dt?|t)"),
        alias: "number"
      },
      string: string2,
      step,
      keyword: keywords,
      "operator-keyword": {
        pattern: /\b(?:eq|ge|gt|in|le|lt|ne|not)\b/i,
        alias: "operator"
      },
      number: number2,
      operator: /\*\*?|\|\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\/=&]|[~¬^]=?/,
      punctuation
    };
  })(Prism2);
}
var sass_1 = sass;
sass.displayName = "sass";
sass.aliases = [];
function sass(Prism2) {
  (function(Prism3) {
    Prism3.languages.sass = Prism3.languages.extend("css", {
      comment: {
        pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,
        lookbehind: true,
        greedy: true
      }
    });
    Prism3.languages.insertBefore("sass", "atrule", {
      "atrule-line": {
        pattern: /^(?:[ \t]*)[@+=].+/m,
        greedy: true,
        inside: {
          atrule: /(?:@[\w-]+|[+=])/
        }
      }
    });
    delete Prism3.languages.sass.atrule;
    var variable = /\$[-\w]+|#\{\$[-\w]+\}/;
    var operator = [
      /[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,
      {
        pattern: /(\s)-(?=\s)/,
        lookbehind: true
      }
    ];
    Prism3.languages.insertBefore("sass", "property", {
      "variable-line": {
        pattern: /^[ \t]*\$.+/m,
        greedy: true,
        inside: {
          punctuation: /:/,
          variable,
          operator
        }
      },
      "property-line": {
        pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
        greedy: true,
        inside: {
          property: [
            /[^:\s]+(?=\s*:)/,
            {
              pattern: /(:)[^:\s]+/,
              lookbehind: true
            }
          ],
          punctuation: /:/,
          variable,
          operator,
          important: Prism3.languages.sass.important
        }
      }
    });
    delete Prism3.languages.sass.property;
    delete Prism3.languages.sass.important;
    Prism3.languages.insertBefore("sass", "punctuation", {
      selector: {
        pattern: /^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,
        lookbehind: true,
        greedy: true
      }
    });
  })(Prism2);
}
var refractorJava = java_1;
var scala_1 = scala;
scala.displayName = "scala";
scala.aliases = [];
function scala(Prism2) {
  Prism2.register(refractorJava);
  Prism2.languages.scala = Prism2.languages.extend("java", {
    "triple-quoted-string": {
      pattern: /"""[\s\S]*?"""/,
      greedy: true,
      alias: "string"
    },
    string: {
      pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    keyword: /<-|=>|\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\b/,
    number: /\b0x(?:[\da-f]*\.)?[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e\d+)?[dfl]?/i,
    builtin: /\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\b/,
    symbol: /'[^\d\s\\]\w*/
  });
  Prism2.languages.insertBefore("scala", "triple-quoted-string", {
    "string-interpolation": {
      pattern: /\b[a-z]\w*(?:"""(?:[^$]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*?"""|"(?:[^$"\r\n]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*")/i,
      greedy: true,
      inside: {
        id: {
          pattern: /^\w+/,
          greedy: true,
          alias: "function"
        },
        escape: {
          pattern: /\\\$"|\$[$"]/,
          greedy: true,
          alias: "symbol"
        },
        interpolation: {
          pattern: /\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
          greedy: true,
          inside: {
            punctuation: /^\$\{?|\}$/,
            expression: {
              pattern: /[\s\S]+/,
              inside: Prism2.languages.scala
            }
          }
        },
        string: /[\s\S]+/
      }
    }
  });
  delete Prism2.languages.scala["class-name"];
  delete Prism2.languages.scala["function"];
}
var scss_1 = scss;
scss.displayName = "scss";
scss.aliases = [];
function scss(Prism2) {
  Prism2.languages.scss = Prism2.languages.extend("css", {
    comment: {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
      lookbehind: true
    },
    atrule: {
      pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,
      inside: {
        rule: /@[\w-]+/
      }
    },
    url: /(?:[-a-z]+-)?url(?=\()/i,
    selector: {
      pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,
      inside: {
        parent: {
          pattern: /&/,
          alias: "important"
        },
        placeholder: /%[-\w]+/,
        variable: /\$[-\w]+|#\{\$[-\w]+\}/
      }
    },
    property: {
      pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,
      inside: {
        variable: /\$[-\w]+|#\{\$[-\w]+\}/
      }
    }
  });
  Prism2.languages.insertBefore("scss", "atrule", {
    keyword: [
      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,
      {
        pattern: /( )(?:from|through)(?= )/,
        lookbehind: true
      }
    ]
  });
  Prism2.languages.insertBefore("scss", "important", {
    variable: /\$[-\w]+|#\{\$[-\w]+\}/
  });
  Prism2.languages.insertBefore("scss", "function", {
    "module-modifier": {
      pattern: /\b(?:as|hide|show|with)\b/i,
      alias: "keyword"
    },
    placeholder: {
      pattern: /%[-\w]+/,
      alias: "selector"
    },
    statement: {
      pattern: /\B!(?:default|optional)\b/i,
      alias: "keyword"
    },
    boolean: /\b(?:false|true)\b/,
    null: {
      pattern: /\bnull\b/,
      alias: "keyword"
    },
    operator: {
      pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,
      lookbehind: true
    }
  });
  Prism2.languages.scss["atrule"].inside.rest = Prism2.languages.scss;
}
var refractorBash = bash_1;
var shellSession_1 = shellSession;
shellSession.displayName = "shellSession";
shellSession.aliases = [];
function shellSession(Prism2) {
  Prism2.register(refractorBash);
  (function(Prism3) {
    var strings = [
      /"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/.source,
      /'[^']*'/.source,
      /\$'(?:[^'\\]|\\[\s\S])*'/.source,
      /<<-?\s*(["']?)(\w+)\1\s[\s\S]*?[\r\n]\2/.source
    ].join("|");
    Prism3.languages["shell-session"] = {
      command: {
        pattern: RegExp(/^/.source + "(?:" + (/[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+(?::[^\0-\x1F$#%*?"<>:;|]+)?/.source + "|" + /[/~.][^\0-\x1F$#%*?"<>@:;|]*/.source) + ")?" + /[$#%](?=\s)/.source + /(?:[^\\\r\n \t'"<$]|[ \t](?:(?!#)|#.*$)|\\(?:[^\r]|\r\n?)|\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function() {
          return strings;
        }), "m"),
        greedy: true,
        inside: {
          info: {
            pattern: /^[^#$%]+/,
            alias: "punctuation",
            inside: {
              user: /^[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+/,
              punctuation: /:/,
              path: /[\s\S]+/
            }
          },
          bash: {
            pattern: /(^[$#%]\s*)\S[\s\S]*/,
            lookbehind: true,
            alias: "language-bash",
            inside: Prism3.languages.bash
          },
          "shell-symbol": {
            pattern: /^[$#%]/,
            alias: "important"
          }
        }
      },
      output: /.(?:.*(?:[\r\n]|.$))*/
    };
    Prism3.languages["sh-session"] = Prism3.languages["shellsession"] = Prism3.languages["shell-session"];
  })(Prism2);
}
var smali_1 = smali;
smali.displayName = "smali";
smali.aliases = [];
function smali(Prism2) {
  Prism2.languages.smali = {
    comment: /#.*/,
    string: {
      pattern: /"(?:[^\r\n\\"]|\\.)*"|'(?:[^\r\n\\']|\\(?:.|u[\da-fA-F]{4}))'/,
      greedy: true
    },
    "class-name": {
      pattern: /(^|[^L])L(?:(?:\w+|`[^`\r\n]*`)\/)*(?:[\w$]+|`[^`\r\n]*`)(?=\s*;)/,
      lookbehind: true,
      inside: {
        "class-name": {
          pattern: /(^L|\/)(?:[\w$]+|`[^`\r\n]*`)$/,
          lookbehind: true
        },
        namespace: {
          pattern: /^(L)(?:(?:\w+|`[^`\r\n]*`)\/)+/,
          lookbehind: true,
          inside: {
            punctuation: /\//
          }
        },
        builtin: /^L/
      }
    },
    builtin: [
      {
        pattern: /([();\[])[BCDFIJSVZ]+/,
        lookbehind: true
      },
      {
        pattern: /([\w$>]:)[BCDFIJSVZ]/,
        lookbehind: true
      }
    ],
    keyword: [
      {
        pattern: /(\.end\s+)[\w-]+/,
        lookbehind: true
      },
      {
        pattern: /(^|[^\w.-])\.(?!\d)[\w-]+/,
        lookbehind: true
      },
      {
        pattern: /(^|[^\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\w.-])/,
        lookbehind: true
      }
    ],
    function: {
      pattern: /(^|[^\w.-])(?:\w+|<[\w$-]+>)(?=\()/,
      lookbehind: true
    },
    field: {
      pattern: /[\w$]+(?=:)/,
      alias: "variable"
    },
    register: {
      pattern: /(^|[^\w.-])[vp]\d(?![\w.-])/,
      lookbehind: true,
      alias: "variable"
    },
    boolean: {
      pattern: /(^|[^\w.-])(?:false|true)(?![\w.-])/,
      lookbehind: true
    },
    number: {
      pattern: /(^|[^/\w.-])-?(?:NAN|INFINITY|0x(?:[\dA-F]+(?:\.[\dA-F]*)?|\.[\dA-F]+)(?:p[+-]?[\dA-F]+)?|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?)[dflst]?(?![\w.-])/i,
      lookbehind: true
    },
    label: {
      pattern: /(:)\w+/,
      lookbehind: true,
      alias: "property"
    },
    operator: /->|\.\.|[\[=]/,
    punctuation: /[{}(),;:]/
  };
}
var smalltalk_1 = smalltalk;
smalltalk.displayName = "smalltalk";
smalltalk.aliases = [];
function smalltalk(Prism2) {
  Prism2.languages.smalltalk = {
    comment: {
      pattern: /"(?:""|[^"])*"/,
      greedy: true
    },
    char: {
      pattern: /\$./,
      greedy: true
    },
    string: {
      pattern: /'(?:''|[^'])*'/,
      greedy: true
    },
    symbol: /#[\da-z]+|#(?:-|([+\/\\*~<>=@%|&?!])\1?)|#(?=\()/i,
    "block-arguments": {
      pattern: /(\[\s*):[^\[|]*\|/,
      lookbehind: true,
      inside: {
        variable: /:[\da-z]+/i,
        punctuation: /\|/
      }
    },
    "temporary-variables": {
      pattern: /\|[^|]+\|/,
      inside: {
        variable: /[\da-z]+/i,
        punctuation: /\|/
      }
    },
    keyword: /\b(?:new|nil|self|super)\b/,
    boolean: /\b(?:false|true)\b/,
    number: [
      /\d+r-?[\dA-Z]+(?:\.[\dA-Z]+)?(?:e-?\d+)?/,
      /\b\d+(?:\.\d+)?(?:e-?\d+)?/
    ],
    operator: /[<=]=?|:=|~[~=]|\/\/?|\\\\|>[>=]?|[!^+\-*&|,@]/,
    punctuation: /[.;:?\[\](){}]/
  };
}
var refractorMarkupTemplating$3 = markupTemplating_1;
var smarty_1 = smarty;
smarty.displayName = "smarty";
smarty.aliases = [];
function smarty(Prism2) {
  Prism2.register(refractorMarkupTemplating$3);
  (function(Prism3) {
    Prism3.languages.smarty = {
      comment: {
        pattern: /^\{\*[\s\S]*?\*\}/,
        greedy: true
      },
      "embedded-php": {
        pattern: /^\{php\}[\s\S]*?\{\/php\}/,
        greedy: true,
        inside: {
          smarty: {
            pattern: /^\{php\}|\{\/php\}$/,
            inside: null
          },
          php: {
            pattern: /[\s\S]+/,
            alias: "language-php",
            inside: Prism3.languages.php
          }
        }
      },
      string: [
        {
          pattern: /"(?:\\.|[^"\\\r\n])*"/,
          greedy: true,
          inside: {
            interpolation: {
              pattern: /\{[^{}]*\}|`[^`]*`/,
              inside: {
                "interpolation-punctuation": {
                  pattern: /^[{`]|[`}]$/,
                  alias: "punctuation"
                },
                expression: {
                  pattern: /[\s\S]+/,
                  inside: null
                }
              }
            },
            variable: /\$\w+/
          }
        },
        {
          pattern: /'(?:\\.|[^'\\\r\n])*'/,
          greedy: true
        }
      ],
      keyword: {
        pattern: /(^\{\/?)[a-z_]\w*\b(?!\()/i,
        lookbehind: true,
        greedy: true
      },
      delimiter: {
        pattern: /^\{\/?|\}$/,
        greedy: true,
        alias: "punctuation"
      },
      number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
      variable: [
        /\$(?!\d)\w+/,
        /#(?!\d)\w+#/,
        {
          pattern: /(\.|->|\w\s*=)(?!\d)\w+\b(?!\()/,
          lookbehind: true
        },
        {
          pattern: /(\[)(?!\d)\w+(?=\])/,
          lookbehind: true
        }
      ],
      function: {
        pattern: /(\|\s*)@?[a-z_]\w*|\b[a-z_]\w*(?=\()/i,
        lookbehind: true
      },
      "attr-name": /\b[a-z_]\w*(?=\s*=)/i,
      boolean: /\b(?:false|no|off|on|true|yes)\b/,
      punctuation: /[\[\](){}.,:`]|->/,
      operator: [
        /[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/,
        /\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/,
        /\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\b/
      ]
    };
    Prism3.languages.smarty["embedded-php"].inside.smarty.inside = Prism3.languages.smarty;
    Prism3.languages.smarty.string[0].inside.interpolation.inside.expression.inside = Prism3.languages.smarty;
    var string2 = /"(?:\\.|[^"\\\r\n])*"|'(?:\\.|[^'\\\r\n])*'/;
    var smartyPattern = RegExp(/\{\*[\s\S]*?\*\}/.source + "|" + /\{php\}[\s\S]*?\{\/php\}/.source + "|" + /\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>|\{(?:[^{}"']|<str>)*\})*\})*\}/.source.replace(/<str>/g, function() {
      return string2.source;
    }), "g");
    Prism3.hooks.add("before-tokenize", function(env) {
      var smartyLiteralStart = "{literal}";
      var smartyLiteralEnd = "{/literal}";
      var smartyLiteralMode = false;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "smarty", smartyPattern, function(match2) {
        if (match2 === smartyLiteralEnd) {
          smartyLiteralMode = false;
        }
        if (!smartyLiteralMode) {
          if (match2 === smartyLiteralStart) {
            smartyLiteralMode = true;
          }
          return true;
        }
        return false;
      });
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "smarty");
    });
  })(Prism2);
}
var sml_1 = sml;
sml.displayName = "sml";
sml.aliases = ["smlnj"];
function sml(Prism2) {
  (function(Prism3) {
    var keywords = /\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\b/i;
    Prism3.languages.sml = {
      comment: /\(\*(?:[^*(]|\*(?!\))|\((?!\*)|\(\*(?:[^*(]|\*(?!\))|\((?!\*))*\*\))*\*\)/,
      string: {
        pattern: /#?"(?:[^"\\]|\\.)*"/,
        greedy: true
      },
      "class-name": [
        {
          pattern: RegExp(/((?:^|[^:]):\s*)<TERMINAL>(?:\s*(?:(?:\*|->)\s*<TERMINAL>|,\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g, function() {
            return /\s*(?:[*,]|->)/.source;
          }).replace(/<TERMINAL>/g, function() {
            return /(?:'[\w']*|<LONG-ID>|\((?:[^()]|\([^()]*\))*\)|\{(?:[^{}]|\{[^{}]*\})*\})(?:\s+<LONG-ID>)*/.source;
          }).replace(/<LONG-ID>/g, function() {
            return /(?!<KEYWORD>)[a-z\d_][\w'.]*/.source;
          }).replace(/<KEYWORD>/g, function() {
            return keywords.source;
          }), "i"),
          lookbehind: true,
          greedy: true,
          inside: null
        },
        {
          pattern: /((?:^|[^\w'])(?:datatype|exception|functor|signature|structure|type)\s+)[a-z_][\w'.]*/i,
          lookbehind: true
        }
      ],
      function: {
        pattern: /((?:^|[^\w'])fun\s+)[a-z_][\w'.]*/i,
        lookbehind: true
      },
      keyword: keywords,
      variable: {
        pattern: /(^|[^\w'])'[\w']*/,
        lookbehind: true
      },
      number: /~?\b(?:\d+(?:\.\d+)?(?:e~?\d+)?|0x[\da-f]+)\b/i,
      word: {
        pattern: /\b0w(?:\d+|x[\da-f]+)\b/i,
        alias: "constant"
      },
      boolean: /\b(?:false|true)\b/i,
      operator: /\.\.\.|:[>=:]|=>?|->|[<>]=?|[!+\-*/^#|@~]/,
      punctuation: /[(){}\[\].:,;]/
    };
    Prism3.languages.sml["class-name"][0].inside = Prism3.languages.sml;
    Prism3.languages.smlnj = Prism3.languages.sml;
  })(Prism2);
}
var solidity_1 = solidity;
solidity.displayName = "solidity";
solidity.aliases = ["sol"];
function solidity(Prism2) {
  Prism2.languages.solidity = Prism2.languages.extend("clike", {
    "class-name": {
      pattern: /(\b(?:contract|enum|interface|library|new|struct|using)\s+)(?!\d)[\w$]+/,
      lookbehind: true
    },
    keyword: /\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\b/,
    operator: /=>|->|:=|=:|\*\*|\+\+|--|\|\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/
  });
  Prism2.languages.insertBefore("solidity", "keyword", {
    builtin: /\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\d|3[0-2])?)\b/
  });
  Prism2.languages.insertBefore("solidity", "number", {
    version: {
      pattern: /([<>]=?|\^)\d+\.\d+\.\d+\b/,
      lookbehind: true,
      alias: "number"
    }
  });
  Prism2.languages.sol = Prism2.languages.solidity;
}
var solutionFile_1 = solutionFile;
solutionFile.displayName = "solutionFile";
solutionFile.aliases = [];
function solutionFile(Prism2) {
  (function(Prism3) {
    var guid = {
      pattern: /\{[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}\}/i,
      alias: "constant",
      inside: {
        punctuation: /[{}]/
      }
    };
    Prism3.languages["solution-file"] = {
      comment: {
        pattern: /#.*/,
        greedy: true
      },
      string: {
        pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
        greedy: true,
        inside: {
          guid
        }
      },
      object: {
        pattern: /^([ \t]*)(?:([A-Z]\w*)\b(?=.*(?:\r\n?|\n)(?:\1[ \t].*(?:\r\n?|\n))*\1End\2(?=[ \t]*$))|End[A-Z]\w*(?=[ \t]*$))/m,
        lookbehind: true,
        greedy: true,
        alias: "keyword"
      },
      property: {
        pattern: /^([ \t]*)(?!\s)[^\r\n"#=()]*[^\s"#=()](?=\s*=)/m,
        lookbehind: true,
        inside: {
          guid
        }
      },
      guid,
      number: /\b\d+(?:\.\d+)*\b/,
      boolean: /\b(?:FALSE|TRUE)\b/,
      operator: /=/,
      punctuation: /[(),]/
    };
    Prism3.languages["sln"] = Prism3.languages["solution-file"];
  })(Prism2);
}
var refractorMarkupTemplating$2 = markupTemplating_1;
var soy_1 = soy;
soy.displayName = "soy";
soy.aliases = [];
function soy(Prism2) {
  Prism2.register(refractorMarkupTemplating$2);
  (function(Prism3) {
    var stringPattern = /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;
    var numberPattern = /\b\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\b|\b0x[\dA-F]+\b/;
    Prism3.languages.soy = {
      comment: [
        /\/\*[\s\S]*?\*\//,
        {
          pattern: /(\s)\/\/.*/,
          lookbehind: true,
          greedy: true
        }
      ],
      "command-arg": {
        pattern: /(\{+\/?\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\s+)\.?[\w.]+/,
        lookbehind: true,
        alias: "string",
        inside: {
          punctuation: /\./
        }
      },
      parameter: {
        pattern: /(\{+\/?\s*@?param\??\s+)\.?[\w.]+/,
        lookbehind: true,
        alias: "variable"
      },
      keyword: [
        {
          pattern: /(\{+\/?[^\S\r\n]*)(?:\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\??|rb|sp|switch|template|xid)/,
          lookbehind: true
        },
        /\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\b/
      ],
      delimiter: {
        pattern: /^\{+\/?|\/?\}+$/,
        alias: "punctuation"
      },
      property: /\w+(?==)/,
      variable: {
        pattern: /\$[^\W\d]\w*(?:\??(?:\.\w+|\[[^\]]+\]))*/,
        inside: {
          string: {
            pattern: stringPattern,
            greedy: true
          },
          number: numberPattern,
          punctuation: /[\[\].?]/
        }
      },
      string: {
        pattern: stringPattern,
        greedy: true
      },
      function: [
        /\w+(?=\()/,
        {
          pattern: /(\|[^\S\r\n]*)\w+/,
          lookbehind: true
        }
      ],
      boolean: /\b(?:false|true)\b/,
      number: numberPattern,
      operator: /\?:?|<=?|>=?|==?|!=|[+*/%-]|\b(?:and|not|or)\b/,
      punctuation: /[{}()\[\]|.,:]/
    };
    Prism3.hooks.add("before-tokenize", function(env) {
      var soyPattern = /\{\{.+?\}\}|\{.+?\}|\s\/\/.*|\/\*[\s\S]*?\*\//g;
      var soyLitteralStart = "{literal}";
      var soyLitteralEnd = "{/literal}";
      var soyLitteralMode = false;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "soy", soyPattern, function(match2) {
        if (match2 === soyLitteralEnd) {
          soyLitteralMode = false;
        }
        if (!soyLitteralMode) {
          if (match2 === soyLitteralStart) {
            soyLitteralMode = true;
          }
          return true;
        }
        return false;
      });
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "soy");
    });
  })(Prism2);
}
var turtle_1 = turtle;
turtle.displayName = "turtle";
turtle.aliases = [];
function turtle(Prism2) {
  Prism2.languages.turtle = {
    comment: {
      pattern: /#.*/,
      greedy: true
    },
    "multiline-string": {
      pattern: /"""(?:(?:""?)?(?:[^"\\]|\\.))*"""|'''(?:(?:''?)?(?:[^'\\]|\\.))*'''/,
      greedy: true,
      alias: "string",
      inside: {
        comment: /#.*/
      }
    },
    string: {
      pattern: /"(?:[^\\"\r\n]|\\.)*"|'(?:[^\\'\r\n]|\\.)*'/,
      greedy: true
    },
    url: {
      pattern: /<(?:[^\x00-\x20<>"{}|^`\\]|\\(?:u[\da-fA-F]{4}|U[\da-fA-F]{8}))*>/,
      greedy: true,
      inside: {
        punctuation: /[<>]/
      }
    },
    function: {
      pattern: /(?:(?![-.\d\xB7])[-.\w\xB7\xC0-\uFFFD]+)?:(?:(?![-.])(?:[-.:\w\xC0-\uFFFD]|%[\da-f]{2}|\\.)+)?/i,
      inside: {
        "local-name": {
          pattern: /([^:]*:)[\s\S]+/,
          lookbehind: true
        },
        prefix: {
          pattern: /[\s\S]+/,
          inside: {
            punctuation: /:/
          }
        }
      }
    },
    number: /[+-]?\b\d+(?:\.\d*)?(?:e[+-]?\d+)?/i,
    punctuation: /[{}.,;()[\]]|\^\^/,
    boolean: /\b(?:false|true)\b/,
    keyword: [/(?:\ba|@prefix|@base)\b|=/, /\b(?:base|graph|prefix)\b/i],
    tag: {
      pattern: /@[a-z]+(?:-[a-z\d]+)*/i,
      inside: {
        punctuation: /@/
      }
    }
  };
  Prism2.languages.trig = Prism2.languages["turtle"];
}
var refractorTurtle = turtle_1;
var sparql_1 = sparql;
sparql.displayName = "sparql";
sparql.aliases = ["rq"];
function sparql(Prism2) {
  Prism2.register(refractorTurtle);
  Prism2.languages.sparql = Prism2.languages.extend("turtle", {
    boolean: /\b(?:false|true)\b/i,
    variable: {
      pattern: /[?$]\w+/,
      greedy: true
    }
  });
  Prism2.languages.insertBefore("sparql", "punctuation", {
    keyword: [
      /\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\b/i,
      /\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\b(?=\s*\()/i,
      /\b(?:BASE|GRAPH|PREFIX)\b/i
    ]
  });
  Prism2.languages.rq = Prism2.languages.sparql;
}
var splunkSpl_1 = splunkSpl;
splunkSpl.displayName = "splunkSpl";
splunkSpl.aliases = [];
function splunkSpl(Prism2) {
  Prism2.languages["splunk-spl"] = {
    comment: /`comment\("(?:\\.|[^\\"])*"\)`/,
    string: {
      pattern: /"(?:\\.|[^\\"])*"/,
      greedy: true
    },
    keyword: /\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\b/i,
    "operator-word": {
      pattern: /\b(?:and|as|by|not|or|xor)\b/i,
      alias: "operator"
    },
    function: /\b\w+(?=\s*\()/,
    property: /\b\w+(?=\s*=(?!=))/,
    date: {
      pattern: /\b\d{1,2}\/\d{1,2}\/\d{1,4}(?:(?::\d{1,2}){3})?\b/,
      alias: "number"
    },
    number: /\b\d+(?:\.\d+)?\b/,
    boolean: /\b(?:f|false|t|true)\b/i,
    operator: /[<>=]=?|[-+*/%|]/,
    punctuation: /[()[\],]/
  };
}
var sqf_1 = sqf;
sqf.displayName = "sqf";
sqf.aliases = [];
function sqf(Prism2) {
  Prism2.languages.sqf = Prism2.languages.extend("clike", {
    string: {
      pattern: /"(?:(?:"")?[^"])*"(?!")|'(?:[^'])*'/,
      greedy: true
    },
    keyword: /\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\b/i,
    boolean: /\b(?:false|true)\b/i,
    function: /\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\b/i,
    number: /(?:\$|\b0x)[\da-f]+\b|(?:\B\.\d+|\b\d+(?:\.\d+)?)(?:e[+-]?\d+)?\b/i,
    operator: /##|>>|&&|\|\||[!=<>]=?|[-+*/%#^]|\b(?:and|mod|not|or)\b/i,
    "magic-variable": {
      pattern: /\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\b/i,
      alias: "keyword"
    },
    constant: /\bDIK(?:_[a-z\d]+)+\b/i
  });
  Prism2.languages.insertBefore("sqf", "string", {
    macro: {
      pattern: /(^[ \t]*)#[a-z](?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,
      lookbehind: true,
      greedy: true,
      alias: "property",
      inside: {
        directive: {
          pattern: /#[a-z]+\b/i,
          alias: "keyword"
        },
        comment: Prism2.languages.sqf.comment
      }
    }
  });
  delete Prism2.languages.sqf["class-name"];
}
var squirrel_1 = squirrel;
squirrel.displayName = "squirrel";
squirrel.aliases = [];
function squirrel(Prism2) {
  Prism2.languages.squirrel = Prism2.languages.extend("clike", {
    comment: [
      Prism2.languages.clike["comment"][0],
      {
        pattern: /(^|[^\\:])(?:\/\/|#).*/,
        lookbehind: true,
        greedy: true
      }
    ],
    string: {
      pattern: /(^|[^\\"'@])(?:@"(?:[^"]|"")*"(?!")|"(?:[^\\\r\n"]|\\.)*")/,
      lookbehind: true,
      greedy: true
    },
    "class-name": {
      pattern: /(\b(?:class|enum|extends|instanceof)\s+)\w+(?:\.\w+)*/,
      lookbehind: true,
      inside: {
        punctuation: /\./
      }
    },
    keyword: /\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\b/,
    number: /\b(?:0x[0-9a-fA-F]+|\d+(?:\.(?:\d+|[eE][+-]?\d+))?)\b/,
    operator: /\+\+|--|<=>|<[-<]|>>>?|&&?|\|\|?|[-+*/%!=<>]=?|[~^]|::?/,
    punctuation: /[(){}\[\],;.]/
  });
  Prism2.languages.insertBefore("squirrel", "string", {
    char: {
      pattern: /(^|[^\\"'])'(?:[^\\']|\\(?:[xuU][0-9a-fA-F]{0,8}|[\s\S]))'/,
      lookbehind: true,
      greedy: true
    }
  });
  Prism2.languages.insertBefore("squirrel", "operator", {
    "attribute-punctuation": {
      pattern: /<\/|\/>/,
      alias: "important"
    },
    lambda: {
      pattern: /@(?=\()/,
      alias: "operator"
    }
  });
}
var stan_1 = stan;
stan.displayName = "stan";
stan.aliases = [];
function stan(Prism2) {
  (function(Prism3) {
    var higherOrderFunctions = /\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\b/;
    Prism3.languages.stan = {
      comment: /\/\/.*|\/\*[\s\S]*?\*\/|#(?!include).*/,
      string: {
        pattern: /"[\x20\x21\x23-\x5B\x5D-\x7E]*"/,
        greedy: true
      },
      directive: {
        pattern: /^([ \t]*)#include\b.*/m,
        lookbehind: true,
        alias: "property"
      },
      "function-arg": {
        pattern: RegExp("(" + higherOrderFunctions.source + /\s*\(\s*/.source + ")" + /[a-zA-Z]\w*/.source),
        lookbehind: true,
        alias: "function"
      },
      constraint: {
        pattern: /(\b(?:int|matrix|real|row_vector|vector)\s*)<[^<>]*>/,
        lookbehind: true,
        inside: {
          expression: {
            pattern: /(=\s*)\S(?:\S|\s+(?!\s))*?(?=\s*(?:>$|,\s*\w+\s*=))/,
            lookbehind: true,
            inside: null
          },
          property: /\b[a-z]\w*(?=\s*=)/i,
          operator: /=/,
          punctuation: /^<|>$|,/
        }
      },
      keyword: [
        {
          pattern: /\bdata(?=\s*\{)|\b(?:functions|generated|model|parameters|quantities|transformed)\b/,
          alias: "program-block"
        },
        /\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\b/,
        higherOrderFunctions
      ],
      function: /\b[a-z]\w*(?=\s*\()/i,
      number: /(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:E[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
      boolean: /\b(?:false|true)\b/,
      operator: /<-|\.[*/]=?|\|\|?|&&|[!=<>+\-*/]=?|['^%~?:]/,
      punctuation: /[()\[\]{},;]/
    };
    Prism3.languages.stan.constraint.inside.expression.inside = Prism3.languages.stan;
  })(Prism2);
}
var stylus_1 = stylus;
stylus.displayName = "stylus";
stylus.aliases = [];
function stylus(Prism2) {
  (function(Prism3) {
    var unit = {
      pattern: /(\b\d+)(?:%|[a-z]+)/,
      lookbehind: true
    };
    var number2 = {
      pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
      lookbehind: true
    };
    var inside = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
        lookbehind: true
      },
      url: {
        pattern: /\burl\((["']?).*?\1\)/i,
        greedy: true
      },
      string: {
        pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
        greedy: true
      },
      interpolation: null,
      func: null,
      important: /\B!(?:important|optional)\b/i,
      keyword: {
        pattern: /(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,
        lookbehind: true
      },
      hexcode: /#[\da-f]{3,6}/i,
      color: [
        /\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,
        {
          pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
          inside: {
            unit,
            number: number2,
            function: /[\w-]+(?=\()/,
            punctuation: /[(),]/
          }
        }
      ],
      entity: /\\[\da-f]{1,8}/i,
      unit,
      boolean: /\b(?:false|true)\b/,
      operator: [
        /~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/
      ],
      number: number2,
      punctuation: /[{}()\[\];:,]/
    };
    inside["interpolation"] = {
      pattern: /\{[^\r\n}:]+\}/,
      alias: "variable",
      inside: {
        delimiter: {
          pattern: /^\{|\}$/,
          alias: "punctuation"
        },
        rest: inside
      }
    };
    inside["func"] = {
      pattern: /[\w-]+\([^)]*\).*/,
      inside: {
        function: /^[^(]+/,
        rest: inside
      }
    };
    Prism3.languages.stylus = {
      "atrule-declaration": {
        pattern: /(^[ \t]*)@.+/m,
        lookbehind: true,
        inside: {
          atrule: /^@[\w-]+/,
          rest: inside
        }
      },
      "variable-declaration": {
        pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,
        lookbehind: true,
        inside: {
          variable: /^\S+/,
          rest: inside
        }
      },
      statement: {
        pattern: /(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,
        lookbehind: true,
        inside: {
          keyword: /^\S+/,
          rest: inside
        }
      },
      "property-declaration": {
        pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,
        lookbehind: true,
        inside: {
          property: {
            pattern: /^[^\s:]+/,
            inside: {
              interpolation: inside.interpolation
            }
          },
          rest: inside
        }
      },
      selector: {
        pattern: /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,
        lookbehind: true,
        inside: {
          interpolation: inside.interpolation,
          comment: inside.comment,
          punctuation: /[{},]/
        }
      },
      func: inside.func,
      string: inside.string,
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
        lookbehind: true,
        greedy: true
      },
      interpolation: inside.interpolation,
      punctuation: /[{}()\[\];:.]/
    };
  })(Prism2);
}
var swift_1 = swift;
swift.displayName = "swift";
swift.aliases = [];
function swift(Prism2) {
  Prism2.languages.swift = {
    comment: {
      pattern: /(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,
      lookbehind: true,
      greedy: true
    },
    "string-literal": [
      {
        pattern: RegExp(/(^|[^"#])/.source + "(?:" + /"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source + "|" + /"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source + ")" + /(?!["#])/.source),
        lookbehind: true,
        greedy: true,
        inside: {
          interpolation: {
            pattern: /(\\\()(?:[^()]|\([^()]*\))*(?=\))/,
            lookbehind: true,
            inside: null
          },
          "interpolation-punctuation": {
            pattern: /^\)|\\\($/,
            alias: "punctuation"
          },
          punctuation: /\\(?=[\r\n])/,
          string: /[\s\S]+/
        }
      },
      {
        pattern: RegExp(/(^|[^"#])(#+)/.source + "(?:" + /"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source + "|" + /"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source + ")\\2"),
        lookbehind: true,
        greedy: true,
        inside: {
          interpolation: {
            pattern: /(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,
            lookbehind: true,
            inside: null
          },
          "interpolation-punctuation": {
            pattern: /^\)|\\#+\($/,
            alias: "punctuation"
          },
          string: /[\s\S]+/
        }
      }
    ],
    directive: {
      pattern: RegExp(/#/.source + "(?:" + (/(?:elseif|if)\b/.source + "(?:[ 	]*" + /(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source + ")+") + "|" + /(?:else|endif)\b/.source + ")"),
      alias: "property",
      inside: {
        "directive-name": /^#\w+/,
        boolean: /\b(?:false|true)\b/,
        number: /\b\d+(?:\.\d+)*\b/,
        operator: /!|&&|\|\||[<>]=?/,
        punctuation: /[(),]/
      }
    },
    literal: {
      pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,
      alias: "constant"
    },
    "other-directive": {
      pattern: /#\w+\b/,
      alias: "property"
    },
    attribute: {
      pattern: /@\w+/,
      alias: "atrule"
    },
    "function-definition": {
      pattern: /(\bfunc\s+)\w+/,
      lookbehind: true,
      alias: "function"
    },
    label: {
      pattern: /\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,
      lookbehind: true,
      alias: "important"
    },
    keyword: /\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,
    boolean: /\b(?:false|true)\b/,
    nil: {
      pattern: /\bnil\b/,
      alias: "constant"
    },
    "short-argument": /\$\d+\b/,
    omit: {
      pattern: /\b_\b/,
      alias: "keyword"
    },
    number: /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,
    "class-name": /\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,
    function: /\b[a-z_]\w*(?=\s*\()/i,
    constant: /\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,
    operator: /[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,
    punctuation: /[{}[\]();,.:\\]/
  };
  Prism2.languages.swift["string-literal"].forEach(function(rule) {
    rule.inside["interpolation"].inside = Prism2.languages.swift;
  });
}
var systemd_1 = systemd;
systemd.displayName = "systemd";
systemd.aliases = [];
function systemd(Prism2) {
  (function(Prism3) {
    var comment = {
      pattern: /^[;#].*/m,
      greedy: true
    };
    var quotesSource = /"(?:[^\r\n"\\]|\\(?:[^\r]|\r\n?))*"(?!\S)/.source;
    Prism3.languages.systemd = {
      comment,
      section: {
        pattern: /^\[[^\n\r\[\]]*\](?=[ \t]*$)/m,
        greedy: true,
        inside: {
          punctuation: /^\[|\]$/,
          "section-name": {
            pattern: /[\s\S]+/,
            alias: "selector"
          }
        }
      },
      key: {
        pattern: /^[^\s=]+(?=[ \t]*=)/m,
        greedy: true,
        alias: "attr-name"
      },
      value: {
        pattern: RegExp(/(=[ \t]*(?!\s))/.source + "(?:" + quotesSource + '|(?=[^"\r\n]))(?:' + (/[^\s\\]/.source + '|[ 	]+(?:(?![ 	"])|' + quotesSource + ")|" + /\\[\r\n]+(?:[#;].*[\r\n]+)*(?![#;])/.source) + ")*"),
        lookbehind: true,
        greedy: true,
        alias: "attr-value",
        inside: {
          comment,
          quoted: {
            pattern: RegExp(/(^|\s)/.source + quotesSource),
            lookbehind: true,
            greedy: true
          },
          punctuation: /\\$/m,
          boolean: {
            pattern: /^(?:false|no|off|on|true|yes)$/,
            greedy: true
          }
        }
      },
      punctuation: /=/
    };
  })(Prism2);
}
var t4Templating_1 = t4Templating;
t4Templating.displayName = "t4Templating";
t4Templating.aliases = [];
function t4Templating(Prism2) {
  (function(Prism3) {
    function createBlock(prefix2, inside, contentAlias) {
      return {
        pattern: RegExp("<#" + prefix2 + "[\\s\\S]*?#>"),
        alias: "block",
        inside: {
          delimiter: {
            pattern: RegExp("^<#" + prefix2 + "|#>$"),
            alias: "important"
          },
          content: {
            pattern: /[\s\S]+/,
            inside,
            alias: contentAlias
          }
        }
      };
    }
    function createT4(insideLang) {
      var grammar = Prism3.languages[insideLang];
      var className = "language-" + insideLang;
      return {
        block: {
          pattern: /<#[\s\S]+?#>/,
          inside: {
            directive: createBlock("@", {
              "attr-value": {
                pattern: /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/,
                inside: {
                  punctuation: /^=|^["']|["']$/
                }
              },
              keyword: /\b\w+(?=\s)/,
              "attr-name": /\b\w+/
            }),
            expression: createBlock("=", grammar, className),
            "class-feature": createBlock("\\+", grammar, className),
            standard: createBlock("", grammar, className)
          }
        }
      };
    }
    Prism3.languages["t4-templating"] = Object.defineProperty({}, "createT4", {
      value: createT4
    });
  })(Prism2);
}
var refractorT4Templating$1 = t4Templating_1;
var refractorCsharp = csharp_1;
var t4Cs_1 = t4Cs;
t4Cs.displayName = "t4Cs";
t4Cs.aliases = [];
function t4Cs(Prism2) {
  Prism2.register(refractorT4Templating$1);
  Prism2.register(refractorCsharp);
  Prism2.languages.t4 = Prism2.languages["t4-cs"] = Prism2.languages["t4-templating"].createT4("csharp");
}
var refractorBasic = basic_1;
var vbnet_1 = vbnet;
vbnet.displayName = "vbnet";
vbnet.aliases = [];
function vbnet(Prism2) {
  Prism2.register(refractorBasic);
  Prism2.languages.vbnet = Prism2.languages.extend("basic", {
    comment: [
      {
        pattern: /(?:!|REM\b).+/i,
        inside: {
          keyword: /^REM/i
        }
      },
      {
        pattern: /(^|[^\\:])'.*/,
        lookbehind: true,
        greedy: true
      }
    ],
    string: {
      pattern: /(^|[^"])"(?:""|[^"])*"(?!")/,
      lookbehind: true,
      greedy: true
    },
    keyword: /(?:\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\$|\b)/i,
    punctuation: /[,;:(){}]/
  });
}
var refractorT4Templating = t4Templating_1;
var refractorVbnet = vbnet_1;
var t4Vb_1 = t4Vb;
t4Vb.displayName = "t4Vb";
t4Vb.aliases = [];
function t4Vb(Prism2) {
  Prism2.register(refractorT4Templating);
  Prism2.register(refractorVbnet);
  Prism2.languages["t4-vb"] = Prism2.languages["t4-templating"].createT4("vbnet");
}
var yaml_1 = yaml;
yaml.displayName = "yaml";
yaml.aliases = ["yml"];
function yaml(Prism2) {
  (function(Prism3) {
    var anchorOrAlias = /[*&][^\s[\]{},]+/;
    var tag = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/;
    var properties2 = "(?:" + tag.source + "(?:[ 	]+" + anchorOrAlias.source + ")?|" + anchorOrAlias.source + "(?:[ 	]+" + tag.source + ")?)";
    var plainKey = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {
      return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
    });
    var string2 = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
    function createValuePattern(value2, flags) {
      flags = (flags || "").replace(/m/g, "") + "m";
      var pattern = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
        return properties2;
      }).replace(/<<value>>/g, function() {
        return value2;
      });
      return RegExp(pattern, flags);
    }
    Prism3.languages.yaml = {
      scalar: {
        pattern: RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function() {
          return properties2;
        })),
        lookbehind: true,
        alias: "string"
      },
      comment: /#.*/,
      key: {
        pattern: RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
          return properties2;
        }).replace(/<<key>>/g, function() {
          return "(?:" + plainKey + "|" + string2 + ")";
        })),
        lookbehind: true,
        greedy: true,
        alias: "atrule"
      },
      directive: {
        pattern: /(^[ \t]*)%.+/m,
        lookbehind: true,
        alias: "important"
      },
      datetime: {
        pattern: createValuePattern(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),
        lookbehind: true,
        alias: "number"
      },
      boolean: {
        pattern: createValuePattern(/false|true/.source, "i"),
        lookbehind: true,
        alias: "important"
      },
      null: {
        pattern: createValuePattern(/null|~/.source, "i"),
        lookbehind: true,
        alias: "important"
      },
      string: {
        pattern: createValuePattern(string2),
        lookbehind: true,
        greedy: true
      },
      number: {
        pattern: createValuePattern(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, "i"),
        lookbehind: true
      },
      tag,
      important: anchorOrAlias,
      punctuation: /---|[:[\]{}\-,|>?]|\.\.\./
    };
    Prism3.languages.yml = Prism3.languages.yaml;
  })(Prism2);
}
var refractorYaml = yaml_1;
var tap_1 = tap;
tap.displayName = "tap";
tap.aliases = [];
function tap(Prism2) {
  Prism2.register(refractorYaml);
  Prism2.languages.tap = {
    fail: /not ok[^#{\n\r]*/,
    pass: /ok[^#{\n\r]*/,
    pragma: /pragma [+-][a-z]+/,
    bailout: /bail out!.*/i,
    version: /TAP version \d+/i,
    plan: /\b\d+\.\.\d+(?: +#.*)?/,
    subtest: {
      pattern: /# Subtest(?:: .*)?/,
      greedy: true
    },
    punctuation: /[{}]/,
    directive: /#.*/,
    yamlish: {
      pattern: /(^[ \t]*)---[\s\S]*?[\r\n][ \t]*\.\.\.$/m,
      lookbehind: true,
      inside: Prism2.languages.yaml,
      alias: "language-yaml"
    }
  };
}
var tcl_1 = tcl;
tcl.displayName = "tcl";
tcl.aliases = [];
function tcl(Prism2) {
  Prism2.languages.tcl = {
    comment: {
      pattern: /(^|[^\\])#.*/,
      lookbehind: true
    },
    string: {
      pattern: /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"/,
      greedy: true
    },
    variable: [
      {
        pattern: /(\$)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/,
        lookbehind: true
      },
      {
        pattern: /(\$)\{[^}]+\}/,
        lookbehind: true
      },
      {
        pattern: /(^[\t ]*set[ \t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\w+/m,
        lookbehind: true
      }
    ],
    function: {
      pattern: /(^[\t ]*proc[ \t]+)\S+/m,
      lookbehind: true
    },
    builtin: [
      {
        pattern: /(^[\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\b/m,
        lookbehind: true
      },
      /\b(?:else|elseif)\b/
    ],
    scope: {
      pattern: /(^[\t ]*)(?:global|upvar|variable)\b/m,
      lookbehind: true,
      alias: "constant"
    },
    keyword: {
      pattern: /(^[\t ]*|\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\b/m,
      lookbehind: true
    },
    operator: /!=?|\*\*?|==|&&?|\|\|?|<[=<]?|>[=>]?|[-+~\/%?^]|\b(?:eq|in|ne|ni)\b/,
    punctuation: /[{}()\[\]]/
  };
}
var textile_1 = textile;
textile.displayName = "textile";
textile.aliases = [];
function textile(Prism2) {
  (function(Prism3) {
    var modifierRegex = /\([^|()\n]+\)|\[[^\]\n]+\]|\{[^}\n]+\}/.source;
    var parenthesesRegex = /\)|\((?![^|()\n]+\))/.source;
    function withModifier(source, flags) {
      return RegExp(source.replace(/<MOD>/g, function() {
        return "(?:" + modifierRegex + ")";
      }).replace(/<PAR>/g, function() {
        return "(?:" + parenthesesRegex + ")";
      }), flags || "");
    }
    var modifierTokens = {
      css: {
        pattern: /\{[^{}]+\}/,
        inside: {
          rest: Prism3.languages.css
        }
      },
      "class-id": {
        pattern: /(\()[^()]+(?=\))/,
        lookbehind: true,
        alias: "attr-value"
      },
      lang: {
        pattern: /(\[)[^\[\]]+(?=\])/,
        lookbehind: true,
        alias: "attr-value"
      },
      punctuation: /[\\\/]\d+|\S/
    };
    var textile2 = Prism3.languages.textile = Prism3.languages.extend("markup", {
      phrase: {
        pattern: /(^|\r|\n)\S[\s\S]*?(?=$|\r?\n\r?\n|\r\r)/,
        lookbehind: true,
        inside: {
          "block-tag": {
            pattern: withModifier(/^[a-z]\w*(?:<MOD>|<PAR>|[<>=])*\./.source),
            inside: {
              modifier: {
                pattern: withModifier(/(^[a-z]\w*)(?:<MOD>|<PAR>|[<>=])+(?=\.)/.source),
                lookbehind: true,
                inside: modifierTokens
              },
              tag: /^[a-z]\w*/,
              punctuation: /\.$/
            }
          },
          list: {
            pattern: withModifier(/^[*#]+<MOD>*\s+\S.*/.source, "m"),
            inside: {
              modifier: {
                pattern: withModifier(/(^[*#]+)<MOD>+/.source),
                lookbehind: true,
                inside: modifierTokens
              },
              punctuation: /^[*#]+/
            }
          },
          table: {
            pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\.\s*)?(?:\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+\.))[^|]*)+\|/.source, "m"),
            inside: {
              modifier: {
                pattern: withModifier(/(^|\|(?:\r?\n|\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\/]\d+)+(?=\.)/.source),
                lookbehind: true,
                inside: modifierTokens
              },
              punctuation: /\||^\./
            }
          },
          inline: {
            pattern: withModifier(/(^|[^a-zA-Z\d])(\*\*|__|\?\?|[*_%@+\-^~])<MOD>*.+?\2(?![a-zA-Z\d])/.source),
            lookbehind: true,
            inside: {
              bold: {
                pattern: withModifier(/(^(\*\*?)<MOD>*).+?(?=\2)/.source),
                lookbehind: true
              },
              italic: {
                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\2)/.source),
                lookbehind: true
              },
              cite: {
                pattern: withModifier(/(^\?\?<MOD>*).+?(?=\?\?)/.source),
                lookbehind: true,
                alias: "string"
              },
              code: {
                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),
                lookbehind: true,
                alias: "keyword"
              },
              inserted: {
                pattern: withModifier(/(^\+<MOD>*).+?(?=\+)/.source),
                lookbehind: true
              },
              deleted: {
                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),
                lookbehind: true
              },
              span: {
                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),
                lookbehind: true
              },
              modifier: {
                pattern: withModifier(/(^\*\*|__|\?\?|[*_%@+\-^~])<MOD>+/.source),
                lookbehind: true,
                inside: modifierTokens
              },
              punctuation: /[*_%?@+\-^~]+/
            }
          },
          "link-ref": {
            pattern: /^\[[^\]]+\]\S+$/m,
            inside: {
              string: {
                pattern: /(^\[)[^\]]+(?=\])/,
                lookbehind: true
              },
              url: {
                pattern: /(^\])\S+$/,
                lookbehind: true
              },
              punctuation: /[\[\]]/
            }
          },
          link: {
            pattern: withModifier(/"<MOD>*[^"]+":.+?(?=[^\w/]?(?:\s|$))/.source),
            inside: {
              text: {
                pattern: withModifier(/(^"<MOD>*)[^"]+(?=")/.source),
                lookbehind: true
              },
              modifier: {
                pattern: withModifier(/(^")<MOD>+/.source),
                lookbehind: true,
                inside: modifierTokens
              },
              url: {
                pattern: /(:).+/,
                lookbehind: true
              },
              punctuation: /[":]/
            }
          },
          image: {
            pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\s()]+(?:\([^)]+\))?!(?::.+?(?=[^\w/]?(?:\s|$)))?/.source),
            inside: {
              source: {
                pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\s()]+(?:\([^)]+\))?(?=!)/.source),
                lookbehind: true,
                alias: "url"
              },
              modifier: {
                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),
                lookbehind: true,
                inside: modifierTokens
              },
              url: {
                pattern: /(:).+/,
                lookbehind: true
              },
              punctuation: /[!:]/
            }
          },
          footnote: {
            pattern: /\b\[\d+\]/,
            alias: "comment",
            inside: {
              punctuation: /\[|\]/
            }
          },
          acronym: {
            pattern: /\b[A-Z\d]+\([^)]+\)/,
            inside: {
              comment: {
                pattern: /(\()[^()]+(?=\))/,
                lookbehind: true
              },
              punctuation: /[()]/
            }
          },
          mark: {
            pattern: /\b\((?:C|R|TM)\)/,
            alias: "comment",
            inside: {
              punctuation: /[()]/
            }
          }
        }
      }
    });
    var phraseInside = textile2["phrase"].inside;
    var nestedPatterns = {
      inline: phraseInside["inline"],
      link: phraseInside["link"],
      image: phraseInside["image"],
      footnote: phraseInside["footnote"],
      acronym: phraseInside["acronym"],
      mark: phraseInside["mark"]
    };
    textile2.tag.pattern = /<\/?(?!\d)[a-z0-9]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i;
    var phraseInlineInside = phraseInside["inline"].inside;
    phraseInlineInside["bold"].inside = nestedPatterns;
    phraseInlineInside["italic"].inside = nestedPatterns;
    phraseInlineInside["inserted"].inside = nestedPatterns;
    phraseInlineInside["deleted"].inside = nestedPatterns;
    phraseInlineInside["span"].inside = nestedPatterns;
    var phraseTableInside = phraseInside["table"].inside;
    phraseTableInside["inline"] = nestedPatterns["inline"];
    phraseTableInside["link"] = nestedPatterns["link"];
    phraseTableInside["image"] = nestedPatterns["image"];
    phraseTableInside["footnote"] = nestedPatterns["footnote"];
    phraseTableInside["acronym"] = nestedPatterns["acronym"];
    phraseTableInside["mark"] = nestedPatterns["mark"];
  })(Prism2);
}
var toml_1 = toml;
toml.displayName = "toml";
toml.aliases = [];
function toml(Prism2) {
  (function(Prism3) {
    var key = /(?:[\w-]+|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*")/.source;
    function insertKey(pattern) {
      return pattern.replace(/__/g, function() {
        return key;
      });
    }
    Prism3.languages.toml = {
      comment: {
        pattern: /#.*/,
        greedy: true
      },
      table: {
        pattern: RegExp(insertKey(/(^[\t ]*\[\s*(?:\[\s*)?)__(?:\s*\.\s*__)*(?=\s*\])/.source), "m"),
        lookbehind: true,
        greedy: true,
        alias: "class-name"
      },
      key: {
        pattern: RegExp(insertKey(/(^[\t ]*|[{,]\s*)__(?:\s*\.\s*__)*(?=\s*=)/.source), "m"),
        lookbehind: true,
        greedy: true,
        alias: "property"
      },
      string: {
        pattern: /"""(?:\\[\s\S]|[^\\])*?"""|'''[\s\S]*?'''|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*"/,
        greedy: true
      },
      date: [
        {
          pattern: /\b\d{4}-\d{2}-\d{2}(?:[T\s]\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:\d{2})?)?\b/i,
          alias: "number"
        },
        {
          pattern: /\b\d{2}:\d{2}:\d{2}(?:\.\d+)?\b/,
          alias: "number"
        }
      ],
      number: /(?:\b0(?:x[\da-zA-Z]+(?:_[\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\b|[-+]?\b\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?\b|[-+]?\b(?:inf|nan)\b/,
      boolean: /\b(?:false|true)\b/,
      punctuation: /[.,=[\]{}]/
    };
  })(Prism2);
}
var tremor_1 = tremor;
tremor.displayName = "tremor";
tremor.aliases = [];
function tremor(Prism2) {
  (function(Prism3) {
    Prism3.languages.tremor = {
      comment: {
        pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
        lookbehind: true
      },
      "interpolated-string": null,
      extractor: {
        pattern: /\b[a-z_]\w*\|(?:[^\r\n\\|]|\\(?:\r\n|[\s\S]))*\|/i,
        greedy: true,
        inside: {
          regex: {
            pattern: /(^re)\|[\s\S]+/,
            lookbehind: true
          },
          function: /^\w+/,
          value: /\|[\s\S]+/
        }
      },
      identifier: {
        pattern: /`[^`]*`/,
        greedy: true
      },
      function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())\b/,
      keyword: /\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\b/,
      boolean: /\b(?:false|null|true)\b/i,
      number: /\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\d[\d_]*(?:\.\d[\d_]*)?(?:[Ee][+-]?[\d_]+)?)\b/,
      "pattern-punctuation": {
        pattern: /%(?=[({[])/,
        alias: "punctuation"
      },
      operator: /[-+*\/%~!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\b/,
      punctuation: /::|[;\[\]()\{\},.:]/
    };
    var interpolationPattern = /#\{(?:[^"{}]|\{[^{}]*\}|"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*")*\}/.source;
    Prism3.languages.tremor["interpolated-string"] = {
      pattern: RegExp(/(^|[^\\])/.source + '(?:"""(?:' + /[^"\\#]|\\[\s\S]|"(?!"")|#(?!\{)/.source + "|" + interpolationPattern + ')*"""|"(?:' + /[^"\\\r\n#]|\\(?:\r\n|[\s\S])|#(?!\{)/.source + "|" + interpolationPattern + ')*")'),
      lookbehind: true,
      greedy: true,
      inside: {
        interpolation: {
          pattern: RegExp(interpolationPattern),
          inside: {
            punctuation: /^#\{|\}$/,
            expression: {
              pattern: /[\s\S]+/,
              inside: Prism3.languages.tremor
            }
          }
        },
        string: /[\s\S]+/
      }
    };
    Prism3.languages.troy = Prism3.languages["tremor"];
    Prism3.languages.trickle = Prism3.languages["tremor"];
  })(Prism2);
}
var refractorJsx = jsx_1;
var refractorTypescript = typescript_1;
var tsx_1 = tsx;
tsx.displayName = "tsx";
tsx.aliases = [];
function tsx(Prism2) {
  Prism2.register(refractorJsx);
  Prism2.register(refractorTypescript);
  (function(Prism3) {
    var typescript2 = Prism3.util.clone(Prism3.languages.typescript);
    Prism3.languages.tsx = Prism3.languages.extend("jsx", typescript2);
    delete Prism3.languages.tsx["parameter"];
    delete Prism3.languages.tsx["literal-property"];
    var tag = Prism3.languages.tsx.tag;
    tag.pattern = RegExp(/(^|[^\w$]|(?=<\/))/.source + "(?:" + tag.pattern.source + ")", tag.pattern.flags);
    tag.lookbehind = true;
  })(Prism2);
}
var refractorMarkupTemplating$1 = markupTemplating_1;
var tt2_1 = tt2;
tt2.displayName = "tt2";
tt2.aliases = [];
function tt2(Prism2) {
  Prism2.register(refractorMarkupTemplating$1);
  (function(Prism3) {
    Prism3.languages.tt2 = Prism3.languages.extend("clike", {
      comment: /#.*|\[%#[\s\S]*?%\]/,
      keyword: /\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\b/,
      punctuation: /[[\]{},()]/
    });
    Prism3.languages.insertBefore("tt2", "number", {
      operator: /=[>=]?|!=?|<=?|>=?|&&|\|\|?|\b(?:and|not|or)\b/,
      variable: {
        pattern: /\b[a-z]\w*(?:\s*\.\s*(?:\d+|\$?[a-z]\w*))*\b/i
      }
    });
    Prism3.languages.insertBefore("tt2", "keyword", {
      delimiter: {
        pattern: /^(?:\[%|%%)-?|-?%\]$/,
        alias: "punctuation"
      }
    });
    Prism3.languages.insertBefore("tt2", "string", {
      "single-quoted-string": {
        pattern: /'[^\\']*(?:\\[\s\S][^\\']*)*'/,
        greedy: true,
        alias: "string"
      },
      "double-quoted-string": {
        pattern: /"[^\\"]*(?:\\[\s\S][^\\"]*)*"/,
        greedy: true,
        alias: "string",
        inside: {
          variable: {
            pattern: /\$(?:[a-z]\w*(?:\.(?:\d+|\$?[a-z]\w*))*)/i
          }
        }
      }
    });
    delete Prism3.languages.tt2.string;
    Prism3.hooks.add("before-tokenize", function(env) {
      var tt2Pattern = /\[%[\s\S]+?%\]/g;
      Prism3.languages["markup-templating"].buildPlaceholders(env, "tt2", tt2Pattern);
    });
    Prism3.hooks.add("after-tokenize", function(env) {
      Prism3.languages["markup-templating"].tokenizePlaceholders(env, "tt2");
    });
  })(Prism2);
}
var refractorMarkupTemplating = markupTemplating_1;
var twig_1 = twig;
twig.displayName = "twig";
twig.aliases = [];
function twig(Prism2) {
  Prism2.register(refractorMarkupTemplating);
  Prism2.languages.twig = {
    comment: /^\{#[\s\S]*?#\}$/,
    "tag-name": {
      pattern: /(^\{%-?\s*)\w+/,
      lookbehind: true,
      alias: "keyword"
    },
    delimiter: {
      pattern: /^\{[{%]-?|-?[%}]\}$/,
      alias: "punctuation"
    },
    string: {
      pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      inside: {
        punctuation: /^['"]|['"]$/
      }
    },
    keyword: /\b(?:even|if|odd)\b/,
    boolean: /\b(?:false|null|true)\b/,
    number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
    operator: [
      {
        pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,
        lookbehind: true
      },
      /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/
    ],
    punctuation: /[()\[\]{}:.,]/
  };
  Prism2.hooks.add("before-tokenize", function(env) {
    if (env.language !== "twig") {
      return;
    }
    var pattern = /\{(?:#[\s\S]*?#|%[\s\S]*?%|\{[\s\S]*?\})\}/g;
    Prism2.languages["markup-templating"].buildPlaceholders(env, "twig", pattern);
  });
  Prism2.hooks.add("after-tokenize", function(env) {
    Prism2.languages["markup-templating"].tokenizePlaceholders(env, "twig");
  });
}
var typoscript_1 = typoscript;
typoscript.displayName = "typoscript";
typoscript.aliases = ["tsconfig"];
function typoscript(Prism2) {
  (function(Prism3) {
    var keywords = /\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\b/;
    Prism3.languages.typoscript = {
      comment: [
        {
          pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
          lookbehind: true
        },
        {
          pattern: /(^|[^\\:= \t]|(?:^|[^= \t])[ \t]+)\/\/.*/,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /(^|[^"'])#.*/,
          lookbehind: true,
          greedy: true
        }
      ],
      function: [
        {
          pattern: /<INCLUDE_TYPOSCRIPT:\s*source\s*=\s*(?:"[^"\r\n]*"|'[^'\r\n]*')\s*>/,
          inside: {
            string: {
              pattern: /"[^"\r\n]*"|'[^'\r\n]*'/,
              inside: {
                keyword: keywords
              }
            },
            keyword: {
              pattern: /INCLUDE_TYPOSCRIPT/
            }
          }
        },
        {
          pattern: /@import\s*(?:"[^"\r\n]*"|'[^'\r\n]*')/,
          inside: {
            string: /"[^"\r\n]*"|'[^'\r\n]*'/
          }
        }
      ],
      string: {
        pattern: /^([^=]*=[< ]?)(?:(?!\]\n).)*/,
        lookbehind: true,
        inside: {
          function: /\{\$.*\}/,
          keyword: keywords,
          number: /^\d+$/,
          punctuation: /[,|:]/
        }
      },
      keyword: keywords,
      number: {
        pattern: /\b\d+\s*[.{=]/,
        inside: {
          operator: /[.{=]/
        }
      },
      tag: {
        pattern: /\.?[-\w\\]+\.?/,
        inside: {
          punctuation: /\./
        }
      },
      punctuation: /[{}[\];(),.:|]/,
      operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/
    };
    Prism3.languages.tsconfig = Prism3.languages.typoscript;
  })(Prism2);
}
var unrealscript_1 = unrealscript;
unrealscript.displayName = "unrealscript";
unrealscript.aliases = ["uc", "uscript"];
function unrealscript(Prism2) {
  Prism2.languages.unrealscript = {
    comment: /\/\/.*|\/\*[\s\S]*?\*\//,
    string: {
      pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
      greedy: true
    },
    category: {
      pattern: /(\b(?:(?:autoexpand|hide|show)categories|var)\s*\()[^()]+(?=\))/,
      lookbehind: true,
      greedy: true,
      alias: "property"
    },
    metadata: {
      pattern: /(\w\s*)<\s*\w+\s*=[^<>|=\r\n]+(?:\|\s*\w+\s*=[^<>|=\r\n]+)*>/,
      lookbehind: true,
      greedy: true,
      inside: {
        property: /\b\w+(?=\s*=)/,
        operator: /=/,
        punctuation: /[<>|]/
      }
    },
    macro: {
      pattern: /`\w+/,
      alias: "property"
    },
    "class-name": {
      pattern: /(\b(?:class|enum|extends|interface|state(?:\(\))?|struct|within)\s+)\w+/,
      lookbehind: true
    },
    keyword: /\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\b/,
    function: /\b[a-z_]\w*(?=\s*\()/i,
    boolean: /\b(?:false|true)\b/,
    number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
    operator: />>|<<|--|\+\+|\*\*|[-+*/~!=<>$@]=?|&&?|\|\|?|\^\^?|[?:%]|\b(?:ClockwiseFrom|Cross|Dot)\b/,
    punctuation: /[()[\]{};,.]/
  };
  Prism2.languages.uc = Prism2.languages.uscript = Prism2.languages.unrealscript;
}
var uorazor_1 = uorazor;
uorazor.displayName = "uorazor";
uorazor.aliases = [];
function uorazor(Prism2) {
  Prism2.languages.uorazor = {
    "comment-hash": {
      pattern: /#.*/,
      alias: "comment",
      greedy: true
    },
    "comment-slash": {
      pattern: /\/\/.*/,
      alias: "comment",
      greedy: true
    },
    string: {
      pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      inside: {
        punctuation: /^['"]|['"]$/
      },
      greedy: true
    },
    "source-layers": {
      pattern: /\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\b/i,
      alias: "function"
    },
    "source-commands": {
      pattern: /\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\b/,
      alias: "function"
    },
    "tag-name": {
      pattern: /(^\{%-?\s*)\w+/,
      lookbehind: true,
      alias: "keyword"
    },
    delimiter: {
      pattern: /^\{[{%]-?|-?[%}]\}$/,
      alias: "punctuation"
    },
    function: /\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\b/,
    keyword: /\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\b/,
    boolean: /\b(?:false|null|true)\b/,
    number: /\b0x[\dA-Fa-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][-+]?\d+)?/,
    operator: [
      {
        pattern: /(\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\s)/,
        lookbehind: true
      },
      /[=<>]=?|!=|\*\*?|\/\/?|\?:?|[-+~%|]/
    ],
    punctuation: /[()\[\]{}:.,]/
  };
}
var uri_1 = uri;
uri.displayName = "uri";
uri.aliases = ["url"];
function uri(Prism2) {
  Prism2.languages.uri = {
    scheme: {
      pattern: /^[a-z][a-z0-9+.-]*:/im,
      greedy: true,
      inside: {
        "scheme-delimiter": /:$/
      }
    },
    fragment: {
      pattern: /#[\w\-.~!$&'()*+,;=%:@/?]*/,
      inside: {
        "fragment-delimiter": /^#/
      }
    },
    query: {
      pattern: /\?[\w\-.~!$&'()*+,;=%:@/?]*/,
      inside: {
        "query-delimiter": {
          pattern: /^\?/,
          greedy: true
        },
        "pair-delimiter": /[&;]/,
        pair: {
          pattern: /^[^=][\s\S]*/,
          inside: {
            key: /^[^=]+/,
            value: {
              pattern: /(^=)[\s\S]+/,
              lookbehind: true
            }
          }
        }
      }
    },
    authority: {
      pattern: RegExp(/^\/\//.source + /(?:[\w\-.~!$&'()*+,;=%:]*@)?/.source + ("(?:" + /\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\.[\w\-.~!$&'()*+,;=]+)\]/.source + "|" + /[\w\-.~!$&'()*+,;=%]*/.source + ")") + /(?::\d*)?/.source, "m"),
      inside: {
        "authority-delimiter": /^\/\//,
        "user-info-segment": {
          pattern: /^[\w\-.~!$&'()*+,;=%:]*@/,
          inside: {
            "user-info-delimiter": /@$/,
            "user-info": /^[\w\-.~!$&'()*+,;=%:]+/
          }
        },
        "port-segment": {
          pattern: /:\d*$/,
          inside: {
            "port-delimiter": /^:/,
            port: /^\d+/
          }
        },
        host: {
          pattern: /[\s\S]+/,
          inside: {
            "ip-literal": {
              pattern: /^\[[\s\S]+\]$/,
              inside: {
                "ip-literal-delimiter": /^\[|\]$/,
                "ipv-future": /^v[\s\S]+/,
                "ipv6-address": /^[\s\S]+/
              }
            },
            "ipv4-address": /^(?:(?:[03-9]\d?|[12]\d{0,2})\.){3}(?:[03-9]\d?|[12]\d{0,2})$/
          }
        }
      }
    },
    path: {
      pattern: /^[\w\-.~!$&'()*+,;=%:@/]+/m,
      inside: {
        "path-separator": /\//
      }
    }
  };
  Prism2.languages.url = Prism2.languages.uri;
}
var v_1 = v;
v.displayName = "v";
v.aliases = [];
function v(Prism2) {
  (function(Prism3) {
    var interpolationExpr = {
      pattern: /[\s\S]+/,
      inside: null
    };
    Prism3.languages.v = Prism3.languages.extend("clike", {
      string: {
        pattern: /r?(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        alias: "quoted-string",
        greedy: true,
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\{[^{}]*\}|\w+(?:\.\w+(?:\([^\(\)]*\))?|\[[^\[\]]+\])*)/,
            lookbehind: true,
            inside: {
              "interpolation-variable": {
                pattern: /^\$\w[\s\S]*$/,
                alias: "variable"
              },
              "interpolation-punctuation": {
                pattern: /^\$\{|\}$/,
                alias: "punctuation"
              },
              "interpolation-expression": interpolationExpr
            }
          }
        }
      },
      "class-name": {
        pattern: /(\b(?:enum|interface|struct|type)\s+)(?:C\.)?\w+/,
        lookbehind: true
      },
      keyword: /(?:\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\$(?:else|for|if)|#(?:flag|include))\b/,
      number: /\b(?:0x[a-f\d]+(?:_[a-f\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?)\b/i,
      operator: /~|\?|[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\.?/,
      builtin: /\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\b/
    });
    interpolationExpr.inside = Prism3.languages.v;
    Prism3.languages.insertBefore("v", "string", {
      char: {
        pattern: /`(?:\\`|\\?[^`]{1,2})`/,
        alias: "rune"
      }
    });
    Prism3.languages.insertBefore("v", "operator", {
      attribute: {
        pattern: /(^[\t ]*)\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\]/m,
        lookbehind: true,
        alias: "annotation",
        inside: {
          punctuation: /[\[\]]/,
          keyword: /\w+/
        }
      },
      generic: {
        pattern: /<\w+>(?=\s*[\)\{])/,
        inside: {
          punctuation: /[<>]/,
          "class-name": /\w+/
        }
      }
    });
    Prism3.languages.insertBefore("v", "function", {
      "generic-function": {
        pattern: /\b\w+\s*<\w+>(?=\()/,
        inside: {
          function: /^\w+/,
          generic: {
            pattern: /<\w+>/,
            inside: Prism3.languages.v.generic.inside
          }
        }
      }
    });
  })(Prism2);
}
var vala_1 = vala;
vala.displayName = "vala";
vala.aliases = [];
function vala(Prism2) {
  Prism2.languages.vala = Prism2.languages.extend("clike", {
    "class-name": [
      {
        pattern: /\b[A-Z]\w*(?:\.\w+)*\b(?=(?:\?\s+|\*?\s+\*?)\w)/,
        inside: {
          punctuation: /\./
        }
      },
      {
        pattern: /(\[)[A-Z]\w*(?:\.\w+)*\b/,
        lookbehind: true,
        inside: {
          punctuation: /\./
        }
      },
      {
        pattern: /(\b(?:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/,
        lookbehind: true,
        inside: {
          punctuation: /\./
        }
      },
      {
        pattern: /((?:\b(?:class|enum|interface|new|struct)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/,
        lookbehind: true,
        inside: {
          punctuation: /\./
        }
      }
    ],
    keyword: /\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\b/i,
    function: /\b\w+(?=\s*\()/,
    number: /(?:\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)(?:f|u?l?)?/i,
    operator: /\+\+|--|&&|\|\||<<=?|>>=?|=>|->|~|[+\-*\/%&^|=!<>]=?|\?\??|\.\.\./,
    punctuation: /[{}[\];(),.:]/,
    constant: /\b[A-Z0-9_]+\b/
  });
  Prism2.languages.insertBefore("vala", "string", {
    "raw-string": {
      pattern: /"""[\s\S]*?"""/,
      greedy: true,
      alias: "string"
    },
    "template-string": {
      pattern: /@"[\s\S]*?"/,
      greedy: true,
      inside: {
        interpolation: {
          pattern: /\$(?:\([^)]*\)|[a-zA-Z]\w*)/,
          inside: {
            delimiter: {
              pattern: /^\$\(?|\)$/,
              alias: "punctuation"
            },
            rest: Prism2.languages.vala
          }
        },
        string: /[\s\S]+/
      }
    }
  });
  Prism2.languages.insertBefore("vala", "keyword", {
    regex: {
      pattern: /\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[imsx]{0,4}(?=\s*(?:$|[\r\n,.;})\]]))/,
      greedy: true,
      inside: {
        "regex-source": {
          pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
          lookbehind: true,
          alias: "language-regex",
          inside: Prism2.languages.regex
        },
        "regex-delimiter": /^\//,
        "regex-flags": /^[a-z]+$/
      }
    }
  });
}
var velocity_1 = velocity;
velocity.displayName = "velocity";
velocity.aliases = [];
function velocity(Prism2) {
  (function(Prism3) {
    Prism3.languages.velocity = Prism3.languages.extend("markup", {});
    var velocity2 = {
      variable: {
        pattern: /(^|[^\\](?:\\\\)*)\$!?(?:[a-z][\w-]*(?:\([^)]*\))?(?:\.[a-z][\w-]*(?:\([^)]*\))?|\[[^\]]+\])*|\{[^}]+\})/i,
        lookbehind: true,
        inside: {}
      },
      string: {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: true
      },
      number: /\b\d+\b/,
      boolean: /\b(?:false|true)\b/,
      operator: /[=!<>]=?|[+*/%-]|&&|\|\||\.\.|\b(?:eq|g[et]|l[et]|n(?:e|ot))\b/,
      punctuation: /[(){}[\]:,.]/
    };
    velocity2.variable.inside = {
      string: velocity2["string"],
      function: {
        pattern: /([^\w-])[a-z][\w-]*(?=\()/,
        lookbehind: true
      },
      number: velocity2["number"],
      boolean: velocity2["boolean"],
      punctuation: velocity2["punctuation"]
    };
    Prism3.languages.insertBefore("velocity", "comment", {
      unparsed: {
        pattern: /(^|[^\\])#\[\[[\s\S]*?\]\]#/,
        lookbehind: true,
        greedy: true,
        inside: {
          punctuation: /^#\[\[|\]\]#$/
        }
      },
      "velocity-comment": [
        {
          pattern: /(^|[^\\])#\*[\s\S]*?\*#/,
          lookbehind: true,
          greedy: true,
          alias: "comment"
        },
        {
          pattern: /(^|[^\\])##.*/,
          lookbehind: true,
          greedy: true,
          alias: "comment"
        }
      ],
      directive: {
        pattern: /(^|[^\\](?:\\\\)*)#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})(?:\s*\((?:[^()]|\([^()]*\))*\))?/i,
        lookbehind: true,
        inside: {
          keyword: {
            pattern: /^#@?(?:[a-z][\w-]*|\{[a-z][\w-]*\})|\bin\b/,
            inside: {
              punctuation: /[{}]/
            }
          },
          rest: velocity2
        }
      },
      variable: velocity2["variable"]
    });
    Prism3.languages.velocity["tag"].inside["attr-value"].inside.rest = Prism3.languages.velocity;
  })(Prism2);
}
var verilog_1 = verilog;
verilog.displayName = "verilog";
verilog.aliases = [];
function verilog(Prism2) {
  Prism2.languages.verilog = {
    comment: {
      pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
      greedy: true
    },
    string: {
      pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
      greedy: true
    },
    "kernel-function": {
      pattern: /\B\$\w+\b/,
      alias: "property"
    },
    constant: /\B`\w+\b/,
    function: /\b\w+(?=\()/,
    keyword: /\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\b/,
    important: /\b(?:always|always_comb|always_ff|always_latch)\b(?: *@)?/,
    number: /\B##?\d+|(?:\b\d+)?'[odbh] ?[\da-fzx_?]+|\b(?:\d*[._])?\d+(?:e[-+]?\d+)?/i,
    operator: /[-+{}^~%*\/?=!<>&|]+/,
    punctuation: /[[\];(),.:]/
  };
}
var vhdl_1 = vhdl;
vhdl.displayName = "vhdl";
vhdl.aliases = [];
function vhdl(Prism2) {
  Prism2.languages.vhdl = {
    comment: /--.+/,
    "vhdl-vectors": {
      pattern: /\b[oxb]"[\da-f_]+"|"[01uxzwlh-]+"/i,
      alias: "number"
    },
    "quoted-function": {
      pattern: /"\S+?"(?=\()/,
      alias: "function"
    },
    string: /"(?:[^\\"\r\n]|\\(?:\r\n|[\s\S]))*"/,
    constant: /\b(?:library|use)\b/i,
    keyword: /\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\b/i,
    boolean: /\b(?:false|true)\b/i,
    function: /\w+(?=\()/,
    number: /'[01uxzwlh-]'|\b(?:\d+#[\da-f_.]+#|\d[\d_.]*)(?:e[-+]?\d+)?/i,
    operator: /[<>]=?|:=|[-+*/&=]|\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\b/i,
    punctuation: /[{}[\];(),.:]/
  };
}
var vim_1 = vim;
vim.displayName = "vim";
vim.aliases = [];
function vim(Prism2) {
  Prism2.languages.vim = {
    string: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\r\n]|'')*'/,
    comment: /".*/,
    function: /\b\w+(?=\()/,
    keyword: /\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\b/,
    builtin: /\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\b/,
    number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?)\b/i,
    operator: /\|\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\/%?]|\b(?:is(?:not)?)\b/,
    punctuation: /[{}[\](),;:]/
  };
}
var visualBasic_1 = visualBasic;
visualBasic.displayName = "visualBasic";
visualBasic.aliases = [];
function visualBasic(Prism2) {
  Prism2.languages["visual-basic"] = {
    comment: {
      pattern: /(?:['‘’]|REM\b)(?:[^\r\n_]|_(?:\r\n?|\n)?)*/i,
      inside: {
        keyword: /^REM/i
      }
    },
    directive: {
      pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\b_[ \t]*(?:\r\n?|\n)|.)+/i,
      alias: "property",
      greedy: true
    },
    string: {
      pattern: /\$?["“”](?:["“”]{2}|[^"“”])*["“”]C?/i,
      greedy: true
    },
    date: {
      pattern: /#[ \t]*(?:\d+([/-])\d+\1\d+(?:[ \t]+(?:\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?))?|\d+[ \t]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[ \t]*(?:AM|PM))?)[ \t]*#/i,
      alias: "number"
    },
    number: /(?:(?:\b\d+(?:\.\d+)?|\.\d+)(?:E[+-]?\d+)?|&[HO][\dA-F]+)(?:[FRD]|U?[ILS])?/i,
    boolean: /\b(?:False|Nothing|True)\b/i,
    keyword: /\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\b/i,
    operator: /[+\-*/\\^<=>&#@$%!]|\b_(?=[ \t]*[\r\n])/,
    punctuation: /[{}().,:?]/
  };
  Prism2.languages.vb = Prism2.languages["visual-basic"];
  Prism2.languages.vba = Prism2.languages["visual-basic"];
}
var warpscript_1 = warpscript;
warpscript.displayName = "warpscript";
warpscript.aliases = [];
function warpscript(Prism2) {
  Prism2.languages.warpscript = {
    comment: /#.*|\/\/.*|\/\*[\s\S]*?\*\//,
    string: {
      pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'|<'(?:[^\\']|'(?!>)|\\.)*'>/,
      greedy: true
    },
    variable: /\$\S+/,
    macro: {
      pattern: /@\S+/,
      alias: "property"
    },
    keyword: /\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\b/,
    number: /[+-]?\b(?:NaN|Infinity|\d+(?:\.\d*)?(?:[Ee][+-]?\d+)?|0x[\da-fA-F]+|0b[01]+)\b/,
    boolean: /\b(?:F|T|false|true)\b/,
    punctuation: /<%|%>|[{}[\]()]/,
    operator: /==|&&?|\|\|?|\*\*?|>>>?|<<|[<>!~]=?|[-/%^]|\+!?|\b(?:AND|NOT|OR)\b/
  };
}
var wasm_1 = wasm;
wasm.displayName = "wasm";
wasm.aliases = [];
function wasm(Prism2) {
  Prism2.languages.wasm = {
    comment: [
      /\(;[\s\S]*?;\)/,
      {
        pattern: /;;.*/,
        greedy: true
      }
    ],
    string: {
      pattern: /"(?:\\[\s\S]|[^"\\])*"/,
      greedy: true
    },
    keyword: [
      {
        pattern: /\b(?:align|offset)=/,
        inside: {
          operator: /=/
        }
      },
      {
        pattern: /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
        inside: {
          punctuation: /\./
        }
      },
      /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/
    ],
    variable: /\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,
    number: /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
    punctuation: /[()]/
  };
}
var webIdl_1 = webIdl;
webIdl.displayName = "webIdl";
webIdl.aliases = [];
function webIdl(Prism2) {
  (function(Prism3) {
    var id2 = /(?:\B-|\b_|\b)[A-Za-z][\w-]*(?![\w-])/.source;
    var type = "(?:" + /\b(?:unsigned\s+)?long\s+long(?![\w-])/.source + "|" + /\b(?:unrestricted|unsigned)\s+[a-z]+(?![\w-])/.source + "|" + /(?!(?:unrestricted|unsigned)\b)/.source + id2 + /(?:\s*<(?:[^<>]|<[^<>]*>)*>)?/.source + ")" + /(?:\s*\?)?/.source;
    var typeInside = {};
    Prism3.languages["web-idl"] = {
      comment: {
        pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
        greedy: true
      },
      string: {
        pattern: /"[^"]*"/,
        greedy: true
      },
      namespace: {
        pattern: RegExp(/(\bnamespace\s+)/.source + id2),
        lookbehind: true
      },
      "class-name": [
        {
          pattern: /(^|[^\w-])(?:iterable|maplike|setlike)\s*<(?:[^<>]|<[^<>]*>)*>/,
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: RegExp(/(\b(?:attribute|const|deleter|getter|optional|setter)\s+)/.source + type),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: RegExp("(" + /\bcallback\s+/.source + id2 + /\s*=\s*/.source + ")" + type),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: RegExp(/(\btypedef\b\s*)/.source + type),
          lookbehind: true,
          inside: typeInside
        },
        {
          pattern: RegExp(/(\b(?:callback|dictionary|enum|interface(?:\s+mixin)?)\s+)(?!(?:interface|mixin)\b)/.source + id2),
          lookbehind: true
        },
        {
          pattern: RegExp(/(:\s*)/.source + id2),
          lookbehind: true
        },
        RegExp(id2 + /(?=\s+(?:implements|includes)\b)/.source),
        {
          pattern: RegExp(/(\b(?:implements|includes)\s+)/.source + id2),
          lookbehind: true
        },
        {
          pattern: RegExp(type + "(?=" + /\s*(?:\.{3}\s*)?/.source + id2 + /\s*[(),;=]/.source + ")"),
          inside: typeInside
        }
      ],
      builtin: /\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\b/,
      keyword: [
        /\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\b/,
        /\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\b/
      ],
      boolean: /\b(?:false|true)\b/,
      number: {
        pattern: /(^|[^\w-])-?(?:0x[0-9a-f]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|NaN|Infinity)(?![\w-])/i,
        lookbehind: true
      },
      operator: /\.{3}|[=:?<>-]/,
      punctuation: /[(){}[\].,;]/
    };
    for (var key in Prism3.languages["web-idl"]) {
      if (key !== "class-name") {
        typeInside[key] = Prism3.languages["web-idl"][key];
      }
    }
    Prism3.languages["webidl"] = Prism3.languages["web-idl"];
  })(Prism2);
}
var wiki_1 = wiki;
wiki.displayName = "wiki";
wiki.aliases = [];
function wiki(Prism2) {
  Prism2.languages.wiki = Prism2.languages.extend("markup", {
    "block-comment": {
      pattern: /(^|[^\\])\/\*[\s\S]*?\*\//,
      lookbehind: true,
      alias: "comment"
    },
    heading: {
      pattern: /^(=+)[^=\r\n].*?\1/m,
      inside: {
        punctuation: /^=+|=+$/,
        important: /.+/
      }
    },
    emphasis: {
      pattern: /('{2,5}).+?\1/,
      inside: {
        "bold-italic": {
          pattern: /(''''').+?(?=\1)/,
          lookbehind: true,
          alias: ["bold", "italic"]
        },
        bold: {
          pattern: /(''')[^'](?:.*?[^'])?(?=\1)/,
          lookbehind: true
        },
        italic: {
          pattern: /('')[^'](?:.*?[^'])?(?=\1)/,
          lookbehind: true
        },
        punctuation: /^''+|''+$/
      }
    },
    hr: {
      pattern: /^-{4,}/m,
      alias: "punctuation"
    },
    url: [
      /ISBN +(?:97[89][ -]?)?(?:\d[ -]?){9}[\dx]\b|(?:PMID|RFC) +\d+/i,
      /\[\[.+?\]\]|\[.+?\]/
    ],
    variable: [
      /__[A-Z]+__/,
      /\{{3}.+?\}{3}/,
      /\{\{.+?\}\}/
    ],
    symbol: [/^#redirect/im, /~{3,5}/],
    "table-tag": {
      pattern: /((?:^|[|!])[|!])[^|\r\n]+\|(?!\|)/m,
      lookbehind: true,
      inside: {
        "table-bar": {
          pattern: /\|$/,
          alias: "punctuation"
        },
        rest: Prism2.languages.markup["tag"].inside
      }
    },
    punctuation: /^(?:\{\||\|\}|\|-|[*#:;!|])|\|\||!!/m
  });
  Prism2.languages.insertBefore("wiki", "tag", {
    nowiki: {
      pattern: /<(nowiki|pre|source)\b[^>]*>[\s\S]*?<\/\1>/i,
      inside: {
        tag: {
          pattern: /<(?:nowiki|pre|source)\b[^>]*>|<\/(?:nowiki|pre|source)>/i,
          inside: Prism2.languages.markup["tag"].inside
        }
      }
    }
  });
}
var wolfram_1 = wolfram;
wolfram.displayName = "wolfram";
wolfram.aliases = ["mathematica", "wl", "nb"];
function wolfram(Prism2) {
  Prism2.languages.wolfram = {
    comment: /\(\*(?:\(\*(?:[^*]|\*(?!\)))*\*\)|(?!\(\*)[\s\S])*?\*\)/,
    string: {
      pattern: /"(?:\\.|[^"\\\r\n])*"/,
      greedy: true
    },
    keyword: /\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\b/,
    context: {
      pattern: /\b\w+`+\w*/,
      alias: "class-name"
    },
    blank: {
      pattern: /\b\w+_\b/,
      alias: "regex"
    },
    "global-variable": {
      pattern: /\$\w+/,
      alias: "variable"
    },
    boolean: /\b(?:False|True)\b/,
    number: /(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?j?\b/i,
    operator: /\/\.|;|=\.|\^=|\^:=|:=|<<|>>|<\||\|>|:>|\|->|->|<-|@@@|@@|@|\/@|=!=|===|==|=|\+|-|\^|\[\/-+%=\]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
    punctuation: /[{}[\];(),.:]/
  };
  Prism2.languages.mathematica = Prism2.languages.wolfram;
  Prism2.languages.wl = Prism2.languages.wolfram;
  Prism2.languages.nb = Prism2.languages.wolfram;
}
var wren_1 = wren;
wren.displayName = "wren";
wren.aliases = [];
function wren(Prism2) {
  Prism2.languages.wren = {
    comment: [
      {
        pattern: /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|\/\*(?:[^*/]|\*(?!\/)|\/(?!\*))*\*\/)*\*\/)*\*\//,
        greedy: true
      },
      {
        pattern: /(^|[^\\:])\/\/.*/,
        lookbehind: true,
        greedy: true
      }
    ],
    "triple-quoted-string": {
      pattern: /"""[\s\S]*?"""/,
      greedy: true,
      alias: "string"
    },
    "string-literal": null,
    hashbang: {
      pattern: /^#!\/.+/,
      greedy: true,
      alias: "comment"
    },
    attribute: {
      pattern: /#!?[ \t\u3000]*\w+/,
      alias: "keyword"
    },
    "class-name": [
      {
        pattern: /(\bclass\s+)\w+/,
        lookbehind: true
      },
      /\b[A-Z][a-z\d_]*\b/
    ],
    constant: /\b[A-Z][A-Z\d_]*\b/,
    null: {
      pattern: /\bnull\b/,
      alias: "keyword"
    },
    keyword: /\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\b/,
    boolean: /\b(?:false|true)\b/,
    number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b/i,
    function: /\b[a-z_]\w*(?=\s*[({])/i,
    operator: /<<|>>|[=!<>]=?|&&|\|\||[-+*/%~^&|?:]|\.{2,3}/,
    punctuation: /[\[\](){}.,;]/
  };
  Prism2.languages.wren["string-literal"] = {
    pattern: /(^|[^\\"])"(?:[^\\"%]|\\[\s\S]|%(?!\()|%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\))*"/,
    lookbehind: true,
    greedy: true,
    inside: {
      interpolation: {
        pattern: /((?:^|[^\\])(?:\\{2})*)%\((?:[^()]|\((?:[^()]|\([^)]*\))*\))*\)/,
        lookbehind: true,
        inside: {
          expression: {
            pattern: /^(%\()[\s\S]+(?=\)$)/,
            lookbehind: true,
            inside: Prism2.languages.wren
          },
          "interpolation-punctuation": {
            pattern: /^%\(|\)$/,
            alias: "punctuation"
          }
        }
      },
      string: /[\s\S]+/
    }
  };
}
var xeora_1 = xeora;
xeora.displayName = "xeora";
xeora.aliases = ["xeoracube"];
function xeora(Prism2) {
  (function(Prism3) {
    Prism3.languages.xeora = Prism3.languages.extend("markup", {
      constant: {
        pattern: /\$(?:DomainContents|PageRenderDuration)\$/,
        inside: {
          punctuation: {
            pattern: /\$/
          }
        }
      },
      variable: {
        pattern: /\$@?(?:#+|[-+*~=^])?[\w.]+\$/,
        inside: {
          punctuation: {
            pattern: /[$.]/
          },
          operator: {
            pattern: /#+|[-+*~=^@]/
          }
        }
      },
      "function-inline": {
        pattern: /\$F:[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\$/,
        inside: {
          variable: {
            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\w.]+/,
            inside: {
              punctuation: {
                pattern: /[,.|]/
              },
              operator: {
                pattern: /#+|[-+*~=^@]/
              }
            }
          },
          punctuation: {
            pattern: /\$\w:|[$:?.,|]/
          }
        },
        alias: "function"
      },
      "function-block": {
        pattern: /\$XF:\{[-\w.]+\?[-\w.]+(?:,(?:(?:@[-#]*\w+\.[\w+.]\.*)*\|)*(?:(?:[\w+]|[-#*.~^]+[\w+]|=\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\w+\.[\w+.]\.*)+(?:(?:[\w+]|[-#*~^][-#*.~^]*[\w+]|=\S)(?:[^$=]|=+[^=])*=*)?)?)?\}:XF\$/,
        inside: {
          punctuation: {
            pattern: /[$:{}?.,|]/
          }
        },
        alias: "function"
      },
      "directive-inline": {
        pattern: /\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\/\w.]+\$/,
        inside: {
          punctuation: {
            pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,
            inside: {
              tag: {
                pattern: /#\d/
              }
            }
          }
        },
        alias: "function"
      },
      "directive-block-open": {
        pattern: /\$\w+:\{|\$\w(?:#\d+\+?)?(?:\[[-\w.]+\])?:[-\w.]+:\{(?:![A-Z]+)?/,
        inside: {
          punctuation: {
            pattern: /\$(?:\w:|C(?:\[|#\d))?|[:{[\]]/,
            inside: {
              tag: {
                pattern: /#\d/
              }
            }
          },
          attribute: {
            pattern: /![A-Z]+$/,
            inside: {
              punctuation: {
                pattern: /!/
              }
            },
            alias: "keyword"
          }
        },
        alias: "function"
      },
      "directive-block-separator": {
        pattern: /\}:[-\w.]+:\{/,
        inside: {
          punctuation: {
            pattern: /[:{}]/
          }
        },
        alias: "function"
      },
      "directive-block-close": {
        pattern: /\}:[-\w.]+\$/,
        inside: {
          punctuation: {
            pattern: /[:{}$]/
          }
        },
        alias: "function"
      }
    });
    Prism3.languages.insertBefore("inside", "punctuation", {
      variable: Prism3.languages.xeora["function-inline"].inside["variable"]
    }, Prism3.languages.xeora["function-block"]);
    Prism3.languages.xeoracube = Prism3.languages.xeora;
  })(Prism2);
}
var xmlDoc_1 = xmlDoc;
xmlDoc.displayName = "xmlDoc";
xmlDoc.aliases = [];
function xmlDoc(Prism2) {
  (function(Prism3) {
    function insertDocComment(lang, docComment) {
      if (Prism3.languages[lang]) {
        Prism3.languages.insertBefore(lang, "comment", {
          "doc-comment": docComment
        });
      }
    }
    var tag = Prism3.languages.markup.tag;
    var slashDocComment = {
      pattern: /\/\/\/.*/,
      greedy: true,
      alias: "comment",
      inside: {
        tag
      }
    };
    var tickDocComment = {
      pattern: /'''.*/,
      greedy: true,
      alias: "comment",
      inside: {
        tag
      }
    };
    insertDocComment("csharp", slashDocComment);
    insertDocComment("fsharp", slashDocComment);
    insertDocComment("vbnet", tickDocComment);
  })(Prism2);
}
var xojo_1 = xojo;
xojo.displayName = "xojo";
xojo.aliases = [];
function xojo(Prism2) {
  Prism2.languages.xojo = {
    comment: {
      pattern: /(?:'|\/\/|Rem\b).+/i,
      greedy: true
    },
    string: {
      pattern: /"(?:""|[^"])*"/,
      greedy: true
    },
    number: [/(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:E[+-]?\d+)?/i, /&[bchou][a-z\d]+/i],
    directive: {
      pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\b/i,
      alias: "property"
    },
    keyword: /\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\b/i,
    operator: /<[=>]?|>=?|[+\-*\/\\^=]|\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\b/i,
    punctuation: /[.,;:()]/
  };
}
var xquery_1 = xquery;
xquery.displayName = "xquery";
xquery.aliases = [];
function xquery(Prism2) {
  (function(Prism3) {
    Prism3.languages.xquery = Prism3.languages.extend("markup", {
      "xquery-comment": {
        pattern: /\(:[\s\S]*?:\)/,
        greedy: true,
        alias: "comment"
      },
      string: {
        pattern: /(["'])(?:\1\1|(?!\1)[\s\S])*\1/,
        greedy: true
      },
      extension: {
        pattern: /\(#.+?#\)/,
        alias: "symbol"
      },
      variable: /\$[-\w:]+/,
      axis: {
        pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,
        lookbehind: true,
        alias: "operator"
      },
      "keyword-operator": {
        pattern: /(^|[^:-])\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\b(?=$|[^:-])/,
        lookbehind: true,
        alias: "operator"
      },
      keyword: {
        pattern: /(^|[^:-])\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\b(?=$|[^:-])/,
        lookbehind: true
      },
      function: /[\w-]+(?::[\w-]+)*(?=\s*\()/,
      "xquery-element": {
        pattern: /(element\s+)[\w-]+(?::[\w-]+)*/,
        lookbehind: true,
        alias: "tag"
      },
      "xquery-attribute": {
        pattern: /(attribute\s+)[\w-]+(?::[\w-]+)*/,
        lookbehind: true,
        alias: "attr-name"
      },
      builtin: {
        pattern: /(^|[^:-])\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\b(?=$|[^:-])/,
        lookbehind: true
      },
      number: /\b\d+(?:\.\d+)?(?:E[+-]?\d+)?/,
      operator: [
        /[+*=?|@]|\.\.?|:=|!=|<[=<]?|>[=>]?/,
        {
          pattern: /(\s)-(?=\s)/,
          lookbehind: true
        }
      ],
      punctuation: /[[\](){},;:/]/
    });
    Prism3.languages.xquery.tag.pattern = /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/;
    Prism3.languages.xquery["tag"].inside["attr-value"].pattern = /=(?:("|')(?:\\[\s\S]|\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}|(?!\1)[^\\])*\1|[^\s'">=]+)/;
    Prism3.languages.xquery["tag"].inside["attr-value"].inside["punctuation"] = /^="|"$/;
    Prism3.languages.xquery["tag"].inside["attr-value"].inside["expression"] = {
      pattern: /\{(?!\{)(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])+\}/,
      inside: Prism3.languages.xquery,
      alias: "language-xquery"
    };
    var stringifyToken = function(token2) {
      if (typeof token2 === "string") {
        return token2;
      }
      if (typeof token2.content === "string") {
        return token2.content;
      }
      return token2.content.map(stringifyToken).join("");
    };
    var walkTokens = function(tokens) {
      var openedTags = [];
      for (var i2 = 0; i2 < tokens.length; i2++) {
        var token2 = tokens[i2];
        var notTagNorBrace = false;
        if (typeof token2 !== "string") {
          if (token2.type === "tag" && token2.content[0] && token2.content[0].type === "tag") {
            if (token2.content[0].content[0].content === "</") {
              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token2.content[0].content[1])) {
                openedTags.pop();
              }
            } else {
              if (token2.content[token2.content.length - 1].content === "/>")
                ;
              else {
                openedTags.push({
                  tagName: stringifyToken(token2.content[0].content[1]),
                  openedBraces: 0
                });
              }
            }
          } else if (openedTags.length > 0 && token2.type === "punctuation" && token2.content === "{" && (!tokens[i2 + 1] || tokens[i2 + 1].type !== "punctuation" || tokens[i2 + 1].content !== "{") && (!tokens[i2 - 1] || tokens[i2 - 1].type !== "plain-text" || tokens[i2 - 1].content !== "{")) {
            openedTags[openedTags.length - 1].openedBraces++;
          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token2.type === "punctuation" && token2.content === "}") {
            openedTags[openedTags.length - 1].openedBraces--;
          } else if (token2.type !== "comment") {
            notTagNorBrace = true;
          }
        }
        if (notTagNorBrace || typeof token2 === "string") {
          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
            var plainText = stringifyToken(token2);
            if (i2 < tokens.length - 1 && (typeof tokens[i2 + 1] === "string" || tokens[i2 + 1].type === "plain-text")) {
              plainText += stringifyToken(tokens[i2 + 1]);
              tokens.splice(i2 + 1, 1);
            }
            if (i2 > 0 && (typeof tokens[i2 - 1] === "string" || tokens[i2 - 1].type === "plain-text")) {
              plainText = stringifyToken(tokens[i2 - 1]) + plainText;
              tokens.splice(i2 - 1, 1);
              i2--;
            }
            if (/^\s+$/.test(plainText)) {
              tokens[i2] = plainText;
            } else {
              tokens[i2] = new Prism3.Token("plain-text", plainText, null, plainText);
            }
          }
        }
        if (token2.content && typeof token2.content !== "string") {
          walkTokens(token2.content);
        }
      }
    };
    Prism3.hooks.add("after-tokenize", function(env) {
      if (env.language !== "xquery") {
        return;
      }
      walkTokens(env.tokens);
    });
  })(Prism2);
}
var yang_1 = yang;
yang.displayName = "yang";
yang.aliases = [];
function yang(Prism2) {
  Prism2.languages.yang = {
    comment: /\/\*[\s\S]*?\*\/|\/\/.*/,
    string: {
      pattern: /"(?:[^\\"]|\\.)*"|'[^']*'/,
      greedy: true
    },
    keyword: {
      pattern: /(^|[{};\r\n][ \t]*)[a-z_][\w.-]*/i,
      lookbehind: true
    },
    namespace: {
      pattern: /(\s)[a-z_][\w.-]*(?=:)/i,
      lookbehind: true
    },
    boolean: /\b(?:false|true)\b/,
    operator: /\+/,
    punctuation: /[{};:]/
  };
}
var zig_1 = zig;
zig.displayName = "zig";
zig.aliases = [];
function zig(Prism2) {
  (function(Prism3) {
    function literal(str2) {
      return function() {
        return str2;
      };
    }
    var keyword = /\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\b/;
    var IDENTIFIER = "\\b(?!" + keyword.source + ")(?!\\d)\\w+\\b";
    var ALIGN = /align\s*\((?:[^()]|\([^()]*\))*\)/.source;
    var PREFIX_TYPE_OP = /(?:\?|\bpromise->|(?:\[[^[\]]*\]|\*(?!\*)|\*\*)(?:\s*<ALIGN>|\s*const\b|\s*volatile\b|\s*allowzero\b)*)/.source.replace(/<ALIGN>/g, literal(ALIGN));
    var SUFFIX_EXPR = /(?:\bpromise\b|(?:\berror\.)?<ID>(?:\.<ID>)*(?!\s+<ID>))/.source.replace(/<ID>/g, literal(IDENTIFIER));
    var TYPE = "(?!\\s)(?:!?\\s*(?:" + PREFIX_TYPE_OP + "\\s*)*" + SUFFIX_EXPR + ")+";
    Prism3.languages.zig = {
      comment: [
        {
          pattern: /\/\/[/!].*/,
          alias: "doc-comment"
        },
        /\/{2}.*/
      ],
      string: [
        {
          pattern: /(^|[^\\@])c?"(?:[^"\\\r\n]|\\.)*"/,
          lookbehind: true,
          greedy: true
        },
        {
          pattern: /([\r\n])([ \t]+c?\\{2}).*(?:(?:\r\n?|\n)\2.*)*/,
          lookbehind: true,
          greedy: true
        }
      ],
      char: {
        pattern: /(^|[^\\])'(?:[^'\\\r\n]|[\uD800-\uDFFF]{2}|\\(?:.|x[a-fA-F\d]{2}|u\{[a-fA-F\d]{1,6}\}))'/,
        lookbehind: true,
        greedy: true
      },
      builtin: /\B@(?!\d)\w+(?=\s*\()/,
      label: {
        pattern: /(\b(?:break|continue)\s*:\s*)\w+\b|\b(?!\d)\w+\b(?=\s*:\s*(?:\{|while\b))/,
        lookbehind: true
      },
      "class-name": [
        /\b(?!\d)\w+(?=\s*=\s*(?:(?:extern|packed)\s+)?(?:enum|struct|union)\s*[({])/,
        {
          pattern: RegExp(/(:\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?[=;,)])|<TYPE>(?=\s*(?:<ALIGN>\s*)?\{)/.source.replace(/<TYPE>/g, literal(TYPE)).replace(/<ALIGN>/g, literal(ALIGN))),
          lookbehind: true,
          inside: null
        },
        {
          pattern: RegExp(/(\)\s*)<TYPE>(?=\s*(?:<ALIGN>\s*)?;)/.source.replace(/<TYPE>/g, literal(TYPE)).replace(/<ALIGN>/g, literal(ALIGN))),
          lookbehind: true,
          inside: null
        }
      ],
      "builtin-type": {
        pattern: /\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\b/,
        alias: "keyword"
      },
      keyword,
      function: /\b(?!\d)\w+(?=\s*\()/,
      number: /\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\d]+(?:\.[a-fA-F\d]*)?(?:[pP][+-]?[a-fA-F\d]+)?|\d+(?:\.\d*)?(?:[eE][+-]?\d+)?)\b/,
      boolean: /\b(?:false|true)\b/,
      operator: /\.[*?]|\.{2,3}|[-=]>|\*\*|\+\+|\|\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,
      punctuation: /[.:,;(){}[\]]/
    };
    Prism3.languages.zig["class-name"].forEach(function(obj) {
      if (obj.inside === null) {
        obj.inside = Prism3.languages.zig;
      }
    });
  })(Prism2);
}
var refractor = core;
var refractor_1 = refractor;
refractor.register(abap_1);
refractor.register(abnf_1);
refractor.register(actionscript_1);
refractor.register(ada_1);
refractor.register(agda_1);
refractor.register(al_1);
refractor.register(antlr4_1);
refractor.register(apacheconf_1);
refractor.register(apex_1);
refractor.register(apl_1);
refractor.register(applescript_1);
refractor.register(aql_1);
refractor.register(arduino_1);
refractor.register(arff_1);
refractor.register(asciidoc_1);
refractor.register(asm6502_1);
refractor.register(asmatmel_1);
refractor.register(aspnet_1);
refractor.register(autohotkey_1);
refractor.register(autoit_1);
refractor.register(avisynth_1);
refractor.register(avroIdl_1);
refractor.register(bash_1);
refractor.register(basic_1);
refractor.register(batch_1);
refractor.register(bbcode_1);
refractor.register(bicep_1);
refractor.register(birb_1);
refractor.register(bison_1);
refractor.register(bnf_1);
refractor.register(brainfuck_1);
refractor.register(brightscript_1);
refractor.register(bro_1);
refractor.register(bsl_1);
refractor.register(c_1);
refractor.register(cfscript_1);
refractor.register(chaiscript_1);
refractor.register(cil_1);
refractor.register(clojure_1);
refractor.register(cmake_1);
refractor.register(cobol_1);
refractor.register(coffeescript_1);
refractor.register(concurnas_1);
refractor.register(coq_1);
refractor.register(cpp_1);
refractor.register(crystal_1);
refractor.register(csharp_1);
refractor.register(cshtml_1);
refractor.register(csp_1);
refractor.register(cssExtras_1);
refractor.register(csv_1);
refractor.register(cypher_1);
refractor.register(d_1);
refractor.register(dart_1);
refractor.register(dataweave_1);
refractor.register(dax_1);
refractor.register(dhall_1);
refractor.register(diff_1);
refractor.register(django_1);
refractor.register(dnsZoneFile_1);
refractor.register(docker_1);
refractor.register(dot_1);
refractor.register(ebnf_1);
refractor.register(editorconfig_1);
refractor.register(eiffel_1);
refractor.register(ejs_1);
refractor.register(elixir_1);
refractor.register(elm_1);
refractor.register(erb_1);
refractor.register(erlang_1);
refractor.register(etlua_1);
refractor.register(excelFormula_1);
refractor.register(factor_1);
refractor.register(_false);
refractor.register(firestoreSecurityRules_1);
refractor.register(flow_1);
refractor.register(fortran_1);
refractor.register(fsharp_1);
refractor.register(ftl_1);
refractor.register(gap_1);
refractor.register(gcode_1);
refractor.register(gdscript_1);
refractor.register(gedcom_1);
refractor.register(gherkin_1);
refractor.register(git_1);
refractor.register(glsl_1);
refractor.register(gml_1);
refractor.register(gn_1);
refractor.register(goModule_1);
refractor.register(go_1);
refractor.register(graphql_1);
refractor.register(groovy_1);
refractor.register(haml_1);
refractor.register(handlebars_1);
refractor.register(haskell_1);
refractor.register(haxe_1);
refractor.register(hcl_1);
refractor.register(hlsl_1);
refractor.register(hoon_1);
refractor.register(hpkp_1);
refractor.register(hsts_1);
refractor.register(http_1);
refractor.register(ichigojam_1);
refractor.register(icon_1);
refractor.register(icuMessageFormat_1);
refractor.register(idris_1);
refractor.register(iecst_1);
refractor.register(ignore_1);
refractor.register(inform7_1);
refractor.register(ini_1);
refractor.register(io_1);
refractor.register(j_1);
refractor.register(java_1);
refractor.register(javadoc_1);
refractor.register(javadoclike_1);
refractor.register(javastacktrace_1);
refractor.register(jexl_1);
refractor.register(jolie_1);
refractor.register(jq_1);
refractor.register(jsExtras_1);
refractor.register(jsTemplates_1);
refractor.register(jsdoc_1);
refractor.register(json_1);
refractor.register(json5_1);
refractor.register(jsonp_1);
refractor.register(jsstacktrace_1);
refractor.register(jsx_1);
refractor.register(julia_1);
refractor.register(keepalived_1);
refractor.register(keyman_1);
refractor.register(kotlin_1);
refractor.register(kumir_1);
refractor.register(kusto_1);
refractor.register(latex_1);
refractor.register(latte_1);
refractor.register(less_1);
refractor.register(lilypond_1);
refractor.register(liquid_1);
refractor.register(lisp_1);
refractor.register(livescript_1);
refractor.register(llvm_1);
refractor.register(log_1);
refractor.register(lolcode_1);
refractor.register(lua_1);
refractor.register(magma_1);
refractor.register(makefile_1);
refractor.register(markdown_1);
refractor.register(markupTemplating_1);
refractor.register(matlab_1);
refractor.register(maxscript_1);
refractor.register(mel_1);
refractor.register(mermaid_1);
refractor.register(mizar_1);
refractor.register(mongodb_1);
refractor.register(monkey_1);
refractor.register(moonscript_1);
refractor.register(n1ql_1);
refractor.register(n4js_1);
refractor.register(nand2tetrisHdl_1);
refractor.register(naniscript_1);
refractor.register(nasm_1);
refractor.register(neon_1);
refractor.register(nevod_1);
refractor.register(nginx_1);
refractor.register(nim_1);
refractor.register(nix_1);
refractor.register(nsis_1);
refractor.register(objectivec_1);
refractor.register(ocaml_1);
refractor.register(opencl_1);
refractor.register(openqasm_1);
refractor.register(oz_1);
refractor.register(parigp_1);
refractor.register(parser_1);
refractor.register(pascal_1);
refractor.register(pascaligo_1);
refractor.register(pcaxis_1);
refractor.register(peoplecode_1);
refractor.register(perl_1);
refractor.register(phpExtras_1);
refractor.register(php_1);
refractor.register(phpdoc_1);
refractor.register(plsql_1);
refractor.register(powerquery_1);
refractor.register(powershell_1);
refractor.register(processing_1);
refractor.register(prolog_1);
refractor.register(promql_1);
refractor.register(properties_1);
refractor.register(protobuf_1);
refractor.register(psl_1);
refractor.register(pug_1);
refractor.register(puppet_1);
refractor.register(pure_1);
refractor.register(purebasic_1);
refractor.register(purescript_1);
refractor.register(python_1);
refractor.register(q_1);
refractor.register(qml_1);
refractor.register(qore_1);
refractor.register(qsharp_1);
refractor.register(r_1);
refractor.register(racket_1);
refractor.register(reason_1);
refractor.register(regex_1);
refractor.register(rego_1);
refractor.register(renpy_1);
refractor.register(rest_1);
refractor.register(rip_1);
refractor.register(roboconf_1);
refractor.register(robotframework_1);
refractor.register(ruby_1);
refractor.register(rust_1);
refractor.register(sas_1);
refractor.register(sass_1);
refractor.register(scala_1);
refractor.register(scheme_1);
refractor.register(scss_1);
refractor.register(shellSession_1);
refractor.register(smali_1);
refractor.register(smalltalk_1);
refractor.register(smarty_1);
refractor.register(sml_1);
refractor.register(solidity_1);
refractor.register(solutionFile_1);
refractor.register(soy_1);
refractor.register(sparql_1);
refractor.register(splunkSpl_1);
refractor.register(sqf_1);
refractor.register(sql_1);
refractor.register(squirrel_1);
refractor.register(stan_1);
refractor.register(stylus_1);
refractor.register(swift_1);
refractor.register(systemd_1);
refractor.register(t4Cs_1);
refractor.register(t4Templating_1);
refractor.register(t4Vb_1);
refractor.register(tap_1);
refractor.register(tcl_1);
refractor.register(textile_1);
refractor.register(toml_1);
refractor.register(tremor_1);
refractor.register(tsx_1);
refractor.register(tt2_1);
refractor.register(turtle_1);
refractor.register(twig_1);
refractor.register(typescript_1);
refractor.register(typoscript_1);
refractor.register(unrealscript_1);
refractor.register(uorazor_1);
refractor.register(uri_1);
refractor.register(v_1);
refractor.register(vala_1);
refractor.register(vbnet_1);
refractor.register(velocity_1);
refractor.register(verilog_1);
refractor.register(vhdl_1);
refractor.register(vim_1);
refractor.register(visualBasic_1);
refractor.register(warpscript_1);
refractor.register(wasm_1);
refractor.register(webIdl_1);
refractor.register(wiki_1);
refractor.register(wolfram_1);
refractor.register(wren_1);
refractor.register(xeora_1);
refractor.register(xmlDoc_1);
refractor.register(xojo_1);
refractor.register(xquery_1);
refractor.register(yaml_1);
refractor.register(yang_1);
refractor.register(zig_1);
var highlighter = highlight$1(refractor_1, defaultStyle);
highlighter.supportedLanguages = supportedLanguages;
var SyntaxHighlighter = highlighter;
var style = {
  'code[class*="language-"]': {
    "fontFamily": 'Consolas, Menlo, Monaco, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", "Courier New", Courier, monospace',
    "fontSize": "14px",
    "lineHeight": "1.375",
    "direction": "ltr",
    "textAlign": "left",
    "whiteSpace": "pre",
    "wordSpacing": "normal",
    "wordBreak": "normal",
    "MozTabSize": "4",
    "OTabSize": "4",
    "tabSize": "4",
    "WebkitHyphens": "none",
    "MozHyphens": "none",
    "msHyphens": "none",
    "hyphens": "none",
    "background": "#2a2734",
    "color": "#9a86fd"
  },
  'pre[class*="language-"]': {
    "fontFamily": 'Consolas, Menlo, Monaco, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", "Courier New", Courier, monospace',
    "fontSize": "14px",
    "lineHeight": "1.375",
    "direction": "ltr",
    "textAlign": "left",
    "whiteSpace": "pre",
    "wordSpacing": "normal",
    "wordBreak": "normal",
    "MozTabSize": "4",
    "OTabSize": "4",
    "tabSize": "4",
    "WebkitHyphens": "none",
    "MozHyphens": "none",
    "msHyphens": "none",
    "hyphens": "none",
    "background": "#2a2734",
    "color": "#9a86fd",
    "padding": "1em",
    "margin": ".5em 0",
    "overflow": "auto"
  },
  'pre > code[class*="language-"]': {
    "fontSize": "1em"
  },
  'pre[class*="language-"]::-moz-selection': {
    "textShadow": "none",
    "background": "#6a51e6"
  },
  'pre[class*="language-"] ::-moz-selection': {
    "textShadow": "none",
    "background": "#6a51e6"
  },
  'code[class*="language-"]::-moz-selection': {
    "textShadow": "none",
    "background": "#6a51e6"
  },
  'code[class*="language-"] ::-moz-selection': {
    "textShadow": "none",
    "background": "#6a51e6"
  },
  'pre[class*="language-"]::selection': {
    "textShadow": "none",
    "background": "#6a51e6"
  },
  'pre[class*="language-"] ::selection': {
    "textShadow": "none",
    "background": "#6a51e6"
  },
  'code[class*="language-"]::selection': {
    "textShadow": "none",
    "background": "#6a51e6"
  },
  'code[class*="language-"] ::selection': {
    "textShadow": "none",
    "background": "#6a51e6"
  },
  ':not(pre) > code[class*="language-"]': {
    "padding": ".1em",
    "borderRadius": ".3em"
  },
  "comment": {
    "color": "#6c6783"
  },
  "prolog": {
    "color": "#6c6783"
  },
  "doctype": {
    "color": "#6c6783"
  },
  "cdata": {
    "color": "#6c6783"
  },
  "punctuation": {
    "color": "#6c6783"
  },
  "namespace": {
    "Opacity": ".7"
  },
  "tag": {
    "color": "#e09142"
  },
  "operator": {
    "color": "#e09142"
  },
  "number": {
    "color": "#e09142"
  },
  "property": {
    "color": "#9a86fd"
  },
  "function": {
    "color": "#9a86fd"
  },
  "tag-id": {
    "color": "#eeebff"
  },
  "selector": {
    "color": "#eeebff"
  },
  "atrule-id": {
    "color": "#eeebff"
  },
  "code.language-javascript": {
    "color": "#c4b9fe"
  },
  "attr-name": {
    "color": "#c4b9fe"
  },
  "code.language-css": {
    "color": "#ffcc99"
  },
  "code.language-scss": {
    "color": "#ffcc99"
  },
  "boolean": {
    "color": "#ffcc99"
  },
  "string": {
    "color": "#ffcc99"
  },
  "entity": {
    "color": "#ffcc99",
    "cursor": "help"
  },
  "url": {
    "color": "#ffcc99"
  },
  ".language-css .token.string": {
    "color": "#ffcc99"
  },
  ".language-scss .token.string": {
    "color": "#ffcc99"
  },
  ".style .token.string": {
    "color": "#ffcc99"
  },
  "attr-value": {
    "color": "#ffcc99"
  },
  "keyword": {
    "color": "#ffcc99"
  },
  "control": {
    "color": "#ffcc99"
  },
  "directive": {
    "color": "#ffcc99"
  },
  "unit": {
    "color": "#ffcc99"
  },
  "statement": {
    "color": "#ffcc99"
  },
  "regex": {
    "color": "#ffcc99"
  },
  "atrule": {
    "color": "#ffcc99"
  },
  "placeholder": {
    "color": "#ffcc99"
  },
  "variable": {
    "color": "#ffcc99"
  },
  "deleted": {
    "textDecoration": "line-through"
  },
  "inserted": {
    "borderBottom": "1px dotted #eeebff",
    "textDecoration": "none"
  },
  "italic": {
    "fontStyle": "italic"
  },
  "important": {
    "fontWeight": "bold",
    "color": "#c4b9fe"
  },
  "bold": {
    "fontWeight": "bold"
  },
  "pre > code.highlight": {
    "Outline": ".4em solid #8a75f5",
    "OutlineOffset": ".4em"
  },
  ".line-numbers.line-numbers .line-numbers-rows": {
    "borderRightColor": "#2c2937"
  },
  ".line-numbers .line-numbers-rows > span:before": {
    "color": "#3c3949"
  },
  ".line-highlight.line-highlight": {
    "background": "linear-gradient(to right, rgba(224, 145, 66, 0.2) 70%, rgba(224, 145, 66, 0))"
  }
};
const CodeBlock = memo((_Vc) => {
  var _Wc = _Vc, {
    alignment = {},
    borderRadius = {},
    lineHeight = Sizes.Default,
    textSize = TextSize.Default,
    value: value2
  } = _Wc, props = __objRest(_Wc, [
    "alignment",
    "borderRadius",
    "lineHeight",
    "textSize",
    "value"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadProps(__spreadValues({
    alignment: __spreadValues({
      overflow: Overflow.Hidden
    }, alignment),
    borderRadius: __spreadValues({
      all: Amount.Least
    }, borderRadius),
    shadow: DepthShadow.Low
  }, props), {
    children: /* @__PURE__ */ jsx$2(SyntaxHighlighter, {
      customStyle: {
        fontSize: textSize,
        borderRadius: "inherit",
        margin: 0
      },
      language: "tsx",
      showLineNumbers: true,
      style,
      children: value2
    })
  }));
});
const LineBreak = memo((_Xc) => {
  var _Yc = _Xc, {
    className = "",
    size = {
      height: Sizes.Default
    }
  } = _Yc, props = __objRest(_Yc, [
    "className",
    "size"
  ]);
  return /* @__PURE__ */ jsx$2(Container$8, __spreadValues({
    className: `${className} link-break`,
    size
  }, props));
});
const LogoutButton = memo((_Zc) => {
  var __c = _Zc, {
    icon: icon2,
    onLogoutSuccess,
    label,
    showArrow = false,
    textColor = TextColors.Error
  } = __c, props = __objRest(__c, [
    "icon",
    "onLogoutSuccess",
    "label",
    "showArrow",
    "textColor"
  ]);
  const dispatch = useDispatch();
  const loggedIn = useSelector((state) => state.authentication.loggedIn);
  useEffect(() => {
    if (!loggedIn && onLogoutSuccess)
      onLogoutSuccess();
  }, [loggedIn]);
  return /* @__PURE__ */ jsxs$1(Button$1, __spreadProps(__spreadValues({
    events: {
      mouse: {
        onClick: () => dispatch(logout())
      }
    }
  }, props), {
    children: [icon2 && /* @__PURE__ */ jsx$2(Icon, __spreadValues({}, icon2)), /* @__PURE__ */ jsx$2(Label, {
      textColor,
      textSize: TextSize.Small,
      children: label != null ? label : "Logout"
    }), showArrow && /* @__PURE__ */ jsx$2(Icon, {
      color: textColor,
      name: BasicIcons.ChevronRight
    })]
  }));
});
function useAuthentication({
  enabled = true,
  redirect = true
}) {
  var _a2, _b, _c, _d;
  const [loginRequired, setLoginRequired] = useState(true);
  const location = useLocation();
  const navigate = useNavigate();
  const inProgress = useSelector((state) => state.user.authentication.login.inProgress);
  const loggedIn = useSelector((state) => state.user.authentication.state.loggedIn);
  const routes = useSelector((state) => state.app.routes.list);
  const indexPagePath = (_b = (_a2 = routes.find((r2) => r2.role === Q$1.Index)) == null ? void 0 : _a2.path) != null ? _b : "/";
  const loginPagePath = (_d = (_c = routes.find((r2) => r2.role === Q$1.Login)) == null ? void 0 : _c.path) != null ? _d : "login";
  const checkAuth = () => {
    routes.forEach((route) => {
      var _a3, _b2, _c2;
      const routePath = (_a3 = route == null ? void 0 : route.path) != null ? _a3 : "";
      const match2 = matchPath((_b2 = route == null ? void 0 : route.path) != null ? _b2 : "", location.pathname);
      if (match2) {
        setLoginRequired((_c2 = route == null ? void 0 : route.loginRequired) != null ? _c2 : false);
      }
      if (loginPagePath && match2 && routePath === loginPagePath && loggedIn && !inProgress && redirect) {
        navigate(indexPagePath);
      } else if (loginPagePath && routePath !== loginPagePath && match2 && route.loginRequired && !loggedIn && !inProgress && redirect) {
        navigate(loginPagePath);
      }
    });
  };
  useEffect(() => {
    if (enabled)
      checkAuth();
  }, [location.pathname]);
  useEffect(() => {
    if (enabled)
      checkAuth();
  }, [loggedIn]);
  useEffect(() => {
    if (enabled)
      checkAuth();
  }, [inProgress]);
  useEffect(() => {
    if (enabled)
      checkAuth();
  }, []);
  return {
    inProgress,
    loggedIn,
    loginRequired
  };
}
function getSmallerAmount(amount) {
  switch (amount) {
    case Amount.All:
      return Amount.Most;
    case Amount.Most:
      return Amount.More;
    case Amount.More:
      return Amount.Default;
    case Amount.Default:
      return Amount.Less;
    case Amount.Less:
      return Amount.Least;
    case Amount.Least:
      return Amount.None;
    case Amount.None:
      return Amount.None;
  }
}
function getLargerAmount(amount) {
  switch (amount) {
    case Amount.None:
      return Amount.Least;
    case Amount.Least:
      return Amount.Less;
    case Amount.Less:
      return Amount.Default;
    case Amount.Default:
      return Amount.More;
    case Amount.More:
      return Amount.Most;
    case Amount.Most:
      return Amount.All;
    case Amount.All:
      return Amount.All;
  }
}
function convertAmountToSize(amount) {
  switch (amount) {
    case Amount.None:
      return Sizes.Smallest;
    case Amount.Least:
      return Sizes.Smaller;
    case Amount.Less:
      return Sizes.Small;
    case Amount.Default:
      return Sizes.Default;
    case Amount.More:
      return Sizes.Large;
    case Amount.Most:
      return Sizes.Larger;
    case Amount.All:
      return Sizes.Largest;
  }
}
function convertSizeToAmount(size) {
  if (!size)
    return Amount.Default;
  switch (size) {
    case Sizes.Smallest:
      return Amount.None;
    case Sizes.Smaller:
      return Amount.Least;
    case Sizes.Small:
      return Amount.Less;
    case Sizes.Default:
      return Amount.Default;
    case Sizes.Large:
      return Amount.More;
    case Sizes.Larger:
      return Amount.Most;
    case Sizes.Largest:
      return Amount.All;
  }
}
function convertSizeToTextSize(size) {
  if (!size)
    return TextSize.Default;
  switch (size) {
    case Sizes.Smallest:
      return TextSize.Smallest;
    case Sizes.Smaller:
      return TextSize.Smaller;
    case Sizes.Small:
      return TextSize.Small;
    case Sizes.Default:
      return TextSize.Default;
    case Sizes.Large:
      return TextSize.Large;
    case Sizes.Larger:
      return TextSize.Larger;
    case Sizes.Largest:
      return TextSize.Largest;
  }
}
function getSmallerSize(size) {
  switch (size) {
    case Sizes.Smallest:
      return Sizes.Smallest;
    case Sizes.Smaller:
      return Sizes.Smallest;
    case Sizes.Small:
      return Sizes.Smaller;
    case Sizes.Default:
      return Sizes.Small;
    case Sizes.Large:
      return Sizes.Default;
    case Sizes.Larger:
      return Sizes.Large;
    case Sizes.Largest:
      return Sizes.Larger;
  }
}
function getLargerSize(size) {
  switch (size) {
    case Sizes.Smallest:
      return Sizes.Smaller;
    case Sizes.Smaller:
      return Sizes.Small;
    case Sizes.Small:
      return Sizes.Default;
    case Sizes.Default:
      return Sizes.Large;
    case Sizes.Large:
      return Sizes.Larger;
    case Sizes.Larger:
      return Sizes.Largest;
    case Sizes.Largest:
      return Sizes.Largest;
  }
}
async function init() {
  i18nIsoCountries.registerLocale(englishLanguage);
}
init();
export { ActivityFeed, AddPaymentMethodForm, AlignHorizontal, AlignVertical, Amount, Animations, AutoComplete, Backdrop, BackgroundColorShade, BackgroundColors, BackgroundSize, Badge, BooleanLabel, BorderColorShade, BorderColors, BorderStyle, BreadcrumbNavigation, Button$1 as Button, ButtonType, Card, Checkbox, CloseButton, CodeBlock, CodeVerificationForm, ColorInput, ColorLabel, Colors, ConnectionStatus, Container$8 as Container, ContrastColors, ConversationList, ConversationNavigation, CountryInput, CountryLabel, CurrencyAmountInput, CurrencyAmountLabel, CurrencyInput, Cursor, DataGrid, DataGridCell, DateInput, DateLabel, Depth, DepthShadow, DropdownInput, DropdownPanel, DynamicInput, EmailAddressInput, EmailAddressLabel, EntityEditor, EntityPanel, EntityPreview, ErrorLabel, ErrorNotification, Fill, ForegroundColorShade, ForegroundColors, ForgotPasswordForm, Form, FormActions, FormFields, Heading, HelperButton, HoverPanel, Icon, Image, ImageInput, InputHelper, InputLabel, InputRow, InputType, Label, LanguageInput, LanguageLabel, LineBreak, LinearGauge, Link, ListItem, LoadingOverlay, LoginForm, LogoutButton, LongTextInput, MarkdownEditor, MediaGrid, MediaPreview, Menu, MenuButton, Message$1 as Message, MessageComposer, MessagePreview, Modal, ModalHeader, MoreMenu, NavigationBar, NavigationLink, NavigationMenu, NotificationLabel, Notifications, NumberInput, NumberLabel, ObjectLink, ObjectPropertiesView, Orb, OrderedList, Orientation, Overflow, Page, PageLink, Paragraph, PasswordInput, PaymentMethodModal, PersonLabel, PhoneNumberInput, PhoneNumberLabel, PieChart, PositionBehavior, ProgressLabel, ProgressMeter, ProgressSpinner, ProgressivePaymentStatus, PropertyEditor, RadialChart, RadialGauge, RouterView, Scrollable, SearchInput, SignupForm, Sizes, SlidePanel, Small, Spacer, StaticTypeLabel, StreetAddressInput, SubTitle, SubscriptionModal, Svg, Tab, Tabs, TextAlign, TextColors, TextDecorationLine, TextDecorationStyle, TextInput, TextOverflow, TextSize, TextWeight, ThemeSelector, Title, TitleCard, ToggleInput, TransformOrigin, UniversalSearch, UnorderedList, UserLabel, UserMenu, VerificationCodeInput, Video, WebApplication, Workspace, convertAmountToSize, convertSizeToAmount, convertSizeToTextSize, getCSSMeasurementValue, getFormFieldsFromModel, getInputElementByFieldType, getLabelByFieldType, getLargerAmount, getLargerSize, getSmallerAmount, getSmallerSize, useAuthentication, useEntityEditor };
//# sourceMappingURL=index.js.map
